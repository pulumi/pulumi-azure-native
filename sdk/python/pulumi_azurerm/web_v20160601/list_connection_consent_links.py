# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListConnectionConsentLinksResult:
    """
    Collection of consent links
    """
    def __init__(__self__, value=None):
        if value and not isinstance(value, list):
            raise TypeError("Expected argument 'value' to be a list")
        __self__.value = value
        """
        Collection of resources
        """


class AwaitableListConnectionConsentLinksResult(ListConnectionConsentLinksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListConnectionConsentLinksResult(
            value=self.value)


def list_connection_consent_links(connection_name=None, parameters=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str connection_name: Connection name
    :param list parameters: Collection of resources
    :param str resource_group_name: The resource group

    The **parameters** object supports the following:

      * `object_id` (`str`) - AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
      * `parameter_name` (`str`) - Name of the parameter in the connection provider's OAuth settings
      * `redirect_url` (`str`) - Name of the parameter in the connection provider's OAuth settings
      * `tenant_id` (`str`) - The tenant id
    """
    __args__ = dict()
    __args__['connectionName'] = connection_name
    __args__['parameters'] = parameters
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:web/v20160601:listConnectionConsentLinks', __args__, opts=opts).value

    return AwaitableListConnectionConsentLinksResult(
        value=__ret__.get('value'))
