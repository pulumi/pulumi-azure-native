# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ApplicationGateway(pulumi.CustomResource):
    etag: pulumi.Output[str]
    """
    A unique read-only string that changes whenever the resource is updated.
    """
    location: pulumi.Output[str]
    """
    Resource location.
    """
    name: pulumi.Output[str]
    """
    Resource name.
    """
    properties: pulumi.Output[dict]
    """
    Properties of the application gateway.
      * `authentication_certificates` (`list`) - Authentication certificates of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the authentication certificate that is unique within an Application Gateway.
        * `properties` (`dict`) - Authentication certificates properties of an application gateway.
          * `data` (`str`) - Certificate public data.
          * `provisioning_state` (`str`) - Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        * `type` (`str`) - Type of the resource.

      * `autoscale_configuration` (`dict`) - Autoscale Configuration.
        * `bounds` (`dict`) - Autoscale bounds
          * `max` (`float`) - Upper bound on number of Application Gateway instances.
          * `min` (`float`) - Lower bound on number of Application Gateway instances.

      * `backend_address_pools` (`list`) - Backend address pool of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the backend address pool that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of Backend Address Pool of an application gateway.
          * `backend_addresses` (`list`) - Backend addresses
            * `fqdn` (`str`) - Fully qualified domain name (FQDN).
            * `ip_address` (`str`) - IP address

          * `backend_ip_configurations` (`list`) - Collection of references to IPs defined in network interfaces.
            * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`str`) - Resource ID.
            * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
            * `properties` (`dict`) - Network interface IP configuration properties.
              * `application_gateway_backend_address_pools` (`list`) - The reference of ApplicationGatewayBackendAddressPool resource.
              * `application_security_groups` (`list`) - Application security groups in which the IP configuration is included.
                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `location` (`str`) - Resource location.
                * `name` (`str`) - Resource name.
                * `properties` (`dict`) - Properties of the application security group.
                  * `provisioning_state` (`str`) - The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
                  * `resource_guid` (`str`) - The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.

                * `tags` (`dict`) - Resource tags.
                * `type` (`str`) - Resource type.

              * `load_balancer_backend_address_pools` (`list`) - The reference of LoadBalancerBackendAddressPool resource.
                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `name` (`str`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
                * `properties` (`dict`) - Properties of load balancer backend address pool.
                  * `backend_ip_configurations` (`list`) - Gets collection of references to IP addresses defined in network interfaces.
                  * `load_balancing_rules` (`list`) - Gets load balancing rules that use this backend address pool.
                    * `id` (`str`) - Resource ID.

                  * `outbound_rule` (`dict`) - Gets outbound rules that use this backend address pool.
                  * `outbound_rules` (`list`) - Gets outbound rules that use this backend address pool.
                  * `provisioning_state` (`str`) - Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

              * `load_balancer_inbound_nat_rules` (`list`) - A list of references of LoadBalancerInboundNatRules.
                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `name` (`str`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
                * `properties` (`dict`) - Properties of load balancer inbound nat rule.
                  * `backend_ip_configuration` (`dict`) - A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
                  * `backend_port` (`float`) - The port used for the internal endpoint. Acceptable values range from 1 to 65535.
                  * `enable_floating_ip` (`bool`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
                  * `enable_tcp_reset` (`bool`) - Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
                  * `frontend_ip_configuration` (`dict`) - A reference to frontend IP addresses.
                  * `frontend_port` (`float`) - The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
                  * `idle_timeout_in_minutes` (`float`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
                  * `protocol` (`str`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
                  * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

              * `primary` (`bool`) - Gets whether this is a primary customer address on the network interface.
              * `private_ip_address` (`str`) - Private IP address of the IP configuration.
              * `private_ip_address_version` (`str`) - Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
              * `private_ip_allocation_method` (`str`) - Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
              * `provisioning_state` (`str`) - The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `public_ip_address` (`dict`) - Public IP address bound to the IP configuration.
                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `location` (`str`) - Resource location.
                * `name` (`str`) - Resource name.
                * `properties` (`dict`) - Public IP address properties.
                  * `dns_settings` (`dict`) - The FQDN of the DNS record associated with the public IP address.
                    * `domain_name_label` (`str`) - Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
                    * `fqdn` (`str`) - Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
                    * `reverse_fqdn` (`str`) - Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. 

                  * `idle_timeout_in_minutes` (`float`) - The idle timeout of the public IP address.
                  * `ip_address` (`str`) - The IP address associated with the public IP address resource.
                  * `ip_configuration` (`dict`) - The IP configuration associated with the public IP address.
                    * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                    * `id` (`str`) - Resource ID.
                    * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                    * `properties` (`dict`) - Properties of the IP configuration
                      * `private_ip_address` (`str`) - The private IP address of the IP configuration.
                      * `private_ip_allocation_method` (`str`) - The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
                      * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                      * `public_ip_address` (`dict`) - The reference of the public IP resource.
                      * `subnet` (`dict`) - The reference of the subnet resource.
                        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                        * `id` (`str`) - Resource ID.
                        * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                        * `properties` (`dict`) - Properties of the subnet.
                          * `address_prefix` (`str`) - The address prefix for the subnet.
                          * `ip_configurations` (`list`) - Gets an array of references to the network interface IP configurations using subnet.
                          * `network_security_group` (`dict`) - The reference of the NetworkSecurityGroup resource.
                            * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                            * `id` (`str`) - Resource ID.
                            * `location` (`str`) - Resource location.
                            * `name` (`str`) - Resource name.
                            * `properties` (`dict`) - Properties of the network security group
                              * `default_security_rules` (`list`) - The default security rules of network security group.
                                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                                * `id` (`str`) - Resource ID.
                                * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                                * `properties` (`dict`) - Properties of the security rule
                                  * `access` (`str`) - The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
                                  * `description` (`str`) - A description for this rule. Restricted to 140 chars.
                                  * `destination_address_prefix` (`str`) - The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                                  * `destination_address_prefixes` (`list`) - The destination address prefixes. CIDR or destination IP ranges.
                                  * `destination_application_security_groups` (`list`) - The application security group specified as destination.
                                  * `destination_port_range` (`str`) - The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                                  * `destination_port_ranges` (`list`) - The destination port ranges.
                                  * `direction` (`str`) - The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
                                  * `priority` (`float`) - The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
                                  * `protocol` (`str`) - Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
                                  * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                                  * `source_address_prefix` (`str`) - The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
                                  * `source_address_prefixes` (`list`) - The CIDR or source IP ranges.
                                  * `source_application_security_groups` (`list`) - The application security group specified as source.
                                  * `source_port_range` (`str`) - The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                                  * `source_port_ranges` (`list`) - The source port ranges.

                              * `network_interfaces` (`list`) - A collection of references to network interfaces.
                                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                                * `id` (`str`) - Resource ID.
                                * `location` (`str`) - Resource location.
                                * `name` (`str`) - Resource name.
                                * `properties` (`dict`) - Properties of the network interface.
                                  * `dns_settings` (`dict`) - The DNS settings in network interface.
                                    * `applied_dns_servers` (`list`) - If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
                                    * `dns_servers` (`list`) - List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
                                    * `internal_dns_name_label` (`str`) - Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
                                    * `internal_domain_name_suffix` (`str`) - Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
                                    * `internal_fqdn` (`str`) - Fully qualified DNS name supporting internal communications between VMs in the same virtual network.

                                  * `enable_accelerated_networking` (`bool`) - If the network interface is accelerated networking enabled.
                                  * `enable_ip_forwarding` (`bool`) - Indicates whether IP forwarding is enabled on this network interface.
                                  * `ip_configurations` (`list`) - A list of IPConfigurations of the network interface.
                                  * `mac_address` (`str`) - The MAC address of the network interface.
                                  * `network_security_group` (`dict`) - The reference of the NetworkSecurityGroup resource.
                                  * `primary` (`bool`) - Gets whether this is a primary network interface on a virtual machine.
                                  * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                                  * `resource_guid` (`str`) - The resource GUID property of the network interface resource.
                                  * `virtual_machine` (`dict`) - The reference of a virtual machine.

                                * `tags` (`dict`) - Resource tags.
                                * `type` (`str`) - Resource type.

                              * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                              * `resource_guid` (`str`) - The resource GUID property of the network security group resource.
                              * `security_rules` (`list`) - A collection of security rules of the network security group.
                              * `subnets` (`list`) - A collection of references to subnets.

                            * `tags` (`dict`) - Resource tags.
                            * `type` (`str`) - Resource type.

                          * `provisioning_state` (`str`) - The provisioning state of the resource.
                          * `resource_navigation_links` (`list`) - Gets an array of references to the external resources using subnet.
                            * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                            * `id` (`str`) - Resource ID.
                            * `name` (`str`) - Name of the resource that is unique within a resource group. This name can be used to access the resource.
                            * `properties` (`dict`) - Resource navigation link properties format.
                              * `link` (`str`) - Link to the external resource
                              * `linked_resource_type` (`str`) - Resource type of the linked resource.
                              * `provisioning_state` (`str`) - Provisioning state of the ResourceNavigationLink resource.

                          * `route_table` (`dict`) - The reference of the RouteTable resource.
                            * `etag` (`str`) - Gets a unique read-only string that changes whenever the resource is updated.
                            * `id` (`str`) - Resource ID.
                            * `location` (`str`) - Resource location.
                            * `name` (`str`) - Resource name.
                            * `properties` (`dict`) - Properties of the route table.
                              * `disable_bgp_route_propagation` (`bool`) - Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
                              * `provisioning_state` (`str`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                              * `routes` (`list`) - Collection of routes contained within a route table.
                                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                                * `id` (`str`) - Resource ID.
                                * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                                * `properties` (`dict`) - Properties of the route.
                                  * `address_prefix` (`str`) - The destination CIDR to which the route applies.
                                  * `next_hop_ip_address` (`str`) - The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
                                  * `next_hop_type` (`str`) - The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
                                  * `provisioning_state` (`str`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

                              * `subnets` (`list`) - A collection of references to subnets.

                            * `tags` (`dict`) - Resource tags.
                            * `type` (`str`) - Resource type.

                          * `service_endpoint_policies` (`list`) - An array of service endpoint policies.
                            * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                            * `id` (`str`) - Resource ID.
                            * `location` (`str`) - Resource location.
                            * `name` (`str`) - Resource name.
                            * `properties` (`dict`) - Properties of the service end point policy
                              * `provisioning_state` (`str`) - The provisioning state of the service endpoint policy. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                              * `resource_guid` (`str`) - The resource GUID property of the service endpoint policy resource.
                              * `service_endpoint_policy_definitions` (`list`) - A collection of service endpoint policy definitions of the service endpoint policy.
                                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                                * `id` (`str`) - Resource ID.
                                * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                                * `properties` (`dict`) - Properties of the service endpoint policy definition
                                  * `description` (`str`) - A description for this rule. Restricted to 140 chars.
                                  * `provisioning_state` (`str`) - The provisioning state of the service end point policy definition. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                                  * `service` (`str`) - service endpoint name.
                                  * `service_resources` (`list`) - A list of service resources.

                            * `tags` (`dict`) - Resource tags.
                            * `type` (`str`) - Resource type.

                          * `service_endpoints` (`list`) - An array of service endpoints.
                            * `locations` (`list`) - A list of locations.
                            * `provisioning_state` (`str`) - The provisioning state of the resource.
                            * `service` (`str`) - The type of the endpoint service.

                  * `ip_tags` (`list`) - The list of tags associated with the public IP address.
                    * `ip_tag_type` (`str`) - Gets or sets the ipTag type: Example FirstPartyUsage.
                    * `tag` (`str`) - Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc

                  * `provisioning_state` (`str`) - The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                  * `public_ip_address_version` (`str`) - The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
                  * `public_ip_allocation_method` (`str`) - The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
                  * `public_ip_prefix` (`dict`) - The Public IP Prefix this Public IP Address should be allocated from.
                  * `resource_guid` (`str`) - The resource GUID property of the public IP resource.

                * `sku` (`dict`) - The public IP address SKU.
                  * `name` (`str`) - Name of a public IP address SKU.

                * `tags` (`dict`) - Resource tags.
                * `type` (`str`) - Resource type.
                * `zones` (`list`) - A list of availability zones denoting the IP allocated for the resource needs to come from.

              * `subnet` (`dict`) - Subnet bound to the IP configuration.

          * `provisioning_state` (`str`) - Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        * `type` (`str`) - Type of the resource.

      * `backend_http_settings_collection` (`list`) - Backend http settings of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the backend http settings that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of Backend address pool settings of an application gateway.
          * `affinity_cookie_name` (`str`) - Cookie name to use for the affinity cookie.
          * `authentication_certificates` (`list`) - Array of references to application gateway authentication certificates.
          * `connection_draining` (`dict`) - Connection draining of the backend http settings resource.
            * `drain_timeout_in_sec` (`float`) - The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
            * `enabled` (`bool`) - Whether connection draining is enabled or not.

          * `cookie_based_affinity` (`str`) - Cookie based affinity.
          * `host_name` (`str`) - Host header to be sent to the backend servers.
          * `path` (`str`) - Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
          * `pick_host_name_from_backend_address` (`bool`) - Whether to pick host header should be picked from the host name of the backend server. Default value is false.
          * `port` (`float`) - The destination port on the backend.
          * `probe` (`dict`) - Probe resource of an application gateway.
          * `probe_enabled` (`bool`) - Whether the probe is enabled. Default value is false.
          * `protocol` (`str`) - The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
          * `provisioning_state` (`str`) - Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `request_timeout` (`float`) - Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.

        * `type` (`str`) - Type of the resource.

      * `enable_fips` (`bool`) - Whether FIPS is enabled on the application gateway resource.
      * `enable_http2` (`bool`) - Whether HTTP2 is enabled on the application gateway resource.
      * `frontend_ip_configurations` (`list`) - Frontend IP addresses of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the frontend IP configuration that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of Frontend IP configuration of an application gateway.
          * `private_ip_address` (`str`) - PrivateIPAddress of the network interface IP Configuration.
          * `private_ip_allocation_method` (`str`) - PrivateIP allocation method.
          * `provisioning_state` (`str`) - Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `public_ip_address` (`dict`) - Reference of the PublicIP resource.
          * `subnet` (`dict`) - Reference of the subnet resource.

        * `type` (`str`) - Type of the resource.

      * `frontend_ports` (`list`) - Frontend ports of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the frontend port that is unique within an Application Gateway
        * `properties` (`dict`) - Properties of Frontend port of an application gateway.
          * `port` (`float`) - Frontend port
          * `provisioning_state` (`str`) - Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        * `type` (`str`) - Type of the resource.

      * `gateway_ip_configurations` (`list`) - Subnets of application the gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the IP configuration that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of IP configuration of an application gateway.
          * `provisioning_state` (`str`) - Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `subnet` (`dict`) - Reference of the subnet resource. A subnet from where application gateway gets its private address.

        * `type` (`str`) - Type of the resource.

      * `http_listeners` (`list`) - Http listeners of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the HTTP listener that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of HTTP listener of an application gateway.
          * `frontend_ip_configuration` (`dict`) - Frontend IP configuration resource of an application gateway.
          * `frontend_port` (`dict`) - Frontend port resource of an application gateway.
          * `host_name` (`str`) - Host name of HTTP listener.
          * `protocol` (`str`) - Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
          * `provisioning_state` (`str`) - Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `require_server_name_indication` (`bool`) - Applicable only if protocol is https. Enables SNI for multi-hosting.
          * `ssl_certificate` (`dict`) - SSL certificate resource of an application gateway.

        * `type` (`str`) - Type of the resource.

      * `operational_state` (`str`) - Operational state of the application gateway resource.
      * `probes` (`list`) - Probes of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the probe that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of probe of an application gateway.
          * `host` (`str`) - Host name to send the probe to.
          * `interval` (`float`) - The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
          * `match` (`dict`) - Criterion for classifying a healthy probe response.
            * `body` (`str`) - Body that must be contained in the health response. Default value is empty.
            * `status_codes` (`list`) - Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.

          * `min_servers` (`float`) - Minimum number of servers that are always marked healthy. Default value is 0.
          * `path` (`str`) - Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
          * `pick_host_name_from_backend_http_settings` (`bool`) - Whether the host header should be picked from the backend http settings. Default value is false.
          * `protocol` (`str`) - The protocol used for the probe. Possible values are 'Http' and 'Https'.
          * `provisioning_state` (`str`) - Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `timeout` (`float`) - the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
          * `unhealthy_threshold` (`float`) - The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.

        * `type` (`str`) - Type of the resource.

      * `provisioning_state` (`str`) - Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
      * `redirect_configurations` (`list`) - Redirect configurations of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the redirect configuration that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of redirect configuration of the application gateway.
          * `include_path` (`bool`) - Include path in the redirected url.
          * `include_query_string` (`bool`) - Include query string in the redirected url.
          * `path_rules` (`list`) - Path rules specifying redirect configuration.
          * `redirect_type` (`str`) - Supported http redirection types - Permanent, Temporary, Found, SeeOther.
          * `request_routing_rules` (`list`) - Request routing specifying redirect configuration.
          * `target_listener` (`dict`) - Reference to a listener to redirect the request to.
          * `target_url` (`str`) - Url to redirect the request to.
          * `url_path_maps` (`list`) - Url path maps specifying default redirect configuration.

        * `type` (`str`) - Type of the resource.

      * `request_routing_rules` (`list`) - Request routing rules of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the request routing rule that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of request routing rule of the application gateway.
          * `backend_address_pool` (`dict`) - Backend address pool resource of the application gateway. 
          * `backend_http_settings` (`dict`) - Backend http settings resource of the application gateway.
          * `http_listener` (`dict`) - Http listener resource of the application gateway. 
          * `provisioning_state` (`str`) - Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `redirect_configuration` (`dict`) - Redirect configuration resource of the application gateway.
          * `rule_type` (`str`) - Rule type.
          * `url_path_map` (`dict`) - URL path map resource of the application gateway.

        * `type` (`str`) - Type of the resource.

      * `resource_guid` (`str`) - Resource GUID property of the application gateway resource.
      * `sku` (`dict`) - SKU of the application gateway resource.
        * `capacity` (`float`) - Capacity (instance count) of an application gateway.
        * `name` (`str`) - Name of an application gateway SKU.
        * `tier` (`str`) - Tier of an application gateway.

      * `ssl_certificates` (`list`) - SSL certificates of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the SSL certificate that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of SSL certificates of an application gateway.
          * `data` (`str`) - Base-64 encoded pfx certificate. Only applicable in PUT Request.
          * `password` (`str`) - Password for the pfx file specified in data. Only applicable in PUT request.
          * `provisioning_state` (`str`) - Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `public_cert_data` (`str`) - Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.

        * `type` (`str`) - Type of the resource.

      * `ssl_policy` (`dict`) - SSL policy of the application gateway resource.
        * `cipher_suites` (`list`) - Ssl cipher suites to be enabled in the specified order to application gateway.
        * `disabled_ssl_protocols` (`list`) - Ssl protocols to be disabled on application gateway.
        * `min_protocol_version` (`str`) - Minimum version of Ssl protocol to be supported on application gateway.
        * `policy_name` (`str`) - Name of Ssl predefined policy
        * `policy_type` (`str`) - Type of Ssl Policy

      * `url_path_maps` (`list`) - URL path map of the application gateway resource.
        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `name` (`str`) - Name of the URL path map that is unique within an Application Gateway.
        * `properties` (`dict`) - Properties of UrlPathMap of the application gateway.
          * `default_backend_address_pool` (`dict`) - Default backend address pool resource of URL path map.
          * `default_backend_http_settings` (`dict`) - Default backend http settings resource of URL path map.
          * `default_redirect_configuration` (`dict`) - Default redirect configuration resource of URL path map.
          * `path_rules` (`list`) - Path rule of URL path map resource.
            * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`str`) - Resource ID.
            * `name` (`str`) - Name of the path rule that is unique within an Application Gateway.
            * `properties` (`dict`) - Properties of path rule of an application gateway.
              * `backend_address_pool` (`dict`) - Backend address pool resource of URL path map path rule.
              * `backend_http_settings` (`dict`) - Backend http settings resource of URL path map path rule.
              * `paths` (`list`) - Path rules of URL path map.
              * `provisioning_state` (`str`) - Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `redirect_configuration` (`dict`) - Redirect configuration resource of URL path map path rule.

            * `type` (`str`) - Type of the resource.

          * `provisioning_state` (`str`) - Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        * `type` (`str`) - Type of the resource.

      * `web_application_firewall_configuration` (`dict`) - Web application firewall configuration.
        * `disabled_rule_groups` (`list`) - The disabled rule groups.
          * `rule_group_name` (`str`) - The name of the rule group that will be disabled.
          * `rules` (`list`) - The list of rules that will be disabled. If null, all rules of the rule group will be disabled.

        * `enabled` (`bool`) - Whether the web application firewall is enabled or not.
        * `firewall_mode` (`str`) - Web application firewall mode.
        * `max_request_body_size` (`float`) - Maximum request body size for WAF.
        * `request_body_check` (`bool`) - Whether allow WAF to check request Body.
        * `rule_set_type` (`str`) - The type of the web application firewall rule set. Possible values are: 'OWASP'.
        * `rule_set_version` (`str`) - The version of the rule set type.
    """
    tags: pulumi.Output[dict]
    """
    Resource tags.
    """
    type: pulumi.Output[str]
    """
    Resource type.
    """
    zones: pulumi.Output[list]
    """
    A list of availability zones denoting where the resource needs to come from.
    """
    def __init__(__self__, resource_name, opts=None, etag=None, id=None, location=None, name=None, properties=None, resource_group_name=None, tags=None, zones=None, __props__=None, __name__=None, __opts__=None):
        """
        Application gateway resource

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] etag: A unique read-only string that changes whenever the resource is updated.
        :param pulumi.Input[str] id: Resource ID.
        :param pulumi.Input[str] location: Resource location.
        :param pulumi.Input[str] name: The name of the application gateway.
        :param pulumi.Input[dict] properties: Properties of the application gateway.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[dict] tags: Resource tags.
        :param pulumi.Input[list] zones: A list of availability zones denoting where the resource needs to come from.

        The **properties** object supports the following:

          * `authentication_certificates` (`pulumi.Input[list]`) - Authentication certificates of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the authentication certificate that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Authentication certificates properties of an application gateway.
              * `data` (`pulumi.Input[str]`) - Certificate public data.
              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `autoscale_configuration` (`pulumi.Input[dict]`) - Autoscale Configuration.
            * `bounds` (`pulumi.Input[dict]`) - Autoscale bounds
              * `max` (`pulumi.Input[float]`) - Upper bound on number of Application Gateway instances.
              * `min` (`pulumi.Input[float]`) - Lower bound on number of Application Gateway instances.

          * `backend_address_pools` (`pulumi.Input[list]`) - Backend address pool of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the backend address pool that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of Backend Address Pool of an application gateway.
              * `backend_addresses` (`pulumi.Input[list]`) - Backend addresses
                * `fqdn` (`pulumi.Input[str]`) - Fully qualified domain name (FQDN).
                * `ip_address` (`pulumi.Input[str]`) - IP address

              * `backend_ip_configurations` (`pulumi.Input[list]`) - Collection of references to IPs defined in network interfaces.
                * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`pulumi.Input[str]`) - Resource ID.
                * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                * `properties` (`pulumi.Input[dict]`) - Network interface IP configuration properties.
                  * `application_gateway_backend_address_pools` (`pulumi.Input[list]`) - The reference of ApplicationGatewayBackendAddressPool resource.
                  * `application_security_groups` (`pulumi.Input[list]`) - Application security groups in which the IP configuration is included.
                    * `id` (`pulumi.Input[str]`) - Resource ID.
                    * `location` (`pulumi.Input[str]`) - Resource location.
                    * `properties` (`pulumi.Input[dict]`) - Properties of the application security group.
                    * `tags` (`pulumi.Input[dict]`) - Resource tags.

                  * `load_balancer_backend_address_pools` (`pulumi.Input[list]`) - The reference of LoadBalancerBackendAddressPool resource.
                    * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                    * `id` (`pulumi.Input[str]`) - Resource ID.
                    * `name` (`pulumi.Input[str]`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
                    * `properties` (`pulumi.Input[dict]`) - Properties of load balancer backend address pool.
                      * `provisioning_state` (`pulumi.Input[str]`) - Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

                  * `load_balancer_inbound_nat_rules` (`pulumi.Input[list]`) - A list of references of LoadBalancerInboundNatRules.
                    * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                    * `id` (`pulumi.Input[str]`) - Resource ID.
                    * `name` (`pulumi.Input[str]`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
                    * `properties` (`pulumi.Input[dict]`) - Properties of load balancer inbound nat rule.
                      * `backend_port` (`pulumi.Input[float]`) - The port used for the internal endpoint. Acceptable values range from 1 to 65535.
                      * `enable_floating_ip` (`pulumi.Input[bool]`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
                      * `enable_tcp_reset` (`pulumi.Input[bool]`) - Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
                      * `frontend_ip_configuration` (`pulumi.Input[dict]`) - A reference to frontend IP addresses.
                        * `id` (`pulumi.Input[str]`) - Resource ID.

                      * `frontend_port` (`pulumi.Input[float]`) - The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
                      * `idle_timeout_in_minutes` (`pulumi.Input[float]`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
                      * `protocol` (`pulumi.Input[str]`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
                      * `provisioning_state` (`pulumi.Input[str]`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

                  * `primary` (`pulumi.Input[bool]`) - Gets whether this is a primary customer address on the network interface.
                  * `private_ip_address` (`pulumi.Input[str]`) - Private IP address of the IP configuration.
                  * `private_ip_address_version` (`pulumi.Input[str]`) - Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
                  * `private_ip_allocation_method` (`pulumi.Input[str]`) - Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
                  * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                  * `public_ip_address` (`pulumi.Input[dict]`) - Public IP address bound to the IP configuration.
                    * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                    * `id` (`pulumi.Input[str]`) - Resource ID.
                    * `location` (`pulumi.Input[str]`) - Resource location.
                    * `properties` (`pulumi.Input[dict]`) - Public IP address properties.
                      * `dns_settings` (`pulumi.Input[dict]`) - The FQDN of the DNS record associated with the public IP address.
                        * `domain_name_label` (`pulumi.Input[str]`) - Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
                        * `fqdn` (`pulumi.Input[str]`) - Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
                        * `reverse_fqdn` (`pulumi.Input[str]`) - Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. 

                      * `idle_timeout_in_minutes` (`pulumi.Input[float]`) - The idle timeout of the public IP address.
                      * `ip_address` (`pulumi.Input[str]`) - The IP address associated with the public IP address resource.
                      * `ip_tags` (`pulumi.Input[list]`) - The list of tags associated with the public IP address.
                        * `ip_tag_type` (`pulumi.Input[str]`) - Gets or sets the ipTag type: Example FirstPartyUsage.
                        * `tag` (`pulumi.Input[str]`) - Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc

                      * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                      * `public_ip_address_version` (`pulumi.Input[str]`) - The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
                      * `public_ip_allocation_method` (`pulumi.Input[str]`) - The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
                      * `public_ip_prefix` (`pulumi.Input[dict]`) - The Public IP Prefix this Public IP Address should be allocated from.
                      * `resource_guid` (`pulumi.Input[str]`) - The resource GUID property of the public IP resource.

                    * `sku` (`pulumi.Input[dict]`) - The public IP address SKU.
                      * `name` (`pulumi.Input[str]`) - Name of a public IP address SKU.

                    * `tags` (`pulumi.Input[dict]`) - Resource tags.
                    * `zones` (`pulumi.Input[list]`) - A list of availability zones denoting the IP allocated for the resource needs to come from.

                  * `subnet` (`pulumi.Input[dict]`) - Subnet bound to the IP configuration.
                    * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                    * `id` (`pulumi.Input[str]`) - Resource ID.
                    * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                    * `properties` (`pulumi.Input[dict]`) - Properties of the subnet.
                      * `address_prefix` (`pulumi.Input[str]`) - The address prefix for the subnet.
                      * `network_security_group` (`pulumi.Input[dict]`) - The reference of the NetworkSecurityGroup resource.
                        * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                        * `id` (`pulumi.Input[str]`) - Resource ID.
                        * `location` (`pulumi.Input[str]`) - Resource location.
                        * `properties` (`pulumi.Input[dict]`) - Properties of the network security group
                          * `default_security_rules` (`pulumi.Input[list]`) - The default security rules of network security group.
                            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                            * `id` (`pulumi.Input[str]`) - Resource ID.
                            * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                            * `properties` (`pulumi.Input[dict]`) - Properties of the security rule
                              * `access` (`pulumi.Input[str]`) - The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
                              * `description` (`pulumi.Input[str]`) - A description for this rule. Restricted to 140 chars.
                              * `destination_address_prefix` (`pulumi.Input[str]`) - The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                              * `destination_address_prefixes` (`pulumi.Input[list]`) - The destination address prefixes. CIDR or destination IP ranges.
                              * `destination_application_security_groups` (`pulumi.Input[list]`) - The application security group specified as destination.
                              * `destination_port_range` (`pulumi.Input[str]`) - The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                              * `destination_port_ranges` (`pulumi.Input[list]`) - The destination port ranges.
                              * `direction` (`pulumi.Input[str]`) - The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
                              * `priority` (`pulumi.Input[float]`) - The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
                              * `protocol` (`pulumi.Input[str]`) - Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
                              * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                              * `source_address_prefix` (`pulumi.Input[str]`) - The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
                              * `source_address_prefixes` (`pulumi.Input[list]`) - The CIDR or source IP ranges.
                              * `source_application_security_groups` (`pulumi.Input[list]`) - The application security group specified as source.
                              * `source_port_range` (`pulumi.Input[str]`) - The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                              * `source_port_ranges` (`pulumi.Input[list]`) - The source port ranges.

                          * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                          * `resource_guid` (`pulumi.Input[str]`) - The resource GUID property of the network security group resource.
                          * `security_rules` (`pulumi.Input[list]`) - A collection of security rules of the network security group.

                        * `tags` (`pulumi.Input[dict]`) - Resource tags.

                      * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the resource.
                      * `resource_navigation_links` (`pulumi.Input[list]`) - Gets an array of references to the external resources using subnet.
                        * `id` (`pulumi.Input[str]`) - Resource ID.
                        * `name` (`pulumi.Input[str]`) - Name of the resource that is unique within a resource group. This name can be used to access the resource.
                        * `properties` (`pulumi.Input[dict]`) - Resource navigation link properties format.
                          * `link` (`pulumi.Input[str]`) - Link to the external resource
                          * `linked_resource_type` (`pulumi.Input[str]`) - Resource type of the linked resource.

                      * `route_table` (`pulumi.Input[dict]`) - The reference of the RouteTable resource.
                        * `etag` (`pulumi.Input[str]`) - Gets a unique read-only string that changes whenever the resource is updated.
                        * `id` (`pulumi.Input[str]`) - Resource ID.
                        * `location` (`pulumi.Input[str]`) - Resource location.
                        * `properties` (`pulumi.Input[dict]`) - Properties of the route table.
                          * `disable_bgp_route_propagation` (`pulumi.Input[bool]`) - Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
                          * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                          * `routes` (`pulumi.Input[list]`) - Collection of routes contained within a route table.
                            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                            * `id` (`pulumi.Input[str]`) - Resource ID.
                            * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                            * `properties` (`pulumi.Input[dict]`) - Properties of the route.
                              * `address_prefix` (`pulumi.Input[str]`) - The destination CIDR to which the route applies.
                              * `next_hop_ip_address` (`pulumi.Input[str]`) - The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
                              * `next_hop_type` (`pulumi.Input[str]`) - The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
                              * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

                        * `tags` (`pulumi.Input[dict]`) - Resource tags.

                      * `service_endpoint_policies` (`pulumi.Input[list]`) - An array of service endpoint policies.
                        * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                        * `id` (`pulumi.Input[str]`) - Resource ID.
                        * `location` (`pulumi.Input[str]`) - Resource location.
                        * `properties` (`pulumi.Input[dict]`) - Properties of the service end point policy
                          * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the service endpoint policy. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                          * `resource_guid` (`pulumi.Input[str]`) - The resource GUID property of the service endpoint policy resource.
                          * `service_endpoint_policy_definitions` (`pulumi.Input[list]`) - A collection of service endpoint policy definitions of the service endpoint policy.
                            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                            * `id` (`pulumi.Input[str]`) - Resource ID.
                            * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                            * `properties` (`pulumi.Input[dict]`) - Properties of the service endpoint policy definition
                              * `description` (`pulumi.Input[str]`) - A description for this rule. Restricted to 140 chars.
                              * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the service end point policy definition. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                              * `service` (`pulumi.Input[str]`) - service endpoint name.
                              * `service_resources` (`pulumi.Input[list]`) - A list of service resources.

                        * `tags` (`pulumi.Input[dict]`) - Resource tags.

                      * `service_endpoints` (`pulumi.Input[list]`) - An array of service endpoints.
                        * `locations` (`pulumi.Input[list]`) - A list of locations.
                        * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the resource.
                        * `service` (`pulumi.Input[str]`) - The type of the endpoint service.

              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `backend_http_settings_collection` (`pulumi.Input[list]`) - Backend http settings of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the backend http settings that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of Backend address pool settings of an application gateway.
              * `affinity_cookie_name` (`pulumi.Input[str]`) - Cookie name to use for the affinity cookie.
              * `authentication_certificates` (`pulumi.Input[list]`) - Array of references to application gateway authentication certificates.
              * `connection_draining` (`pulumi.Input[dict]`) - Connection draining of the backend http settings resource.
                * `drain_timeout_in_sec` (`pulumi.Input[float]`) - The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
                * `enabled` (`pulumi.Input[bool]`) - Whether connection draining is enabled or not.

              * `cookie_based_affinity` (`pulumi.Input[str]`) - Cookie based affinity.
              * `host_name` (`pulumi.Input[str]`) - Host header to be sent to the backend servers.
              * `path` (`pulumi.Input[str]`) - Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
              * `pick_host_name_from_backend_address` (`pulumi.Input[bool]`) - Whether to pick host header should be picked from the host name of the backend server. Default value is false.
              * `port` (`pulumi.Input[float]`) - The destination port on the backend.
              * `probe` (`pulumi.Input[dict]`) - Probe resource of an application gateway.
              * `probe_enabled` (`pulumi.Input[bool]`) - Whether the probe is enabled. Default value is false.
              * `protocol` (`pulumi.Input[str]`) - The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `request_timeout` (`pulumi.Input[float]`) - Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `enable_fips` (`pulumi.Input[bool]`) - Whether FIPS is enabled on the application gateway resource.
          * `enable_http2` (`pulumi.Input[bool]`) - Whether HTTP2 is enabled on the application gateway resource.
          * `frontend_ip_configurations` (`pulumi.Input[list]`) - Frontend IP addresses of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the frontend IP configuration that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of Frontend IP configuration of an application gateway.
              * `private_ip_address` (`pulumi.Input[str]`) - PrivateIPAddress of the network interface IP Configuration.
              * `private_ip_allocation_method` (`pulumi.Input[str]`) - PrivateIP allocation method.
              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `public_ip_address` (`pulumi.Input[dict]`) - Reference of the PublicIP resource.
              * `subnet` (`pulumi.Input[dict]`) - Reference of the subnet resource.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `frontend_ports` (`pulumi.Input[list]`) - Frontend ports of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the frontend port that is unique within an Application Gateway
            * `properties` (`pulumi.Input[dict]`) - Properties of Frontend port of an application gateway.
              * `port` (`pulumi.Input[float]`) - Frontend port
              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `gateway_ip_configurations` (`pulumi.Input[list]`) - Subnets of application the gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the IP configuration that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of IP configuration of an application gateway.
              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `subnet` (`pulumi.Input[dict]`) - Reference of the subnet resource. A subnet from where application gateway gets its private address.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `http_listeners` (`pulumi.Input[list]`) - Http listeners of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the HTTP listener that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of HTTP listener of an application gateway.
              * `frontend_ip_configuration` (`pulumi.Input[dict]`) - Frontend IP configuration resource of an application gateway.
              * `frontend_port` (`pulumi.Input[dict]`) - Frontend port resource of an application gateway.
              * `host_name` (`pulumi.Input[str]`) - Host name of HTTP listener.
              * `protocol` (`pulumi.Input[str]`) - Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `require_server_name_indication` (`pulumi.Input[bool]`) - Applicable only if protocol is https. Enables SNI for multi-hosting.
              * `ssl_certificate` (`pulumi.Input[dict]`) - SSL certificate resource of an application gateway.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `probes` (`pulumi.Input[list]`) - Probes of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the probe that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of probe of an application gateway.
              * `host` (`pulumi.Input[str]`) - Host name to send the probe to.
              * `interval` (`pulumi.Input[float]`) - The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
              * `match` (`pulumi.Input[dict]`) - Criterion for classifying a healthy probe response.
                * `body` (`pulumi.Input[str]`) - Body that must be contained in the health response. Default value is empty.
                * `status_codes` (`pulumi.Input[list]`) - Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.

              * `min_servers` (`pulumi.Input[float]`) - Minimum number of servers that are always marked healthy. Default value is 0.
              * `path` (`pulumi.Input[str]`) - Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
              * `pick_host_name_from_backend_http_settings` (`pulumi.Input[bool]`) - Whether the host header should be picked from the backend http settings. Default value is false.
              * `protocol` (`pulumi.Input[str]`) - The protocol used for the probe. Possible values are 'Http' and 'Https'.
              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `timeout` (`pulumi.Input[float]`) - the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
              * `unhealthy_threshold` (`pulumi.Input[float]`) - The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `redirect_configurations` (`pulumi.Input[list]`) - Redirect configurations of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the redirect configuration that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of redirect configuration of the application gateway.
              * `include_path` (`pulumi.Input[bool]`) - Include path in the redirected url.
              * `include_query_string` (`pulumi.Input[bool]`) - Include query string in the redirected url.
              * `path_rules` (`pulumi.Input[list]`) - Path rules specifying redirect configuration.
              * `redirect_type` (`pulumi.Input[str]`) - Supported http redirection types - Permanent, Temporary, Found, SeeOther.
              * `request_routing_rules` (`pulumi.Input[list]`) - Request routing specifying redirect configuration.
              * `target_listener` (`pulumi.Input[dict]`) - Reference to a listener to redirect the request to.
              * `target_url` (`pulumi.Input[str]`) - Url to redirect the request to.
              * `url_path_maps` (`pulumi.Input[list]`) - Url path maps specifying default redirect configuration.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `request_routing_rules` (`pulumi.Input[list]`) - Request routing rules of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the request routing rule that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of request routing rule of the application gateway.
              * `backend_address_pool` (`pulumi.Input[dict]`) - Backend address pool resource of the application gateway. 
              * `backend_http_settings` (`pulumi.Input[dict]`) - Backend http settings resource of the application gateway.
              * `http_listener` (`pulumi.Input[dict]`) - Http listener resource of the application gateway. 
              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `redirect_configuration` (`pulumi.Input[dict]`) - Redirect configuration resource of the application gateway.
              * `rule_type` (`pulumi.Input[str]`) - Rule type.
              * `url_path_map` (`pulumi.Input[dict]`) - URL path map resource of the application gateway.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `resource_guid` (`pulumi.Input[str]`) - Resource GUID property of the application gateway resource.
          * `sku` (`pulumi.Input[dict]`) - SKU of the application gateway resource.
            * `capacity` (`pulumi.Input[float]`) - Capacity (instance count) of an application gateway.
            * `name` (`pulumi.Input[str]`) - Name of an application gateway SKU.
            * `tier` (`pulumi.Input[str]`) - Tier of an application gateway.

          * `ssl_certificates` (`pulumi.Input[list]`) - SSL certificates of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the SSL certificate that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of SSL certificates of an application gateway.
              * `data` (`pulumi.Input[str]`) - Base-64 encoded pfx certificate. Only applicable in PUT Request.
              * `password` (`pulumi.Input[str]`) - Password for the pfx file specified in data. Only applicable in PUT request.
              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `public_cert_data` (`pulumi.Input[str]`) - Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `ssl_policy` (`pulumi.Input[dict]`) - SSL policy of the application gateway resource.
            * `cipher_suites` (`pulumi.Input[list]`) - Ssl cipher suites to be enabled in the specified order to application gateway.
            * `disabled_ssl_protocols` (`pulumi.Input[list]`) - Ssl protocols to be disabled on application gateway.
            * `min_protocol_version` (`pulumi.Input[str]`) - Minimum version of Ssl protocol to be supported on application gateway.
            * `policy_name` (`pulumi.Input[str]`) - Name of Ssl predefined policy
            * `policy_type` (`pulumi.Input[str]`) - Type of Ssl Policy

          * `url_path_maps` (`pulumi.Input[list]`) - URL path map of the application gateway resource.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - Name of the URL path map that is unique within an Application Gateway.
            * `properties` (`pulumi.Input[dict]`) - Properties of UrlPathMap of the application gateway.
              * `default_backend_address_pool` (`pulumi.Input[dict]`) - Default backend address pool resource of URL path map.
              * `default_backend_http_settings` (`pulumi.Input[dict]`) - Default backend http settings resource of URL path map.
              * `default_redirect_configuration` (`pulumi.Input[dict]`) - Default redirect configuration resource of URL path map.
              * `path_rules` (`pulumi.Input[list]`) - Path rule of URL path map resource.
                * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`pulumi.Input[str]`) - Resource ID.
                * `name` (`pulumi.Input[str]`) - Name of the path rule that is unique within an Application Gateway.
                * `properties` (`pulumi.Input[dict]`) - Properties of path rule of an application gateway.
                  * `backend_address_pool` (`pulumi.Input[dict]`) - Backend address pool resource of URL path map path rule.
                  * `backend_http_settings` (`pulumi.Input[dict]`) - Backend http settings resource of URL path map path rule.
                  * `paths` (`pulumi.Input[list]`) - Path rules of URL path map.
                  * `provisioning_state` (`pulumi.Input[str]`) - Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                  * `redirect_configuration` (`pulumi.Input[dict]`) - Redirect configuration resource of URL path map path rule.

                * `type` (`pulumi.Input[str]`) - Type of the resource.

              * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

            * `type` (`pulumi.Input[str]`) - Type of the resource.

          * `web_application_firewall_configuration` (`pulumi.Input[dict]`) - Web application firewall configuration.
            * `disabled_rule_groups` (`pulumi.Input[list]`) - The disabled rule groups.
              * `rule_group_name` (`pulumi.Input[str]`) - The name of the rule group that will be disabled.
              * `rules` (`pulumi.Input[list]`) - The list of rules that will be disabled. If null, all rules of the rule group will be disabled.

            * `enabled` (`pulumi.Input[bool]`) - Whether the web application firewall is enabled or not.
            * `firewall_mode` (`pulumi.Input[str]`) - Web application firewall mode.
            * `max_request_body_size` (`pulumi.Input[float]`) - Maximum request body size for WAF.
            * `request_body_check` (`pulumi.Input[bool]`) - Whether allow WAF to check request Body.
            * `rule_set_type` (`pulumi.Input[str]`) - The type of the web application firewall rule set. Possible values are: 'OWASP'.
            * `rule_set_version` (`pulumi.Input[str]`) - The version of the rule set type.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['etag'] = etag
            __props__['id'] = id
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['zones'] = zones
            __props__['type'] = None
        super(ApplicationGateway, __self__).__init__(
            'azurerm:network/v20180701:ApplicationGateway',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing ApplicationGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return ApplicationGateway(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
