# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class StorageSyncService(pulumi.CustomResource):
    location: pulumi.Output[str]
    """
    The geo-location where the resource lives
    """
    name: pulumi.Output[str]
    """
    The name of the resource
    """
    properties: pulumi.Output[dict]
    """
    Storage Sync Service properties.
      * `incoming_traffic_policy` (`str`) - Incoming Traffic Policy
      * `last_operation_name` (`str`) - Resource Last Operation Name
      * `last_workflow_id` (`str`) - StorageSyncService lastWorkflowId
      * `private_endpoint_connections` (`list`) - List of private endpoint connection associated with the specified storage sync service
        * `id` (`str`) - Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        * `name` (`str`) - The name of the resource
        * `properties` (`dict`) - Resource properties.
          * `private_endpoint` (`dict`) - The resource of private end point.
            * `id` (`str`) - The ARM identifier for Private Endpoint

          * `private_link_service_connection_state` (`dict`) - A collection of information about the state of the connection between service consumer and provider.
            * `actions_required` (`str`) - A message indicating if changes on the service provider require any updates on the consumer.
            * `description` (`str`) - The reason for approval/rejection of the connection.
            * `status` (`str`) - Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.

          * `provisioning_state` (`str`) - The provisioning state of the private endpoint connection resource.

        * `type` (`str`) - The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.

      * `provisioning_state` (`str`) - StorageSyncService Provisioning State
      * `storage_sync_service_status` (`float`) - Storage Sync service status.
      * `storage_sync_service_uid` (`str`) - Storage Sync service Uid
    """
    tags: pulumi.Output[dict]
    """
    Resource tags.
    """
    type: pulumi.Output[str]
    """
    The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
    """
    def __init__(__self__, resource_name, opts=None, location=None, name=None, properties=None, resource_group_name=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Storage Sync Service object.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.
        :param pulumi.Input[str] name: Name of Storage Sync Service resource.
        :param pulumi.Input[dict] properties: The parameters used to create the storage sync service.
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[dict] tags: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.

        The **properties** object supports the following:

          * `incoming_traffic_policy` (`pulumi.Input[str]`) - Incoming Traffic Policy
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if location is None:
                raise TypeError("Missing required property 'location'")
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['type'] = None
        super(StorageSyncService, __self__).__init__(
            'azurerm:storagesync:StorageSyncService',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, location=None, name=None, properties=None, tags=None, type=None):
        """
        Get an existing StorageSyncService resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: The geo-location where the resource lives
        :param pulumi.Input[str] name: The name of the resource
        :param pulumi.Input[dict] properties: Storage Sync Service properties.
        :param pulumi.Input[dict] tags: Resource tags.
        :param pulumi.Input[str] type: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.

        The **properties** object supports the following:

          * `incoming_traffic_policy` (`pulumi.Input[str]`) - Incoming Traffic Policy
          * `last_operation_name` (`pulumi.Input[str]`) - Resource Last Operation Name
          * `last_workflow_id` (`pulumi.Input[str]`) - StorageSyncService lastWorkflowId
          * `private_endpoint_connections` (`pulumi.Input[list]`) - List of private endpoint connection associated with the specified storage sync service
            * `id` (`pulumi.Input[str]`) - Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
            * `name` (`pulumi.Input[str]`) - The name of the resource
            * `properties` (`pulumi.Input[dict]`) - Resource properties.
              * `private_endpoint` (`pulumi.Input[dict]`) - The resource of private end point.
                * `id` (`pulumi.Input[str]`) - The ARM identifier for Private Endpoint

              * `private_link_service_connection_state` (`pulumi.Input[dict]`) - A collection of information about the state of the connection between service consumer and provider.
                * `actions_required` (`pulumi.Input[str]`) - A message indicating if changes on the service provider require any updates on the consumer.
                * `description` (`pulumi.Input[str]`) - The reason for approval/rejection of the connection.
                * `status` (`pulumi.Input[str]`) - Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.

              * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the private endpoint connection resource.

            * `type` (`pulumi.Input[str]`) - The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.

          * `provisioning_state` (`pulumi.Input[str]`) - StorageSyncService Provisioning State
          * `storage_sync_service_status` (`pulumi.Input[float]`) - Storage Sync service status.
          * `storage_sync_service_uid` (`pulumi.Input[str]`) - Storage Sync service Uid
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["location"] = location
        __props__["name"] = name
        __props__["properties"] = properties
        __props__["tags"] = tags
        __props__["type"] = type
        return StorageSyncService(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
