# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetGroupResult:
    """
    Contract details.
    """
    def __init__(__self__, built_in=None, description=None, display_name=None, external_id=None, name=None, type=None):
        if built_in and not isinstance(built_in, bool):
            raise TypeError("Expected argument 'built_in' to be a bool")
        __self__.built_in = built_in
        """
        true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
        """
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        Group description. Can contain HTML formatting tags.
        """
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        __self__.display_name = display_name
        """
        Group name.
        """
        if external_id and not isinstance(external_id, str):
            raise TypeError("Expected argument 'external_id' to be a str")
        __self__.external_id = external_id
        """
        For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Resource name.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Resource type for API Management resource.
        """


class AwaitableGetGroupResult(GetGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGroupResult(
            built_in=self.built_in,
            description=self.description,
            display_name=self.display_name,
            external_id=self.external_id,
            name=self.name,
            type=self.type)


def get_group(name=None, resource_group_name=None, service_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: Group identifier. Must be unique in the current API Management service instance.
    :param str resource_group_name: The name of the resource group.
    :param str service_name: The name of the API Management service.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['serviceName'] = service_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:apimanagement/v20190101:getGroup', __args__, opts=opts).value

    return AwaitableGetGroupResult(
        built_in=__ret__.get('builtIn'),
        description=__ret__.get('description'),
        display_name=__ret__.get('displayName'),
        external_id=__ret__.get('externalId'),
        name=__ret__.get('name'),
        type=__ret__.get('type'))
