# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetOpenIdConnectProviderResult:
    """
    OpenId Connect Provider details.
    """
    def __init__(__self__, client_id=None, client_secret=None, description=None, display_name=None, metadata_endpoint=None, name=None, type=None):
        if client_id and not isinstance(client_id, str):
            raise TypeError("Expected argument 'client_id' to be a str")
        __self__.client_id = client_id
        """
        Client ID of developer console which is the client application.
        """
        if client_secret and not isinstance(client_secret, str):
            raise TypeError("Expected argument 'client_secret' to be a str")
        __self__.client_secret = client_secret
        """
        Client Secret of developer console which is the client application.
        """
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        User-friendly description of OpenID Connect Provider.
        """
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        __self__.display_name = display_name
        """
        User-friendly OpenID Connect Provider name.
        """
        if metadata_endpoint and not isinstance(metadata_endpoint, str):
            raise TypeError("Expected argument 'metadata_endpoint' to be a str")
        __self__.metadata_endpoint = metadata_endpoint
        """
        Metadata endpoint URI.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Resource name.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Resource type for API Management resource.
        """


class AwaitableGetOpenIdConnectProviderResult(GetOpenIdConnectProviderResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOpenIdConnectProviderResult(
            client_id=self.client_id,
            client_secret=self.client_secret,
            description=self.description,
            display_name=self.display_name,
            metadata_endpoint=self.metadata_endpoint,
            name=self.name,
            type=self.type)


def get_open_id_connect_provider(name=None, resource_group_name=None, service_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: Identifier of the OpenID Connect Provider.
    :param str resource_group_name: The name of the resource group.
    :param str service_name: The name of the API Management service.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['serviceName'] = service_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:apimanagement/v20191201:getOpenIdConnectProvider', __args__, opts=opts).value

    return AwaitableGetOpenIdConnectProviderResult(
        client_id=__ret__.get('clientId'),
        client_secret=__ret__.get('clientSecret'),
        description=__ret__.get('description'),
        display_name=__ret__.get('displayName'),
        metadata_endpoint=__ret__.get('metadataEndpoint'),
        name=__ret__.get('name'),
        type=__ret__.get('type'))
