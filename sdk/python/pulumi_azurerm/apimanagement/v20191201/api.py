# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class Api(pulumi.CustomResource):
    api_revision: pulumi.Output[str]
    """
    Describes the Revision of the Api. If no value is provided, default revision 1 is created
    """
    api_revision_description: pulumi.Output[str]
    """
    Description of the Api Revision.
    """
    api_type: pulumi.Output[str]
    """
    Type of API.
    """
    api_version: pulumi.Output[str]
    """
    Indicates the Version identifier of the API if the API is versioned
    """
    api_version_description: pulumi.Output[str]
    """
    Description of the Api Version.
    """
    api_version_set: pulumi.Output[dict]
    """
    Version set details
      * `description` (`str`) - Description of API Version Set.
      * `id` (`str`) - Identifier for existing API Version Set. Omit this value to create a new Version Set.
      * `name` (`str`) - The display Name of the API Version Set.
      * `version_header_name` (`str`) - Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
      * `version_query_name` (`str`) - Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
      * `versioning_scheme` (`str`) - An value that determines where the API Version identifer will be located in a HTTP request.
    """
    api_version_set_id: pulumi.Output[str]
    """
    A resource identifier for the related ApiVersionSet.
    """
    authentication_settings: pulumi.Output[dict]
    """
    Collection of authentication settings included into this API.
      * `o_auth2` (`dict`) - OAuth2 Authentication settings
        * `authorization_server_id` (`str`) - OAuth authorization server identifier.
        * `scope` (`str`) - operations scope.

      * `openid` (`dict`) - OpenID Connect Authentication Settings
        * `bearer_token_sending_methods` (`list`) - How to send token to the server.
        * `openid_provider_id` (`str`) - OAuth authorization server identifier.
    """
    description: pulumi.Output[str]
    """
    Description of the API. May include HTML formatting tags.
    """
    display_name: pulumi.Output[str]
    """
    API name. Must be 1 to 300 characters long.
    """
    is_current: pulumi.Output[bool]
    """
    Indicates if API revision is current api revision.
    """
    is_online: pulumi.Output[bool]
    """
    Indicates if API revision is accessible via the gateway.
    """
    name: pulumi.Output[str]
    """
    Resource name.
    """
    path: pulumi.Output[str]
    """
    Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
    """
    protocols: pulumi.Output[list]
    """
    Describes on which protocols the operations in this API can be invoked.
    """
    service_url: pulumi.Output[str]
    """
    Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
    """
    source_api_id: pulumi.Output[str]
    """
    API identifier of the source API.
    """
    subscription_key_parameter_names: pulumi.Output[dict]
    """
    Protocols over which API is made available.
      * `header` (`str`) - Subscription key header name.
      * `query` (`str`) - Subscription key query string parameter name.
    """
    subscription_required: pulumi.Output[bool]
    """
    Specifies whether an API or Product subscription is required for accessing the API.
    """
    type: pulumi.Output[str]
    """
    Resource type for API Management resource.
    """
    def __init__(__self__, resource_name, opts=None, api_revision=None, api_revision_description=None, api_type=None, api_version=None, api_version_description=None, api_version_set=None, api_version_set_id=None, authentication_settings=None, description=None, display_name=None, format=None, is_current=None, name=None, path=None, protocols=None, resource_group_name=None, service_name=None, service_url=None, soap_api_type=None, source_api_id=None, subscription_key_parameter_names=None, subscription_required=None, value=None, wsdl_selector=None, __props__=None, __name__=None, __opts__=None):
        """
        Api details.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] api_revision: Describes the Revision of the Api. If no value is provided, default revision 1 is created
        :param pulumi.Input[str] api_revision_description: Description of the Api Revision.
        :param pulumi.Input[str] api_type: Type of API.
        :param pulumi.Input[str] api_version: Indicates the Version identifier of the API if the API is versioned
        :param pulumi.Input[str] api_version_description: Description of the Api Version.
        :param pulumi.Input[dict] api_version_set: Version set details
        :param pulumi.Input[str] api_version_set_id: A resource identifier for the related ApiVersionSet.
        :param pulumi.Input[dict] authentication_settings: Collection of authentication settings included into this API.
        :param pulumi.Input[str] description: Description of the API. May include HTML formatting tags.
        :param pulumi.Input[str] display_name: API name. Must be 1 to 300 characters long.
        :param pulumi.Input[str] format: Format of the Content in which the API is getting imported.
        :param pulumi.Input[bool] is_current: Indicates if API revision is current api revision.
        :param pulumi.Input[str] name: API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
        :param pulumi.Input[str] path: Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
        :param pulumi.Input[list] protocols: Describes on which protocols the operations in this API can be invoked.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[str] service_name: The name of the API Management service.
        :param pulumi.Input[str] service_url: Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
        :param pulumi.Input[str] soap_api_type: Type of Api to create. 
                * `http` creates a SOAP to REST API 
                * `soap` creates a SOAP pass-through API .
        :param pulumi.Input[str] source_api_id: API identifier of the source API.
        :param pulumi.Input[dict] subscription_key_parameter_names: Protocols over which API is made available.
        :param pulumi.Input[bool] subscription_required: Specifies whether an API or Product subscription is required for accessing the API.
        :param pulumi.Input[str] value: Content value when Importing an API.
        :param pulumi.Input[dict] wsdl_selector: Criteria to limit import of WSDL to a subset of the document.

        The **api_version_set** object supports the following:

          * `description` (`pulumi.Input[str]`) - Description of API Version Set.
          * `id` (`pulumi.Input[str]`) - Identifier for existing API Version Set. Omit this value to create a new Version Set.
          * `name` (`pulumi.Input[str]`) - The display Name of the API Version Set.
          * `version_header_name` (`pulumi.Input[str]`) - Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
          * `version_query_name` (`pulumi.Input[str]`) - Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
          * `versioning_scheme` (`pulumi.Input[str]`) - An value that determines where the API Version identifer will be located in a HTTP request.

        The **authentication_settings** object supports the following:

          * `o_auth2` (`pulumi.Input[dict]`) - OAuth2 Authentication settings
            * `authorization_server_id` (`pulumi.Input[str]`) - OAuth authorization server identifier.
            * `scope` (`pulumi.Input[str]`) - operations scope.

          * `openid` (`pulumi.Input[dict]`) - OpenID Connect Authentication Settings
            * `bearer_token_sending_methods` (`pulumi.Input[list]`) - How to send token to the server.
            * `openid_provider_id` (`pulumi.Input[str]`) - OAuth authorization server identifier.

        The **subscription_key_parameter_names** object supports the following:

          * `header` (`pulumi.Input[str]`) - Subscription key header name.
          * `query` (`pulumi.Input[str]`) - Subscription key query string parameter name.

        The **wsdl_selector** object supports the following:

          * `wsdl_endpoint_name` (`pulumi.Input[str]`) - Name of endpoint(port) to import from WSDL
          * `wsdl_service_name` (`pulumi.Input[str]`) - Name of service to import from WSDL
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['api_revision'] = api_revision
            __props__['api_revision_description'] = api_revision_description
            __props__['api_type'] = api_type
            __props__['api_version'] = api_version
            __props__['api_version_description'] = api_version_description
            __props__['api_version_set'] = api_version_set
            __props__['api_version_set_id'] = api_version_set_id
            __props__['authentication_settings'] = authentication_settings
            __props__['description'] = description
            __props__['display_name'] = display_name
            __props__['format'] = format
            __props__['is_current'] = is_current
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            if path is None:
                raise TypeError("Missing required property 'path'")
            __props__['path'] = path
            __props__['protocols'] = protocols
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            if service_name is None:
                raise TypeError("Missing required property 'service_name'")
            __props__['service_name'] = service_name
            __props__['service_url'] = service_url
            __props__['soap_api_type'] = soap_api_type
            __props__['source_api_id'] = source_api_id
            __props__['subscription_key_parameter_names'] = subscription_key_parameter_names
            __props__['subscription_required'] = subscription_required
            __props__['value'] = value
            __props__['wsdl_selector'] = wsdl_selector
            __props__['is_online'] = None
            __props__['type'] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azurerm:apimanagement/v20160707:Api"), pulumi.Alias(type_="azurerm:apimanagement/v20161010:Api"), pulumi.Alias(type_="azurerm:apimanagement/v20170301:Api"), pulumi.Alias(type_="azurerm:apimanagement/v20180101:Api"), pulumi.Alias(type_="azurerm:apimanagement/v20190101:Api")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(Api, __self__).__init__(
            'azurerm:apimanagement/v20191201:Api',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing Api resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return Api(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
