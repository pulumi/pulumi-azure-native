# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetBackupScheduleGroupResult:
    """
    The Backup Schedule Group
    """
    def __init__(__self__, name=None, start_time=None, type=None):
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name.
        """
        if start_time and not isinstance(start_time, dict):
            raise TypeError("Expected argument 'start_time' to be a dict")
        __self__.start_time = start_time
        """
        The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The type.
        """


class AwaitableGetBackupScheduleGroupResult(GetBackupScheduleGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBackupScheduleGroupResult(
            name=self.name,
            start_time=self.start_time,
            type=self.type)


def get_backup_schedule_group(device_name=None, manager_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str device_name: The name of the device.
    :param str manager_name: The manager name
    :param str name: The name of the schedule group.
    :param str resource_group_name: The resource group name
    """
    __args__ = dict()
    __args__['deviceName'] = device_name
    __args__['managerName'] = manager_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:storsimple/v20161001:getBackupScheduleGroup', __args__, opts=opts).value

    return AwaitableGetBackupScheduleGroupResult(
        name=__ret__.get('name'),
        start_time=__ret__.get('startTime'),
        type=__ret__.get('type'))
