# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetFileServerResult:
    """
    The file server.
    """
    def __init__(__self__, backup_schedule_group_id=None, description=None, domain_name=None, name=None, storage_domain_id=None, type=None):
        if backup_schedule_group_id and not isinstance(backup_schedule_group_id, str):
            raise TypeError("Expected argument 'backup_schedule_group_id' to be a str")
        __self__.backup_schedule_group_id = backup_schedule_group_id
        """
        The backup policy id.
        """
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        The description of the file server
        """
        if domain_name and not isinstance(domain_name, str):
            raise TypeError("Expected argument 'domain_name' to be a str")
        __self__.domain_name = domain_name
        """
        Domain of the file server
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name.
        """
        if storage_domain_id and not isinstance(storage_domain_id, str):
            raise TypeError("Expected argument 'storage_domain_id' to be a str")
        __self__.storage_domain_id = storage_domain_id
        """
        The storage domain id.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The type.
        """


class AwaitableGetFileServerResult(GetFileServerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFileServerResult(
            backup_schedule_group_id=self.backup_schedule_group_id,
            description=self.description,
            domain_name=self.domain_name,
            name=self.name,
            storage_domain_id=self.storage_domain_id,
            type=self.type)


def get_file_server(device_name=None, manager_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str device_name: The device name.
    :param str manager_name: The manager name
    :param str name: The file server name.
    :param str resource_group_name: The resource group name
    """
    __args__ = dict()
    __args__['deviceName'] = device_name
    __args__['managerName'] = manager_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:storsimple/v20161001:getFileServer', __args__, opts=opts).value

    return AwaitableGetFileServerResult(
        backup_schedule_group_id=__ret__.get('backupScheduleGroupId'),
        description=__ret__.get('description'),
        domain_name=__ret__.get('domainName'),
        name=__ret__.get('name'),
        storage_domain_id=__ret__.get('storageDomainId'),
        type=__ret__.get('type'))
