# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class LoadBalancer(pulumi.CustomResource):
    backend_address_pools: pulumi.Output[list]
    """
    Collection of backend address pools used by a load balancer
      * `backend_ip_configurations` (`list`) - Gets collection of references to IP addresses defined in network interfaces.
        * `application_gateway_backend_address_pools` (`list`) - The reference of ApplicationGatewayBackendAddressPool resource.
          * `backend_addresses` (`list`) - Backend addresses
            * `fqdn` (`str`) - Fully qualified domain name (FQDN).
            * `ip_address` (`str`) - IP address

          * `backend_ip_configurations` (`list`) - Collection of references to IPs defined in network interfaces.
          * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`str`) - Resource ID.
          * `name` (`str`) - Resource that is unique within a resource group. This name can be used to access the resource.
          * `provisioning_state` (`str`) - Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `type` (`str`) - Type of the resource.

        * `application_security_groups` (`list`) - Application security groups in which the IP configuration is included.
          * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`str`) - Resource ID.
          * `location` (`str`) - Resource location.
          * `name` (`str`) - Resource name.
          * `provisioning_state` (`str`) - The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
          * `resource_guid` (`str`) - The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
          * `tags` (`dict`) - Resource tags.
          * `type` (`str`) - Resource type.

        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `load_balancer_backend_address_pools` (`list`) - The reference of LoadBalancerBackendAddressPool resource.
        * `load_balancer_inbound_nat_rules` (`list`) - A list of references of LoadBalancerInboundNatRules.
          * `backend_ip_configuration` (`dict`) - A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
          * `backend_port` (`float`) - The port used for the internal endpoint. Acceptable values range from 1 to 65535.
          * `enable_floating_ip` (`bool`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
          * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
          * `frontend_ip_configuration` (`dict`) - A reference to frontend IP addresses.
            * `id` (`str`) - Resource ID.

          * `frontend_port` (`float`) - The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
          * `id` (`str`) - Resource ID.
          * `idle_timeout_in_minutes` (`float`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
          * `name` (`str`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `protocol` (`str`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
          * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
        * `primary` (`bool`) - Gets whether this is a primary customer address on the network interface.
        * `private_ip_address` (`str`) - Private IP address of the IP configuration.
        * `private_ip_address_version` (`str`) - Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
        * `private_ip_allocation_method` (`str`) - Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
        * `provisioning_state` (`str`) - The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        * `public_ip_address` (`dict`) - Public IP address bound to the IP configuration.
          * `dns_settings` (`dict`) - The FQDN of the DNS record associated with the public IP address.
            * `domain_name_label` (`str`) - Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
            * `fqdn` (`str`) - Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
            * `reverse_fqdn` (`str`) - Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. 

          * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`str`) - Resource ID.
          * `idle_timeout_in_minutes` (`float`) - The idle timeout of the public IP address.
          * `ip_address` (`str`) - The IP address associated with the public IP address resource.
          * `ip_configuration` (`dict`) - The IP configuration associated with the public IP address.
            * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`str`) - Resource ID.
            * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
            * `private_ip_address` (`str`) - The private IP address of the IP configuration.
            * `private_ip_allocation_method` (`str`) - The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
            * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
            * `public_ip_address` (`dict`) - The reference of the public IP resource.
            * `subnet` (`dict`) - The reference of the subnet resource.
              * `address_prefix` (`str`) - The address prefix for the subnet.
              * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
              * `id` (`str`) - Resource ID.
              * `ip_configurations` (`list`) - Gets an array of references to the network interface IP configurations using subnet.
              * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
              * `network_security_group` (`dict`) - The reference of the NetworkSecurityGroup resource.
                * `default_security_rules` (`list`) - The default security rules of network security group.
                  * `access` (`str`) - The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
                  * `description` (`str`) - A description for this rule. Restricted to 140 chars.
                  * `destination_address_prefix` (`str`) - The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                  * `destination_address_prefixes` (`list`) - The destination address prefixes. CIDR or destination IP ranges.
                  * `destination_application_security_groups` (`list`) - The application security group specified as destination.
                  * `destination_port_range` (`str`) - The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                  * `destination_port_ranges` (`list`) - The destination port ranges.
                  * `direction` (`str`) - The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
                  * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                  * `id` (`str`) - Resource ID.
                  * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                  * `priority` (`float`) - The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
                  * `protocol` (`str`) - Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
                  * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                  * `source_address_prefix` (`str`) - The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
                  * `source_address_prefixes` (`list`) - The CIDR or source IP ranges.
                  * `source_application_security_groups` (`list`) - The application security group specified as source.
                  * `source_port_range` (`str`) - The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                  * `source_port_ranges` (`list`) - The source port ranges.

                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `location` (`str`) - Resource location.
                * `name` (`str`) - Resource name.
                * `network_interfaces` (`list`) - A collection of references to network interfaces.
                  * `dns_settings` (`dict`) - The DNS settings in network interface.
                    * `applied_dns_servers` (`list`) - If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
                    * `dns_servers` (`list`) - List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
                    * `internal_dns_name_label` (`str`) - Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
                    * `internal_domain_name_suffix` (`str`) - Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
                    * `internal_fqdn` (`str`) - Fully qualified DNS name supporting internal communications between VMs in the same virtual network.

                  * `enable_accelerated_networking` (`bool`) - If the network interface is accelerated networking enabled.
                  * `enable_ip_forwarding` (`bool`) - Indicates whether IP forwarding is enabled on this network interface.
                  * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                  * `id` (`str`) - Resource ID.
                  * `ip_configurations` (`list`) - A list of IPConfigurations of the network interface.
                  * `location` (`str`) - Resource location.
                  * `mac_address` (`str`) - The MAC address of the network interface.
                  * `name` (`str`) - Resource name.
                  * `network_security_group` (`dict`) - The reference of the NetworkSecurityGroup resource.
                  * `primary` (`bool`) - Gets whether this is a primary network interface on a virtual machine.
                  * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                  * `resource_guid` (`str`) - The resource GUID property of the network interface resource.
                  * `tags` (`dict`) - Resource tags.
                  * `type` (`str`) - Resource type.
                  * `virtual_machine` (`dict`) - The reference of a virtual machine.

                * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                * `resource_guid` (`str`) - The resource GUID property of the network security group resource.
                * `security_rules` (`list`) - A collection of security rules of the network security group.
                * `subnets` (`list`) - A collection of references to subnets.
                * `tags` (`dict`) - Resource tags.
                * `type` (`str`) - Resource type.

              * `provisioning_state` (`str`) - The provisioning state of the resource.
              * `resource_navigation_links` (`list`) - Gets an array of references to the external resources using subnet.
                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `link` (`str`) - Link to the external resource
                * `linked_resource_type` (`str`) - Resource type of the linked resource.
                * `name` (`str`) - Name of the resource that is unique within a resource group. This name can be used to access the resource.
                * `provisioning_state` (`str`) - Provisioning state of the ResourceNavigationLink resource.

              * `route_table` (`dict`) - The reference of the RouteTable resource.
                * `disable_bgp_route_propagation` (`bool`) - Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
                * `etag` (`str`) - Gets a unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `location` (`str`) - Resource location.
                * `name` (`str`) - Resource name.
                * `provisioning_state` (`str`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                * `routes` (`list`) - Collection of routes contained within a route table.
                  * `address_prefix` (`str`) - The destination CIDR to which the route applies.
                  * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                  * `id` (`str`) - Resource ID.
                  * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                  * `next_hop_ip_address` (`str`) - The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
                  * `next_hop_type` (`str`) - The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
                  * `provisioning_state` (`str`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

                * `subnets` (`list`) - A collection of references to subnets.
                * `tags` (`dict`) - Resource tags.
                * `type` (`str`) - Resource type.

              * `service_endpoints` (`list`) - An array of service endpoints.
                * `locations` (`list`) - A list of locations.
                * `provisioning_state` (`str`) - The provisioning state of the resource.
                * `service` (`str`) - The type of the endpoint service.

          * `ip_tags` (`list`) - The list of tags associated with the public IP address.
            * `ip_tag_type` (`str`) - Gets or sets the ipTag type: Example FirstPartyUsage.
            * `tag` (`str`) - Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc

          * `location` (`str`) - Resource location.
          * `name` (`str`) - Resource name.
          * `provisioning_state` (`str`) - The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `public_ip_address_version` (`str`) - The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
          * `public_ip_allocation_method` (`str`) - The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
          * `resource_guid` (`str`) - The resource GUID property of the public IP resource.
          * `sku` (`dict`) - The public IP address SKU.
            * `name` (`str`) - Name of a public IP address SKU.

          * `tags` (`dict`) - Resource tags.
          * `type` (`str`) - Resource type.
          * `zones` (`list`) - A list of availability zones denoting the IP allocated for the resource needs to come from.

        * `subnet` (`dict`) - Subnet bound to the IP configuration.

      * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
      * `id` (`str`) - Resource ID.
      * `load_balancing_rules` (`list`) - Gets load balancing rules that use this backend address pool.
      * `name` (`str`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
      * `outbound_nat_rule` (`dict`) - Gets outbound rules that use this backend address pool.
      * `provisioning_state` (`str`) - Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
    """
    etag: pulumi.Output[str]
    """
    A unique read-only string that changes whenever the resource is updated.
    """
    frontend_ip_configurations: pulumi.Output[list]
    """
    Object representing the frontend IPs to be used for the load balancer
      * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
      * `id` (`str`) - Resource ID.
      * `inbound_nat_pools` (`list`) - Read only. Inbound pools URIs that use this frontend IP.
        * `id` (`str`) - Resource ID.

      * `inbound_nat_rules` (`list`) - Read only. Inbound rules URIs that use this frontend IP.
      * `load_balancing_rules` (`list`) - Gets load balancing rules URIs that use this frontend IP.
      * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
      * `outbound_nat_rules` (`list`) - Read only. Outbound rules URIs that use this frontend IP.
      * `private_ip_address` (`str`) - The private IP address of the IP configuration.
      * `private_ip_allocation_method` (`str`) - The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
      * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
      * `public_ip_address` (`dict`) - The reference of the Public IP resource.
        * `dns_settings` (`dict`) - The FQDN of the DNS record associated with the public IP address.
          * `domain_name_label` (`str`) - Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
          * `fqdn` (`str`) - Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
          * `reverse_fqdn` (`str`) - Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. 

        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `idle_timeout_in_minutes` (`float`) - The idle timeout of the public IP address.
        * `ip_address` (`str`) - The IP address associated with the public IP address resource.
        * `ip_configuration` (`dict`) - The IP configuration associated with the public IP address.
          * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`str`) - Resource ID.
          * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `private_ip_address` (`str`) - The private IP address of the IP configuration.
          * `private_ip_allocation_method` (`str`) - The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
          * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `public_ip_address` (`dict`) - The reference of the public IP resource.
          * `subnet` (`dict`) - The reference of the subnet resource.
            * `address_prefix` (`str`) - The address prefix for the subnet.
            * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`str`) - Resource ID.
            * `ip_configurations` (`list`) - Gets an array of references to the network interface IP configurations using subnet.
            * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
            * `network_security_group` (`dict`) - The reference of the NetworkSecurityGroup resource.
              * `default_security_rules` (`list`) - The default security rules of network security group.
                * `access` (`str`) - The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
                * `description` (`str`) - A description for this rule. Restricted to 140 chars.
                * `destination_address_prefix` (`str`) - The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                * `destination_address_prefixes` (`list`) - The destination address prefixes. CIDR or destination IP ranges.
                * `destination_application_security_groups` (`list`) - The application security group specified as destination.
                  * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                  * `id` (`str`) - Resource ID.
                  * `location` (`str`) - Resource location.
                  * `name` (`str`) - Resource name.
                  * `provisioning_state` (`str`) - The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
                  * `resource_guid` (`str`) - The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
                  * `tags` (`dict`) - Resource tags.
                  * `type` (`str`) - Resource type.

                * `destination_port_range` (`str`) - The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                * `destination_port_ranges` (`list`) - The destination port ranges.
                * `direction` (`str`) - The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                * `priority` (`float`) - The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
                * `protocol` (`str`) - Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
                * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                * `source_address_prefix` (`str`) - The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
                * `source_address_prefixes` (`list`) - The CIDR or source IP ranges.
                * `source_application_security_groups` (`list`) - The application security group specified as source.
                * `source_port_range` (`str`) - The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                * `source_port_ranges` (`list`) - The source port ranges.

              * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
              * `id` (`str`) - Resource ID.
              * `location` (`str`) - Resource location.
              * `name` (`str`) - Resource name.
              * `network_interfaces` (`list`) - A collection of references to network interfaces.
                * `dns_settings` (`dict`) - The DNS settings in network interface.
                  * `applied_dns_servers` (`list`) - If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
                  * `dns_servers` (`list`) - List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
                  * `internal_dns_name_label` (`str`) - Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
                  * `internal_domain_name_suffix` (`str`) - Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
                  * `internal_fqdn` (`str`) - Fully qualified DNS name supporting internal communications between VMs in the same virtual network.

                * `enable_accelerated_networking` (`bool`) - If the network interface is accelerated networking enabled.
                * `enable_ip_forwarding` (`bool`) - Indicates whether IP forwarding is enabled on this network interface.
                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `ip_configurations` (`list`) - A list of IPConfigurations of the network interface.
                  * `application_gateway_backend_address_pools` (`list`) - The reference of ApplicationGatewayBackendAddressPool resource.
                    * `backend_addresses` (`list`) - Backend addresses
                      * `fqdn` (`str`) - Fully qualified domain name (FQDN).
                      * `ip_address` (`str`) - IP address

                    * `backend_ip_configurations` (`list`) - Collection of references to IPs defined in network interfaces.
                    * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                    * `id` (`str`) - Resource ID.
                    * `name` (`str`) - Resource that is unique within a resource group. This name can be used to access the resource.
                    * `provisioning_state` (`str`) - Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                    * `type` (`str`) - Type of the resource.

                  * `application_security_groups` (`list`) - Application security groups in which the IP configuration is included.
                  * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                  * `id` (`str`) - Resource ID.
                  * `load_balancer_backend_address_pools` (`list`) - The reference of LoadBalancerBackendAddressPool resource.
                    * `backend_ip_configurations` (`list`) - Gets collection of references to IP addresses defined in network interfaces.
                    * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                    * `id` (`str`) - Resource ID.
                    * `load_balancing_rules` (`list`) - Gets load balancing rules that use this backend address pool.
                    * `name` (`str`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
                    * `outbound_nat_rule` (`dict`) - Gets outbound rules that use this backend address pool.
                    * `provisioning_state` (`str`) - Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

                  * `load_balancer_inbound_nat_rules` (`list`) - A list of references of LoadBalancerInboundNatRules.
                    * `backend_ip_configuration` (`dict`) - A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
                    * `backend_port` (`float`) - The port used for the internal endpoint. Acceptable values range from 1 to 65535.
                    * `enable_floating_ip` (`bool`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
                    * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                    * `frontend_ip_configuration` (`dict`) - A reference to frontend IP addresses.
                    * `frontend_port` (`float`) - The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
                    * `id` (`str`) - Resource ID.
                    * `idle_timeout_in_minutes` (`float`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
                    * `name` (`str`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
                    * `protocol` (`str`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
                    * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

                  * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                  * `primary` (`bool`) - Gets whether this is a primary customer address on the network interface.
                  * `private_ip_address` (`str`) - Private IP address of the IP configuration.
                  * `private_ip_address_version` (`str`) - Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
                  * `private_ip_allocation_method` (`str`) - Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
                  * `provisioning_state` (`str`) - The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                  * `public_ip_address` (`dict`) - Public IP address bound to the IP configuration.
                  * `subnet` (`dict`) - Subnet bound to the IP configuration.

                * `location` (`str`) - Resource location.
                * `mac_address` (`str`) - The MAC address of the network interface.
                * `name` (`str`) - Resource name.
                * `network_security_group` (`dict`) - The reference of the NetworkSecurityGroup resource.
                * `primary` (`bool`) - Gets whether this is a primary network interface on a virtual machine.
                * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                * `resource_guid` (`str`) - The resource GUID property of the network interface resource.
                * `tags` (`dict`) - Resource tags.
                * `type` (`str`) - Resource type.
                * `virtual_machine` (`dict`) - The reference of a virtual machine.

              * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `resource_guid` (`str`) - The resource GUID property of the network security group resource.
              * `security_rules` (`list`) - A collection of security rules of the network security group.
              * `subnets` (`list`) - A collection of references to subnets.
              * `tags` (`dict`) - Resource tags.
              * `type` (`str`) - Resource type.

            * `provisioning_state` (`str`) - The provisioning state of the resource.
            * `resource_navigation_links` (`list`) - Gets an array of references to the external resources using subnet.
              * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
              * `id` (`str`) - Resource ID.
              * `link` (`str`) - Link to the external resource
              * `linked_resource_type` (`str`) - Resource type of the linked resource.
              * `name` (`str`) - Name of the resource that is unique within a resource group. This name can be used to access the resource.
              * `provisioning_state` (`str`) - Provisioning state of the ResourceNavigationLink resource.

            * `route_table` (`dict`) - The reference of the RouteTable resource.
              * `disable_bgp_route_propagation` (`bool`) - Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
              * `etag` (`str`) - Gets a unique read-only string that changes whenever the resource is updated.
              * `id` (`str`) - Resource ID.
              * `location` (`str`) - Resource location.
              * `name` (`str`) - Resource name.
              * `provisioning_state` (`str`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `routes` (`list`) - Collection of routes contained within a route table.
                * `address_prefix` (`str`) - The destination CIDR to which the route applies.
                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                * `next_hop_ip_address` (`str`) - The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
                * `next_hop_type` (`str`) - The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
                * `provisioning_state` (`str`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

              * `subnets` (`list`) - A collection of references to subnets.
              * `tags` (`dict`) - Resource tags.
              * `type` (`str`) - Resource type.

            * `service_endpoints` (`list`) - An array of service endpoints.
              * `locations` (`list`) - A list of locations.
              * `provisioning_state` (`str`) - The provisioning state of the resource.
              * `service` (`str`) - The type of the endpoint service.

        * `ip_tags` (`list`) - The list of tags associated with the public IP address.
          * `ip_tag_type` (`str`) - Gets or sets the ipTag type: Example FirstPartyUsage.
          * `tag` (`str`) - Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc

        * `location` (`str`) - Resource location.
        * `name` (`str`) - Resource name.
        * `provisioning_state` (`str`) - The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        * `public_ip_address_version` (`str`) - The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
        * `public_ip_allocation_method` (`str`) - The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
        * `resource_guid` (`str`) - The resource GUID property of the public IP resource.
        * `sku` (`dict`) - The public IP address SKU.
          * `name` (`str`) - Name of a public IP address SKU.

        * `tags` (`dict`) - Resource tags.
        * `type` (`str`) - Resource type.
        * `zones` (`list`) - A list of availability zones denoting the IP allocated for the resource needs to come from.

      * `subnet` (`dict`) - The reference of the subnet resource.
      * `zones` (`list`) - A list of availability zones denoting the IP allocated for the resource needs to come from.
    """
    inbound_nat_pools: pulumi.Output[list]
    """
    Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
      * `backend_port` (`float`) - The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
      * `enable_floating_ip` (`bool`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
      * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
      * `frontend_ip_configuration` (`dict`) - A reference to frontend IP addresses.
        * `id` (`str`) - Resource ID.

      * `frontend_port_range_end` (`float`) - The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
      * `frontend_port_range_start` (`float`) - The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
      * `id` (`str`) - Resource ID.
      * `idle_timeout_in_minutes` (`float`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
      * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
      * `protocol` (`str`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
      * `provisioning_state` (`str`) - Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
    """
    inbound_nat_rules: pulumi.Output[list]
    """
    Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
      * `backend_ip_configuration` (`dict`) - A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
        * `application_gateway_backend_address_pools` (`list`) - The reference of ApplicationGatewayBackendAddressPool resource.
          * `backend_addresses` (`list`) - Backend addresses
            * `fqdn` (`str`) - Fully qualified domain name (FQDN).
            * `ip_address` (`str`) - IP address

          * `backend_ip_configurations` (`list`) - Collection of references to IPs defined in network interfaces.
          * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`str`) - Resource ID.
          * `name` (`str`) - Resource that is unique within a resource group. This name can be used to access the resource.
          * `provisioning_state` (`str`) - Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `type` (`str`) - Type of the resource.

        * `application_security_groups` (`list`) - Application security groups in which the IP configuration is included.
          * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`str`) - Resource ID.
          * `location` (`str`) - Resource location.
          * `name` (`str`) - Resource name.
          * `provisioning_state` (`str`) - The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
          * `resource_guid` (`str`) - The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
          * `tags` (`dict`) - Resource tags.
          * `type` (`str`) - Resource type.

        * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
        * `id` (`str`) - Resource ID.
        * `load_balancer_backend_address_pools` (`list`) - The reference of LoadBalancerBackendAddressPool resource.
          * `backend_ip_configurations` (`list`) - Gets collection of references to IP addresses defined in network interfaces.
          * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`str`) - Resource ID.
          * `load_balancing_rules` (`list`) - Gets load balancing rules that use this backend address pool.
            * `id` (`str`) - Resource ID.

          * `name` (`str`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `outbound_nat_rule` (`dict`) - Gets outbound rules that use this backend address pool.
          * `provisioning_state` (`str`) - Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        * `load_balancer_inbound_nat_rules` (`list`) - A list of references of LoadBalancerInboundNatRules.
        * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
        * `primary` (`bool`) - Gets whether this is a primary customer address on the network interface.
        * `private_ip_address` (`str`) - Private IP address of the IP configuration.
        * `private_ip_address_version` (`str`) - Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
        * `private_ip_allocation_method` (`str`) - Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
        * `provisioning_state` (`str`) - The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        * `public_ip_address` (`dict`) - Public IP address bound to the IP configuration.
          * `dns_settings` (`dict`) - The FQDN of the DNS record associated with the public IP address.
            * `domain_name_label` (`str`) - Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
            * `fqdn` (`str`) - Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
            * `reverse_fqdn` (`str`) - Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. 

          * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`str`) - Resource ID.
          * `idle_timeout_in_minutes` (`float`) - The idle timeout of the public IP address.
          * `ip_address` (`str`) - The IP address associated with the public IP address resource.
          * `ip_configuration` (`dict`) - The IP configuration associated with the public IP address.
            * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`str`) - Resource ID.
            * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
            * `private_ip_address` (`str`) - The private IP address of the IP configuration.
            * `private_ip_allocation_method` (`str`) - The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
            * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
            * `public_ip_address` (`dict`) - The reference of the public IP resource.
            * `subnet` (`dict`) - The reference of the subnet resource.
              * `address_prefix` (`str`) - The address prefix for the subnet.
              * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
              * `id` (`str`) - Resource ID.
              * `ip_configurations` (`list`) - Gets an array of references to the network interface IP configurations using subnet.
              * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
              * `network_security_group` (`dict`) - The reference of the NetworkSecurityGroup resource.
                * `default_security_rules` (`list`) - The default security rules of network security group.
                  * `access` (`str`) - The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
                  * `description` (`str`) - A description for this rule. Restricted to 140 chars.
                  * `destination_address_prefix` (`str`) - The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                  * `destination_address_prefixes` (`list`) - The destination address prefixes. CIDR or destination IP ranges.
                  * `destination_application_security_groups` (`list`) - The application security group specified as destination.
                  * `destination_port_range` (`str`) - The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                  * `destination_port_ranges` (`list`) - The destination port ranges.
                  * `direction` (`str`) - The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
                  * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                  * `id` (`str`) - Resource ID.
                  * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                  * `priority` (`float`) - The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
                  * `protocol` (`str`) - Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
                  * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                  * `source_address_prefix` (`str`) - The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
                  * `source_address_prefixes` (`list`) - The CIDR or source IP ranges.
                  * `source_application_security_groups` (`list`) - The application security group specified as source.
                  * `source_port_range` (`str`) - The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                  * `source_port_ranges` (`list`) - The source port ranges.

                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `location` (`str`) - Resource location.
                * `name` (`str`) - Resource name.
                * `network_interfaces` (`list`) - A collection of references to network interfaces.
                  * `dns_settings` (`dict`) - The DNS settings in network interface.
                    * `applied_dns_servers` (`list`) - If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
                    * `dns_servers` (`list`) - List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
                    * `internal_dns_name_label` (`str`) - Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
                    * `internal_domain_name_suffix` (`str`) - Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
                    * `internal_fqdn` (`str`) - Fully qualified DNS name supporting internal communications between VMs in the same virtual network.

                  * `enable_accelerated_networking` (`bool`) - If the network interface is accelerated networking enabled.
                  * `enable_ip_forwarding` (`bool`) - Indicates whether IP forwarding is enabled on this network interface.
                  * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                  * `id` (`str`) - Resource ID.
                  * `ip_configurations` (`list`) - A list of IPConfigurations of the network interface.
                  * `location` (`str`) - Resource location.
                  * `mac_address` (`str`) - The MAC address of the network interface.
                  * `name` (`str`) - Resource name.
                  * `network_security_group` (`dict`) - The reference of the NetworkSecurityGroup resource.
                  * `primary` (`bool`) - Gets whether this is a primary network interface on a virtual machine.
                  * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                  * `resource_guid` (`str`) - The resource GUID property of the network interface resource.
                  * `tags` (`dict`) - Resource tags.
                  * `type` (`str`) - Resource type.
                  * `virtual_machine` (`dict`) - The reference of a virtual machine.

                * `provisioning_state` (`str`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                * `resource_guid` (`str`) - The resource GUID property of the network security group resource.
                * `security_rules` (`list`) - A collection of security rules of the network security group.
                * `subnets` (`list`) - A collection of references to subnets.
                * `tags` (`dict`) - Resource tags.
                * `type` (`str`) - Resource type.

              * `provisioning_state` (`str`) - The provisioning state of the resource.
              * `resource_navigation_links` (`list`) - Gets an array of references to the external resources using subnet.
                * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `link` (`str`) - Link to the external resource
                * `linked_resource_type` (`str`) - Resource type of the linked resource.
                * `name` (`str`) - Name of the resource that is unique within a resource group. This name can be used to access the resource.
                * `provisioning_state` (`str`) - Provisioning state of the ResourceNavigationLink resource.

              * `route_table` (`dict`) - The reference of the RouteTable resource.
                * `disable_bgp_route_propagation` (`bool`) - Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
                * `etag` (`str`) - Gets a unique read-only string that changes whenever the resource is updated.
                * `id` (`str`) - Resource ID.
                * `location` (`str`) - Resource location.
                * `name` (`str`) - Resource name.
                * `provisioning_state` (`str`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                * `routes` (`list`) - Collection of routes contained within a route table.
                  * `address_prefix` (`str`) - The destination CIDR to which the route applies.
                  * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
                  * `id` (`str`) - Resource ID.
                  * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                  * `next_hop_ip_address` (`str`) - The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
                  * `next_hop_type` (`str`) - The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
                  * `provisioning_state` (`str`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

                * `subnets` (`list`) - A collection of references to subnets.
                * `tags` (`dict`) - Resource tags.
                * `type` (`str`) - Resource type.

              * `service_endpoints` (`list`) - An array of service endpoints.
                * `locations` (`list`) - A list of locations.
                * `provisioning_state` (`str`) - The provisioning state of the resource.
                * `service` (`str`) - The type of the endpoint service.

          * `ip_tags` (`list`) - The list of tags associated with the public IP address.
            * `ip_tag_type` (`str`) - Gets or sets the ipTag type: Example FirstPartyUsage.
            * `tag` (`str`) - Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc

          * `location` (`str`) - Resource location.
          * `name` (`str`) - Resource name.
          * `provisioning_state` (`str`) - The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `public_ip_address_version` (`str`) - The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
          * `public_ip_allocation_method` (`str`) - The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
          * `resource_guid` (`str`) - The resource GUID property of the public IP resource.
          * `sku` (`dict`) - The public IP address SKU.
            * `name` (`str`) - Name of a public IP address SKU.

          * `tags` (`dict`) - Resource tags.
          * `type` (`str`) - Resource type.
          * `zones` (`list`) - A list of availability zones denoting the IP allocated for the resource needs to come from.

        * `subnet` (`dict`) - Subnet bound to the IP configuration.

      * `backend_port` (`float`) - The port used for the internal endpoint. Acceptable values range from 1 to 65535.
      * `enable_floating_ip` (`bool`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
      * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
      * `frontend_ip_configuration` (`dict`) - A reference to frontend IP addresses.
      * `frontend_port` (`float`) - The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
      * `id` (`str`) - Resource ID.
      * `idle_timeout_in_minutes` (`float`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
      * `name` (`str`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
      * `protocol` (`str`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
      * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
    """
    load_balancing_rules: pulumi.Output[list]
    """
    Object collection representing the load balancing rules Gets the provisioning 
      * `backend_address_pool` (`dict`) - A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
        * `id` (`str`) - Resource ID.

      * `backend_port` (`float`) - The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
      * `disable_outbound_snat` (`bool`) - Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
      * `enable_floating_ip` (`bool`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
      * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
      * `frontend_ip_configuration` (`dict`) - A reference to frontend IP addresses.
      * `frontend_port` (`float`) - The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
      * `id` (`str`) - Resource ID.
      * `idle_timeout_in_minutes` (`float`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
      * `load_distribution` (`str`) - The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
      * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
      * `probe` (`dict`) - The reference of the load balancer probe used by the load balancing rule.
      * `protocol` (`str`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
      * `provisioning_state` (`str`) - Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
    """
    location: pulumi.Output[str]
    """
    Resource location.
    """
    name: pulumi.Output[str]
    """
    Resource name.
    """
    outbound_nat_rules: pulumi.Output[list]
    """
    The outbound NAT rules.
      * `allocated_outbound_ports` (`float`) - The number of outbound ports to be used for NAT.
      * `backend_address_pool` (`dict`) - A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
        * `id` (`str`) - Resource ID.

      * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
      * `frontend_ip_configurations` (`list`) - The Frontend IP addresses of the load balancer.
      * `id` (`str`) - Resource ID.
      * `name` (`str`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
      * `provisioning_state` (`str`) - Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
    """
    probes: pulumi.Output[list]
    """
    Collection of probe objects used in the load balancer
      * `etag` (`str`) - A unique read-only string that changes whenever the resource is updated.
      * `id` (`str`) - Resource ID.
      * `interval_in_seconds` (`float`) - The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
      * `load_balancing_rules` (`list`) - The load balancer rules that use this probe.
        * `id` (`str`) - Resource ID.

      * `name` (`str`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
      * `number_of_probes` (`float`) - The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
      * `port` (`float`) - The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
      * `protocol` (`str`) - The protocol of the end point. Possible values are: 'Http', 'Tcp' or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
      * `provisioning_state` (`str`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
      * `request_path` (`str`) - The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
    """
    provisioning_state: pulumi.Output[str]
    """
    Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
    """
    resource_guid: pulumi.Output[str]
    """
    The resource GUID property of the load balancer resource.
    """
    sku: pulumi.Output[dict]
    """
    The load balancer SKU.
      * `name` (`str`) - Name of a load balancer SKU.
    """
    tags: pulumi.Output[dict]
    """
    Resource tags.
    """
    type: pulumi.Output[str]
    """
    Resource type.
    """
    def __init__(__self__, resource_name, opts=None, backend_address_pools=None, etag=None, frontend_ip_configurations=None, id=None, inbound_nat_pools=None, inbound_nat_rules=None, load_balancing_rules=None, location=None, name=None, outbound_nat_rules=None, probes=None, provisioning_state=None, resource_group_name=None, resource_guid=None, sku=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        LoadBalancer resource

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] backend_address_pools: Collection of backend address pools used by a load balancer
        :param pulumi.Input[str] etag: A unique read-only string that changes whenever the resource is updated.
        :param pulumi.Input[list] frontend_ip_configurations: Object representing the frontend IPs to be used for the load balancer
        :param pulumi.Input[str] id: Resource ID.
        :param pulumi.Input[list] inbound_nat_pools: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
        :param pulumi.Input[list] inbound_nat_rules: Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
        :param pulumi.Input[list] load_balancing_rules: Object collection representing the load balancing rules Gets the provisioning 
        :param pulumi.Input[str] location: Resource location.
        :param pulumi.Input[str] name: The name of the load balancer.
        :param pulumi.Input[list] outbound_nat_rules: The outbound NAT rules.
        :param pulumi.Input[list] probes: Collection of probe objects used in the load balancer
        :param pulumi.Input[str] provisioning_state: Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[str] resource_guid: The resource GUID property of the load balancer resource.
        :param pulumi.Input[dict] sku: The load balancer SKU.
        :param pulumi.Input[dict] tags: Resource tags.

        The **backend_address_pools** object supports the following:

          * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`pulumi.Input[str]`) - Resource ID.
          * `name` (`pulumi.Input[str]`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `provisioning_state` (`pulumi.Input[str]`) - Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        The **frontend_ip_configurations** object supports the following:

          * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`pulumi.Input[str]`) - Resource ID.
          * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `private_ip_address` (`pulumi.Input[str]`) - The private IP address of the IP configuration.
          * `private_ip_allocation_method` (`pulumi.Input[str]`) - The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
          * `provisioning_state` (`pulumi.Input[str]`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `public_ip_address` (`pulumi.Input[dict]`) - The reference of the Public IP resource.
            * `dns_settings` (`pulumi.Input[dict]`) - The FQDN of the DNS record associated with the public IP address.
              * `domain_name_label` (`pulumi.Input[str]`) - Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
              * `fqdn` (`pulumi.Input[str]`) - Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
              * `reverse_fqdn` (`pulumi.Input[str]`) - Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. 

            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `idle_timeout_in_minutes` (`pulumi.Input[float]`) - The idle timeout of the public IP address.
            * `ip_address` (`pulumi.Input[str]`) - The IP address associated with the public IP address resource.
            * `ip_tags` (`pulumi.Input[list]`) - The list of tags associated with the public IP address.
              * `ip_tag_type` (`pulumi.Input[str]`) - Gets or sets the ipTag type: Example FirstPartyUsage.
              * `tag` (`pulumi.Input[str]`) - Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc

            * `location` (`pulumi.Input[str]`) - Resource location.
            * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
            * `public_ip_address_version` (`pulumi.Input[str]`) - The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
            * `public_ip_allocation_method` (`pulumi.Input[str]`) - The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
            * `resource_guid` (`pulumi.Input[str]`) - The resource GUID property of the public IP resource.
            * `sku` (`pulumi.Input[dict]`) - The public IP address SKU.
              * `name` (`pulumi.Input[str]`) - Name of a public IP address SKU.

            * `tags` (`pulumi.Input[dict]`) - Resource tags.
            * `zones` (`pulumi.Input[list]`) - A list of availability zones denoting the IP allocated for the resource needs to come from.

          * `subnet` (`pulumi.Input[dict]`) - The reference of the subnet resource.
            * `address_prefix` (`pulumi.Input[str]`) - The address prefix for the subnet.
            * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
            * `id` (`pulumi.Input[str]`) - Resource ID.
            * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
            * `network_security_group` (`pulumi.Input[dict]`) - The reference of the NetworkSecurityGroup resource.
              * `default_security_rules` (`pulumi.Input[list]`) - The default security rules of network security group.
                * `access` (`pulumi.Input[str]`) - The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
                * `description` (`pulumi.Input[str]`) - A description for this rule. Restricted to 140 chars.
                * `destination_address_prefix` (`pulumi.Input[str]`) - The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                * `destination_address_prefixes` (`pulumi.Input[list]`) - The destination address prefixes. CIDR or destination IP ranges.
                * `destination_application_security_groups` (`pulumi.Input[list]`) - The application security group specified as destination.
                  * `id` (`pulumi.Input[str]`) - Resource ID.
                  * `location` (`pulumi.Input[str]`) - Resource location.
                  * `tags` (`pulumi.Input[dict]`) - Resource tags.

                * `destination_port_range` (`pulumi.Input[str]`) - The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                * `destination_port_ranges` (`pulumi.Input[list]`) - The destination port ranges.
                * `direction` (`pulumi.Input[str]`) - The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
                * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`pulumi.Input[str]`) - Resource ID.
                * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                * `priority` (`pulumi.Input[float]`) - The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
                * `protocol` (`pulumi.Input[str]`) - Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
                * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
                * `source_address_prefix` (`pulumi.Input[str]`) - The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
                * `source_address_prefixes` (`pulumi.Input[list]`) - The CIDR or source IP ranges.
                * `source_application_security_groups` (`pulumi.Input[list]`) - The application security group specified as source.
                * `source_port_range` (`pulumi.Input[str]`) - The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
                * `source_port_ranges` (`pulumi.Input[list]`) - The source port ranges.

              * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
              * `id` (`pulumi.Input[str]`) - Resource ID.
              * `location` (`pulumi.Input[str]`) - Resource location.
              * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `resource_guid` (`pulumi.Input[str]`) - The resource GUID property of the network security group resource.
              * `security_rules` (`pulumi.Input[list]`) - A collection of security rules of the network security group.
              * `tags` (`pulumi.Input[dict]`) - Resource tags.

            * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the resource.
            * `resource_navigation_links` (`pulumi.Input[list]`) - Gets an array of references to the external resources using subnet.
              * `id` (`pulumi.Input[str]`) - Resource ID.
              * `link` (`pulumi.Input[str]`) - Link to the external resource
              * `linked_resource_type` (`pulumi.Input[str]`) - Resource type of the linked resource.
              * `name` (`pulumi.Input[str]`) - Name of the resource that is unique within a resource group. This name can be used to access the resource.

            * `route_table` (`pulumi.Input[dict]`) - The reference of the RouteTable resource.
              * `disable_bgp_route_propagation` (`pulumi.Input[bool]`) - Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
              * `etag` (`pulumi.Input[str]`) - Gets a unique read-only string that changes whenever the resource is updated.
              * `id` (`pulumi.Input[str]`) - Resource ID.
              * `location` (`pulumi.Input[str]`) - Resource location.
              * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
              * `routes` (`pulumi.Input[list]`) - Collection of routes contained within a route table.
                * `address_prefix` (`pulumi.Input[str]`) - The destination CIDR to which the route applies.
                * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
                * `id` (`pulumi.Input[str]`) - Resource ID.
                * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
                * `next_hop_ip_address` (`pulumi.Input[str]`) - The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
                * `next_hop_type` (`pulumi.Input[str]`) - The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
                * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

              * `tags` (`pulumi.Input[dict]`) - Resource tags.

            * `service_endpoints` (`pulumi.Input[list]`) - An array of service endpoints.
              * `locations` (`pulumi.Input[list]`) - A list of locations.
              * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the resource.
              * `service` (`pulumi.Input[str]`) - The type of the endpoint service.

          * `zones` (`pulumi.Input[list]`) - A list of availability zones denoting the IP allocated for the resource needs to come from.

        The **inbound_nat_pools** object supports the following:

          * `backend_port` (`pulumi.Input[float]`) - The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
          * `enable_floating_ip` (`pulumi.Input[bool]`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
          * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
          * `frontend_ip_configuration` (`pulumi.Input[dict]`) - A reference to frontend IP addresses.
            * `id` (`pulumi.Input[str]`) - Resource ID.

          * `frontend_port_range_end` (`pulumi.Input[float]`) - The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
          * `frontend_port_range_start` (`pulumi.Input[float]`) - The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
          * `id` (`pulumi.Input[str]`) - Resource ID.
          * `idle_timeout_in_minutes` (`pulumi.Input[float]`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
          * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `protocol` (`pulumi.Input[str]`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
          * `provisioning_state` (`pulumi.Input[str]`) - Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        The **inbound_nat_rules** object supports the following:

          * `backend_port` (`pulumi.Input[float]`) - The port used for the internal endpoint. Acceptable values range from 1 to 65535.
          * `enable_floating_ip` (`pulumi.Input[bool]`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
          * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
          * `frontend_ip_configuration` (`pulumi.Input[dict]`) - A reference to frontend IP addresses.
          * `frontend_port` (`pulumi.Input[float]`) - The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
          * `id` (`pulumi.Input[str]`) - Resource ID.
          * `idle_timeout_in_minutes` (`pulumi.Input[float]`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
          * `name` (`pulumi.Input[str]`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `protocol` (`pulumi.Input[str]`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
          * `provisioning_state` (`pulumi.Input[str]`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        The **load_balancing_rules** object supports the following:

          * `backend_address_pool` (`pulumi.Input[dict]`) - A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
          * `backend_port` (`pulumi.Input[float]`) - The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
          * `disable_outbound_snat` (`pulumi.Input[bool]`) - Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
          * `enable_floating_ip` (`pulumi.Input[bool]`) - Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
          * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
          * `frontend_ip_configuration` (`pulumi.Input[dict]`) - A reference to frontend IP addresses.
          * `frontend_port` (`pulumi.Input[float]`) - The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
          * `id` (`pulumi.Input[str]`) - Resource ID.
          * `idle_timeout_in_minutes` (`pulumi.Input[float]`) - The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
          * `load_distribution` (`pulumi.Input[str]`) - The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
          * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `probe` (`pulumi.Input[dict]`) - The reference of the load balancer probe used by the load balancing rule.
          * `protocol` (`pulumi.Input[str]`) - The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
          * `provisioning_state` (`pulumi.Input[str]`) - Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        The **outbound_nat_rules** object supports the following:

          * `allocated_outbound_ports` (`pulumi.Input[float]`) - The number of outbound ports to be used for NAT.
          * `backend_address_pool` (`pulumi.Input[dict]`) - A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
          * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
          * `frontend_ip_configurations` (`pulumi.Input[list]`) - The Frontend IP addresses of the load balancer.
          * `id` (`pulumi.Input[str]`) - Resource ID.
          * `name` (`pulumi.Input[str]`) - The name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `provisioning_state` (`pulumi.Input[str]`) - Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        The **probes** object supports the following:

          * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated.
          * `id` (`pulumi.Input[str]`) - Resource ID.
          * `interval_in_seconds` (`pulumi.Input[float]`) - The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
          * `name` (`pulumi.Input[str]`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
          * `number_of_probes` (`pulumi.Input[float]`) - The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
          * `port` (`pulumi.Input[float]`) - The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
          * `protocol` (`pulumi.Input[str]`) - The protocol of the end point. Possible values are: 'Http', 'Tcp' or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
          * `provisioning_state` (`pulumi.Input[str]`) - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
          * `request_path` (`pulumi.Input[str]`) - The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.

        The **sku** object supports the following:

          * `name` (`pulumi.Input[str]`) - Name of a load balancer SKU.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['backend_address_pools'] = backend_address_pools
            __props__['etag'] = etag
            __props__['frontend_ip_configurations'] = frontend_ip_configurations
            __props__['id'] = id
            __props__['inbound_nat_pools'] = inbound_nat_pools
            __props__['inbound_nat_rules'] = inbound_nat_rules
            __props__['load_balancing_rules'] = load_balancing_rules
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['outbound_nat_rules'] = outbound_nat_rules
            __props__['probes'] = probes
            __props__['provisioning_state'] = provisioning_state
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['resource_guid'] = resource_guid
            __props__['sku'] = sku
            __props__['tags'] = tags
            __props__['type'] = None
        super(LoadBalancer, __self__).__init__(
            'azurerm:network/v20180201:LoadBalancer',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing LoadBalancer resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return LoadBalancer(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
