# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class RecordSet(pulumi.CustomResource):
    etag: pulumi.Output[str]
    """
    The etag of the record set.
    """
    name: pulumi.Output[str]
    """
    The name of the record set.
    """
    properties: pulumi.Output[dict]
    """
    The properties of the record set.
      * `aaaa_records` (`list`) - The list of AAAA records in the record set.
        * `ipv6_address` (`str`) - The IPv6 address of this AAAA record.

      * `a_records` (`list`) - The list of A records in the record set.
        * `ipv4_address` (`str`) - The IPv4 address of this A record.

      * `cname_record` (`dict`) - The CNAME record in the  record set.
        * `cname` (`str`) - The canonical name for this CNAME record.

      * `mx_records` (`list`) - The list of MX records in the record set.
        * `exchange` (`str`) - The domain name of the mail host for this MX record.
        * `preference` (`float`) - The preference value for this MX record.

      * `ns_records` (`list`) - The list of NS records in the record set.
        * `nsdname` (`str`) - The name server name for this NS record.

      * `ptr_records` (`list`) - The list of PTR records in the record set.
        * `ptrdname` (`str`) - The PTR target domain name for this PTR record.

      * `soa_record` (`dict`) - The SOA record in the record set.
        * `email` (`str`) - The email contact for this SOA record.
        * `expire_time` (`float`) - The expire time for this SOA record.
        * `host` (`str`) - The domain name of the authoritative name server for this SOA record.
        * `minimum_ttl` (`float`) - The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        * `refresh_time` (`float`) - The refresh value for this SOA record.
        * `retry_time` (`float`) - The retry time for this SOA record.
        * `serial_number` (`float`) - The serial number for this SOA record.

      * `srv_records` (`list`) - The list of SRV records in the record set.
        * `port` (`float`) - The port value for this SRV record.
        * `priority` (`float`) - The priority value for this SRV record.
        * `target` (`str`) - The target domain name for this SRV record.
        * `weight` (`float`) - The weight value for this SRV record.

      * `ttl` (`float`) - The TTL (time-to-live) of the records in the record set.
      * `txt_records` (`list`) - The list of TXT records in the record set.
        * `value` (`list`) - The text value of this TXT record.

      * `caa_records` (`list`) - The list of CAA records in the record set.
        * `flags` (`float`) - The flags for this CAA record as an integer between 0 and 255.
        * `tag` (`str`) - The tag for this CAA record.
        * `value` (`str`) - The value for this CAA record.

      * `fqdn` (`str`) - Fully qualified domain name of the record set.
      * `metadata` (`dict`) - The metadata attached to the record set.
      * `provisioning_state` (`str`) - provisioning State of the record set.
      * `target_resource` (`dict`) - A reference to an azure resource from where the dns resource value is taken.
        * `id` (`str`) - Resource Id.
    """
    type: pulumi.Output[str]
    """
    The type of the record set.
    """
    def __init__(__self__, resource_name, opts=None, etag=None, name=None, properties=None, record_type=None, resource_group_name=None, zone_name=None, __props__=None, __name__=None, __opts__=None):
        """
        Describes a DNS record set (a collection of DNS records with the same name and type).

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] etag: The etag of the record set.
        :param pulumi.Input[str] name: The name of the record set, relative to the name of the zone.
        :param pulumi.Input[dict] properties: The properties of the record set.
        :param pulumi.Input[str] record_type: The type of DNS record in this record set. Record sets of type SOA can be updated but not created (they are created when the DNS zone is created).
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[str] zone_name: The name of the DNS zone (without a terminating dot).

        The **properties** object supports the following:

          * `aaaa_records` (`pulumi.Input[list]`) - The list of AAAA records in the record set.
            * `ipv6_address` (`pulumi.Input[str]`) - The IPv6 address of this AAAA record.

          * `a_records` (`pulumi.Input[list]`) - The list of A records in the record set.
            * `ipv4_address` (`pulumi.Input[str]`) - The IPv4 address of this A record.

          * `cname_record` (`pulumi.Input[dict]`) - The CNAME record in the  record set.
            * `cname` (`pulumi.Input[str]`) - The canonical name for this CNAME record.

          * `mx_records` (`pulumi.Input[list]`) - The list of MX records in the record set.
            * `exchange` (`pulumi.Input[str]`) - The domain name of the mail host for this MX record.
            * `preference` (`pulumi.Input[float]`) - The preference value for this MX record.

          * `ns_records` (`pulumi.Input[list]`) - The list of NS records in the record set.
            * `nsdname` (`pulumi.Input[str]`) - The name server name for this NS record.

          * `ptr_records` (`pulumi.Input[list]`) - The list of PTR records in the record set.
            * `ptrdname` (`pulumi.Input[str]`) - The PTR target domain name for this PTR record.

          * `soa_record` (`pulumi.Input[dict]`) - The SOA record in the record set.
            * `email` (`pulumi.Input[str]`) - The email contact for this SOA record.
            * `expire_time` (`pulumi.Input[float]`) - The expire time for this SOA record.
            * `host` (`pulumi.Input[str]`) - The domain name of the authoritative name server for this SOA record.
            * `minimum_ttl` (`pulumi.Input[float]`) - The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
            * `refresh_time` (`pulumi.Input[float]`) - The refresh value for this SOA record.
            * `retry_time` (`pulumi.Input[float]`) - The retry time for this SOA record.
            * `serial_number` (`pulumi.Input[float]`) - The serial number for this SOA record.

          * `srv_records` (`pulumi.Input[list]`) - The list of SRV records in the record set.
            * `port` (`pulumi.Input[float]`) - The port value for this SRV record.
            * `priority` (`pulumi.Input[float]`) - The priority value for this SRV record.
            * `target` (`pulumi.Input[str]`) - The target domain name for this SRV record.
            * `weight` (`pulumi.Input[float]`) - The weight value for this SRV record.

          * `ttl` (`pulumi.Input[float]`) - The TTL (time-to-live) of the records in the record set.
          * `txt_records` (`pulumi.Input[list]`) - The list of TXT records in the record set.
            * `value` (`pulumi.Input[list]`) - The text value of this TXT record.

          * `caa_records` (`pulumi.Input[list]`) - The list of CAA records in the record set.
            * `flags` (`pulumi.Input[float]`) - The flags for this CAA record as an integer between 0 and 255.
            * `tag` (`pulumi.Input[str]`) - The tag for this CAA record.
            * `value` (`pulumi.Input[str]`) - The value for this CAA record.

          * `metadata` (`pulumi.Input[dict]`) - The metadata attached to the record set.
          * `target_resource` (`pulumi.Input[dict]`) - A reference to an azure resource from where the dns resource value is taken.
            * `id` (`pulumi.Input[str]`) - Resource Id.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['etag'] = etag
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if record_type is None:
                raise TypeError("Missing required property 'record_type'")
            __props__['record_type'] = record_type
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            if zone_name is None:
                raise TypeError("Missing required property 'zone_name'")
            __props__['zone_name'] = zone_name
            __props__['type'] = None
        super(RecordSet, __self__).__init__(
            'azurerm:network/v20180501:RecordSet',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing RecordSet resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return RecordSet(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
