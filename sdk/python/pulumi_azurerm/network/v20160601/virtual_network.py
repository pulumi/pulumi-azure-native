# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class VirtualNetwork(pulumi.CustomResource):
    etag: pulumi.Output[str]
    """
    Gets a unique read-only string that changes whenever the resource is updated
    """
    location: pulumi.Output[str]
    """
    Resource location
    """
    name: pulumi.Output[str]
    """
    Resource name
    """
    properties: pulumi.Output[dict]
    tags: pulumi.Output[dict]
    """
    Resource tags
    """
    type: pulumi.Output[str]
    """
    Resource type
    """
    def __init__(__self__, resource_name, opts=None, virtual_network_peerings=None, address_space=None, dhcp_options=None, etag=None, id=None, location=None, name=None, provisioning_state=None, resource_group_name=None, resource_guid=None, subnets=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Virtual Network resource

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] virtual_network_peerings: Gets or sets list of peerings in a VirtualNetwork
        :param pulumi.Input[dict] address_space: Gets or sets AddressSpace that contains an array of IP address ranges that can be used by subnets
        :param pulumi.Input[dict] dhcp_options: Gets or sets DHCPOptions that contains an array of DNS servers available to VMs deployed in the virtual network
        :param pulumi.Input[str] etag: Gets a unique read-only string that changes whenever the resource is updated
        :param pulumi.Input[str] id: Resource Id
        :param pulumi.Input[str] location: Resource location
        :param pulumi.Input[str] name: The name of the virtual network.
        :param pulumi.Input[str] provisioning_state: Gets provisioning state of the PublicIP resource Updating/Deleting/Failed
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[str] resource_guid: Gets or sets resource guid property of the VirtualNetwork resource
        :param pulumi.Input[list] subnets: Gets or sets list of subnets in a VirtualNetwork
        :param pulumi.Input[dict] tags: Resource tags

        The **virtual_network_peerings** object supports the following:

          * `allow_forwarded_traffic` (`pulumi.Input[bool]`) - Gets or sets whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed
          * `allow_gateway_transit` (`pulumi.Input[bool]`) - Gets or sets if gatewayLinks can be used in remote virtual networkâ€™s link to this virtual network
          * `allow_virtual_network_access` (`pulumi.Input[bool]`) - Gets or sets whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space
          * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated
          * `id` (`pulumi.Input[str]`) - Resource Id
          * `name` (`pulumi.Input[str]`) - Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource
          * `peering_state` (`pulumi.Input[str]`) - Gets the status of the virtual network peering
          * `provisioning_state` (`pulumi.Input[str]`) - Gets provisioning state of the resource
          * `remote_virtual_network` (`pulumi.Input[dict]`) - Gets or sets the reference of the remote virtual network
            * `id` (`pulumi.Input[str]`) - Resource Id

          * `use_remote_gateways` (`pulumi.Input[bool]`) - Gets or sets if remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only 1 peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.

        The **address_space** object supports the following:

          * `address_prefixes` (`pulumi.Input[list]`) - Gets or sets list of address blocks reserved for this virtual network in CIDR notation

        The **dhcp_options** object supports the following:

          * `dns_servers` (`pulumi.Input[list]`) - Gets or sets list of DNS servers IP addresses

        The **subnets** object supports the following:

          * `address_prefix` (`pulumi.Input[str]`) - Gets or sets Address prefix for the subnet.
          * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated
          * `id` (`pulumi.Input[str]`) - Resource Id
          * `name` (`pulumi.Input[str]`) - Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource
          * `network_security_group` (`pulumi.Input[dict]`) - Gets or sets the reference of the NetworkSecurityGroup resource
            * `default_security_rules` (`pulumi.Input[list]`) - Gets or default security rules of network security group
              * `access` (`pulumi.Input[str]`) - Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'
              * `description` (`pulumi.Input[str]`) - Gets or sets a description for this rule. Restricted to 140 chars.
              * `destination_address_prefix` (`pulumi.Input[str]`) - Gets or sets destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. 
              * `destination_port_range` (`pulumi.Input[str]`) - Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
              * `direction` (`pulumi.Input[str]`) - Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
              * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated
              * `id` (`pulumi.Input[str]`) - Resource Id
              * `name` (`pulumi.Input[str]`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource
              * `priority` (`pulumi.Input[float]`) - Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
              * `protocol` (`pulumi.Input[str]`) - Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
              * `provisioning_state` (`pulumi.Input[str]`) - Gets provisioning state of the PublicIP resource Updating/Deleting/Failed
              * `source_address_prefix` (`pulumi.Input[str]`) - Gets or sets source address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
              * `source_port_range` (`pulumi.Input[str]`) - Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.

            * `etag` (`pulumi.Input[str]`) - Gets a unique read-only string that changes whenever the resource is updated
            * `id` (`pulumi.Input[str]`) - Resource Id
            * `location` (`pulumi.Input[str]`) - Resource location
            * `provisioning_state` (`pulumi.Input[str]`) - Gets provisioning state of the PublicIP resource Updating/Deleting/Failed
            * `resource_guid` (`pulumi.Input[str]`) - Gets or sets resource guid property of the network security group resource
            * `security_rules` (`pulumi.Input[list]`) - Gets or sets security rules of network security group
            * `tags` (`pulumi.Input[dict]`) - Resource tags

          * `provisioning_state` (`pulumi.Input[str]`) - Gets provisioning state of the resource
          * `resource_navigation_links` (`pulumi.Input[list]`) - Gets array of references to the external resources using subnet
            * `id` (`pulumi.Input[str]`) - Resource Id
            * `link` (`pulumi.Input[str]`) - Link to the external resource
            * `linked_resource_type` (`pulumi.Input[str]`) - Resource type of the linked resource
            * `name` (`pulumi.Input[str]`) - Name of the resource that is unique within a resource group. This name can be used to access the resource

          * `route_table` (`pulumi.Input[dict]`) - Gets or sets the reference of the RouteTable resource
            * `etag` (`pulumi.Input[str]`) - Gets a unique read-only string that changes whenever the resource is updated
            * `id` (`pulumi.Input[str]`) - Resource Id
            * `location` (`pulumi.Input[str]`) - Resource location
            * `provisioning_state` (`pulumi.Input[str]`) - Gets provisioning state of the resource Updating/Deleting/Failed
            * `routes` (`pulumi.Input[list]`) - Gets or sets Routes in a Route Table
              * `address_prefix` (`pulumi.Input[str]`) - Gets or sets the destination CIDR to which the route applies.
              * `etag` (`pulumi.Input[str]`) - A unique read-only string that changes whenever the resource is updated
              * `id` (`pulumi.Input[str]`) - Resource Id
              * `name` (`pulumi.Input[str]`) - Gets name of the resource that is unique within a resource group. This name can be used to access the resource
              * `next_hop_ip_address` (`pulumi.Input[str]`) - Gets or sets the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
              * `next_hop_type` (`pulumi.Input[str]`) - Gets or sets the type of Azure hop the packet should be sent to.
              * `provisioning_state` (`pulumi.Input[str]`) - Gets provisioning state of the resource Updating/Deleting/Failed

            * `tags` (`pulumi.Input[dict]`) - Resource tags
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['virtual_network_peerings'] = virtual_network_peerings
            __props__['address_space'] = address_space
            __props__['dhcp_options'] = dhcp_options
            __props__['etag'] = etag
            __props__['id'] = id
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['provisioning_state'] = provisioning_state
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['resource_guid'] = resource_guid
            __props__['subnets'] = subnets
            __props__['tags'] = tags
            __props__['properties'] = None
            __props__['type'] = None
        super(VirtualNetwork, __self__).__init__(
            'azurerm:network/v20160601:VirtualNetwork',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing VirtualNetwork resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return VirtualNetwork(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
