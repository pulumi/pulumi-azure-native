# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetApplicationGatewayPrivateEndpointConnectionResult:
    """
    Private Endpoint connection on an application gateway.
    """
    def __init__(__self__, etag=None, link_identifier=None, name=None, private_endpoint=None, private_link_service_connection_state=None, provisioning_state=None, type=None):
        if etag and not isinstance(etag, str):
            raise TypeError("Expected argument 'etag' to be a str")
        __self__.etag = etag
        """
        A unique read-only string that changes whenever the resource is updated.
        """
        if link_identifier and not isinstance(link_identifier, str):
            raise TypeError("Expected argument 'link_identifier' to be a str")
        __self__.link_identifier = link_identifier
        """
        The consumer link id.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Name of the private endpoint connection on an application gateway.
        """
        if private_endpoint and not isinstance(private_endpoint, dict):
            raise TypeError("Expected argument 'private_endpoint' to be a dict")
        __self__.private_endpoint = private_endpoint
        """
        The resource of private end point.
        """
        if private_link_service_connection_state and not isinstance(private_link_service_connection_state, dict):
            raise TypeError("Expected argument 'private_link_service_connection_state' to be a dict")
        __self__.private_link_service_connection_state = private_link_service_connection_state
        """
        A collection of information about the state of the connection between service consumer and provider.
        """
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        __self__.provisioning_state = provisioning_state
        """
        The provisioning state of the application gateway private endpoint connection resource.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Type of the resource.
        """


class AwaitableGetApplicationGatewayPrivateEndpointConnectionResult(GetApplicationGatewayPrivateEndpointConnectionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetApplicationGatewayPrivateEndpointConnectionResult(
            etag=self.etag,
            link_identifier=self.link_identifier,
            name=self.name,
            private_endpoint=self.private_endpoint,
            private_link_service_connection_state=self.private_link_service_connection_state,
            provisioning_state=self.provisioning_state,
            type=self.type)


def get_application_gateway_private_endpoint_connection(application_gateway_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str application_gateway_name: The name of the application gateway.
    :param str name: The name of the application gateway private endpoint connection.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['applicationGatewayName'] = application_gateway_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:network/v20200501:getApplicationGatewayPrivateEndpointConnection', __args__, opts=opts).value

    return AwaitableGetApplicationGatewayPrivateEndpointConnectionResult(
        etag=__ret__.get('etag'),
        link_identifier=__ret__.get('linkIdentifier'),
        name=__ret__.get('name'),
        private_endpoint=__ret__.get('privateEndpoint'),
        private_link_service_connection_state=__ret__.get('privateLinkServiceConnectionState'),
        provisioning_state=__ret__.get('provisioningState'),
        type=__ret__.get('type'))
