# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetPrivateDnsZoneGroupResult:
    """
    Private dns zone group resource.
    """
    def __init__(__self__, etag=None, name=None, private_dns_zone_configs=None, provisioning_state=None):
        if etag and not isinstance(etag, str):
            raise TypeError("Expected argument 'etag' to be a str")
        __self__.etag = etag
        """
        A unique read-only string that changes whenever the resource is updated.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Name of the resource that is unique within a resource group. This name can be used to access the resource.
        """
        if private_dns_zone_configs and not isinstance(private_dns_zone_configs, list):
            raise TypeError("Expected argument 'private_dns_zone_configs' to be a list")
        __self__.private_dns_zone_configs = private_dns_zone_configs
        """
        A collection of private dns zone configurations of the private dns zone group.
        """
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        __self__.provisioning_state = provisioning_state
        """
        The provisioning state of the private dns zone group resource.
        """


class AwaitableGetPrivateDnsZoneGroupResult(GetPrivateDnsZoneGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPrivateDnsZoneGroupResult(
            etag=self.etag,
            name=self.name,
            private_dns_zone_configs=self.private_dns_zone_configs,
            provisioning_state=self.provisioning_state)


def get_private_dns_zone_group(name=None, private_endpoint_name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: The name of the private dns zone group.
    :param str private_endpoint_name: The name of the private endpoint.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['privateEndpointName'] = private_endpoint_name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:network/v20200401:getPrivateDnsZoneGroup', __args__, opts=opts).value

    return AwaitableGetPrivateDnsZoneGroupResult(
        etag=__ret__.get('etag'),
        name=__ret__.get('name'),
        private_dns_zone_configs=__ret__.get('privateDnsZoneConfigs'),
        provisioning_state=__ret__.get('provisioningState'))
