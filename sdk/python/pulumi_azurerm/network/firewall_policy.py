# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class FirewallPolicy(pulumi.CustomResource):
    etag: pulumi.Output[str]
    """
    A unique read-only string that changes whenever the resource is updated.
    """
    identity: pulumi.Output[dict]
    """
    The identity of the firewall policy.
      * `principal_id` (`str`) - The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
      * `tenant_id` (`str`) - The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
      * `type` (`str`) - The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
      * `user_assigned_identities` (`dict`) - The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
    """
    location: pulumi.Output[str]
    """
    Resource location.
    """
    name: pulumi.Output[str]
    """
    Resource name.
    """
    properties: pulumi.Output[dict]
    """
    Properties of the firewall policy.
      * `base_policy` (`dict`) - The parent firewall policy from which rules are inherited.
        * `id` (`str`) - Resource ID.

      * `child_policies` (`list`) - List of references to Child Firewall Policies.
      * `dns_settings` (`dict`) - DNS Proxy Settings definition.
        * `enable_proxy` (`bool`) - Enable DNS Proxy on Firewalls attached to the Firewall Policy.
        * `require_proxy_for_network_rules` (`bool`) - FQDNs in Network Rules are supported when set to true.
        * `servers` (`list`) - List of Custom DNS Servers.

      * `firewalls` (`list`) - List of references to Azure Firewalls that this Firewall Policy is associated with.
      * `intrusion_system_mode` (`str`) - The operation mode for Intrusion system.
      * `provisioning_state` (`str`) - The provisioning state of the firewall policy resource.
      * `rule_collection_groups` (`list`) - List of references to FirewallPolicyRuleCollectionGroups.
      * `threat_intel_mode` (`str`) - The operation mode for Threat Intelligence.
      * `threat_intel_whitelist` (`dict`) - ThreatIntel Whitelist for Firewall Policy.
        * `fqdns` (`list`) - List of FQDNs for the ThreatIntel Whitelist.
        * `ip_addresses` (`list`) - List of IP addresses for the ThreatIntel Whitelist.

      * `transport_security` (`dict`) - TLS Configuration definition.
        * `certificate_authority` (`dict`) - The CA used for intermediate CA generation.
          * `name` (`str`) - Name of the CA certificate.
          * `properties` (`dict`) - Properties of the certificate authority.
            * `key_vault_secret_id` (`str`) - Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.

        * `excluded_domains` (`list`) - List of domains which are excluded from TLS termination.
        * `trusted_root_certificates` (`list`) - Certificates which are to be trusted by the firewall.
          * `name` (`str`) - Name of the trusted root certificate that is unique within a firewall policy.
          * `properties` (`dict`) - Properties of the trusted root authorities.
            * `key_vault_secret_id` (`str`) - Secret Id of (base-64 encoded unencrypted pfx) the public certificate data stored in KeyVault.
    """
    tags: pulumi.Output[dict]
    """
    Resource tags.
    """
    type: pulumi.Output[str]
    """
    Resource type.
    """
    def __init__(__self__, resource_name, opts=None, id=None, identity=None, location=None, name=None, properties=None, resource_group_name=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        FirewallPolicy Resource.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] id: Resource ID.
        :param pulumi.Input[dict] identity: The identity of the firewall policy.
        :param pulumi.Input[str] location: Resource location.
        :param pulumi.Input[str] name: The name of the Firewall Policy.
        :param pulumi.Input[dict] properties: Properties of the firewall policy.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[dict] tags: Resource tags.

        The **identity** object supports the following:

          * `type` (`pulumi.Input[str]`) - The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
          * `user_assigned_identities` (`pulumi.Input[dict]`) - The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.

        The **properties** object supports the following:

          * `base_policy` (`pulumi.Input[dict]`) - The parent firewall policy from which rules are inherited.
            * `id` (`pulumi.Input[str]`) - Resource ID.

          * `dns_settings` (`pulumi.Input[dict]`) - DNS Proxy Settings definition.
            * `enable_proxy` (`pulumi.Input[bool]`) - Enable DNS Proxy on Firewalls attached to the Firewall Policy.
            * `require_proxy_for_network_rules` (`pulumi.Input[bool]`) - FQDNs in Network Rules are supported when set to true.
            * `servers` (`pulumi.Input[list]`) - List of Custom DNS Servers.

          * `intrusion_system_mode` (`pulumi.Input[str]`) - The operation mode for Intrusion system.
          * `threat_intel_mode` (`pulumi.Input[str]`) - The operation mode for Threat Intelligence.
          * `threat_intel_whitelist` (`pulumi.Input[dict]`) - ThreatIntel Whitelist for Firewall Policy.
            * `fqdns` (`pulumi.Input[list]`) - List of FQDNs for the ThreatIntel Whitelist.
            * `ip_addresses` (`pulumi.Input[list]`) - List of IP addresses for the ThreatIntel Whitelist.

          * `transport_security` (`pulumi.Input[dict]`) - TLS Configuration definition.
            * `certificate_authority` (`pulumi.Input[dict]`) - The CA used for intermediate CA generation.
              * `name` (`pulumi.Input[str]`) - Name of the CA certificate.
              * `properties` (`pulumi.Input[dict]`) - Properties of the certificate authority.
                * `key_vault_secret_id` (`pulumi.Input[str]`) - Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.

            * `excluded_domains` (`pulumi.Input[list]`) - List of domains which are excluded from TLS termination.
            * `trusted_root_certificates` (`pulumi.Input[list]`) - Certificates which are to be trusted by the firewall.
              * `name` (`pulumi.Input[str]`) - Name of the trusted root certificate that is unique within a firewall policy.
              * `properties` (`pulumi.Input[dict]`) - Properties of the trusted root authorities.
                * `key_vault_secret_id` (`pulumi.Input[str]`) - Secret Id of (base-64 encoded unencrypted pfx) the public certificate data stored in KeyVault.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['id'] = id
            __props__['identity'] = identity
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['etag'] = None
            __props__['type'] = None
        super(FirewallPolicy, __self__).__init__(
            'azurerm:network:FirewallPolicy',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, etag=None, identity=None, location=None, name=None, properties=None, tags=None, type=None):
        """
        Get an existing FirewallPolicy resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] etag: A unique read-only string that changes whenever the resource is updated.
        :param pulumi.Input[dict] identity: The identity of the firewall policy.
        :param pulumi.Input[str] location: Resource location.
        :param pulumi.Input[str] name: Resource name.
        :param pulumi.Input[dict] properties: Properties of the firewall policy.
        :param pulumi.Input[dict] tags: Resource tags.
        :param pulumi.Input[str] type: Resource type.

        The **identity** object supports the following:

          * `principal_id` (`pulumi.Input[str]`) - The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
          * `tenant_id` (`pulumi.Input[str]`) - The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
          * `type` (`pulumi.Input[str]`) - The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
          * `user_assigned_identities` (`pulumi.Input[dict]`) - The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.

        The **properties** object supports the following:

          * `base_policy` (`pulumi.Input[dict]`) - The parent firewall policy from which rules are inherited.
            * `id` (`pulumi.Input[str]`) - Resource ID.

          * `child_policies` (`pulumi.Input[list]`) - List of references to Child Firewall Policies.
          * `dns_settings` (`pulumi.Input[dict]`) - DNS Proxy Settings definition.
            * `enable_proxy` (`pulumi.Input[bool]`) - Enable DNS Proxy on Firewalls attached to the Firewall Policy.
            * `require_proxy_for_network_rules` (`pulumi.Input[bool]`) - FQDNs in Network Rules are supported when set to true.
            * `servers` (`pulumi.Input[list]`) - List of Custom DNS Servers.

          * `firewalls` (`pulumi.Input[list]`) - List of references to Azure Firewalls that this Firewall Policy is associated with.
          * `intrusion_system_mode` (`pulumi.Input[str]`) - The operation mode for Intrusion system.
          * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state of the firewall policy resource.
          * `rule_collection_groups` (`pulumi.Input[list]`) - List of references to FirewallPolicyRuleCollectionGroups.
          * `threat_intel_mode` (`pulumi.Input[str]`) - The operation mode for Threat Intelligence.
          * `threat_intel_whitelist` (`pulumi.Input[dict]`) - ThreatIntel Whitelist for Firewall Policy.
            * `fqdns` (`pulumi.Input[list]`) - List of FQDNs for the ThreatIntel Whitelist.
            * `ip_addresses` (`pulumi.Input[list]`) - List of IP addresses for the ThreatIntel Whitelist.

          * `transport_security` (`pulumi.Input[dict]`) - TLS Configuration definition.
            * `certificate_authority` (`pulumi.Input[dict]`) - The CA used for intermediate CA generation.
              * `name` (`pulumi.Input[str]`) - Name of the CA certificate.
              * `properties` (`pulumi.Input[dict]`) - Properties of the certificate authority.
                * `key_vault_secret_id` (`pulumi.Input[str]`) - Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.

            * `excluded_domains` (`pulumi.Input[list]`) - List of domains which are excluded from TLS termination.
            * `trusted_root_certificates` (`pulumi.Input[list]`) - Certificates which are to be trusted by the firewall.
              * `name` (`pulumi.Input[str]`) - Name of the trusted root certificate that is unique within a firewall policy.
              * `properties` (`pulumi.Input[dict]`) - Properties of the trusted root authorities.
                * `key_vault_secret_id` (`pulumi.Input[str]`) - Secret Id of (base-64 encoded unencrypted pfx) the public certificate data stored in KeyVault.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["etag"] = etag
        __props__["identity"] = identity
        __props__["location"] = location
        __props__["name"] = name
        __props__["properties"] = properties
        __props__["tags"] = tags
        __props__["type"] = type
        return FirewallPolicy(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
