# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetRouteResult:
    """
    Route resource
    """
    def __init__(__self__, address_prefix=None, etag=None, name=None, next_hop_ip_address=None, next_hop_type=None, provisioning_state=None):
        if address_prefix and not isinstance(address_prefix, str):
            raise TypeError("Expected argument 'address_prefix' to be a str")
        __self__.address_prefix = address_prefix
        """
        The destination CIDR to which the route applies.
        """
        if etag and not isinstance(etag, str):
            raise TypeError("Expected argument 'etag' to be a str")
        __self__.etag = etag
        """
        A unique read-only string that changes whenever the resource is updated.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the resource that is unique within a resource group. This name can be used to access the resource.
        """
        if next_hop_ip_address and not isinstance(next_hop_ip_address, str):
            raise TypeError("Expected argument 'next_hop_ip_address' to be a str")
        __self__.next_hop_ip_address = next_hop_ip_address
        """
        The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
        """
        if next_hop_type and not isinstance(next_hop_type, str):
            raise TypeError("Expected argument 'next_hop_type' to be a str")
        __self__.next_hop_type = next_hop_type
        """
        The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
        """
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        __self__.provisioning_state = provisioning_state
        """
        The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        """


class AwaitableGetRouteResult(GetRouteResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRouteResult(
            address_prefix=self.address_prefix,
            etag=self.etag,
            name=self.name,
            next_hop_ip_address=self.next_hop_ip_address,
            next_hop_type=self.next_hop_type,
            provisioning_state=self.provisioning_state)


def get_route(name=None, resource_group_name=None, route_table_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: The name of the route.
    :param str resource_group_name: The name of the resource group.
    :param str route_table_name: The name of the route table.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['routeTableName'] = route_table_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:network/v20181201:getRoute', __args__, opts=opts).value

    return AwaitableGetRouteResult(
        address_prefix=__ret__.get('addressPrefix'),
        etag=__ret__.get('etag'),
        name=__ret__.get('name'),
        next_hop_ip_address=__ret__.get('nextHopIpAddress'),
        next_hop_type=__ret__.get('nextHopType'),
        provisioning_state=__ret__.get('provisioningState'))
