# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListManagerPublicEncryptionKeyResult:
    """
    Represents the secrets encrypted using Symmetric Encryption Key.
    """
    def __init__(__self__, encryption_algorithm=None, value=None, value_certificate_thumbprint=None):
        if encryption_algorithm and not isinstance(encryption_algorithm, str):
            raise TypeError("Expected argument 'encryption_algorithm' to be a str")
        __self__.encryption_algorithm = encryption_algorithm
        """
        The algorithm used to encrypt the "Value".
        """
        if value and not isinstance(value, str):
            raise TypeError("Expected argument 'value' to be a str")
        __self__.value = value
        """
        The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none.
        """
        if value_certificate_thumbprint and not isinstance(value_certificate_thumbprint, str):
            raise TypeError("Expected argument 'value_certificate_thumbprint' to be a str")
        __self__.value_certificate_thumbprint = value_certificate_thumbprint
        """
        The thumbprint of the cert that was used to encrypt "Value".
        """


class AwaitableListManagerPublicEncryptionKeyResult(ListManagerPublicEncryptionKeyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListManagerPublicEncryptionKeyResult(
            encryption_algorithm=self.encryption_algorithm,
            value=self.value,
            value_certificate_thumbprint=self.value_certificate_thumbprint)


def list_manager_public_encryption_key(manager_name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str manager_name: The manager name
    :param str resource_group_name: The resource group name
    """
    __args__ = dict()
    __args__['managerName'] = manager_name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:storsimple/v20170601:listManagerPublicEncryptionKey', __args__, opts=opts).value

    return AwaitableListManagerPublicEncryptionKeyResult(
        encryption_algorithm=__ret__.get('encryptionAlgorithm'),
        value=__ret__.get('value'),
        value_certificate_thumbprint=__ret__.get('valueCertificateThumbprint'))
