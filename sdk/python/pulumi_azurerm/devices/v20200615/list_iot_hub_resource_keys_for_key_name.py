# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class ListIotHubResourceKeysForKeyNameResult:
    """
    The properties of an IoT hub shared access policy.
    """
    def __init__(__self__, key_name=None, primary_key=None, rights=None, secondary_key=None):
        if key_name and not isinstance(key_name, str):
            raise TypeError("Expected argument 'key_name' to be a str")
        __self__.key_name = key_name
        """
        The name of the shared access policy.
        """
        if primary_key and not isinstance(primary_key, str):
            raise TypeError("Expected argument 'primary_key' to be a str")
        __self__.primary_key = primary_key
        """
        The primary key.
        """
        if rights and not isinstance(rights, str):
            raise TypeError("Expected argument 'rights' to be a str")
        __self__.rights = rights
        """
        The permissions assigned to the shared access policy.
        """
        if secondary_key and not isinstance(secondary_key, str):
            raise TypeError("Expected argument 'secondary_key' to be a str")
        __self__.secondary_key = secondary_key
        """
        The secondary key.
        """


class AwaitableListIotHubResourceKeysForKeyNameResult(ListIotHubResourceKeysForKeyNameResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListIotHubResourceKeysForKeyNameResult(
            key_name=self.key_name,
            primary_key=self.primary_key,
            rights=self.rights,
            secondary_key=self.secondary_key)


def list_iot_hub_resource_keys_for_key_name(key_name=None, resource_group_name=None, resource_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str key_name: The name of the shared access policy.
    :param str resource_group_name: The name of the resource group that contains the IoT hub.
    :param str resource_name: The name of the IoT hub.
    """
    __args__ = dict()
    __args__['keyName'] = key_name
    __args__['resourceGroupName'] = resource_group_name
    __args__['resourceName'] = resource_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:devices/v20200615:listIotHubResourceKeysForKeyName', __args__, opts=opts).value

    return AwaitableListIotHubResourceKeysForKeyNameResult(
        key_name=__ret__.get('keyName'),
        primary_key=__ret__.get('primaryKey'),
        rights=__ret__.get('rights'),
        secondary_key=__ret__.get('secondaryKey'))
