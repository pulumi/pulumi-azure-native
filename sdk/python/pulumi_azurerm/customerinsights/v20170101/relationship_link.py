# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class RelationshipLink(pulumi.CustomResource):
    name: pulumi.Output[str]
    """
    Resource name.
    """
    properties: pulumi.Output[dict]
    """
    The definition of relationship link.
      * `description` (`dict`) - Localized descriptions for the Relationship Link.
      * `display_name` (`dict`) - Localized display name for the Relationship Link.
      * `interaction_type` (`str`) - The InteractionType associated with the Relationship Link.
      * `link_name` (`str`) - The name of the Relationship Link.
      * `mappings` (`list`) - The mappings between Interaction and Relationship fields.
        * `interaction_field_name` (`str`) - The field name on the Interaction Type.
        * `link_type` (`str`) - Link type.
        * `relationship_field_name` (`str`) - The field name on the Relationship metadata.

      * `profile_property_references` (`list`) - The property references for the Profile of the Relationship.
        * `interaction_property_name` (`str`) - The interaction property that maps to the profile property.
        * `profile_property_name` (`str`) - The profile property that maps to the interaction property.

      * `provisioning_state` (`str`) - Provisioning state.
      * `related_profile_property_references` (`list`) - The property references for the Related Profile of the Relationship.
      * `relationship_guid_id` (`str`) - The relationship guid id.
      * `relationship_name` (`str`) - The Relationship associated with the Link.
      * `tenant_id` (`str`) - The hub name.
    """
    type: pulumi.Output[str]
    """
    Resource type.
    """
    def __init__(__self__, resource_name, opts=None, description=None, display_name=None, hub_name=None, interaction_type=None, mappings=None, name=None, profile_property_references=None, related_profile_property_references=None, relationship_name=None, resource_group_name=None, __props__=None, __name__=None, __opts__=None):
        """
        The relationship link resource format.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] description: Localized descriptions for the Relationship Link.
        :param pulumi.Input[dict] display_name: Localized display name for the Relationship Link.
        :param pulumi.Input[str] hub_name: The name of the hub.
        :param pulumi.Input[str] interaction_type: The InteractionType associated with the Relationship Link.
        :param pulumi.Input[list] mappings: The mappings between Interaction and Relationship fields.
        :param pulumi.Input[str] name: The name of the relationship link.
        :param pulumi.Input[list] profile_property_references: The property references for the Profile of the Relationship.
        :param pulumi.Input[list] related_profile_property_references: The property references for the Related Profile of the Relationship.
        :param pulumi.Input[str] relationship_name: The Relationship associated with the Link.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.

        The **mappings** object supports the following:

          * `interaction_field_name` (`pulumi.Input[str]`) - The field name on the Interaction Type.
          * `link_type` (`pulumi.Input[str]`) - Link type.
          * `relationship_field_name` (`pulumi.Input[str]`) - The field name on the Relationship metadata.

        The **profile_property_references** object supports the following:

          * `interaction_property_name` (`pulumi.Input[str]`) - The interaction property that maps to the profile property.
          * `profile_property_name` (`pulumi.Input[str]`) - The profile property that maps to the interaction property.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['description'] = description
            __props__['display_name'] = display_name
            if hub_name is None:
                raise TypeError("Missing required property 'hub_name'")
            __props__['hub_name'] = hub_name
            if interaction_type is None:
                raise TypeError("Missing required property 'interaction_type'")
            __props__['interaction_type'] = interaction_type
            __props__['mappings'] = mappings
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            if profile_property_references is None:
                raise TypeError("Missing required property 'profile_property_references'")
            __props__['profile_property_references'] = profile_property_references
            if related_profile_property_references is None:
                raise TypeError("Missing required property 'related_profile_property_references'")
            __props__['related_profile_property_references'] = related_profile_property_references
            if relationship_name is None:
                raise TypeError("Missing required property 'relationship_name'")
            __props__['relationship_name'] = relationship_name
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['properties'] = None
            __props__['type'] = None
        super(RelationshipLink, __self__).__init__(
            'azurerm:customerinsights/v20170101:RelationshipLink',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing RelationshipLink resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return RelationshipLink(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
