# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class Account(pulumi.CustomResource):
    etag: pulumi.Output[str]
    """
    Entity Tag
    """
    identity: pulumi.Output[dict]
    """
    The identity of Cognitive Services account.
      * `principal_id` (`str`) - Principal Id of managed service identity.
      * `tenant_id` (`str`) - Tenant of managed service identity.
      * `type` (`str`) - Type of managed service identity.
      * `user_assigned_identities` (`dict`) - The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
    """
    kind: pulumi.Output[str]
    """
    The Kind of the resource.
    """
    location: pulumi.Output[str]
    """
    The location of the resource
    """
    name: pulumi.Output[str]
    """
    The name of the created account
    """
    properties: pulumi.Output[dict]
    """
    Properties of Cognitive Services account.
      * `api_properties` (`dict`) - The api properties for special APIs.
        * `event_hub_connection_string` (`str`) - (Personalization Only) The flag to enable statistics of Bing Search.
        * `qna_runtime_endpoint` (`str`) - (QnAMaker Only) The runtime endpoint of QnAMaker.
        * `statistics_enabled` (`bool`) - (Bing Search Only) The flag to enable statistics of Bing Search.
        * `storage_account_connection_string` (`str`) - (Personalization Only) The storage account connection string.

      * `capabilities` (`list`) - Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only.
        * `name` (`str`) - The name of the SkuCapability.
        * `value` (`str`) - The value of the SkuCapability.

      * `custom_sub_domain_name` (`str`) - Optional subdomain name used for token-based authentication.
      * `encryption` (`dict`) - The encryption properties for this resource.
        * `key_source` (`str`) - Enumerates the possible value of keySource for Encryption
        * `key_vault_properties` (`dict`) - Properties of KeyVault
          * `key_name` (`str`) - Name of the Key from KeyVault
          * `key_vault_uri` (`str`) - Uri of KeyVault
          * `key_version` (`str`) - Version of the Key from KeyVault

      * `endpoint` (`str`) - Endpoint of the created account.
      * `internal_id` (`str`) - The internal identifier.
      * `network_acls` (`dict`) - A collection of rules governing the accessibility from specific network locations.
        * `default_action` (`str`) - The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
        * `ip_rules` (`list`) - The list of IP address rules.
          * `value` (`str`) - An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).

        * `virtual_network_rules` (`list`) - The list of virtual network rules.
          * `id` (`str`) - Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
          * `ignore_missing_vnet_service_endpoint` (`bool`) - Ignore missing vnet service endpoint or not.
          * `state` (`str`) - Gets the state of virtual network rule.

      * `private_endpoint_connections` (`list`) - The private endpoint connection associated with the Cognitive Services account.
        * `id` (`str`) - Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        * `name` (`str`) - The name of the resource
        * `properties` (`dict`) - Resource properties.
          * `group_ids` (`list`) - The private link resource group ids.
          * `private_endpoint` (`dict`) - The resource of private end point.
            * `id` (`str`) - The ARM identifier for Private Endpoint

          * `private_link_service_connection_state` (`dict`) - A collection of information about the state of the connection between service consumer and provider.
            * `action_required` (`str`) - A message indicating if changes on the service provider require any updates on the consumer.
            * `description` (`str`) - The reason for approval/rejection of the connection.
            * `status` (`str`) - Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.

        * `type` (`str`) - The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.

      * `provisioning_state` (`str`) - Gets the status of the cognitive services account at the time the operation was called.
      * `public_network_access` (`str`) - Whether or not public endpoint access is allowed for this account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
      * `user_owned_storage` (`list`) - The storage accounts for this resource.
        * `resource_id` (`str`) - Full resource id of a Microsoft.Storage resource.
    """
    sku: pulumi.Output[dict]
    """
    The SKU of Cognitive Services account.
      * `name` (`str`) - Gets or sets the sku name. Required for account creation, optional for update.
      * `tier` (`str`) - Gets the sku tier. This is based on the SKU name.
    """
    tags: pulumi.Output[dict]
    """
    Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
    """
    type: pulumi.Output[str]
    """
    Resource type
    """
    def __init__(__self__, resource_name, opts=None, identity=None, kind=None, location=None, name=None, properties=None, resource_group_name=None, sku=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Cognitive Services Account is an Azure resource representing the provisioned account, its type, location and SKU.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] identity: The identity of Cognitive Services account.
        :param pulumi.Input[str] kind: The Kind of the resource.
        :param pulumi.Input[str] location: The location of the resource
        :param pulumi.Input[str] name: The name of Cognitive Services account.
        :param pulumi.Input[dict] properties: Properties of Cognitive Services account.
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[dict] sku: The SKU of Cognitive Services account.
        :param pulumi.Input[dict] tags: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.

        The **identity** object supports the following:

          * `type` (`pulumi.Input[str]`) - Type of managed service identity.
          * `user_assigned_identities` (`pulumi.Input[dict]`) - The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}

        The **properties** object supports the following:

          * `api_properties` (`pulumi.Input[dict]`) - The api properties for special APIs.
            * `event_hub_connection_string` (`pulumi.Input[str]`) - (Personalization Only) The flag to enable statistics of Bing Search.
            * `qna_runtime_endpoint` (`pulumi.Input[str]`) - (QnAMaker Only) The runtime endpoint of QnAMaker.
            * `statistics_enabled` (`pulumi.Input[bool]`) - (Bing Search Only) The flag to enable statistics of Bing Search.
            * `storage_account_connection_string` (`pulumi.Input[str]`) - (Personalization Only) The storage account connection string.

          * `custom_sub_domain_name` (`pulumi.Input[str]`) - Optional subdomain name used for token-based authentication.
          * `encryption` (`pulumi.Input[dict]`) - The encryption properties for this resource.
            * `key_source` (`pulumi.Input[str]`) - Enumerates the possible value of keySource for Encryption
            * `key_vault_properties` (`pulumi.Input[dict]`) - Properties of KeyVault
              * `key_name` (`pulumi.Input[str]`) - Name of the Key from KeyVault
              * `key_vault_uri` (`pulumi.Input[str]`) - Uri of KeyVault
              * `key_version` (`pulumi.Input[str]`) - Version of the Key from KeyVault

          * `network_acls` (`pulumi.Input[dict]`) - A collection of rules governing the accessibility from specific network locations.
            * `default_action` (`pulumi.Input[str]`) - The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
            * `ip_rules` (`pulumi.Input[list]`) - The list of IP address rules.
              * `value` (`pulumi.Input[str]`) - An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).

            * `virtual_network_rules` (`pulumi.Input[list]`) - The list of virtual network rules.
              * `id` (`pulumi.Input[str]`) - Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
              * `ignore_missing_vnet_service_endpoint` (`pulumi.Input[bool]`) - Ignore missing vnet service endpoint or not.
              * `state` (`pulumi.Input[str]`) - Gets the state of virtual network rule.

          * `private_endpoint_connections` (`pulumi.Input[list]`) - The private endpoint connection associated with the Cognitive Services account.
            * `name` (`pulumi.Input[str]`) - The name of the resource
            * `properties` (`pulumi.Input[dict]`) - Resource properties.
              * `group_ids` (`pulumi.Input[list]`) - The private link resource group ids.
              * `private_endpoint` (`pulumi.Input[dict]`) - The resource of private end point.
                * `id` (`pulumi.Input[str]`) - The ARM identifier for Private Endpoint

              * `private_link_service_connection_state` (`pulumi.Input[dict]`) - A collection of information about the state of the connection between service consumer and provider.
                * `action_required` (`pulumi.Input[str]`) - A message indicating if changes on the service provider require any updates on the consumer.
                * `description` (`pulumi.Input[str]`) - The reason for approval/rejection of the connection.
                * `status` (`pulumi.Input[str]`) - Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.

            * `type` (`pulumi.Input[str]`) - The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.

          * `public_network_access` (`pulumi.Input[str]`) - Whether or not public endpoint access is allowed for this account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
          * `user_owned_storage` (`pulumi.Input[list]`) - The storage accounts for this resource.
            * `resource_id` (`pulumi.Input[str]`) - Full resource id of a Microsoft.Storage resource.

        The **sku** object supports the following:

          * `name` (`pulumi.Input[str]`) - Gets or sets the sku name. Required for account creation, optional for update.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['identity'] = identity
            __props__['kind'] = kind
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['sku'] = sku
            __props__['tags'] = tags
            __props__['etag'] = None
            __props__['type'] = None
        super(Account, __self__).__init__(
            'azurerm:cognitiveservices/v20170418:Account',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing Account resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return Account(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
