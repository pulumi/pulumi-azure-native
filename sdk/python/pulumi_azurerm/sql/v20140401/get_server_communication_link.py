# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetServerCommunicationLinkResult:
    """
    Server communication link.
    """
    def __init__(__self__, kind=None, location=None, name=None, partner_server=None, state=None, type=None):
        if kind and not isinstance(kind, str):
            raise TypeError("Expected argument 'kind' to be a str")
        __self__.kind = kind
        """
        Communication link kind.  This property is used for Azure Portal metadata.
        """
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        __self__.location = location
        """
        Communication link location.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Resource name.
        """
        if partner_server and not isinstance(partner_server, str):
            raise TypeError("Expected argument 'partner_server' to be a str")
        __self__.partner_server = partner_server
        """
        The name of the partner server.
        """
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        __self__.state = state
        """
        The state.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Resource type.
        """


class AwaitableGetServerCommunicationLinkResult(GetServerCommunicationLinkResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServerCommunicationLinkResult(
            kind=self.kind,
            location=self.location,
            name=self.name,
            partner_server=self.partner_server,
            state=self.state,
            type=self.type)


def get_server_communication_link(name=None, resource_group_name=None, server_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: The name of the server communication link.
    :param str resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
    :param str server_name: The name of the server.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['serverName'] = server_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:sql/v20140401:getServerCommunicationLink', __args__, opts=opts).value

    return AwaitableGetServerCommunicationLinkResult(
        kind=__ret__.get('kind'),
        location=__ret__.get('location'),
        name=__ret__.get('name'),
        partner_server=__ret__.get('partnerServer'),
        state=__ret__.get('state'),
        type=__ret__.get('type'))
