# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class Image(pulumi.CustomResource):
    location: pulumi.Output[str]
    """
    Resource location
    """
    name: pulumi.Output[str]
    """
    Resource name
    """
    properties: pulumi.Output[dict]
    """
    Describes the properties of an Image.
      * `hyper_v_generation` (`str`) - Gets the HyperVGenerationType of the VirtualMachine created from the image
      * `provisioning_state` (`str`) - The provisioning state.
      * `source_virtual_machine` (`dict`) - The source virtual machine from which Image is created.
        * `id` (`str`) - Resource Id

      * `storage_profile` (`dict`) - Specifies the storage settings for the virtual machine disks.
        * `data_disks` (`list`) - Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          * `blob_uri` (`str`) - The Virtual Hard Disk.
          * `caching` (`str`) - Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
          * `disk_encryption_set` (`dict`) - Specifies the customer managed disk encryption set resource id for the managed image disk.
            * `id` (`str`) - Resource Id

          * `disk_size_gb` (`float`) - Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
          * `lun` (`float`) - Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
          * `managed_disk` (`dict`) - The managedDisk.
          * `snapshot` (`dict`) - The snapshot.
          * `storage_account_type` (`str`) - Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.

        * `os_disk` (`dict`) - Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          * `blob_uri` (`str`) - The Virtual Hard Disk.
          * `caching` (`str`) - Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
          * `disk_encryption_set` (`dict`) - Specifies the customer managed disk encryption set resource id for the managed image disk.
          * `disk_size_gb` (`float`) - Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
          * `managed_disk` (`dict`) - The managedDisk.
          * `os_state` (`str`) - The OS State.
          * `os_type` (`str`) - This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
          * `snapshot` (`dict`) - The snapshot.
          * `storage_account_type` (`str`) - Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.

        * `zone_resilient` (`bool`) - Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).
    """
    tags: pulumi.Output[dict]
    """
    Resource tags
    """
    type: pulumi.Output[str]
    """
    Resource type
    """
    def __init__(__self__, resource_name, opts=None, location=None, name=None, properties=None, resource_group_name=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: Resource location
        :param pulumi.Input[str] name: The name of the image.
        :param pulumi.Input[dict] properties: Describes the properties of an Image.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[dict] tags: Resource tags

        The **properties** object supports the following:

          * `hyper_v_generation` (`pulumi.Input[str]`) - Gets the HyperVGenerationType of the VirtualMachine created from the image
          * `source_virtual_machine` (`pulumi.Input[dict]`) - The source virtual machine from which Image is created.
            * `id` (`pulumi.Input[str]`) - Resource Id

          * `storage_profile` (`pulumi.Input[dict]`) - Specifies the storage settings for the virtual machine disks.
            * `data_disks` (`pulumi.Input[list]`) - Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
              * `blob_uri` (`pulumi.Input[str]`) - The Virtual Hard Disk.
              * `caching` (`pulumi.Input[str]`) - Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
              * `disk_encryption_set` (`pulumi.Input[dict]`) - Specifies the customer managed disk encryption set resource id for the managed image disk.
                * `id` (`pulumi.Input[str]`) - Resource Id

              * `disk_size_gb` (`pulumi.Input[float]`) - Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
              * `lun` (`pulumi.Input[float]`) - Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
              * `managed_disk` (`pulumi.Input[dict]`) - The managedDisk.
              * `snapshot` (`pulumi.Input[dict]`) - The snapshot.
              * `storage_account_type` (`pulumi.Input[str]`) - Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.

            * `os_disk` (`pulumi.Input[dict]`) - Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
              * `blob_uri` (`pulumi.Input[str]`) - The Virtual Hard Disk.
              * `caching` (`pulumi.Input[str]`) - Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
              * `disk_encryption_set` (`pulumi.Input[dict]`) - Specifies the customer managed disk encryption set resource id for the managed image disk.
              * `disk_size_gb` (`pulumi.Input[float]`) - Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
              * `managed_disk` (`pulumi.Input[dict]`) - The managedDisk.
              * `os_state` (`pulumi.Input[str]`) - The OS State.
              * `os_type` (`pulumi.Input[str]`) - This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
              * `snapshot` (`pulumi.Input[dict]`) - The snapshot.
              * `storage_account_type` (`pulumi.Input[str]`) - Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.

            * `zone_resilient` (`pulumi.Input[bool]`) - Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if location is None:
                raise TypeError("Missing required property 'location'")
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['type'] = None
        super(Image, __self__).__init__(
            'azurerm:compute:Image',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, location=None, name=None, properties=None, tags=None, type=None):
        """
        Get an existing Image resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: Resource location
        :param pulumi.Input[str] name: Resource name
        :param pulumi.Input[dict] properties: Describes the properties of an Image.
        :param pulumi.Input[dict] tags: Resource tags
        :param pulumi.Input[str] type: Resource type

        The **properties** object supports the following:

          * `hyper_v_generation` (`pulumi.Input[str]`) - Gets the HyperVGenerationType of the VirtualMachine created from the image
          * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state.
          * `source_virtual_machine` (`pulumi.Input[dict]`) - The source virtual machine from which Image is created.
            * `id` (`pulumi.Input[str]`) - Resource Id

          * `storage_profile` (`pulumi.Input[dict]`) - Specifies the storage settings for the virtual machine disks.
            * `data_disks` (`pulumi.Input[list]`) - Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
              * `blob_uri` (`pulumi.Input[str]`) - The Virtual Hard Disk.
              * `caching` (`pulumi.Input[str]`) - Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
              * `disk_encryption_set` (`pulumi.Input[dict]`) - Specifies the customer managed disk encryption set resource id for the managed image disk.
                * `id` (`pulumi.Input[str]`) - Resource Id

              * `disk_size_gb` (`pulumi.Input[float]`) - Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
              * `lun` (`pulumi.Input[float]`) - Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
              * `managed_disk` (`pulumi.Input[dict]`) - The managedDisk.
              * `snapshot` (`pulumi.Input[dict]`) - The snapshot.
              * `storage_account_type` (`pulumi.Input[str]`) - Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.

            * `os_disk` (`pulumi.Input[dict]`) - Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
              * `blob_uri` (`pulumi.Input[str]`) - The Virtual Hard Disk.
              * `caching` (`pulumi.Input[str]`) - Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
              * `disk_encryption_set` (`pulumi.Input[dict]`) - Specifies the customer managed disk encryption set resource id for the managed image disk.
              * `disk_size_gb` (`pulumi.Input[float]`) - Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
              * `managed_disk` (`pulumi.Input[dict]`) - The managedDisk.
              * `os_state` (`pulumi.Input[str]`) - The OS State.
              * `os_type` (`pulumi.Input[str]`) - This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
              * `snapshot` (`pulumi.Input[dict]`) - The snapshot.
              * `storage_account_type` (`pulumi.Input[str]`) - Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.

            * `zone_resilient` (`pulumi.Input[bool]`) - Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["location"] = location
        __props__["name"] = name
        __props__["properties"] = properties
        __props__["tags"] = tags
        __props__["type"] = type
        return Image(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
