# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetGalleryImageVersionResult:
    """
    Specifies information about the gallery Image Version that you want to create or update.
    """
    def __init__(__self__, location=None, name=None, provisioning_state=None, publishing_profile=None, replication_status=None, storage_profile=None, tags=None, type=None):
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        __self__.location = location
        """
        Resource location
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Resource name
        """
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        __self__.provisioning_state = provisioning_state
        """
        The provisioning state, which only appears in the response.
        """
        if publishing_profile and not isinstance(publishing_profile, dict):
            raise TypeError("Expected argument 'publishing_profile' to be a dict")
        __self__.publishing_profile = publishing_profile
        """
        The publishing profile of a gallery Image Version.
        """
        if replication_status and not isinstance(replication_status, dict):
            raise TypeError("Expected argument 'replication_status' to be a dict")
        __self__.replication_status = replication_status
        """
        This is the replication status of the gallery Image Version.
        """
        if storage_profile and not isinstance(storage_profile, dict):
            raise TypeError("Expected argument 'storage_profile' to be a dict")
        __self__.storage_profile = storage_profile
        """
        This is the storage profile of a Gallery Image Version.
        """
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        __self__.tags = tags
        """
        Resource tags
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Resource type
        """


class AwaitableGetGalleryImageVersionResult(GetGalleryImageVersionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGalleryImageVersionResult(
            location=self.location,
            name=self.name,
            provisioning_state=self.provisioning_state,
            publishing_profile=self.publishing_profile,
            replication_status=self.replication_status,
            storage_profile=self.storage_profile,
            tags=self.tags,
            type=self.type)


def get_gallery_image_version(gallery_image_name=None, gallery_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str gallery_image_name: The name of the gallery Image Definition in which the Image Version resides.
    :param str gallery_name: The name of the Shared Image Gallery in which the Image Definition resides.
    :param str name: The name of the gallery Image Version to be retrieved.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['galleryImageName'] = gallery_image_name
    __args__['galleryName'] = gallery_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:compute/v20190301:getGalleryImageVersion', __args__, opts=opts).value

    return AwaitableGetGalleryImageVersionResult(
        location=__ret__.get('location'),
        name=__ret__.get('name'),
        provisioning_state=__ret__.get('provisioningState'),
        publishing_profile=__ret__.get('publishingProfile'),
        replication_status=__ret__.get('replicationStatus'),
        storage_profile=__ret__.get('storageProfile'),
        tags=__ret__.get('tags'),
        type=__ret__.get('type'))
