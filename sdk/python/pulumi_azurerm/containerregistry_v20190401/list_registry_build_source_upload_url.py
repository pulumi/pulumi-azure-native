# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListRegistryBuildSourceUploadUrlResult:
    """
    The properties of a response to source upload request.
    """
    def __init__(__self__, relative_path=None, upload_url=None):
        if relative_path and not isinstance(relative_path, str):
            raise TypeError("Expected argument 'relative_path' to be a str")
        __self__.relative_path = relative_path
        """
        The relative path to the source. This is used to submit the subsequent queue build request.
        """
        if upload_url and not isinstance(upload_url, str):
            raise TypeError("Expected argument 'upload_url' to be a str")
        __self__.upload_url = upload_url
        """
        The URL where the client can upload the source.
        """


class AwaitableListRegistryBuildSourceUploadUrlResult(ListRegistryBuildSourceUploadUrlResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListRegistryBuildSourceUploadUrlResult(
            relative_path=self.relative_path,
            upload_url=self.upload_url)


def list_registry_build_source_upload_url(registry_name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str registry_name: The name of the container registry.
    :param str resource_group_name: The name of the resource group to which the container registry belongs.
    """
    __args__ = dict()
    __args__['registryName'] = registry_name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:containerregistry/v20190401:listRegistryBuildSourceUploadUrl', __args__, opts=opts).value

    return AwaitableListRegistryBuildSourceUploadUrlResult(
        relative_path=__ret__.get('relativePath'),
        upload_url=__ret__.get('uploadUrl'))
