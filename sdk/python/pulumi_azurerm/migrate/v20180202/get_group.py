# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetGroupResult:
    """
    A group created in a Migration project.
    """
    def __init__(__self__, assessments=None, created_timestamp=None, e_tag=None, machines=None, name=None, type=None, updated_timestamp=None):
        if assessments and not isinstance(assessments, list):
            raise TypeError("Expected argument 'assessments' to be a list")
        __self__.assessments = assessments
        """
        List of References to Assessments created on this group.
        """
        if created_timestamp and not isinstance(created_timestamp, str):
            raise TypeError("Expected argument 'created_timestamp' to be a str")
        __self__.created_timestamp = created_timestamp
        """
        Time when this project was created. Date-Time represented in ISO-8601 format.
        """
        if e_tag and not isinstance(e_tag, str):
            raise TypeError("Expected argument 'e_tag' to be a str")
        __self__.e_tag = e_tag
        """
        For optimistic concurrency control.
        """
        if machines and not isinstance(machines, list):
            raise TypeError("Expected argument 'machines' to be a list")
        __self__.machines = machines
        """
        List of machine names that are part of this group.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Name of the group.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Type of the object = [Microsoft.Migrate/projects/groups].
        """
        if updated_timestamp and not isinstance(updated_timestamp, str):
            raise TypeError("Expected argument 'updated_timestamp' to be a str")
        __self__.updated_timestamp = updated_timestamp
        """
        Time when this project was last updated. Date-Time represented in ISO-8601 format.
        """


class AwaitableGetGroupResult(GetGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGroupResult(
            assessments=self.assessments,
            created_timestamp=self.created_timestamp,
            e_tag=self.e_tag,
            machines=self.machines,
            name=self.name,
            type=self.type,
            updated_timestamp=self.updated_timestamp)


def get_group(name=None, project_name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: Unique name of a group within a project.
    :param str project_name: Name of the Azure Migrate project.
    :param str resource_group_name: Name of the Azure Resource Group that project is part of.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['projectName'] = project_name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:migrate/v20180202:getGroup', __args__, opts=opts).value

    return AwaitableGetGroupResult(
        assessments=__ret__.get('assessments'),
        created_timestamp=__ret__.get('createdTimestamp'),
        e_tag=__ret__.get('eTag'),
        machines=__ret__.get('machines'),
        name=__ret__.get('name'),
        type=__ret__.get('type'),
        updated_timestamp=__ret__.get('updatedTimestamp'))
