# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class IntegrationServiceEnvironment(pulumi.CustomResource):
    location: pulumi.Output[str]
    """
    The resource location.
    """
    name: pulumi.Output[str]
    """
    Gets the resource name.
    """
    properties: pulumi.Output[dict]
    """
    The integration service environment properties.
      * `endpoints_configuration` (`dict`) - The endpoints configuration.
        * `connector` (`dict`) - The connector endpoints.
          * `access_endpoint_ip_addresses` (`list`) - The access endpoint ip address.
            * `address` (`str`) - The address.

          * `outgoing_ip_addresses` (`list`) - The outgoing ip address.

        * `workflow` (`dict`) - The workflow endpoints.

      * `integration_service_environment_id` (`str`) - Gets the tracking id.
      * `network_configuration` (`dict`) - The network configuration.
        * `access_endpoint` (`dict`) - The access endpoint.
          * `type` (`str`) - The access endpoint type.

        * `subnets` (`list`) - The subnets.
          * `id` (`str`) - The resource id.
          * `name` (`str`) - Gets the resource name.
          * `type` (`str`) - Gets the resource type.

        * `virtual_network_address_space` (`str`) - Gets the virtual network address space.

      * `provisioning_state` (`str`) - The provisioning state.
      * `state` (`str`) - The integration service environment state.
    """
    sku: pulumi.Output[dict]
    """
    The sku.
      * `capacity` (`float`) - The sku capacity.
      * `name` (`str`) - The sku name.
    """
    tags: pulumi.Output[dict]
    """
    The resource tags.
    """
    type: pulumi.Output[str]
    """
    Gets the resource type.
    """
    def __init__(__self__, resource_name, opts=None, location=None, name=None, properties=None, resource_group=None, sku=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        The integration service environment.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: The resource location.
        :param pulumi.Input[str] name: The integration service environment name.
        :param pulumi.Input[dict] properties: The integration service environment properties.
        :param pulumi.Input[str] resource_group: The resource group.
        :param pulumi.Input[dict] sku: The sku.
        :param pulumi.Input[dict] tags: The resource tags.

        The **properties** object supports the following:

          * `endpoints_configuration` (`pulumi.Input[dict]`) - The endpoints configuration.
            * `connector` (`pulumi.Input[dict]`) - The connector endpoints.
              * `access_endpoint_ip_addresses` (`pulumi.Input[list]`) - The access endpoint ip address.
                * `address` (`pulumi.Input[str]`) - The address.

              * `outgoing_ip_addresses` (`pulumi.Input[list]`) - The outgoing ip address.

            * `workflow` (`pulumi.Input[dict]`) - The workflow endpoints.

          * `integration_service_environment_id` (`pulumi.Input[str]`) - Gets the tracking id.
          * `network_configuration` (`pulumi.Input[dict]`) - The network configuration.
            * `access_endpoint` (`pulumi.Input[dict]`) - The access endpoint.
              * `type` (`pulumi.Input[str]`) - The access endpoint type.

            * `subnets` (`pulumi.Input[list]`) - The subnets.
              * `id` (`pulumi.Input[str]`) - The resource id.

            * `virtual_network_address_space` (`pulumi.Input[str]`) - Gets the virtual network address space.

          * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state.
          * `state` (`pulumi.Input[str]`) - The integration service environment state.

        The **sku** object supports the following:

          * `capacity` (`pulumi.Input[float]`) - The sku capacity.
          * `name` (`pulumi.Input[str]`) - The sku name.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group is None:
                raise TypeError("Missing required property 'resource_group'")
            __props__['resource_group'] = resource_group
            __props__['sku'] = sku
            __props__['tags'] = tags
            __props__['type'] = None
        super(IntegrationServiceEnvironment, __self__).__init__(
            'azurerm:logic/v20190501:IntegrationServiceEnvironment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing IntegrationServiceEnvironment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return IntegrationServiceEnvironment(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
