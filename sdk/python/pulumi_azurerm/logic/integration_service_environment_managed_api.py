# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class IntegrationServiceEnvironmentManagedApi(pulumi.CustomResource):
    location: pulumi.Output[str]
    """
    The resource location.
    """
    name: pulumi.Output[str]
    """
    Gets the resource name.
    """
    properties: pulumi.Output[dict]
    """
    The api resource properties.
      * `api_definition_url` (`str`) - The API definition.
      * `api_definitions` (`dict`) - The api definitions.
        * `modified_swagger_url` (`str`) - The modified swagger url.
        * `original_swagger_url` (`str`) - The original swagger url.

      * `backend_service` (`dict`) - The backend service.
        * `service_url` (`str`) - The service URL.

      * `capabilities` (`list`) - The capabilities.
      * `category` (`str`) - The category.
      * `connection_parameters` (`dict`) - The connection parameters.
      * `general_information` (`dict`) - The api general information.
        * `description` (`str`) - The description.
        * `display_name` (`str`) - The display name.
        * `icon_url` (`str`) - The icon url.
        * `release_tag` (`str`) - The release tag.
        * `terms_of_use_url` (`str`) - The terms of use url.
        * `tier` (`str`) - The tier.

      * `integration_service_environment` (`dict`) - The integration service environment reference.
        * `id` (`str`) - The resource id.
        * `name` (`str`) - Gets the resource name.
        * `type` (`str`) - Gets the resource type.

      * `metadata` (`dict`) - The metadata.
        * `api_type` (`str`) - The api type.
        * `brand_color` (`str`) - The brand color.
        * `connection_type` (`str`) - The connection type.
        * `deployment_parameters` (`dict`) - The connector deployment parameters metadata.
          * `package_content_link` (`dict`) - The package content link parameter.
            * `description` (`str`) - The description.
            * `display_name` (`str`) - The display name.
            * `is_required` (`bool`) - Indicates whether its required.
            * `type` (`str`) - The type.
            * `visibility` (`str`) - The visibility.

          * `redis_cache_connection_string` (`dict`) - The package content link parameter.

        * `hide_key` (`str`) - The hide key.
        * `provisioning_state` (`str`) - The provisioning state.
        * `source` (`str`) - The source.
        * `tags` (`dict`) - The tags.
        * `wsdl_import_method` (`str`) - The WSDL import method.
        * `wsdl_service` (`dict`) - The WSDL service.
          * `endpoint_qualified_names` (`list`) - The list of endpoints' qualified names.
          * `qualified_name` (`str`) - The qualified name.

      * `name` (`str`) - The name
      * `policies` (`dict`) - The policies for the API.
        * `content` (`str`) - The API level only policies XML as embedded content.
        * `content_link` (`str`) - The content link to the policies.

      * `provisioning_state` (`str`) - The provisioning state.
      * `runtime_urls` (`list`) - The runtime urls.
    """
    tags: pulumi.Output[dict]
    """
    The resource tags.
    """
    type: pulumi.Output[str]
    """
    Gets the resource type.
    """
    def __init__(__self__, resource_name, opts=None, integration_service_environment_name=None, name=None, resource_group=None, __props__=None, __name__=None, __opts__=None):
        """
        The managed api definition.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] integration_service_environment_name: The integration service environment name.
        :param pulumi.Input[str] name: The api name.
        :param pulumi.Input[str] resource_group: The resource group name.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if integration_service_environment_name is None:
                raise TypeError("Missing required property 'integration_service_environment_name'")
            __props__['integration_service_environment_name'] = integration_service_environment_name
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            if resource_group is None:
                raise TypeError("Missing required property 'resource_group'")
            __props__['resource_group'] = resource_group
            __props__['location'] = None
            __props__['properties'] = None
            __props__['tags'] = None
            __props__['type'] = None
        super(IntegrationServiceEnvironmentManagedApi, __self__).__init__(
            'azurerm:logic:IntegrationServiceEnvironmentManagedApi',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, location=None, name=None, properties=None, tags=None, type=None):
        """
        Get an existing IntegrationServiceEnvironmentManagedApi resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: The resource location.
        :param pulumi.Input[str] name: Gets the resource name.
        :param pulumi.Input[dict] properties: The api resource properties.
        :param pulumi.Input[dict] tags: The resource tags.
        :param pulumi.Input[str] type: Gets the resource type.

        The **properties** object supports the following:

          * `api_definition_url` (`pulumi.Input[str]`) - The API definition.
          * `api_definitions` (`pulumi.Input[dict]`) - The api definitions.
            * `modified_swagger_url` (`pulumi.Input[str]`) - The modified swagger url.
            * `original_swagger_url` (`pulumi.Input[str]`) - The original swagger url.

          * `backend_service` (`pulumi.Input[dict]`) - The backend service.
            * `service_url` (`pulumi.Input[str]`) - The service URL.

          * `capabilities` (`pulumi.Input[list]`) - The capabilities.
          * `category` (`pulumi.Input[str]`) - The category.
          * `connection_parameters` (`pulumi.Input[dict]`) - The connection parameters.
          * `general_information` (`pulumi.Input[dict]`) - The api general information.
            * `description` (`pulumi.Input[str]`) - The description.
            * `display_name` (`pulumi.Input[str]`) - The display name.
            * `icon_url` (`pulumi.Input[str]`) - The icon url.
            * `release_tag` (`pulumi.Input[str]`) - The release tag.
            * `terms_of_use_url` (`pulumi.Input[str]`) - The terms of use url.
            * `tier` (`pulumi.Input[str]`) - The tier.

          * `integration_service_environment` (`pulumi.Input[dict]`) - The integration service environment reference.
            * `id` (`pulumi.Input[str]`) - The resource id.
            * `name` (`pulumi.Input[str]`) - Gets the resource name.
            * `type` (`pulumi.Input[str]`) - Gets the resource type.

          * `metadata` (`pulumi.Input[dict]`) - The metadata.
            * `api_type` (`pulumi.Input[str]`) - The api type.
            * `brand_color` (`pulumi.Input[str]`) - The brand color.
            * `connection_type` (`pulumi.Input[str]`) - The connection type.
            * `deployment_parameters` (`pulumi.Input[dict]`) - The connector deployment parameters metadata.
              * `package_content_link` (`pulumi.Input[dict]`) - The package content link parameter.
                * `description` (`pulumi.Input[str]`) - The description.
                * `display_name` (`pulumi.Input[str]`) - The display name.
                * `is_required` (`pulumi.Input[bool]`) - Indicates whether its required.
                * `type` (`pulumi.Input[str]`) - The type.
                * `visibility` (`pulumi.Input[str]`) - The visibility.

              * `redis_cache_connection_string` (`pulumi.Input[dict]`) - The package content link parameter.

            * `hide_key` (`pulumi.Input[str]`) - The hide key.
            * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state.
            * `source` (`pulumi.Input[str]`) - The source.
            * `tags` (`pulumi.Input[dict]`) - The tags.
            * `wsdl_import_method` (`pulumi.Input[str]`) - The WSDL import method.
            * `wsdl_service` (`pulumi.Input[dict]`) - The WSDL service.
              * `endpoint_qualified_names` (`pulumi.Input[list]`) - The list of endpoints' qualified names.
              * `qualified_name` (`pulumi.Input[str]`) - The qualified name.

          * `name` (`pulumi.Input[str]`) - The name
          * `policies` (`pulumi.Input[dict]`) - The policies for the API.
            * `content` (`pulumi.Input[str]`) - The API level only policies XML as embedded content.
            * `content_link` (`pulumi.Input[str]`) - The content link to the policies.

          * `provisioning_state` (`pulumi.Input[str]`) - The provisioning state.
          * `runtime_urls` (`pulumi.Input[list]`) - The runtime urls.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["location"] = location
        __props__["name"] = name
        __props__["properties"] = properties
        __props__["tags"] = tags
        __props__["type"] = type
        return IntegrationServiceEnvironmentManagedApi(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
