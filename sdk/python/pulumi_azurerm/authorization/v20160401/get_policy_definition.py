# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetPolicyDefinitionResult:
    """
    The policy definition.
    """
    def __init__(__self__, description=None, display_name=None, name=None, policy_rule=None, policy_type=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        The policy definition description.
        """
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        __self__.display_name = display_name
        """
        The display name of the policy definition.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI.
        """
        if policy_rule and not isinstance(policy_rule, dict):
            raise TypeError("Expected argument 'policy_rule' to be a dict")
        __self__.policy_rule = policy_rule
        """
        The policy rule.
        """
        if policy_type and not isinstance(policy_type, str):
            raise TypeError("Expected argument 'policy_type' to be a str")
        __self__.policy_type = policy_type
        """
        The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
        """


class AwaitableGetPolicyDefinitionResult(GetPolicyDefinitionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPolicyDefinitionResult(
            description=self.description,
            display_name=self.display_name,
            name=self.name,
            policy_rule=self.policy_rule,
            policy_type=self.policy_type)


def get_policy_definition(name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: The name of the policy definition to get.
    """
    __args__ = dict()
    __args__['name'] = name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:authorization/v20160401:getPolicyDefinition', __args__, opts=opts).value

    return AwaitableGetPolicyDefinitionResult(
        description=__ret__.get('description'),
        display_name=__ret__.get('displayName'),
        name=__ret__.get('name'),
        policy_rule=__ret__.get('policyRule'),
        policy_type=__ret__.get('policyType'))
