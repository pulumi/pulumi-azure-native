# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class NamespaceNotificationHub(pulumi.CustomResource):
    location: pulumi.Output[str]
    """
    Resource location
    """
    name: pulumi.Output[str]
    """
    Resource name
    """
    properties: pulumi.Output[dict]
    """
    Properties of the NotificationHub.
      * `adm_credential` (`dict`) - The AdmCredential of the created NotificationHub
        * `properties` (`dict`) - Properties of NotificationHub AdmCredential.
          * `auth_token_url` (`str`) - The URL of the authorization token.
          * `client_id` (`str`) - The client identifier.
          * `client_secret` (`str`) - The credential secret access key.

      * `apns_credential` (`dict`) - The ApnsCredential of the created NotificationHub
        * `properties` (`dict`) - Properties of NotificationHub ApnsCredential.
          * `apns_certificate` (`str`) - The APNS certificate. Specify if using Certificate Authentication Mode.
          * `app_id` (`str`) - The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.
          * `app_name` (`str`) - The name of the application or BundleId. Specify if using Token Authentication Mode.
          * `certificate_key` (`str`) - The APNS certificate password if it exists.
          * `endpoint` (`str`) - The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.
          * `key_id` (`str`) - A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
          * `thumbprint` (`str`) - The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
          * `token` (`str`) - Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.

      * `authorization_rules` (`list`) - The AuthorizationRules of the created NotificationHub
        * `claim_type` (`str`) - A string that describes the claim type
        * `claim_value` (`str`) - A string that describes the claim value
        * `created_time` (`str`) - The created time for this rule
        * `key_name` (`str`) - A string that describes the authorization rule.
        * `modified_time` (`str`) - The last modified time for this rule
        * `primary_key` (`str`) - A base64-encoded 256-bit primary key for signing and validating the SAS token.
        * `revision` (`float`) - The revision number for the rule
        * `rights` (`list`) - The rights associated with the rule.
        * `secondary_key` (`str`) - A base64-encoded 256-bit primary key for signing and validating the SAS token.

      * `baidu_credential` (`dict`) - The BaiduCredential of the created NotificationHub
        * `properties` (`dict`) - Properties of NotificationHub BaiduCredential.
          * `baidu_api_key` (`str`) - Baidu Api Key.
          * `baidu_end_point` (`str`) - Baidu Endpoint.
          * `baidu_secret_key` (`str`) - Baidu Secret Key

      * `gcm_credential` (`dict`) - The GcmCredential of the created NotificationHub
        * `properties` (`dict`) - Properties of NotificationHub GcmCredential.
          * `gcm_endpoint` (`str`) - The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'
          * `google_api_key` (`str`) - The Google API key.

      * `mpns_credential` (`dict`) - The MpnsCredential of the created NotificationHub
        * `properties` (`dict`) - Properties of NotificationHub MpnsCredential.
          * `certificate_key` (`str`) - The certificate key for this credential.
          * `mpns_certificate` (`str`) - The MPNS certificate.
          * `thumbprint` (`str`) - The MPNS certificate Thumbprint

      * `name` (`str`) - The NotificationHub name.
      * `registration_ttl` (`str`) - The RegistrationTtl of the created NotificationHub
      * `wns_credential` (`dict`) - The WnsCredential of the created NotificationHub
        * `properties` (`dict`) - Properties of NotificationHub WnsCredential.
          * `package_sid` (`str`) - The package ID for this credential.
          * `secret_key` (`str`) - The secret key.
          * `windows_live_endpoint` (`str`) - The Windows Live endpoint.
    """
    sku: pulumi.Output[dict]
    """
    The sku of the created namespace
      * `capacity` (`float`) - The capacity of the resource
      * `family` (`str`) - The Sku Family
      * `name` (`str`) - Name of the notification hub sku
      * `size` (`str`) - The Sku size
      * `tier` (`str`) - The tier of particular sku
    """
    tags: pulumi.Output[dict]
    """
    Resource tags
    """
    type: pulumi.Output[str]
    """
    Resource type
    """
    def __init__(__self__, resource_name, opts=None, location=None, name=None, namespace_name=None, properties=None, resource_group_name=None, sku=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Description of a NotificationHub Resource.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: Resource location
        :param pulumi.Input[str] name: The notification hub name.
        :param pulumi.Input[str] namespace_name: The namespace name.
        :param pulumi.Input[dict] properties: Properties of the NotificationHub.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[dict] sku: The sku of the created namespace
        :param pulumi.Input[dict] tags: Resource tags

        The **properties** object supports the following:

          * `adm_credential` (`pulumi.Input[dict]`) - The AdmCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub AdmCredential.
              * `auth_token_url` (`pulumi.Input[str]`) - The URL of the authorization token.
              * `client_id` (`pulumi.Input[str]`) - The client identifier.
              * `client_secret` (`pulumi.Input[str]`) - The credential secret access key.

          * `apns_credential` (`pulumi.Input[dict]`) - The ApnsCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub ApnsCredential.
              * `apns_certificate` (`pulumi.Input[str]`) - The APNS certificate. Specify if using Certificate Authentication Mode.
              * `app_id` (`pulumi.Input[str]`) - The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.
              * `app_name` (`pulumi.Input[str]`) - The name of the application or BundleId. Specify if using Token Authentication Mode.
              * `certificate_key` (`pulumi.Input[str]`) - The APNS certificate password if it exists.
              * `endpoint` (`pulumi.Input[str]`) - The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.
              * `key_id` (`pulumi.Input[str]`) - A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
              * `thumbprint` (`pulumi.Input[str]`) - The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
              * `token` (`pulumi.Input[str]`) - Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.

          * `authorization_rules` (`pulumi.Input[list]`) - The AuthorizationRules of the created NotificationHub
            * `rights` (`pulumi.Input[list]`) - The rights associated with the rule.

          * `baidu_credential` (`pulumi.Input[dict]`) - The BaiduCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub BaiduCredential.
              * `baidu_api_key` (`pulumi.Input[str]`) - Baidu Api Key.
              * `baidu_end_point` (`pulumi.Input[str]`) - Baidu Endpoint.
              * `baidu_secret_key` (`pulumi.Input[str]`) - Baidu Secret Key

          * `gcm_credential` (`pulumi.Input[dict]`) - The GcmCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub GcmCredential.
              * `gcm_endpoint` (`pulumi.Input[str]`) - The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'
              * `google_api_key` (`pulumi.Input[str]`) - The Google API key.

          * `mpns_credential` (`pulumi.Input[dict]`) - The MpnsCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub MpnsCredential.
              * `certificate_key` (`pulumi.Input[str]`) - The certificate key for this credential.
              * `mpns_certificate` (`pulumi.Input[str]`) - The MPNS certificate.
              * `thumbprint` (`pulumi.Input[str]`) - The MPNS certificate Thumbprint

          * `name` (`pulumi.Input[str]`) - The NotificationHub name.
          * `registration_ttl` (`pulumi.Input[str]`) - The RegistrationTtl of the created NotificationHub
          * `wns_credential` (`pulumi.Input[dict]`) - The WnsCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub WnsCredential.
              * `package_sid` (`pulumi.Input[str]`) - The package ID for this credential.
              * `secret_key` (`pulumi.Input[str]`) - The secret key.
              * `windows_live_endpoint` (`pulumi.Input[str]`) - The Windows Live endpoint.

        The **sku** object supports the following:

          * `capacity` (`pulumi.Input[float]`) - The capacity of the resource
          * `family` (`pulumi.Input[str]`) - The Sku Family
          * `name` (`pulumi.Input[str]`) - Name of the notification hub sku
          * `size` (`pulumi.Input[str]`) - The Sku size
          * `tier` (`pulumi.Input[str]`) - The tier of particular sku
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            if namespace_name is None:
                raise TypeError("Missing required property 'namespace_name'")
            __props__['namespace_name'] = namespace_name
            if properties is None:
                raise TypeError("Missing required property 'properties'")
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['sku'] = sku
            __props__['tags'] = tags
            __props__['type'] = None
        super(NamespaceNotificationHub, __self__).__init__(
            'azurerm:notificationhubs:NamespaceNotificationHub',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, location=None, name=None, properties=None, sku=None, tags=None, type=None):
        """
        Get an existing NamespaceNotificationHub resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: Resource location
        :param pulumi.Input[str] name: Resource name
        :param pulumi.Input[dict] properties: Properties of the NotificationHub.
        :param pulumi.Input[dict] sku: The sku of the created namespace
        :param pulumi.Input[dict] tags: Resource tags
        :param pulumi.Input[str] type: Resource type

        The **properties** object supports the following:

          * `adm_credential` (`pulumi.Input[dict]`) - The AdmCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub AdmCredential.
              * `auth_token_url` (`pulumi.Input[str]`) - The URL of the authorization token.
              * `client_id` (`pulumi.Input[str]`) - The client identifier.
              * `client_secret` (`pulumi.Input[str]`) - The credential secret access key.

          * `apns_credential` (`pulumi.Input[dict]`) - The ApnsCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub ApnsCredential.
              * `apns_certificate` (`pulumi.Input[str]`) - The APNS certificate. Specify if using Certificate Authentication Mode.
              * `app_id` (`pulumi.Input[str]`) - The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.
              * `app_name` (`pulumi.Input[str]`) - The name of the application or BundleId. Specify if using Token Authentication Mode.
              * `certificate_key` (`pulumi.Input[str]`) - The APNS certificate password if it exists.
              * `endpoint` (`pulumi.Input[str]`) - The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.
              * `key_id` (`pulumi.Input[str]`) - A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
              * `thumbprint` (`pulumi.Input[str]`) - The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
              * `token` (`pulumi.Input[str]`) - Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.

          * `authorization_rules` (`pulumi.Input[list]`) - The AuthorizationRules of the created NotificationHub
            * `claim_type` (`pulumi.Input[str]`) - A string that describes the claim type
            * `claim_value` (`pulumi.Input[str]`) - A string that describes the claim value
            * `created_time` (`pulumi.Input[str]`) - The created time for this rule
            * `key_name` (`pulumi.Input[str]`) - A string that describes the authorization rule.
            * `modified_time` (`pulumi.Input[str]`) - The last modified time for this rule
            * `primary_key` (`pulumi.Input[str]`) - A base64-encoded 256-bit primary key for signing and validating the SAS token.
            * `revision` (`pulumi.Input[float]`) - The revision number for the rule
            * `rights` (`pulumi.Input[list]`) - The rights associated with the rule.
            * `secondary_key` (`pulumi.Input[str]`) - A base64-encoded 256-bit primary key for signing and validating the SAS token.

          * `baidu_credential` (`pulumi.Input[dict]`) - The BaiduCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub BaiduCredential.
              * `baidu_api_key` (`pulumi.Input[str]`) - Baidu Api Key.
              * `baidu_end_point` (`pulumi.Input[str]`) - Baidu Endpoint.
              * `baidu_secret_key` (`pulumi.Input[str]`) - Baidu Secret Key

          * `gcm_credential` (`pulumi.Input[dict]`) - The GcmCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub GcmCredential.
              * `gcm_endpoint` (`pulumi.Input[str]`) - The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'
              * `google_api_key` (`pulumi.Input[str]`) - The Google API key.

          * `mpns_credential` (`pulumi.Input[dict]`) - The MpnsCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub MpnsCredential.
              * `certificate_key` (`pulumi.Input[str]`) - The certificate key for this credential.
              * `mpns_certificate` (`pulumi.Input[str]`) - The MPNS certificate.
              * `thumbprint` (`pulumi.Input[str]`) - The MPNS certificate Thumbprint

          * `name` (`pulumi.Input[str]`) - The NotificationHub name.
          * `registration_ttl` (`pulumi.Input[str]`) - The RegistrationTtl of the created NotificationHub
          * `wns_credential` (`pulumi.Input[dict]`) - The WnsCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Properties of NotificationHub WnsCredential.
              * `package_sid` (`pulumi.Input[str]`) - The package ID for this credential.
              * `secret_key` (`pulumi.Input[str]`) - The secret key.
              * `windows_live_endpoint` (`pulumi.Input[str]`) - The Windows Live endpoint.

        The **sku** object supports the following:

          * `capacity` (`pulumi.Input[float]`) - The capacity of the resource
          * `family` (`pulumi.Input[str]`) - The Sku Family
          * `name` (`pulumi.Input[str]`) - Name of the notification hub sku
          * `size` (`pulumi.Input[str]`) - The Sku size
          * `tier` (`pulumi.Input[str]`) - The tier of particular sku
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["location"] = location
        __props__["name"] = name
        __props__["properties"] = properties
        __props__["sku"] = sku
        __props__["tags"] = tags
        __props__["type"] = type
        return NamespaceNotificationHub(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
