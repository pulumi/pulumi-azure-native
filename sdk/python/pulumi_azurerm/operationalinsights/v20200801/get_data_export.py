# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetDataExportResult:
    """
    The top level data export resource container.
    """
    def __init__(__self__, all_tables=None, created_date=None, data_export_id=None, enable=None, event_hub_name=None, last_modified_date=None, name=None, resource_id=None, table_names=None, type=None):
        if all_tables and not isinstance(all_tables, bool):
            raise TypeError("Expected argument 'all_tables' to be a bool")
        __self__.all_tables = all_tables
        """
        When ‘true’, all workspace's tables are exported.
        """
        if created_date and not isinstance(created_date, str):
            raise TypeError("Expected argument 'created_date' to be a str")
        __self__.created_date = created_date
        """
        The latest data export rule modification time.
        """
        if data_export_id and not isinstance(data_export_id, str):
            raise TypeError("Expected argument 'data_export_id' to be a str")
        __self__.data_export_id = data_export_id
        """
        The data export rule ID.
        """
        if enable and not isinstance(enable, bool):
            raise TypeError("Expected argument 'enable' to be a bool")
        __self__.enable = enable
        """
        Active when enabled.
        """
        if event_hub_name and not isinstance(event_hub_name, str):
            raise TypeError("Expected argument 'event_hub_name' to be a str")
        __self__.event_hub_name = event_hub_name
        """
        Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.
        """
        if last_modified_date and not isinstance(last_modified_date, str):
            raise TypeError("Expected argument 'last_modified_date' to be a str")
        __self__.last_modified_date = last_modified_date
        """
        Date and time when the export was last modified.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the resource
        """
        if resource_id and not isinstance(resource_id, str):
            raise TypeError("Expected argument 'resource_id' to be a str")
        __self__.resource_id = resource_id
        """
        The destination resource ID. This can be copied from the Properties entry of the destination resource in Azure.
        """
        if table_names and not isinstance(table_names, list):
            raise TypeError("Expected argument 'table_names' to be a list")
        __self__.table_names = table_names
        """
        An array of tables to export, for example: [“Heartbeat, SecurityEvent”].
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        """


class AwaitableGetDataExportResult(GetDataExportResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDataExportResult(
            all_tables=self.all_tables,
            created_date=self.created_date,
            data_export_id=self.data_export_id,
            enable=self.enable,
            event_hub_name=self.event_hub_name,
            last_modified_date=self.last_modified_date,
            name=self.name,
            resource_id=self.resource_id,
            table_names=self.table_names,
            type=self.type)


def get_data_export(name=None, resource_group_name=None, workspace_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: The data export rule name.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str workspace_name: The name of the workspace.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['workspaceName'] = workspace_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:operationalinsights/v20200801:getDataExport', __args__, opts=opts).value

    return AwaitableGetDataExportResult(
        all_tables=__ret__.get('allTables'),
        created_date=__ret__.get('createdDate'),
        data_export_id=__ret__.get('dataExportId'),
        enable=__ret__.get('enable'),
        event_hub_name=__ret__.get('eventHubName'),
        last_modified_date=__ret__.get('lastModifiedDate'),
        name=__ret__.get('name'),
        resource_id=__ret__.get('resourceId'),
        table_names=__ret__.get('tableNames'),
        type=__ret__.get('type'))
