# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetSavedSearchResult:
    """
    Value object for saved search results.
    """
    def __init__(__self__, category=None, display_name=None, etag=None, function_alias=None, function_parameters=None, name=None, query=None, tags=None, type=None, version=None):
        if category and not isinstance(category, str):
            raise TypeError("Expected argument 'category' to be a str")
        __self__.category = category
        """
        The category of the saved search. This helps the user to find a saved search faster. 
        """
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        __self__.display_name = display_name
        """
        Saved search display name.
        """
        if etag and not isinstance(etag, str):
            raise TypeError("Expected argument 'etag' to be a str")
        __self__.etag = etag
        """
        The ETag of the saved search.
        """
        if function_alias and not isinstance(function_alias, str):
            raise TypeError("Expected argument 'function_alias' to be a str")
        __self__.function_alias = function_alias
        """
        The function alias if query serves as a function.
        """
        if function_parameters and not isinstance(function_parameters, str):
            raise TypeError("Expected argument 'function_parameters' to be a str")
        __self__.function_parameters = function_parameters
        """
        The optional function parameters if query serves as a function. Value should be in the following format: 'param-name1:type1 = default_value1, param-name2:type2 = default_value2'. For more examples and proper syntax please refer to https://docs.microsoft.com/en-us/azure/kusto/query/functions/user-defined-functions.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the resource
        """
        if query and not isinstance(query, str):
            raise TypeError("Expected argument 'query' to be a str")
        __self__.query = query
        """
        The query expression for the saved search.
        """
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        __self__.tags = tags
        """
        The tags attached to the saved search.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        """
        if version and not isinstance(version, float):
            raise TypeError("Expected argument 'version' to be a float")
        __self__.version = version
        """
        The version number of the query language. The current version is 2 and is the default.
        """


class AwaitableGetSavedSearchResult(GetSavedSearchResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSavedSearchResult(
            category=self.category,
            display_name=self.display_name,
            etag=self.etag,
            function_alias=self.function_alias,
            function_parameters=self.function_parameters,
            name=self.name,
            query=self.query,
            tags=self.tags,
            type=self.type,
            version=self.version)


def get_saved_search(name=None, resource_group_name=None, workspace_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: The id of the saved search.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str workspace_name: The name of the workspace.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['workspaceName'] = workspace_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:operationalinsights/v20200801:getSavedSearch', __args__, opts=opts).value

    return AwaitableGetSavedSearchResult(
        category=__ret__.get('category'),
        display_name=__ret__.get('displayName'),
        etag=__ret__.get('etag'),
        function_alias=__ret__.get('functionAlias'),
        function_parameters=__ret__.get('functionParameters'),
        name=__ret__.get('name'),
        query=__ret__.get('query'),
        tags=__ret__.get('tags'),
        type=__ret__.get('type'),
        version=__ret__.get('version'))
