# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetEnvironmentSettingResult:
    """
    Represents settings of an environment, from which environment instances would be created
    """
    def __init__(__self__, configuration_state=None, description=None, last_changed=None, last_published=None, latest_operation_result=None, location=None, name=None, provisioning_state=None, publishing_state=None, resource_settings=None, tags=None, title=None, type=None, unique_identifier=None):
        if configuration_state and not isinstance(configuration_state, str):
            raise TypeError("Expected argument 'configuration_state' to be a str")
        __self__.configuration_state = configuration_state
        """
        Describes the user's progress in configuring their environment setting
        """
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        Describes the environment and its resource settings
        """
        if last_changed and not isinstance(last_changed, str):
            raise TypeError("Expected argument 'last_changed' to be a str")
        __self__.last_changed = last_changed
        """
        Time when the template VM was last changed.
        """
        if last_published and not isinstance(last_published, str):
            raise TypeError("Expected argument 'last_published' to be a str")
        __self__.last_published = last_published
        """
        Time when the template VM was last sent for publishing.
        """
        if latest_operation_result and not isinstance(latest_operation_result, dict):
            raise TypeError("Expected argument 'latest_operation_result' to be a dict")
        __self__.latest_operation_result = latest_operation_result
        """
        The details of the latest operation. ex: status, error
        """
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        __self__.location = location
        """
        The location of the resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the resource.
        """
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        __self__.provisioning_state = provisioning_state
        """
        The provisioning status of the resource.
        """
        if publishing_state and not isinstance(publishing_state, str):
            raise TypeError("Expected argument 'publishing_state' to be a str")
        __self__.publishing_state = publishing_state
        """
        Describes the readiness of this environment setting
        """
        if resource_settings and not isinstance(resource_settings, dict):
            raise TypeError("Expected argument 'resource_settings' to be a dict")
        __self__.resource_settings = resource_settings
        """
        The resource specific settings
        """
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        __self__.tags = tags
        """
        The tags of the resource.
        """
        if title and not isinstance(title, str):
            raise TypeError("Expected argument 'title' to be a str")
        __self__.title = title
        """
        Brief title describing the environment and its resource settings
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The type of the resource.
        """
        if unique_identifier and not isinstance(unique_identifier, str):
            raise TypeError("Expected argument 'unique_identifier' to be a str")
        __self__.unique_identifier = unique_identifier
        """
        The unique immutable identifier of a resource (Guid).
        """


class AwaitableGetEnvironmentSettingResult(GetEnvironmentSettingResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEnvironmentSettingResult(
            configuration_state=self.configuration_state,
            description=self.description,
            last_changed=self.last_changed,
            last_published=self.last_published,
            latest_operation_result=self.latest_operation_result,
            location=self.location,
            name=self.name,
            provisioning_state=self.provisioning_state,
            publishing_state=self.publishing_state,
            resource_settings=self.resource_settings,
            tags=self.tags,
            title=self.title,
            type=self.type,
            unique_identifier=self.unique_identifier)


def get_environment_setting(expand=None, lab_account_name=None, lab_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str expand: Specify the $expand query. Example: 'properties($select=publishingState)'
    :param str lab_account_name: The name of the lab Account.
    :param str lab_name: The name of the lab.
    :param str name: The name of the environment Setting.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['expand'] = expand
    __args__['labAccountName'] = lab_account_name
    __args__['labName'] = lab_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:labservices/v20181015:getEnvironmentSetting', __args__, opts=opts).value

    return AwaitableGetEnvironmentSettingResult(
        configuration_state=__ret__.get('configurationState'),
        description=__ret__.get('description'),
        last_changed=__ret__.get('lastChanged'),
        last_published=__ret__.get('lastPublished'),
        latest_operation_result=__ret__.get('latestOperationResult'),
        location=__ret__.get('location'),
        name=__ret__.get('name'),
        provisioning_state=__ret__.get('provisioningState'),
        publishing_state=__ret__.get('publishingState'),
        resource_settings=__ret__.get('resourceSettings'),
        tags=__ret__.get('tags'),
        title=__ret__.get('title'),
        type=__ret__.get('type'),
        unique_identifier=__ret__.get('uniqueIdentifier'))
