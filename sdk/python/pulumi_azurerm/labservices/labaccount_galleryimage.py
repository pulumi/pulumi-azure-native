# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class LabaccountGalleryimage(pulumi.CustomResource):
    location: pulumi.Output[str]
    """
    The location of the resource.
    """
    name: pulumi.Output[str]
    """
    The name of the resource.
    """
    properties: pulumi.Output[dict]
    """
    The gallery image properties
      * `author` (`str`) - The author of the gallery image.
      * `created_date` (`str`) - The creation date of the gallery image.
      * `description` (`str`) - The description of the gallery image.
      * `icon` (`str`) - The icon of the gallery image.
      * `image_reference` (`dict`) - The image reference of the gallery image.
        * `offer` (`str`) - The offer of the gallery image.
        * `os_type` (`str`) - The OS type of the gallery image.
        * `publisher` (`str`) - The publisher of the gallery image.
        * `sku` (`str`) - The SKU of the gallery image.
        * `version` (`str`) - The version of the gallery image.

      * `is_enabled` (`bool`) - Indicates whether this gallery image is enabled.
      * `is_override` (`bool`) - Indicates whether this gallery has been overridden for this lab account
      * `is_plan_authorized` (`bool`) - Indicates if the plan has been authorized for programmatic deployment.
      * `latest_operation_result` (`dict`) - The details of the latest operation. ex: status, error
        * `error_code` (`str`) - Error code on failure.
        * `error_message` (`str`) - The error message.
        * `http_method` (`str`) - The HttpMethod - PUT/POST/DELETE for the operation.
        * `operation_url` (`str`) - The URL to use to check long-running operation status
        * `request_uri` (`str`) - Request URI of the operation.
        * `status` (`str`) - The current status of the operation.

      * `plan_id` (`str`) - The third party plan that applies to this image
      * `provisioning_state` (`str`) - The provisioning status of the resource.
      * `unique_identifier` (`str`) - The unique immutable identifier of a resource (Guid).
    """
    tags: pulumi.Output[dict]
    """
    The tags of the resource.
    """
    type: pulumi.Output[str]
    """
    The type of the resource.
    """
    def __init__(__self__, resource_name, opts=None, lab_account_name=None, location=None, name=None, properties=None, resource_group_name=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Represents an image from the Azure Marketplace

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] lab_account_name: The name of the lab Account.
        :param pulumi.Input[str] location: The location of the resource.
        :param pulumi.Input[str] name: The name of the gallery Image.
        :param pulumi.Input[dict] properties: The gallery image properties
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[dict] tags: The tags of the resource.

        The **properties** object supports the following:

          * `is_enabled` (`pulumi.Input[bool]`) - Indicates whether this gallery image is enabled.
          * `is_override` (`pulumi.Input[bool]`) - Indicates whether this gallery has been overridden for this lab account
          * `is_plan_authorized` (`pulumi.Input[bool]`) - Indicates if the plan has been authorized for programmatic deployment.
          * `provisioning_state` (`pulumi.Input[str]`) - The provisioning status of the resource.
          * `unique_identifier` (`pulumi.Input[str]`) - The unique immutable identifier of a resource (Guid).
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if lab_account_name is None:
                raise TypeError("Missing required property 'lab_account_name'")
            __props__['lab_account_name'] = lab_account_name
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['type'] = None
        super(LabaccountGalleryimage, __self__).__init__(
            'azurerm:labservices:LabaccountGalleryimage',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, location=None, name=None, properties=None, tags=None, type=None):
        """
        Get an existing LabaccountGalleryimage resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: The location of the resource.
        :param pulumi.Input[str] name: The name of the resource.
        :param pulumi.Input[dict] properties: The gallery image properties
        :param pulumi.Input[dict] tags: The tags of the resource.
        :param pulumi.Input[str] type: The type of the resource.

        The **properties** object supports the following:

          * `author` (`pulumi.Input[str]`) - The author of the gallery image.
          * `created_date` (`pulumi.Input[str]`) - The creation date of the gallery image.
          * `description` (`pulumi.Input[str]`) - The description of the gallery image.
          * `icon` (`pulumi.Input[str]`) - The icon of the gallery image.
          * `image_reference` (`pulumi.Input[dict]`) - The image reference of the gallery image.
            * `offer` (`pulumi.Input[str]`) - The offer of the gallery image.
            * `os_type` (`pulumi.Input[str]`) - The OS type of the gallery image.
            * `publisher` (`pulumi.Input[str]`) - The publisher of the gallery image.
            * `sku` (`pulumi.Input[str]`) - The SKU of the gallery image.
            * `version` (`pulumi.Input[str]`) - The version of the gallery image.

          * `is_enabled` (`pulumi.Input[bool]`) - Indicates whether this gallery image is enabled.
          * `is_override` (`pulumi.Input[bool]`) - Indicates whether this gallery has been overridden for this lab account
          * `is_plan_authorized` (`pulumi.Input[bool]`) - Indicates if the plan has been authorized for programmatic deployment.
          * `latest_operation_result` (`pulumi.Input[dict]`) - The details of the latest operation. ex: status, error
            * `error_code` (`pulumi.Input[str]`) - Error code on failure.
            * `error_message` (`pulumi.Input[str]`) - The error message.
            * `http_method` (`pulumi.Input[str]`) - The HttpMethod - PUT/POST/DELETE for the operation.
            * `operation_url` (`pulumi.Input[str]`) - The URL to use to check long-running operation status
            * `request_uri` (`pulumi.Input[str]`) - Request URI of the operation.
            * `status` (`pulumi.Input[str]`) - The current status of the operation.

          * `plan_id` (`pulumi.Input[str]`) - The third party plan that applies to this image
          * `provisioning_state` (`pulumi.Input[str]`) - The provisioning status of the resource.
          * `unique_identifier` (`pulumi.Input[str]`) - The unique immutable identifier of a resource (Guid).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["location"] = location
        __props__["name"] = name
        __props__["properties"] = properties
        __props__["tags"] = tags
        __props__["type"] = type
        return LabaccountGalleryimage(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
