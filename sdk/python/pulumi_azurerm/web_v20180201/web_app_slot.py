# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class WebAppSlot(pulumi.CustomResource):
    identity: pulumi.Output[dict]
    """
    Managed service identity.
      * `principal_id` (`str`) - Principal Id of managed service identity.
      * `tenant_id` (`str`) - Tenant of managed service identity.
      * `type` (`str`) - Type of managed service identity.
      * `user_assigned_identities` (`dict`) - The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
    """
    kind: pulumi.Output[str]
    """
    Kind of resource.
    """
    location: pulumi.Output[str]
    """
    Resource Location.
    """
    name: pulumi.Output[str]
    """
    Resource Name.
    """
    properties: pulumi.Output[dict]
    """
    Site resource specific properties
      * `availability_state` (`str`) - Management information availability state for the app.
      * `client_affinity_enabled` (`bool`) - <code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.
      * `client_cert_enabled` (`bool`) - <code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.
      * `client_cert_exclusion_paths` (`str`) - client certificate authentication comma-separated exclusion paths
      * `cloning_info` (`dict`) - If specified during app creation, the app is cloned from a source app.
        * `app_settings_overrides` (`dict`) - Application setting overrides for cloned app. If specified, these settings override the settings cloned 
          from source app. Otherwise, application settings from source app are retained.
        * `clone_custom_host_names` (`bool`) - <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
        * `clone_source_control` (`bool`) - <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
        * `configure_load_balancing` (`bool`) - <code>true</code> to configure load balancing for source and destination app.
        * `correlation_id` (`str`) - Correlation ID of cloning operation. This ID ties multiple cloning operations
          together to use the same snapshot.
        * `hosting_environment` (`str`) - App Service Environment.
        * `overwrite` (`bool`) - <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
        * `source_web_app_id` (`str`) - ARM resource ID of the source app. App resource ID is of the form 
          /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and 
          /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
        * `source_web_app_location` (`str`) - Location of source app ex: West US or North Europe
        * `traffic_manager_profile_id` (`str`) - ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form 
          /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
        * `traffic_manager_profile_name` (`str`) - Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.

      * `container_size` (`float`) - Size of the function container.
      * `daily_memory_time_quota` (`float`) - Maximum allowed daily memory-time quota (applicable on dynamic apps only).
      * `default_host_name` (`str`) - Default hostname of the app. Read-only.
      * `enabled` (`bool`) - <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).
      * `enabled_host_names` (`list`) - Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,
        the app is not served on those hostnames.
      * `geo_distributions` (`list`) - GeoDistributions for this site
        * `location` (`str`) - Location.
        * `number_of_workers` (`float`) - NumberOfWorkers.

      * `host_name_ssl_states` (`list`) - Hostname SSL states are used to manage the SSL bindings for app's hostnames.
        * `host_type` (`str`) - Indicates whether the hostname is a standard or repository hostname.
        * `name` (`str`) - Hostname.
        * `ssl_state` (`str`) - SSL type.
        * `thumbprint` (`str`) - SSL certificate thumbprint.
        * `to_update` (`bool`) - Set to <code>true</code> to update existing hostname.
        * `virtual_ip` (`str`) - Virtual IP address assigned to the hostname if IP based SSL is enabled.

      * `host_names` (`list`) - Hostnames associated with the app.
      * `host_names_disabled` (`bool`) - <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
         If <code>true</code>, the app is only accessible via API management process.
      * `hosting_environment_profile` (`dict`) - App Service Environment to use for the app.
        * `id` (`str`) - Resource ID of the App Service Environment.
        * `name` (`str`) - Name of the App Service Environment.
        * `type` (`str`) - Resource type of the App Service Environment.

      * `https_only` (`bool`) - HttpsOnly: configures a web site to accept only https requests. Issues redirect for
        http requests
      * `hyper_v` (`bool`) - Hyper-V sandbox.
      * `in_progress_operation_id` (`str`) - Specifies an operation id if this site has a pending operation.
      * `is_default_container` (`bool`) - <code>true</code> if the app is a default container; otherwise, <code>false</code>.
      * `is_xenon` (`bool`) - Obsolete: Hyper-V sandbox.
      * `last_modified_time_utc` (`str`) - Last time the app was modified, in UTC. Read-only.
      * `max_number_of_workers` (`float`) - Maximum number of workers.
        This only applies to Functions container.
      * `outbound_ip_addresses` (`str`) - List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.
      * `possible_outbound_ip_addresses` (`str`) - List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants. Read-only.
      * `redundancy_mode` (`str`) - Site redundancy mode
      * `repository_site_name` (`str`) - Name of the repository site.
      * `reserved` (`bool`) - <code>true</code> if reserved; otherwise, <code>false</code>.
      * `resource_group` (`str`) - Name of the resource group the app belongs to. Read-only.
      * `scm_site_also_stopped` (`bool`) - <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.
      * `server_farm_id` (`str`) - Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
      * `site_config` (`dict`) - Configuration of the app.
        * `always_on` (`bool`) - <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
        * `api_definition` (`dict`) - Information about the formal API definition for the app.
          * `url` (`str`) - The URL of the API definition.

        * `app_command_line` (`str`) - App command line to launch.
        * `app_settings` (`list`) - Application settings.
          * `name` (`str`) - Pair name.
          * `value` (`str`) - Pair value.

        * `auto_heal_enabled` (`bool`) - <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
        * `auto_heal_rules` (`dict`) - Auto Heal rules.
          * `actions` (`dict`) - Actions to be executed when a rule is triggered.
            * `action_type` (`str`) - Predefined action to be taken.
            * `custom_action` (`dict`) - Custom action to be taken.
              * `exe` (`str`) - Executable to be run.
              * `parameters` (`str`) - Parameters for the executable.

            * `min_process_execution_time` (`str`) - Minimum time the process must execute
              before taking the action

          * `triggers` (`dict`) - Conditions that describe when to execute the auto-heal actions.
            * `private_bytes_in_kb` (`float`) - A rule based on private bytes.
            * `requests` (`dict`) - A rule based on total requests.
              * `count` (`float`) - Request Count.
              * `time_interval` (`str`) - Time interval.

            * `slow_requests` (`dict`) - A rule based on request execution time.
              * `count` (`float`) - Request Count.
              * `time_interval` (`str`) - Time interval.
              * `time_taken` (`str`) - Time taken.

            * `status_codes` (`list`) - A rule based on status codes.
              * `count` (`float`) - Request Count.
              * `status` (`float`) - HTTP status code.
              * `sub_status` (`float`) - Request Sub Status.
              * `time_interval` (`str`) - Time interval.
              * `win32_status` (`float`) - Win32 error code.

        * `auto_swap_slot_name` (`str`) - Auto-swap slot name.
        * `azure_storage_accounts` (`dict`) - User-provided Azure storage accounts.
        * `connection_strings` (`list`) - Connection strings.
          * `connection_string` (`str`) - Connection string value.
          * `name` (`str`) - Name of connection string.
          * `type` (`str`) - Type of database.

        * `cors` (`dict`) - Cross-Origin Resource Sharing (CORS) settings.
          * `allowed_origins` (`list`) - Gets or sets the list of origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          * `support_credentials` (`bool`) - Gets or sets whether CORS requests with credentials are allowed. See 
            https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
            for more details.

        * `default_documents` (`list`) - Default documents.
        * `detailed_error_logging_enabled` (`bool`) - <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
        * `document_root` (`str`) - Document root.
        * `experiments` (`dict`) - This is work around for polymorphic types.
          * `ramp_up_rules` (`list`) - List of ramp-up rules.
            * `action_host_name` (`str`) - Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
            * `change_decision_callback_url` (`str`) - Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
              https://www.siteextensions.net/packages/TiPCallback/
            * `change_interval_in_minutes` (`float`) - Specifies interval in minutes to reevaluate ReroutePercentage.
            * `change_step` (`float`) - In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches 
              <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.
              Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
            * `max_reroute_percentage` (`float`) - Specifies upper boundary below which ReroutePercentage will stay.
            * `min_reroute_percentage` (`float`) - Specifies lower boundary above which ReroutePercentage will stay.
            * `name` (`str`) - Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
            * `reroute_percentage` (`float`) - Percentage of the traffic which will be redirected to <code>ActionHostName</code>.

        * `ftps_state` (`str`) - State of FTP / FTPS service
        * `handler_mappings` (`list`) - Handler mappings.
          * `arguments` (`str`) - Command-line arguments to be passed to the script processor.
          * `extension` (`str`) - Requests with this extension will be handled using the specified FastCGI application.
          * `script_processor` (`str`) - The absolute path to the FastCGI application.

        * `http20_enabled` (`bool`) - Http20Enabled: configures a web site to allow clients to connect over http2.0
        * `http_logging_enabled` (`bool`) - <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
        * `ip_security_restrictions` (`list`) - IP security restrictions for main.
          * `action` (`str`) - Allow or Deny access for this IP range.
          * `description` (`str`) - IP restriction rule description.
          * `ip_address` (`str`) - IP address the security restriction is valid for.
            It can be in form of pure ipv4 address (required SubnetMask property) or
            CIDR notation such as ipv4/mask (leading bit match). For CIDR,
            SubnetMask property must not be specified.
          * `name` (`str`) - IP restriction rule name.
          * `priority` (`float`) - Priority of IP restriction rule.
          * `subnet_mask` (`str`) - Subnet mask for the range of IP addresses the restriction is valid for.
          * `subnet_traffic_tag` (`float`) - (internal) Subnet traffic tag
          * `tag` (`str`) - Defines what this IP filter will be used for. This is to support IP filtering on proxies.
          * `vnet_subnet_resource_id` (`str`) - Virtual network resource id
          * `vnet_traffic_tag` (`float`) - (internal) Vnet traffic tag

        * `java_container` (`str`) - Java container.
        * `java_container_version` (`str`) - Java container version.
        * `java_version` (`str`) - Java version.
        * `limits` (`dict`) - Site limits.
          * `max_disk_size_in_mb` (`float`) - Maximum allowed disk size usage in MB.
          * `max_memory_in_mb` (`float`) - Maximum allowed memory usage in MB.
          * `max_percentage_cpu` (`float`) - Maximum allowed CPU usage percentage.

        * `linux_fx_version` (`str`) - Linux App Framework and version
        * `load_balancing` (`str`) - Site load balancing.
        * `local_my_sql_enabled` (`bool`) - <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
        * `logs_directory_size_limit` (`float`) - HTTP logs directory size limit.
        * `machine_key` (`dict`) - Site MachineKey.
          * `decryption` (`str`) - Algorithm used for decryption.
          * `decryption_key` (`str`) - Decryption key.
          * `validation` (`str`) - MachineKey validation.
          * `validation_key` (`str`) - Validation key.

        * `managed_pipeline_mode` (`str`) - Managed pipeline mode.
        * `managed_service_identity_id` (`float`) - Managed Service Identity Id
        * `min_tls_version` (`str`) - MinTlsVersion: configures the minimum version of TLS required for SSL requests
        * `net_framework_version` (`str`) - .NET Framework version.
        * `node_version` (`str`) - Version of Node.js.
        * `number_of_workers` (`float`) - Number of workers.
        * `php_version` (`str`) - Version of PHP.
        * `publishing_username` (`str`) - Publishing user name.
        * `push` (`dict`) - Push endpoint settings.
          * `id` (`str`) - Resource Id.
          * `kind` (`str`) - Kind of resource.
          * `name` (`str`) - Resource Name.
          * `properties` (`dict`) - PushSettings resource specific properties
            * `dynamic_tags_json` (`str`) - Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
            * `is_push_enabled` (`bool`) - Gets or sets a flag indicating whether the Push endpoint is enabled.
            * `tag_whitelist_json` (`str`) - Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
            * `tags_requiring_auth` (`str`) - Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
              Tags can consist of alphanumeric characters and the following:
              '_', '@', '#', '.', ':', '-'. 
              Validation should be performed at the PushRequestHandler.

          * `type` (`str`) - Resource type.

        * `python_version` (`str`) - Version of Python.
        * `remote_debugging_enabled` (`bool`) - <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
        * `remote_debugging_version` (`str`) - Remote debugging version.
        * `request_tracing_enabled` (`bool`) - <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
        * `request_tracing_expiration_time` (`str`) - Request tracing expiration time.
        * `reserved_instance_count` (`float`) - Number of reserved instances.
          This setting only applies to the Consumption Plan
        * `scm_ip_security_restrictions` (`list`) - IP security restrictions for scm.
        * `scm_ip_security_restrictions_use_main` (`bool`) - IP security restrictions for scm to use main.
        * `scm_type` (`str`) - SCM type.
        * `tracing_options` (`str`) - Tracing options.
        * `use32_bit_worker_process` (`bool`) - <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
        * `virtual_applications` (`list`) - Virtual applications.
          * `physical_path` (`str`) - Physical path.
          * `preload_enabled` (`bool`) - <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
          * `virtual_directories` (`list`) - Virtual directories for virtual application.
            * `physical_path` (`str`) - Physical path.
            * `virtual_path` (`str`) - Path to virtual application.

          * `virtual_path` (`str`) - Virtual path.

        * `vnet_name` (`str`) - Virtual Network name.
        * `web_sockets_enabled` (`bool`) - <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
        * `windows_fx_version` (`str`) - Xenon App Framework and version
        * `x_managed_service_identity_id` (`float`) - Explicit Managed Service Identity Id

      * `slot_swap_status` (`dict`) - Status of the last deployment slot swap operation.
        * `destination_slot_name` (`str`) - The destination slot of the last swap operation.
        * `source_slot_name` (`str`) - The source slot of the last swap operation.
        * `timestamp_utc` (`str`) - The time the last successful slot swap completed.

      * `state` (`str`) - Current state of the app.
      * `suspended_till` (`str`) - App suspended till in case memory-time quota is exceeded.
      * `target_swap_slot` (`str`) - Specifies which deployment slot this app will swap into. Read-only.
      * `traffic_manager_host_names` (`list`) - Azure Traffic Manager hostnames associated with the app. Read-only.
      * `usage_state` (`str`) - State indicating whether the app has exceeded its quota usage. Read-only.
    """
    tags: pulumi.Output[dict]
    """
    Resource tags.
    """
    type: pulumi.Output[str]
    """
    Resource type.
    """
    def __init__(__self__, resource_name, opts=None, identity=None, kind=None, location=None, name=None, properties=None, resource_group_name=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        A web app, a mobile app backend, or an API app.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] identity: Managed service identity.
        :param pulumi.Input[str] kind: Kind of resource.
        :param pulumi.Input[str] location: Resource Location.
        :param pulumi.Input[str] name: Name of the deployment slot to create or update. By default, this API attempts to create or modify the production slot.
        :param pulumi.Input[dict] properties: Site resource specific properties
        :param pulumi.Input[str] resource_group_name: Name of the resource group to which the resource belongs.
        :param pulumi.Input[dict] tags: Resource tags.

        The **identity** object supports the following:

          * `type` (`pulumi.Input[str]`) - Type of managed service identity.
          * `user_assigned_identities` (`pulumi.Input[dict]`) - The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}

        The **properties** object supports the following:

          * `client_affinity_enabled` (`pulumi.Input[bool]`) - <code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.
          * `client_cert_enabled` (`pulumi.Input[bool]`) - <code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.
          * `client_cert_exclusion_paths` (`pulumi.Input[str]`) - client certificate authentication comma-separated exclusion paths
          * `cloning_info` (`pulumi.Input[dict]`) - If specified during app creation, the app is cloned from a source app.
            * `app_settings_overrides` (`pulumi.Input[dict]`) - Application setting overrides for cloned app. If specified, these settings override the settings cloned 
              from source app. Otherwise, application settings from source app are retained.
            * `clone_custom_host_names` (`pulumi.Input[bool]`) - <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
            * `clone_source_control` (`pulumi.Input[bool]`) - <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
            * `configure_load_balancing` (`pulumi.Input[bool]`) - <code>true</code> to configure load balancing for source and destination app.
            * `correlation_id` (`pulumi.Input[str]`) - Correlation ID of cloning operation. This ID ties multiple cloning operations
              together to use the same snapshot.
            * `hosting_environment` (`pulumi.Input[str]`) - App Service Environment.
            * `overwrite` (`pulumi.Input[bool]`) - <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
            * `source_web_app_id` (`pulumi.Input[str]`) - ARM resource ID of the source app. App resource ID is of the form 
              /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and 
              /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
            * `source_web_app_location` (`pulumi.Input[str]`) - Location of source app ex: West US or North Europe
            * `traffic_manager_profile_id` (`pulumi.Input[str]`) - ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form 
              /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
            * `traffic_manager_profile_name` (`pulumi.Input[str]`) - Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.

          * `container_size` (`pulumi.Input[float]`) - Size of the function container.
          * `daily_memory_time_quota` (`pulumi.Input[float]`) - Maximum allowed daily memory-time quota (applicable on dynamic apps only).
          * `enabled` (`pulumi.Input[bool]`) - <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).
          * `geo_distributions` (`pulumi.Input[list]`) - GeoDistributions for this site
            * `location` (`pulumi.Input[str]`) - Location.
            * `number_of_workers` (`pulumi.Input[float]`) - NumberOfWorkers.

          * `host_name_ssl_states` (`pulumi.Input[list]`) - Hostname SSL states are used to manage the SSL bindings for app's hostnames.
            * `host_type` (`pulumi.Input[str]`) - Indicates whether the hostname is a standard or repository hostname.
            * `name` (`pulumi.Input[str]`) - Hostname.
            * `ssl_state` (`pulumi.Input[str]`) - SSL type.
            * `thumbprint` (`pulumi.Input[str]`) - SSL certificate thumbprint.
            * `to_update` (`pulumi.Input[bool]`) - Set to <code>true</code> to update existing hostname.
            * `virtual_ip` (`pulumi.Input[str]`) - Virtual IP address assigned to the hostname if IP based SSL is enabled.

          * `host_names_disabled` (`pulumi.Input[bool]`) - <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
             If <code>true</code>, the app is only accessible via API management process.
          * `hosting_environment_profile` (`pulumi.Input[dict]`) - App Service Environment to use for the app.
            * `id` (`pulumi.Input[str]`) - Resource ID of the App Service Environment.

          * `https_only` (`pulumi.Input[bool]`) - HttpsOnly: configures a web site to accept only https requests. Issues redirect for
            http requests
          * `hyper_v` (`pulumi.Input[bool]`) - Hyper-V sandbox.
          * `is_xenon` (`pulumi.Input[bool]`) - Obsolete: Hyper-V sandbox.
          * `redundancy_mode` (`pulumi.Input[str]`) - Site redundancy mode
          * `reserved` (`pulumi.Input[bool]`) - <code>true</code> if reserved; otherwise, <code>false</code>.
          * `scm_site_also_stopped` (`pulumi.Input[bool]`) - <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.
          * `server_farm_id` (`pulumi.Input[str]`) - Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
          * `site_config` (`pulumi.Input[dict]`) - Configuration of the app.
            * `always_on` (`pulumi.Input[bool]`) - <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
            * `api_definition` (`pulumi.Input[dict]`) - Information about the formal API definition for the app.
              * `url` (`pulumi.Input[str]`) - The URL of the API definition.

            * `app_command_line` (`pulumi.Input[str]`) - App command line to launch.
            * `app_settings` (`pulumi.Input[list]`) - Application settings.
              * `name` (`pulumi.Input[str]`) - Pair name.
              * `value` (`pulumi.Input[str]`) - Pair value.

            * `auto_heal_enabled` (`pulumi.Input[bool]`) - <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
            * `auto_heal_rules` (`pulumi.Input[dict]`) - Auto Heal rules.
              * `actions` (`pulumi.Input[dict]`) - Actions to be executed when a rule is triggered.
                * `action_type` (`pulumi.Input[str]`) - Predefined action to be taken.
                * `custom_action` (`pulumi.Input[dict]`) - Custom action to be taken.
                  * `exe` (`pulumi.Input[str]`) - Executable to be run.
                  * `parameters` (`pulumi.Input[str]`) - Parameters for the executable.

                * `min_process_execution_time` (`pulumi.Input[str]`) - Minimum time the process must execute
                  before taking the action

              * `triggers` (`pulumi.Input[dict]`) - Conditions that describe when to execute the auto-heal actions.
                * `private_bytes_in_kb` (`pulumi.Input[float]`) - A rule based on private bytes.
                * `requests` (`pulumi.Input[dict]`) - A rule based on total requests.
                  * `count` (`pulumi.Input[float]`) - Request Count.
                  * `time_interval` (`pulumi.Input[str]`) - Time interval.

                * `slow_requests` (`pulumi.Input[dict]`) - A rule based on request execution time.
                  * `count` (`pulumi.Input[float]`) - Request Count.
                  * `time_interval` (`pulumi.Input[str]`) - Time interval.
                  * `time_taken` (`pulumi.Input[str]`) - Time taken.

                * `status_codes` (`pulumi.Input[list]`) - A rule based on status codes.
                  * `count` (`pulumi.Input[float]`) - Request Count.
                  * `status` (`pulumi.Input[float]`) - HTTP status code.
                  * `sub_status` (`pulumi.Input[float]`) - Request Sub Status.
                  * `time_interval` (`pulumi.Input[str]`) - Time interval.
                  * `win32_status` (`pulumi.Input[float]`) - Win32 error code.

            * `auto_swap_slot_name` (`pulumi.Input[str]`) - Auto-swap slot name.
            * `azure_storage_accounts` (`pulumi.Input[dict]`) - User-provided Azure storage accounts.
            * `connection_strings` (`pulumi.Input[list]`) - Connection strings.
              * `connection_string` (`pulumi.Input[str]`) - Connection string value.
              * `name` (`pulumi.Input[str]`) - Name of connection string.
              * `type` (`pulumi.Input[str]`) - Type of database.

            * `cors` (`pulumi.Input[dict]`) - Cross-Origin Resource Sharing (CORS) settings.
              * `allowed_origins` (`pulumi.Input[list]`) - Gets or sets the list of origins that should be allowed to make cross-origin
                calls (for example: http://example.com:12345). Use "*" to allow all.
              * `support_credentials` (`pulumi.Input[bool]`) - Gets or sets whether CORS requests with credentials are allowed. See 
                https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
                for more details.

            * `default_documents` (`pulumi.Input[list]`) - Default documents.
            * `detailed_error_logging_enabled` (`pulumi.Input[bool]`) - <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
            * `document_root` (`pulumi.Input[str]`) - Document root.
            * `experiments` (`pulumi.Input[dict]`) - This is work around for polymorphic types.
              * `ramp_up_rules` (`pulumi.Input[list]`) - List of ramp-up rules.
                * `action_host_name` (`pulumi.Input[str]`) - Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
                * `change_decision_callback_url` (`pulumi.Input[str]`) - Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
                  https://www.siteextensions.net/packages/TiPCallback/
                * `change_interval_in_minutes` (`pulumi.Input[float]`) - Specifies interval in minutes to reevaluate ReroutePercentage.
                * `change_step` (`pulumi.Input[float]`) - In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches 
                  <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.
                  Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
                * `max_reroute_percentage` (`pulumi.Input[float]`) - Specifies upper boundary below which ReroutePercentage will stay.
                * `min_reroute_percentage` (`pulumi.Input[float]`) - Specifies lower boundary above which ReroutePercentage will stay.
                * `name` (`pulumi.Input[str]`) - Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
                * `reroute_percentage` (`pulumi.Input[float]`) - Percentage of the traffic which will be redirected to <code>ActionHostName</code>.

            * `ftps_state` (`pulumi.Input[str]`) - State of FTP / FTPS service
            * `handler_mappings` (`pulumi.Input[list]`) - Handler mappings.
              * `arguments` (`pulumi.Input[str]`) - Command-line arguments to be passed to the script processor.
              * `extension` (`pulumi.Input[str]`) - Requests with this extension will be handled using the specified FastCGI application.
              * `script_processor` (`pulumi.Input[str]`) - The absolute path to the FastCGI application.

            * `http20_enabled` (`pulumi.Input[bool]`) - Http20Enabled: configures a web site to allow clients to connect over http2.0
            * `http_logging_enabled` (`pulumi.Input[bool]`) - <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
            * `ip_security_restrictions` (`pulumi.Input[list]`) - IP security restrictions for main.
              * `action` (`pulumi.Input[str]`) - Allow or Deny access for this IP range.
              * `description` (`pulumi.Input[str]`) - IP restriction rule description.
              * `ip_address` (`pulumi.Input[str]`) - IP address the security restriction is valid for.
                It can be in form of pure ipv4 address (required SubnetMask property) or
                CIDR notation such as ipv4/mask (leading bit match). For CIDR,
                SubnetMask property must not be specified.
              * `name` (`pulumi.Input[str]`) - IP restriction rule name.
              * `priority` (`pulumi.Input[float]`) - Priority of IP restriction rule.
              * `subnet_mask` (`pulumi.Input[str]`) - Subnet mask for the range of IP addresses the restriction is valid for.
              * `subnet_traffic_tag` (`pulumi.Input[float]`) - (internal) Subnet traffic tag
              * `tag` (`pulumi.Input[str]`) - Defines what this IP filter will be used for. This is to support IP filtering on proxies.
              * `vnet_subnet_resource_id` (`pulumi.Input[str]`) - Virtual network resource id
              * `vnet_traffic_tag` (`pulumi.Input[float]`) - (internal) Vnet traffic tag

            * `java_container` (`pulumi.Input[str]`) - Java container.
            * `java_container_version` (`pulumi.Input[str]`) - Java container version.
            * `java_version` (`pulumi.Input[str]`) - Java version.
            * `limits` (`pulumi.Input[dict]`) - Site limits.
              * `max_disk_size_in_mb` (`pulumi.Input[float]`) - Maximum allowed disk size usage in MB.
              * `max_memory_in_mb` (`pulumi.Input[float]`) - Maximum allowed memory usage in MB.
              * `max_percentage_cpu` (`pulumi.Input[float]`) - Maximum allowed CPU usage percentage.

            * `linux_fx_version` (`pulumi.Input[str]`) - Linux App Framework and version
            * `load_balancing` (`pulumi.Input[str]`) - Site load balancing.
            * `local_my_sql_enabled` (`pulumi.Input[bool]`) - <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
            * `logs_directory_size_limit` (`pulumi.Input[float]`) - HTTP logs directory size limit.
            * `managed_pipeline_mode` (`pulumi.Input[str]`) - Managed pipeline mode.
            * `managed_service_identity_id` (`pulumi.Input[float]`) - Managed Service Identity Id
            * `min_tls_version` (`pulumi.Input[str]`) - MinTlsVersion: configures the minimum version of TLS required for SSL requests
            * `net_framework_version` (`pulumi.Input[str]`) - .NET Framework version.
            * `node_version` (`pulumi.Input[str]`) - Version of Node.js.
            * `number_of_workers` (`pulumi.Input[float]`) - Number of workers.
            * `php_version` (`pulumi.Input[str]`) - Version of PHP.
            * `publishing_username` (`pulumi.Input[str]`) - Publishing user name.
            * `push` (`pulumi.Input[dict]`) - Push endpoint settings.
              * `kind` (`pulumi.Input[str]`) - Kind of resource.
              * `properties` (`pulumi.Input[dict]`) - PushSettings resource specific properties
                * `dynamic_tags_json` (`pulumi.Input[str]`) - Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
                * `is_push_enabled` (`pulumi.Input[bool]`) - Gets or sets a flag indicating whether the Push endpoint is enabled.
                * `tag_whitelist_json` (`pulumi.Input[str]`) - Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
                * `tags_requiring_auth` (`pulumi.Input[str]`) - Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
                  Tags can consist of alphanumeric characters and the following:
                  '_', '@', '#', '.', ':', '-'. 
                  Validation should be performed at the PushRequestHandler.

            * `python_version` (`pulumi.Input[str]`) - Version of Python.
            * `remote_debugging_enabled` (`pulumi.Input[bool]`) - <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
            * `remote_debugging_version` (`pulumi.Input[str]`) - Remote debugging version.
            * `request_tracing_enabled` (`pulumi.Input[bool]`) - <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
            * `request_tracing_expiration_time` (`pulumi.Input[str]`) - Request tracing expiration time.
            * `reserved_instance_count` (`pulumi.Input[float]`) - Number of reserved instances.
              This setting only applies to the Consumption Plan
            * `scm_ip_security_restrictions` (`pulumi.Input[list]`) - IP security restrictions for scm.
            * `scm_ip_security_restrictions_use_main` (`pulumi.Input[bool]`) - IP security restrictions for scm to use main.
            * `scm_type` (`pulumi.Input[str]`) - SCM type.
            * `tracing_options` (`pulumi.Input[str]`) - Tracing options.
            * `use32_bit_worker_process` (`pulumi.Input[bool]`) - <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
            * `virtual_applications` (`pulumi.Input[list]`) - Virtual applications.
              * `physical_path` (`pulumi.Input[str]`) - Physical path.
              * `preload_enabled` (`pulumi.Input[bool]`) - <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
              * `virtual_directories` (`pulumi.Input[list]`) - Virtual directories for virtual application.
                * `physical_path` (`pulumi.Input[str]`) - Physical path.
                * `virtual_path` (`pulumi.Input[str]`) - Path to virtual application.

              * `virtual_path` (`pulumi.Input[str]`) - Virtual path.

            * `vnet_name` (`pulumi.Input[str]`) - Virtual Network name.
            * `web_sockets_enabled` (`pulumi.Input[bool]`) - <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
            * `windows_fx_version` (`pulumi.Input[str]`) - Xenon App Framework and version
            * `x_managed_service_identity_id` (`pulumi.Input[float]`) - Explicit Managed Service Identity Id
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['identity'] = identity
            __props__['kind'] = kind
            if location is None:
                raise TypeError("Missing required property 'location'")
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['type'] = None
        super(WebAppSlot, __self__).__init__(
            'azurerm:web/v20180201:WebAppSlot',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing WebAppSlot resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return WebAppSlot(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
