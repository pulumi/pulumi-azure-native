# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListGlobalUserEnvironmentsResult:
    """
    Represents the list of environments owned by a user
    """
    def __init__(__self__, environments=None):
        if environments and not isinstance(environments, list):
            raise TypeError("Expected argument 'environments' to be a list")
        __self__.environments = environments
        """
        List of all the environments
        """


class AwaitableListGlobalUserEnvironmentsResult(ListGlobalUserEnvironmentsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListGlobalUserEnvironmentsResult(
            environments=self.environments)


def list_global_user_environments(lab_id=None, user_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str lab_id: The resource Id of the lab
    :param str user_name: The name of the user.
    """
    __args__ = dict()
    __args__['labId'] = lab_id
    __args__['userName'] = user_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:labservices/v20181015:listGlobalUserEnvironments', __args__, opts=opts).value

    return AwaitableListGlobalUserEnvironmentsResult(
        environments=__ret__.get('environments'))
