# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetCustomerSubscriptionResult:
    """
    Customer subscription.
    """
    def __init__(__self__, etag=None, name=None, tenant_id=None, type=None):
        if etag and not isinstance(etag, str):
            raise TypeError("Expected argument 'etag' to be a str")
        __self__.etag = etag
        """
        The entity tag used for optimistic concurrency when modifying the resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Name of the resource.
        """
        if tenant_id and not isinstance(tenant_id, str):
            raise TypeError("Expected argument 'tenant_id' to be a str")
        __self__.tenant_id = tenant_id
        """
        Tenant Id.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Type of Resource.
        """


class AwaitableGetCustomerSubscriptionResult(GetCustomerSubscriptionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCustomerSubscriptionResult(
            etag=self.etag,
            name=self.name,
            tenant_id=self.tenant_id,
            type=self.type)


def get_customer_subscription(name=None, registration_name=None, resource_group=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: Name of the product.
    :param str registration_name: Name of the Azure Stack registration.
    :param str resource_group: Name of the resource group.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['registrationName'] = registration_name
    __args__['resourceGroup'] = resource_group
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:azurestack/v20170601:getCustomerSubscription', __args__, opts=opts).value

    return AwaitableGetCustomerSubscriptionResult(
        etag=__ret__.get('etag'),
        name=__ret__.get('name'),
        tenant_id=__ret__.get('tenantId'),
        type=__ret__.get('type'))
