# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetServerKeyResult:
    """
    A PostgreSQL Server key.
    """
    def __init__(__self__, creation_date=None, kind=None, name=None, server_key_type=None, type=None, uri=None):
        if creation_date and not isinstance(creation_date, str):
            raise TypeError("Expected argument 'creation_date' to be a str")
        __self__.creation_date = creation_date
        """
        The key creation date.
        """
        if kind and not isinstance(kind, str):
            raise TypeError("Expected argument 'kind' to be a str")
        __self__.kind = kind
        """
        Kind of encryption protector used to protect the key.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the resource
        """
        if server_key_type and not isinstance(server_key_type, str):
            raise TypeError("Expected argument 'server_key_type' to be a str")
        __self__.server_key_type = server_key_type
        """
        The key type like 'AzureKeyVault'.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        """
        if uri and not isinstance(uri, str):
            raise TypeError("Expected argument 'uri' to be a str")
        __self__.uri = uri
        """
        The URI of the key.
        """


class AwaitableGetServerKeyResult(GetServerKeyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServerKeyResult(
            creation_date=self.creation_date,
            kind=self.kind,
            name=self.name,
            server_key_type=self.server_key_type,
            type=self.type,
            uri=self.uri)


def get_server_key(name=None, resource_group_name=None, server_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: The name of the PostgreSQL Server key to be retrieved.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str server_name: The name of the server.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['serverName'] = server_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:dbforpostgresql/v20200101:getServerKey', __args__, opts=opts).value

    return AwaitableGetServerKeyResult(
        creation_date=__ret__.get('creationDate'),
        kind=__ret__.get('kind'),
        name=__ret__.get('name'),
        server_key_type=__ret__.get('serverKeyType'),
        type=__ret__.get('type'),
        uri=__ret__.get('uri'))
