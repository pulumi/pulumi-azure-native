# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListSearchServiceQueryKeysResult:
    """
    Response containing the query API keys for a given Azure Cognitive Search service.
    """
    def __init__(__self__, next_link=None, value=None):
        if next_link and not isinstance(next_link, str):
            raise TypeError("Expected argument 'next_link' to be a str")
        __self__.next_link = next_link
        """
        Request URL that can be used to query next page of query keys. Returned when the total number of requested query keys exceed maximum page size.
        """
        if value and not isinstance(value, list):
            raise TypeError("Expected argument 'value' to be a list")
        __self__.value = value
        """
        The query keys for the Azure Cognitive Search service.
        """


class AwaitableListSearchServiceQueryKeysResult(ListSearchServiceQueryKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListSearchServiceQueryKeysResult(
            next_link=self.next_link,
            value=self.value)


def list_search_service_query_keys(resource_group_name=None, search_service_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str resource_group_name: The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.
    :param str search_service_name: The name of the Azure Cognitive Search service associated with the specified resource group.
    """
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['searchServiceName'] = search_service_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:search:listSearchServiceQueryKeys', __args__, opts=opts).value

    return AwaitableListSearchServiceQueryKeysResult(
        next_link=__ret__.get('nextLink'),
        value=__ret__.get('value'))
