# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class Order(pulumi.CustomResource):
    name: pulumi.Output[str]
    """
    The object name.
    """
    properties: pulumi.Output[dict]
    """
    The order properties.
      * `contact_information` (`dict`) - The contact details.
        * `company_name` (`str`) - The name of the company.
        * `contact_person` (`str`) - The contact person name.
        * `email_list` (`list`) - The email list.
        * `phone` (`str`) - The phone number.

      * `current_status` (`dict`) - Current status of the order.
        * `comments` (`str`) - Comments related to this status change.
        * `status` (`str`) - Status of the order as per the allowed status types.
        * `update_date_time` (`str`) - Time of status update.

      * `delivery_tracking_info` (`list`) - Tracking information for the package delivered to the customer whether it has an original or a replacement device.
        * `carrier_name` (`str`) - Name of the carrier used in the delivery.
        * `serial_number` (`str`) - Serial number of the device being tracked.
        * `tracking_id` (`str`) - Tracking ID of the shipment.
        * `tracking_url` (`str`) - Tracking URL of the shipment.

      * `order_history` (`list`) - List of status changes in the order.
      * `return_tracking_info` (`list`) - Tracking information for the package returned from the customer whether it has an original or a replacement device.
      * `serial_number` (`str`) - Serial number of the device.
      * `shipping_address` (`dict`) - The shipping address.
        * `address_line1` (`str`) - The address line1.
        * `address_line2` (`str`) - The address line2.
        * `address_line3` (`str`) - The address line3.
        * `city` (`str`) - The city name.
        * `country` (`str`) - The country name.
        * `postal_code` (`str`) - The postal code.
        * `state` (`str`) - The state name.
    """
    type: pulumi.Output[str]
    """
    The hierarchical type of the object.
    """
    def __init__(__self__, resource_name, opts=None, name=None, properties=None, resource_group_name=None, __props__=None, __name__=None, __opts__=None):
        """
        The order details.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] name: The device name.
        :param pulumi.Input[dict] properties: The order properties.
        :param pulumi.Input[str] resource_group_name: The resource group name.

        The **properties** object supports the following:

          * `contact_information` (`pulumi.Input[dict]`) - The contact details.
            * `company_name` (`pulumi.Input[str]`) - The name of the company.
            * `contact_person` (`pulumi.Input[str]`) - The contact person name.
            * `email_list` (`pulumi.Input[list]`) - The email list.
            * `phone` (`pulumi.Input[str]`) - The phone number.

          * `current_status` (`pulumi.Input[dict]`) - Current status of the order.
            * `comments` (`pulumi.Input[str]`) - Comments related to this status change.
            * `status` (`pulumi.Input[str]`) - Status of the order as per the allowed status types.

          * `shipping_address` (`pulumi.Input[dict]`) - The shipping address.
            * `address_line1` (`pulumi.Input[str]`) - The address line1.
            * `address_line2` (`pulumi.Input[str]`) - The address line2.
            * `address_line3` (`pulumi.Input[str]`) - The address line3.
            * `city` (`pulumi.Input[str]`) - The city name.
            * `country` (`pulumi.Input[str]`) - The country name.
            * `postal_code` (`pulumi.Input[str]`) - The postal code.
            * `state` (`pulumi.Input[str]`) - The state name.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['type'] = None
        super(Order, __self__).__init__(
            'azurerm:databoxedge/v20190701:Order',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing Order resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return Order(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
