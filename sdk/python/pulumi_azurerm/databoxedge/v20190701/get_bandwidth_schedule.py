# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetBandwidthScheduleResult:
    """
    The bandwidth schedule details.
    """
    def __init__(__self__, days=None, name=None, rate_in_mbps=None, start=None, stop=None, type=None):
        if days and not isinstance(days, list):
            raise TypeError("Expected argument 'days' to be a list")
        __self__.days = days
        """
        The days of the week when this schedule is applicable.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The object name.
        """
        if rate_in_mbps and not isinstance(rate_in_mbps, float):
            raise TypeError("Expected argument 'rate_in_mbps' to be a float")
        __self__.rate_in_mbps = rate_in_mbps
        """
        The bandwidth rate in Mbps.
        """
        if start and not isinstance(start, str):
            raise TypeError("Expected argument 'start' to be a str")
        __self__.start = start
        """
        The start time of the schedule in UTC.
        """
        if stop and not isinstance(stop, str):
            raise TypeError("Expected argument 'stop' to be a str")
        __self__.stop = stop
        """
        The stop time of the schedule in UTC.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The hierarchical type of the object.
        """


class AwaitableGetBandwidthScheduleResult(GetBandwidthScheduleResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBandwidthScheduleResult(
            days=self.days,
            name=self.name,
            rate_in_mbps=self.rate_in_mbps,
            start=self.start,
            stop=self.stop,
            type=self.type)


def get_bandwidth_schedule(device_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str device_name: The device name.
    :param str name: The bandwidth schedule name.
    :param str resource_group_name: The resource group name.
    """
    __args__ = dict()
    __args__['deviceName'] = device_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:databoxedge/v20190701:getBandwidthSchedule', __args__, opts=opts).value

    return AwaitableGetBandwidthScheduleResult(
        days=__ret__.get('days'),
        name=__ret__.get('name'),
        rate_in_mbps=__ret__.get('rateInMbps'),
        start=__ret__.get('start'),
        stop=__ret__.get('stop'),
        type=__ret__.get('type'))
