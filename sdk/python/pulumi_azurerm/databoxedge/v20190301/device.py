# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class Device(pulumi.CustomResource):
    etag: pulumi.Output[str]
    """
    The etag for the devices.
    """
    location: pulumi.Output[str]
    """
    The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
    """
    name: pulumi.Output[str]
    """
    The object name.
    """
    properties: pulumi.Output[dict]
    """
    The properties of the Data Box Edge/Gateway device.
      * `configured_role_types` (`list`) - Type of compute roles configured.
      * `culture` (`str`) - The Data Box Edge/Gateway device culture.
      * `data_box_edge_device_status` (`str`) - The status of the Data Box Edge/Gateway device.
      * `description` (`str`) - The Description of the Data Box Edge/Gateway device.
      * `device_hcs_version` (`str`) - The device software version number of the device (eg: 1.2.18105.6).
      * `device_local_capacity` (`float`) - The Data Box Edge/Gateway device local capacity in MB.
      * `device_model` (`str`) - The Data Box Edge/Gateway device model.
      * `device_software_version` (`str`) - The Data Box Edge/Gateway device software version.
      * `device_type` (`str`) - The type of the Data Box Edge/Gateway device.
      * `friendly_name` (`str`) - The Data Box Edge/Gateway device name.
      * `model_description` (`str`) - The description of the Data Box Edge/Gateway device model.
      * `serial_number` (`str`) - The Serial Number of Data Box Edge/Gateway device.
      * `time_zone` (`str`) - The Data Box Edge/Gateway device timezone.
    """
    sku: pulumi.Output[dict]
    """
    The SKU type.
      * `name` (`str`) - SKU name.
      * `tier` (`str`) - The SKU tier. This is based on the SKU name.
    """
    tags: pulumi.Output[dict]
    """
    The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
    """
    type: pulumi.Output[str]
    """
    The hierarchical type of the object.
    """
    def __init__(__self__, resource_name, opts=None, etag=None, location=None, name=None, properties=None, resource_group_name=None, sku=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        The Data Box Edge/Gateway device.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] etag: The etag for the devices.
        :param pulumi.Input[str] location: The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
        :param pulumi.Input[str] name: The device name.
        :param pulumi.Input[dict] properties: The properties of the Data Box Edge/Gateway device.
        :param pulumi.Input[str] resource_group_name: The resource group name.
        :param pulumi.Input[dict] sku: The SKU type.
        :param pulumi.Input[dict] tags: The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).

        The **properties** object supports the following:

          * `data_box_edge_device_status` (`pulumi.Input[str]`) - The status of the Data Box Edge/Gateway device.
          * `description` (`pulumi.Input[str]`) - The Description of the Data Box Edge/Gateway device.
          * `friendly_name` (`pulumi.Input[str]`) - The Data Box Edge/Gateway device name.
          * `model_description` (`pulumi.Input[str]`) - The description of the Data Box Edge/Gateway device model.

        The **sku** object supports the following:

          * `name` (`pulumi.Input[str]`) - SKU name.
          * `tier` (`pulumi.Input[str]`) - The SKU tier. This is based on the SKU name.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['etag'] = etag
            if location is None:
                raise TypeError("Missing required property 'location'")
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['sku'] = sku
            __props__['tags'] = tags
            __props__['type'] = None
        super(Device, __self__).__init__(
            'azurerm:databoxedge/v20190301:Device',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing Device resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return Device(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
