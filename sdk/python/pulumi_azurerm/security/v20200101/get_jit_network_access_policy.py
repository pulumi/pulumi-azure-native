# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetJitNetworkAccessPolicyResult:
    def __init__(__self__, kind=None, location=None, name=None, provisioning_state=None, requests=None, type=None, virtual_machines=None):
        if kind and not isinstance(kind, str):
            raise TypeError("Expected argument 'kind' to be a str")
        __self__.kind = kind
        """
        Kind of the resource
        """
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        __self__.location = location
        """
        Location where the resource is stored
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Resource name
        """
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        __self__.provisioning_state = provisioning_state
        """
        Gets the provisioning state of the Just-in-Time policy.
        """
        if requests and not isinstance(requests, list):
            raise TypeError("Expected argument 'requests' to be a list")
        __self__.requests = requests
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Resource type
        """
        if virtual_machines and not isinstance(virtual_machines, list):
            raise TypeError("Expected argument 'virtual_machines' to be a list")
        __self__.virtual_machines = virtual_machines
        """
        Configurations for Microsoft.Compute/virtualMachines resource type.
        """


class AwaitableGetJitNetworkAccessPolicyResult(GetJitNetworkAccessPolicyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetJitNetworkAccessPolicyResult(
            kind=self.kind,
            location=self.location,
            name=self.name,
            provisioning_state=self.provisioning_state,
            requests=self.requests,
            type=self.type,
            virtual_machines=self.virtual_machines)


def get_jit_network_access_policy(asc_location=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str asc_location: The location where ASC stores the data of the subscription. can be retrieved from Get locations
    :param str name: Name of a Just-in-Time access configuration policy.
    :param str resource_group_name: The name of the resource group within the user's subscription. The name is case insensitive.
    """
    __args__ = dict()
    __args__['ascLocation'] = asc_location
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:security/v20200101:getJitNetworkAccessPolicy', __args__, opts=opts).value

    return AwaitableGetJitNetworkAccessPolicyResult(
        kind=__ret__.get('kind'),
        location=__ret__.get('location'),
        name=__ret__.get('name'),
        provisioning_state=__ret__.get('provisioningState'),
        requests=__ret__.get('requests'),
        type=__ret__.get('type'),
        virtual_machines=__ret__.get('virtualMachines'))
