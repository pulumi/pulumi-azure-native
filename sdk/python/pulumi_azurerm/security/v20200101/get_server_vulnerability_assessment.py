# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetServerVulnerabilityAssessmentResult:
    """
    Describes the server vulnerability assessment details on a resource
    """
    def __init__(__self__, name=None, provisioning_state=None, type=None):
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Resource name
        """
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        __self__.provisioning_state = provisioning_state
        """
        The provisioningState of the vulnerability assessment capability on the VM
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Resource type
        """


class AwaitableGetServerVulnerabilityAssessmentResult(GetServerVulnerabilityAssessmentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServerVulnerabilityAssessmentResult(
            name=self.name,
            provisioning_state=self.provisioning_state,
            type=self.type)


def get_server_vulnerability_assessment(name=None, resource_group_name=None, resource_name=None, resource_namespace=None, resource_type=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: ServerVulnerabilityAssessment status. only a 'default' value is supported.
    :param str resource_group_name: The name of the resource group within the user's subscription. The name is case insensitive.
    :param str resource_name: Name of the resource.
    :param str resource_namespace: The Namespace of the resource.
    :param str resource_type: The type of the resource.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['resourceName'] = resource_name
    __args__['resourceNamespace'] = resource_namespace
    __args__['resourceType'] = resource_type
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:security/v20200101:getServerVulnerabilityAssessment', __args__, opts=opts).value

    return AwaitableGetServerVulnerabilityAssessmentResult(
        name=__ret__.get('name'),
        provisioning_state=__ret__.get('provisioningState'),
        type=__ret__.get('type'))
