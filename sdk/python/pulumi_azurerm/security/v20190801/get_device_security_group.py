# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetDeviceSecurityGroupResult:
    """
    The device security group resource
    """
    def __init__(__self__, allowlist_rules=None, denylist_rules=None, name=None, threshold_rules=None, time_window_rules=None, type=None):
        if allowlist_rules and not isinstance(allowlist_rules, list):
            raise TypeError("Expected argument 'allowlist_rules' to be a list")
        __self__.allowlist_rules = allowlist_rules
        """
        The allow-list custom alert rules.
        """
        if denylist_rules and not isinstance(denylist_rules, list):
            raise TypeError("Expected argument 'denylist_rules' to be a list")
        __self__.denylist_rules = denylist_rules
        """
        The deny-list custom alert rules.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Resource name
        """
        if threshold_rules and not isinstance(threshold_rules, list):
            raise TypeError("Expected argument 'threshold_rules' to be a list")
        __self__.threshold_rules = threshold_rules
        """
        The list of custom alert threshold rules.
        """
        if time_window_rules and not isinstance(time_window_rules, list):
            raise TypeError("Expected argument 'time_window_rules' to be a list")
        __self__.time_window_rules = time_window_rules
        """
        The list of custom alert time-window rules.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Resource type
        """


class AwaitableGetDeviceSecurityGroupResult(GetDeviceSecurityGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDeviceSecurityGroupResult(
            allowlist_rules=self.allowlist_rules,
            denylist_rules=self.denylist_rules,
            name=self.name,
            threshold_rules=self.threshold_rules,
            time_window_rules=self.time_window_rules,
            type=self.type)


def get_device_security_group(name=None, resource_id=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: The name of the device security group. Note that the name of the device security group is case insensitive.
    :param str resource_id: The identifier of the resource.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceId'] = resource_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:security/v20190801:getDeviceSecurityGroup', __args__, opts=opts).value

    return AwaitableGetDeviceSecurityGroupResult(
        allowlist_rules=__ret__.get('allowlistRules'),
        denylist_rules=__ret__.get('denylistRules'),
        name=__ret__.get('name'),
        threshold_rules=__ret__.get('thresholdRules'),
        time_window_rules=__ret__.get('timeWindowRules'),
        type=__ret__.get('type'))
