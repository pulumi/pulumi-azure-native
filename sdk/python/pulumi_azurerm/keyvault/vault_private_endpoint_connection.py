# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class VaultPrivateEndpointConnection(pulumi.CustomResource):
    location: pulumi.Output[str]
    """
    Azure location of the key vault resource.
    """
    name: pulumi.Output[str]
    """
    Name of the key vault resource.
    """
    properties: pulumi.Output[dict]
    """
    Resource properties.
      * `private_endpoint` (`dict`) - Properties of the private endpoint object.
        * `id` (`str`) - Full identifier of the private endpoint resource.

      * `private_link_service_connection_state` (`dict`) - Approval state of the private link connection.
        * `action_required` (`str`) - A message indicating if changes on the service provider require any updates on the consumer.
        * `description` (`str`) - The reason for approval or rejection.
        * `status` (`str`) - Indicates whether the connection has been approved, rejected or removed by the key vault owner.

      * `provisioning_state` (`str`) - Provisioning state of the private endpoint connection.
    """
    tags: pulumi.Output[dict]
    """
    Tags assigned to the key vault resource.
    """
    type: pulumi.Output[str]
    """
    Resource type of the key vault resource.
    """
    def __init__(__self__, resource_name, opts=None, name=None, properties=None, resource_group_name=None, vault_name=None, __props__=None, __name__=None, __opts__=None):
        """
        Private endpoint connection resource.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] name: Name of the private endpoint connection associated with the key vault.
        :param pulumi.Input[dict] properties: Resource properties.
        :param pulumi.Input[str] resource_group_name: Name of the resource group that contains the key vault.
        :param pulumi.Input[str] vault_name: The name of the key vault.

        The **properties** object supports the following:

          * `private_endpoint` (`pulumi.Input[dict]`) - Properties of the private endpoint object.
          * `private_link_service_connection_state` (`pulumi.Input[dict]`) - Approval state of the private link connection.
            * `action_required` (`pulumi.Input[str]`) - A message indicating if changes on the service provider require any updates on the consumer.
            * `description` (`pulumi.Input[str]`) - The reason for approval or rejection.
            * `status` (`pulumi.Input[str]`) - Indicates whether the connection has been approved, rejected or removed by the key vault owner.

          * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the private endpoint connection.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            if vault_name is None:
                raise TypeError("Missing required property 'vault_name'")
            __props__['vault_name'] = vault_name
            __props__['location'] = None
            __props__['tags'] = None
            __props__['type'] = None
        super(VaultPrivateEndpointConnection, __self__).__init__(
            'azurerm:keyvault:VaultPrivateEndpointConnection',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, location=None, name=None, properties=None, tags=None, type=None):
        """
        Get an existing VaultPrivateEndpointConnection resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: Azure location of the key vault resource.
        :param pulumi.Input[str] name: Name of the key vault resource.
        :param pulumi.Input[dict] properties: Resource properties.
        :param pulumi.Input[dict] tags: Tags assigned to the key vault resource.
        :param pulumi.Input[str] type: Resource type of the key vault resource.

        The **properties** object supports the following:

          * `private_endpoint` (`pulumi.Input[dict]`) - Properties of the private endpoint object.
            * `id` (`pulumi.Input[str]`) - Full identifier of the private endpoint resource.

          * `private_link_service_connection_state` (`pulumi.Input[dict]`) - Approval state of the private link connection.
            * `action_required` (`pulumi.Input[str]`) - A message indicating if changes on the service provider require any updates on the consumer.
            * `description` (`pulumi.Input[str]`) - The reason for approval or rejection.
            * `status` (`pulumi.Input[str]`) - Indicates whether the connection has been approved, rejected or removed by the key vault owner.

          * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the private endpoint connection.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["location"] = location
        __props__["name"] = name
        __props__["properties"] = properties
        __props__["tags"] = tags
        __props__["type"] = type
        return VaultPrivateEndpointConnection(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
