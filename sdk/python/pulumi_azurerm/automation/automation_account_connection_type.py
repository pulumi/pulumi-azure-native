# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class AutomationAccountConnectionType(pulumi.CustomResource):
    name: pulumi.Output[str]
    """
    Gets the name of the connection type.
    """
    properties: pulumi.Output[dict]
    """
    Gets or sets the properties of the connection type.
      * `creation_time` (`str`) - Gets the creation time.
      * `description` (`str`) - Gets or sets the description.
      * `field_definitions` (`dict`) - Gets the field definitions of the connection type.
      * `is_global` (`bool`) - Gets or sets a Boolean value to indicate if the connection type is global.
      * `last_modified_time` (`str`) - Gets or sets the last modified time.
    """
    type: pulumi.Output[str]
    """
    Resource type
    """
    def __init__(__self__, resource_name, opts=None, automation_account_name=None, connection_type_name=None, name=None, properties=None, resource_group_name=None, __props__=None, __name__=None, __opts__=None):
        """
        Definition of the connection type.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] automation_account_name: The name of the automation account.
        :param pulumi.Input[str] connection_type_name: The parameters supplied to the create or update connection type operation.
        :param pulumi.Input[str] name: Gets or sets the name of the connection type.
        :param pulumi.Input[dict] properties: Gets or sets the value of the connection type.
        :param pulumi.Input[str] resource_group_name: Name of an Azure Resource group.

        The **properties** object supports the following:

          * `field_definitions` (`pulumi.Input[dict]`) - Gets or sets the field definitions of the connection type.
          * `is_global` (`pulumi.Input[bool]`) - Gets or sets a Boolean value to indicate if the connection type is global.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if automation_account_name is None:
                raise TypeError("Missing required property 'automation_account_name'")
            __props__['automation_account_name'] = automation_account_name
            if connection_type_name is None:
                raise TypeError("Missing required property 'connection_type_name'")
            __props__['connection_type_name'] = connection_type_name
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            if properties is None:
                raise TypeError("Missing required property 'properties'")
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['type'] = None
        super(AutomationAccountConnectionType, __self__).__init__(
            'azurerm:automation:AutomationAccountConnectionType',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, name=None, properties=None, type=None):
        """
        Get an existing AutomationAccountConnectionType resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] name: Gets the name of the connection type.
        :param pulumi.Input[dict] properties: Gets or sets the properties of the connection type.
        :param pulumi.Input[str] type: Resource type

        The **properties** object supports the following:

          * `creation_time` (`pulumi.Input[str]`) - Gets the creation time.
          * `description` (`pulumi.Input[str]`) - Gets or sets the description.
          * `field_definitions` (`pulumi.Input[dict]`) - Gets the field definitions of the connection type.
          * `is_global` (`pulumi.Input[bool]`) - Gets or sets a Boolean value to indicate if the connection type is global.
          * `last_modified_time` (`pulumi.Input[str]`) - Gets or sets the last modified time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["name"] = name
        __props__["properties"] = properties
        __props__["type"] = type
        return AutomationAccountConnectionType(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
