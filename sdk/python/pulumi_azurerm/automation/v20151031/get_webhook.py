# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetWebhookResult:
    """
    Definition of the webhook type.
    """
    def __init__(__self__, creation_time=None, description=None, expiry_time=None, is_enabled=None, last_invoked_time=None, last_modified_by=None, last_modified_time=None, name=None, parameters=None, run_on=None, runbook=None, type=None, uri=None):
        if creation_time and not isinstance(creation_time, str):
            raise TypeError("Expected argument 'creation_time' to be a str")
        __self__.creation_time = creation_time
        """
        Gets or sets the creation time.
        """
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        Gets or sets the description.
        """
        if expiry_time and not isinstance(expiry_time, str):
            raise TypeError("Expected argument 'expiry_time' to be a str")
        __self__.expiry_time = expiry_time
        """
        Gets or sets the expiry time.
        """
        if is_enabled and not isinstance(is_enabled, bool):
            raise TypeError("Expected argument 'is_enabled' to be a bool")
        __self__.is_enabled = is_enabled
        """
        Gets or sets the value of the enabled flag of the webhook.
        """
        if last_invoked_time and not isinstance(last_invoked_time, str):
            raise TypeError("Expected argument 'last_invoked_time' to be a str")
        __self__.last_invoked_time = last_invoked_time
        """
        Gets or sets the last invoked time.
        """
        if last_modified_by and not isinstance(last_modified_by, str):
            raise TypeError("Expected argument 'last_modified_by' to be a str")
        __self__.last_modified_by = last_modified_by
        """
        Details of the user who last modified the Webhook
        """
        if last_modified_time and not isinstance(last_modified_time, str):
            raise TypeError("Expected argument 'last_modified_time' to be a str")
        __self__.last_modified_time = last_modified_time
        """
        Gets or sets the last modified time.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the resource
        """
        if parameters and not isinstance(parameters, dict):
            raise TypeError("Expected argument 'parameters' to be a dict")
        __self__.parameters = parameters
        """
        Gets or sets the parameters of the job that is created when the webhook calls the runbook it is associated with.
        """
        if run_on and not isinstance(run_on, str):
            raise TypeError("Expected argument 'run_on' to be a str")
        __self__.run_on = run_on
        """
        Gets or sets the name of the hybrid worker group the webhook job will run on.
        """
        if runbook and not isinstance(runbook, dict):
            raise TypeError("Expected argument 'runbook' to be a dict")
        __self__.runbook = runbook
        """
        Gets or sets the runbook the webhook is associated with.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The type of the resource.
        """
        if uri and not isinstance(uri, str):
            raise TypeError("Expected argument 'uri' to be a str")
        __self__.uri = uri
        """
        Gets or sets the webhook uri.
        """


class AwaitableGetWebhookResult(GetWebhookResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWebhookResult(
            creation_time=self.creation_time,
            description=self.description,
            expiry_time=self.expiry_time,
            is_enabled=self.is_enabled,
            last_invoked_time=self.last_invoked_time,
            last_modified_by=self.last_modified_by,
            last_modified_time=self.last_modified_time,
            name=self.name,
            parameters=self.parameters,
            run_on=self.run_on,
            runbook=self.runbook,
            type=self.type,
            uri=self.uri)


def get_webhook(automation_account_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str automation_account_name: The name of the automation account.
    :param str name: The webhook name.
    :param str resource_group_name: Name of an Azure Resource group.
    """
    __args__ = dict()
    __args__['automationAccountName'] = automation_account_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:automation/v20151031:getWebhook', __args__, opts=opts).value

    return AwaitableGetWebhookResult(
        creation_time=__ret__.get('creationTime'),
        description=__ret__.get('description'),
        expiry_time=__ret__.get('expiryTime'),
        is_enabled=__ret__.get('isEnabled'),
        last_invoked_time=__ret__.get('lastInvokedTime'),
        last_modified_by=__ret__.get('lastModifiedBy'),
        last_modified_time=__ret__.get('lastModifiedTime'),
        name=__ret__.get('name'),
        parameters=__ret__.get('parameters'),
        run_on=__ret__.get('runOn'),
        runbook=__ret__.get('runbook'),
        type=__ret__.get('type'),
        uri=__ret__.get('uri'))
