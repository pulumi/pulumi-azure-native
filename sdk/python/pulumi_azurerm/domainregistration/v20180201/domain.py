# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class Domain(pulumi.CustomResource):
    auth_code: pulumi.Output[str]
    auto_renew: pulumi.Output[bool]
    """
    <code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.
    """
    consent: pulumi.Output[dict]
    """
    Legal agreement consent.
      * `agreed_at` (`str`) - Timestamp when the agreements were accepted.
      * `agreed_by` (`str`) - Client IP address.
      * `agreement_keys` (`list`) - List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements API under <code>TopLevelDomain</code> resource.
    """
    contact_admin: pulumi.Output[dict]
    """
    Administrative contact.
      * `address_mailing` (`dict`) - Mailing address.
        * `address1` (`str`) - First line of an Address.
        * `address2` (`str`) - The second line of the Address. Optional.
        * `city` (`str`) - The city for the address.
        * `country` (`str`) - The country for the address.
        * `postal_code` (`str`) - The postal code for the address.
        * `state` (`str`) - The state or province for the address.

      * `email` (`str`) - Email address.
      * `fax` (`str`) - Fax number.
      * `job_title` (`str`) - Job title.
      * `name_first` (`str`) - First name.
      * `name_last` (`str`) - Last name.
      * `name_middle` (`str`) - Middle name.
      * `organization` (`str`) - Organization contact belongs to.
      * `phone` (`str`) - Phone number.
    """
    contact_billing: pulumi.Output[dict]
    """
    Billing contact.
      * `address_mailing` (`dict`) - Mailing address.
        * `address1` (`str`) - First line of an Address.
        * `address2` (`str`) - The second line of the Address. Optional.
        * `city` (`str`) - The city for the address.
        * `country` (`str`) - The country for the address.
        * `postal_code` (`str`) - The postal code for the address.
        * `state` (`str`) - The state or province for the address.

      * `email` (`str`) - Email address.
      * `fax` (`str`) - Fax number.
      * `job_title` (`str`) - Job title.
      * `name_first` (`str`) - First name.
      * `name_last` (`str`) - Last name.
      * `name_middle` (`str`) - Middle name.
      * `organization` (`str`) - Organization contact belongs to.
      * `phone` (`str`) - Phone number.
    """
    contact_registrant: pulumi.Output[dict]
    """
    Registrant contact.
      * `address_mailing` (`dict`) - Mailing address.
        * `address1` (`str`) - First line of an Address.
        * `address2` (`str`) - The second line of the Address. Optional.
        * `city` (`str`) - The city for the address.
        * `country` (`str`) - The country for the address.
        * `postal_code` (`str`) - The postal code for the address.
        * `state` (`str`) - The state or province for the address.

      * `email` (`str`) - Email address.
      * `fax` (`str`) - Fax number.
      * `job_title` (`str`) - Job title.
      * `name_first` (`str`) - First name.
      * `name_last` (`str`) - Last name.
      * `name_middle` (`str`) - Middle name.
      * `organization` (`str`) - Organization contact belongs to.
      * `phone` (`str`) - Phone number.
    """
    contact_tech: pulumi.Output[dict]
    """
    Technical contact.
      * `address_mailing` (`dict`) - Mailing address.
        * `address1` (`str`) - First line of an Address.
        * `address2` (`str`) - The second line of the Address. Optional.
        * `city` (`str`) - The city for the address.
        * `country` (`str`) - The country for the address.
        * `postal_code` (`str`) - The postal code for the address.
        * `state` (`str`) - The state or province for the address.

      * `email` (`str`) - Email address.
      * `fax` (`str`) - Fax number.
      * `job_title` (`str`) - Job title.
      * `name_first` (`str`) - First name.
      * `name_last` (`str`) - Last name.
      * `name_middle` (`str`) - Middle name.
      * `organization` (`str`) - Organization contact belongs to.
      * `phone` (`str`) - Phone number.
    """
    created_time: pulumi.Output[str]
    """
    Domain creation timestamp.
    """
    dns_type: pulumi.Output[str]
    """
    Current DNS type
    """
    dns_zone_id: pulumi.Output[str]
    """
    Azure DNS Zone to use
    """
    domain_not_renewable_reasons: pulumi.Output[list]
    """
    Reasons why domain is not renewable.
    """
    expiration_time: pulumi.Output[str]
    """
    Domain expiration timestamp.
    """
    kind: pulumi.Output[str]
    """
    Kind of resource.
    """
    last_renewed_time: pulumi.Output[str]
    """
    Timestamp when the domain was renewed last time.
    """
    location: pulumi.Output[str]
    """
    Resource Location.
    """
    managed_host_names: pulumi.Output[list]
    """
    All hostnames derived from the domain and assigned to Azure resources.
      * `azure_resource_name` (`str`) - Name of the Azure resource the hostname is assigned to. If it is assigned to a Traffic Manager then it will be the Traffic Manager name otherwise it will be the app name.
      * `azure_resource_type` (`str`) - Type of the Azure resource the hostname is assigned to.
      * `custom_host_name_dns_record_type` (`str`) - Type of the DNS record.
      * `host_name_type` (`str`) - Type of the hostname.
      * `name` (`str`) - Name of the hostname.
      * `site_names` (`list`) - List of apps the hostname is assigned to. This list will have more than one app only if the hostname is pointing to a Traffic Manager.
    """
    name: pulumi.Output[str]
    """
    Resource Name.
    """
    name_servers: pulumi.Output[list]
    """
    Name servers.
    """
    privacy: pulumi.Output[bool]
    """
    <code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>.
    """
    provisioning_state: pulumi.Output[str]
    """
    Domain provisioning state.
    """
    ready_for_dns_record_management: pulumi.Output[bool]
    """
    <code>true</code> if Azure can assign this domain to App Service apps; otherwise, <code>false</code>. This value will be <code>true</code> if domain registration status is active and 
     it is hosted on name servers Azure has programmatic access to.
    """
    registration_status: pulumi.Output[str]
    """
    Domain registration status.
    """
    tags: pulumi.Output[dict]
    """
    Resource tags.
    """
    target_dns_type: pulumi.Output[str]
    """
    Target DNS type (would be used for migration)
    """
    type: pulumi.Output[str]
    """
    Resource type.
    """
    def __init__(__self__, resource_name, opts=None, auth_code=None, auto_renew=None, consent=None, contact_admin=None, contact_billing=None, contact_registrant=None, contact_tech=None, dns_type=None, dns_zone_id=None, kind=None, location=None, name=None, privacy=None, resource_group_name=None, tags=None, target_dns_type=None, __props__=None, __name__=None, __opts__=None):
        """
        Information about a domain.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_renew: <code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.
        :param pulumi.Input[dict] consent: Legal agreement consent.
        :param pulumi.Input[dict] contact_admin: Administrative contact.
        :param pulumi.Input[dict] contact_billing: Billing contact.
        :param pulumi.Input[dict] contact_registrant: Registrant contact.
        :param pulumi.Input[dict] contact_tech: Technical contact.
        :param pulumi.Input[str] dns_type: Current DNS type
        :param pulumi.Input[str] dns_zone_id: Azure DNS Zone to use
        :param pulumi.Input[str] kind: Kind of resource.
        :param pulumi.Input[str] location: Resource Location.
        :param pulumi.Input[str] name: Name of the domain.
        :param pulumi.Input[bool] privacy: <code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>.
        :param pulumi.Input[str] resource_group_name: Name of the resource group to which the resource belongs.
        :param pulumi.Input[dict] tags: Resource tags.
        :param pulumi.Input[str] target_dns_type: Target DNS type (would be used for migration)

        The **consent** object supports the following:

          * `agreed_at` (`pulumi.Input[str]`) - Timestamp when the agreements were accepted.
          * `agreed_by` (`pulumi.Input[str]`) - Client IP address.
          * `agreement_keys` (`pulumi.Input[list]`) - List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements API under <code>TopLevelDomain</code> resource.

        The **contact_admin** object supports the following:

          * `address_mailing` (`pulumi.Input[dict]`) - Mailing address.
            * `address1` (`pulumi.Input[str]`) - First line of an Address.
            * `address2` (`pulumi.Input[str]`) - The second line of the Address. Optional.
            * `city` (`pulumi.Input[str]`) - The city for the address.
            * `country` (`pulumi.Input[str]`) - The country for the address.
            * `postal_code` (`pulumi.Input[str]`) - The postal code for the address.
            * `state` (`pulumi.Input[str]`) - The state or province for the address.

          * `email` (`pulumi.Input[str]`) - Email address.
          * `fax` (`pulumi.Input[str]`) - Fax number.
          * `job_title` (`pulumi.Input[str]`) - Job title.
          * `name_first` (`pulumi.Input[str]`) - First name.
          * `name_last` (`pulumi.Input[str]`) - Last name.
          * `name_middle` (`pulumi.Input[str]`) - Middle name.
          * `organization` (`pulumi.Input[str]`) - Organization contact belongs to.
          * `phone` (`pulumi.Input[str]`) - Phone number.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['auth_code'] = auth_code
            __props__['auto_renew'] = auto_renew
            if consent is None:
                raise TypeError("Missing required property 'consent'")
            __props__['consent'] = consent
            if contact_admin is None:
                raise TypeError("Missing required property 'contact_admin'")
            __props__['contact_admin'] = contact_admin
            if contact_billing is None:
                raise TypeError("Missing required property 'contact_billing'")
            __props__['contact_billing'] = contact_billing
            if contact_registrant is None:
                raise TypeError("Missing required property 'contact_registrant'")
            __props__['contact_registrant'] = contact_registrant
            if contact_tech is None:
                raise TypeError("Missing required property 'contact_tech'")
            __props__['contact_tech'] = contact_tech
            __props__['dns_type'] = dns_type
            __props__['dns_zone_id'] = dns_zone_id
            __props__['kind'] = kind
            if location is None:
                raise TypeError("Missing required property 'location'")
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['privacy'] = privacy
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['target_dns_type'] = target_dns_type
            __props__['created_time'] = None
            __props__['domain_not_renewable_reasons'] = None
            __props__['expiration_time'] = None
            __props__['last_renewed_time'] = None
            __props__['managed_host_names'] = None
            __props__['name_servers'] = None
            __props__['provisioning_state'] = None
            __props__['ready_for_dns_record_management'] = None
            __props__['registration_status'] = None
            __props__['type'] = None
        super(Domain, __self__).__init__(
            'azurerm:domainregistration/v20180201:Domain',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing Domain resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return Domain(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
