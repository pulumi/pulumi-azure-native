# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class Domain(pulumi.CustomResource):
    auto_renew: pulumi.Output[bool]
    """
    If true then domain will renewed automatically
    """
    consent: pulumi.Output[dict]
    """
    Legal agreement consent
      * `agreed_at` (`str`) - Timestamp when the agreements were accepted
      * `agreed_by` (`str`) - Client IP address
      * `agreement_keys` (`list`) - List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements Api under TopLevelDomain resource
    """
    contact_admin: pulumi.Output[dict]
    """
    Admin contact information
      * `address_mailing` (`dict`) - Mailing address
        * `address1` (`str`) - Address 1
        * `address2` (`str`) - Address 2
        * `city` (`str`) - City
        * `country` (`str`) - Country
        * `postal_code` (`str`) - Postal code
        * `state` (`str`) - State

      * `email` (`str`) - Email address
      * `fax` (`str`) - Fax number
      * `job_title` (`str`) - Job title
      * `name_first` (`str`) - First name
      * `name_last` (`str`) - Last name
      * `name_middle` (`str`) - Middle name
      * `organization` (`str`) - Organization
      * `phone` (`str`) - Phone number
    """
    contact_billing: pulumi.Output[dict]
    """
    Billing contact information
      * `address_mailing` (`dict`) - Mailing address
        * `address1` (`str`) - Address 1
        * `address2` (`str`) - Address 2
        * `city` (`str`) - City
        * `country` (`str`) - Country
        * `postal_code` (`str`) - Postal code
        * `state` (`str`) - State

      * `email` (`str`) - Email address
      * `fax` (`str`) - Fax number
      * `job_title` (`str`) - Job title
      * `name_first` (`str`) - First name
      * `name_last` (`str`) - Last name
      * `name_middle` (`str`) - Middle name
      * `organization` (`str`) - Organization
      * `phone` (`str`) - Phone number
    """
    contact_registrant: pulumi.Output[dict]
    """
    Registrant contact information
      * `address_mailing` (`dict`) - Mailing address
        * `address1` (`str`) - Address 1
        * `address2` (`str`) - Address 2
        * `city` (`str`) - City
        * `country` (`str`) - Country
        * `postal_code` (`str`) - Postal code
        * `state` (`str`) - State

      * `email` (`str`) - Email address
      * `fax` (`str`) - Fax number
      * `job_title` (`str`) - Job title
      * `name_first` (`str`) - First name
      * `name_last` (`str`) - Last name
      * `name_middle` (`str`) - Middle name
      * `organization` (`str`) - Organization
      * `phone` (`str`) - Phone number
    """
    contact_tech: pulumi.Output[dict]
    """
    Technical contact information
      * `address_mailing` (`dict`) - Mailing address
        * `address1` (`str`) - Address 1
        * `address2` (`str`) - Address 2
        * `city` (`str`) - City
        * `country` (`str`) - Country
        * `postal_code` (`str`) - Postal code
        * `state` (`str`) - State

      * `email` (`str`) - Email address
      * `fax` (`str`) - Fax number
      * `job_title` (`str`) - Job title
      * `name_first` (`str`) - First name
      * `name_last` (`str`) - Last name
      * `name_middle` (`str`) - Middle name
      * `organization` (`str`) - Organization
      * `phone` (`str`) - Phone number
    """
    created_time: pulumi.Output[str]
    """
    Domain creation timestamp
    """
    domain_not_renewable_reasons: pulumi.Output[list]
    """
    Reasons why domain is not renewable
    """
    expiration_time: pulumi.Output[str]
    """
    Domain expiration timestamp
    """
    kind: pulumi.Output[str]
    """
    Kind of resource
    """
    last_renewed_time: pulumi.Output[str]
    """
    Timestamp when the domain was renewed last time
    """
    location: pulumi.Output[str]
    """
    Resource Location
    """
    managed_host_names: pulumi.Output[list]
    """
    All hostnames derived from the domain and assigned to Azure resources
      * `azure_resource_name` (`str`) - Name of the Azure resource the hostname is assigned to. If it is assigned to a traffic manager then it will be the traffic manager name otherwise it will be the website name
      * `azure_resource_type` (`str`) - Type of the Azure resource the hostname is assigned to
      * `custom_host_name_dns_record_type` (`str`) - Type of the Dns record
      * `host_name_type` (`str`) - Type of the hostname
      * `name` (`str`) - Name of the hostname
      * `site_names` (`list`) - List of sites the hostname is assigned to. This list will have more than one site only if the hostname is pointing to a Traffic Manager
    """
    name: pulumi.Output[str]
    """
    Resource Name
    """
    name_servers: pulumi.Output[list]
    """
    Name servers
    """
    privacy: pulumi.Output[bool]
    """
    If true then domain privacy is enabled for this domain
    """
    provisioning_state: pulumi.Output[str]
    """
    Domain provisioning state
    """
    ready_for_dns_record_management: pulumi.Output[bool]
    """
    If true then Azure can assign this domain to Web Apps. This value will be true if domain registration status is active and it is hosted on name servers Azure has programmatic access to
    """
    registration_status: pulumi.Output[str]
    """
    Domain registration status
    """
    tags: pulumi.Output[dict]
    """
    Resource tags
    """
    type: pulumi.Output[str]
    """
    Resource type
    """
    def __init__(__self__, resource_name, opts=None, auto_renew=None, consent=None, contact_admin=None, contact_billing=None, contact_registrant=None, contact_tech=None, created_time=None, domain_not_renewable_reasons=None, expiration_time=None, id=None, kind=None, last_renewed_time=None, location=None, managed_host_names=None, name=None, name_servers=None, privacy=None, provisioning_state=None, ready_for_dns_record_management=None, registration_status=None, resource_group_name=None, tags=None, type=None, __props__=None, __name__=None, __opts__=None):
        """
        Represents a domain

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_renew: If true then domain will renewed automatically
        :param pulumi.Input[dict] consent: Legal agreement consent
        :param pulumi.Input[dict] contact_admin: Admin contact information
        :param pulumi.Input[dict] contact_billing: Billing contact information
        :param pulumi.Input[dict] contact_registrant: Registrant contact information
        :param pulumi.Input[dict] contact_tech: Technical contact information
        :param pulumi.Input[str] created_time: Domain creation timestamp
        :param pulumi.Input[list] domain_not_renewable_reasons: Reasons why domain is not renewable
        :param pulumi.Input[str] expiration_time: Domain expiration timestamp
        :param pulumi.Input[str] id: Resource Id
        :param pulumi.Input[str] kind: Kind of resource
        :param pulumi.Input[str] last_renewed_time: Timestamp when the domain was renewed last time
        :param pulumi.Input[str] location: Resource Location
        :param pulumi.Input[list] managed_host_names: All hostnames derived from the domain and assigned to Azure resources
        :param pulumi.Input[str] name: Name of the domain
        :param pulumi.Input[list] name_servers: Name servers
        :param pulumi.Input[bool] privacy: If true then domain privacy is enabled for this domain
        :param pulumi.Input[str] provisioning_state: Domain provisioning state
        :param pulumi.Input[bool] ready_for_dns_record_management: If true then Azure can assign this domain to Web Apps. This value will be true if domain registration status is active and it is hosted on name servers Azure has programmatic access to
        :param pulumi.Input[str] registration_status: Domain registration status
        :param pulumi.Input[str] resource_group_name: &gt;Name of the resource group
        :param pulumi.Input[dict] tags: Resource tags
        :param pulumi.Input[str] type: Resource type

        The **consent** object supports the following:

          * `agreed_at` (`pulumi.Input[str]`) - Timestamp when the agreements were accepted
          * `agreed_by` (`pulumi.Input[str]`) - Client IP address
          * `agreement_keys` (`pulumi.Input[list]`) - List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements Api under TopLevelDomain resource

        The **contact_admin** object supports the following:

          * `address_mailing` (`pulumi.Input[dict]`) - Mailing address
            * `address1` (`pulumi.Input[str]`) - Address 1
            * `address2` (`pulumi.Input[str]`) - Address 2
            * `city` (`pulumi.Input[str]`) - City
            * `country` (`pulumi.Input[str]`) - Country
            * `postal_code` (`pulumi.Input[str]`) - Postal code
            * `state` (`pulumi.Input[str]`) - State

          * `email` (`pulumi.Input[str]`) - Email address
          * `fax` (`pulumi.Input[str]`) - Fax number
          * `job_title` (`pulumi.Input[str]`) - Job title
          * `name_first` (`pulumi.Input[str]`) - First name
          * `name_last` (`pulumi.Input[str]`) - Last name
          * `name_middle` (`pulumi.Input[str]`) - Middle name
          * `organization` (`pulumi.Input[str]`) - Organization
          * `phone` (`pulumi.Input[str]`) - Phone number

        The **managed_host_names** object supports the following:

          * `azure_resource_name` (`pulumi.Input[str]`) - Name of the Azure resource the hostname is assigned to. If it is assigned to a traffic manager then it will be the traffic manager name otherwise it will be the website name
          * `azure_resource_type` (`pulumi.Input[str]`) - Type of the Azure resource the hostname is assigned to
          * `custom_host_name_dns_record_type` (`pulumi.Input[str]`) - Type of the Dns record
          * `host_name_type` (`pulumi.Input[str]`) - Type of the hostname
          * `name` (`pulumi.Input[str]`) - Name of the hostname
          * `site_names` (`pulumi.Input[list]`) - List of sites the hostname is assigned to. This list will have more than one site only if the hostname is pointing to a Traffic Manager
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['auto_renew'] = auto_renew
            __props__['consent'] = consent
            __props__['contact_admin'] = contact_admin
            __props__['contact_billing'] = contact_billing
            __props__['contact_registrant'] = contact_registrant
            __props__['contact_tech'] = contact_tech
            __props__['created_time'] = created_time
            __props__['domain_not_renewable_reasons'] = domain_not_renewable_reasons
            __props__['expiration_time'] = expiration_time
            __props__['id'] = id
            __props__['kind'] = kind
            __props__['last_renewed_time'] = last_renewed_time
            if location is None:
                raise TypeError("Missing required property 'location'")
            __props__['location'] = location
            __props__['managed_host_names'] = managed_host_names
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['name_servers'] = name_servers
            __props__['privacy'] = privacy
            __props__['provisioning_state'] = provisioning_state
            __props__['ready_for_dns_record_management'] = ready_for_dns_record_management
            __props__['registration_status'] = registration_status
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['type'] = type
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azurerm:domainregistration/v20150401:Domain"), pulumi.Alias(type_="azurerm:domainregistration/v20180201:Domain"), pulumi.Alias(type_="azurerm:domainregistration/v20190801:Domain"), pulumi.Alias(type_="azurerm:domainregistration/v20200601:Domain")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(Domain, __self__).__init__(
            'azurerm:domainregistration/v20150801:Domain',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing Domain resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return Domain(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
