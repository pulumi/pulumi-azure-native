# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListNotificationHubKeysResult:
    """
    Namespace/NotificationHub Connection String
    """
    def __init__(__self__, primary_connection_string=None, secondary_connection_string=None):
        if primary_connection_string and not isinstance(primary_connection_string, str):
            raise TypeError("Expected argument 'primary_connection_string' to be a str")
        __self__.primary_connection_string = primary_connection_string
        """
        Gets or sets the primaryConnectionString of the created Namespace AuthorizationRule.
        """
        if secondary_connection_string and not isinstance(secondary_connection_string, str):
            raise TypeError("Expected argument 'secondary_connection_string' to be a str")
        __self__.secondary_connection_string = secondary_connection_string
        """
        Gets or sets the secondaryConnectionString of the created Namespace AuthorizationRule
        """


class AwaitableListNotificationHubKeysResult(ListNotificationHubKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListNotificationHubKeysResult(
            primary_connection_string=self.primary_connection_string,
            secondary_connection_string=self.secondary_connection_string)


def list_notification_hub_keys(authorization_rule_name=None, namespace_name=None, notification_hub_name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str authorization_rule_name: The connection string of the NotificationHub for the specified authorizationRule.
    :param str namespace_name: The namespace name.
    :param str notification_hub_name: The notification hub name.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['authorizationRuleName'] = authorization_rule_name
    __args__['namespaceName'] = namespace_name
    __args__['notificationHubName'] = notification_hub_name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:notificationhubs/v20140901:listNotificationHubKeys', __args__, opts=opts).value

    return AwaitableListNotificationHubKeysResult(
        primary_connection_string=__ret__.get('primaryConnectionString'),
        secondary_connection_string=__ret__.get('secondaryConnectionString'))
