# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class NotificationHub(pulumi.CustomResource):
    location: pulumi.Output[str]
    """
    Gets or sets datacenter location of the NotificationHub.
    """
    name: pulumi.Output[str]
    """
    Gets or sets name of the NotificationHub.
    """
    properties: pulumi.Output[dict]
    """
    Gets or sets properties of the NotificationHub.
      * `adm_credential` (`dict`) - The AdmCredential of the created NotificationHub
        * `properties` (`dict`) - Gets or sets properties of NotificationHub AdmCredential.
          * `auth_token_url` (`str`) - Gets or sets the URL of the authorization token.
          * `client_id` (`str`) - Gets or sets the client identifier.
          * `client_secret` (`str`) - Gets or sets the credential secret access key.

      * `apns_credential` (`dict`) - The ApnsCredential of the created NotificationHub
        * `properties` (`dict`) - Gets or sets properties of NotificationHub ApnsCredential.
          * `apns_certificate` (`str`) - Gets or sets the APNS certificate.
          * `certificate_key` (`str`) - Gets or sets the certificate key.
          * `endpoint` (`str`) - Gets or sets the endpoint of this credential.
          * `thumbprint` (`str`) - Gets or sets the Apns certificate Thumbprint

      * `authorization_rules` (`list`) - The AuthorizationRules of the created NotificationHub
        * `claim_type` (`str`) - The type of the claim.
        * `claim_value` (`str`) - The value of the claim.
        * `created_time` (`str`) - The time at which the authorization rule was created.
        * `key_name` (`str`) - The name of the key that was used.
        * `modified_time` (`str`) - The most recent time the rule was updated.
        * `primary_key` (`str`) - The primary key that was used.
        * `revision` (`float`) - The revision number for the rule.
        * `rights` (`list`) - The rights associated with the rule.
        * `secondary_key` (`str`) - The secondary key that was used.

      * `baidu_credential` (`dict`) - The BaiduCredential of the created NotificationHub
        * `properties` (`dict`) - Gets or sets properties of NotificationHub BaiduCredential.
          * `baidu_api_key` (`str`) - Get or Set Baidu Api Key.
          * `baidu_end_point` (`str`) - Get or Set Baidu Endpoint.
          * `baidu_secret_key` (`str`) - Get or Set Baidu Secret Key

      * `gcm_credential` (`dict`) - The GcmCredential of the created NotificationHub
        * `properties` (`dict`) - Gets or sets properties of NotificationHub GcmCredential.
          * `gcm_endpoint` (`str`) - Gets or sets the GCM endpoint.
          * `google_api_key` (`str`) - Gets or sets the Google API key.

      * `mpns_credential` (`dict`) - The MpnsCredential of the created NotificationHub
        * `properties` (`dict`) - Gets or sets properties of NotificationHub MpnsCredential.
          * `certificate_key` (`str`) - Gets or sets the certificate key for this credential.
          * `mpns_certificate` (`str`) - Gets or sets the MPNS certificate.
          * `thumbprint` (`str`) - Gets or sets the Mpns certificate Thumbprint

      * `name` (`str`) - The NotificationHub name.
      * `registration_ttl` (`str`) - The RegistrationTtl of the created NotificationHub
      * `wns_credential` (`dict`) - The WnsCredential of the created NotificationHub
        * `properties` (`dict`) - Gets or sets properties of NotificationHub WnsCredential.
          * `package_sid` (`str`) - Gets or sets the package ID for this credential.
          * `secret_key` (`str`) - Gets or sets the secret key.
          * `windows_live_endpoint` (`str`) - Gets or sets the Windows Live endpoint.
    """
    tags: pulumi.Output[dict]
    """
    Gets or sets tags of the NotificationHub.
    """
    type: pulumi.Output[str]
    """
    Gets or sets resource type of the NotificationHub.
    """
    def __init__(__self__, resource_name, opts=None, location=None, name=None, namespace_name=None, properties=None, resource_group_name=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Description of a NotificationHub Resource.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] location: Gets or sets NotificationHub data center location.
        :param pulumi.Input[str] name: The notification hub name.
        :param pulumi.Input[str] namespace_name: The namespace name.
        :param pulumi.Input[dict] properties: Gets or sets properties of the NotificationHub.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[dict] tags: Gets or sets NotificationHub tags.

        The **properties** object supports the following:

          * `adm_credential` (`pulumi.Input[dict]`) - The AdmCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Gets or sets properties of NotificationHub AdmCredential.
              * `auth_token_url` (`pulumi.Input[str]`) - Gets or sets the URL of the authorization token.
              * `client_id` (`pulumi.Input[str]`) - Gets or sets the client identifier.
              * `client_secret` (`pulumi.Input[str]`) - Gets or sets the credential secret access key.

          * `apns_credential` (`pulumi.Input[dict]`) - The ApnsCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Gets or sets properties of NotificationHub ApnsCredential.
              * `apns_certificate` (`pulumi.Input[str]`) - Gets or sets the APNS certificate.
              * `certificate_key` (`pulumi.Input[str]`) - Gets or sets the certificate key.
              * `endpoint` (`pulumi.Input[str]`) - Gets or sets the endpoint of this credential.
              * `thumbprint` (`pulumi.Input[str]`) - Gets or sets the Apns certificate Thumbprint

          * `authorization_rules` (`pulumi.Input[list]`) - The AuthorizationRules of the created NotificationHub
            * `claim_type` (`pulumi.Input[str]`) - The type of the claim.
            * `claim_value` (`pulumi.Input[str]`) - The value of the claim.
            * `created_time` (`pulumi.Input[str]`) - The time at which the authorization rule was created.
            * `key_name` (`pulumi.Input[str]`) - The name of the key that was used.
            * `modified_time` (`pulumi.Input[str]`) - The most recent time the rule was updated.
            * `primary_key` (`pulumi.Input[str]`) - The primary key that was used.
            * `revision` (`pulumi.Input[float]`) - The revision number for the rule.
            * `rights` (`pulumi.Input[list]`) - The rights associated with the rule.
            * `secondary_key` (`pulumi.Input[str]`) - The secondary key that was used.

          * `baidu_credential` (`pulumi.Input[dict]`) - The BaiduCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Gets or sets properties of NotificationHub BaiduCredential.
              * `baidu_api_key` (`pulumi.Input[str]`) - Get or Set Baidu Api Key.
              * `baidu_end_point` (`pulumi.Input[str]`) - Get or Set Baidu Endpoint.
              * `baidu_secret_key` (`pulumi.Input[str]`) - Get or Set Baidu Secret Key

          * `gcm_credential` (`pulumi.Input[dict]`) - The GcmCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Gets or sets properties of NotificationHub GcmCredential.
              * `gcm_endpoint` (`pulumi.Input[str]`) - Gets or sets the GCM endpoint.
              * `google_api_key` (`pulumi.Input[str]`) - Gets or sets the Google API key.

          * `mpns_credential` (`pulumi.Input[dict]`) - The MpnsCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Gets or sets properties of NotificationHub MpnsCredential.
              * `certificate_key` (`pulumi.Input[str]`) - Gets or sets the certificate key for this credential.
              * `mpns_certificate` (`pulumi.Input[str]`) - Gets or sets the MPNS certificate.
              * `thumbprint` (`pulumi.Input[str]`) - Gets or sets the Mpns certificate Thumbprint

          * `name` (`pulumi.Input[str]`) - The NotificationHub name.
          * `registration_ttl` (`pulumi.Input[str]`) - The RegistrationTtl of the created NotificationHub
          * `wns_credential` (`pulumi.Input[dict]`) - The WnsCredential of the created NotificationHub
            * `properties` (`pulumi.Input[dict]`) - Gets or sets properties of NotificationHub WnsCredential.
              * `package_sid` (`pulumi.Input[str]`) - Gets or sets the package ID for this credential.
              * `secret_key` (`pulumi.Input[str]`) - Gets or sets the secret key.
              * `windows_live_endpoint` (`pulumi.Input[str]`) - Gets or sets the Windows Live endpoint.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if location is None:
                raise TypeError("Missing required property 'location'")
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            if namespace_name is None:
                raise TypeError("Missing required property 'namespace_name'")
            __props__['namespace_name'] = namespace_name
            if properties is None:
                raise TypeError("Missing required property 'properties'")
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['type'] = None
        super(NotificationHub, __self__).__init__(
            'azurerm:notificationhubs/v20140901:NotificationHub',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing NotificationHub resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return NotificationHub(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
