# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetWebAppSwiftVirtualNetworkConnectionResult:
    """
    Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
    """
    def __init__(__self__, kind=None, name=None, subnet_resource_id=None, swift_supported=None, type=None):
        if kind and not isinstance(kind, str):
            raise TypeError("Expected argument 'kind' to be a str")
        __self__.kind = kind
        """
        Kind of resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Resource Name.
        """
        if subnet_resource_id and not isinstance(subnet_resource_id, str):
            raise TypeError("Expected argument 'subnet_resource_id' to be a str")
        __self__.subnet_resource_id = subnet_resource_id
        """
        The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
        """
        if swift_supported and not isinstance(swift_supported, bool):
            raise TypeError("Expected argument 'swift_supported' to be a bool")
        __self__.swift_supported = swift_supported
        """
        A flag that specifies if the scale unit this Web App is on supports Swift integration.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Resource type.
        """


class AwaitableGetWebAppSwiftVirtualNetworkConnectionResult(GetWebAppSwiftVirtualNetworkConnectionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWebAppSwiftVirtualNetworkConnectionResult(
            kind=self.kind,
            name=self.name,
            subnet_resource_id=self.subnet_resource_id,
            swift_supported=self.swift_supported,
            type=self.type)


def get_web_app_swift_virtual_network_connection(name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: Name of the app.
    :param str resource_group_name: Name of the resource group to which the resource belongs.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:web/v20200601:getWebAppSwiftVirtualNetworkConnection', __args__, opts=opts).value

    return AwaitableGetWebAppSwiftVirtualNetworkConnectionResult(
        kind=__ret__.get('kind'),
        name=__ret__.get('name'),
        subnet_resource_id=__ret__.get('subnetResourceId'),
        swift_supported=__ret__.get('swiftSupported'),
        type=__ret__.get('type'))
