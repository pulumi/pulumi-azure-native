# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class ListWebAppHostKeysResult:
    """
    Functions host level keys.
    """
    def __init__(__self__, function_keys=None, master_key=None, system_keys=None):
        if function_keys and not isinstance(function_keys, dict):
            raise TypeError("Expected argument 'function_keys' to be a dict")
        __self__.function_keys = function_keys
        """
        Host level function keys.
        """
        if master_key and not isinstance(master_key, str):
            raise TypeError("Expected argument 'master_key' to be a str")
        __self__.master_key = master_key
        """
        Secret key.
        """
        if system_keys and not isinstance(system_keys, dict):
            raise TypeError("Expected argument 'system_keys' to be a dict")
        __self__.system_keys = system_keys
        """
        System keys.
        """


class AwaitableListWebAppHostKeysResult(ListWebAppHostKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListWebAppHostKeysResult(
            function_keys=self.function_keys,
            master_key=self.master_key,
            system_keys=self.system_keys)


def list_web_app_host_keys(name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str name: Site name.
    :param str resource_group_name: Name of the resource group to which the resource belongs.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:web/v20190801:listWebAppHostKeys', __args__, opts=opts).value

    return AwaitableListWebAppHostKeysResult(
        function_keys=__ret__.get('functionKeys'),
        master_key=__ret__.get('masterKey'),
        system_keys=__ret__.get('systemKeys'))
