# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class HostingEnvironment(pulumi.CustomResource):
    allowed_multi_sizes: pulumi.Output[str]
    """
    List of comma separated strings describing which VM sizes are allowed for front-ends
    """
    allowed_worker_sizes: pulumi.Output[str]
    """
    List of comma separated strings describing which VM sizes are allowed for workers
    """
    api_management_account_id: pulumi.Output[str]
    """
    Api Management Account associated with this Hosting Environment
    """
    cluster_settings: pulumi.Output[list]
    """
    Custom settings for changing the behavior of the hosting environment
      * `name` (`str`) - Pair name
      * `value` (`str`) - Pair value
    """
    database_edition: pulumi.Output[str]
    """
    Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
    """
    database_service_objective: pulumi.Output[str]
    """
    Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
    """
    dns_suffix: pulumi.Output[str]
    """
    DNS suffix of the hostingEnvironment (App Service Environment)
    """
    environment_capacities: pulumi.Output[list]
    """
    Current total, used, and available worker capacities
      * `available_capacity` (`float`) - Available capacity (# of machines, bytes of storage etc...)
      * `compute_mode` (`str`) - Shared/Dedicated workers
      * `exclude_from_capacity_allocation` (`bool`) - If true it includes basic sites
                    Basic sites are not used for capacity allocation.
      * `is_applicable_for_all_compute_modes` (`bool`) - Is capacity applicable for all sites?
      * `name` (`str`) - Name of the stamp
      * `site_mode` (`str`) - Shared or Dedicated
      * `total_capacity` (`float`) - Total capacity (# of machines, bytes of storage etc...)
      * `unit` (`str`) - Name of the unit
      * `worker_size` (`str`) - Size of the machines
      * `worker_size_id` (`float`) - Size Id of machines: 
                    0 - Small
                    1 - Medium
                    2 - Large
    """
    environment_is_healthy: pulumi.Output[bool]
    """
    True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
    """
    environment_status: pulumi.Output[str]
    """
    Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
    """
    internal_load_balancing_mode: pulumi.Output[str]
    """
    Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
    """
    ipssl_address_count: pulumi.Output[float]
    """
    Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
    """
    kind: pulumi.Output[str]
    """
    Kind of resource
    """
    last_action: pulumi.Output[str]
    """
    Last deployment action on this hostingEnvironment (App Service Environment)
    """
    last_action_result: pulumi.Output[str]
    """
    Result of the last deployment action on this hostingEnvironment (App Service Environment)
    """
    location: pulumi.Output[str]
    """
    Resource Location
    """
    maximum_number_of_machines: pulumi.Output[float]
    """
    Maximum number of VMs in this hostingEnvironment (App Service Environment)
    """
    multi_role_count: pulumi.Output[float]
    """
    Number of front-end instances
    """
    multi_size: pulumi.Output[str]
    """
    Front-end VM size, e.g. "Medium", "Large"
    """
    name: pulumi.Output[str]
    """
    Resource Name
    """
    network_access_control_list: pulumi.Output[list]
    """
    Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
      * `action` (`str`)
      * `description` (`str`)
      * `order` (`float`)
      * `remote_subnet` (`str`)
    """
    provisioning_state: pulumi.Output[str]
    """
    Provisioning state of the hostingEnvironment (App Service Environment)
    """
    resource_group: pulumi.Output[str]
    """
    Resource group of the hostingEnvironment (App Service Environment)
    """
    status: pulumi.Output[str]
    """
    Current status of the hostingEnvironment (App Service Environment)
    """
    subscription_id: pulumi.Output[str]
    """
    Subscription of the hostingEnvironment (App Service Environment)
    """
    suspended: pulumi.Output[bool]
    """
    True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
                (most likely because NSG blocked the incoming traffic)
    """
    tags: pulumi.Output[dict]
    """
    Resource tags
    """
    type: pulumi.Output[str]
    """
    Resource type
    """
    upgrade_domains: pulumi.Output[float]
    """
    Number of upgrade domains of this hostingEnvironment (App Service Environment)
    """
    vip_mappings: pulumi.Output[list]
    """
    Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
      * `in_use` (`bool`) - Is VIP mapping in use
      * `internal_http_port` (`float`) - Internal HTTP port
      * `internal_https_port` (`float`) - Internal HTTPS port
      * `virtual_ip` (`str`) - Virtual IP address
    """
    virtual_network: pulumi.Output[dict]
    """
    Description of the hostingEnvironment's (App Service Environment) virtual network
      * `id` (`str`) - Resource id of the virtual network
      * `name` (`str`) - Name of the virtual network (read-only)
      * `subnet` (`str`) - Subnet within the virtual network
      * `type` (`str`) - Resource type of the virtual network (read-only)
    """
    vnet_name: pulumi.Output[str]
    """
    Name of the hostingEnvironment's (App Service Environment) virtual network
    """
    vnet_resource_group_name: pulumi.Output[str]
    """
    Resource group of the hostingEnvironment's (App Service Environment) virtual network
    """
    vnet_subnet_name: pulumi.Output[str]
    """
    Subnet of the hostingEnvironment's (App Service Environment) virtual network
    """
    worker_pools: pulumi.Output[list]
    """
    Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
      * `compute_mode` (`str`) - Shared or dedicated web app hosting
      * `id` (`str`) - Resource Id
      * `instance_names` (`list`) - Names of all instances in the worker pool (read only)
      * `kind` (`str`) - Kind of resource
      * `location` (`str`) - Resource Location
      * `name` (`str`) - Resource Name
      * `sku` (`dict`) - Describes a sku for a scalable resource
        * `capacity` (`float`) - Current number of instances assigned to the resource
        * `family` (`str`) - Family code of the resource sku
        * `name` (`str`) - Name of the resource sku
        * `size` (`str`) - Size specifier of the resource sku
        * `tier` (`str`) - Service Tier of the resource sku

      * `tags` (`dict`) - Resource tags
      * `type` (`str`) - Resource type
      * `worker_count` (`float`) - Number of instances in the worker pool
      * `worker_size` (`str`) - VM size of the worker pool instances
      * `worker_size_id` (`float`) - Worker size id for referencing this worker pool
    """
    def __init__(__self__, resource_name, opts=None, allowed_multi_sizes=None, allowed_worker_sizes=None, api_management_account_id=None, cluster_settings=None, database_edition=None, database_service_objective=None, dns_suffix=None, environment_capacities=None, environment_is_healthy=None, environment_status=None, id=None, internal_load_balancing_mode=None, ipssl_address_count=None, kind=None, last_action=None, last_action_result=None, location=None, maximum_number_of_machines=None, multi_role_count=None, multi_size=None, name=None, network_access_control_list=None, provisioning_state=None, resource_group=None, resource_group_name=None, status=None, subscription_id=None, suspended=None, tags=None, type=None, upgrade_domains=None, vip_mappings=None, virtual_network=None, vnet_name=None, vnet_resource_group_name=None, vnet_subnet_name=None, worker_pools=None, __props__=None, __name__=None, __opts__=None):
        """
        Description of an hostingEnvironment (App Service Environment)

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] allowed_multi_sizes: List of comma separated strings describing which VM sizes are allowed for front-ends
        :param pulumi.Input[str] allowed_worker_sizes: List of comma separated strings describing which VM sizes are allowed for workers
        :param pulumi.Input[str] api_management_account_id: Api Management Account associated with this Hosting Environment
        :param pulumi.Input[list] cluster_settings: Custom settings for changing the behavior of the hosting environment
        :param pulumi.Input[str] database_edition: Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
        :param pulumi.Input[str] database_service_objective: Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
        :param pulumi.Input[str] dns_suffix: DNS suffix of the hostingEnvironment (App Service Environment)
        :param pulumi.Input[list] environment_capacities: Current total, used, and available worker capacities
        :param pulumi.Input[bool] environment_is_healthy: True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
        :param pulumi.Input[str] environment_status: Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
        :param pulumi.Input[str] id: Resource Id
        :param pulumi.Input[str] internal_load_balancing_mode: Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
        :param pulumi.Input[float] ipssl_address_count: Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
        :param pulumi.Input[str] kind: Kind of resource
        :param pulumi.Input[str] last_action: Last deployment action on this hostingEnvironment (App Service Environment)
        :param pulumi.Input[str] last_action_result: Result of the last deployment action on this hostingEnvironment (App Service Environment)
        :param pulumi.Input[str] location: Resource Location
        :param pulumi.Input[float] maximum_number_of_machines: Maximum number of VMs in this hostingEnvironment (App Service Environment)
        :param pulumi.Input[float] multi_role_count: Number of front-end instances
        :param pulumi.Input[str] multi_size: Front-end VM size, e.g. "Medium", "Large"
        :param pulumi.Input[str] name: Resource Name
        :param pulumi.Input[list] network_access_control_list: Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
        :param pulumi.Input[str] provisioning_state: Provisioning state of the hostingEnvironment (App Service Environment)
        :param pulumi.Input[str] resource_group: Resource group of the hostingEnvironment (App Service Environment)
        :param pulumi.Input[str] resource_group_name: Name of resource group
        :param pulumi.Input[str] status: Current status of the hostingEnvironment (App Service Environment)
        :param pulumi.Input[str] subscription_id: Subscription of the hostingEnvironment (App Service Environment)
        :param pulumi.Input[bool] suspended: True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
                           (most likely because NSG blocked the incoming traffic)
        :param pulumi.Input[dict] tags: Resource tags
        :param pulumi.Input[str] type: Resource type
        :param pulumi.Input[float] upgrade_domains: Number of upgrade domains of this hostingEnvironment (App Service Environment)
        :param pulumi.Input[list] vip_mappings: Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
        :param pulumi.Input[dict] virtual_network: Description of the hostingEnvironment's (App Service Environment) virtual network
        :param pulumi.Input[str] vnet_name: Name of the hostingEnvironment's (App Service Environment) virtual network
        :param pulumi.Input[str] vnet_resource_group_name: Resource group of the hostingEnvironment's (App Service Environment) virtual network
        :param pulumi.Input[str] vnet_subnet_name: Subnet of the hostingEnvironment's (App Service Environment) virtual network
        :param pulumi.Input[list] worker_pools: Description of worker pools with worker size ids, VM sizes, and number of workers in each pool

        The **cluster_settings** object supports the following:

          * `name` (`pulumi.Input[str]`) - Pair name
          * `value` (`pulumi.Input[str]`) - Pair value

        The **environment_capacities** object supports the following:

          * `available_capacity` (`pulumi.Input[float]`) - Available capacity (# of machines, bytes of storage etc...)
          * `compute_mode` (`pulumi.Input[str]`) - Shared/Dedicated workers
          * `exclude_from_capacity_allocation` (`pulumi.Input[bool]`) - If true it includes basic sites
                        Basic sites are not used for capacity allocation.
          * `is_applicable_for_all_compute_modes` (`pulumi.Input[bool]`) - Is capacity applicable for all sites?
          * `name` (`pulumi.Input[str]`) - Name of the stamp
          * `site_mode` (`pulumi.Input[str]`) - Shared or Dedicated
          * `total_capacity` (`pulumi.Input[float]`) - Total capacity (# of machines, bytes of storage etc...)
          * `unit` (`pulumi.Input[str]`) - Name of the unit
          * `worker_size` (`pulumi.Input[str]`) - Size of the machines
          * `worker_size_id` (`pulumi.Input[float]`) - Size Id of machines: 
                        0 - Small
                        1 - Medium
                        2 - Large

        The **network_access_control_list** object supports the following:

          * `action` (`pulumi.Input[str]`)
          * `description` (`pulumi.Input[str]`)
          * `order` (`pulumi.Input[float]`)
          * `remote_subnet` (`pulumi.Input[str]`)

        The **vip_mappings** object supports the following:

          * `in_use` (`pulumi.Input[bool]`) - Is VIP mapping in use
          * `internal_http_port` (`pulumi.Input[float]`) - Internal HTTP port
          * `internal_https_port` (`pulumi.Input[float]`) - Internal HTTPS port
          * `virtual_ip` (`pulumi.Input[str]`) - Virtual IP address

        The **virtual_network** object supports the following:

          * `id` (`pulumi.Input[str]`) - Resource id of the virtual network
          * `name` (`pulumi.Input[str]`) - Name of the virtual network (read-only)
          * `subnet` (`pulumi.Input[str]`) - Subnet within the virtual network
          * `type` (`pulumi.Input[str]`) - Resource type of the virtual network (read-only)

        The **worker_pools** object supports the following:

          * `compute_mode` (`pulumi.Input[str]`) - Shared or dedicated web app hosting
          * `id` (`pulumi.Input[str]`) - Resource Id
          * `instance_names` (`pulumi.Input[list]`) - Names of all instances in the worker pool (read only)
          * `kind` (`pulumi.Input[str]`) - Kind of resource
          * `location` (`pulumi.Input[str]`) - Resource Location
          * `name` (`pulumi.Input[str]`) - Resource Name
          * `sku` (`pulumi.Input[dict]`) - Describes a sku for a scalable resource
            * `capacity` (`pulumi.Input[float]`) - Current number of instances assigned to the resource
            * `family` (`pulumi.Input[str]`) - Family code of the resource sku
            * `name` (`pulumi.Input[str]`) - Name of the resource sku
            * `size` (`pulumi.Input[str]`) - Size specifier of the resource sku
            * `tier` (`pulumi.Input[str]`) - Service Tier of the resource sku

          * `tags` (`pulumi.Input[dict]`) - Resource tags
          * `type` (`pulumi.Input[str]`) - Resource type
          * `worker_count` (`pulumi.Input[float]`) - Number of instances in the worker pool
          * `worker_size` (`pulumi.Input[str]`) - VM size of the worker pool instances
          * `worker_size_id` (`pulumi.Input[float]`) - Worker size id for referencing this worker pool
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['allowed_multi_sizes'] = allowed_multi_sizes
            __props__['allowed_worker_sizes'] = allowed_worker_sizes
            __props__['api_management_account_id'] = api_management_account_id
            __props__['cluster_settings'] = cluster_settings
            __props__['database_edition'] = database_edition
            __props__['database_service_objective'] = database_service_objective
            __props__['dns_suffix'] = dns_suffix
            __props__['environment_capacities'] = environment_capacities
            __props__['environment_is_healthy'] = environment_is_healthy
            __props__['environment_status'] = environment_status
            __props__['id'] = id
            __props__['internal_load_balancing_mode'] = internal_load_balancing_mode
            __props__['ipssl_address_count'] = ipssl_address_count
            __props__['kind'] = kind
            __props__['last_action'] = last_action
            __props__['last_action_result'] = last_action_result
            if location is None:
                raise TypeError("Missing required property 'location'")
            __props__['location'] = location
            __props__['maximum_number_of_machines'] = maximum_number_of_machines
            __props__['multi_role_count'] = multi_role_count
            __props__['multi_size'] = multi_size
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['network_access_control_list'] = network_access_control_list
            __props__['provisioning_state'] = provisioning_state
            __props__['resource_group'] = resource_group
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            if status is None:
                raise TypeError("Missing required property 'status'")
            __props__['status'] = status
            __props__['subscription_id'] = subscription_id
            __props__['suspended'] = suspended
            __props__['tags'] = tags
            __props__['type'] = type
            __props__['upgrade_domains'] = upgrade_domains
            __props__['vip_mappings'] = vip_mappings
            __props__['virtual_network'] = virtual_network
            __props__['vnet_name'] = vnet_name
            __props__['vnet_resource_group_name'] = vnet_resource_group_name
            __props__['vnet_subnet_name'] = vnet_subnet_name
            __props__['worker_pools'] = worker_pools
        super(HostingEnvironment, __self__).__init__(
            'azurerm:web/v20150801:HostingEnvironment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing HostingEnvironment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return HostingEnvironment(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
