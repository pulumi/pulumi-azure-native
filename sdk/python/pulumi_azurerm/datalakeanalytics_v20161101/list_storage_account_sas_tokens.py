# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListStorageAccountSasTokensResult:
    """
    The SAS response that contains the storage account, container and associated SAS token for connection use.
    """
    def __init__(__self__, next_link=None, value=None):
        if next_link and not isinstance(next_link, str):
            raise TypeError("Expected argument 'next_link' to be a str")
        __self__.next_link = next_link
        """
        The link (url) to the next page of results.
        """
        if value and not isinstance(value, list):
            raise TypeError("Expected argument 'value' to be a list")
        __self__.value = value
        """
        The results of the list operation.
        """


class AwaitableListStorageAccountSasTokensResult(ListStorageAccountSasTokensResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListStorageAccountSasTokensResult(
            next_link=self.next_link,
            value=self.value)


def list_storage_account_sas_tokens(account_name=None, container_name=None, resource_group_name=None, storage_account_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str account_name: The name of the Data Lake Analytics account.
    :param str container_name: The name of the Azure storage container for which the SAS token is being requested.
    :param str resource_group_name: The name of the Azure resource group.
    :param str storage_account_name: The name of the Azure storage account for which the SAS token is being requested.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['containerName'] = container_name
    __args__['resourceGroupName'] = resource_group_name
    __args__['storageAccountName'] = storage_account_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:datalakeanalytics/v20161101:listStorageAccountSasTokens', __args__, opts=opts).value

    return AwaitableListStorageAccountSasTokensResult(
        next_link=__ret__.get('nextLink'),
        value=__ret__.get('value'))
