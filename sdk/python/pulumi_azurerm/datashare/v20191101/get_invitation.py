# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetInvitationResult:
    """
    A Invitation data transfer object.
    """
    def __init__(__self__, invitation_id=None, invitation_status=None, name=None, responded_at=None, sent_at=None, target_active_directory_id=None, target_email=None, target_object_id=None, type=None, user_email=None, user_name=None):
        if invitation_id and not isinstance(invitation_id, str):
            raise TypeError("Expected argument 'invitation_id' to be a str")
        __self__.invitation_id = invitation_id
        """
        unique invitation id
        """
        if invitation_status and not isinstance(invitation_status, str):
            raise TypeError("Expected argument 'invitation_status' to be a str")
        __self__.invitation_status = invitation_status
        """
        The status of the invitation.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        Name of the azure resource
        """
        if responded_at and not isinstance(responded_at, str):
            raise TypeError("Expected argument 'responded_at' to be a str")
        __self__.responded_at = responded_at
        """
        The time the recipient responded to the invitation.
        """
        if sent_at and not isinstance(sent_at, str):
            raise TypeError("Expected argument 'sent_at' to be a str")
        __self__.sent_at = sent_at
        """
        Gets the time at which the invitation was sent.
        """
        if target_active_directory_id and not isinstance(target_active_directory_id, str):
            raise TypeError("Expected argument 'target_active_directory_id' to be a str")
        __self__.target_active_directory_id = target_active_directory_id
        """
        The target Azure AD Id. Can't be combined with email.
        """
        if target_email and not isinstance(target_email, str):
            raise TypeError("Expected argument 'target_email' to be a str")
        __self__.target_email = target_email
        """
        The email the invitation is directed to.
        """
        if target_object_id and not isinstance(target_object_id, str):
            raise TypeError("Expected argument 'target_object_id' to be a str")
        __self__.target_object_id = target_object_id
        """
        The target user or application Id that invitation is being sent to.
        Must be specified along TargetActiveDirectoryId. This enables sending
        invitations to specific users or applications in an AD tenant.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        Type of the azure resource
        """
        if user_email and not isinstance(user_email, str):
            raise TypeError("Expected argument 'user_email' to be a str")
        __self__.user_email = user_email
        """
        Email of the user who created the resource
        """
        if user_name and not isinstance(user_name, str):
            raise TypeError("Expected argument 'user_name' to be a str")
        __self__.user_name = user_name
        """
        Name of the user who created the resource
        """


class AwaitableGetInvitationResult(GetInvitationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInvitationResult(
            invitation_id=self.invitation_id,
            invitation_status=self.invitation_status,
            name=self.name,
            responded_at=self.responded_at,
            sent_at=self.sent_at,
            target_active_directory_id=self.target_active_directory_id,
            target_email=self.target_email,
            target_object_id=self.target_object_id,
            type=self.type,
            user_email=self.user_email,
            user_name=self.user_name)


def get_invitation(account_name=None, name=None, resource_group_name=None, share_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str account_name: The name of the share account.
    :param str name: The name of the invitation.
    :param str resource_group_name: The resource group name.
    :param str share_name: The name of the share.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['shareName'] = share_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:datashare/v20191101:getInvitation', __args__, opts=opts).value

    return AwaitableGetInvitationResult(
        invitation_id=__ret__.get('invitationId'),
        invitation_status=__ret__.get('invitationStatus'),
        name=__ret__.get('name'),
        responded_at=__ret__.get('respondedAt'),
        sent_at=__ret__.get('sentAt'),
        target_active_directory_id=__ret__.get('targetActiveDirectoryId'),
        target_email=__ret__.get('targetEmail'),
        target_object_id=__ret__.get('targetObjectId'),
        type=__ret__.get('type'),
        user_email=__ret__.get('userEmail'),
        user_name=__ret__.get('userName'))
