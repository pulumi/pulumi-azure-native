# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class AccountShareInvitation(pulumi.CustomResource):
    name: pulumi.Output[str]
    """
    Name of the azure resource
    """
    properties: pulumi.Output[dict]
    """
    Properties on the Invitation
      * `invitation_id` (`str`) - unique invitation id
      * `invitation_status` (`str`) - The status of the invitation.
      * `responded_at` (`str`) - The time the recipient responded to the invitation.
      * `sent_at` (`str`) - Gets the time at which the invitation was sent.
      * `target_active_directory_id` (`str`) - The target Azure AD Id. Can't be combined with email.
      * `target_email` (`str`) - The email the invitation is directed to.
      * `target_object_id` (`str`) - The target user or application Id that invitation is being sent to.
        Must be specified along TargetActiveDirectoryId. This enables sending
        invitations to specific users or applications in an AD tenant.
      * `user_email` (`str`) - Email of the user who created the resource
      * `user_name` (`str`) - Name of the user who created the resource
    """
    type: pulumi.Output[str]
    """
    Type of the azure resource
    """
    def __init__(__self__, resource_name, opts=None, account_name=None, name=None, properties=None, resource_group_name=None, share_name=None, __props__=None, __name__=None, __opts__=None):
        """
        A Invitation data transfer object.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] account_name: The name of the share account.
        :param pulumi.Input[str] name: The name of the invitation.
        :param pulumi.Input[dict] properties: Properties on the Invitation
        :param pulumi.Input[str] resource_group_name: The resource group name.
        :param pulumi.Input[str] share_name: The name of the share to send the invitation for.

        The **properties** object supports the following:

          * `target_active_directory_id` (`pulumi.Input[str]`) - The target Azure AD Id. Can't be combined with email.
          * `target_email` (`pulumi.Input[str]`) - The email the invitation is directed to.
          * `target_object_id` (`pulumi.Input[str]`) - The target user or application Id that invitation is being sent to.
            Must be specified along TargetActiveDirectoryId. This enables sending
            invitations to specific users or applications in an AD tenant.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if account_name is None:
                raise TypeError("Missing required property 'account_name'")
            __props__['account_name'] = account_name
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            if share_name is None:
                raise TypeError("Missing required property 'share_name'")
            __props__['share_name'] = share_name
            __props__['type'] = None
        super(AccountShareInvitation, __self__).__init__(
            'azurerm:datashare:AccountShareInvitation',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, name=None, properties=None, type=None):
        """
        Get an existing AccountShareInvitation resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] name: Name of the azure resource
        :param pulumi.Input[dict] properties: Properties on the Invitation
        :param pulumi.Input[str] type: Type of the azure resource

        The **properties** object supports the following:

          * `invitation_id` (`pulumi.Input[str]`) - unique invitation id
          * `invitation_status` (`pulumi.Input[str]`) - The status of the invitation.
          * `responded_at` (`pulumi.Input[str]`) - The time the recipient responded to the invitation.
          * `sent_at` (`pulumi.Input[str]`) - Gets the time at which the invitation was sent.
          * `target_active_directory_id` (`pulumi.Input[str]`) - The target Azure AD Id. Can't be combined with email.
          * `target_email` (`pulumi.Input[str]`) - The email the invitation is directed to.
          * `target_object_id` (`pulumi.Input[str]`) - The target user or application Id that invitation is being sent to.
            Must be specified along TargetActiveDirectoryId. This enables sending
            invitations to specific users or applications in an AD tenant.
          * `user_email` (`pulumi.Input[str]`) - Email of the user who created the resource
          * `user_name` (`pulumi.Input[str]`) - Name of the user who created the resource
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["name"] = name
        __props__["properties"] = properties
        __props__["type"] = type
        return AccountShareInvitation(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
