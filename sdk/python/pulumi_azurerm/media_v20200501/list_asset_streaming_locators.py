# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListAssetStreamingLocatorsResult:
    """
    The Streaming Locators associated with this Asset.
    """
    def __init__(__self__, streaming_locators=None):
        if streaming_locators and not isinstance(streaming_locators, list):
            raise TypeError("Expected argument 'streaming_locators' to be a list")
        __self__.streaming_locators = streaming_locators
        """
        The list of Streaming Locators.
        """


class AwaitableListAssetStreamingLocatorsResult(ListAssetStreamingLocatorsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListAssetStreamingLocatorsResult(
            streaming_locators=self.streaming_locators)


def list_asset_streaming_locators(account_name=None, asset_name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str account_name: The Media Services account name.
    :param str asset_name: The Asset name.
    :param str resource_group_name: The name of the resource group within the Azure subscription.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['assetName'] = asset_name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:media/v20200501:listAssetStreamingLocators', __args__, opts=opts).value

    return AwaitableListAssetStreamingLocatorsResult(
        streaming_locators=__ret__.get('streamingLocators'))
