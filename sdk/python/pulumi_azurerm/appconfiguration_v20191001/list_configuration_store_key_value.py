# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListConfigurationStoreKeyValueResult:
    """
    The result of a request to retrieve a key-value from the specified configuration store.
    """
    def __init__(__self__, content_type=None, e_tag=None, key=None, label=None, last_modified=None, locked=None, tags=None, value=None):
        if content_type and not isinstance(content_type, str):
            raise TypeError("Expected argument 'content_type' to be a str")
        __self__.content_type = content_type
        """
        The content type of the key-value's value.
        Providing a proper content-type can enable transformations of values when they are retrieved by applications.
        """
        if e_tag and not isinstance(e_tag, str):
            raise TypeError("Expected argument 'e_tag' to be a str")
        __self__.e_tag = e_tag
        """
        An ETag indicating the state of a key-value within a configuration store.
        """
        if key and not isinstance(key, str):
            raise TypeError("Expected argument 'key' to be a str")
        __self__.key = key
        """
        The primary identifier of a key-value.
        The key is used in unison with the label to uniquely identify a key-value.
        """
        if label and not isinstance(label, str):
            raise TypeError("Expected argument 'label' to be a str")
        __self__.label = label
        """
        A value used to group key-values.
        The label is used in unison with the key to uniquely identify a key-value.
        """
        if last_modified and not isinstance(last_modified, str):
            raise TypeError("Expected argument 'last_modified' to be a str")
        __self__.last_modified = last_modified
        """
        The last time a modifying operation was performed on the given key-value.
        """
        if locked and not isinstance(locked, bool):
            raise TypeError("Expected argument 'locked' to be a bool")
        __self__.locked = locked
        """
        A value indicating whether the key-value is locked.
        A locked key-value may not be modified until it is unlocked.
        """
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        __self__.tags = tags
        """
        A dictionary of tags that can help identify what a key-value may be applicable for.
        """
        if value and not isinstance(value, str):
            raise TypeError("Expected argument 'value' to be a str")
        __self__.value = value
        """
        The value of the key-value.
        """


class AwaitableListConfigurationStoreKeyValueResult(ListConfigurationStoreKeyValueResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListConfigurationStoreKeyValueResult(
            content_type=self.content_type,
            e_tag=self.e_tag,
            key=self.key,
            label=self.label,
            last_modified=self.last_modified,
            locked=self.locked,
            tags=self.tags,
            value=self.value)


def list_configuration_store_key_value(config_store_name=None, key=None, label=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str config_store_name: The name of the configuration store.
    :param str key: The key to retrieve.
    :param str label: The label of the key.
    :param str resource_group_name: The name of the resource group to which the container registry belongs.
    """
    __args__ = dict()
    __args__['configStoreName'] = config_store_name
    __args__['key'] = key
    __args__['label'] = label
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:appconfiguration/v20191001:listConfigurationStoreKeyValue', __args__, opts=opts).value

    return AwaitableListConfigurationStoreKeyValueResult(
        content_type=__ret__.get('contentType'),
        e_tag=__ret__.get('eTag'),
        key=__ret__.get('key'),
        label=__ret__.get('label'),
        last_modified=__ret__.get('lastModified'),
        locked=__ret__.get('locked'),
        tags=__ret__.get('tags'),
        value=__ret__.get('value'))
