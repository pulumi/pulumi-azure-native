# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class GetApplicationPackageResult:
    """
    An application package which represents a particular version of an application.
    """
    def __init__(__self__, format=None, last_activation_time=None, state=None, storage_url=None, storage_url_expiry=None, version=None):
        if format and not isinstance(format, str):
            raise TypeError("Expected argument 'format' to be a str")
        __self__.format = format
        """
        The format of the application package, if the package is active.
        """
        if last_activation_time and not isinstance(last_activation_time, str):
            raise TypeError("Expected argument 'last_activation_time' to be a str")
        __self__.last_activation_time = last_activation_time
        """
        The time at which the package was last activated, if the package is active.
        """
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        __self__.state = state
        """
        The current state of the application package.
        """
        if storage_url and not isinstance(storage_url, str):
            raise TypeError("Expected argument 'storage_url' to be a str")
        __self__.storage_url = storage_url
        """
        The storage URL at which the application package is stored.
        """
        if storage_url_expiry and not isinstance(storage_url_expiry, str):
            raise TypeError("Expected argument 'storage_url_expiry' to be a str")
        __self__.storage_url_expiry = storage_url_expiry
        """
        The UTC time at which the storage URL will expire.
        """
        if version and not isinstance(version, str):
            raise TypeError("Expected argument 'version' to be a str")
        __self__.version = version
        """
        The version of the application package. 
        """


class AwaitableGetApplicationPackageResult(GetApplicationPackageResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetApplicationPackageResult(
            format=self.format,
            last_activation_time=self.last_activation_time,
            state=self.state,
            storage_url=self.storage_url,
            storage_url_expiry=self.storage_url_expiry,
            version=self.version)


def get_application_package(account_name=None, application_id=None, resource_group_name=None, version=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str account_name: The name of the Batch account.
    :param str application_id: The ID of the application.
    :param str resource_group_name: The name of the resource group that contains the Batch account.
    :param str version: The version of the application.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['applicationId'] = application_id
    __args__['resourceGroupName'] = resource_group_name
    __args__['version'] = version
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:batch/v20170101:getApplicationPackage', __args__, opts=opts).value

    return AwaitableGetApplicationPackageResult(
        format=__ret__.get('format'),
        last_activation_time=__ret__.get('lastActivationTime'),
        state=__ret__.get('state'),
        storage_url=__ret__.get('storageUrl'),
        storage_url_expiry=__ret__.get('storageUrlExpiry'),
        version=__ret__.get('version'))
