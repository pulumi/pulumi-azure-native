# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class PrivateEndpointConnection(pulumi.CustomResource):
    name: pulumi.Output[str]
    """
    Name of the resource.
    """
    properties: pulumi.Output[dict]
    """
    Properties of the PrivateEndpointConnection.
      * `group_ids` (`list`) - GroupIds from the private link service resource.
      * `private_endpoint` (`dict`) - The Private Endpoint resource for this Connection.
        * `id` (`str`) - The ARM identifier for Private Endpoint.

      * `private_link_service_connection_state` (`dict`) - Details about the state of the connection.
        * `actions_required` (`str`) - Actions required (if any).
        * `description` (`str`) - Description of the connection state.
        * `status` (`str`) - Status of the connection.

      * `provisioning_state` (`str`) - Provisioning state of the Private Endpoint Connection.
    """
    type: pulumi.Output[str]
    """
    Type of the resource.
    """
    def __init__(__self__, resource_name, opts=None, name=None, parent_name=None, parent_type=None, properties=None, resource_group_name=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a PrivateEndpointConnection resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] name: The name of the private endpoint connection connection.
        :param pulumi.Input[str] parent_name: The name of the parent resource (namely, either, the topic name or domain name).
        :param pulumi.Input[str] parent_type: The type of the parent resource. This can be either \'topics\' or \'domains\'.
        :param pulumi.Input[dict] properties: Properties of the PrivateEndpointConnection.
        :param pulumi.Input[str] resource_group_name: The name of the resource group within the user's subscription.

        The **properties** object supports the following:

          * `group_ids` (`pulumi.Input[list]`) - GroupIds from the private link service resource.
          * `private_endpoint` (`pulumi.Input[dict]`) - The Private Endpoint resource for this Connection.
            * `id` (`pulumi.Input[str]`) - The ARM identifier for Private Endpoint.

          * `private_link_service_connection_state` (`pulumi.Input[dict]`) - Details about the state of the connection.
            * `actions_required` (`pulumi.Input[str]`) - Actions required (if any).
            * `description` (`pulumi.Input[str]`) - Description of the connection state.
            * `status` (`pulumi.Input[str]`) - Status of the connection.

          * `provisioning_state` (`pulumi.Input[str]`) - Provisioning state of the Private Endpoint Connection.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            if parent_name is None:
                raise TypeError("Missing required property 'parent_name'")
            __props__['parent_name'] = parent_name
            if parent_type is None:
                raise TypeError("Missing required property 'parent_type'")
            __props__['parent_type'] = parent_type
            __props__['properties'] = properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['type'] = None
        super(PrivateEndpointConnection, __self__).__init__(
            'azurerm:eventgrid/v20200601:PrivateEndpointConnection',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing PrivateEndpointConnection resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return PrivateEndpointConnection(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
