# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetRedisFirewallRuleResult:
    """
    A firewall rule on a redis cache has a name, and describes a contiguous range of IP addresses permitted to connect
    """
    def __init__(__self__, end_ip=None, name=None, start_ip=None, type=None):
        if end_ip and not isinstance(end_ip, str):
            raise TypeError("Expected argument 'end_ip' to be a str")
        __self__.end_ip = end_ip
        """
        highest IP address included in the range
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        name of the firewall rule
        """
        if start_ip and not isinstance(start_ip, str):
            raise TypeError("Expected argument 'start_ip' to be a str")
        __self__.start_ip = start_ip
        """
        lowest IP address included in the range
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        type (of the firewall rule resource = 'Microsoft.Cache/redis/firewallRule')
        """


class AwaitableGetRedisFirewallRuleResult(GetRedisFirewallRuleResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRedisFirewallRuleResult(
            end_ip=self.end_ip,
            name=self.name,
            start_ip=self.start_ip,
            type=self.type)


def get_redis_firewall_rule(cache_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str cache_name: The name of the Redis cache.
    :param str name: The name of the firewall rule.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['cacheName'] = cache_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:cache/v20160401:getRedisFirewallRule', __args__, opts=opts).value

    return AwaitableGetRedisFirewallRuleResult(
        end_ip=__ret__.get('endIP'),
        name=__ret__.get('name'),
        start_ip=__ret__.get('startIP'),
        type=__ret__.get('type'))
