# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from ... import _utilities, _tables
from . import outputs

__all__ = [
    'ControllerConnectionDetailsResponseResult',
    'OrchestratorSpecificConnectionDetailsResponseResult',
    'SkuResponse',
]

@pulumi.output_type
class ControllerConnectionDetailsResponseResult(dict):
    def __init__(__self__, *,
                 orchestrator_specific_connection_details: Optional['outputs.OrchestratorSpecificConnectionDetailsResponseResult'] = None):
        """
        :param 'OrchestratorSpecificConnectionDetailsResponseArgs' orchestrator_specific_connection_details: Base class for types that supply values used to connect to container orchestrators
        """
        if orchestrator_specific_connection_details is not None:
            pulumi.set(__self__, "orchestrator_specific_connection_details", orchestrator_specific_connection_details)

    @property
    @pulumi.getter(name="orchestratorSpecificConnectionDetails")
    def orchestrator_specific_connection_details(self) -> Optional['outputs.OrchestratorSpecificConnectionDetailsResponseResult']:
        """
        Base class for types that supply values used to connect to container orchestrators
        """
        return pulumi.get(self, "orchestrator_specific_connection_details")


@pulumi.output_type
class OrchestratorSpecificConnectionDetailsResponseResult(dict):
    """
    Base class for types that supply values used to connect to container orchestrators
    """
    def __init__(__self__, *,
                 instance_type: str):
        """
        Base class for types that supply values used to connect to container orchestrators
        :param str instance_type: Gets the Instance type.
        """
        pulumi.set(__self__, "instance_type", instance_type)

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> str:
        """
        Gets the Instance type.
        """
        return pulumi.get(self, "instance_type")


@pulumi.output_type
class SkuResponse(dict):
    """
    Model representing SKU for Azure Dev Spaces Controller.
    """
    def __init__(__self__, *,
                 name: str,
                 tier: Optional[str] = None):
        """
        Model representing SKU for Azure Dev Spaces Controller.
        :param str name: The name of the SKU for Azure Dev Spaces Controller.
        :param str tier: The tier of the SKU for Azure Dev Spaces Controller.
        """
        pulumi.set(__self__, "name", name)
        if tier is not None:
            pulumi.set(__self__, "tier", tier)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the SKU for Azure Dev Spaces Controller.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def tier(self) -> Optional[str]:
        """
        The tier of the SKU for Azure Dev Spaces Controller.
        """
        return pulumi.get(self, "tier")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


