# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class StreamingJob(pulumi.CustomResource):
    compatibility_level: pulumi.Output[str]
    """
    Controls certain runtime behaviors of the streaming job.
    """
    created_date: pulumi.Output[str]
    """
    Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.
    """
    data_locale: pulumi.Output[str]
    """
    The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
    """
    etag: pulumi.Output[str]
    """
    The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
    """
    events_late_arrival_max_delay_in_seconds: pulumi.Output[float]
    """
    The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
    """
    events_out_of_order_max_delay_in_seconds: pulumi.Output[float]
    """
    The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
    """
    events_out_of_order_policy: pulumi.Output[str]
    """
    Indicates the policy to apply to events that arrive out of order in the input event stream.
    """
    functions: pulumi.Output[list]
    """
    A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
      * `id` (`str`) - Resource Id
      * `name` (`str`) - Resource name
      * `properties` (`dict`) - The properties that are associated with a function.
        * `etag` (`str`) - The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        * `type` (`str`) - Indicates the type of function.

      * `type` (`str`) - Resource type
    """
    inputs: pulumi.Output[list]
    """
    A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
      * `id` (`str`) - Resource Id
      * `name` (`str`) - Resource name
      * `properties` (`dict`) - The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
        * `diagnostics` (`dict`) - Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
          * `conditions` (`list`) - A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
            * `code` (`str`) - The opaque diagnostic code.
            * `message` (`str`) - The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
            * `since` (`str`) - The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.

        * `etag` (`str`) - The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        * `serialization` (`dict`) - Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
          * `type` (`str`) - Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.

        * `type` (`str`) - Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.

      * `type` (`str`) - Resource type
    """
    job_id: pulumi.Output[str]
    """
    A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.
    """
    job_state: pulumi.Output[str]
    """
    Describes the state of the streaming job.
    """
    last_output_event_time: pulumi.Output[str]
    """
    Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.
    """
    location: pulumi.Output[str]
    """
    Resource location. Required on PUT (CreateOrReplace) requests.
    """
    name: pulumi.Output[str]
    """
    Resource name
    """
    output_error_policy: pulumi.Output[str]
    """
    Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
    """
    output_start_mode: pulumi.Output[str]
    """
    This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
    """
    output_start_time: pulumi.Output[str]
    """
    Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
    """
    outputs: pulumi.Output[list]
    """
    A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
      * `datasource` (`dict`) - Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
        * `type` (`str`) - Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.

      * `diagnostics` (`dict`) - Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
        * `conditions` (`list`) - A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
          * `code` (`str`) - The opaque diagnostic code.
          * `message` (`str`) - The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
          * `since` (`str`) - The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.

      * `etag` (`str`) - The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
      * `id` (`str`) - Resource Id
      * `name` (`str`) - Resource name
      * `serialization` (`dict`) - Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
        * `type` (`str`) - Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.

      * `type` (`str`) - Resource type
    """
    provisioning_state: pulumi.Output[str]
    """
    Describes the provisioning status of the streaming job.
    """
    sku: pulumi.Output[dict]
    """
    Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
      * `name` (`str`) - The name of the SKU. Required on PUT (CreateOrReplace) requests.
    """
    tags: pulumi.Output[dict]
    """
    Resource tags
    """
    transformation: pulumi.Output[dict]
    """
    Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
      * `etag` (`str`) - The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
      * `id` (`str`) - Resource Id
      * `name` (`str`) - Resource name
      * `query` (`str`) - Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
      * `streaming_units` (`float`) - Specifies the number of streaming units that the streaming job uses.
      * `type` (`str`) - Resource type
    """
    type: pulumi.Output[str]
    """
    Resource type
    """
    def __init__(__self__, resource_name, opts=None, compatibility_level=None, data_locale=None, events_late_arrival_max_delay_in_seconds=None, events_out_of_order_max_delay_in_seconds=None, events_out_of_order_policy=None, functions=None, inputs=None, location=None, name=None, output_error_policy=None, output_start_mode=None, output_start_time=None, outputs=None, resource_group_name=None, sku=None, tags=None, transformation=None, __props__=None, __name__=None, __opts__=None):
        """
        A streaming job object, containing all information associated with the named streaming job.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compatibility_level: Controls certain runtime behaviors of the streaming job.
        :param pulumi.Input[str] data_locale: The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
        :param pulumi.Input[float] events_late_arrival_max_delay_in_seconds: The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
        :param pulumi.Input[float] events_out_of_order_max_delay_in_seconds: The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
        :param pulumi.Input[str] events_out_of_order_policy: Indicates the policy to apply to events that arrive out of order in the input event stream.
        :param pulumi.Input[list] functions: A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
        :param pulumi.Input[list] inputs: A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
        :param pulumi.Input[str] location: Resource location. Required on PUT (CreateOrReplace) requests.
        :param pulumi.Input[str] name: The name of the streaming job.
        :param pulumi.Input[str] output_error_policy: Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
        :param pulumi.Input[str] output_start_mode: This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
        :param pulumi.Input[str] output_start_time: Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
        :param pulumi.Input[list] outputs: A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
        :param pulumi.Input[str] resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        :param pulumi.Input[dict] sku: Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
        :param pulumi.Input[dict] tags: Resource tags
        :param pulumi.Input[dict] transformation: Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.

        The **functions** object supports the following:

          * `name` (`pulumi.Input[str]`) - Resource name
          * `properties` (`pulumi.Input[dict]`) - The properties that are associated with a function.
            * `type` (`pulumi.Input[str]`) - Indicates the type of function.

        The **inputs** object supports the following:

          * `name` (`pulumi.Input[str]`) - Resource name
          * `properties` (`pulumi.Input[dict]`) - The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
            * `serialization` (`pulumi.Input[dict]`) - Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
              * `type` (`pulumi.Input[str]`) - Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.

            * `type` (`pulumi.Input[str]`) - Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.

        The **outputs** object supports the following:

          * `datasource` (`pulumi.Input[dict]`) - Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
            * `type` (`pulumi.Input[str]`) - Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.

          * `name` (`pulumi.Input[str]`) - Resource name
          * `serialization` (`pulumi.Input[dict]`) - Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.

        The **sku** object supports the following:

          * `name` (`pulumi.Input[str]`) - The name of the SKU. Required on PUT (CreateOrReplace) requests.

        The **transformation** object supports the following:

          * `name` (`pulumi.Input[str]`) - Resource name
          * `query` (`pulumi.Input[str]`) - Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
          * `streaming_units` (`pulumi.Input[float]`) - Specifies the number of streaming units that the streaming job uses.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['compatibility_level'] = compatibility_level
            __props__['data_locale'] = data_locale
            __props__['events_late_arrival_max_delay_in_seconds'] = events_late_arrival_max_delay_in_seconds
            __props__['events_out_of_order_max_delay_in_seconds'] = events_out_of_order_max_delay_in_seconds
            __props__['events_out_of_order_policy'] = events_out_of_order_policy
            __props__['functions'] = functions
            __props__['inputs'] = inputs
            __props__['location'] = location
            if name is None:
                raise TypeError("Missing required property 'name'")
            __props__['name'] = name
            __props__['output_error_policy'] = output_error_policy
            __props__['output_start_mode'] = output_start_mode
            __props__['output_start_time'] = output_start_time
            __props__['outputs'] = outputs
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['sku'] = sku
            __props__['tags'] = tags
            __props__['transformation'] = transformation
            __props__['created_date'] = None
            __props__['etag'] = None
            __props__['job_id'] = None
            __props__['job_state'] = None
            __props__['last_output_event_time'] = None
            __props__['provisioning_state'] = None
            __props__['type'] = None
        super(StreamingJob, __self__).__init__(
            'azurerm:streamanalytics/v20160301:StreamingJob',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None):
        """
        Get an existing StreamingJob resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return StreamingJob(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
