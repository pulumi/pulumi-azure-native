# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetObjectReplicationPolicyResult:
    """
    The replication policy between two storage accounts. Multiple rules can be defined in one policy.
    """
    def __init__(__self__, destination_account=None, enabled_time=None, name=None, policy_id=None, rules=None, source_account=None, type=None):
        if destination_account and not isinstance(destination_account, str):
            raise TypeError("Expected argument 'destination_account' to be a str")
        __self__.destination_account = destination_account
        """
        Required. Destination account name.
        """
        if enabled_time and not isinstance(enabled_time, str):
            raise TypeError("Expected argument 'enabled_time' to be a str")
        __self__.enabled_time = enabled_time
        """
        Indicates when the policy is enabled on the source account.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the resource
        """
        if policy_id and not isinstance(policy_id, str):
            raise TypeError("Expected argument 'policy_id' to be a str")
        __self__.policy_id = policy_id
        """
        A unique id for object replication policy.
        """
        if rules and not isinstance(rules, list):
            raise TypeError("Expected argument 'rules' to be a list")
        __self__.rules = rules
        """
        The storage account object replication rules.
        """
        if source_account and not isinstance(source_account, str):
            raise TypeError("Expected argument 'source_account' to be a str")
        __self__.source_account = source_account
        """
        Required. Source account name.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        """


class AwaitableGetObjectReplicationPolicyResult(GetObjectReplicationPolicyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetObjectReplicationPolicyResult(
            destination_account=self.destination_account,
            enabled_time=self.enabled_time,
            name=self.name,
            policy_id=self.policy_id,
            rules=self.rules,
            source_account=self.source_account,
            type=self.type)


def get_object_replication_policy(account_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str account_name: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    :param str name: The ID of object replication policy or 'default' if the policy ID is unknown.
    :param str resource_group_name: The name of the resource group within the user's subscription. The name is case insensitive.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:storage/v20190601:getObjectReplicationPolicy', __args__, opts=opts).value

    return AwaitableGetObjectReplicationPolicyResult(
        destination_account=__ret__.get('destinationAccount'),
        enabled_time=__ret__.get('enabledTime'),
        name=__ret__.get('name'),
        policy_id=__ret__.get('policyId'),
        rules=__ret__.get('rules'),
        source_account=__ret__.get('sourceAccount'),
        type=__ret__.get('type'))
