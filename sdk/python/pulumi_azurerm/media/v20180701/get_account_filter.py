# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class GetAccountFilterResult:
    """
    An Account Filter.
    """
    def __init__(__self__, first_quality=None, name=None, presentation_time_range=None, tracks=None, type=None):
        if first_quality and not isinstance(first_quality, dict):
            raise TypeError("Expected argument 'first_quality' to be a dict")
        __self__.first_quality = first_quality
        """
        The first quality.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the resource.
        """
        if presentation_time_range and not isinstance(presentation_time_range, dict):
            raise TypeError("Expected argument 'presentation_time_range' to be a dict")
        __self__.presentation_time_range = presentation_time_range
        """
        The presentation time range.
        """
        if tracks and not isinstance(tracks, list):
            raise TypeError("Expected argument 'tracks' to be a list")
        __self__.tracks = tracks
        """
        The tracks selection conditions.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The type of the resource.
        """


class AwaitableGetAccountFilterResult(GetAccountFilterResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccountFilterResult(
            first_quality=self.first_quality,
            name=self.name,
            presentation_time_range=self.presentation_time_range,
            tracks=self.tracks,
            type=self.type)


def get_account_filter(account_name=None, name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str account_name: The Media Services account name.
    :param str name: The Account Filter name
    :param str resource_group_name: The name of the resource group within the Azure subscription.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:media/v20180701:getAccountFilter', __args__, opts=opts).value

    return AwaitableGetAccountFilterResult(
        first_quality=__ret__.get('firstQuality'),
        name=__ret__.get('name'),
        presentation_time_range=__ret__.get('presentationTimeRange'),
        tracks=__ret__.get('tracks'),
        type=__ret__.get('type'))
