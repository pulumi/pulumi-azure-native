# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from ... import _utilities, _tables

__all__ = [
    'MediaGraphSinkResponse',
    'MediaGraphSourceResponse',
]

@pulumi.output_type
class MediaGraphSinkResponse(dict):
    """
    Media Sink
    """
    def __init__(__self__, *,
                 inputs: List[str],
                 name: str,
                 odata_type: str):
        """
        Media Sink
        :param List[str] inputs: Sink inputs
        :param str name: Sink name
        :param str odata_type: The discriminator for derived types.
        """
        pulumi.set(__self__, "inputs", inputs)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "odata_type", odata_type)

    @property
    @pulumi.getter
    def inputs(self) -> List[str]:
        """
        Sink inputs
        """
        return pulumi.get(self, "inputs")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Sink name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="odataType")
    def odata_type(self) -> str:
        """
        The discriminator for derived types.
        """
        return pulumi.get(self, "odata_type")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class MediaGraphSourceResponse(dict):
    """
    Media source
    """
    def __init__(__self__, *,
                 name: str,
                 odata_type: str):
        """
        Media source
        :param str name: Source name
        :param str odata_type: The discriminator for derived types.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "odata_type", odata_type)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Source name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="odataType")
    def odata_type(self) -> str:
        """
        The discriminator for derived types.
        """
        return pulumi.get(self, "odata_type")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


