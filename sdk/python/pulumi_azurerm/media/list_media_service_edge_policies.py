# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class ListMediaServiceEdgePoliciesResult:
    def __init__(__self__, usage_data_collection_policy=None):
        if usage_data_collection_policy and not isinstance(usage_data_collection_policy, dict):
            raise TypeError("Expected argument 'usage_data_collection_policy' to be a dict")
        __self__.usage_data_collection_policy = usage_data_collection_policy


class AwaitableListMediaServiceEdgePoliciesResult(ListMediaServiceEdgePoliciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListMediaServiceEdgePoliciesResult(
            usage_data_collection_policy=self.usage_data_collection_policy)


def list_media_service_edge_policies(account_name=None, device_id=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str account_name: The Media Services account name.
    :param str device_id: Unique identifier of the edge device.
    :param str resource_group_name: The name of the resource group within the Azure subscription.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['deviceId'] = device_id
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:media:listMediaServiceEdgePolicies', __args__, opts=opts).value

    return AwaitableListMediaServiceEdgePoliciesResult(
        usage_data_collection_policy=__ret__.get('usageDataCollectionPolicy'))
