# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from ... import _utilities, _tables


class ListMediaServiceKeysResult:
    """
    The response body for a ListKeys API.
    """
    def __init__(__self__, primary_auth_endpoint=None, primary_key=None, scope=None, secondary_auth_endpoint=None, secondary_key=None):
        if primary_auth_endpoint and not isinstance(primary_auth_endpoint, str):
            raise TypeError("Expected argument 'primary_auth_endpoint' to be a str")
        __self__.primary_auth_endpoint = primary_auth_endpoint
        """
        The primary authorization endpoint.
        """
        if primary_key and not isinstance(primary_key, str):
            raise TypeError("Expected argument 'primary_key' to be a str")
        __self__.primary_key = primary_key
        """
        The primary key for the Media Service resource.
        """
        if scope and not isinstance(scope, str):
            raise TypeError("Expected argument 'scope' to be a str")
        __self__.scope = scope
        """
        The authorization scope.
        """
        if secondary_auth_endpoint and not isinstance(secondary_auth_endpoint, str):
            raise TypeError("Expected argument 'secondary_auth_endpoint' to be a str")
        __self__.secondary_auth_endpoint = secondary_auth_endpoint
        """
        The secondary authorization endpoint.
        """
        if secondary_key and not isinstance(secondary_key, str):
            raise TypeError("Expected argument 'secondary_key' to be a str")
        __self__.secondary_key = secondary_key
        """
        The secondary key for the Media Service resource.
        """


class AwaitableListMediaServiceKeysResult(ListMediaServiceKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListMediaServiceKeysResult(
            primary_auth_endpoint=self.primary_auth_endpoint,
            primary_key=self.primary_key,
            scope=self.scope,
            secondary_auth_endpoint=self.secondary_auth_endpoint,
            secondary_key=self.secondary_key)


def list_media_service_keys(media_service_name=None, resource_group_name=None, opts=None):
    """
    Use this data source to access information about an existing resource.

    :param str media_service_name: Name of the Media Service.
    :param str resource_group_name: Name of the resource group within the Azure subscription.
    """
    __args__ = dict()
    __args__['mediaServiceName'] = media_service_name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azurerm:media/v20151001:listMediaServiceKeys', __args__, opts=opts).value

    return AwaitableListMediaServiceKeysResult(
        primary_auth_endpoint=__ret__.get('primaryAuthEndpoint'),
        primary_key=__ret__.get('primaryKey'),
        scope=__ret__.get('scope'),
        secondary_auth_endpoint=__ret__.get('secondaryAuthEndpoint'),
        secondary_key=__ret__.get('secondaryKey'))
