# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['JitRequest']


class JitRequest(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 application_resource_id: Optional[pulumi.Input[str]] = None,
                 jit_authorization_policies: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['JitAuthorizationPoliciesArgs']]]]] = None,
                 jit_request_name: Optional[pulumi.Input[str]] = None,
                 jit_scheduling_policy: Optional[pulumi.Input[pulumi.InputType['JitSchedulingPolicyArgs']]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Information about JIT request definition.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] application_resource_id: The parent application id.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['JitAuthorizationPoliciesArgs']]]] jit_authorization_policies: The JIT authorization policies.
        :param pulumi.Input[str] jit_request_name: The name of the JIT request.
        :param pulumi.Input[pulumi.InputType['JitSchedulingPolicyArgs']] jit_scheduling_policy: The JIT request properties.
        :param pulumi.Input[str] location: Resource location
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if application_resource_id is None:
                raise TypeError("Missing required property 'application_resource_id'")
            __props__['application_resource_id'] = application_resource_id
            if jit_authorization_policies is None:
                raise TypeError("Missing required property 'jit_authorization_policies'")
            __props__['jit_authorization_policies'] = jit_authorization_policies
            if jit_request_name is None:
                raise TypeError("Missing required property 'jit_request_name'")
            __props__['jit_request_name'] = jit_request_name
            if jit_scheduling_policy is None:
                raise TypeError("Missing required property 'jit_scheduling_policy'")
            __props__['jit_scheduling_policy'] = jit_scheduling_policy
            __props__['location'] = location
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            __props__['created_by'] = None
            __props__['jit_request_state'] = None
            __props__['name'] = None
            __props__['provisioning_state'] = None
            __props__['publisher_tenant_id'] = None
            __props__['type'] = None
            __props__['updated_by'] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-nextgen:solutions/v20190701:JitRequest"), pulumi.Alias(type_="azure-nextgen:solutions/v20200821preview:JitRequest")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(JitRequest, __self__).__init__(
            'azure-nextgen:solutions/latest:JitRequest',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'JitRequest':
        """
        Get an existing JitRequest resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return JitRequest(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="applicationResourceId")
    def application_resource_id(self) -> pulumi.Output[str]:
        """
        The parent application id.
        """
        return pulumi.get(self, "application_resource_id")

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output['outputs.ApplicationClientDetailsResponse']:
        """
        The client entity that created the JIT request.
        """
        return pulumi.get(self, "created_by")

    @property
    @pulumi.getter(name="jitAuthorizationPolicies")
    def jit_authorization_policies(self) -> pulumi.Output[Sequence['outputs.JitAuthorizationPoliciesResponse']]:
        """
        The JIT authorization policies.
        """
        return pulumi.get(self, "jit_authorization_policies")

    @property
    @pulumi.getter(name="jitRequestState")
    def jit_request_state(self) -> pulumi.Output[str]:
        """
        The JIT request state.
        """
        return pulumi.get(self, "jit_request_state")

    @property
    @pulumi.getter(name="jitSchedulingPolicy")
    def jit_scheduling_policy(self) -> pulumi.Output['outputs.JitSchedulingPolicyResponse']:
        """
        The JIT request properties.
        """
        return pulumi.get(self, "jit_scheduling_policy")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[Optional[str]]:
        """
        Resource location
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Resource name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[str]:
        """
        The JIT request provisioning state.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="publisherTenantId")
    def publisher_tenant_id(self) -> pulumi.Output[str]:
        """
        The publisher tenant id.
        """
        return pulumi.get(self, "publisher_tenant_id")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Resource tags
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Resource type
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> pulumi.Output['outputs.ApplicationClientDetailsResponse']:
        """
        The client entity that last updated the JIT request.
        """
        return pulumi.get(self, "updated_by")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

