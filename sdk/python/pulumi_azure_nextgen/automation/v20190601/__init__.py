# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .automation_account import *
from .certificate import *
from .connection import *
from .connection_type import *
from .credential import *
from .dsc_configuration import *
from .dsc_node_configuration import *
from .get_automation_account import *
from .get_certificate import *
from .get_connection import *
from .get_connection_type import *
from .get_credential import *
from .get_dsc_configuration import *
from .get_dsc_node_configuration import *
from .get_job_schedule import *
from .get_module import *
from .get_python2_package import *
from .get_runbook import *
from .get_schedule import *
from .get_software_update_configuration_by_name import *
from .get_source_control import *
from .get_variable import *
from .get_watcher import *
from .job_schedule import *
from .list_key_by_automation_account import *
from .module import *
from .python2_package import *
from .runbook import *
from .schedule import *
from .software_update_configuration_by_name import *
from .source_control import *
from .variable import *
from .watcher import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-nextgen:automation/v20190601:AutomationAccount":
                return AutomationAccount(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:Certificate":
                return Certificate(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:Connection":
                return Connection(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:ConnectionType":
                return ConnectionType(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:Credential":
                return Credential(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:DscConfiguration":
                return DscConfiguration(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:DscNodeConfiguration":
                return DscNodeConfiguration(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:JobSchedule":
                return JobSchedule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:Module":
                return Module(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:Python2Package":
                return Python2Package(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:Runbook":
                return Runbook(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:Schedule":
                return Schedule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:SoftwareUpdateConfigurationByName":
                return SoftwareUpdateConfigurationByName(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:SourceControl":
                return SourceControl(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:Variable":
                return Variable(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:automation/v20190601:Watcher":
                return Watcher(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-nextgen", "automation/v20190601", _module_instance)

_register_module()
