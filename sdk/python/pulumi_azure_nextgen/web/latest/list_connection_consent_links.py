# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = [
    'ListConnectionConsentLinksResult',
    'AwaitableListConnectionConsentLinksResult',
    'list_connection_consent_links',
]

@pulumi.output_type
class ListConnectionConsentLinksResult:
    """
    Collection of consent links
    """
    def __init__(__self__, value=None):
        if value and not isinstance(value, list):
            raise TypeError("Expected argument 'value' to be a list")
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[Sequence['outputs.ConsentLinkDefinitionResponseResult']]:
        """
        Collection of resources
        """
        return pulumi.get(self, "value")


class AwaitableListConnectionConsentLinksResult(ListConnectionConsentLinksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListConnectionConsentLinksResult(
            value=self.value)


def list_connection_consent_links(connection_name: Optional[str] = None,
                                  parameters: Optional[Sequence[pulumi.InputType['ConsentLinkParameterDefinitionArgs']]] = None,
                                  resource_group_name: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListConnectionConsentLinksResult:
    """
    Use this data source to access information about an existing resource.

    :param str connection_name: Connection name
    :param Sequence[pulumi.InputType['ConsentLinkParameterDefinitionArgs']] parameters: Collection of resources
    :param str resource_group_name: The resource group
    """
    __args__ = dict()
    __args__['connectionName'] = connection_name
    __args__['parameters'] = parameters
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-nextgen:web/latest:listConnectionConsentLinks', __args__, opts=opts, typ=ListConnectionConsentLinksResult).value

    return AwaitableListConnectionConsentLinksResult(
        value=__ret__.value)
