# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables
from . import outputs

__all__ = [
    'GetBackupScheduleGroupResult',
    'AwaitableGetBackupScheduleGroupResult',
    'get_backup_schedule_group',
]

@pulumi.output_type
class GetBackupScheduleGroupResult:
    """
    The Backup Schedule Group
    """
    def __init__(__self__, name=None, start_time=None, type=None):
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if start_time and not isinstance(start_time, dict):
            raise TypeError("Expected argument 'start_time' to be a dict")
        pulumi.set(__self__, "start_time", start_time)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> 'outputs.TimeResponse':
        """
        The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type.
        """
        return pulumi.get(self, "type")


class AwaitableGetBackupScheduleGroupResult(GetBackupScheduleGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBackupScheduleGroupResult(
            name=self.name,
            start_time=self.start_time,
            type=self.type)


def get_backup_schedule_group(device_name: Optional[str] = None,
                              manager_name: Optional[str] = None,
                              resource_group_name: Optional[str] = None,
                              schedule_group_name: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBackupScheduleGroupResult:
    """
    Use this data source to access information about an existing resource.

    :param str device_name: The name of the device.
    :param str manager_name: The manager name
    :param str resource_group_name: The resource group name
    :param str schedule_group_name: The name of the schedule group.
    """
    __args__ = dict()
    __args__['deviceName'] = device_name
    __args__['managerName'] = manager_name
    __args__['resourceGroupName'] = resource_group_name
    __args__['scheduleGroupName'] = schedule_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-nextgen:storsimple/latest:getBackupScheduleGroup', __args__, opts=opts, typ=GetBackupScheduleGroupResult).value

    return AwaitableGetBackupScheduleGroupResult(
        name=__ret__.name,
        start_time=__ret__.start_time,
        type=__ret__.type)
