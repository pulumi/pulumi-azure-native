# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .access_control_record import *
from .backup_policy import *
from .backup_schedule import *
from .bandwidth_setting import *
from .get_access_control_record import *
from .get_backup_policy import *
from .get_backup_schedule import *
from .get_bandwidth_setting import *
from .get_manager import *
from .get_manager_extended_info import *
from .get_storage_account_credential import *
from .get_volume import *
from .get_volume_container import *
from .list_device_failover_sets import *
from .list_device_failover_tars import *
from .list_manager_activation_key import *
from .list_manager_public_encryption_key import *
from .manager import *
from .manager_extended_info import *
from .storage_account_credential import *
from .volume import *
from .volume_container import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-nextgen:storsimple/v20170601:AccessControlRecord":
                return AccessControlRecord(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:storsimple/v20170601:BackupPolicy":
                return BackupPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:storsimple/v20170601:BackupSchedule":
                return BackupSchedule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:storsimple/v20170601:BandwidthSetting":
                return BandwidthSetting(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:storsimple/v20170601:Manager":
                return Manager(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:storsimple/v20170601:ManagerExtendedInfo":
                return ManagerExtendedInfo(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:storsimple/v20170601:StorageAccountCredential":
                return StorageAccountCredential(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:storsimple/v20170601:Volume":
                return Volume(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:storsimple/v20170601:VolumeContainer":
                return VolumeContainer(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-nextgen", "storsimple/v20170601", _module_instance)

_register_module()
