# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables
from . import outputs

__all__ = [
    'ListDeviceFailoverSetsResult',
    'AwaitableListDeviceFailoverSetsResult',
    'list_device_failover_sets',
]

@pulumi.output_type
class ListDeviceFailoverSetsResult:
    """
    The list of failover sets.
    """
    def __init__(__self__, value=None):
        if value and not isinstance(value, list):
            raise TypeError("Expected argument 'value' to be a list")
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[Sequence['outputs.FailoverSetResponseResult']]:
        """
        The list of failover sets.
        """
        return pulumi.get(self, "value")


class AwaitableListDeviceFailoverSetsResult(ListDeviceFailoverSetsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListDeviceFailoverSetsResult(
            value=self.value)


def list_device_failover_sets(device_name: Optional[str] = None,
                              manager_name: Optional[str] = None,
                              resource_group_name: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListDeviceFailoverSetsResult:
    """
    Use this data source to access information about an existing resource.

    :param str device_name: The device name
    :param str manager_name: The manager name
    :param str resource_group_name: The resource group name
    """
    __args__ = dict()
    __args__['deviceName'] = device_name
    __args__['managerName'] = manager_name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-nextgen:storsimple/v20170601:listDeviceFailoverSets', __args__, opts=opts, typ=ListDeviceFailoverSetsResult).value

    return AwaitableListDeviceFailoverSetsResult(
        value=__ret__.value)
