# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables

__all__ = [
    'ListOpenShiftClusterAdminKubeconfigResult',
    'AwaitableListOpenShiftClusterAdminKubeconfigResult',
    'list_open_shift_cluster_admin_kubeconfig',
]

@pulumi.output_type
class ListOpenShiftClusterAdminKubeconfigResult:
    """
    OpenShiftClusterAdminKubeconfig represents an OpenShift cluster's admin kubeconfig.
    """
    def __init__(__self__, kubeconfig=None):
        if kubeconfig and not isinstance(kubeconfig, str):
            raise TypeError("Expected argument 'kubeconfig' to be a str")
        pulumi.set(__self__, "kubeconfig", kubeconfig)

    @property
    @pulumi.getter
    def kubeconfig(self) -> Optional[str]:
        """
        The base64-encoded kubeconfig file.
        """
        return pulumi.get(self, "kubeconfig")


class AwaitableListOpenShiftClusterAdminKubeconfigResult(ListOpenShiftClusterAdminKubeconfigResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListOpenShiftClusterAdminKubeconfigResult(
            kubeconfig=self.kubeconfig)


def list_open_shift_cluster_admin_kubeconfig(resource_group_name: Optional[str] = None,
                                             resource_name: Optional[str] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListOpenShiftClusterAdminKubeconfigResult:
    """
    Use this data source to access information about an existing resource.

    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str resource_name: The name of the OpenShift cluster resource.
    """
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['resourceName'] = resource_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-nextgen:redhatopenshift/v20210131preview:listOpenShiftClusterAdminKubeconfig', __args__, opts=opts, typ=ListOpenShiftClusterAdminKubeconfigResult).value

    return AwaitableListOpenShiftClusterAdminKubeconfigResult(
        kubeconfig=__ret__.kubeconfig)
