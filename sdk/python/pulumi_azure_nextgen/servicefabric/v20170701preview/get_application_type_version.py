# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables

__all__ = [
    'GetApplicationTypeVersionResult',
    'AwaitableGetApplicationTypeVersionResult',
    'get_application_type_version',
]

@pulumi.output_type
class GetApplicationTypeVersionResult:
    """
    An application type version resource for the specified application type name resource.
    """
    def __init__(__self__, app_package_url=None, default_parameter_list=None, location=None, name=None, provisioning_state=None, type=None):
        if app_package_url and not isinstance(app_package_url, str):
            raise TypeError("Expected argument 'app_package_url' to be a str")
        pulumi.set(__self__, "app_package_url", app_package_url)
        if default_parameter_list and not isinstance(default_parameter_list, dict):
            raise TypeError("Expected argument 'default_parameter_list' to be a dict")
        pulumi.set(__self__, "default_parameter_list", default_parameter_list)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="appPackageUrl")
    def app_package_url(self) -> str:
        """
        The URL to the application package
        """
        return pulumi.get(self, "app_package_url")

    @property
    @pulumi.getter(name="defaultParameterList")
    def default_parameter_list(self) -> Mapping[str, str]:
        """
        List of application type parameters that can be overridden when creating or updating the application.
        """
        return pulumi.get(self, "default_parameter_list")

    @property
    @pulumi.getter
    def location(self) -> Optional[str]:
        """
        Azure resource location.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Azure resource name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        """
        The current deployment or provisioning state, which only appears in the response
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Azure resource type.
        """
        return pulumi.get(self, "type")


class AwaitableGetApplicationTypeVersionResult(GetApplicationTypeVersionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetApplicationTypeVersionResult(
            app_package_url=self.app_package_url,
            default_parameter_list=self.default_parameter_list,
            location=self.location,
            name=self.name,
            provisioning_state=self.provisioning_state,
            type=self.type)


def get_application_type_version(application_type_name: Optional[str] = None,
                                 cluster_name: Optional[str] = None,
                                 resource_group_name: Optional[str] = None,
                                 version: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetApplicationTypeVersionResult:
    """
    Use this data source to access information about an existing resource.

    :param str application_type_name: The name of the application type name resource.
    :param str cluster_name: The name of the cluster resource.
    :param str resource_group_name: The name of the resource group.
    :param str version: The application type version.
    """
    __args__ = dict()
    __args__['applicationTypeName'] = application_type_name
    __args__['clusterName'] = cluster_name
    __args__['resourceGroupName'] = resource_group_name
    __args__['version'] = version
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-nextgen:servicefabric/v20170701preview:getApplicationTypeVersion', __args__, opts=opts, typ=GetApplicationTypeVersionResult).value

    return AwaitableGetApplicationTypeVersionResult(
        app_package_url=__ret__.app_package_url,
        default_parameter_list=__ret__.default_parameter_list,
        location=__ret__.location,
        name=__ret__.name,
        provisioning_state=__ret__.provisioning_state,
        type=__ret__.type)
