# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .get_management_association import *
from .get_management_configuration import *
from .get_solution import *
from .management_association import *
from .management_configuration import *
from .solution import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-nextgen:operationsmanagement/v20151101preview:ManagementAssociation":
                return ManagementAssociation(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:operationsmanagement/v20151101preview:ManagementConfiguration":
                return ManagementConfiguration(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:operationsmanagement/v20151101preview:Solution":
                return Solution(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-nextgen", "operationsmanagement/v20151101preview", _module_instance)

_register_module()
