# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables

__all__ = [
    'GetVendorSkuPreviewResult',
    'AwaitableGetVendorSkuPreviewResult',
    'get_vendor_sku_preview',
]

@pulumi.output_type
class GetVendorSkuPreviewResult:
    """
    Customer subscription which can use a sku.
    """
    def __init__(__self__, name=None, type=None):
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The preview subscription ID.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the resource.
        """
        return pulumi.get(self, "type")


class AwaitableGetVendorSkuPreviewResult(GetVendorSkuPreviewResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVendorSkuPreviewResult(
            name=self.name,
            type=self.type)


def get_vendor_sku_preview(preview_subscription: Optional[str] = None,
                           sku_name: Optional[str] = None,
                           vendor_name: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVendorSkuPreviewResult:
    """
    Use this data source to access information about an existing resource.

    :param str preview_subscription: Preview subscription ID.
    :param str sku_name: The name of the vendor sku.
    :param str vendor_name: The name of the vendor.
    """
    __args__ = dict()
    __args__['previewSubscription'] = preview_subscription
    __args__['skuName'] = sku_name
    __args__['vendorName'] = vendor_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-nextgen:hybridnetwork/v20200101preview:getVendorSkuPreview', __args__, opts=opts, typ=GetVendorSkuPreviewResult).value

    return AwaitableGetVendorSkuPreviewResult(
        name=__ret__.name,
        type=__ret__.type)
