# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .front_door import *
from .get_front_door import *
from .get_private_zone import *
from .get_record_set import *
from .get_rules_engine import *
from .get_virtual_network_link import *
from .private_zone import *
from .record_set import *
from .rules_engine import *
from .virtual_network_link import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-nextgen:network/v20200101:FrontDoor":
                return FrontDoor(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:network/v20200101:PrivateZone":
                return PrivateZone(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:network/v20200101:RecordSet":
                return RecordSet(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:network/v20200101:RulesEngine":
                return RulesEngine(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:network/v20200101:VirtualNetworkLink":
                return VirtualNetworkLink(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-nextgen", "network/v20200101", _module_instance)

_register_module()
