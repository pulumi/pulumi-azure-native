# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables

__all__ = [
    'GetControllerDetailsResult',
    'AwaitableGetControllerDetailsResult',
    'get_controller_details',
]

@pulumi.output_type
class GetControllerDetailsResult:
    """
    Represents an instance of a DNC controller.
    """
    def __init__(__self__, dnc_app_id=None, dnc_endpoint=None, location=None, name=None, state=None, type=None):
        if dnc_app_id and not isinstance(dnc_app_id, str):
            raise TypeError("Expected argument 'dnc_app_id' to be a str")
        pulumi.set(__self__, "dnc_app_id", dnc_app_id)
        if dnc_endpoint and not isinstance(dnc_endpoint, str):
            raise TypeError("Expected argument 'dnc_endpoint' to be a str")
        pulumi.set(__self__, "dnc_endpoint", dnc_endpoint)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="dncAppId")
    def dnc_app_id(self) -> Optional[str]:
        """
        The current state of dnc controller resource.
        """
        return pulumi.get(self, "dnc_app_id")

    @property
    @pulumi.getter(name="dncEndpoint")
    def dnc_endpoint(self) -> Optional[str]:
        """
        dnc endpoint url that customers can use to connect to
        """
        return pulumi.get(self, "dnc_endpoint")

    @property
    @pulumi.getter
    def location(self) -> Optional[str]:
        """
        Location of the DNC controller resource.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the DNC controller resource.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The current state of dnc controller resource.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the DNC controller  resource.(Microsoft.DelegatedNetwork/controller)
        """
        return pulumi.get(self, "type")


class AwaitableGetControllerDetailsResult(GetControllerDetailsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetControllerDetailsResult(
            dnc_app_id=self.dnc_app_id,
            dnc_endpoint=self.dnc_endpoint,
            location=self.location,
            name=self.name,
            state=self.state,
            type=self.type)


def get_controller_details(resource_group_name: Optional[str] = None,
                           resource_name: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetControllerDetailsResult:
    """
    Use this data source to access information about an existing resource.

    :param str resource_group_name: The name of the Azure Resource group of which a given DelegatedNetwork resource is part. This name must be at least 1 character in length, and no more than 90.
    :param str resource_name: The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
    """
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['resourceName'] = resource_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-nextgen:delegatednetwork/v20200808preview:getControllerDetails', __args__, opts=opts, typ=GetControllerDetailsResult).value

    return AwaitableGetControllerDetailsResult(
        dnc_app_id=__ret__.dnc_app_id,
        dnc_endpoint=__ret__.dnc_endpoint,
        location=__ret__.location,
        name=__ret__.name,
        state=__ret__.state,
        type=__ret__.type)
