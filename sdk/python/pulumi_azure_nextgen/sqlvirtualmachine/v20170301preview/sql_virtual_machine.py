# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['SqlVirtualMachine']


class SqlVirtualMachine(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_backup_settings: Optional[pulumi.Input[pulumi.InputType['AutoBackupSettingsArgs']]] = None,
                 auto_patching_settings: Optional[pulumi.Input[pulumi.InputType['AutoPatchingSettingsArgs']]] = None,
                 identity: Optional[pulumi.Input[pulumi.InputType['ResourceIdentityArgs']]] = None,
                 key_vault_credential_settings: Optional[pulumi.Input[pulumi.InputType['KeyVaultCredentialSettingsArgs']]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 server_configurations_management_settings: Optional[pulumi.Input[pulumi.InputType['ServerConfigurationsManagementSettingsArgs']]] = None,
                 sql_image_offer: Optional[pulumi.Input[str]] = None,
                 sql_image_sku: Optional[pulumi.Input[str]] = None,
                 sql_management: Optional[pulumi.Input[str]] = None,
                 sql_server_license_type: Optional[pulumi.Input[str]] = None,
                 sql_virtual_machine_group_resource_id: Optional[pulumi.Input[str]] = None,
                 sql_virtual_machine_name: Optional[pulumi.Input[str]] = None,
                 storage_configuration_settings: Optional[pulumi.Input[pulumi.InputType['StorageConfigurationSettingsArgs']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 virtual_machine_resource_id: Optional[pulumi.Input[str]] = None,
                 wsfc_domain_credentials: Optional[pulumi.Input[pulumi.InputType['WsfcDomainCredentialsArgs']]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        A SQL virtual machine.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['AutoBackupSettingsArgs']] auto_backup_settings: Auto backup settings for SQL Server.
        :param pulumi.Input[pulumi.InputType['AutoPatchingSettingsArgs']] auto_patching_settings: Auto patching settings for applying critical security updates to SQL virtual machine.
        :param pulumi.Input[pulumi.InputType['ResourceIdentityArgs']] identity: Azure Active Directory identity of the server.
        :param pulumi.Input[pulumi.InputType['KeyVaultCredentialSettingsArgs']] key_vault_credential_settings: Key vault credential settings.
        :param pulumi.Input[str] location: Resource location.
        :param pulumi.Input[str] resource_group_name: Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        :param pulumi.Input[pulumi.InputType['ServerConfigurationsManagementSettingsArgs']] server_configurations_management_settings: SQL Server configuration management settings.
        :param pulumi.Input[str] sql_image_offer: SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.
        :param pulumi.Input[str] sql_image_sku: SQL Server edition type.
        :param pulumi.Input[str] sql_management: SQL Server Management type.
        :param pulumi.Input[str] sql_server_license_type: SQL Server license type.
        :param pulumi.Input[str] sql_virtual_machine_group_resource_id: ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.
        :param pulumi.Input[str] sql_virtual_machine_name: Name of the SQL virtual machine.
        :param pulumi.Input[pulumi.InputType['StorageConfigurationSettingsArgs']] storage_configuration_settings: Storage Configuration Settings.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags.
        :param pulumi.Input[str] virtual_machine_resource_id: ARM Resource id of underlying virtual machine created from SQL marketplace image.
        :param pulumi.Input[pulumi.InputType['WsfcDomainCredentialsArgs']] wsfc_domain_credentials: Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['auto_backup_settings'] = auto_backup_settings
            __props__['auto_patching_settings'] = auto_patching_settings
            __props__['identity'] = identity
            __props__['key_vault_credential_settings'] = key_vault_credential_settings
            if location is None:
                raise TypeError("Missing required property 'location'")
            __props__['location'] = location
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['server_configurations_management_settings'] = server_configurations_management_settings
            __props__['sql_image_offer'] = sql_image_offer
            __props__['sql_image_sku'] = sql_image_sku
            __props__['sql_management'] = sql_management
            __props__['sql_server_license_type'] = sql_server_license_type
            __props__['sql_virtual_machine_group_resource_id'] = sql_virtual_machine_group_resource_id
            if sql_virtual_machine_name is None:
                raise TypeError("Missing required property 'sql_virtual_machine_name'")
            __props__['sql_virtual_machine_name'] = sql_virtual_machine_name
            __props__['storage_configuration_settings'] = storage_configuration_settings
            __props__['tags'] = tags
            __props__['virtual_machine_resource_id'] = virtual_machine_resource_id
            __props__['wsfc_domain_credentials'] = wsfc_domain_credentials
            __props__['name'] = None
            __props__['provisioning_state'] = None
            __props__['type'] = None
        super(SqlVirtualMachine, __self__).__init__(
            'azure-nextgen:sqlvirtualmachine/v20170301preview:SqlVirtualMachine',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'SqlVirtualMachine':
        """
        Get an existing SqlVirtualMachine resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return SqlVirtualMachine(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="autoBackupSettings")
    def auto_backup_settings(self) -> pulumi.Output[Optional['outputs.AutoBackupSettingsResponse']]:
        """
        Auto backup settings for SQL Server.
        """
        return pulumi.get(self, "auto_backup_settings")

    @property
    @pulumi.getter(name="autoPatchingSettings")
    def auto_patching_settings(self) -> pulumi.Output[Optional['outputs.AutoPatchingSettingsResponse']]:
        """
        Auto patching settings for applying critical security updates to SQL virtual machine.
        """
        return pulumi.get(self, "auto_patching_settings")

    @property
    @pulumi.getter
    def identity(self) -> pulumi.Output[Optional['outputs.ResourceIdentityResponse']]:
        """
        Azure Active Directory identity of the server.
        """
        return pulumi.get(self, "identity")

    @property
    @pulumi.getter(name="keyVaultCredentialSettings")
    def key_vault_credential_settings(self) -> pulumi.Output[Optional['outputs.KeyVaultCredentialSettingsResponse']]:
        """
        Key vault credential settings.
        """
        return pulumi.get(self, "key_vault_credential_settings")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[str]:
        """
        Resource location.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Resource name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[str]:
        """
        Provisioning state to track the async operation status.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="serverConfigurationsManagementSettings")
    def server_configurations_management_settings(self) -> pulumi.Output[Optional['outputs.ServerConfigurationsManagementSettingsResponse']]:
        """
        SQL Server configuration management settings.
        """
        return pulumi.get(self, "server_configurations_management_settings")

    @property
    @pulumi.getter(name="sqlImageOffer")
    def sql_image_offer(self) -> pulumi.Output[Optional[str]]:
        """
        SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.
        """
        return pulumi.get(self, "sql_image_offer")

    @property
    @pulumi.getter(name="sqlImageSku")
    def sql_image_sku(self) -> pulumi.Output[Optional[str]]:
        """
        SQL Server edition type.
        """
        return pulumi.get(self, "sql_image_sku")

    @property
    @pulumi.getter(name="sqlManagement")
    def sql_management(self) -> pulumi.Output[Optional[str]]:
        """
        SQL Server Management type.
        """
        return pulumi.get(self, "sql_management")

    @property
    @pulumi.getter(name="sqlServerLicenseType")
    def sql_server_license_type(self) -> pulumi.Output[Optional[str]]:
        """
        SQL Server license type.
        """
        return pulumi.get(self, "sql_server_license_type")

    @property
    @pulumi.getter(name="sqlVirtualMachineGroupResourceId")
    def sql_virtual_machine_group_resource_id(self) -> pulumi.Output[Optional[str]]:
        """
        ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.
        """
        return pulumi.get(self, "sql_virtual_machine_group_resource_id")

    @property
    @pulumi.getter(name="storageConfigurationSettings")
    def storage_configuration_settings(self) -> pulumi.Output[Optional['outputs.StorageConfigurationSettingsResponse']]:
        """
        Storage Configuration Settings.
        """
        return pulumi.get(self, "storage_configuration_settings")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Resource type.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="virtualMachineResourceId")
    def virtual_machine_resource_id(self) -> pulumi.Output[Optional[str]]:
        """
        ARM Resource id of underlying virtual machine created from SQL marketplace image.
        """
        return pulumi.get(self, "virtual_machine_resource_id")

    @property
    @pulumi.getter(name="wsfcDomainCredentials")
    def wsfc_domain_credentials(self) -> pulumi.Output[Optional['outputs.WsfcDomainCredentialsResponse']]:
        """
        Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
        """
        return pulumi.get(self, "wsfc_domain_credentials")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

