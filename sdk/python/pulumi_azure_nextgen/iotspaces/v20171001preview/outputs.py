# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables
from . import outputs

__all__ = [
    'IoTSpacesPropertiesResponse',
    'IoTSpacesSkuInfoResponse',
    'StorageContainerPropertiesResponse',
]

@pulumi.output_type
class IoTSpacesPropertiesResponse(dict):
    """
    The properties of an IoTSpaces instance.
    """
    def __init__(__self__, *,
                 management_api_url: str,
                 provisioning_state: str,
                 web_portal_url: str,
                 storage_container: Optional['outputs.StorageContainerPropertiesResponse'] = None):
        """
        The properties of an IoTSpaces instance.
        :param str management_api_url: The management Api endpoint.
        :param str provisioning_state: The provisioning state.
        :param str web_portal_url: The management UI endpoint.
        :param 'StorageContainerPropertiesResponseArgs' storage_container: The properties of the designated storage container.
        """
        pulumi.set(__self__, "management_api_url", management_api_url)
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        pulumi.set(__self__, "web_portal_url", web_portal_url)
        if storage_container is not None:
            pulumi.set(__self__, "storage_container", storage_container)

    @property
    @pulumi.getter(name="managementApiUrl")
    def management_api_url(self) -> str:
        """
        The management Api endpoint.
        """
        return pulumi.get(self, "management_api_url")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        """
        The provisioning state.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="webPortalUrl")
    def web_portal_url(self) -> str:
        """
        The management UI endpoint.
        """
        return pulumi.get(self, "web_portal_url")

    @property
    @pulumi.getter(name="storageContainer")
    def storage_container(self) -> Optional['outputs.StorageContainerPropertiesResponse']:
        """
        The properties of the designated storage container.
        """
        return pulumi.get(self, "storage_container")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class IoTSpacesSkuInfoResponse(dict):
    """
    Information about the SKU of the IoTSpaces instance.
    """
    def __init__(__self__, *,
                 name: str):
        """
        Information about the SKU of the IoTSpaces instance.
        :param str name: The name of the SKU.
        """
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the SKU.
        """
        return pulumi.get(self, "name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class StorageContainerPropertiesResponse(dict):
    """
    The properties of the Azure Storage Container for file archive.
    """
    def __init__(__self__, *,
                 connection_string: Optional[str] = None,
                 container_name: Optional[str] = None,
                 resource_group: Optional[str] = None,
                 subscription_id: Optional[str] = None):
        """
        The properties of the Azure Storage Container for file archive.
        :param str connection_string: The connection string of the storage account.
        :param str container_name: The name of storage container in the storage account.
        :param str resource_group: The name of the resource group of the storage account.
        :param str subscription_id: The subscription identifier of the storage account.
        """
        if connection_string is not None:
            pulumi.set(__self__, "connection_string", connection_string)
        if container_name is not None:
            pulumi.set(__self__, "container_name", container_name)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if subscription_id is not None:
            pulumi.set(__self__, "subscription_id", subscription_id)

    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> Optional[str]:
        """
        The connection string of the storage account.
        """
        return pulumi.get(self, "connection_string")

    @property
    @pulumi.getter(name="containerName")
    def container_name(self) -> Optional[str]:
        """
        The name of storage container in the storage account.
        """
        return pulumi.get(self, "container_name")

    @property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[str]:
        """
        The name of the resource group of the storage account.
        """
        return pulumi.get(self, "resource_group")

    @property
    @pulumi.getter(name="subscriptionId")
    def subscription_id(self) -> Optional[str]:
        """
        The subscription identifier of the storage account.
        """
        return pulumi.get(self, "subscription_id")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


