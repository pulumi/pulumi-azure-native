# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .blockchain_member import *
from .get_blockchain_member import *
from .get_transaction_node import *
from .list_blockchain_member_api_keys import *
from .list_location_consortiums import *
from .list_transaction_node_api_keys import *
from .transaction_node import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-nextgen:blockchain/v20180601preview:BlockchainMember":
                return BlockchainMember(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-nextgen:blockchain/v20180601preview:TransactionNode":
                return TransactionNode(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-nextgen", "blockchain/v20180601preview", _module_instance)

_register_module()
