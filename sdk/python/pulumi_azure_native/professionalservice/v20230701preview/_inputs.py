# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'ProfessionalServiceCreationPropertiesArgs',
]

@pulumi.input_type
class ProfessionalServiceCreationPropertiesArgs:
    def __init__(__self__, *,
                 auto_renew: Optional[pulumi.Input[bool]] = None,
                 billing_period: Optional[pulumi.Input[str]] = None,
                 offer_id: Optional[pulumi.Input[str]] = None,
                 publisher_id: Optional[pulumi.Input[str]] = None,
                 quote_id: Optional[pulumi.Input[str]] = None,
                 sku_id: Optional[pulumi.Input[str]] = None,
                 store_front: Optional[pulumi.Input[str]] = None,
                 term_unit: Optional[pulumi.Input[str]] = None):
        """
        properties for creation professionalService
        :param pulumi.Input[bool] auto_renew: Whether the ProfessionalService subscription will auto renew upon term end.
        :param pulumi.Input[str] billing_period: The billing period eg P1M,P1Y for monthly,yearly respectively
        :param pulumi.Input[str] offer_id: The offer id.
        :param pulumi.Input[str] publisher_id: The publisher id.
        :param pulumi.Input[str] quote_id: The quote id which the ProfessionalService will be purchase with.
        :param pulumi.Input[str] sku_id: The plan id.
        :param pulumi.Input[str] store_front: The store front which initiates the purchase.
        :param pulumi.Input[str] term_unit: The unit term eg P1M,P1Y,P2Y,P3Y meaning month,1year,2year,3year respectively
        """
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if billing_period is not None:
            pulumi.set(__self__, "billing_period", billing_period)
        if offer_id is not None:
            pulumi.set(__self__, "offer_id", offer_id)
        if publisher_id is not None:
            pulumi.set(__self__, "publisher_id", publisher_id)
        if quote_id is not None:
            pulumi.set(__self__, "quote_id", quote_id)
        if sku_id is not None:
            pulumi.set(__self__, "sku_id", sku_id)
        if store_front is not None:
            pulumi.set(__self__, "store_front", store_front)
        if term_unit is not None:
            pulumi.set(__self__, "term_unit", term_unit)

    @property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the ProfessionalService subscription will auto renew upon term end.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "auto_renew", value)

    @property
    @pulumi.getter(name="billingPeriod")
    def billing_period(self) -> Optional[pulumi.Input[str]]:
        """
        The billing period eg P1M,P1Y for monthly,yearly respectively
        """
        return pulumi.get(self, "billing_period")

    @billing_period.setter
    def billing_period(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "billing_period", value)

    @property
    @pulumi.getter(name="offerId")
    def offer_id(self) -> Optional[pulumi.Input[str]]:
        """
        The offer id.
        """
        return pulumi.get(self, "offer_id")

    @offer_id.setter
    def offer_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "offer_id", value)

    @property
    @pulumi.getter(name="publisherId")
    def publisher_id(self) -> Optional[pulumi.Input[str]]:
        """
        The publisher id.
        """
        return pulumi.get(self, "publisher_id")

    @publisher_id.setter
    def publisher_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "publisher_id", value)

    @property
    @pulumi.getter(name="quoteId")
    def quote_id(self) -> Optional[pulumi.Input[str]]:
        """
        The quote id which the ProfessionalService will be purchase with.
        """
        return pulumi.get(self, "quote_id")

    @quote_id.setter
    def quote_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "quote_id", value)

    @property
    @pulumi.getter(name="skuId")
    def sku_id(self) -> Optional[pulumi.Input[str]]:
        """
        The plan id.
        """
        return pulumi.get(self, "sku_id")

    @sku_id.setter
    def sku_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sku_id", value)

    @property
    @pulumi.getter(name="storeFront")
    def store_front(self) -> Optional[pulumi.Input[str]]:
        """
        The store front which initiates the purchase.
        """
        return pulumi.get(self, "store_front")

    @store_front.setter
    def store_front(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "store_front", value)

    @property
    @pulumi.getter(name="termUnit")
    def term_unit(self) -> Optional[pulumi.Input[str]]:
        """
        The unit term eg P1M,P1Y,P2Y,P3Y meaning month,1year,2year,3year respectively
        """
        return pulumi.get(self, "term_unit")

    @term_unit.setter
    def term_unit(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "term_unit", value)


