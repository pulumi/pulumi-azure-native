# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from ._enums import *

__all__ = [
    'CreationDataArgs',
    'CreationDataArgsDict',
]

MYPY = False

if not MYPY:
    class CreationDataArgsDict(TypedDict):
        """
        Data used when creating a target resource from a source resource.
        """
        source_resource_id: NotRequired[pulumi.Input[str]]
        """
        This is the ARM ID of the source object to be used to create the target object.
        """
elif False:
    CreationDataArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class CreationDataArgs:
    def __init__(__self__, *,
                 source_resource_id: Optional[pulumi.Input[str]] = None):
        """
        Data used when creating a target resource from a source resource.
        :param pulumi.Input[str] source_resource_id: This is the ARM ID of the source object to be used to create the target object.
        """
        if source_resource_id is not None:
            pulumi.set(__self__, "source_resource_id", source_resource_id)

    @property
    @pulumi.getter(name="sourceResourceId")
    def source_resource_id(self) -> Optional[pulumi.Input[str]]:
        """
        This is the ARM ID of the source object to be used to create the target object.
        """
        return pulumi.get(self, "source_resource_id")

    @source_resource_id.setter
    def source_resource_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_resource_id", value)


