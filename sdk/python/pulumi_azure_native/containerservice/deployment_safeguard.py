# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = ['DeploymentSafeguardArgs', 'DeploymentSafeguard']

@pulumi.input_type
class DeploymentSafeguardArgs:
    def __init__(__self__, *,
                 level: pulumi.Input[Union[builtins.str, 'DeploymentSafeguardsLevel']],
                 resource_uri: pulumi.Input[builtins.str],
                 excluded_namespaces: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None):
        """
        The set of arguments for constructing a DeploymentSafeguard resource.
        :param pulumi.Input[Union[builtins.str, 'DeploymentSafeguardsLevel']] level: The deployment safeguards level. Possible values are Warn and Enforce
        :param pulumi.Input[builtins.str] resource_uri: The fully qualified Azure Resource manager identifier of the resource.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] excluded_namespaces: User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards
        """
        pulumi.set(__self__, "level", level)
        pulumi.set(__self__, "resource_uri", resource_uri)
        if excluded_namespaces is not None:
            pulumi.set(__self__, "excluded_namespaces", excluded_namespaces)

    @property
    @pulumi.getter
    def level(self) -> pulumi.Input[Union[builtins.str, 'DeploymentSafeguardsLevel']]:
        """
        The deployment safeguards level. Possible values are Warn and Enforce
        """
        return pulumi.get(self, "level")

    @level.setter
    def level(self, value: pulumi.Input[Union[builtins.str, 'DeploymentSafeguardsLevel']]):
        pulumi.set(self, "level", value)

    @property
    @pulumi.getter(name="resourceUri")
    def resource_uri(self) -> pulumi.Input[builtins.str]:
        """
        The fully qualified Azure Resource manager identifier of the resource.
        """
        return pulumi.get(self, "resource_uri")

    @resource_uri.setter
    def resource_uri(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "resource_uri", value)

    @property
    @pulumi.getter(name="excludedNamespaces")
    def excluded_namespaces(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards
        """
        return pulumi.get(self, "excluded_namespaces")

    @excluded_namespaces.setter
    def excluded_namespaces(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "excluded_namespaces", value)


@pulumi.type_token("azure-native:containerservice:DeploymentSafeguard")
class DeploymentSafeguard(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 excluded_namespaces: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 level: Optional[pulumi.Input[Union[builtins.str, 'DeploymentSafeguardsLevel']]] = None,
                 resource_uri: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        Deployment Safeguards

        Uses Azure REST API version 2025-04-02-preview.

        Other available API versions: 2025-04-01, 2025-05-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] excluded_namespaces: User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards
        :param pulumi.Input[Union[builtins.str, 'DeploymentSafeguardsLevel']] level: The deployment safeguards level. Possible values are Warn and Enforce
        :param pulumi.Input[builtins.str] resource_uri: The fully qualified Azure Resource manager identifier of the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DeploymentSafeguardArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Deployment Safeguards

        Uses Azure REST API version 2025-04-02-preview.

        Other available API versions: 2025-04-01, 2025-05-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.

        :param str resource_name: The name of the resource.
        :param DeploymentSafeguardArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DeploymentSafeguardArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 excluded_namespaces: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 level: Optional[pulumi.Input[Union[builtins.str, 'DeploymentSafeguardsLevel']]] = None,
                 resource_uri: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DeploymentSafeguardArgs.__new__(DeploymentSafeguardArgs)

            __props__.__dict__["excluded_namespaces"] = excluded_namespaces
            if level is None and not opts.urn:
                raise TypeError("Missing required property 'level'")
            __props__.__dict__["level"] = level
            if resource_uri is None and not opts.urn:
                raise TypeError("Missing required property 'resource_uri'")
            __props__.__dict__["resource_uri"] = resource_uri
            __props__.__dict__["azure_api_version"] = None
            __props__.__dict__["e_tag"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["provisioning_state"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["system_excluded_namespaces"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:containerservice/v20250401:DeploymentSafeguard"), pulumi.Alias(type_="azure-native:containerservice/v20250402preview:DeploymentSafeguard"), pulumi.Alias(type_="azure-native:containerservice/v20250502preview:DeploymentSafeguard")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(DeploymentSafeguard, __self__).__init__(
            'azure-native:containerservice:DeploymentSafeguard',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'DeploymentSafeguard':
        """
        Get an existing DeploymentSafeguard resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = DeploymentSafeguardArgs.__new__(DeploymentSafeguardArgs)

        __props__.__dict__["azure_api_version"] = None
        __props__.__dict__["e_tag"] = None
        __props__.__dict__["excluded_namespaces"] = None
        __props__.__dict__["level"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["provisioning_state"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["system_excluded_namespaces"] = None
        __props__.__dict__["type"] = None
        return DeploymentSafeguard(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="azureApiVersion")
    def azure_api_version(self) -> pulumi.Output[builtins.str]:
        """
        The Azure API version of the resource.
        """
        return pulumi.get(self, "azure_api_version")

    @property
    @pulumi.getter(name="eTag")
    def e_tag(self) -> pulumi.Output[builtins.str]:
        """
        If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        """
        return pulumi.get(self, "e_tag")

    @property
    @pulumi.getter(name="excludedNamespaces")
    def excluded_namespaces(self) -> pulumi.Output[Optional[Sequence[builtins.str]]]:
        """
        User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards
        """
        return pulumi.get(self, "excluded_namespaces")

    @property
    @pulumi.getter
    def level(self) -> pulumi.Output[builtins.str]:
        """
        The deployment safeguards level. Possible values are Warn and Enforce
        """
        return pulumi.get(self, "level")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[builtins.str]:
        """
        Provisioning State
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter(name="systemExcludedNamespaces")
    def system_excluded_namespaces(self) -> pulumi.Output[Sequence[builtins.str]]:
        """
        System defined list of namespaces excluded from Deployment Safeguards. These are determined by the underlying provider (such as AKS), and cannot be changed. Deployments in these namespaces will not be checked
        """
        return pulumi.get(self, "system_excluded_namespaces")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[builtins.str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

