# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .agent_pool import *
from .get_agent_pool import *
from .get_maintenance_configuration import *
from .get_managed_cluster import *
from .get_open_shift_managed_cluster import *
from .get_private_endpoint_connection import *
from .list_managed_cluster_access_profile import *
from .list_managed_cluster_admin_credentials import *
from .list_managed_cluster_monitoring_user_credentials import *
from .list_managed_cluster_user_credentials import *
from .maintenance_configuration import *
from .managed_cluster import *
from .open_shift_managed_cluster import *
from .private_endpoint_connection import *
from ._inputs import *
from . import outputs

# Make subpackages available:
from . import (
    latest,
    v20151101preview,
    v20160330,
    v20160930,
    v20170131,
    v20170831,
    v20180331,
    v20180801preview,
    v20180930preview,
    v20190201,
    v20190401,
    v20190430,
    v20190601,
    v20190801,
    v20190930preview,
    v20191001,
    v20191027preview,
    v20191101,
    v20200101,
    v20200201,
    v20200301,
    v20200401,
    v20200601,
    v20200701,
    v20200901,
    v20201101,
    v20201201,
    v20210201,
    v20210301,
)

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-native:containerservice:AgentPool":
                return AgentPool(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:containerservice:MaintenanceConfiguration":
                return MaintenanceConfiguration(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:containerservice:ManagedCluster":
                return ManagedCluster(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:containerservice:OpenShiftManagedCluster":
                return OpenShiftManagedCluster(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:containerservice:PrivateEndpointConnection":
                return PrivateEndpointConnection(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-native", "containerservice", _module_instance)

_register_module()
