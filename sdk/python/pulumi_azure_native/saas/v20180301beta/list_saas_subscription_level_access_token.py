# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'ListSaasSubscriptionLevelAccessTokenResult',
    'AwaitableListSaasSubscriptionLevelAccessTokenResult',
    'list_saas_subscription_level_access_token',
    'list_saas_subscription_level_access_token_output',
]

@pulumi.output_type
class ListSaasSubscriptionLevelAccessTokenResult:
    """
    the ISV access token result response.
    """
    def __init__(__self__, publisher_offer_base_uri=None, token=None):
        if publisher_offer_base_uri and not isinstance(publisher_offer_base_uri, str):
            raise TypeError("Expected argument 'publisher_offer_base_uri' to be a str")
        pulumi.set(__self__, "publisher_offer_base_uri", publisher_offer_base_uri)
        if token and not isinstance(token, str):
            raise TypeError("Expected argument 'token' to be a str")
        pulumi.set(__self__, "token", token)

    @property
    @pulumi.getter(name="publisherOfferBaseUri")
    def publisher_offer_base_uri(self) -> Optional[str]:
        """
        The Publisher Offer Base Uri
        """
        return pulumi.get(self, "publisher_offer_base_uri")

    @property
    @pulumi.getter
    def token(self) -> Optional[str]:
        """
        The generated token
        """
        return pulumi.get(self, "token")


class AwaitableListSaasSubscriptionLevelAccessTokenResult(ListSaasSubscriptionLevelAccessTokenResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListSaasSubscriptionLevelAccessTokenResult(
            publisher_offer_base_uri=self.publisher_offer_base_uri,
            token=self.token)


def list_saas_subscription_level_access_token(resource_group_name: Optional[str] = None,
                                              resource_name: Optional[str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListSaasSubscriptionLevelAccessTokenResult:
    """
    the ISV access token result response.


    :param str resource_group_name: The name of the resource group.
    :param str resource_name: The name of the resource.
    """
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['resourceName'] = resource_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-native:saas/v20180301beta:listSaasSubscriptionLevelAccessToken', __args__, opts=opts, typ=ListSaasSubscriptionLevelAccessTokenResult).value

    return AwaitableListSaasSubscriptionLevelAccessTokenResult(
        publisher_offer_base_uri=__ret__.publisher_offer_base_uri,
        token=__ret__.token)


@_utilities.lift_output_func(list_saas_subscription_level_access_token)
def list_saas_subscription_level_access_token_output(resource_group_name: Optional[pulumi.Input[str]] = None,
                                                     resource_name: Optional[pulumi.Input[str]] = None,
                                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ListSaasSubscriptionLevelAccessTokenResult]:
    """
    the ISV access token result response.


    :param str resource_group_name: The name of the resource group.
    :param str resource_name: The name of the resource.
    """
    ...
