# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'ApiType',
    'BearerTokenSendingMethods',
    'ContentFormat',
    'GroupType',
    'PolicyContentFormat',
    'PolicyFragmentContentFormat',
    'ProductState',
    'Protocol',
    'SchemaType',
    'SoapApiType',
    'SubscriptionState',
    'TranslateRequiredQueryParametersConduct',
    'VersioningScheme',
]


class ApiType(str, Enum):
    """
    Type of API.
    """
    HTTP = "http"
    SOAP = "soap"
    WEBSOCKET = "websocket"
    GRAPHQL = "graphql"


class BearerTokenSendingMethods(str, Enum):
    """
    Form of an authorization grant, which the client uses to request the access token.
    """
    AUTHORIZATION_HEADER = "authorizationHeader"
    """
    Access token will be transmitted in the Authorization header using Bearer schema
    """
    QUERY = "query"
    """
    Access token will be transmitted as query parameters.
    """


class ContentFormat(str, Enum):
    """
    Format of the Content in which the API is getting imported.
    """
    WADL_XML = "wadl-xml"
    """
    The contents are inline and Content type is a WADL document.
    """
    WADL_LINK_JSON = "wadl-link-json"
    """
    The WADL document is hosted on a publicly accessible internet address.
    """
    SWAGGER_JSON = "swagger-json"
    """
    The contents are inline and Content Type is a OpenAPI 2.0 JSON Document.
    """
    SWAGGER_LINK_JSON = "swagger-link-json"
    """
    The OpenAPI 2.0 JSON document is hosted on a publicly accessible internet address.
    """
    WSDL = "wsdl"
    """
    The contents are inline and the document is a WSDL/Soap document.
    """
    WSDL_LINK = "wsdl-link"
    """
    The WSDL document is hosted on a publicly accessible internet address.
    """
    OPENAPI = "openapi"
    """
    The contents are inline and Content Type is a OpenAPI 3.0 YAML Document.
    """
    OPENAPI_JSON = "openapi+json"
    """
    The contents are inline and Content Type is a OpenAPI 3.0 JSON Document.
    """
    OPENAPI_LINK = "openapi-link"
    """
    The OpenAPI 3.0 YAML document is hosted on a publicly accessible internet address.
    """
    OPENAPI_JSON_LINK = "openapi+json-link"
    """
    The OpenAPI 3.0 JSON document is hosted on a publicly accessible internet address.
    """
    GRAPHQL_LINK = "graphql-link"
    """
    The GraphQL API endpoint hosted on a publicly accessible internet address.
    """


class GroupType(str, Enum):
    """
    Group type.
    """
    CUSTOM = "custom"
    SYSTEM = "system"
    EXTERNAL = "external"


class PolicyContentFormat(str, Enum):
    """
    Format of the policyContent.
    """
    XML = "xml"
    """
    The contents are inline and Content type is an XML document.
    """
    XML_LINK = "xml-link"
    """
    The policy XML document is hosted on a HTTP endpoint accessible from the API Management service.
    """
    RAWXML = "rawxml"
    """
    The contents are inline and Content type is a non XML encoded policy document.
    """
    RAWXML_LINK = "rawxml-link"
    """
    The policy document is not XML encoded and is hosted on a HTTP endpoint accessible from the API Management service.
    """


class PolicyFragmentContentFormat(str, Enum):
    """
    Format of the policy fragment content.
    """
    XML = "xml"
    """
    The contents are inline and Content type is an XML document.
    """
    RAWXML = "rawxml"
    """
    The contents are inline and Content type is a non XML encoded policy document.
    """


class ProductState(str, Enum):
    """
    whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
    """
    NOT_PUBLISHED = "notPublished"
    PUBLISHED = "published"


class Protocol(str, Enum):
    HTTP = "http"
    HTTPS = "https"
    WS = "ws"
    WSS = "wss"


class SchemaType(str, Enum):
    """
    Schema Type. Immutable.
    """
    XML = "xml"
    """
    XML schema type.
    """
    JSON = "json"
    """
    Json schema type.
    """


class SoapApiType(str, Enum):
    """
    Type of API to create. 
     * `http` creates a REST API 
     * `soap` creates a SOAP pass-through API  
     * `websocket` creates websocket API 
     * `graphql` creates GraphQL API.
    """
    SOAP_TO_REST = "http"
    """
    Imports a SOAP API having a RESTful front end.
    """
    SOAP_PASS_THROUGH = "soap"
    """
    Imports the SOAP API having a SOAP front end.
    """
    WEB_SOCKET = "websocket"
    """
    Imports the API having a Websocket front end.
    """
    GRAPH_QL = "graphql"
    """
    Imports the API having a GraphQL front end.
    """


class SubscriptionState(str, Enum):
    """
    Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
    """
    SUSPENDED = "suspended"
    ACTIVE = "active"
    EXPIRED = "expired"
    SUBMITTED = "submitted"
    REJECTED = "rejected"
    CANCELLED = "cancelled"


class TranslateRequiredQueryParametersConduct(str, Enum):
    """
    Strategy of translating required query parameters to template ones. By default has value 'template'. Possible values: 'template', 'query'
    """
    TEMPLATE = "template"
    """
    Translates required query parameters to template ones. Is a default value
    """
    QUERY = "query"
    """
    Leaves required query parameters as they are (no translation done).
    """


class VersioningScheme(str, Enum):
    """
    An value that determines where the API Version identifier will be located in a HTTP request.
    """
    SEGMENT = "Segment"
    """
    The API Version is passed in a path segment.
    """
    QUERY = "Query"
    """
    The API Version is passed in a query parameter.
    """
    HEADER = "Header"
    """
    The API Version is passed in a HTTP header.
    """
