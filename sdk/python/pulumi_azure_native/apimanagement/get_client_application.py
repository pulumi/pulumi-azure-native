# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetClientApplicationResult',
    'AwaitableGetClientApplicationResult',
    'get_client_application',
    'get_client_application_output',
]

@pulumi.output_type
class GetClientApplicationResult:
    """
    Client application details.
    """
    def __init__(__self__, azure_api_version=None, description=None, display_name=None, entra_application_id=None, entra_tenant_id=None, id=None, name=None, owner_id=None, state=None, type=None):
        if azure_api_version and not isinstance(azure_api_version, str):
            raise TypeError("Expected argument 'azure_api_version' to be a str")
        pulumi.set(__self__, "azure_api_version", azure_api_version)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        pulumi.set(__self__, "display_name", display_name)
        if entra_application_id and not isinstance(entra_application_id, str):
            raise TypeError("Expected argument 'entra_application_id' to be a str")
        pulumi.set(__self__, "entra_application_id", entra_application_id)
        if entra_tenant_id and not isinstance(entra_tenant_id, str):
            raise TypeError("Expected argument 'entra_tenant_id' to be a str")
        pulumi.set(__self__, "entra_tenant_id", entra_tenant_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if owner_id and not isinstance(owner_id, str):
            raise TypeError("Expected argument 'owner_id' to be a str")
        pulumi.set(__self__, "owner_id", owner_id)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="azureApiVersion")
    def azure_api_version(self) -> builtins.str:
        """
        The Azure API version of the resource.
        """
        return pulumi.get(self, "azure_api_version")

    @property
    @pulumi.getter
    def description(self) -> Optional[builtins.str]:
        """
        Client application description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        Client application name.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="entraApplicationId")
    def entra_application_id(self) -> builtins.str:
        """
        Microsoft EntraID Application ID (Client ID). This is the value that is used to identify the application when it is requesting access tokens from Microsoft EntraID. This property is read-only and will be set by the system when the application is created.
        """
        return pulumi.get(self, "entra_application_id")

    @property
    @pulumi.getter(name="entraTenantId")
    def entra_tenant_id(self) -> builtins.str:
        """
        Tenant ID is a unique identifier (a GUID) for an organization directory in Microsoft’s cloud. It’s used to identify tenants across Microsoft services.
        """
        return pulumi.get(self, "entra_tenant_id")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="ownerId")
    def owner_id(self) -> builtins.str:
        """
        A resource identifier for the user who owns the application.
        """
        return pulumi.get(self, "owner_id")

    @property
    @pulumi.getter
    def state(self) -> builtins.str:
        """
        Client application state. The value derives the state of an application based on the statuses of its associated ClientApplicationProductLinks.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")


class AwaitableGetClientApplicationResult(GetClientApplicationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetClientApplicationResult(
            azure_api_version=self.azure_api_version,
            description=self.description,
            display_name=self.display_name,
            entra_application_id=self.entra_application_id,
            entra_tenant_id=self.entra_tenant_id,
            id=self.id,
            name=self.name,
            owner_id=self.owner_id,
            state=self.state,
            type=self.type)


def get_client_application(client_application_id: Optional[builtins.str] = None,
                           resource_group_name: Optional[builtins.str] = None,
                           service_name: Optional[builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetClientApplicationResult:
    """
    Gets the details of the client application specified by its identifier.

    Uses Azure REST API version 2024-10-01-preview.


    :param builtins.str client_application_id: Client Application identifier. Must be unique in the current API Management service instance.
    :param builtins.str resource_group_name: The name of the resource group. The name is case insensitive.
    :param builtins.str service_name: The name of the API Management service.
    """
    __args__ = dict()
    __args__['clientApplicationId'] = client_application_id
    __args__['resourceGroupName'] = resource_group_name
    __args__['serviceName'] = service_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:apimanagement:getClientApplication', __args__, opts=opts, typ=GetClientApplicationResult).value

    return AwaitableGetClientApplicationResult(
        azure_api_version=pulumi.get(__ret__, 'azure_api_version'),
        description=pulumi.get(__ret__, 'description'),
        display_name=pulumi.get(__ret__, 'display_name'),
        entra_application_id=pulumi.get(__ret__, 'entra_application_id'),
        entra_tenant_id=pulumi.get(__ret__, 'entra_tenant_id'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        owner_id=pulumi.get(__ret__, 'owner_id'),
        state=pulumi.get(__ret__, 'state'),
        type=pulumi.get(__ret__, 'type'))
def get_client_application_output(client_application_id: Optional[pulumi.Input[builtins.str]] = None,
                                  resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                                  service_name: Optional[pulumi.Input[builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetClientApplicationResult]:
    """
    Gets the details of the client application specified by its identifier.

    Uses Azure REST API version 2024-10-01-preview.


    :param builtins.str client_application_id: Client Application identifier. Must be unique in the current API Management service instance.
    :param builtins.str resource_group_name: The name of the resource group. The name is case insensitive.
    :param builtins.str service_name: The name of the API Management service.
    """
    __args__ = dict()
    __args__['clientApplicationId'] = client_application_id
    __args__['resourceGroupName'] = resource_group_name
    __args__['serviceName'] = service_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:apimanagement:getClientApplication', __args__, opts=opts, typ=GetClientApplicationResult)
    return __ret__.apply(lambda __response__: GetClientApplicationResult(
        azure_api_version=pulumi.get(__response__, 'azure_api_version'),
        description=pulumi.get(__response__, 'description'),
        display_name=pulumi.get(__response__, 'display_name'),
        entra_application_id=pulumi.get(__response__, 'entra_application_id'),
        entra_tenant_id=pulumi.get(__response__, 'entra_tenant_id'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        owner_id=pulumi.get(__response__, 'owner_id'),
        state=pulumi.get(__response__, 'state'),
        type=pulumi.get(__response__, 'type')))
