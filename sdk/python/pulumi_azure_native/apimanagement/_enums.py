# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import pulumi
from enum import Enum

__all__ = [
    'AlwaysLog',
    'ApiGatewaySkuType',
    'ApiType',
    'ApimIdentityType',
    'AppType',
    'AuthorizationMethod',
    'AuthorizationType',
    'BackendProtocol',
    'BackendType',
    'BearerTokenSendingMethod',
    'BearerTokenSendingMethods',
    'CertificateSource',
    'CertificateStatus',
    'ClientAuthenticationMethod',
    'Confirmation',
    'ContentFormat',
    'DataMaskingMode',
    'GatewayListDebugCredentialsContractPurpose',
    'GrantType',
    'GroupType',
    'HostnameType',
    'HttpCorrelationProtocol',
    'IdentityProviderType',
    'KeyType',
    'LlmDiagnosticSettings',
    'LlmMessageLogTypes',
    'LoggerType',
    'NatGatewayState',
    'OAuth2GrantType',
    'OperationNameFormat',
    'PolicyContentFormat',
    'PolicyFragmentContentFormat',
    'PolicyRestrictionRequireBase',
    'PrivateEndpointServiceConnectionStatus',
    'ProductState',
    'Protocol',
    'ProvisioningState',
    'PublicNetworkAccess',
    'SamplingType',
    'SchemaType',
    'SkuType',
    'SoapApiType',
    'State',
    'SubscriptionState',
    'TranslateRequiredQueryParametersConduct',
    'UserState',
    'Verbosity',
    'VersioningScheme',
    'VirtualNetworkType',
]


@pulumi.type_token("azure-native:apimanagement:AlwaysLog")
class AlwaysLog(builtins.str, Enum):
    """
    Specifies for what type of messages sampling settings should not apply.
    """
    ALL_ERRORS = "allErrors"
    """
    Always log all erroneous request regardless of sampling settings.
    """


@pulumi.type_token("azure-native:apimanagement:ApiGatewaySkuType")
class ApiGatewaySkuType(builtins.str, Enum):
    """
    Name of the Sku.
    """
    STANDARD = "Standard"
    """
    Standard SKU of the API gateway.
    """
    WORKSPACE_GATEWAY_STANDARD = "WorkspaceGatewayStandard"
    """
    Standard SKU of the API gateway to be used in Workspaces.
    """
    WORKSPACE_GATEWAY_PREMIUM = "WorkspaceGatewayPremium"
    """
    Premium SKU of the API gateway to be used in Workspaces.
    """


@pulumi.type_token("azure-native:apimanagement:ApiType")
class ApiType(builtins.str, Enum):
    """
    Type of API.
    """
    HTTP = "http"
    SOAP = "soap"
    WEBSOCKET = "websocket"
    GRAPHQL = "graphql"


@pulumi.type_token("azure-native:apimanagement:ApimIdentityType")
class ApimIdentityType(builtins.str, Enum):
    """
    The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
    """
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned, UserAssigned"
    NONE = "None"


@pulumi.type_token("azure-native:apimanagement:AppType")
class AppType(builtins.str, Enum):
    """
    Determines the type of application which send the create user request. Default is legacy portal.
    """
    PORTAL = "portal"
    """
    User create request was sent by legacy developer portal.
    """
    DEVELOPER_PORTAL = "developerPortal"
    """
    User create request was sent by new developer portal.
    """


@pulumi.type_token("azure-native:apimanagement:AuthorizationMethod")
class AuthorizationMethod(builtins.str, Enum):
    HEAD = "HEAD"
    OPTIONS = "OPTIONS"
    TRACE = "TRACE"
    GET = "GET"
    POST = "POST"
    PUT = "PUT"
    PATCH = "PATCH"
    DELETE = "DELETE"


@pulumi.type_token("azure-native:apimanagement:AuthorizationType")
class AuthorizationType(builtins.str, Enum):
    """
    Authorization type options
    """
    O_AUTH2 = "OAuth2"
    """
    OAuth2 authorization type
    """


@pulumi.type_token("azure-native:apimanagement:BackendProtocol")
class BackendProtocol(builtins.str, Enum):
    """
    Backend communication protocol.
    """
    HTTP = "http"
    """
    The Backend is a RESTful service.
    """
    SOAP = "soap"
    """
    The Backend is a SOAP service.
    """


@pulumi.type_token("azure-native:apimanagement:BackendType")
class BackendType(builtins.str, Enum):
    """
    Type of the backend. A backend can be either Single or Pool.
    """
    SINGLE = "Single"
    """
    supports single backend
    """
    POOL = "Pool"
    """
    supports pool backend
    """


@pulumi.type_token("azure-native:apimanagement:BearerTokenSendingMethod")
class BearerTokenSendingMethod(builtins.str, Enum):
    AUTHORIZATION_HEADER = "authorizationHeader"
    QUERY = "query"


@pulumi.type_token("azure-native:apimanagement:BearerTokenSendingMethods")
class BearerTokenSendingMethods(builtins.str, Enum):
    """
    Form of an authorization grant, which the client uses to request the access token.
    """
    AUTHORIZATION_HEADER = "authorizationHeader"
    """
    Access token will be transmitted in the Authorization header using Bearer schema
    """
    QUERY = "query"
    """
    Access token will be transmitted as query parameters.
    """


@pulumi.type_token("azure-native:apimanagement:CertificateSource")
class CertificateSource(builtins.str, Enum):
    """
    Certificate Source.
    """
    MANAGED = "Managed"
    KEY_VAULT = "KeyVault"
    CUSTOM = "Custom"
    BUILT_IN = "BuiltIn"


@pulumi.type_token("azure-native:apimanagement:CertificateStatus")
class CertificateStatus(builtins.str, Enum):
    """
    Certificate Status.
    """
    COMPLETED = "Completed"
    FAILED = "Failed"
    IN_PROGRESS = "InProgress"


@pulumi.type_token("azure-native:apimanagement:ClientAuthenticationMethod")
class ClientAuthenticationMethod(builtins.str, Enum):
    BASIC = "Basic"
    """
    Basic Client Authentication method.
    """
    BODY = "Body"
    """
    Body based Authentication method.
    """


@pulumi.type_token("azure-native:apimanagement:Confirmation")
class Confirmation(builtins.str, Enum):
    """
    Determines the type of confirmation e-mail that will be sent to the newly created user.
    """
    SIGNUP = "signup"
    """
    Send an e-mail to the user confirming they have successfully signed up.
    """
    INVITE = "invite"
    """
    Send an e-mail inviting the user to sign-up and complete registration.
    """


@pulumi.type_token("azure-native:apimanagement:ContentFormat")
class ContentFormat(builtins.str, Enum):
    """
    Format of the Content in which the API is getting imported.
    """
    WADL_XML = "wadl-xml"
    """
    The contents are inline and Content type is a WADL document.
    """
    WADL_LINK_JSON = "wadl-link-json"
    """
    The WADL document is hosted on a publicly accessible internet address.
    """
    SWAGGER_JSON = "swagger-json"
    """
    The contents are inline and Content Type is a OpenAPI 2.0 JSON Document.
    """
    SWAGGER_LINK_JSON = "swagger-link-json"
    """
    The OpenAPI 2.0 JSON document is hosted on a publicly accessible internet address.
    """
    WSDL = "wsdl"
    """
    The contents are inline and the document is a WSDL/Soap document.
    """
    WSDL_LINK = "wsdl-link"
    """
    The WSDL document is hosted on a publicly accessible internet address.
    """
    OPENAPI = "openapi"
    """
    The contents are inline and Content Type is a OpenAPI 3.0 YAML Document.
    """
    OPENAPI_JSON = "openapi+json"
    """
    The contents are inline and Content Type is a OpenAPI 3.0 JSON Document.
    """
    OPENAPI_LINK = "openapi-link"
    """
    The OpenAPI 3.0 YAML document is hosted on a publicly accessible internet address.
    """
    OPENAPI_JSON_LINK = "openapi+json-link"
    """
    The OpenAPI 3.0 JSON document is hosted on a publicly accessible internet address.
    """
    GRAPHQL_LINK = "graphql-link"
    """
    The GraphQL API endpoint hosted on a publicly accessible internet address.
    """


@pulumi.type_token("azure-native:apimanagement:DataMaskingMode")
class DataMaskingMode(builtins.str, Enum):
    """
    Data masking mode.
    """
    MASK = "Mask"
    """
    Mask the value of an entity.
    """
    HIDE = "Hide"
    """
    Hide the presence of an entity.
    """


@pulumi.type_token("azure-native:apimanagement:GatewayListDebugCredentialsContractPurpose")
class GatewayListDebugCredentialsContractPurpose(builtins.str, Enum):
    """
    Purpose of debug credential.
    """
    TRACING = "tracing"
    """
    The tracing purpose.
    """


@pulumi.type_token("azure-native:apimanagement:GrantType")
class GrantType(builtins.str, Enum):
    AUTHORIZATION_CODE = "authorizationCode"
    """
    Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1.
    """
    IMPLICIT = "implicit"
    """
    Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2.
    """
    RESOURCE_OWNER_PASSWORD = "resourceOwnerPassword"
    """
    Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3.
    """
    CLIENT_CREDENTIALS = "clientCredentials"
    """
    Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4.
    """


@pulumi.type_token("azure-native:apimanagement:GroupType")
class GroupType(builtins.str, Enum):
    """
    Group type.
    """
    CUSTOM = "custom"
    SYSTEM = "system"
    EXTERNAL = "external"


@pulumi.type_token("azure-native:apimanagement:HostnameType")
class HostnameType(builtins.str, Enum):
    """
    Hostname type.
    """
    PROXY = "Proxy"
    PORTAL = "Portal"
    MANAGEMENT = "Management"
    SCM = "Scm"
    DEVELOPER_PORTAL = "DeveloperPortal"


@pulumi.type_token("azure-native:apimanagement:HttpCorrelationProtocol")
class HttpCorrelationProtocol(builtins.str, Enum):
    """
    Sets correlation protocol to use for Application Insights diagnostics.
    """
    NONE = "None"
    """
    Do not read and inject correlation headers.
    """
    LEGACY = "Legacy"
    """
    Inject Request-Id and Request-Context headers with request correlation data. See https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/HttpCorrelationProtocol.md.
    """
    W3_C = "W3C"
    """
    Inject Trace Context headers. See https://w3c.github.io/trace-context.
    """


@pulumi.type_token("azure-native:apimanagement:IdentityProviderType")
class IdentityProviderType(builtins.str, Enum):
    """
    Identity Provider Type identifier.
    """
    FACEBOOK = "facebook"
    """
    Facebook as Identity provider.
    """
    GOOGLE = "google"
    """
    Google as Identity provider.
    """
    MICROSOFT = "microsoft"
    """
    Microsoft Live as Identity provider.
    """
    TWITTER = "twitter"
    """
    Twitter as Identity provider.
    """
    AAD = "aad"
    """
    Azure Active Directory as Identity provider.
    """
    AAD_B2_C = "aadB2C"
    """
    Azure Active Directory B2C as Identity provider.
    """


@pulumi.type_token("azure-native:apimanagement:KeyType")
class KeyType(builtins.str, Enum):
    """
    The Key to be used to generate token for user.
    """
    PRIMARY = "primary"
    SECONDARY = "secondary"


@pulumi.type_token("azure-native:apimanagement:LlmDiagnosticSettings")
class LlmDiagnosticSettings(builtins.str, Enum):
    """
    Specifies whether default diagnostic should be enabled for Large Language Models or not.
    """
    ENABLED = "enabled"
    """
    Default LLM logs are enabled.
    """
    DISABLED = "disabled"
    """
    Default LLM logs are disabled.
    """


@pulumi.type_token("azure-native:apimanagement:LlmMessageLogTypes")
class LlmMessageLogTypes(builtins.str, Enum):
    """
    Specifies which message should be logged. Currently there is only 'all' option.
    """
    ALL = "all"
    """
    Log all messages.
    """


@pulumi.type_token("azure-native:apimanagement:LoggerType")
class LoggerType(builtins.str, Enum):
    """
    Logger type.
    """
    AZURE_EVENT_HUB = "azureEventHub"
    """
    Azure Event Hub as log destination.
    """
    APPLICATION_INSIGHTS = "applicationInsights"
    """
    Azure Application Insights as log destination.
    """
    AZURE_MONITOR = "azureMonitor"
    """
    Azure Monitor
    """


@pulumi.type_token("azure-native:apimanagement:NatGatewayState")
class NatGatewayState(builtins.str, Enum):
    """
    Property can be used to enable NAT Gateway for this API Management service.
    """
    ENABLED = "Enabled"
    """
    Nat Gateway is enabled for the service.
    """
    DISABLED = "Disabled"
    """
    Nat Gateway is disabled for the service.
    """


@pulumi.type_token("azure-native:apimanagement:OAuth2GrantType")
class OAuth2GrantType(builtins.str, Enum):
    """
    OAuth2 grant type options
    """
    AUTHORIZATION_CODE = "AuthorizationCode"
    """
    Authorization Code grant
    """
    CLIENT_CREDENTIALS = "ClientCredentials"
    """
    Client Credential grant
    """


@pulumi.type_token("azure-native:apimanagement:OperationNameFormat")
class OperationNameFormat(builtins.str, Enum):
    """
    The format of the Operation Name for Application Insights telemetries. Default is Name.
    """
    NAME = "Name"
    """
    API_NAME;rev=API_REVISION - OPERATION_NAME
    """
    URL = "Url"
    """
    HTTP_VERB URL
    """


@pulumi.type_token("azure-native:apimanagement:PolicyContentFormat")
class PolicyContentFormat(builtins.str, Enum):
    """
    Format of the policyContent.
    """
    XML = "xml"
    """
    The contents are inline and Content type is an XML document.
    """
    XML_LINK = "xml-link"
    """
    The policy XML document is hosted on a HTTP endpoint accessible from the API Management service.
    """
    RAWXML = "rawxml"
    """
    The contents are inline and Content type is a non XML encoded policy document.
    """
    RAWXML_LINK = "rawxml-link"
    """
    The policy document is not XML encoded and is hosted on a HTTP endpoint accessible from the API Management service.
    """


@pulumi.type_token("azure-native:apimanagement:PolicyFragmentContentFormat")
class PolicyFragmentContentFormat(builtins.str, Enum):
    """
    Format of the policy fragment content.
    """
    XML = "xml"
    """
    The contents are inline and Content type is an XML document.
    """
    RAWXML = "rawxml"
    """
    The contents are inline and Content type is a non XML encoded policy document.
    """


@pulumi.type_token("azure-native:apimanagement:PolicyRestrictionRequireBase")
class PolicyRestrictionRequireBase(builtins.str, Enum):
    """
    Indicates if base policy should be enforced for the policy document.
    """
    TRUE = "true"
    """
    The policy is required to have base policy
    """
    FALSE = "false"
    """
    The policy does not require to have base policy
    """


@pulumi.type_token("azure-native:apimanagement:PrivateEndpointServiceConnectionStatus")
class PrivateEndpointServiceConnectionStatus(builtins.str, Enum):
    """
    Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    """
    PENDING = "Pending"
    APPROVED = "Approved"
    REJECTED = "Rejected"


@pulumi.type_token("azure-native:apimanagement:ProductState")
class ProductState(builtins.str, Enum):
    """
    whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
    """
    NOT_PUBLISHED = "notPublished"
    PUBLISHED = "published"


@pulumi.type_token("azure-native:apimanagement:Protocol")
class Protocol(builtins.str, Enum):
    HTTP = "http"
    HTTPS = "https"
    WS = "ws"
    WSS = "wss"


@pulumi.type_token("azure-native:apimanagement:ProvisioningState")
class ProvisioningState(builtins.str, Enum):
    """
    Provisioning state.
    """
    CREATED = "created"


@pulumi.type_token("azure-native:apimanagement:PublicNetworkAccess")
class PublicNetworkAccess(builtins.str, Enum):
    """
    Whether or not public endpoint access is allowed for this API Management service.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:apimanagement:SamplingType")
class SamplingType(builtins.str, Enum):
    """
    Sampling type.
    """
    FIXED = "fixed"
    """
    Fixed-rate sampling.
    """


@pulumi.type_token("azure-native:apimanagement:SchemaType")
class SchemaType(builtins.str, Enum):
    """
    Schema Type. Immutable.
    """
    XML = "xml"
    """
    XML schema type.
    """
    JSON = "json"
    """
    Json schema type.
    """


@pulumi.type_token("azure-native:apimanagement:SkuType")
class SkuType(builtins.str, Enum):
    """
    Name of the Sku.
    """
    DEVELOPER = "Developer"
    """
    Developer SKU of Api Management.
    """
    STANDARD = "Standard"
    """
    Standard SKU of Api Management.
    """
    PREMIUM = "Premium"
    """
    Premium SKU of Api Management.
    """
    BASIC = "Basic"
    """
    Basic SKU of Api Management.
    """
    CONSUMPTION = "Consumption"
    """
    Consumption SKU of Api Management.
    """
    ISOLATED = "Isolated"
    """
    Isolated SKU of Api Management.
    """


@pulumi.type_token("azure-native:apimanagement:SoapApiType")
class SoapApiType(builtins.str, Enum):
    """
    Type of API to create. 
     * `http` creates a REST API 
     * `soap` creates a SOAP pass-through API  
     * `websocket` creates websocket API 
     * `graphql` creates GraphQL API.
    """
    SOAP_TO_REST = "http"
    """
    Imports a SOAP API having a RESTful front end.
    """
    SOAP_PASS_THROUGH = "soap"
    """
    Imports the SOAP API having a SOAP front end.
    """
    WEB_SOCKET = "websocket"
    """
    Imports the API having a Websocket front end.
    """
    GRAPH_QL = "graphql"
    """
    Imports the API having a GraphQL front end.
    """


@pulumi.type_token("azure-native:apimanagement:State")
class State(builtins.str, Enum):
    """
    Status of the issue.
    """
    PROPOSED = "proposed"
    """
    The issue is proposed.
    """
    OPEN = "open"
    """
    The issue is opened.
    """
    REMOVED = "removed"
    """
    The issue was removed.
    """
    RESOLVED = "resolved"
    """
    The issue is now resolved.
    """
    CLOSED = "closed"
    """
    The issue was closed.
    """


@pulumi.type_token("azure-native:apimanagement:SubscriptionState")
class SubscriptionState(builtins.str, Enum):
    """
    Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
    """
    SUSPENDED = "suspended"
    ACTIVE = "active"
    EXPIRED = "expired"
    SUBMITTED = "submitted"
    REJECTED = "rejected"
    CANCELLED = "cancelled"


@pulumi.type_token("azure-native:apimanagement:TranslateRequiredQueryParametersConduct")
class TranslateRequiredQueryParametersConduct(builtins.str, Enum):
    """
    Strategy of translating required query parameters to template ones. By default has value 'template'. Possible values: 'template', 'query'
    """
    TEMPLATE = "template"
    """
    Translates required query parameters to template ones. Is a default value
    """
    QUERY = "query"
    """
    Leaves required query parameters as they are (no translation done).
    """


@pulumi.type_token("azure-native:apimanagement:UserState")
class UserState(builtins.str, Enum):
    """
    Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
    """
    ACTIVE = "active"
    """
    User state is active.
    """
    BLOCKED = "blocked"
    """
    User is blocked. Blocked users cannot authenticate at developer portal or call API.
    """
    PENDING = "pending"
    """
    User account is pending. Requires identity confirmation before it can be made active.
    """
    DELETED = "deleted"
    """
    User account is closed. All identities and related entities are removed.
    """


@pulumi.type_token("azure-native:apimanagement:Verbosity")
class Verbosity(builtins.str, Enum):
    """
    The verbosity level applied to traces emitted by trace policies.
    """
    VERBOSE = "verbose"
    """
    All the traces emitted by trace policies will be sent to the logger attached to this diagnostic instance.
    """
    INFORMATION = "information"
    """
    Traces with 'severity' set to 'information' and 'error' will be sent to the logger attached to this diagnostic instance.
    """
    ERROR = "error"
    """
    Only traces with 'severity' set to 'error' will be sent to the logger attached to this diagnostic instance.
    """


@pulumi.type_token("azure-native:apimanagement:VersioningScheme")
class VersioningScheme(builtins.str, Enum):
    """
    An value that determines where the API Version identifier will be located in a HTTP request.
    """
    SEGMENT = "Segment"
    """
    The API Version is passed in a path segment.
    """
    QUERY = "Query"
    """
    The API Version is passed in a query parameter.
    """
    HEADER = "Header"
    """
    The API Version is passed in a HTTP header.
    """


@pulumi.type_token("azure-native:apimanagement:VirtualNetworkType")
class VirtualNetworkType(builtins.str, Enum):
    """
    The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
    """
    NONE = "None"
    """
    The service is not part of any Virtual Network.
    """
    EXTERNAL = "External"
    """
    The service is part of Virtual Network and it is accessible from Internet.
    """
    INTERNAL = "Internal"
    """
    The service is part of Virtual Network and it is only accessible from within the virtual network.
    """
