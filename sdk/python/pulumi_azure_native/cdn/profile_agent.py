# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ProfileAgentArgs', 'ProfileAgent']

@pulumi.input_type
class ProfileAgentArgs:
    def __init__(__self__, *,
                 custom_domains: pulumi.Input[Sequence[pulumi.Input['ResourceReferenceArgs']]],
                 profile_name: pulumi.Input[builtins.str],
                 resource_group_name: pulumi.Input[builtins.str],
                 web_agent: pulumi.Input['ResourceReferenceArgs'],
                 agent_name: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a ProfileAgent resource.
        :param pulumi.Input[Sequence[pulumi.Input['ResourceReferenceArgs']]] custom_domains: List of custom domains associated with this agent link.
        :param pulumi.Input[builtins.str] profile_name: Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
        :param pulumi.Input[builtins.str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input['ResourceReferenceArgs'] web_agent: Reference to the web agent resource.
        :param pulumi.Input[builtins.str] agent_name: Name of the web agent association.
        """
        pulumi.set(__self__, "custom_domains", custom_domains)
        pulumi.set(__self__, "profile_name", profile_name)
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        pulumi.set(__self__, "web_agent", web_agent)
        if agent_name is not None:
            pulumi.set(__self__, "agent_name", agent_name)

    @property
    @pulumi.getter(name="customDomains")
    def custom_domains(self) -> pulumi.Input[Sequence[pulumi.Input['ResourceReferenceArgs']]]:
        """
        List of custom domains associated with this agent link.
        """
        return pulumi.get(self, "custom_domains")

    @custom_domains.setter
    def custom_domains(self, value: pulumi.Input[Sequence[pulumi.Input['ResourceReferenceArgs']]]):
        pulumi.set(self, "custom_domains", value)

    @property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> pulumi.Input[builtins.str]:
        """
        Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
        """
        return pulumi.get(self, "profile_name")

    @profile_name.setter
    def profile_name(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "profile_name", value)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[builtins.str]:
        """
        The name of the resource group. The name is case insensitive.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter(name="webAgent")
    def web_agent(self) -> pulumi.Input['ResourceReferenceArgs']:
        """
        Reference to the web agent resource.
        """
        return pulumi.get(self, "web_agent")

    @web_agent.setter
    def web_agent(self, value: pulumi.Input['ResourceReferenceArgs']):
        pulumi.set(self, "web_agent", value)

    @property
    @pulumi.getter(name="agentName")
    def agent_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Name of the web agent association.
        """
        return pulumi.get(self, "agent_name")

    @agent_name.setter
    def agent_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "agent_name", value)


@pulumi.type_token("azure-native:cdn:ProfileAgent")
class ProfileAgent(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agent_name: Optional[pulumi.Input[builtins.str]] = None,
                 custom_domains: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ResourceReferenceArgs', 'ResourceReferenceArgsDict']]]]] = None,
                 profile_name: Optional[pulumi.Input[builtins.str]] = None,
                 resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 web_agent: Optional[pulumi.Input[Union['ResourceReferenceArgs', 'ResourceReferenceArgsDict']]] = None,
                 __props__=None):
        """
        An agent link (web agent association) within a CDN profile.

        Uses Azure REST API version 2025-09-01-preview.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] agent_name: Name of the web agent association.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ResourceReferenceArgs', 'ResourceReferenceArgsDict']]]] custom_domains: List of custom domains associated with this agent link.
        :param pulumi.Input[builtins.str] profile_name: Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
        :param pulumi.Input[builtins.str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[Union['ResourceReferenceArgs', 'ResourceReferenceArgsDict']] web_agent: Reference to the web agent resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ProfileAgentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        An agent link (web agent association) within a CDN profile.

        Uses Azure REST API version 2025-09-01-preview.

        :param str resource_name: The name of the resource.
        :param ProfileAgentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProfileAgentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agent_name: Optional[pulumi.Input[builtins.str]] = None,
                 custom_domains: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ResourceReferenceArgs', 'ResourceReferenceArgsDict']]]]] = None,
                 profile_name: Optional[pulumi.Input[builtins.str]] = None,
                 resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 web_agent: Optional[pulumi.Input[Union['ResourceReferenceArgs', 'ResourceReferenceArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProfileAgentArgs.__new__(ProfileAgentArgs)

            __props__.__dict__["agent_name"] = agent_name
            if custom_domains is None and not opts.urn:
                raise TypeError("Missing required property 'custom_domains'")
            __props__.__dict__["custom_domains"] = custom_domains
            if profile_name is None and not opts.urn:
                raise TypeError("Missing required property 'profile_name'")
            __props__.__dict__["profile_name"] = profile_name
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            if web_agent is None and not opts.urn:
                raise TypeError("Missing required property 'web_agent'")
            __props__.__dict__["web_agent"] = web_agent
            __props__.__dict__["azure_api_version"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["provisioning_state"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:cdn/v20250901preview:ProfileAgent")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(ProfileAgent, __self__).__init__(
            'azure-native:cdn:ProfileAgent',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'ProfileAgent':
        """
        Get an existing ProfileAgent resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = ProfileAgentArgs.__new__(ProfileAgentArgs)

        __props__.__dict__["azure_api_version"] = None
        __props__.__dict__["custom_domains"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["provisioning_state"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["type"] = None
        __props__.__dict__["web_agent"] = None
        return ProfileAgent(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="azureApiVersion")
    def azure_api_version(self) -> pulumi.Output[builtins.str]:
        """
        The Azure API version of the resource.
        """
        return pulumi.get(self, "azure_api_version")

    @property
    @pulumi.getter(name="customDomains")
    def custom_domains(self) -> pulumi.Output[Sequence['outputs.ResourceReferenceResponse']]:
        """
        List of custom domains associated with this agent link.
        """
        return pulumi.get(self, "custom_domains")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[builtins.str]:
        """
        Provisioning status of the profile agent association.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[builtins.str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="webAgent")
    def web_agent(self) -> pulumi.Output['outputs.ResourceReferenceResponse']:
        """
        Reference to the web agent resource.
        """
        return pulumi.get(self, "web_agent")

