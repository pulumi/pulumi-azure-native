# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from . import outputs

__all__ = ['EdgeActionExecutionFilterArgs', 'EdgeActionExecutionFilter']

@pulumi.input_type
class EdgeActionExecutionFilterArgs:
    def __init__(__self__, *,
                 edge_action_name: pulumi.Input[str],
                 execution_filter_identifier_header_name: pulumi.Input[str],
                 execution_filter_identifier_header_value: pulumi.Input[str],
                 resource_group_name: pulumi.Input[str],
                 version_id: pulumi.Input[str],
                 execution_filter: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a EdgeActionExecutionFilter resource.
        :param pulumi.Input[str] edge_action_name: The name of the Edge Action
        :param pulumi.Input[str] execution_filter_identifier_header_name: Custom Header Key associated with the execution filter
        :param pulumi.Input[str] execution_filter_identifier_header_value: Custom Header Value associated with the execution filter
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[str] version_id: The referenced versionId of the edgeAction version
        :param pulumi.Input[str] execution_filter: The name of the execution filter
        :param pulumi.Input[str] location: The geo-location where the resource lives
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags.
        """
        pulumi.set(__self__, "edge_action_name", edge_action_name)
        pulumi.set(__self__, "execution_filter_identifier_header_name", execution_filter_identifier_header_name)
        pulumi.set(__self__, "execution_filter_identifier_header_value", execution_filter_identifier_header_value)
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        pulumi.set(__self__, "version_id", version_id)
        if execution_filter is not None:
            pulumi.set(__self__, "execution_filter", execution_filter)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="edgeActionName")
    def edge_action_name(self) -> pulumi.Input[str]:
        """
        The name of the Edge Action
        """
        return pulumi.get(self, "edge_action_name")

    @edge_action_name.setter
    def edge_action_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "edge_action_name", value)

    @property
    @pulumi.getter(name="executionFilterIdentifierHeaderName")
    def execution_filter_identifier_header_name(self) -> pulumi.Input[str]:
        """
        Custom Header Key associated with the execution filter
        """
        return pulumi.get(self, "execution_filter_identifier_header_name")

    @execution_filter_identifier_header_name.setter
    def execution_filter_identifier_header_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "execution_filter_identifier_header_name", value)

    @property
    @pulumi.getter(name="executionFilterIdentifierHeaderValue")
    def execution_filter_identifier_header_value(self) -> pulumi.Input[str]:
        """
        Custom Header Value associated with the execution filter
        """
        return pulumi.get(self, "execution_filter_identifier_header_value")

    @execution_filter_identifier_header_value.setter
    def execution_filter_identifier_header_value(self, value: pulumi.Input[str]):
        pulumi.set(self, "execution_filter_identifier_header_value", value)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[str]:
        """
        The name of the resource group. The name is case insensitive.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter(name="versionId")
    def version_id(self) -> pulumi.Input[str]:
        """
        The referenced versionId of the edgeAction version
        """
        return pulumi.get(self, "version_id")

    @version_id.setter
    def version_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "version_id", value)

    @property
    @pulumi.getter(name="executionFilter")
    def execution_filter(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the execution filter
        """
        return pulumi.get(self, "execution_filter")

    @execution_filter.setter
    def execution_filter(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "execution_filter", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)


class EdgeActionExecutionFilter(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 edge_action_name: Optional[pulumi.Input[str]] = None,
                 execution_filter: Optional[pulumi.Input[str]] = None,
                 execution_filter_identifier_header_name: Optional[pulumi.Input[str]] = None,
                 execution_filter_identifier_header_value: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 version_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Concrete tracked resource types can be created by aliasing this type using a specific property type.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] edge_action_name: The name of the Edge Action
        :param pulumi.Input[str] execution_filter: The name of the execution filter
        :param pulumi.Input[str] execution_filter_identifier_header_name: Custom Header Key associated with the execution filter
        :param pulumi.Input[str] execution_filter_identifier_header_value: Custom Header Value associated with the execution filter
        :param pulumi.Input[str] location: The geo-location where the resource lives
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags.
        :param pulumi.Input[str] version_id: The referenced versionId of the edgeAction version
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: EdgeActionExecutionFilterArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Concrete tracked resource types can be created by aliasing this type using a specific property type.

        :param str resource_name: The name of the resource.
        :param EdgeActionExecutionFilterArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EdgeActionExecutionFilterArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 edge_action_name: Optional[pulumi.Input[str]] = None,
                 execution_filter: Optional[pulumi.Input[str]] = None,
                 execution_filter_identifier_header_name: Optional[pulumi.Input[str]] = None,
                 execution_filter_identifier_header_value: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 version_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EdgeActionExecutionFilterArgs.__new__(EdgeActionExecutionFilterArgs)

            if edge_action_name is None and not opts.urn:
                raise TypeError("Missing required property 'edge_action_name'")
            __props__.__dict__["edge_action_name"] = edge_action_name
            __props__.__dict__["execution_filter"] = execution_filter
            if execution_filter_identifier_header_name is None and not opts.urn:
                raise TypeError("Missing required property 'execution_filter_identifier_header_name'")
            __props__.__dict__["execution_filter_identifier_header_name"] = execution_filter_identifier_header_name
            if execution_filter_identifier_header_value is None and not opts.urn:
                raise TypeError("Missing required property 'execution_filter_identifier_header_value'")
            __props__.__dict__["execution_filter_identifier_header_value"] = execution_filter_identifier_header_value
            __props__.__dict__["location"] = location
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            __props__.__dict__["tags"] = tags
            if version_id is None and not opts.urn:
                raise TypeError("Missing required property 'version_id'")
            __props__.__dict__["version_id"] = version_id
            __props__.__dict__["last_update_time"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["provisioning_state"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        super(EdgeActionExecutionFilter, __self__).__init__(
            'azure-native:cdn/v20240722preview:EdgeActionExecutionFilter',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'EdgeActionExecutionFilter':
        """
        Get an existing EdgeActionExecutionFilter resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = EdgeActionExecutionFilterArgs.__new__(EdgeActionExecutionFilterArgs)

        __props__.__dict__["execution_filter_identifier_header_name"] = None
        __props__.__dict__["execution_filter_identifier_header_value"] = None
        __props__.__dict__["last_update_time"] = None
        __props__.__dict__["location"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["provisioning_state"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["type"] = None
        __props__.__dict__["version_id"] = None
        return EdgeActionExecutionFilter(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="executionFilterIdentifierHeaderName")
    def execution_filter_identifier_header_name(self) -> pulumi.Output[str]:
        """
        Custom Header Key associated with the execution filter
        """
        return pulumi.get(self, "execution_filter_identifier_header_name")

    @property
    @pulumi.getter(name="executionFilterIdentifierHeaderValue")
    def execution_filter_identifier_header_value(self) -> pulumi.Output[str]:
        """
        Custom Header Value associated with the execution filter
        """
        return pulumi.get(self, "execution_filter_identifier_header_value")

    @property
    @pulumi.getter(name="lastUpdateTime")
    def last_update_time(self) -> pulumi.Output[str]:
        """
        The last update time in UTC for the execution filter
        """
        return pulumi.get(self, "last_update_time")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[str]:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[str]:
        """
        The provisioning state
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="versionId")
    def version_id(self) -> pulumi.Output[str]:
        """
        The referenced versionId of the edgeAction version
        """
        return pulumi.get(self, "version_id")

