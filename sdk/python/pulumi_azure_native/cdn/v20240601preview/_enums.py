# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AFDEndpointProtocols',
    'AFDRouteGrpcState',
    'AfdCertificateType',
    'AfdCipherSuiteSetType',
    'AfdCustomizedCipherSuiteForTls10',
    'AfdCustomizedCipherSuiteForTls12',
    'AfdCustomizedCipherSuiteForTls13',
    'AfdMinimumTlsVersion',
    'AfdQueryStringCachingBehavior',
    'EnabledState',
    'ForwardingProtocol',
    'HttpsRedirect',
    'LinkToDefaultDomain',
    'TunnelType',
]


class AFDEndpointProtocols(str, Enum):
    """
    Supported protocols for the customer's endpoint.
    """
    HTTP = "Http"
    HTTPS = "Https"


class AFDRouteGrpcState(str, Enum):
    """
    Whether or not gRPC is enabled on this route. Permitted values are 'Enabled' or 'Disabled'
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class AfdCertificateType(str, Enum):
    """
    Defines the source of the SSL certificate.
    """
    CUSTOMER_CERTIFICATE = "CustomerCertificate"
    MANAGED_CERTIFICATE = "ManagedCertificate"
    AZURE_FIRST_PARTY_MANAGED_CERTIFICATE = "AzureFirstPartyManagedCertificate"


class AfdCipherSuiteSetType(str, Enum):
    """
    cipher suite set type that will be used for Https
    """
    CUSTOMIZED = "Customized"
    TLS10_2019 = "TLS10_2019"
    TLS12_2022 = "TLS12_2022"
    TLS12_2023 = "TLS12_2023"


class AfdCustomizedCipherSuiteForTls10(str, Enum):
    ECDH_E_RS_A_AES128_SHA = "ECDHE_RSA_AES128_SHA"
    ECDH_E_RS_A_AES256_SHA = "ECDHE_RSA_AES256_SHA"
    AES256_SHA = "AES256_SHA"
    AES128_SHA = "AES128_SHA"


class AfdCustomizedCipherSuiteForTls12(str, Enum):
    ECDH_E_RS_A_AES128_GC_M_SHA256 = "ECDHE_RSA_AES128_GCM_SHA256"
    ECDH_E_RS_A_AES256_GC_M_SHA384 = "ECDHE_RSA_AES256_GCM_SHA384"
    DH_E_RS_A_AES256_GC_M_SHA384 = "DHE_RSA_AES256_GCM_SHA384"
    DH_E_RS_A_AES128_GC_M_SHA256 = "DHE_RSA_AES128_GCM_SHA256"
    ECDH_E_RS_A_AES128_SHA256 = "ECDHE_RSA_AES128_SHA256"
    ECDH_E_RS_A_AES256_SHA384 = "ECDHE_RSA_AES256_SHA384"
    AES256_GC_M_SHA384 = "AES256_GCM_SHA384"
    AES128_GC_M_SHA256 = "AES128_GCM_SHA256"
    AES256_SHA256 = "AES256_SHA256"
    AES128_SHA256 = "AES128_SHA256"


class AfdCustomizedCipherSuiteForTls13(str, Enum):
    TL_S_AE_S_128_GC_M_SHA256 = "TLS_AES_128_GCM_SHA256"
    TL_S_AE_S_256_GC_M_SHA384 = "TLS_AES_256_GCM_SHA384"


class AfdMinimumTlsVersion(str, Enum):
    """
    TLS protocol version that will be used for Https when cipherSuiteSetType is Customized.
    """
    TLS10 = "TLS10"
    TLS12 = "TLS12"
    TLS13 = "TLS13"


class AfdQueryStringCachingBehavior(str, Enum):
    """
    Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
    """
    IGNORE_QUERY_STRING = "IgnoreQueryString"
    USE_QUERY_STRING = "UseQueryString"
    IGNORE_SPECIFIED_QUERY_STRINGS = "IgnoreSpecifiedQueryStrings"
    INCLUDE_SPECIFIED_QUERY_STRINGS = "IncludeSpecifiedQueryStrings"


class EnabledState(str, Enum):
    """
    Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class ForwardingProtocol(str, Enum):
    """
    Protocol this rule will use when forwarding traffic to backends.
    """
    HTTP_ONLY = "HttpOnly"
    HTTPS_ONLY = "HttpsOnly"
    MATCH_REQUEST = "MatchRequest"


class HttpsRedirect(str, Enum):
    """
    Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class LinkToDefaultDomain(str, Enum):
    """
    whether this route will be linked to the default endpoint domain.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class TunnelType(str, Enum):
    """
    Protocol this tunnel will use for allowing traffic to backends.
    """
    HTTP_CONNECT = "HttpConnect"
