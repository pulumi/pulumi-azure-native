# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from ._enums import *

__all__ = [
    'EnterpriseChannelNodeArgs',
    'EnterpriseChannelPropertiesArgs',
    'SkuArgs',
]

@pulumi.input_type
class EnterpriseChannelNodeArgs:
    def __init__(__self__, *,
                 azure_location: pulumi.Input[str],
                 azure_sku: pulumi.Input[str],
                 name: pulumi.Input[str],
                 state: Optional[pulumi.Input[Union[str, 'EnterpriseChannelNodeState']]] = None):
        """
        The properties specific to an Enterprise Channel Node.
        :param pulumi.Input[str] azure_location: The location of the Enterprise Channel Node.
        :param pulumi.Input[str] azure_sku: The sku of the Enterprise Channel Node.
        :param pulumi.Input[str] name: The name of the Enterprise Channel Node.
        :param pulumi.Input[Union[str, 'EnterpriseChannelNodeState']] state: The current state of the Enterprise Channel Node.
        """
        pulumi.set(__self__, "azure_location", azure_location)
        pulumi.set(__self__, "azure_sku", azure_sku)
        pulumi.set(__self__, "name", name)
        if state is not None:
            pulumi.set(__self__, "state", state)

    @property
    @pulumi.getter(name="azureLocation")
    def azure_location(self) -> pulumi.Input[str]:
        """
        The location of the Enterprise Channel Node.
        """
        return pulumi.get(self, "azure_location")

    @azure_location.setter
    def azure_location(self, value: pulumi.Input[str]):
        pulumi.set(self, "azure_location", value)

    @property
    @pulumi.getter(name="azureSku")
    def azure_sku(self) -> pulumi.Input[str]:
        """
        The sku of the Enterprise Channel Node.
        """
        return pulumi.get(self, "azure_sku")

    @azure_sku.setter
    def azure_sku(self, value: pulumi.Input[str]):
        pulumi.set(self, "azure_sku", value)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        The name of the Enterprise Channel Node.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[Union[str, 'EnterpriseChannelNodeState']]]:
        """
        The current state of the Enterprise Channel Node.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[Union[str, 'EnterpriseChannelNodeState']]]):
        pulumi.set(self, "state", value)


@pulumi.input_type
class EnterpriseChannelPropertiesArgs:
    def __init__(__self__, *,
                 nodes: pulumi.Input[Sequence[pulumi.Input['EnterpriseChannelNodeArgs']]],
                 state: Optional[pulumi.Input[Union[str, 'EnterpriseChannelState']]] = None):
        """
        The parameters to provide for the Enterprise Channel.
        :param pulumi.Input[Sequence[pulumi.Input['EnterpriseChannelNodeArgs']]] nodes: The nodes associated with the Enterprise Channel.
        :param pulumi.Input[Union[str, 'EnterpriseChannelState']] state: The current state of the Enterprise Channel.
        """
        pulumi.set(__self__, "nodes", nodes)
        if state is not None:
            pulumi.set(__self__, "state", state)

    @property
    @pulumi.getter
    def nodes(self) -> pulumi.Input[Sequence[pulumi.Input['EnterpriseChannelNodeArgs']]]:
        """
        The nodes associated with the Enterprise Channel.
        """
        return pulumi.get(self, "nodes")

    @nodes.setter
    def nodes(self, value: pulumi.Input[Sequence[pulumi.Input['EnterpriseChannelNodeArgs']]]):
        pulumi.set(self, "nodes", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[Union[str, 'EnterpriseChannelState']]]:
        """
        The current state of the Enterprise Channel.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[Union[str, 'EnterpriseChannelState']]]):
        pulumi.set(self, "state", value)


@pulumi.input_type
class SkuArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[Union[str, 'SkuName']]):
        """
        The SKU of the cognitive services account.
        :param pulumi.Input[Union[str, 'SkuName']] name: The sku name
        """
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[Union[str, 'SkuName']]:
        """
        The sku name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[Union[str, 'SkuName']]):
        pulumi.set(self, "name", value)


