# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'ErrorResponse',
    'ExtendedLocationResponse',
    'SystemDataResponse',
]

@pulumi.output_type
class ErrorResponse(dict):
    """
    Defines the error.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "possibleCause":
            suggest = "possible_cause"
        elif key == "recommendedAction":
            suggest = "recommended_action"
        elif key == "runAsAccountId":
            suggest = "run_as_account_id"
        elif key == "summaryMessage":
            suggest = "summary_message"
        elif key == "updatedTimeStamp":
            suggest = "updated_time_stamp"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ErrorResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ErrorResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ErrorResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 code: Optional[builtins.str] = None,
                 id: Optional[builtins.str] = None,
                 message: Optional[builtins.str] = None,
                 possible_cause: Optional[builtins.str] = None,
                 recommended_action: Optional[builtins.str] = None,
                 run_as_account_id: Optional[builtins.str] = None,
                 severity: Optional[builtins.str] = None,
                 summary_message: Optional[builtins.str] = None,
                 updated_time_stamp: Optional[builtins.str] = None):
        """
        Defines the error.
        :param builtins.str code: The error code.
        :param builtins.str id: The error ID.
        :param builtins.str message: The detailed error message.
        :param builtins.str possible_cause: The error possible cause.
        :param builtins.str recommended_action: Gets description of the checkpoint.
        :param builtins.str run_as_account_id: The account ID used to login.
        :param builtins.str severity: Gets description of the severity.
        :param builtins.str summary_message: The summarized error message.
        :param builtins.str updated_time_stamp: Time when this error was last updated.
        """
        if code is not None:
            pulumi.set(__self__, "code", code)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if message is not None:
            pulumi.set(__self__, "message", message)
        if possible_cause is not None:
            pulumi.set(__self__, "possible_cause", possible_cause)
        if recommended_action is not None:
            pulumi.set(__self__, "recommended_action", recommended_action)
        if run_as_account_id is not None:
            pulumi.set(__self__, "run_as_account_id", run_as_account_id)
        if severity is not None:
            pulumi.set(__self__, "severity", severity)
        if summary_message is not None:
            pulumi.set(__self__, "summary_message", summary_message)
        if updated_time_stamp is not None:
            pulumi.set(__self__, "updated_time_stamp", updated_time_stamp)

    @property
    @pulumi.getter
    def code(self) -> Optional[builtins.str]:
        """
        The error code.
        """
        return pulumi.get(self, "code")

    @property
    @pulumi.getter
    def id(self) -> Optional[builtins.str]:
        """
        The error ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def message(self) -> Optional[builtins.str]:
        """
        The detailed error message.
        """
        return pulumi.get(self, "message")

    @property
    @pulumi.getter(name="possibleCause")
    def possible_cause(self) -> Optional[builtins.str]:
        """
        The error possible cause.
        """
        return pulumi.get(self, "possible_cause")

    @property
    @pulumi.getter(name="recommendedAction")
    def recommended_action(self) -> Optional[builtins.str]:
        """
        Gets description of the checkpoint.
        """
        return pulumi.get(self, "recommended_action")

    @property
    @pulumi.getter(name="runAsAccountId")
    def run_as_account_id(self) -> Optional[builtins.str]:
        """
        The account ID used to login.
        """
        return pulumi.get(self, "run_as_account_id")

    @property
    @pulumi.getter
    def severity(self) -> Optional[builtins.str]:
        """
        Gets description of the severity.
        """
        return pulumi.get(self, "severity")

    @property
    @pulumi.getter(name="summaryMessage")
    def summary_message(self) -> Optional[builtins.str]:
        """
        The summarized error message.
        """
        return pulumi.get(self, "summary_message")

    @property
    @pulumi.getter(name="updatedTimeStamp")
    def updated_time_stamp(self) -> Optional[builtins.str]:
        """
        Time when this error was last updated.
        """
        return pulumi.get(self, "updated_time_stamp")


@pulumi.output_type
class ExtendedLocationResponse(dict):
    """
    The extended location for off-azure resources.
    """
    def __init__(__self__, *,
                 name: Optional[builtins.str] = None,
                 type: Optional[builtins.str] = None):
        """
        The extended location for off-azure resources.
        :param builtins.str name: The extended location name.
        :param builtins.str type: The extended location type.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def name(self) -> Optional[builtins.str]:
        """
        The extended location name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def type(self) -> Optional[builtins.str]:
        """
        The extended location type.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class SystemDataResponse(dict):
    """
    Metadata pertaining to creation and last modification of the resource.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "createdAt":
            suggest = "created_at"
        elif key == "createdBy":
            suggest = "created_by"
        elif key == "createdByType":
            suggest = "created_by_type"
        elif key == "lastModifiedAt":
            suggest = "last_modified_at"
        elif key == "lastModifiedBy":
            suggest = "last_modified_by"
        elif key == "lastModifiedByType":
            suggest = "last_modified_by_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in SystemDataResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 created_at: Optional[builtins.str] = None,
                 created_by: Optional[builtins.str] = None,
                 created_by_type: Optional[builtins.str] = None,
                 last_modified_at: Optional[builtins.str] = None,
                 last_modified_by: Optional[builtins.str] = None,
                 last_modified_by_type: Optional[builtins.str] = None):
        """
        Metadata pertaining to creation and last modification of the resource.
        :param builtins.str created_at: The timestamp of resource creation (UTC).
        :param builtins.str created_by: The identity that created the resource.
        :param builtins.str created_by_type: The type of identity that created the resource.
        :param builtins.str last_modified_at: The timestamp of resource last modification (UTC)
        :param builtins.str last_modified_by: The identity that last modified the resource.
        :param builtins.str last_modified_by_type: The type of identity that last modified the resource.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if created_by_type is not None:
            pulumi.set(__self__, "created_by_type", created_by_type)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by is not None:
            pulumi.set(__self__, "last_modified_by", last_modified_by)
        if last_modified_by_type is not None:
            pulumi.set(__self__, "last_modified_by_type", last_modified_by_type)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[builtins.str]:
        """
        The timestamp of resource creation (UTC).
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[builtins.str]:
        """
        The identity that created the resource.
        """
        return pulumi.get(self, "created_by")

    @property
    @pulumi.getter(name="createdByType")
    def created_by_type(self) -> Optional[builtins.str]:
        """
        The type of identity that created the resource.
        """
        return pulumi.get(self, "created_by_type")

    @property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[builtins.str]:
        """
        The timestamp of resource last modification (UTC)
        """
        return pulumi.get(self, "last_modified_at")

    @property
    @pulumi.getter(name="lastModifiedBy")
    def last_modified_by(self) -> Optional[builtins.str]:
        """
        The identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by")

    @property
    @pulumi.getter(name="lastModifiedByType")
    def last_modified_by_type(self) -> Optional[builtins.str]:
        """
        The type of identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by_type")


