# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'StreamingLocatorUserDefinedContentKeyResponse',
]

@pulumi.output_type
class StreamingLocatorUserDefinedContentKeyResponse(dict):
    """
    Describes the properties of a user-defined content key in the Streaming Locator
    """
    def __init__(__self__, *,
                 id: str,
                 label: Optional[str] = None,
                 value: Optional[str] = None):
        """
        Describes the properties of a user-defined content key in the Streaming Locator
        :param str id: ID of Content Key
        :param str label: The Content Key description
        :param str value: The Content Key secret
        """
        StreamingLocatorUserDefinedContentKeyResponse._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            id=id,
            label=label,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             id: str,
             label: Optional[str] = None,
             value: Optional[str] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("id", id)
        if label is not None:
            _setter("label", label)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of Content Key
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def label(self) -> Optional[str]:
        """
        The Content Key description
        """
        return pulumi.get(self, "label")

    @property
    @pulumi.getter
    def value(self) -> Optional[str]:
        """
        The Content Key secret
        """
        return pulumi.get(self, "value")


