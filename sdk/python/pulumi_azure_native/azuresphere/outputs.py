# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'DeploymentResponse',
    'DeviceGroupResponse',
    'DeviceInsightResponse',
    'DeviceResponse',
    'ImageResponse',
    'SystemDataResponse',
]

@pulumi.output_type
class DeploymentResponse(dict):
    """
    An deployment resource belonging to a device group resource.
    """
    def __init__(__self__, *,
                 deployment_date_utc: str,
                 id: str,
                 name: str,
                 provisioning_state: str,
                 system_data: 'outputs.SystemDataResponse',
                 type: str,
                 deployed_images: Optional[Sequence['outputs.ImageResponse']] = None,
                 deployment_id: Optional[str] = None):
        """
        An deployment resource belonging to a device group resource.
        :param str deployment_date_utc: Deployment date UTC
        :param str id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        :param str name: The name of the resource
        :param str provisioning_state: The status of the last operation.
        :param 'SystemDataResponse' system_data: Azure Resource Manager metadata containing createdBy and modifiedBy information.
        :param str type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        :param Sequence['ImageResponse'] deployed_images: Images deployed
        :param str deployment_id: Deployment ID
        """
        pulumi.set(__self__, "deployment_date_utc", deployment_date_utc)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        pulumi.set(__self__, "system_data", system_data)
        pulumi.set(__self__, "type", type)
        if deployed_images is not None:
            pulumi.set(__self__, "deployed_images", deployed_images)
        if deployment_id is not None:
            pulumi.set(__self__, "deployment_id", deployment_id)

    @property
    @pulumi.getter(name="deploymentDateUtc")
    def deployment_date_utc(self) -> str:
        """
        Deployment date UTC
        """
        return pulumi.get(self, "deployment_date_utc")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        """
        The status of the last operation.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> 'outputs.SystemDataResponse':
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="deployedImages")
    def deployed_images(self) -> Optional[Sequence['outputs.ImageResponse']]:
        """
        Images deployed
        """
        return pulumi.get(self, "deployed_images")

    @property
    @pulumi.getter(name="deploymentId")
    def deployment_id(self) -> Optional[str]:
        """
        Deployment ID
        """
        return pulumi.get(self, "deployment_id")


@pulumi.output_type
class DeviceGroupResponse(dict):
    """
    An device group resource belonging to a product resource.
    """
    def __init__(__self__, *,
                 has_deployment: bool,
                 id: str,
                 name: str,
                 provisioning_state: str,
                 system_data: 'outputs.SystemDataResponse',
                 type: str,
                 allow_crash_dumps_collection: Optional[str] = None,
                 description: Optional[str] = None,
                 os_feed_type: Optional[str] = None,
                 regional_data_boundary: Optional[str] = None,
                 update_policy: Optional[str] = None):
        """
        An device group resource belonging to a product resource.
        :param bool has_deployment: Deployment status for the device group.
        :param str id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        :param str name: The name of the resource
        :param str provisioning_state: The status of the last operation.
        :param 'SystemDataResponse' system_data: Azure Resource Manager metadata containing createdBy and modifiedBy information.
        :param str type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        :param str allow_crash_dumps_collection: Flag to define if the user allows for crash dump collection.
        :param str description: Description of the device group.
        :param str os_feed_type: Operating system feed type of the device group.
        :param str regional_data_boundary: Regional data boundary for the device group.
        :param str update_policy: Update policy of the device group.
        """
        pulumi.set(__self__, "has_deployment", has_deployment)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        pulumi.set(__self__, "system_data", system_data)
        pulumi.set(__self__, "type", type)
        if allow_crash_dumps_collection is not None:
            pulumi.set(__self__, "allow_crash_dumps_collection", allow_crash_dumps_collection)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if os_feed_type is not None:
            pulumi.set(__self__, "os_feed_type", os_feed_type)
        if regional_data_boundary is not None:
            pulumi.set(__self__, "regional_data_boundary", regional_data_boundary)
        if update_policy is not None:
            pulumi.set(__self__, "update_policy", update_policy)

    @property
    @pulumi.getter(name="hasDeployment")
    def has_deployment(self) -> bool:
        """
        Deployment status for the device group.
        """
        return pulumi.get(self, "has_deployment")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        """
        The status of the last operation.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> 'outputs.SystemDataResponse':
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="allowCrashDumpsCollection")
    def allow_crash_dumps_collection(self) -> Optional[str]:
        """
        Flag to define if the user allows for crash dump collection.
        """
        return pulumi.get(self, "allow_crash_dumps_collection")

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        Description of the device group.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="osFeedType")
    def os_feed_type(self) -> Optional[str]:
        """
        Operating system feed type of the device group.
        """
        return pulumi.get(self, "os_feed_type")

    @property
    @pulumi.getter(name="regionalDataBoundary")
    def regional_data_boundary(self) -> Optional[str]:
        """
        Regional data boundary for the device group.
        """
        return pulumi.get(self, "regional_data_boundary")

    @property
    @pulumi.getter(name="updatePolicy")
    def update_policy(self) -> Optional[str]:
        """
        Update policy of the device group.
        """
        return pulumi.get(self, "update_policy")


@pulumi.output_type
class DeviceInsightResponse(dict):
    """
    Device insight report.
    """
    def __init__(__self__, *,
                 description: str,
                 device_id: str,
                 end_timestamp_utc: str,
                 event_category: str,
                 event_class: str,
                 event_count: int,
                 event_type: str,
                 start_timestamp_utc: str):
        """
        Device insight report.
        :param str description: Event description
        :param str device_id: Device ID
        :param str end_timestamp_utc: Event end timestamp
        :param str event_category: Event category
        :param str event_class: Event class
        :param int event_count: Event count
        :param str event_type: Event type
        :param str start_timestamp_utc: Event start timestamp
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "device_id", device_id)
        pulumi.set(__self__, "end_timestamp_utc", end_timestamp_utc)
        pulumi.set(__self__, "event_category", event_category)
        pulumi.set(__self__, "event_class", event_class)
        pulumi.set(__self__, "event_count", event_count)
        pulumi.set(__self__, "event_type", event_type)
        pulumi.set(__self__, "start_timestamp_utc", start_timestamp_utc)

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Event description
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="deviceId")
    def device_id(self) -> str:
        """
        Device ID
        """
        return pulumi.get(self, "device_id")

    @property
    @pulumi.getter(name="endTimestampUtc")
    def end_timestamp_utc(self) -> str:
        """
        Event end timestamp
        """
        return pulumi.get(self, "end_timestamp_utc")

    @property
    @pulumi.getter(name="eventCategory")
    def event_category(self) -> str:
        """
        Event category
        """
        return pulumi.get(self, "event_category")

    @property
    @pulumi.getter(name="eventClass")
    def event_class(self) -> str:
        """
        Event class
        """
        return pulumi.get(self, "event_class")

    @property
    @pulumi.getter(name="eventCount")
    def event_count(self) -> int:
        """
        Event count
        """
        return pulumi.get(self, "event_count")

    @property
    @pulumi.getter(name="eventType")
    def event_type(self) -> str:
        """
        Event type
        """
        return pulumi.get(self, "event_type")

    @property
    @pulumi.getter(name="startTimestampUtc")
    def start_timestamp_utc(self) -> str:
        """
        Event start timestamp
        """
        return pulumi.get(self, "start_timestamp_utc")


@pulumi.output_type
class DeviceResponse(dict):
    """
    An device resource belonging to a device group resource.
    """
    def __init__(__self__, *,
                 chip_sku: str,
                 id: str,
                 last_available_os_version: str,
                 last_installed_os_version: str,
                 last_os_update_utc: str,
                 last_update_request_utc: str,
                 name: str,
                 provisioning_state: str,
                 system_data: 'outputs.SystemDataResponse',
                 type: str,
                 device_id: Optional[str] = None):
        """
        An device resource belonging to a device group resource.
        :param str chip_sku: SKU of the chip
        :param str id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        :param str last_available_os_version: OS version available for installation when update requested
        :param str last_installed_os_version: OS version running on device when update requested
        :param str last_os_update_utc: Time when update requested and new OS version available
        :param str last_update_request_utc: Time when update was last requested
        :param str name: The name of the resource
        :param str provisioning_state: The status of the last operation.
        :param 'SystemDataResponse' system_data: Azure Resource Manager metadata containing createdBy and modifiedBy information.
        :param str type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        :param str device_id: Device ID
        """
        pulumi.set(__self__, "chip_sku", chip_sku)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_available_os_version", last_available_os_version)
        pulumi.set(__self__, "last_installed_os_version", last_installed_os_version)
        pulumi.set(__self__, "last_os_update_utc", last_os_update_utc)
        pulumi.set(__self__, "last_update_request_utc", last_update_request_utc)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        pulumi.set(__self__, "system_data", system_data)
        pulumi.set(__self__, "type", type)
        if device_id is not None:
            pulumi.set(__self__, "device_id", device_id)

    @property
    @pulumi.getter(name="chipSku")
    def chip_sku(self) -> str:
        """
        SKU of the chip
        """
        return pulumi.get(self, "chip_sku")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lastAvailableOsVersion")
    def last_available_os_version(self) -> str:
        """
        OS version available for installation when update requested
        """
        return pulumi.get(self, "last_available_os_version")

    @property
    @pulumi.getter(name="lastInstalledOsVersion")
    def last_installed_os_version(self) -> str:
        """
        OS version running on device when update requested
        """
        return pulumi.get(self, "last_installed_os_version")

    @property
    @pulumi.getter(name="lastOsUpdateUtc")
    def last_os_update_utc(self) -> str:
        """
        Time when update requested and new OS version available
        """
        return pulumi.get(self, "last_os_update_utc")

    @property
    @pulumi.getter(name="lastUpdateRequestUtc")
    def last_update_request_utc(self) -> str:
        """
        Time when update was last requested
        """
        return pulumi.get(self, "last_update_request_utc")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        """
        The status of the last operation.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> 'outputs.SystemDataResponse':
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="deviceId")
    def device_id(self) -> Optional[str]:
        """
        Device ID
        """
        return pulumi.get(self, "device_id")


@pulumi.output_type
class ImageResponse(dict):
    """
    An image resource belonging to a catalog resource.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "componentId":
            suggest = "component_id"
        elif key == "imageName":
            suggest = "image_name"
        elif key == "imageType":
            suggest = "image_type"
        elif key == "provisioningState":
            suggest = "provisioning_state"
        elif key == "systemData":
            suggest = "system_data"
        elif key == "imageId":
            suggest = "image_id"
        elif key == "regionalDataBoundary":
            suggest = "regional_data_boundary"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ImageResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ImageResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ImageResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 component_id: str,
                 description: str,
                 id: str,
                 image_name: str,
                 image_type: str,
                 name: str,
                 provisioning_state: str,
                 system_data: 'outputs.SystemDataResponse',
                 type: str,
                 uri: str,
                 image: Optional[str] = None,
                 image_id: Optional[str] = None,
                 regional_data_boundary: Optional[str] = None):
        """
        An image resource belonging to a catalog resource.
        :param str component_id: The image component id.
        :param str description: The image description.
        :param str id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        :param str image_name: Image name
        :param str image_type: The image type.
        :param str name: The name of the resource
        :param str provisioning_state: The status of the last operation.
        :param 'SystemDataResponse' system_data: Azure Resource Manager metadata containing createdBy and modifiedBy information.
        :param str type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        :param str uri: Location the image
        :param str image: Image as a UTF-8 encoded base 64 string on image create. This field contains the image URI on image reads.
        :param str image_id: Image ID
        :param str regional_data_boundary: Regional data boundary for an image
        """
        pulumi.set(__self__, "component_id", component_id)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "image_name", image_name)
        pulumi.set(__self__, "image_type", image_type)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        pulumi.set(__self__, "system_data", system_data)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "uri", uri)
        if image is not None:
            pulumi.set(__self__, "image", image)
        if image_id is not None:
            pulumi.set(__self__, "image_id", image_id)
        if regional_data_boundary is not None:
            pulumi.set(__self__, "regional_data_boundary", regional_data_boundary)

    @property
    @pulumi.getter(name="componentId")
    def component_id(self) -> str:
        """
        The image component id.
        """
        return pulumi.get(self, "component_id")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The image description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="imageName")
    def image_name(self) -> str:
        """
        Image name
        """
        return pulumi.get(self, "image_name")

    @property
    @pulumi.getter(name="imageType")
    def image_type(self) -> str:
        """
        The image type.
        """
        return pulumi.get(self, "image_type")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        """
        The status of the last operation.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> 'outputs.SystemDataResponse':
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def uri(self) -> str:
        """
        Location the image
        """
        return pulumi.get(self, "uri")

    @property
    @pulumi.getter
    def image(self) -> Optional[str]:
        """
        Image as a UTF-8 encoded base 64 string on image create. This field contains the image URI on image reads.
        """
        return pulumi.get(self, "image")

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> Optional[str]:
        """
        Image ID
        """
        return pulumi.get(self, "image_id")

    @property
    @pulumi.getter(name="regionalDataBoundary")
    def regional_data_boundary(self) -> Optional[str]:
        """
        Regional data boundary for an image
        """
        return pulumi.get(self, "regional_data_boundary")


@pulumi.output_type
class SystemDataResponse(dict):
    """
    Metadata pertaining to creation and last modification of the resource.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "createdAt":
            suggest = "created_at"
        elif key == "createdBy":
            suggest = "created_by"
        elif key == "createdByType":
            suggest = "created_by_type"
        elif key == "lastModifiedAt":
            suggest = "last_modified_at"
        elif key == "lastModifiedBy":
            suggest = "last_modified_by"
        elif key == "lastModifiedByType":
            suggest = "last_modified_by_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in SystemDataResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 created_at: Optional[str] = None,
                 created_by: Optional[str] = None,
                 created_by_type: Optional[str] = None,
                 last_modified_at: Optional[str] = None,
                 last_modified_by: Optional[str] = None,
                 last_modified_by_type: Optional[str] = None):
        """
        Metadata pertaining to creation and last modification of the resource.
        :param str created_at: The timestamp of resource creation (UTC).
        :param str created_by: The identity that created the resource.
        :param str created_by_type: The type of identity that created the resource.
        :param str last_modified_at: The timestamp of resource last modification (UTC)
        :param str last_modified_by: The identity that last modified the resource.
        :param str last_modified_by_type: The type of identity that last modified the resource.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if created_by_type is not None:
            pulumi.set(__self__, "created_by_type", created_by_type)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by is not None:
            pulumi.set(__self__, "last_modified_by", last_modified_by)
        if last_modified_by_type is not None:
            pulumi.set(__self__, "last_modified_by_type", last_modified_by_type)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[str]:
        """
        The timestamp of resource creation (UTC).
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[str]:
        """
        The identity that created the resource.
        """
        return pulumi.get(self, "created_by")

    @property
    @pulumi.getter(name="createdByType")
    def created_by_type(self) -> Optional[str]:
        """
        The type of identity that created the resource.
        """
        return pulumi.get(self, "created_by_type")

    @property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[str]:
        """
        The timestamp of resource last modification (UTC)
        """
        return pulumi.get(self, "last_modified_at")

    @property
    @pulumi.getter(name="lastModifiedBy")
    def last_modified_by(self) -> Optional[str]:
        """
        The identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by")

    @property
    @pulumi.getter(name="lastModifiedByType")
    def last_modified_by_type(self) -> Optional[str]:
        """
        The type of identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by_type")


