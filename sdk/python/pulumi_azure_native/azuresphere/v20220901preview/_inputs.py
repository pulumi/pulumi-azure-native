# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from ._enums import *

__all__ = [
    'ImageArgs',
]

@pulumi.input_type
class ImageArgs:
    def __init__(__self__, *,
                 image: Optional[pulumi.Input[str]] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 regional_data_boundary: Optional[pulumi.Input[Union[str, 'RegionalDataBoundary']]] = None):
        """
        An image resource belonging to a catalog resource.
        :param pulumi.Input[str] image: Image as a UTF-8 encoded base 64 string on image create. This field contains the image URI on image reads.
        :param pulumi.Input[str] image_id: Image ID
        :param pulumi.Input[Union[str, 'RegionalDataBoundary']] regional_data_boundary: Regional data boundary for an image
        """
        ImageArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            image=image,
            image_id=image_id,
            regional_data_boundary=regional_data_boundary,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             image: Optional[pulumi.Input[str]] = None,
             image_id: Optional[pulumi.Input[str]] = None,
             regional_data_boundary: Optional[pulumi.Input[Union[str, 'RegionalDataBoundary']]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if image is not None:
            _setter("image", image)
        if image_id is not None:
            _setter("image_id", image_id)
        if regional_data_boundary is not None:
            _setter("regional_data_boundary", regional_data_boundary)

    @property
    @pulumi.getter
    def image(self) -> Optional[pulumi.Input[str]]:
        """
        Image as a UTF-8 encoded base 64 string on image create. This field contains the image URI on image reads.
        """
        return pulumi.get(self, "image")

    @image.setter
    def image(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "image", value)

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> Optional[pulumi.Input[str]]:
        """
        Image ID
        """
        return pulumi.get(self, "image_id")

    @image_id.setter
    def image_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "image_id", value)

    @property
    @pulumi.getter(name="regionalDataBoundary")
    def regional_data_boundary(self) -> Optional[pulumi.Input[Union[str, 'RegionalDataBoundary']]]:
        """
        Regional data boundary for an image
        """
        return pulumi.get(self, "regional_data_boundary")

    @regional_data_boundary.setter
    def regional_data_boundary(self, value: Optional[pulumi.Input[Union[str, 'RegionalDataBoundary']]]):
        pulumi.set(self, "regional_data_boundary", value)


