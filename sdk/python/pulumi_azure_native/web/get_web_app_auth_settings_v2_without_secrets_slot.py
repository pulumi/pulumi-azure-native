# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetWebAppAuthSettingsV2WithoutSecretsSlotResult',
    'AwaitableGetWebAppAuthSettingsV2WithoutSecretsSlotResult',
    'get_web_app_auth_settings_v2_without_secrets_slot',
    'get_web_app_auth_settings_v2_without_secrets_slot_output',
]

@pulumi.output_type
class GetWebAppAuthSettingsV2WithoutSecretsSlotResult:
    """
    Configuration settings for the Azure App Service Authentication / Authorization V2 feature.
    """
    def __init__(__self__, azure_api_version=None, global_validation=None, http_settings=None, id=None, identity_providers=None, kind=None, login=None, name=None, platform=None, type=None):
        if azure_api_version and not isinstance(azure_api_version, str):
            raise TypeError("Expected argument 'azure_api_version' to be a str")
        pulumi.set(__self__, "azure_api_version", azure_api_version)
        if global_validation and not isinstance(global_validation, dict):
            raise TypeError("Expected argument 'global_validation' to be a dict")
        pulumi.set(__self__, "global_validation", global_validation)
        if http_settings and not isinstance(http_settings, dict):
            raise TypeError("Expected argument 'http_settings' to be a dict")
        pulumi.set(__self__, "http_settings", http_settings)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if identity_providers and not isinstance(identity_providers, dict):
            raise TypeError("Expected argument 'identity_providers' to be a dict")
        pulumi.set(__self__, "identity_providers", identity_providers)
        if kind and not isinstance(kind, str):
            raise TypeError("Expected argument 'kind' to be a str")
        pulumi.set(__self__, "kind", kind)
        if login and not isinstance(login, dict):
            raise TypeError("Expected argument 'login' to be a dict")
        pulumi.set(__self__, "login", login)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if platform and not isinstance(platform, dict):
            raise TypeError("Expected argument 'platform' to be a dict")
        pulumi.set(__self__, "platform", platform)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="azureApiVersion")
    def azure_api_version(self) -> builtins.str:
        """
        The Azure API version of the resource.
        """
        return pulumi.get(self, "azure_api_version")

    @property
    @pulumi.getter(name="globalValidation")
    def global_validation(self) -> Optional['outputs.GlobalValidationResponse']:
        """
        The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.
        """
        return pulumi.get(self, "global_validation")

    @property
    @pulumi.getter(name="httpSettings")
    def http_settings(self) -> Optional['outputs.HttpSettingsResponse']:
        """
        The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.
        """
        return pulumi.get(self, "http_settings")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        Resource Id.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="identityProviders")
    def identity_providers(self) -> Optional['outputs.IdentityProvidersResponse']:
        """
        The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.
        """
        return pulumi.get(self, "identity_providers")

    @property
    @pulumi.getter
    def kind(self) -> Optional[builtins.str]:
        """
        Kind of resource.
        """
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter
    def login(self) -> Optional['outputs.LoginResponse']:
        """
        The configuration settings of the login flow of users using App Service Authentication/Authorization.
        """
        return pulumi.get(self, "login")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        """
        Resource Name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def platform(self) -> Optional['outputs.AuthPlatformResponse']:
        """
        The configuration settings of the platform of App Service Authentication/Authorization.
        """
        return pulumi.get(self, "platform")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        Resource type.
        """
        return pulumi.get(self, "type")


class AwaitableGetWebAppAuthSettingsV2WithoutSecretsSlotResult(GetWebAppAuthSettingsV2WithoutSecretsSlotResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWebAppAuthSettingsV2WithoutSecretsSlotResult(
            azure_api_version=self.azure_api_version,
            global_validation=self.global_validation,
            http_settings=self.http_settings,
            id=self.id,
            identity_providers=self.identity_providers,
            kind=self.kind,
            login=self.login,
            name=self.name,
            platform=self.platform,
            type=self.type)


def get_web_app_auth_settings_v2_without_secrets_slot(name: Optional[builtins.str] = None,
                                                      resource_group_name: Optional[builtins.str] = None,
                                                      slot: Optional[builtins.str] = None,
                                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWebAppAuthSettingsV2WithoutSecretsSlotResult:
    """
    Configuration settings for the Azure App Service Authentication / Authorization V2 feature.

    Uses Azure REST API version 2024-04-01.

    Other available API versions: 2021-03-01, 2022-03-01, 2022-09-01, 2023-01-01, 2023-12-01, 2024-11-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.


    :param builtins.str name: Name of the app.
    :param builtins.str resource_group_name: Name of the resource group to which the resource belongs.
    :param builtins.str slot: Name of the deployment slot. If a slot is not specified, the API will get the settings for the production slot.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['slot'] = slot
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:web:getWebAppAuthSettingsV2WithoutSecretsSlot', __args__, opts=opts, typ=GetWebAppAuthSettingsV2WithoutSecretsSlotResult).value

    return AwaitableGetWebAppAuthSettingsV2WithoutSecretsSlotResult(
        azure_api_version=pulumi.get(__ret__, 'azure_api_version'),
        global_validation=pulumi.get(__ret__, 'global_validation'),
        http_settings=pulumi.get(__ret__, 'http_settings'),
        id=pulumi.get(__ret__, 'id'),
        identity_providers=pulumi.get(__ret__, 'identity_providers'),
        kind=pulumi.get(__ret__, 'kind'),
        login=pulumi.get(__ret__, 'login'),
        name=pulumi.get(__ret__, 'name'),
        platform=pulumi.get(__ret__, 'platform'),
        type=pulumi.get(__ret__, 'type'))
def get_web_app_auth_settings_v2_without_secrets_slot_output(name: Optional[pulumi.Input[builtins.str]] = None,
                                                             resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                                                             slot: Optional[pulumi.Input[builtins.str]] = None,
                                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetWebAppAuthSettingsV2WithoutSecretsSlotResult]:
    """
    Configuration settings for the Azure App Service Authentication / Authorization V2 feature.

    Uses Azure REST API version 2024-04-01.

    Other available API versions: 2021-03-01, 2022-03-01, 2022-09-01, 2023-01-01, 2023-12-01, 2024-11-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.


    :param builtins.str name: Name of the app.
    :param builtins.str resource_group_name: Name of the resource group to which the resource belongs.
    :param builtins.str slot: Name of the deployment slot. If a slot is not specified, the API will get the settings for the production slot.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['slot'] = slot
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:web:getWebAppAuthSettingsV2WithoutSecretsSlot', __args__, opts=opts, typ=GetWebAppAuthSettingsV2WithoutSecretsSlotResult)
    return __ret__.apply(lambda __response__: GetWebAppAuthSettingsV2WithoutSecretsSlotResult(
        azure_api_version=pulumi.get(__response__, 'azure_api_version'),
        global_validation=pulumi.get(__response__, 'global_validation'),
        http_settings=pulumi.get(__response__, 'http_settings'),
        id=pulumi.get(__response__, 'id'),
        identity_providers=pulumi.get(__response__, 'identity_providers'),
        kind=pulumi.get(__response__, 'kind'),
        login=pulumi.get(__response__, 'login'),
        name=pulumi.get(__response__, 'name'),
        platform=pulumi.get(__response__, 'platform'),
        type=pulumi.get(__response__, 'type')))
