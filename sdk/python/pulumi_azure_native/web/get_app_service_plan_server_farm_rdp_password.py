# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAppServicePlanServerFarmRdpPasswordResult',
    'AwaitableGetAppServicePlanServerFarmRdpPasswordResult',
    'get_app_service_plan_server_farm_rdp_password',
    'get_app_service_plan_server_farm_rdp_password_output',
]

@pulumi.output_type
class GetAppServicePlanServerFarmRdpPasswordResult:
    """
    Server Farm RDP connection details.
    """
    def __init__(__self__, rdp_password=None, rdp_password_expiry=None):
        if rdp_password and not isinstance(rdp_password, str):
            raise TypeError("Expected argument 'rdp_password' to be a str")
        pulumi.set(__self__, "rdp_password", rdp_password)
        if rdp_password_expiry and not isinstance(rdp_password_expiry, str):
            raise TypeError("Expected argument 'rdp_password_expiry' to be a str")
        pulumi.set(__self__, "rdp_password_expiry", rdp_password_expiry)

    @property
    @pulumi.getter(name="rdpPassword")
    def rdp_password(self) -> Optional[builtins.str]:
        """
        The RDP password for the server farm.
        """
        return pulumi.get(self, "rdp_password")

    @property
    @pulumi.getter(name="rdpPasswordExpiry")
    def rdp_password_expiry(self) -> Optional[builtins.str]:
        """
        The RDP password expiry date.
        """
        return pulumi.get(self, "rdp_password_expiry")


class AwaitableGetAppServicePlanServerFarmRdpPasswordResult(GetAppServicePlanServerFarmRdpPasswordResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAppServicePlanServerFarmRdpPasswordResult(
            rdp_password=self.rdp_password,
            rdp_password_expiry=self.rdp_password_expiry)


def get_app_service_plan_server_farm_rdp_password(name: Optional[builtins.str] = None,
                                                  resource_group_name: Optional[builtins.str] = None,
                                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAppServicePlanServerFarmRdpPasswordResult:
    """
    Description for Get the RDP password for an IsCustomMode ServerFarm.

    Uses Azure REST API version 2025-03-01.


    :param builtins.str name: Name of the App Service plan.
    :param builtins.str resource_group_name: Name of the resource group to which the resource belongs.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:web:getAppServicePlanServerFarmRdpPassword', __args__, opts=opts, typ=GetAppServicePlanServerFarmRdpPasswordResult).value

    return AwaitableGetAppServicePlanServerFarmRdpPasswordResult(
        rdp_password=pulumi.get(__ret__, 'rdp_password'),
        rdp_password_expiry=pulumi.get(__ret__, 'rdp_password_expiry'))
def get_app_service_plan_server_farm_rdp_password_output(name: Optional[pulumi.Input[builtins.str]] = None,
                                                         resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAppServicePlanServerFarmRdpPasswordResult]:
    """
    Description for Get the RDP password for an IsCustomMode ServerFarm.

    Uses Azure REST API version 2025-03-01.


    :param builtins.str name: Name of the App Service plan.
    :param builtins.str resource_group_name: Name of the resource group to which the resource belongs.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:web:getAppServicePlanServerFarmRdpPassword', __args__, opts=opts, typ=GetAppServicePlanServerFarmRdpPasswordResult)
    return __ret__.apply(lambda __response__: GetAppServicePlanServerFarmRdpPasswordResult(
        rdp_password=pulumi.get(__response__, 'rdp_password'),
        rdp_password_expiry=pulumi.get(__response__, 'rdp_password_expiry')))
