# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs

__all__ = [
    'GetWCFRelayAuthorizationRuleResult',
    'AwaitableGetWCFRelayAuthorizationRuleResult',
    'get_wcf_relay_authorization_rule',
    'get_wcf_relay_authorization_rule_output',
]

warnings.warn("""Version 2016-07-01 will be removed in v2 of the provider.""", DeprecationWarning)

@pulumi.output_type
class GetWCFRelayAuthorizationRuleResult:
    """
    Description of a Namespace AuthorizationRules.
    """
    def __init__(__self__, id=None, name=None, properties=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if properties and not isinstance(properties, dict):
            raise TypeError("Expected argument 'properties' to be a dict")
        pulumi.set(__self__, "properties", properties)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Resource Id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Resource name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def properties(self) -> 'outputs.AuthorizationRulePropertiesResponse':
        """
        Authorization Rule properties
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Resource type
        """
        return pulumi.get(self, "type")


class AwaitableGetWCFRelayAuthorizationRuleResult(GetWCFRelayAuthorizationRuleResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWCFRelayAuthorizationRuleResult(
            id=self.id,
            name=self.name,
            properties=self.properties,
            type=self.type)


def get_wcf_relay_authorization_rule(authorization_rule_name: Optional[str] = None,
                                     namespace_name: Optional[str] = None,
                                     relay_name: Optional[str] = None,
                                     resource_group_name: Optional[str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWCFRelayAuthorizationRuleResult:
    """
    Get authorizationRule for a WCFRelays by name.


    :param str authorization_rule_name: The authorizationRule name.
    :param str namespace_name: The Namespace Name
    :param str relay_name: The relay name
    :param str resource_group_name: Name of the Resource group within the Azure subscription.
    """
    pulumi.log.warn("""get_wcf_relay_authorization_rule is deprecated: Version 2016-07-01 will be removed in v2 of the provider.""")
    __args__ = dict()
    __args__['authorizationRuleName'] = authorization_rule_name
    __args__['namespaceName'] = namespace_name
    __args__['relayName'] = relay_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:relay/v20160701:getWCFRelayAuthorizationRule', __args__, opts=opts, typ=GetWCFRelayAuthorizationRuleResult).value

    return AwaitableGetWCFRelayAuthorizationRuleResult(
        id=__ret__.id,
        name=__ret__.name,
        properties=__ret__.properties,
        type=__ret__.type)


@_utilities.lift_output_func(get_wcf_relay_authorization_rule)
def get_wcf_relay_authorization_rule_output(authorization_rule_name: Optional[pulumi.Input[str]] = None,
                                            namespace_name: Optional[pulumi.Input[str]] = None,
                                            relay_name: Optional[pulumi.Input[str]] = None,
                                            resource_group_name: Optional[pulumi.Input[str]] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetWCFRelayAuthorizationRuleResult]:
    """
    Get authorizationRule for a WCFRelays by name.


    :param str authorization_rule_name: The authorizationRule name.
    :param str namespace_name: The Namespace Name
    :param str relay_name: The relay name
    :param str resource_group_name: Name of the Resource group within the Azure subscription.
    """
    pulumi.log.warn("""get_wcf_relay_authorization_rule is deprecated: Version 2016-07-01 will be removed in v2 of the provider.""")
    ...
