# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from ._enums import *

__all__ = [
    'AuthorizationRulePropertiesResponse',
    'SkuResponse',
]

@pulumi.output_type
class AuthorizationRulePropertiesResponse(dict):
    """
    AuthorizationRule properties.
    """
    def __init__(__self__, *,
                 rights: Sequence[str]):
        """
        AuthorizationRule properties.
        :param Sequence[str] rights: The rights associated with the rule.
        """
        pulumi.set(__self__, "rights", rights)

    @property
    @pulumi.getter
    def rights(self) -> Sequence[str]:
        """
        The rights associated with the rule.
        """
        return pulumi.get(self, "rights")


@pulumi.output_type
class SkuResponse(dict):
    """
    Sku of the Namespace.
    """
    def __init__(__self__, *,
                 name: str,
                 tier: str):
        """
        Sku of the Namespace.
        :param str name: Name of this Sku
        :param str tier: The tier of this particular SKU
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "tier", tier)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of this Sku
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def tier(self) -> str:
        """
        The tier of this particular SKU
        """
        return pulumi.get(self, "tier")


