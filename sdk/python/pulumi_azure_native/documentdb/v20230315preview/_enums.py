# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AnalyticalStorageSchemaType',
    'BackupPolicyMigrationStatus',
    'BackupPolicyType',
    'BackupStorageRedundancy',
    'CompositePathSortOrder',
    'ConflictResolutionMode',
    'ConnectorOffer',
    'ContinuousTier',
    'CreateMode',
    'DataType',
    'DatabaseAccountKind',
    'DatabaseAccountOfferType',
    'DefaultConsistencyLevel',
    'EnableFullTextQuery',
    'IndexKind',
    'IndexingMode',
    'MinimalTlsVersion',
    'NetworkAclBypass',
    'NodeKind',
    'PartitionKind',
    'PublicNetworkAccess',
    'ResourceIdentityType',
    'RestoreMode',
    'ServerVersion',
    'SpatialType',
    'TriggerOperation',
    'TriggerType',
]


class AnalyticalStorageSchemaType(str, Enum):
    """
    Describes the types of schema for analytical storage.
    """
    WELL_DEFINED = "WellDefined"
    FULL_FIDELITY = "FullFidelity"


class BackupPolicyMigrationStatus(str, Enum):
    """
    Describes the status of migration between backup policy types.
    """
    INVALID = "Invalid"
    IN_PROGRESS = "InProgress"
    COMPLETED = "Completed"
    FAILED = "Failed"


class BackupPolicyType(str, Enum):
    """
    Describes the mode of backups.
    """
    PERIODIC = "Periodic"
    CONTINUOUS = "Continuous"


class BackupStorageRedundancy(str, Enum):
    """
    Enum to indicate type of backup residency
    """
    GEO = "Geo"
    LOCAL = "Local"
    ZONE = "Zone"


class CompositePathSortOrder(str, Enum):
    """
    Sort order for composite paths.
    """
    ASCENDING = "ascending"
    DESCENDING = "descending"


class ConflictResolutionMode(str, Enum):
    """
    Indicates the conflict resolution mode.
    """
    LAST_WRITER_WINS = "LastWriterWins"
    CUSTOM = "Custom"


class ConnectorOffer(str, Enum):
    """
    The cassandra connector offer type for the Cosmos DB database C* account.
    """
    SMALL = "Small"


class ContinuousTier(str, Enum):
    """
    Enum to indicate type of Continuos backup mode
    """
    CONTINUOUS7_DAYS = "Continuous7Days"
    CONTINUOUS30_DAYS = "Continuous30Days"


class CreateMode(str, Enum):
    """
    Enum to indicate the mode of resource creation.
    """
    DEFAULT = "Default"
    RESTORE = "Restore"


class DataType(str, Enum):
    """
    The datatype for which the indexing behavior is applied to.
    """
    STRING = "String"
    NUMBER = "Number"
    POINT = "Point"
    POLYGON = "Polygon"
    LINE_STRING = "LineString"
    MULTI_POLYGON = "MultiPolygon"


class DatabaseAccountKind(str, Enum):
    """
    Indicates the type of database account. This can only be set at database account creation.
    """
    GLOBAL_DOCUMENT_DB = "GlobalDocumentDB"
    MONGO_DB = "MongoDB"
    PARSE = "Parse"


class DatabaseAccountOfferType(str, Enum):
    """
    The offer type for the database
    """
    STANDARD = "Standard"


class DefaultConsistencyLevel(str, Enum):
    """
    The default consistency level and configuration settings of the Cosmos DB account.
    """
    EVENTUAL = "Eventual"
    SESSION = "Session"
    BOUNDED_STALENESS = "BoundedStaleness"
    STRONG = "Strong"
    CONSISTENT_PREFIX = "ConsistentPrefix"


class EnableFullTextQuery(str, Enum):
    """
    Describe the level of detail with which queries are to be logged.
    """
    NONE = "None"
    TRUE = "True"
    FALSE = "False"


class IndexKind(str, Enum):
    """
    Indicates the type of index.
    """
    HASH = "Hash"
    RANGE = "Range"
    SPATIAL = "Spatial"


class IndexingMode(str, Enum):
    """
    Indicates the indexing mode.
    """
    CONSISTENT = "consistent"
    LAZY = "lazy"
    NONE = "none"


class MinimalTlsVersion(str, Enum):
    """
    Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2.
    """
    TLS = "Tls"
    TLS11 = "Tls11"
    TLS12 = "Tls12"


class NetworkAclBypass(str, Enum):
    """
    Indicates what services are allowed to bypass firewall checks.
    """
    NONE = "None"
    AZURE_SERVICES = "AzureServices"


class NodeKind(str, Enum):
    """
    The node type deployed in the node group.
    """
    SHARD = "Shard"


class PartitionKind(str, Enum):
    """
    Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
    """
    HASH = "Hash"
    RANGE = "Range"
    MULTI_HASH = "MultiHash"


class PublicNetworkAccess(str, Enum):
    """
    Whether requests from Public Network are allowed
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class ResourceIdentityType(str, Enum):
    """
    The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
    """
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"
    NONE = "None"


class RestoreMode(str, Enum):
    """
    Describes the mode of the restore.
    """
    POINT_IN_TIME = "PointInTime"


class ServerVersion(str, Enum):
    """
    Describes the ServerVersion of an a MongoDB account.
    """
    SERVER_VERSION_3_2 = "3.2"
    SERVER_VERSION_3_6 = "3.6"
    SERVER_VERSION_4_0 = "4.0"
    SERVER_VERSION_4_2 = "4.2"


class SpatialType(str, Enum):
    """
    Indicates the spatial type of index.
    """
    POINT = "Point"
    LINE_STRING = "LineString"
    POLYGON = "Polygon"
    MULTI_POLYGON = "MultiPolygon"


class TriggerOperation(str, Enum):
    """
    The operation the trigger is associated with
    """
    ALL = "All"
    CREATE = "Create"
    UPDATE = "Update"
    DELETE = "Delete"
    REPLACE = "Replace"


class TriggerType(str, Enum):
    """
    Type of the Trigger
    """
    PRE = "Pre"
    POST = "Post"
