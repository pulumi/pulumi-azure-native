# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs

__all__ = [
    'ListSqlMigrationServiceMonitoringDataResult',
    'AwaitableListSqlMigrationServiceMonitoringDataResult',
    'list_sql_migration_service_monitoring_data',
    'list_sql_migration_service_monitoring_data_output',
]

@pulumi.output_type
class ListSqlMigrationServiceMonitoringDataResult:
    """
    Integration Runtime Monitoring Data.
    """
    def __init__(__self__, name=None, nodes=None):
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if nodes and not isinstance(nodes, list):
            raise TypeError("Expected argument 'nodes' to be a list")
        pulumi.set(__self__, "nodes", nodes)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of Integration Runtime.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def nodes(self) -> Sequence['outputs.NodeMonitoringDataResponse']:
        """
        Integration Runtime node monitoring data.
        """
        return pulumi.get(self, "nodes")


class AwaitableListSqlMigrationServiceMonitoringDataResult(ListSqlMigrationServiceMonitoringDataResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListSqlMigrationServiceMonitoringDataResult(
            name=self.name,
            nodes=self.nodes)


def list_sql_migration_service_monitoring_data(resource_group_name: Optional[str] = None,
                                               sql_migration_service_name: Optional[str] = None,
                                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListSqlMigrationServiceMonitoringDataResult:
    """
    Integration Runtime Monitoring Data.


    :param str resource_group_name: Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
    :param str sql_migration_service_name: Name of the SQL Migration Service.
    """
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['sqlMigrationServiceName'] = sql_migration_service_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-native:datamigration/v20211030preview:listSqlMigrationServiceMonitoringData', __args__, opts=opts, typ=ListSqlMigrationServiceMonitoringDataResult).value

    return AwaitableListSqlMigrationServiceMonitoringDataResult(
        name=__ret__.name,
        nodes=__ret__.nodes)


@_utilities.lift_output_func(list_sql_migration_service_monitoring_data)
def list_sql_migration_service_monitoring_data_output(resource_group_name: Optional[pulumi.Input[str]] = None,
                                                      sql_migration_service_name: Optional[pulumi.Input[str]] = None,
                                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ListSqlMigrationServiceMonitoringDataResult]:
    """
    Integration Runtime Monitoring Data.


    :param str resource_group_name: Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
    :param str sql_migration_service_name: Name of the SQL Migration Service.
    """
    ...
