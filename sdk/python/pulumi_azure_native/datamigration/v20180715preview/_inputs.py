# coding=utf-8
# *** WARNING: this file was generated by pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'ProjectFilePropertiesArgs',
]

@pulumi.input_type
class ProjectFilePropertiesArgs:
    def __init__(__self__, *,
                 extension: Optional[pulumi.Input[str]] = None,
                 file_path: Optional[pulumi.Input[str]] = None,
                 media_type: Optional[pulumi.Input[str]] = None):
        """
        Base class for file properties.
        :param pulumi.Input[str] extension: Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.
        :param pulumi.Input[str] file_path: Relative path of this file resource. This property can be set when creating or updating the file resource.
        :param pulumi.Input[str] media_type: File content type. This property can be modified to reflect the file content type.
        """
        if extension is not None:
            pulumi.set(__self__, "extension", extension)
        if file_path is not None:
            pulumi.set(__self__, "file_path", file_path)
        if media_type is not None:
            pulumi.set(__self__, "media_type", media_type)

    @property
    @pulumi.getter
    def extension(self) -> Optional[pulumi.Input[str]]:
        """
        Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.
        """
        return pulumi.get(self, "extension")

    @extension.setter
    def extension(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "extension", value)

    @property
    @pulumi.getter(name="filePath")
    def file_path(self) -> Optional[pulumi.Input[str]]:
        """
        Relative path of this file resource. This property can be set when creating or updating the file resource.
        """
        return pulumi.get(self, "file_path")

    @file_path.setter
    def file_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "file_path", value)

    @property
    @pulumi.getter(name="mediaType")
    def media_type(self) -> Optional[pulumi.Input[str]]:
        """
        File content type. This property can be modified to reflect the file content type.
        """
        return pulumi.get(self, "media_type")

    @media_type.setter
    def media_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "media_type", value)


