# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetCustomerSubscriptionResult',
    'AwaitableGetCustomerSubscriptionResult',
    'get_customer_subscription',
    'get_customer_subscription_output',
]

@pulumi.output_type
class GetCustomerSubscriptionResult:
    """
    Customer subscription.
    """
    def __init__(__self__, azure_api_version=None, etag=None, id=None, name=None, tenant_id=None, type=None):
        if azure_api_version and not isinstance(azure_api_version, str):
            raise TypeError("Expected argument 'azure_api_version' to be a str")
        pulumi.set(__self__, "azure_api_version", azure_api_version)
        if etag and not isinstance(etag, str):
            raise TypeError("Expected argument 'etag' to be a str")
        pulumi.set(__self__, "etag", etag)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if tenant_id and not isinstance(tenant_id, str):
            raise TypeError("Expected argument 'tenant_id' to be a str")
        pulumi.set(__self__, "tenant_id", tenant_id)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter(name="azureApiVersion")
    def azure_api_version(self) -> _builtins.str:
        """
        The Azure API version of the resource.
        """
        return pulumi.get(self, "azure_api_version")

    @_builtins.property
    @pulumi.getter
    def etag(self) -> Optional[_builtins.str]:
        """
        The entity tag used for optimistic concurrency when modifying the resource.
        """
        return pulumi.get(self, "etag")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        ID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Name of the resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[_builtins.str]:
        """
        Tenant Id.
        """
        return pulumi.get(self, "tenant_id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        Type of Resource.
        """
        return pulumi.get(self, "type")


class AwaitableGetCustomerSubscriptionResult(GetCustomerSubscriptionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCustomerSubscriptionResult(
            azure_api_version=self.azure_api_version,
            etag=self.etag,
            id=self.id,
            name=self.name,
            tenant_id=self.tenant_id,
            type=self.type)


def get_customer_subscription(customer_subscription_name: Optional[_builtins.str] = None,
                              registration_name: Optional[_builtins.str] = None,
                              resource_group: Optional[_builtins.str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCustomerSubscriptionResult:
    """
    Returns the specified product.

    Uses Azure REST API version 2022-06-01.

    Other available API versions: 2020-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native azurestack [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.


    :param _builtins.str customer_subscription_name: Name of the product.
    :param _builtins.str registration_name: Name of the Azure Stack registration.
    :param _builtins.str resource_group: Name of the resource group.
    """
    __args__ = dict()
    __args__['customerSubscriptionName'] = customer_subscription_name
    __args__['registrationName'] = registration_name
    __args__['resourceGroup'] = resource_group
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:azurestack:getCustomerSubscription', __args__, opts=opts, typ=GetCustomerSubscriptionResult).value

    return AwaitableGetCustomerSubscriptionResult(
        azure_api_version=pulumi.get(__ret__, 'azure_api_version'),
        etag=pulumi.get(__ret__, 'etag'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        tenant_id=pulumi.get(__ret__, 'tenant_id'),
        type=pulumi.get(__ret__, 'type'))
def get_customer_subscription_output(customer_subscription_name: Optional[pulumi.Input[_builtins.str]] = None,
                                     registration_name: Optional[pulumi.Input[_builtins.str]] = None,
                                     resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCustomerSubscriptionResult]:
    """
    Returns the specified product.

    Uses Azure REST API version 2022-06-01.

    Other available API versions: 2020-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native azurestack [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.


    :param _builtins.str customer_subscription_name: Name of the product.
    :param _builtins.str registration_name: Name of the Azure Stack registration.
    :param _builtins.str resource_group: Name of the resource group.
    """
    __args__ = dict()
    __args__['customerSubscriptionName'] = customer_subscription_name
    __args__['registrationName'] = registration_name
    __args__['resourceGroup'] = resource_group
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:azurestack:getCustomerSubscription', __args__, opts=opts, typ=GetCustomerSubscriptionResult)
    return __ret__.apply(lambda __response__: GetCustomerSubscriptionResult(
        azure_api_version=pulumi.get(__response__, 'azure_api_version'),
        etag=pulumi.get(__response__, 'etag'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        tenant_id=pulumi.get(__response__, 'tenant_id'),
        type=pulumi.get(__response__, 'type')))
