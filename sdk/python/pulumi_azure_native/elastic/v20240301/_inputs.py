# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities

__all__ = [
    'OpenAIIntegrationPropertiesArgs',
    'OpenAIIntegrationPropertiesArgsDict',
]

MYPY = False

if not MYPY:
    class OpenAIIntegrationPropertiesArgsDict(TypedDict):
        """
        Open AI Integration details.
        """
        key: NotRequired[pulumi.Input[str]]
        """
        Value of API key for Open AI resource
        """
        open_ai_resource_endpoint: NotRequired[pulumi.Input[str]]
        """
        The API endpoint for Open AI resource
        """
        open_ai_resource_id: NotRequired[pulumi.Input[str]]
        """
        The resource name of Open AI resource
        """
elif False:
    OpenAIIntegrationPropertiesArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class OpenAIIntegrationPropertiesArgs:
    def __init__(__self__, *,
                 key: Optional[pulumi.Input[str]] = None,
                 open_ai_resource_endpoint: Optional[pulumi.Input[str]] = None,
                 open_ai_resource_id: Optional[pulumi.Input[str]] = None):
        """
        Open AI Integration details.
        :param pulumi.Input[str] key: Value of API key for Open AI resource
        :param pulumi.Input[str] open_ai_resource_endpoint: The API endpoint for Open AI resource
        :param pulumi.Input[str] open_ai_resource_id: The resource name of Open AI resource
        """
        if key is not None:
            pulumi.set(__self__, "key", key)
        if open_ai_resource_endpoint is not None:
            pulumi.set(__self__, "open_ai_resource_endpoint", open_ai_resource_endpoint)
        if open_ai_resource_id is not None:
            pulumi.set(__self__, "open_ai_resource_id", open_ai_resource_id)

    @property
    @pulumi.getter
    def key(self) -> Optional[pulumi.Input[str]]:
        """
        Value of API key for Open AI resource
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter(name="openAIResourceEndpoint")
    def open_ai_resource_endpoint(self) -> Optional[pulumi.Input[str]]:
        """
        The API endpoint for Open AI resource
        """
        return pulumi.get(self, "open_ai_resource_endpoint")

    @open_ai_resource_endpoint.setter
    def open_ai_resource_endpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "open_ai_resource_endpoint", value)

    @property
    @pulumi.getter(name="openAIResourceId")
    def open_ai_resource_id(self) -> Optional[pulumi.Input[str]]:
        """
        The resource name of Open AI resource
        """
        return pulumi.get(self, "open_ai_resource_id")

    @open_ai_resource_id.setter
    def open_ai_resource_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "open_ai_resource_id", value)


