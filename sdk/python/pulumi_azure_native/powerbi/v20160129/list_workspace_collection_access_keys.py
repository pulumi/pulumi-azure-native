# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'ListWorkspaceCollectionAccessKeysResult',
    'AwaitableListWorkspaceCollectionAccessKeysResult',
    'list_workspace_collection_access_keys',
]

@pulumi.output_type
class ListWorkspaceCollectionAccessKeysResult:
    def __init__(__self__, key1=None, key2=None):
        if key1 and not isinstance(key1, str):
            raise TypeError("Expected argument 'key1' to be a str")
        pulumi.set(__self__, "key1", key1)
        if key2 and not isinstance(key2, str):
            raise TypeError("Expected argument 'key2' to be a str")
        pulumi.set(__self__, "key2", key2)

    @property
    @pulumi.getter
    def key1(self) -> Optional[str]:
        """
        Access key 1
        """
        return pulumi.get(self, "key1")

    @property
    @pulumi.getter
    def key2(self) -> Optional[str]:
        """
        Access key 2
        """
        return pulumi.get(self, "key2")


class AwaitableListWorkspaceCollectionAccessKeysResult(ListWorkspaceCollectionAccessKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListWorkspaceCollectionAccessKeysResult(
            key1=self.key1,
            key2=self.key2)


def list_workspace_collection_access_keys(resource_group_name: Optional[str] = None,
                                          workspace_collection_name: Optional[str] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListWorkspaceCollectionAccessKeysResult:
    """
    Use this data source to access information about an existing resource.

    :param str resource_group_name: Azure resource group
    :param str workspace_collection_name: Power BI Embedded Workspace Collection name
    """
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['workspaceCollectionName'] = workspace_collection_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-native:powerbi/v20160129:listWorkspaceCollectionAccessKeys', __args__, opts=opts, typ=ListWorkspaceCollectionAccessKeysResult).value

    return AwaitableListWorkspaceCollectionAccessKeysResult(
        key1=__ret__.key1,
        key2=__ret__.key2)
