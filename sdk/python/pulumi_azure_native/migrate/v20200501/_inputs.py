# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from ._enums import *

__all__ = [
    'ConnectionStateRequestBodyPropertiesArgs',
    'MigrateProjectPropertiesArgs',
    'PrivateLinkServiceConnectionStateArgs',
]

@pulumi.input_type
class ConnectionStateRequestBodyPropertiesArgs:
    def __init__(__self__, *,
                 private_link_service_connection_state: Optional[pulumi.Input['PrivateLinkServiceConnectionStateArgs']] = None):
        """
        Properties of Connection state request.
        :param pulumi.Input['PrivateLinkServiceConnectionStateArgs'] private_link_service_connection_state: Private endpoint connection state.
        """
        ConnectionStateRequestBodyPropertiesArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            private_link_service_connection_state=private_link_service_connection_state,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             private_link_service_connection_state: Optional[pulumi.Input['PrivateLinkServiceConnectionStateArgs']] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if private_link_service_connection_state is not None:
            _setter("private_link_service_connection_state", private_link_service_connection_state)

    @property
    @pulumi.getter(name="privateLinkServiceConnectionState")
    def private_link_service_connection_state(self) -> Optional[pulumi.Input['PrivateLinkServiceConnectionStateArgs']]:
        """
        Private endpoint connection state.
        """
        return pulumi.get(self, "private_link_service_connection_state")

    @private_link_service_connection_state.setter
    def private_link_service_connection_state(self, value: Optional[pulumi.Input['PrivateLinkServiceConnectionStateArgs']]):
        pulumi.set(self, "private_link_service_connection_state", value)


@pulumi.input_type
class MigrateProjectPropertiesArgs:
    def __init__(__self__, *,
                 public_network_access: Optional[pulumi.Input[str]] = None,
                 service_endpoint: Optional[pulumi.Input[str]] = None,
                 utility_storage_account_id: Optional[pulumi.Input[str]] = None):
        """
        Properties of a migrate project.
        :param pulumi.Input[str] public_network_access: Gets or sets the state of public network access.
        :param pulumi.Input[str] service_endpoint: Service endpoint.
        :param pulumi.Input[str] utility_storage_account_id: Utility storage account id.
        """
        MigrateProjectPropertiesArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            public_network_access=public_network_access,
            service_endpoint=service_endpoint,
            utility_storage_account_id=utility_storage_account_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             public_network_access: Optional[pulumi.Input[str]] = None,
             service_endpoint: Optional[pulumi.Input[str]] = None,
             utility_storage_account_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if public_network_access is not None:
            _setter("public_network_access", public_network_access)
        if service_endpoint is not None:
            _setter("service_endpoint", service_endpoint)
        if utility_storage_account_id is not None:
            _setter("utility_storage_account_id", utility_storage_account_id)

    @property
    @pulumi.getter(name="publicNetworkAccess")
    def public_network_access(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the state of public network access.
        """
        return pulumi.get(self, "public_network_access")

    @public_network_access.setter
    def public_network_access(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_network_access", value)

    @property
    @pulumi.getter(name="serviceEndpoint")
    def service_endpoint(self) -> Optional[pulumi.Input[str]]:
        """
        Service endpoint.
        """
        return pulumi.get(self, "service_endpoint")

    @service_endpoint.setter
    def service_endpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_endpoint", value)

    @property
    @pulumi.getter(name="utilityStorageAccountId")
    def utility_storage_account_id(self) -> Optional[pulumi.Input[str]]:
        """
        Utility storage account id.
        """
        return pulumi.get(self, "utility_storage_account_id")

    @utility_storage_account_id.setter
    def utility_storage_account_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "utility_storage_account_id", value)


@pulumi.input_type
class PrivateLinkServiceConnectionStateArgs:
    def __init__(__self__, *,
                 actions_required: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[Union[str, 'Status']]] = None):
        """
        Private endpoint connection state.
        :param pulumi.Input[str] actions_required: Action required.
        :param pulumi.Input[str] description: Description of the object.
        :param pulumi.Input[Union[str, 'Status']] status: Private link connection state.
        """
        PrivateLinkServiceConnectionStateArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            actions_required=actions_required,
            description=description,
            status=status,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             actions_required: Optional[pulumi.Input[str]] = None,
             description: Optional[pulumi.Input[str]] = None,
             status: Optional[pulumi.Input[Union[str, 'Status']]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if actions_required is not None:
            _setter("actions_required", actions_required)
        if description is not None:
            _setter("description", description)
        if status is not None:
            _setter("status", status)

    @property
    @pulumi.getter(name="actionsRequired")
    def actions_required(self) -> Optional[pulumi.Input[str]]:
        """
        Action required.
        """
        return pulumi.get(self, "actions_required")

    @actions_required.setter
    def actions_required(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "actions_required", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the object.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[Union[str, 'Status']]]:
        """
        Private link connection state.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[Union[str, 'Status']]]):
        pulumi.set(self, "status", value)


