# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AccelerateConfigurationAccelerationStatus',
    'AccessControl',
    'Action',
    'AddOnStatus',
    'AmdSevSnpSpecification',
    'AnomalyResultEnum',
    'AppType',
    'ArchitectureValues',
    'Architectures',
    'ArtifactNamespace',
    'ArtifactPackaging',
    'ArtifactsType',
    'AttachmentStatus',
    'AuthType',
    'AuthenticationMode',
    'AuthenticationType',
    'AuthorizationConfigIAM',
    'AutoTuneState',
    'AwsVpcConfigurationAssignPublicIp',
    'BackupPolicyStatus',
    'BatchReportModeType',
    'BootModeValues',
    'BucketOwnerAccess',
    'CFNFeatureConfigurationStatus',
    'CacheMode',
    'CacheType',
    'CallAs',
    'Capabilities',
    'CapacityReservationPreference',
    'CertificateStatus',
    'CertificateType',
    'ClusterEndpointEncryptionType',
    'ClusterIssueCode',
    'ClusterState',
    'ClusterStateChangeReasonCode',
    'ClusterStatus',
    'ComplianceSeverity',
    'ComplianceStatus',
    'ComputeType',
    'ConfigChangeStatus',
    'ContinuousBackupsStatus',
    'CorsRuleAllowedMethods',
    'CredentialProviderType',
    'DataSourceLevelMetricsBehavior',
    'DataType',
    'DefaultAction',
    'DefaultBehavior',
    'DefaultRetentionMode',
    'DeleteMarkerReplicationStatus',
    'DeploymentControllerType',
    'DeploymentStatus',
    'DeploymentTargetsAccountFilterType',
    'DestinationFormat',
    'DeviceType',
    'Distribution',
    'DomainProcessingStatusType',
    'DomainType',
    'EBSTagSpecificationPropagateTags',
    'EFSVolumeConfigurationTransitEncryption',
    'EncryptionConfigurationEncryptionType',
    'EnvironmentType',
    'EnvironmentVariableType',
    'EventCode',
    'EventSelectorReadWriteType',
    'ExportSourceType',
    'ExtendedKeyUsageName',
    'FeatureSet',
    'FieldLogLevel',
    'FileFormat',
    'FileSystemProtectionReplicationOverwriteProtection',
    'FileSystemType',
    'FilterBehavior',
    'FilterRequirement',
    'GraphQLApiIntrospectionConfig',
    'GraphQLApiType',
    'GraphQLApiVisibility',
    'HeaderDirection',
    'HeaderProtocol',
    'HostnameType',
    'HttpTokensState',
    'HypervisorType',
    'IPAddressType',
    'ImagePullCredentialsType',
    'ImageState',
    'ImageTagMutability',
    'ImageTypeValues',
    'ImdsSupportValues',
    'InitiatedBy',
    'InstanceAutoRecoveryState',
    'InstanceBootModeValues',
    'InstanceCollectionType',
    'InstanceLifecycleType',
    'InstanceMetadataEndpointState',
    'InstanceMetadataOptionsState',
    'InstanceMetadataProtocolState',
    'InstanceMetadataTagsState',
    'InstanceRoleType',
    'InstanceStateName',
    'InstanceType',
    'IntelligentTieringConfigurationStatus',
    'InventoryConfigurationIncludedObjectVersions',
    'InventoryConfigurationOptionalFields',
    'InventoryConfigurationScheduleFrequency',
    'IpFamily',
    'IpamState',
    'IpamTier',
    'JobComparator',
    'JobStatus',
    'JobType',
    'JoinedMethod',
    'KeyAlgorithm',
    'KeyFormat',
    'KeySpec',
    'KeyType',
    'KeyUsage',
    'KeyUsageName',
    'KinesisStreamSpecificationApproximateCreationDateTimePrecision',
    'LastRunErrorStatusCode',
    'LaunchType',
    'LogDestinationType',
    'LogGroupClass',
    'LogType',
    'LoggingConfigApplicationLogLevel',
    'LoggingConfigLogFormat',
    'LoggingConfigProtocol',
    'LoggingConfigSystemLogLevel',
    'LogsConfigStatusType',
    'MaximumExecutionFrequency',
    'MetricTransformationUnit',
    'MetricsStatus',
    'MitigationInEffectEnum',
    'MonitoringState',
    'NetworkInterfaceStatus',
    'NetworkOrigin',
    'NoncurrentVersionTransitionStorageClass',
    'NotebookInstanceStatus',
    'OpenSearchPartitionInstanceType',
    'OpenSearchWarmPartitionInstanceType',
    'OperationLevelMetricsConfig',
    'OperationPreferencesRegionConcurrencyType',
    'Origin',
    'OwnershipControlsRuleObjectOwnership',
    'PackageType',
    'PartitionedPrefixPartitionDateSource',
    'Permission',
    'PermissionModel',
    'PingStatus',
    'PlacementConstraintType',
    'PlacementGroupStrategy',
    'PlacementStrategyType',
    'PlatformType',
    'PlatformValues',
    'PointInTimeRecoveryStatus',
    'PortMappingAppProtocol',
    'ProcessorFeatureName',
    'ProductCodeValues',
    'ProjectVisibilityType',
    'PropagateTags',
    'PropertyValueType',
    'RRType',
    'RecorderStatus',
    'RecordingFrequency',
    'RecordingStrategyType',
    'RedirectAllRequestsToProtocol',
    'RedirectRuleProtocol',
    'RenewalEligibility',
    'ReplicaModificationsStatus',
    'ReplicationDestinationStorageClass',
    'ReplicationRuleStatus',
    'ReplicationTimeStatus',
    'RepoUpgradeOnBoot',
    'ResolverLevelMetricsBehavior',
    'ResourceRecordSetFailover',
    'ResourceRecordSetRegion',
    'ResourceSpecInstanceType',
    'ResourceType',
    'RuleStatus',
    'RulesSourceListGeneratedRulesType',
    'RuntimeManagementConfigUpdateRuntimeOn',
    'SSEStatus',
    'SSEType',
    'ScaleDownBehavior',
    'ScanStatus',
    'SchedulingStrategy',
    'ServerSideEncryptionByDefaultSSEAlgorithm',
    'ServerType',
    'SimpleCriterionKeyForJob',
    'SnapStartApplyOn',
    'SnapshotState',
    'SourceAuthType',
    'SourceType',
    'SseKmsEncryptedObjectsStatus',
    'StackStatus',
    'StatefulEngineOptionsRuleOrder',
    'StatefulEngineOptionsStreamExceptionPolicy',
    'StatefulRuleAction',
    'StatefulRuleGroupOverrideAction',
    'StatefulRuleOptionsRuleOrder',
    'Status',
    'StatusName',
    'StatusType',
    'StorageTier',
    'SummaryStatus',
    'TLSSecurityPolicy',
    'TargetHealthReasonEnum',
    'TargetHealthStateEnum',
    'Tenancy',
    'Tier',
    'TieringAccessTier',
    'TpmSupportValues',
    'TracingConfigMode',
    'TrafficType',
    'TransitionStorageClass',
    'Type',
    'VersioningConfigurationStatus',
    'VirtualizationType',
    'VolumeType',
    'VpcEndpointType',
    'WebhookBuildType',
    'WebhookFilterType',
]


class AccelerateConfigurationAccelerationStatus(str, Enum):
    """
    Specifies the transfer acceleration status of the bucket.
    """
    ENABLED = "Enabled"
    """
    AccelerateConfigurationAccelerationStatus enum Enabled
    """
    SUSPENDED = "Suspended"
    """
    AccelerateConfigurationAccelerationStatus enum Suspended
    """


class AccessControl(str, Enum):
    """
    This is a legacy property, and it is not recommended for most use cases. A majority of modern use cases in Amazon S3 no longer require the use of ACLs, and we recommend that you keep ACLs disabled. For more information, see [Controlling object ownership](https://docs.aws.amazon.com//AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.  A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide*.  S3 buckets are created with ACLs disabled by default. Therefore, unless you explicitly set the [AWS::S3::OwnershipControls](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html) property to enable ACLs, your resource will fail to deploy with any value other than Private. Use cases requiring ACLs are uncommon.  The majority of access control configurations can be successfully and more easily achieved with bucket policies. For more information, see [AWS::S3::BucketPolicy](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html). For examples of common policy configurations, including S3 Server Access Logs buckets and more, see [Bucket policy examples](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html) in the *Amazon S3 User Guide*.
    """
    AUTHENTICATED_READ = "AuthenticatedRead"
    """
    AccessControl enum AuthenticatedRead
    """
    AWS_EXEC_READ = "AwsExecRead"
    """
    AccessControl enum AwsExecRead
    """
    BUCKET_OWNER_FULL_CONTROL = "BucketOwnerFullControl"
    """
    AccessControl enum BucketOwnerFullControl
    """
    BUCKET_OWNER_READ = "BucketOwnerRead"
    """
    AccessControl enum BucketOwnerRead
    """
    LOG_DELIVERY_WRITE = "LogDeliveryWrite"
    """
    AccessControl enum LogDeliveryWrite
    """
    PRIVATE = "Private"
    """
    AccessControl enum Private
    """
    PUBLIC_READ = "PublicRead"
    """
    AccessControl enum PublicRead
    """
    PUBLIC_READ_WRITE = "PublicReadWrite"
    """
    AccessControl enum PublicReadWrite
    """


class Action(str, Enum):
    """
    Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
    """
    ALLOW = "ALLOW"
    """
    Action enum ALLOW
    """
    BLOCK = "BLOCK"
    """
    Action enum BLOCK
    """
    CAPTCHA = "CAPTCHA"
    """
    Action enum CAPTCHA
    """
    CHALLENGE = "CHALLENGE"
    """
    Action enum CHALLENGE
    """
    COUNT = "COUNT"
    """
    Action enum COUNT
    """
    EXCLUDE_D_A_S_COUNT = "EXCLUDED_AS_COUNT"
    """
    Action enum EXCLUDED_AS_COUNT
    """


class AddOnStatus(str, Enum):
    """
    Status of the Addon
    """
    DISABLED = "Disabled"
    """
    AddOnStatus enum Disabled
    """
    DISABLING = "Disabling"
    """
    AddOnStatus enum Disabling
    """
    ENABLED = "Enabled"
    """
    AddOnStatus enum Enabled
    """
    ENABLING = "Enabling"
    """
    AddOnStatus enum Enabling
    """
    FAILED = "Failed"
    """
    AddOnStatus enum Failed
    """
    TERMINATED = "Terminated"
    """
    AddOnStatus enum Terminated
    """
    TERMINATING = "Terminating"
    """
    AddOnStatus enum Terminating
    """


class AmdSevSnpSpecification(str, Enum):
    """
    Property value
    """
    DISABLED = "disabled"
    """
    AmdSevSnpSpecification enum disabled
    """
    ENABLED = "enabled"
    """
    AmdSevSnpSpecification enum enabled
    """


class AnomalyResultEnum(str, Enum):
    """
    Property value
    """
    ANOMALOUS = "anomalous"
    """
    AnomalyResultEnum enum anomalous
    """
    NORMAL = "normal"
    """
    AnomalyResultEnum enum normal
    """


class AppType(str, Enum):
    """
    The type of app.
    """
    CANVAS = "Canvas"
    """
    AppType enum Canvas
    """
    JUPYTER_SERVER = "JupyterServer"
    """
    AppType enum JupyterServer
    """
    KERNEL_GATEWAY = "KernelGateway"
    """
    AppType enum KernelGateway
    """
    R_SESSION_GATEWAY = "RSessionGateway"
    """
    AppType enum RSessionGateway
    """
    R_STUDIO_SERVER_PRO = "RStudioServerPro"
    """
    AppType enum RStudioServerPro
    """


class ArchitectureValues(str, Enum):
    """
    Property value
    """
    ARM64 = "arm64"
    """
    ArchitectureValues enum arm64
    """
    ARM64_MAC = "arm64_mac"
    """
    ArchitectureValues enum arm64_mac
    """
    I386 = "i386"
    """
    ArchitectureValues enum i386
    """
    X86_64 = "x86_64"
    """
    ArchitectureValues enum x86_64
    """
    X86_64_MAC = "x86_64_mac"
    """
    ArchitectureValues enum x86_64_mac
    """


class Architectures(str, Enum):
    """
    Architectures enum
    """
    ARM64 = "arm64"
    """
    Architectures enum arm64
    """
    X86_64 = "x86_64"
    """
    Architectures enum x86_64
    """


class ArtifactNamespace(str, Enum):
    """
    Property value
    """
    BUIL_D_ID = "BUILD_ID"
    """
    ArtifactNamespace enum BUILD_ID
    """
    NONE = "NONE"
    """
    ArtifactNamespace enum NONE
    """


class ArtifactPackaging(str, Enum):
    """
    Property value
    """
    NONE = "NONE"
    """
    ArtifactPackaging enum NONE
    """
    ZIP = "ZIP"
    """
    ArtifactPackaging enum ZIP
    """


class ArtifactsType(str, Enum):
    """
    Property value
    """
    CODEPIPELINE = "CODEPIPELINE"
    """
    ArtifactsType enum CODEPIPELINE
    """
    N_O_ARTIFACTS = "NO_ARTIFACTS"
    """
    ArtifactsType enum NO_ARTIFACTS
    """
    S3 = "S3"
    """
    ArtifactsType enum S3
    """


class AttachmentStatus(str, Enum):
    """
    Property value
    """
    ATTACHED = "attached"
    """
    AttachmentStatus enum attached
    """
    ATTACHING = "attaching"
    """
    AttachmentStatus enum attaching
    """
    DETACHED = "detached"
    """
    AttachmentStatus enum detached
    """
    DETACHING = "detaching"
    """
    AttachmentStatus enum detaching
    """


class AuthType(str, Enum):
    """
    Property value
    """
    BASI_C_AUTH = "BASIC_AUTH"
    """
    AuthType enum BASIC_AUTH
    """
    CODECONNECTIONS = "CODECONNECTIONS"
    """
    AuthType enum CODECONNECTIONS
    """
    OAUTH = "OAUTH"
    """
    AuthType enum OAUTH
    """
    PERSONA_L_ACCES_S_TOKEN = "PERSONAL_ACCESS_TOKEN"
    """
    AuthType enum PERSONAL_ACCESS_TOKEN
    """


class AuthenticationMode(str, Enum):
    """
    Property value
    """
    API = "API"
    """
    AuthenticationMode enum API
    """
    AP_I_AN_D_CONFI_G_MAP = "API_AND_CONFIG_MAP"
    """
    AuthenticationMode enum API_AND_CONFIG_MAP
    """
    CONFI_G_MAP = "CONFIG_MAP"
    """
    AuthenticationMode enum CONFIG_MAP
    """


class AuthenticationType(str, Enum):
    """
    Property value
    """
    AMAZO_N_COGNIT_O_USE_R_POOLS = "AMAZON_COGNITO_USER_POOLS"
    """
    AuthenticationType enum AMAZON_COGNITO_USER_POOLS
    """
    AP_I_KEY = "API_KEY"
    """
    AuthenticationType enum API_KEY
    """
    AW_S_IAM = "AWS_IAM"
    """
    AuthenticationType enum AWS_IAM
    """
    AW_S_LAMBDA = "AWS_LAMBDA"
    """
    AuthenticationType enum AWS_LAMBDA
    """
    OPENI_D_CONNECT = "OPENID_CONNECT"
    """
    AuthenticationType enum OPENID_CONNECT
    """


class AuthorizationConfigIAM(str, Enum):
    """
    Determines whether to use the Amazon ECS task role defined in a task definition when mounting the Amazon EFS file system. If it is turned on, transit encryption must be turned on in the ``EFSVolumeConfiguration``. If this parameter is omitted, the default value of ``DISABLED`` is used. For more information, see [Using Amazon EFS access points](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html#efs-volume-accesspoints) in the *Amazon Elastic Container Service Developer Guide*.
    """
    DISABLED = "DISABLED"
    """
    AuthorizationConfigIAM enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    AuthorizationConfigIAM enum ENABLED
    """


class AutoTuneState(str, Enum):
    """
    Property value
    """
    DISABLED = "DISABLED"
    """
    AutoTuneState enum DISABLED
    """
    DISABLE_D_AN_D_ROLLBAC_K_COMPLETE = "DISABLED_AND_ROLLBACK_COMPLETE"
    """
    AutoTuneState enum DISABLED_AND_ROLLBACK_COMPLETE
    """
    DISABLE_D_AN_D_ROLLBAC_K_ERROR = "DISABLED_AND_ROLLBACK_ERROR"
    """
    AutoTuneState enum DISABLED_AND_ROLLBACK_ERROR
    """
    DISABLE_D_AN_D_ROLLBAC_K_I_N_PROGRESS = "DISABLED_AND_ROLLBACK_IN_PROGRESS"
    """
    AutoTuneState enum DISABLED_AND_ROLLBACK_IN_PROGRESS
    """
    DISABLE_D_AN_D_ROLLBAC_K_SCHEDULED = "DISABLED_AND_ROLLBACK_SCHEDULED"
    """
    AutoTuneState enum DISABLED_AND_ROLLBACK_SCHEDULED
    """
    DISABL_E_I_N_PROGRESS = "DISABLE_IN_PROGRESS"
    """
    AutoTuneState enum DISABLE_IN_PROGRESS
    """
    ENABLED = "ENABLED"
    """
    AutoTuneState enum ENABLED
    """
    ENABL_E_I_N_PROGRESS = "ENABLE_IN_PROGRESS"
    """
    AutoTuneState enum ENABLE_IN_PROGRESS
    """
    ERROR = "ERROR"
    """
    AutoTuneState enum ERROR
    """


class AwsVpcConfigurationAssignPublicIp(str, Enum):
    """
    Whether the task's elastic network interface receives a public IP address. The default value is ``DISABLED``.
    """
    DISABLED = "DISABLED"
    """
    AwsVpcConfigurationAssignPublicIp enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    AwsVpcConfigurationAssignPublicIp enum ENABLED
    """


class BackupPolicyStatus(str, Enum):
    """
    Set the backup policy status for the file system.  +   *ENABLED* - Turns automatic backups on for the file system.   +   *DISABLED* - Turns automatic backups off for the file system.
    """
    DISABLED = "DISABLED"
    """
    BackupPolicyStatus enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    BackupPolicyStatus enum ENABLED
    """


class BatchReportModeType(str, Enum):
    """
    Property value
    """
    REPOR_T_AGGREGATE_D_BATCH = "REPORT_AGGREGATED_BATCH"
    """
    BatchReportModeType enum REPORT_AGGREGATED_BATCH
    """
    REPOR_T_INDIVIDUA_L_BUILDS = "REPORT_INDIVIDUAL_BUILDS"
    """
    BatchReportModeType enum REPORT_INDIVIDUAL_BUILDS
    """


class BootModeValues(str, Enum):
    """
    Property value
    """
    LEGACY_BIOS = "legacy-bios"
    """
    BootModeValues enum legacy-bios
    """
    UEFI = "uefi"
    """
    BootModeValues enum uefi
    """
    UEFI_PREFERRED = "uefi-preferred"
    """
    BootModeValues enum uefi-preferred
    """


class BucketOwnerAccess(str, Enum):
    """
    Property value
    """
    FULL = "FULL"
    """
    BucketOwnerAccess enum FULL
    """
    NONE = "NONE"
    """
    BucketOwnerAccess enum NONE
    """
    REA_D_ONLY = "READ_ONLY"
    """
    BucketOwnerAccess enum READ_ONLY
    """


class CFNFeatureConfigurationStatus(str, Enum):
    """
    Property status
    """
    DISABLED = "DISABLED"
    """
    CFNFeatureConfigurationStatus enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    CFNFeatureConfigurationStatus enum ENABLED
    """


class CacheMode(str, Enum):
    """
    CacheMode enum
    """
    LOCA_L_CUSTO_M_CACHE = "LOCAL_CUSTOM_CACHE"
    """
    CacheMode enum LOCAL_CUSTOM_CACHE
    """
    LOCA_L_DOCKE_R_LAYE_R_CACHE = "LOCAL_DOCKER_LAYER_CACHE"
    """
    CacheMode enum LOCAL_DOCKER_LAYER_CACHE
    """
    LOCA_L_SOURC_E_CACHE = "LOCAL_SOURCE_CACHE"
    """
    CacheMode enum LOCAL_SOURCE_CACHE
    """


class CacheType(str, Enum):
    """
    Property value
    """
    LOCAL = "LOCAL"
    """
    CacheType enum LOCAL
    """
    N_O_CACHE = "NO_CACHE"
    """
    CacheType enum NO_CACHE
    """
    S3 = "S3"
    """
    CacheType enum S3
    """


class CallAs(str, Enum):
    """
    Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
    """
    DELEGATE_D_ADMIN = "DELEGATED_ADMIN"
    """
    CallAs enum DELEGATED_ADMIN
    """
    SELF = "SELF"
    """
    CallAs enum SELF
    """


class Capabilities(str, Enum):
    """
    Capabilities enum
    """
    CAPABILIT_Y_AUT_O_EXPAND = "CAPABILITY_AUTO_EXPAND"
    """
    Capabilities enum CAPABILITY_AUTO_EXPAND
    """
    CAPABILIT_Y_IAM = "CAPABILITY_IAM"
    """
    Capabilities enum CAPABILITY_IAM
    """
    CAPABILIT_Y_NAME_D_IAM = "CAPABILITY_NAMED_IAM"
    """
    Capabilities enum CAPABILITY_NAMED_IAM
    """


class CapacityReservationPreference(str, Enum):
    """
    Property value
    """
    NONE = "none"
    """
    CapacityReservationPreference enum none
    """
    OPEN = "open"
    """
    CapacityReservationPreference enum open
    """


class CertificateStatus(str, Enum):
    """
    Property value
    """
    EXPIRED = "EXPIRED"
    """
    CertificateStatus enum EXPIRED
    """
    FAILED = "FAILED"
    """
    CertificateStatus enum FAILED
    """
    INACTIVE = "INACTIVE"
    """
    CertificateStatus enum INACTIVE
    """
    ISSUED = "ISSUED"
    """
    CertificateStatus enum ISSUED
    """
    PENDIN_G_VALIDATION = "PENDING_VALIDATION"
    """
    CertificateStatus enum PENDING_VALIDATION
    """
    REVOKED = "REVOKED"
    """
    CertificateStatus enum REVOKED
    """
    VALIDATIO_N_TIME_D_OUT = "VALIDATION_TIMED_OUT"
    """
    CertificateStatus enum VALIDATION_TIMED_OUT
    """


class CertificateType(str, Enum):
    """
    Property value
    """
    AMAZO_N_ISSUED = "AMAZON_ISSUED"
    """
    CertificateType enum AMAZON_ISSUED
    """
    IMPORTED = "IMPORTED"
    """
    CertificateType enum IMPORTED
    """
    PRIVATE = "PRIVATE"
    """
    CertificateType enum PRIVATE
    """


class ClusterEndpointEncryptionType(str, Enum):
    """
    Property value
    """
    NONE = "NONE"
    """
    ClusterEndpointEncryptionType enum NONE
    """
    TLS = "TLS"
    """
    ClusterEndpointEncryptionType enum TLS
    """


class ClusterIssueCode(str, Enum):
    """
    Property value
    """
    ACCESS_DENIED = "AccessDenied"
    """
    ClusterIssueCode enum AccessDenied
    """
    CLUSTER_UNREACHABLE = "ClusterUnreachable"
    """
    ClusterIssueCode enum ClusterUnreachable
    """
    CONFIGURATION_CONFLICT = "ConfigurationConflict"
    """
    ClusterIssueCode enum ConfigurationConflict
    """
    EC2_SECURITY_GROUP_NOT_FOUND = "Ec2SecurityGroupNotFound"
    """
    ClusterIssueCode enum Ec2SecurityGroupNotFound
    """
    EC2_SERVICE_NOT_SUBSCRIBED = "Ec2ServiceNotSubscribed"
    """
    ClusterIssueCode enum Ec2ServiceNotSubscribed
    """
    EC2_SUBNET_NOT_FOUND = "Ec2SubnetNotFound"
    """
    ClusterIssueCode enum Ec2SubnetNotFound
    """
    IAM_ROLE_NOT_FOUND = "IamRoleNotFound"
    """
    ClusterIssueCode enum IamRoleNotFound
    """
    INSUFFICIENT_FREE_ADDRESSES = "InsufficientFreeAddresses"
    """
    ClusterIssueCode enum InsufficientFreeAddresses
    """
    INTERNAL_FAILURE = "InternalFailure"
    """
    ClusterIssueCode enum InternalFailure
    """
    KMS_GRANT_REVOKED = "KmsGrantRevoked"
    """
    ClusterIssueCode enum KmsGrantRevoked
    """
    KMS_KEY_DISABLED = "KmsKeyDisabled"
    """
    ClusterIssueCode enum KmsKeyDisabled
    """
    KMS_KEY_MARKED_FOR_DELETION = "KmsKeyMarkedForDeletion"
    """
    ClusterIssueCode enum KmsKeyMarkedForDeletion
    """
    KMS_KEY_NOT_FOUND = "KmsKeyNotFound"
    """
    ClusterIssueCode enum KmsKeyNotFound
    """
    OTHER = "Other"
    """
    ClusterIssueCode enum Other
    """
    RESOURCE_LIMIT_EXCEEDED = "ResourceLimitExceeded"
    """
    ClusterIssueCode enum ResourceLimitExceeded
    """
    RESOURCE_NOT_FOUND = "ResourceNotFound"
    """
    ClusterIssueCode enum ResourceNotFound
    """
    STS_REGIONAL_ENDPOINT_DISABLED = "StsRegionalEndpointDisabled"
    """
    ClusterIssueCode enum StsRegionalEndpointDisabled
    """
    UNSUPPORTED_VERSION = "UnsupportedVersion"
    """
    ClusterIssueCode enum UnsupportedVersion
    """
    VPC_NOT_FOUND = "VpcNotFound"
    """
    ClusterIssueCode enum VpcNotFound
    """


class ClusterState(str, Enum):
    """
    Property value
    """
    BOOTSTRAPPING = "BOOTSTRAPPING"
    """
    ClusterState enum BOOTSTRAPPING
    """
    RUNNING = "RUNNING"
    """
    ClusterState enum RUNNING
    """
    STARTING = "STARTING"
    """
    ClusterState enum STARTING
    """
    TERMINATED = "TERMINATED"
    """
    ClusterState enum TERMINATED
    """
    TERMINATE_D_WIT_H_ERRORS = "TERMINATED_WITH_ERRORS"
    """
    ClusterState enum TERMINATED_WITH_ERRORS
    """
    TERMINATING = "TERMINATING"
    """
    ClusterState enum TERMINATING
    """
    WAITING = "WAITING"
    """
    ClusterState enum WAITING
    """


class ClusterStateChangeReasonCode(str, Enum):
    """
    Property value
    """
    AL_L_STEP_S_COMPLETED = "ALL_STEPS_COMPLETED"
    """
    ClusterStateChangeReasonCode enum ALL_STEPS_COMPLETED
    """
    BOOTSTRA_P_FAILURE = "BOOTSTRAP_FAILURE"
    """
    ClusterStateChangeReasonCode enum BOOTSTRAP_FAILURE
    """
    INSTANC_E_FAILURE = "INSTANCE_FAILURE"
    """
    ClusterStateChangeReasonCode enum INSTANCE_FAILURE
    """
    INSTANC_E_FLEE_T_TIMEOUT = "INSTANCE_FLEET_TIMEOUT"
    """
    ClusterStateChangeReasonCode enum INSTANCE_FLEET_TIMEOUT
    """
    INTERNA_L_ERROR = "INTERNAL_ERROR"
    """
    ClusterStateChangeReasonCode enum INTERNAL_ERROR
    """
    STE_P_FAILURE = "STEP_FAILURE"
    """
    ClusterStateChangeReasonCode enum STEP_FAILURE
    """
    USE_R_REQUEST = "USER_REQUEST"
    """
    ClusterStateChangeReasonCode enum USER_REQUEST
    """
    VALIDATIO_N_ERROR = "VALIDATION_ERROR"
    """
    ClusterStateChangeReasonCode enum VALIDATION_ERROR
    """


class ClusterStatus(str, Enum):
    """
    Property value
    """
    ACTIVE = "ACTIVE"
    """
    ClusterStatus enum ACTIVE
    """
    CREATING = "CREATING"
    """
    ClusterStatus enum CREATING
    """
    DELETING = "DELETING"
    """
    ClusterStatus enum DELETING
    """
    FAILED = "FAILED"
    """
    ClusterStatus enum FAILED
    """
    PENDING = "PENDING"
    """
    ClusterStatus enum PENDING
    """
    UPDATING = "UPDATING"
    """
    ClusterStatus enum UPDATING
    """


class ComplianceSeverity(str, Enum):
    """
    Property value
    """
    CRITICAL = "CRITICAL"
    """
    ComplianceSeverity enum CRITICAL
    """
    HIGH = "HIGH"
    """
    ComplianceSeverity enum HIGH
    """
    INFORMATIONAL = "INFORMATIONAL"
    """
    ComplianceSeverity enum INFORMATIONAL
    """
    LOW = "LOW"
    """
    ComplianceSeverity enum LOW
    """
    MEDIUM = "MEDIUM"
    """
    ComplianceSeverity enum MEDIUM
    """
    UNSPECIFIED = "UNSPECIFIED"
    """
    ComplianceSeverity enum UNSPECIFIED
    """


class ComplianceStatus(str, Enum):
    """
    Property value
    """
    COMPLIANT = "COMPLIANT"
    """
    ComplianceStatus enum COMPLIANT
    """
    NO_N_COMPLIANT = "NON_COMPLIANT"
    """
    ComplianceStatus enum NON_COMPLIANT
    """


class ComputeType(str, Enum):
    """
    Property value
    """
    BUIL_D_GENERAL1_2_XLARGE = "BUILD_GENERAL1_2XLARGE"
    """
    ComputeType enum BUILD_GENERAL1_2XLARGE
    """
    BUIL_D_GENERAL1_LARGE = "BUILD_GENERAL1_LARGE"
    """
    ComputeType enum BUILD_GENERAL1_LARGE
    """
    BUIL_D_GENERAL1_MEDIUM = "BUILD_GENERAL1_MEDIUM"
    """
    ComputeType enum BUILD_GENERAL1_MEDIUM
    """
    BUIL_D_GENERAL1_SMALL = "BUILD_GENERAL1_SMALL"
    """
    ComputeType enum BUILD_GENERAL1_SMALL
    """
    BUIL_D_GENERAL1_XLARGE = "BUILD_GENERAL1_XLARGE"
    """
    ComputeType enum BUILD_GENERAL1_XLARGE
    """
    BUIL_D_LAMBD_A_10_GB = "BUILD_LAMBDA_10GB"
    """
    ComputeType enum BUILD_LAMBDA_10GB
    """
    BUIL_D_LAMBD_A_1_GB = "BUILD_LAMBDA_1GB"
    """
    ComputeType enum BUILD_LAMBDA_1GB
    """
    BUIL_D_LAMBD_A_2_GB = "BUILD_LAMBDA_2GB"
    """
    ComputeType enum BUILD_LAMBDA_2GB
    """
    BUIL_D_LAMBD_A_4_GB = "BUILD_LAMBDA_4GB"
    """
    ComputeType enum BUILD_LAMBDA_4GB
    """
    BUIL_D_LAMBD_A_8_GB = "BUILD_LAMBDA_8GB"
    """
    ComputeType enum BUILD_LAMBDA_8GB
    """


class ConfigChangeStatus(str, Enum):
    """
    Property value
    """
    APPLYING_CHANGES = "ApplyingChanges"
    """
    ConfigChangeStatus enum ApplyingChanges
    """
    CANCELLED = "Cancelled"
    """
    ConfigChangeStatus enum Cancelled
    """
    COMPLETED = "Completed"
    """
    ConfigChangeStatus enum Completed
    """
    INITIALIZING = "Initializing"
    """
    ConfigChangeStatus enum Initializing
    """
    PENDING = "Pending"
    """
    ConfigChangeStatus enum Pending
    """
    PENDING_USER_INPUT = "PendingUserInput"
    """
    ConfigChangeStatus enum PendingUserInput
    """
    VALIDATING = "Validating"
    """
    ConfigChangeStatus enum Validating
    """
    VALIDATION_FAILED = "ValidationFailed"
    """
    ConfigChangeStatus enum ValidationFailed
    """


class ContinuousBackupsStatus(str, Enum):
    """
    Property value
    """
    DISABLED = "DISABLED"
    """
    ContinuousBackupsStatus enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    ContinuousBackupsStatus enum ENABLED
    """


class CorsRuleAllowedMethods(str, Enum):
    """
    CorsRuleAllowedMethods enum
    """
    DELETE = "DELETE"
    """
    CorsRuleAllowedMethods enum DELETE
    """
    GET = "GET"
    """
    CorsRuleAllowedMethods enum GET
    """
    HEAD = "HEAD"
    """
    CorsRuleAllowedMethods enum HEAD
    """
    POST = "POST"
    """
    CorsRuleAllowedMethods enum POST
    """
    PUT = "PUT"
    """
    CorsRuleAllowedMethods enum PUT
    """


class CredentialProviderType(str, Enum):
    """
    Property value
    """
    SECRET_S_MANAGER = "SECRETS_MANAGER"
    """
    CredentialProviderType enum SECRETS_MANAGER
    """


class DataSourceLevelMetricsBehavior(str, Enum):
    """
    Property value
    """
    FUL_L_REQUES_T_DAT_A_SOURC_E_METRICS = "FULL_REQUEST_DATA_SOURCE_METRICS"
    """
    DataSourceLevelMetricsBehavior enum FULL_REQUEST_DATA_SOURCE_METRICS
    """
    PE_R_DAT_A_SOURC_E_METRICS = "PER_DATA_SOURCE_METRICS"
    """
    DataSourceLevelMetricsBehavior enum PER_DATA_SOURCE_METRICS
    """


class DataType(str, Enum):
    """
    The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
    """
    AWS_EC2_IMAGE = "aws:ec2:image"
    """
    DataType enum aws:ec2:image
    """
    TEXT = "text"
    """
    DataType enum text
    """


class DefaultAction(str, Enum):
    """
    Property value
    """
    ALLOW = "ALLOW"
    """
    DefaultAction enum ALLOW
    """
    DENY = "DENY"
    """
    DefaultAction enum DENY
    """


class DefaultBehavior(str, Enum):
    """
    Default handling for logs that don't match any of the specified filtering conditions.
    """
    DROP = "DROP"
    """
    DefaultBehavior enum DROP
    """
    KEEP = "KEEP"
    """
    DefaultBehavior enum KEEP
    """


class DefaultRetentionMode(str, Enum):
    """
    The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, you must specify ``Mode`` and specify either ``Days`` or ``Years``.
    """
    COMPLIANCE = "COMPLIANCE"
    """
    DefaultRetentionMode enum COMPLIANCE
    """
    GOVERNANCE = "GOVERNANCE"
    """
    DefaultRetentionMode enum GOVERNANCE
    """


class DeleteMarkerReplicationStatus(str, Enum):
    """
    Indicates whether to replicate delete markers. Disabled by default.
    """
    DISABLED = "Disabled"
    """
    DeleteMarkerReplicationStatus enum Disabled
    """
    ENABLED = "Enabled"
    """
    DeleteMarkerReplicationStatus enum Enabled
    """


class DeploymentControllerType(str, Enum):
    """
    The deployment controller type to use. There are three deployment controller types available:  + ECS The rolling update (ECS) deployment type involves replacing the current running version of the container with the latest version. The number of containers Amazon ECS adds or removes from the service during a rolling update is controlled by adjusting the minimum and maximum number of healthy tasks allowed during a service deployment, as specified in the DeploymentConfiguration. + CODE_DEPLOY The blue/green (CODE_DEPLOY) deployment type uses the blue/green deployment model powered by , which allows you to verify a new deployment of a service before sending production traffic to it. + EXTERNAL The external (EXTERNAL) deployment type enables you to use any third-party deployment controller for full control over the deployment process for an Amazon ECS service.
    """
    COD_E_DEPLOY = "CODE_DEPLOY"
    """
    DeploymentControllerType enum CODE_DEPLOY
    """
    ECS = "ECS"
    """
    DeploymentControllerType enum ECS
    """
    EXTERNAL = "EXTERNAL"
    """
    DeploymentControllerType enum EXTERNAL
    """


class DeploymentStatus(str, Enum):
    """
    Property value
    """
    COMPLETED = "COMPLETED"
    """
    DeploymentStatus enum COMPLETED
    """
    ELIGIBLE = "ELIGIBLE"
    """
    DeploymentStatus enum ELIGIBLE
    """
    I_N_PROGRESS = "IN_PROGRESS"
    """
    DeploymentStatus enum IN_PROGRESS
    """
    NO_T_ELIGIBLE = "NOT_ELIGIBLE"
    """
    DeploymentStatus enum NOT_ELIGIBLE
    """
    PENDIN_G_UPDATE = "PENDING_UPDATE"
    """
    DeploymentStatus enum PENDING_UPDATE
    """


class DeploymentTargetsAccountFilterType(str, Enum):
    """
    The filter type you want to apply on organizational units and accounts.
    """
    DIFFERENCE = "DIFFERENCE"
    """
    DeploymentTargetsAccountFilterType enum DIFFERENCE
    """
    INTERSECTION = "INTERSECTION"
    """
    DeploymentTargetsAccountFilterType enum INTERSECTION
    """
    NONE = "NONE"
    """
    DeploymentTargetsAccountFilterType enum NONE
    """
    UNION = "UNION"
    """
    DeploymentTargetsAccountFilterType enum UNION
    """


class DestinationFormat(str, Enum):
    """
    Specifies the file format used when exporting data to Amazon S3.  *Allowed values*: ``CSV`` | ``ORC`` | ``Parquet``
    """
    CSV = "CSV"
    """
    DestinationFormat enum CSV
    """
    ORC = "ORC"
    """
    DestinationFormat enum ORC
    """
    PARQUET = "Parquet"
    """
    DestinationFormat enum Parquet
    """


class DeviceType(str, Enum):
    """
    Property value
    """
    EBS = "ebs"
    """
    DeviceType enum ebs
    """
    INSTANCE_STORE = "instance-store"
    """
    DeviceType enum instance-store
    """


class Distribution(str, Enum):
    """
    The method used to distribute log data to the destination, which can be either random or grouped by log stream.
    """
    BY_LOG_STREAM = "ByLogStream"
    """
    Distribution enum ByLogStream
    """
    RANDOM = "Random"
    """
    Distribution enum Random
    """


class DomainProcessingStatusType(str, Enum):
    """
    Property value
    """
    ACTIVE = "Active"
    """
    DomainProcessingStatusType enum Active
    """
    CREATING = "Creating"
    """
    DomainProcessingStatusType enum Creating
    """
    DELETING = "Deleting"
    """
    DomainProcessingStatusType enum Deleting
    """
    ISOLATED = "Isolated"
    """
    DomainProcessingStatusType enum Isolated
    """
    MODIFYING = "Modifying"
    """
    DomainProcessingStatusType enum Modifying
    """
    UPDATING_SERVICE_SOFTWARE = "UpdatingServiceSoftware"
    """
    DomainProcessingStatusType enum UpdatingServiceSoftware
    """
    UPGRADING_ENGINE_VERSION = "UpgradingEngineVersion"
    """
    DomainProcessingStatusType enum UpgradingEngineVersion
    """


class DomainType(str, Enum):
    """
    Property value
    """
    STANDARD = "standard"
    """
    DomainType enum standard
    """
    VPC = "vpc"
    """
    DomainType enum vpc
    """


class EBSTagSpecificationPropagateTags(str, Enum):
    """
    Determines whether to propagate the tags from the task definition to the Amazon EBS volume. Tags can only propagate to a ``SERVICE`` specified in ``ServiceVolumeConfiguration``. If no value is specified, the tags aren't propagated.
    """
    SERVICE = "SERVICE"
    """
    EBSTagSpecificationPropagateTags enum SERVICE
    """
    TAS_K_DEFINITION = "TASK_DEFINITION"
    """
    EBSTagSpecificationPropagateTags enum TASK_DEFINITION
    """


class EFSVolumeConfigurationTransitEncryption(str, Enum):
    """
    Determines whether to use encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server. Transit encryption must be turned on if Amazon EFS IAM authorization is used. If this parameter is omitted, the default value of ``DISABLED`` is used. For more information, see [Encrypting data in transit](https://docs.aws.amazon.com/efs/latest/ug/encryption-in-transit.html) in the *Amazon Elastic File System User Guide*.
    """
    DISABLED = "DISABLED"
    """
    EFSVolumeConfigurationTransitEncryption enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    EFSVolumeConfigurationTransitEncryption enum ENABLED
    """


class EncryptionConfigurationEncryptionType(str, Enum):
    """
    The encryption type to use. If you use the ``KMS`` encryption type, the contents of the repository will be encrypted using server-side encryption with KMSlong key stored in KMS. When you use KMS to encrypt your data, you can either use the default AWS managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see [Protecting data using server-side encryption with an key stored in (SSE-KMS)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html) in the *Amazon Simple Storage Service Console Developer Guide*. If you use the ``AES256`` encryption type, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an AES-256 encryption algorithm. For more information, see [Protecting data using server-side encryption with Amazon S3-managed encryption keys (SSE-S3)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) in the *Ama The encryption type to use.
    """
    AES256 = "AES256"
    """
    EncryptionConfigurationEncryptionType enum AES256
    """
    KMS = "KMS"
    """
    EncryptionConfigurationEncryptionType enum KMS
    """


class EnvironmentType(str, Enum):
    """
    Property value
    """
    AR_M_CONTAINER = "ARM_CONTAINER"
    """
    EnvironmentType enum ARM_CONTAINER
    """
    AR_M_LAMBD_A_CONTAINER = "ARM_LAMBDA_CONTAINER"
    """
    EnvironmentType enum ARM_LAMBDA_CONTAINER
    """
    LINU_X_CONTAINER = "LINUX_CONTAINER"
    """
    EnvironmentType enum LINUX_CONTAINER
    """
    LINU_X_GP_U_CONTAINER = "LINUX_GPU_CONTAINER"
    """
    EnvironmentType enum LINUX_GPU_CONTAINER
    """
    LINU_X_LAMBD_A_CONTAINER = "LINUX_LAMBDA_CONTAINER"
    """
    EnvironmentType enum LINUX_LAMBDA_CONTAINER
    """
    WINDOW_S_CONTAINER = "WINDOWS_CONTAINER"
    """
    EnvironmentType enum WINDOWS_CONTAINER
    """
    WINDOW_S_SERVE_R_2019_CONTAINER = "WINDOWS_SERVER_2019_CONTAINER"
    """
    EnvironmentType enum WINDOWS_SERVER_2019_CONTAINER
    """


class EnvironmentVariableType(str, Enum):
    """
    Property value
    """
    PARAMETE_R_STORE = "PARAMETER_STORE"
    """
    EnvironmentVariableType enum PARAMETER_STORE
    """
    PLAINTEXT = "PLAINTEXT"
    """
    EnvironmentVariableType enum PLAINTEXT
    """
    SECRET_S_MANAGER = "SECRETS_MANAGER"
    """
    EnvironmentVariableType enum SECRETS_MANAGER
    """


class EventCode(str, Enum):
    """
    Property value
    """
    INSTANCE_REBOOT = "instance-reboot"
    """
    EventCode enum instance-reboot
    """
    INSTANCE_RETIREMENT = "instance-retirement"
    """
    EventCode enum instance-retirement
    """
    INSTANCE_STOP = "instance-stop"
    """
    EventCode enum instance-stop
    """
    SYSTEM_MAINTENANCE = "system-maintenance"
    """
    EventCode enum system-maintenance
    """
    SYSTEM_REBOOT = "system-reboot"
    """
    EventCode enum system-reboot
    """


class EventSelectorReadWriteType(str, Enum):
    """
    Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput is a read-only API operation and RunInstances is a write-only API operation.
    """
    ALL = "All"
    """
    EventSelectorReadWriteType enum All
    """
    READ_ONLY = "ReadOnly"
    """
    EventSelectorReadWriteType enum ReadOnly
    """
    WRITE_ONLY = "WriteOnly"
    """
    EventSelectorReadWriteType enum WriteOnly
    """


class ExportSourceType(str, Enum):
    """
    Property value
    """
    CLUSTER = "CLUSTER"
    """
    ExportSourceType enum CLUSTER
    """
    SNAPSHOT = "SNAPSHOT"
    """
    ExportSourceType enum SNAPSHOT
    """


class ExtendedKeyUsageName(str, Enum):
    """
    ExtendedKeyUsageName enum
    """
    ANY = "ANY"
    """
    ExtendedKeyUsageName enum ANY
    """
    COD_E_SIGNING = "CODE_SIGNING"
    """
    ExtendedKeyUsageName enum CODE_SIGNING
    """
    CUSTOM = "CUSTOM"
    """
    ExtendedKeyUsageName enum CUSTOM
    """
    EMAI_L_PROTECTION = "EMAIL_PROTECTION"
    """
    ExtendedKeyUsageName enum EMAIL_PROTECTION
    """
    IPSE_C_EN_D_SYSTEM = "IPSEC_END_SYSTEM"
    """
    ExtendedKeyUsageName enum IPSEC_END_SYSTEM
    """
    IPSE_C_TUNNEL = "IPSEC_TUNNEL"
    """
    ExtendedKeyUsageName enum IPSEC_TUNNEL
    """
    IPSE_C_USER = "IPSEC_USER"
    """
    ExtendedKeyUsageName enum IPSEC_USER
    """
    NONE = "NONE"
    """
    ExtendedKeyUsageName enum NONE
    """
    OCS_P_SIGNING = "OCSP_SIGNING"
    """
    ExtendedKeyUsageName enum OCSP_SIGNING
    """
    TIM_E_STAMPING = "TIME_STAMPING"
    """
    ExtendedKeyUsageName enum TIME_STAMPING
    """
    TL_S_WE_B_CLIEN_T_AUTHENTICATION = "TLS_WEB_CLIENT_AUTHENTICATION"
    """
    ExtendedKeyUsageName enum TLS_WEB_CLIENT_AUTHENTICATION
    """
    TL_S_WE_B_SERVE_R_AUTHENTICATION = "TLS_WEB_SERVER_AUTHENTICATION"
    """
    ExtendedKeyUsageName enum TLS_WEB_SERVER_AUTHENTICATION
    """


class FeatureSet(str, Enum):
    """
    Specifies the feature set supported by the new organization. Each feature set supports different levels of functionality.
    """
    ALL = "ALL"
    """
    FeatureSet enum ALL
    """
    CONSOLIDATE_D_BILLING = "CONSOLIDATED_BILLING"
    """
    FeatureSet enum CONSOLIDATED_BILLING
    """


class FieldLogLevel(str, Enum):
    """
    Property value
    """
    ALL = "ALL"
    """
    FieldLogLevel enum ALL
    """
    ERROR = "ERROR"
    """
    FieldLogLevel enum ERROR
    """
    NONE = "NONE"
    """
    FieldLogLevel enum NONE
    """


class FileFormat(str, Enum):
    """
    Property fileFormat
    """
    PARQUET = "parquet"
    """
    FileFormat enum parquet
    """
    PLAIN_TEXT = "plain-text"
    """
    FileFormat enum plain-text
    """


class FileSystemProtectionReplicationOverwriteProtection(str, Enum):
    """
    The status of the file system's replication overwrite protection.  +   ``ENABLED`` – The file system cannot be used as the destination file system in a replication configuration. The file system is writeable. Replication overwrite protection is ``ENABLED`` by default.   +   ``DISABLED`` – The file system can be used as the destination file system in a replication configuration. The file system is read-only and can only be modified by EFS replication.  +   ``REPLICATING`` – The file system is being used as the destination file system in a replication configuration. The file system is read-only and is only modified only by EFS replication.   If the replication configuration is deleted, the file system's replication overwrite protection is re-enabled, the file system becomes writeable.
    """
    DISABLED = "DISABLED"
    """
    FileSystemProtectionReplicationOverwriteProtection enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    FileSystemProtectionReplicationOverwriteProtection enum ENABLED
    """


class FileSystemType(str, Enum):
    """
    Property value
    """
    EFS = "EFS"
    """
    FileSystemType enum EFS
    """


class FilterBehavior(str, Enum):
    """
    How to handle logs that satisfy the filter's conditions and requirement.
    """
    DROP = "DROP"
    """
    FilterBehavior enum DROP
    """
    KEEP = "KEEP"
    """
    FilterBehavior enum KEEP
    """


class FilterRequirement(str, Enum):
    """
    Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
    """
    MEET_S_ALL = "MEETS_ALL"
    """
    FilterRequirement enum MEETS_ALL
    """
    MEET_S_ANY = "MEETS_ANY"
    """
    FilterRequirement enum MEETS_ANY
    """


class GraphQLApiIntrospectionConfig(str, Enum):
    """
    Property value
    """
    DISABLED = "DISABLED"
    """
    GraphQLApiIntrospectionConfig enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    GraphQLApiIntrospectionConfig enum ENABLED
    """


class GraphQLApiType(str, Enum):
    """
    Property value
    """
    GRAPHQL = "GRAPHQL"
    """
    GraphQLApiType enum GRAPHQL
    """
    MERGED = "MERGED"
    """
    GraphQLApiType enum MERGED
    """


class GraphQLApiVisibility(str, Enum):
    """
    Property value
    """
    GLOBAL_ = "GLOBAL"
    """
    GraphQLApiVisibility enum GLOBAL
    """
    PRIVATE = "PRIVATE"
    """
    GraphQLApiVisibility enum PRIVATE
    """


class HeaderDirection(str, Enum):
    """
    Property direction
    """
    ANY = "ANY"
    """
    HeaderDirection enum ANY
    """
    FORWARD = "FORWARD"
    """
    HeaderDirection enum FORWARD
    """


class HeaderProtocol(str, Enum):
    """
    Property protocol
    """
    DCERPC = "DCERPC"
    """
    HeaderProtocol enum DCERPC
    """
    DHCP = "DHCP"
    """
    HeaderProtocol enum DHCP
    """
    DNS = "DNS"
    """
    HeaderProtocol enum DNS
    """
    FTP = "FTP"
    """
    HeaderProtocol enum FTP
    """
    HTTP = "HTTP"
    """
    HeaderProtocol enum HTTP
    """
    ICMP = "ICMP"
    """
    HeaderProtocol enum ICMP
    """
    IKEV2 = "IKEV2"
    """
    HeaderProtocol enum IKEV2
    """
    IMAP = "IMAP"
    """
    HeaderProtocol enum IMAP
    """
    IP = "IP"
    """
    HeaderProtocol enum IP
    """
    KRB5 = "KRB5"
    """
    HeaderProtocol enum KRB5
    """
    MSN = "MSN"
    """
    HeaderProtocol enum MSN
    """
    NTP = "NTP"
    """
    HeaderProtocol enum NTP
    """
    SMB = "SMB"
    """
    HeaderProtocol enum SMB
    """
    SMTP = "SMTP"
    """
    HeaderProtocol enum SMTP
    """
    SSH = "SSH"
    """
    HeaderProtocol enum SSH
    """
    TCP = "TCP"
    """
    HeaderProtocol enum TCP
    """
    TFTP = "TFTP"
    """
    HeaderProtocol enum TFTP
    """
    TLS = "TLS"
    """
    HeaderProtocol enum TLS
    """
    UDP = "UDP"
    """
    HeaderProtocol enum UDP
    """


class HostnameType(str, Enum):
    """
    Property value
    """
    IP_NAME = "ip-name"
    """
    HostnameType enum ip-name
    """
    RESOURCE_NAME = "resource-name"
    """
    HostnameType enum resource-name
    """


class HttpTokensState(str, Enum):
    """
    Property value
    """
    OPTIONAL = "optional"
    """
    HttpTokensState enum optional
    """
    REQUIRED = "required"
    """
    HttpTokensState enum required
    """


class HypervisorType(str, Enum):
    """
    Property value
    """
    OVM = "ovm"
    """
    HypervisorType enum ovm
    """
    XEN = "xen"
    """
    HypervisorType enum xen
    """


class IPAddressType(str, Enum):
    """
    Property value
    """
    DUALSTACK = "dualstack"
    """
    IPAddressType enum dualstack
    """
    IPV4 = "ipv4"
    """
    IPAddressType enum ipv4
    """


class ImagePullCredentialsType(str, Enum):
    """
    Property value
    """
    CODEBUILD = "CODEBUILD"
    """
    ImagePullCredentialsType enum CODEBUILD
    """
    SERVIC_E_ROLE = "SERVICE_ROLE"
    """
    ImagePullCredentialsType enum SERVICE_ROLE
    """


class ImageState(str, Enum):
    """
    Property value
    """
    AVAILABLE = "available"
    """
    ImageState enum available
    """
    DEREGISTERED = "deregistered"
    """
    ImageState enum deregistered
    """
    DISABLED = "disabled"
    """
    ImageState enum disabled
    """
    ERROR = "error"
    """
    ImageState enum error
    """
    FAILED = "failed"
    """
    ImageState enum failed
    """
    INVALID = "invalid"
    """
    ImageState enum invalid
    """
    PENDING = "pending"
    """
    ImageState enum pending
    """
    TRANSIENT = "transient"
    """
    ImageState enum transient
    """


class ImageTagMutability(str, Enum):
    """
    The tag mutability setting for the repository. If this parameter is omitted, the default setting of ``MUTABLE`` will be used which will allow image tags to be overwritten. If ``IMMUTABLE`` is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
    """
    IMMUTABLE = "IMMUTABLE"
    """
    ImageTagMutability enum IMMUTABLE
    """
    MUTABLE = "MUTABLE"
    """
    ImageTagMutability enum MUTABLE
    """


class ImageTypeValues(str, Enum):
    """
    Property value
    """
    KERNEL = "kernel"
    """
    ImageTypeValues enum kernel
    """
    MACHINE = "machine"
    """
    ImageTypeValues enum machine
    """
    RAMDISK = "ramdisk"
    """
    ImageTypeValues enum ramdisk
    """


class ImdsSupportValues(str, Enum):
    """
    Property value
    """
    V20 = "v2.0"
    """
    ImdsSupportValues enum v2.0
    """


class InitiatedBy(str, Enum):
    """
    Property value
    """
    CUSTOMER = "CUSTOMER"
    """
    InitiatedBy enum CUSTOMER
    """
    SERVICE = "SERVICE"
    """
    InitiatedBy enum SERVICE
    """


class InstanceAutoRecoveryState(str, Enum):
    """
    Property value
    """
    DEFAULT = "default"
    """
    InstanceAutoRecoveryState enum default
    """
    DISABLED = "disabled"
    """
    InstanceAutoRecoveryState enum disabled
    """


class InstanceBootModeValues(str, Enum):
    """
    Property value
    """
    LEGACY_BIOS = "legacy-bios"
    """
    InstanceBootModeValues enum legacy-bios
    """
    UEFI = "uefi"
    """
    InstanceBootModeValues enum uefi
    """


class InstanceCollectionType(str, Enum):
    """
    Property value
    """
    INSTANC_E_FLEET = "INSTANCE_FLEET"
    """
    InstanceCollectionType enum INSTANCE_FLEET
    """
    INSTANC_E_GROUP = "INSTANCE_GROUP"
    """
    InstanceCollectionType enum INSTANCE_GROUP
    """


class InstanceLifecycleType(str, Enum):
    """
    Property value
    """
    CAPACITY_BLOCK = "capacity-block"
    """
    InstanceLifecycleType enum capacity-block
    """
    SCHEDULED = "scheduled"
    """
    InstanceLifecycleType enum scheduled
    """
    SPOT = "spot"
    """
    InstanceLifecycleType enum spot
    """


class InstanceMetadataEndpointState(str, Enum):
    """
    Property value
    """
    DISABLED = "disabled"
    """
    InstanceMetadataEndpointState enum disabled
    """
    ENABLED = "enabled"
    """
    InstanceMetadataEndpointState enum enabled
    """


class InstanceMetadataOptionsState(str, Enum):
    """
    Property value
    """
    APPLIED = "applied"
    """
    InstanceMetadataOptionsState enum applied
    """
    PENDING = "pending"
    """
    InstanceMetadataOptionsState enum pending
    """


class InstanceMetadataProtocolState(str, Enum):
    """
    Property value
    """
    DISABLED = "disabled"
    """
    InstanceMetadataProtocolState enum disabled
    """
    ENABLED = "enabled"
    """
    InstanceMetadataProtocolState enum enabled
    """


class InstanceMetadataTagsState(str, Enum):
    """
    Property value
    """
    DISABLED = "disabled"
    """
    InstanceMetadataTagsState enum disabled
    """
    ENABLED = "enabled"
    """
    InstanceMetadataTagsState enum enabled
    """


class InstanceRoleType(str, Enum):
    """
    Property value
    """
    CORE = "CORE"
    """
    InstanceRoleType enum CORE
    """
    MASTER = "MASTER"
    """
    InstanceRoleType enum MASTER
    """
    TASK = "TASK"
    """
    InstanceRoleType enum TASK
    """


class InstanceStateName(str, Enum):
    """
    Property value
    """
    PENDING = "pending"
    """
    InstanceStateName enum pending
    """
    RUNNING = "running"
    """
    InstanceStateName enum running
    """
    SHUTTING_DOWN = "shutting-down"
    """
    InstanceStateName enum shutting-down
    """
    STOPPED = "stopped"
    """
    InstanceStateName enum stopped
    """
    STOPPING = "stopping"
    """
    InstanceStateName enum stopping
    """
    TERMINATED = "terminated"
    """
    InstanceStateName enum terminated
    """


class InstanceType(str, Enum):
    """
    Property value
    """
    ML_C42XLARGE = "ml.c4.2xlarge"
    """
    InstanceType enum ml.c4.2xlarge
    """
    ML_C44XLARGE = "ml.c4.4xlarge"
    """
    InstanceType enum ml.c4.4xlarge
    """
    ML_C48XLARGE = "ml.c4.8xlarge"
    """
    InstanceType enum ml.c4.8xlarge
    """
    ML_C4_XLARGE = "ml.c4.xlarge"
    """
    InstanceType enum ml.c4.xlarge
    """
    ML_C518XLARGE = "ml.c5.18xlarge"
    """
    InstanceType enum ml.c5.18xlarge
    """
    ML_C52XLARGE = "ml.c5.2xlarge"
    """
    InstanceType enum ml.c5.2xlarge
    """
    ML_C54XLARGE = "ml.c5.4xlarge"
    """
    InstanceType enum ml.c5.4xlarge
    """
    ML_C59XLARGE = "ml.c5.9xlarge"
    """
    InstanceType enum ml.c5.9xlarge
    """
    ML_C5_XLARGE = "ml.c5.xlarge"
    """
    InstanceType enum ml.c5.xlarge
    """
    ML_C5D18XLARGE = "ml.c5d.18xlarge"
    """
    InstanceType enum ml.c5d.18xlarge
    """
    ML_C5D2XLARGE = "ml.c5d.2xlarge"
    """
    InstanceType enum ml.c5d.2xlarge
    """
    ML_C5D4XLARGE = "ml.c5d.4xlarge"
    """
    InstanceType enum ml.c5d.4xlarge
    """
    ML_C5D9XLARGE = "ml.c5d.9xlarge"
    """
    InstanceType enum ml.c5d.9xlarge
    """
    ML_C5D_XLARGE = "ml.c5d.xlarge"
    """
    InstanceType enum ml.c5d.xlarge
    """
    ML_C6I12XLARGE = "ml.c6i.12xlarge"
    """
    InstanceType enum ml.c6i.12xlarge
    """
    ML_C6I16XLARGE = "ml.c6i.16xlarge"
    """
    InstanceType enum ml.c6i.16xlarge
    """
    ML_C6I24XLARGE = "ml.c6i.24xlarge"
    """
    InstanceType enum ml.c6i.24xlarge
    """
    ML_C6I2XLARGE = "ml.c6i.2xlarge"
    """
    InstanceType enum ml.c6i.2xlarge
    """
    ML_C6I32XLARGE = "ml.c6i.32xlarge"
    """
    InstanceType enum ml.c6i.32xlarge
    """
    ML_C6I4XLARGE = "ml.c6i.4xlarge"
    """
    InstanceType enum ml.c6i.4xlarge
    """
    ML_C6I8XLARGE = "ml.c6i.8xlarge"
    """
    InstanceType enum ml.c6i.8xlarge
    """
    ML_C6I_LARGE = "ml.c6i.large"
    """
    InstanceType enum ml.c6i.large
    """
    ML_C6I_XLARGE = "ml.c6i.xlarge"
    """
    InstanceType enum ml.c6i.xlarge
    """
    ML_C6ID12XLARGE = "ml.c6id.12xlarge"
    """
    InstanceType enum ml.c6id.12xlarge
    """
    ML_C6ID16XLARGE = "ml.c6id.16xlarge"
    """
    InstanceType enum ml.c6id.16xlarge
    """
    ML_C6ID24XLARGE = "ml.c6id.24xlarge"
    """
    InstanceType enum ml.c6id.24xlarge
    """
    ML_C6ID2XLARGE = "ml.c6id.2xlarge"
    """
    InstanceType enum ml.c6id.2xlarge
    """
    ML_C6ID32XLARGE = "ml.c6id.32xlarge"
    """
    InstanceType enum ml.c6id.32xlarge
    """
    ML_C6ID4XLARGE = "ml.c6id.4xlarge"
    """
    InstanceType enum ml.c6id.4xlarge
    """
    ML_C6ID8XLARGE = "ml.c6id.8xlarge"
    """
    InstanceType enum ml.c6id.8xlarge
    """
    ML_C6ID_LARGE = "ml.c6id.large"
    """
    InstanceType enum ml.c6id.large
    """
    ML_C6ID_XLARGE = "ml.c6id.xlarge"
    """
    InstanceType enum ml.c6id.xlarge
    """
    ML_C7I12XLARGE = "ml.c7i.12xlarge"
    """
    InstanceType enum ml.c7i.12xlarge
    """
    ML_C7I16XLARGE = "ml.c7i.16xlarge"
    """
    InstanceType enum ml.c7i.16xlarge
    """
    ML_C7I24XLARGE = "ml.c7i.24xlarge"
    """
    InstanceType enum ml.c7i.24xlarge
    """
    ML_C7I2XLARGE = "ml.c7i.2xlarge"
    """
    InstanceType enum ml.c7i.2xlarge
    """
    ML_C7I48XLARGE = "ml.c7i.48xlarge"
    """
    InstanceType enum ml.c7i.48xlarge
    """
    ML_C7I4XLARGE = "ml.c7i.4xlarge"
    """
    InstanceType enum ml.c7i.4xlarge
    """
    ML_C7I8XLARGE = "ml.c7i.8xlarge"
    """
    InstanceType enum ml.c7i.8xlarge
    """
    ML_C7I_LARGE = "ml.c7i.large"
    """
    InstanceType enum ml.c7i.large
    """
    ML_C7I_XLARGE = "ml.c7i.xlarge"
    """
    InstanceType enum ml.c7i.xlarge
    """
    ML_G4DN12XLARGE = "ml.g4dn.12xlarge"
    """
    InstanceType enum ml.g4dn.12xlarge
    """
    ML_G4DN16XLARGE = "ml.g4dn.16xlarge"
    """
    InstanceType enum ml.g4dn.16xlarge
    """
    ML_G4DN2XLARGE = "ml.g4dn.2xlarge"
    """
    InstanceType enum ml.g4dn.2xlarge
    """
    ML_G4DN4XLARGE = "ml.g4dn.4xlarge"
    """
    InstanceType enum ml.g4dn.4xlarge
    """
    ML_G4DN8XLARGE = "ml.g4dn.8xlarge"
    """
    InstanceType enum ml.g4dn.8xlarge
    """
    ML_G4DN_XLARGE = "ml.g4dn.xlarge"
    """
    InstanceType enum ml.g4dn.xlarge
    """
    ML_G512XLARGE = "ml.g5.12xlarge"
    """
    InstanceType enum ml.g5.12xlarge
    """
    ML_G516XLARGE = "ml.g5.16xlarge"
    """
    InstanceType enum ml.g5.16xlarge
    """
    ML_G524XLARGE = "ml.g5.24xlarge"
    """
    InstanceType enum ml.g5.24xlarge
    """
    ML_G52XLARGE = "ml.g5.2xlarge"
    """
    InstanceType enum ml.g5.2xlarge
    """
    ML_G548XLARGE = "ml.g5.48xlarge"
    """
    InstanceType enum ml.g5.48xlarge
    """
    ML_G54XLARGE = "ml.g5.4xlarge"
    """
    InstanceType enum ml.g5.4xlarge
    """
    ML_G58XLARGE = "ml.g5.8xlarge"
    """
    InstanceType enum ml.g5.8xlarge
    """
    ML_G5_XLARGE = "ml.g5.xlarge"
    """
    InstanceType enum ml.g5.xlarge
    """
    ML_INF124XLARGE = "ml.inf1.24xlarge"
    """
    InstanceType enum ml.inf1.24xlarge
    """
    ML_INF12XLARGE = "ml.inf1.2xlarge"
    """
    InstanceType enum ml.inf1.2xlarge
    """
    ML_INF16XLARGE = "ml.inf1.6xlarge"
    """
    InstanceType enum ml.inf1.6xlarge
    """
    ML_INF1_XLARGE = "ml.inf1.xlarge"
    """
    InstanceType enum ml.inf1.xlarge
    """
    ML_M410XLARGE = "ml.m4.10xlarge"
    """
    InstanceType enum ml.m4.10xlarge
    """
    ML_M416XLARGE = "ml.m4.16xlarge"
    """
    InstanceType enum ml.m4.16xlarge
    """
    ML_M42XLARGE = "ml.m4.2xlarge"
    """
    InstanceType enum ml.m4.2xlarge
    """
    ML_M44XLARGE = "ml.m4.4xlarge"
    """
    InstanceType enum ml.m4.4xlarge
    """
    ML_M4_XLARGE = "ml.m4.xlarge"
    """
    InstanceType enum ml.m4.xlarge
    """
    ML_M512XLARGE = "ml.m5.12xlarge"
    """
    InstanceType enum ml.m5.12xlarge
    """
    ML_M524XLARGE = "ml.m5.24xlarge"
    """
    InstanceType enum ml.m5.24xlarge
    """
    ML_M52XLARGE = "ml.m5.2xlarge"
    """
    InstanceType enum ml.m5.2xlarge
    """
    ML_M54XLARGE = "ml.m5.4xlarge"
    """
    InstanceType enum ml.m5.4xlarge
    """
    ML_M5_XLARGE = "ml.m5.xlarge"
    """
    InstanceType enum ml.m5.xlarge
    """
    ML_M5D12XLARGE = "ml.m5d.12xlarge"
    """
    InstanceType enum ml.m5d.12xlarge
    """
    ML_M5D16XLARGE = "ml.m5d.16xlarge"
    """
    InstanceType enum ml.m5d.16xlarge
    """
    ML_M5D24XLARGE = "ml.m5d.24xlarge"
    """
    InstanceType enum ml.m5d.24xlarge
    """
    ML_M5D2XLARGE = "ml.m5d.2xlarge"
    """
    InstanceType enum ml.m5d.2xlarge
    """
    ML_M5D4XLARGE = "ml.m5d.4xlarge"
    """
    InstanceType enum ml.m5d.4xlarge
    """
    ML_M5D8XLARGE = "ml.m5d.8xlarge"
    """
    InstanceType enum ml.m5d.8xlarge
    """
    ML_M5D_LARGE = "ml.m5d.large"
    """
    InstanceType enum ml.m5d.large
    """
    ML_M5D_XLARGE = "ml.m5d.xlarge"
    """
    InstanceType enum ml.m5d.xlarge
    """
    ML_M6I12XLARGE = "ml.m6i.12xlarge"
    """
    InstanceType enum ml.m6i.12xlarge
    """
    ML_M6I16XLARGE = "ml.m6i.16xlarge"
    """
    InstanceType enum ml.m6i.16xlarge
    """
    ML_M6I24XLARGE = "ml.m6i.24xlarge"
    """
    InstanceType enum ml.m6i.24xlarge
    """
    ML_M6I2XLARGE = "ml.m6i.2xlarge"
    """
    InstanceType enum ml.m6i.2xlarge
    """
    ML_M6I32XLARGE = "ml.m6i.32xlarge"
    """
    InstanceType enum ml.m6i.32xlarge
    """
    ML_M6I4XLARGE = "ml.m6i.4xlarge"
    """
    InstanceType enum ml.m6i.4xlarge
    """
    ML_M6I8XLARGE = "ml.m6i.8xlarge"
    """
    InstanceType enum ml.m6i.8xlarge
    """
    ML_M6I_LARGE = "ml.m6i.large"
    """
    InstanceType enum ml.m6i.large
    """
    ML_M6I_XLARGE = "ml.m6i.xlarge"
    """
    InstanceType enum ml.m6i.xlarge
    """
    ML_M6ID12XLARGE = "ml.m6id.12xlarge"
    """
    InstanceType enum ml.m6id.12xlarge
    """
    ML_M6ID16XLARGE = "ml.m6id.16xlarge"
    """
    InstanceType enum ml.m6id.16xlarge
    """
    ML_M6ID24XLARGE = "ml.m6id.24xlarge"
    """
    InstanceType enum ml.m6id.24xlarge
    """
    ML_M6ID2XLARGE = "ml.m6id.2xlarge"
    """
    InstanceType enum ml.m6id.2xlarge
    """
    ML_M6ID32XLARGE = "ml.m6id.32xlarge"
    """
    InstanceType enum ml.m6id.32xlarge
    """
    ML_M6ID4XLARGE = "ml.m6id.4xlarge"
    """
    InstanceType enum ml.m6id.4xlarge
    """
    ML_M6ID8XLARGE = "ml.m6id.8xlarge"
    """
    InstanceType enum ml.m6id.8xlarge
    """
    ML_M6ID_LARGE = "ml.m6id.large"
    """
    InstanceType enum ml.m6id.large
    """
    ML_M6ID_XLARGE = "ml.m6id.xlarge"
    """
    InstanceType enum ml.m6id.xlarge
    """
    ML_M7I12XLARGE = "ml.m7i.12xlarge"
    """
    InstanceType enum ml.m7i.12xlarge
    """
    ML_M7I16XLARGE = "ml.m7i.16xlarge"
    """
    InstanceType enum ml.m7i.16xlarge
    """
    ML_M7I24XLARGE = "ml.m7i.24xlarge"
    """
    InstanceType enum ml.m7i.24xlarge
    """
    ML_M7I2XLARGE = "ml.m7i.2xlarge"
    """
    InstanceType enum ml.m7i.2xlarge
    """
    ML_M7I48XLARGE = "ml.m7i.48xlarge"
    """
    InstanceType enum ml.m7i.48xlarge
    """
    ML_M7I4XLARGE = "ml.m7i.4xlarge"
    """
    InstanceType enum ml.m7i.4xlarge
    """
    ML_M7I8XLARGE = "ml.m7i.8xlarge"
    """
    InstanceType enum ml.m7i.8xlarge
    """
    ML_M7I_LARGE = "ml.m7i.large"
    """
    InstanceType enum ml.m7i.large
    """
    ML_M7I_XLARGE = "ml.m7i.xlarge"
    """
    InstanceType enum ml.m7i.xlarge
    """
    ML_P216XLARGE = "ml.p2.16xlarge"
    """
    InstanceType enum ml.p2.16xlarge
    """
    ML_P28XLARGE = "ml.p2.8xlarge"
    """
    InstanceType enum ml.p2.8xlarge
    """
    ML_P2_XLARGE = "ml.p2.xlarge"
    """
    InstanceType enum ml.p2.xlarge
    """
    ML_P316XLARGE = "ml.p3.16xlarge"
    """
    InstanceType enum ml.p3.16xlarge
    """
    ML_P32XLARGE = "ml.p3.2xlarge"
    """
    InstanceType enum ml.p3.2xlarge
    """
    ML_P38XLARGE = "ml.p3.8xlarge"
    """
    InstanceType enum ml.p3.8xlarge
    """
    ML_P3DN24XLARGE = "ml.p3dn.24xlarge"
    """
    InstanceType enum ml.p3dn.24xlarge
    """
    ML_P4D24XLARGE = "ml.p4d.24xlarge"
    """
    InstanceType enum ml.p4d.24xlarge
    """
    ML_P4DE24XLARGE = "ml.p4de.24xlarge"
    """
    InstanceType enum ml.p4de.24xlarge
    """
    ML_P548XLARGE = "ml.p5.48xlarge"
    """
    InstanceType enum ml.p5.48xlarge
    """
    ML_R512XLARGE = "ml.r5.12xlarge"
    """
    InstanceType enum ml.r5.12xlarge
    """
    ML_R516XLARGE = "ml.r5.16xlarge"
    """
    InstanceType enum ml.r5.16xlarge
    """
    ML_R524XLARGE = "ml.r5.24xlarge"
    """
    InstanceType enum ml.r5.24xlarge
    """
    ML_R52XLARGE = "ml.r5.2xlarge"
    """
    InstanceType enum ml.r5.2xlarge
    """
    ML_R54XLARGE = "ml.r5.4xlarge"
    """
    InstanceType enum ml.r5.4xlarge
    """
    ML_R58XLARGE = "ml.r5.8xlarge"
    """
    InstanceType enum ml.r5.8xlarge
    """
    ML_R5_LARGE = "ml.r5.large"
    """
    InstanceType enum ml.r5.large
    """
    ML_R5_XLARGE = "ml.r5.xlarge"
    """
    InstanceType enum ml.r5.xlarge
    """
    ML_R6I12XLARGE = "ml.r6i.12xlarge"
    """
    InstanceType enum ml.r6i.12xlarge
    """
    ML_R6I16XLARGE = "ml.r6i.16xlarge"
    """
    InstanceType enum ml.r6i.16xlarge
    """
    ML_R6I24XLARGE = "ml.r6i.24xlarge"
    """
    InstanceType enum ml.r6i.24xlarge
    """
    ML_R6I2XLARGE = "ml.r6i.2xlarge"
    """
    InstanceType enum ml.r6i.2xlarge
    """
    ML_R6I32XLARGE = "ml.r6i.32xlarge"
    """
    InstanceType enum ml.r6i.32xlarge
    """
    ML_R6I4XLARGE = "ml.r6i.4xlarge"
    """
    InstanceType enum ml.r6i.4xlarge
    """
    ML_R6I8XLARGE = "ml.r6i.8xlarge"
    """
    InstanceType enum ml.r6i.8xlarge
    """
    ML_R6I_LARGE = "ml.r6i.large"
    """
    InstanceType enum ml.r6i.large
    """
    ML_R6I_XLARGE = "ml.r6i.xlarge"
    """
    InstanceType enum ml.r6i.xlarge
    """
    ML_R6ID12XLARGE = "ml.r6id.12xlarge"
    """
    InstanceType enum ml.r6id.12xlarge
    """
    ML_R6ID16XLARGE = "ml.r6id.16xlarge"
    """
    InstanceType enum ml.r6id.16xlarge
    """
    ML_R6ID24XLARGE = "ml.r6id.24xlarge"
    """
    InstanceType enum ml.r6id.24xlarge
    """
    ML_R6ID2XLARGE = "ml.r6id.2xlarge"
    """
    InstanceType enum ml.r6id.2xlarge
    """
    ML_R6ID32XLARGE = "ml.r6id.32xlarge"
    """
    InstanceType enum ml.r6id.32xlarge
    """
    ML_R6ID4XLARGE = "ml.r6id.4xlarge"
    """
    InstanceType enum ml.r6id.4xlarge
    """
    ML_R6ID8XLARGE = "ml.r6id.8xlarge"
    """
    InstanceType enum ml.r6id.8xlarge
    """
    ML_R6ID_LARGE = "ml.r6id.large"
    """
    InstanceType enum ml.r6id.large
    """
    ML_R6ID_XLARGE = "ml.r6id.xlarge"
    """
    InstanceType enum ml.r6id.xlarge
    """
    ML_R7I12XLARGE = "ml.r7i.12xlarge"
    """
    InstanceType enum ml.r7i.12xlarge
    """
    ML_R7I16XLARGE = "ml.r7i.16xlarge"
    """
    InstanceType enum ml.r7i.16xlarge
    """
    ML_R7I24XLARGE = "ml.r7i.24xlarge"
    """
    InstanceType enum ml.r7i.24xlarge
    """
    ML_R7I2XLARGE = "ml.r7i.2xlarge"
    """
    InstanceType enum ml.r7i.2xlarge
    """
    ML_R7I48XLARGE = "ml.r7i.48xlarge"
    """
    InstanceType enum ml.r7i.48xlarge
    """
    ML_R7I4XLARGE = "ml.r7i.4xlarge"
    """
    InstanceType enum ml.r7i.4xlarge
    """
    ML_R7I8XLARGE = "ml.r7i.8xlarge"
    """
    InstanceType enum ml.r7i.8xlarge
    """
    ML_R7I_LARGE = "ml.r7i.large"
    """
    InstanceType enum ml.r7i.large
    """
    ML_R7I_XLARGE = "ml.r7i.xlarge"
    """
    InstanceType enum ml.r7i.xlarge
    """
    ML_T22XLARGE = "ml.t2.2xlarge"
    """
    InstanceType enum ml.t2.2xlarge
    """
    ML_T2_LARGE = "ml.t2.large"
    """
    InstanceType enum ml.t2.large
    """
    ML_T2_MEDIUM = "ml.t2.medium"
    """
    InstanceType enum ml.t2.medium
    """
    ML_T2_XLARGE = "ml.t2.xlarge"
    """
    InstanceType enum ml.t2.xlarge
    """
    ML_T32XLARGE = "ml.t3.2xlarge"
    """
    InstanceType enum ml.t3.2xlarge
    """
    ML_T3_LARGE = "ml.t3.large"
    """
    InstanceType enum ml.t3.large
    """
    ML_T3_MEDIUM = "ml.t3.medium"
    """
    InstanceType enum ml.t3.medium
    """
    ML_T3_XLARGE = "ml.t3.xlarge"
    """
    InstanceType enum ml.t3.xlarge
    """


class IntelligentTieringConfigurationStatus(str, Enum):
    """
    Specifies the status of the configuration.
    """
    DISABLED = "Disabled"
    """
    IntelligentTieringConfigurationStatus enum Disabled
    """
    ENABLED = "Enabled"
    """
    IntelligentTieringConfigurationStatus enum Enabled
    """


class InventoryConfigurationIncludedObjectVersions(str, Enum):
    """
    Object versions to include in the inventory list. If set to ``All``, the list includes all the object versions, which adds the version-related fields ``VersionId``, ``IsLatest``, and ``DeleteMarker`` to the list. If set to ``Current``, the list does not contain these version-related fields.
    """
    ALL = "All"
    """
    InventoryConfigurationIncludedObjectVersions enum All
    """
    CURRENT = "Current"
    """
    InventoryConfigurationIncludedObjectVersions enum Current
    """


class InventoryConfigurationOptionalFields(str, Enum):
    """
    InventoryConfigurationOptionalFields enum
    """
    BUCKET_KEY_STATUS = "BucketKeyStatus"
    """
    InventoryConfigurationOptionalFields enum BucketKeyStatus
    """
    CHECKSUM_ALGORITHM = "ChecksumAlgorithm"
    """
    InventoryConfigurationOptionalFields enum ChecksumAlgorithm
    """
    E_TAG = "ETag"
    """
    InventoryConfigurationOptionalFields enum ETag
    """
    ENCRYPTION_STATUS = "EncryptionStatus"
    """
    InventoryConfigurationOptionalFields enum EncryptionStatus
    """
    INTELLIGENT_TIERING_ACCESS_TIER = "IntelligentTieringAccessTier"
    """
    InventoryConfigurationOptionalFields enum IntelligentTieringAccessTier
    """
    IS_MULTIPART_UPLOADED = "IsMultipartUploaded"
    """
    InventoryConfigurationOptionalFields enum IsMultipartUploaded
    """
    LAST_MODIFIED_DATE = "LastModifiedDate"
    """
    InventoryConfigurationOptionalFields enum LastModifiedDate
    """
    OBJECT_ACCESS_CONTROL_LIST = "ObjectAccessControlList"
    """
    InventoryConfigurationOptionalFields enum ObjectAccessControlList
    """
    OBJECT_LOCK_LEGAL_HOLD_STATUS = "ObjectLockLegalHoldStatus"
    """
    InventoryConfigurationOptionalFields enum ObjectLockLegalHoldStatus
    """
    OBJECT_LOCK_MODE = "ObjectLockMode"
    """
    InventoryConfigurationOptionalFields enum ObjectLockMode
    """
    OBJECT_LOCK_RETAIN_UNTIL_DATE = "ObjectLockRetainUntilDate"
    """
    InventoryConfigurationOptionalFields enum ObjectLockRetainUntilDate
    """
    OBJECT_OWNER = "ObjectOwner"
    """
    InventoryConfigurationOptionalFields enum ObjectOwner
    """
    REPLICATION_STATUS = "ReplicationStatus"
    """
    InventoryConfigurationOptionalFields enum ReplicationStatus
    """
    SIZE = "Size"
    """
    InventoryConfigurationOptionalFields enum Size
    """
    STORAGE_CLASS = "StorageClass"
    """
    InventoryConfigurationOptionalFields enum StorageClass
    """


class InventoryConfigurationScheduleFrequency(str, Enum):
    """
    Specifies the schedule for generating inventory results.
    """
    DAILY = "Daily"
    """
    InventoryConfigurationScheduleFrequency enum Daily
    """
    WEEKLY = "Weekly"
    """
    InventoryConfigurationScheduleFrequency enum Weekly
    """


class IpFamily(str, Enum):
    """
    Property value
    """
    IPV4 = "ipv4"
    """
    IpFamily enum ipv4
    """
    IPV6 = "ipv6"
    """
    IpFamily enum ipv6
    """


class IpamState(str, Enum):
    """
    Property value
    """
    CREATE_COMPLETE = "create-complete"
    """
    IpamState enum create-complete
    """
    CREATE_FAILED = "create-failed"
    """
    IpamState enum create-failed
    """
    CREATE_IN_PROGRESS = "create-in-progress"
    """
    IpamState enum create-in-progress
    """
    DELETE_COMPLETE = "delete-complete"
    """
    IpamState enum delete-complete
    """
    DELETE_FAILED = "delete-failed"
    """
    IpamState enum delete-failed
    """
    DELETE_IN_PROGRESS = "delete-in-progress"
    """
    IpamState enum delete-in-progress
    """
    ISOLATE_COMPLETE = "isolate-complete"
    """
    IpamState enum isolate-complete
    """
    ISOLATE_IN_PROGRESS = "isolate-in-progress"
    """
    IpamState enum isolate-in-progress
    """
    MODIFY_COMPLETE = "modify-complete"
    """
    IpamState enum modify-complete
    """
    MODIFY_FAILED = "modify-failed"
    """
    IpamState enum modify-failed
    """
    MODIFY_IN_PROGRESS = "modify-in-progress"
    """
    IpamState enum modify-in-progress
    """
    RESTORE_IN_PROGRESS = "restore-in-progress"
    """
    IpamState enum restore-in-progress
    """


class IpamTier(str, Enum):
    """
    Property value
    """
    ADVANCED = "advanced"
    """
    IpamTier enum advanced
    """
    FREE = "free"
    """
    IpamTier enum free
    """


class JobComparator(str, Enum):
    """
    Property value
    """
    CONTAINS = "CONTAINS"
    """
    JobComparator enum CONTAINS
    """
    EQ = "EQ"
    """
    JobComparator enum EQ
    """
    GT = "GT"
    """
    JobComparator enum GT
    """
    GTE = "GTE"
    """
    JobComparator enum GTE
    """
    LT = "LT"
    """
    JobComparator enum LT
    """
    LTE = "LTE"
    """
    JobComparator enum LTE
    """
    NE = "NE"
    """
    JobComparator enum NE
    """
    START_S_WITH = "STARTS_WITH"
    """
    JobComparator enum STARTS_WITH
    """


class JobStatus(str, Enum):
    """
    Property value
    """
    CANCELLED = "CANCELLED"
    """
    JobStatus enum CANCELLED
    """
    COMPLETE = "COMPLETE"
    """
    JobStatus enum COMPLETE
    """
    IDLE = "IDLE"
    """
    JobStatus enum IDLE
    """
    PAUSED = "PAUSED"
    """
    JobStatus enum PAUSED
    """
    RUNNING = "RUNNING"
    """
    JobStatus enum RUNNING
    """
    USE_R_PAUSED = "USER_PAUSED"
    """
    JobStatus enum USER_PAUSED
    """


class JobType(str, Enum):
    """
    Property value
    """
    ON_E_TIME = "ONE_TIME"
    """
    JobType enum ONE_TIME
    """
    SCHEDULED = "SCHEDULED"
    """
    JobType enum SCHEDULED
    """


class JoinedMethod(str, Enum):
    """
    The method by which the account joined the organization.
    """
    CREATED = "CREATED"
    """
    JoinedMethod enum CREATED
    """
    INVITED = "INVITED"
    """
    JoinedMethod enum INVITED
    """


class KeyAlgorithm(str, Enum):
    """
    Property value
    """
    E_C_PRIME256V1 = "EC_prime256v1"
    """
    KeyAlgorithm enum EC_prime256v1
    """
    E_C_SECP384R1 = "EC_secp384r1"
    """
    KeyAlgorithm enum EC_secp384r1
    """
    E_C_SECP521R1 = "EC_secp521r1"
    """
    KeyAlgorithm enum EC_secp521r1
    """
    RS_A_1024 = "RSA_1024"
    """
    KeyAlgorithm enum RSA_1024
    """
    RS_A_2048 = "RSA_2048"
    """
    KeyAlgorithm enum RSA_2048
    """
    RS_A_3072 = "RSA_3072"
    """
    KeyAlgorithm enum RSA_3072
    """
    RS_A_4096 = "RSA_4096"
    """
    KeyAlgorithm enum RSA_4096
    """


class KeyFormat(str, Enum):
    """
    The format of the key pair. Default: ``pem``
    """
    PEM = "pem"
    """
    KeyFormat enum pem
    """
    PPK = "ppk"
    """
    KeyFormat enum ppk
    """


class KeySpec(str, Enum):
    """
    Specifies the type of KMS key to create. The default value, ``SYMMETRIC_DEFAULT``, creates a KMS key with a 256-bit symmetric key for encryption and decryption. In China Regions, ``SYMMETRIC_DEFAULT`` creates a 128-bit symmetric key that uses SM4 encryption. You can't change the ``KeySpec`` value after the KMS key is created. For help choosing a key spec for your KMS key, see [Choosing a KMS key type](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html) in the *Developer Guide*. The ``KeySpec`` property determines the type of key material in the KMS key and the algorithms that the KMS key supports. To further restrict the algorithms that can be used with the KMS key, use a condition key in its key policy or IAM policy. For more information, see [condition keys](https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms) in the *Developer Guide*.  If you change the value of the ``KeySpec`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This prevents you from accidentally deleting a KMS key by changing an immutable property value.    [services that are integrated with](https://docs.aws.amazon.com/kms/features/#AWS_Service_Integration) use symmetric encryption KMS keys to protect your data. These services do not support encryption with asymmetric KMS keys. For help determining whether a KMS key is asymmetric, see [Identifying asymmetric KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/find-symm-asymm.html) in the *Developer Guide*.   KMS supports the following key specs for KMS keys:  +  Symmetric encryption key (default)  +   ``SYMMETRIC_DEFAULT`` (AES-256-GCM)    +  HMAC keys (symmetric)  +   ``HMAC_224``   +   ``HMAC_256``   +   ``HMAC_384``   +   ``HMAC_512``     +  Asymmetric RSA key pairs  +   ``RSA_2048``   +   ``RSA_3072``   +   ``RSA_4096``     +  Asymmetric NIST-recommended elliptic curve key pairs  +   ``ECC_NIST_P256`` (secp256r1)  +   ``ECC_NIST_P384`` (secp384r1)  +   ``ECC_NIST_P521`` (secp521r1)    +  Other asymmetric elliptic curve key pairs  +   ``ECC_SECG_P256K1`` (secp256k1), commonly used for cryptocurrencies.    +  SM2 key pairs (China Regions only)  +   ``SM2``
    """
    EC_C_NIS_T_P256 = "ECC_NIST_P256"
    """
    KeySpec enum ECC_NIST_P256
    """
    EC_C_NIS_T_P384 = "ECC_NIST_P384"
    """
    KeySpec enum ECC_NIST_P384
    """
    EC_C_NIS_T_P521 = "ECC_NIST_P521"
    """
    KeySpec enum ECC_NIST_P521
    """
    EC_C_SEC_G_P256_K1 = "ECC_SECG_P256K1"
    """
    KeySpec enum ECC_SECG_P256K1
    """
    HMA_C_224 = "HMAC_224"
    """
    KeySpec enum HMAC_224
    """
    HMA_C_256 = "HMAC_256"
    """
    KeySpec enum HMAC_256
    """
    HMA_C_384 = "HMAC_384"
    """
    KeySpec enum HMAC_384
    """
    HMA_C_512 = "HMAC_512"
    """
    KeySpec enum HMAC_512
    """
    RS_A_2048 = "RSA_2048"
    """
    KeySpec enum RSA_2048
    """
    RS_A_3072 = "RSA_3072"
    """
    KeySpec enum RSA_3072
    """
    RS_A_4096 = "RSA_4096"
    """
    KeySpec enum RSA_4096
    """
    SM2 = "SM2"
    """
    KeySpec enum SM2
    """
    SYMMETRI_C_DEFAULT = "SYMMETRIC_DEFAULT"
    """
    KeySpec enum SYMMETRIC_DEFAULT
    """


class KeyType(str, Enum):
    """
    The type of key pair. Note that ED25519 keys are not supported for Windows instances. If the ``PublicKeyMaterial`` property is specified, the ``KeyType`` property is ignored, and the key type is inferred from the ``PublicKeyMaterial`` value. Default: ``rsa``
    """
    ED25519 = "ed25519"
    """
    KeyType enum ed25519
    """
    RSA = "rsa"
    """
    KeyType enum rsa
    """


class KeyUsage(str, Enum):
    """
    Determines the [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations) for which you can use the KMS key. The default value is ``ENCRYPT_DECRYPT``. This property is required for asymmetric KMS keys and HMAC KMS keys. You can't change the ``KeyUsage`` value after the KMS key is created.  If you change the value of the ``KeyUsage`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This prevents you from accidentally deleting a KMS key by changing an immutable property value.  Select only one valid value.  +  For symmetric encryption KMS keys, omit the property or specify ``ENCRYPT_DECRYPT``.  +  For asymmetric KMS keys with RSA key material, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``.  +  For asymmetric KMS keys with ECC key material, specify ``SIGN_VERIFY``.  +  For asymmetric KMS keys with SM2 (China Regions only) key material, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``.  +  For HMAC KMS keys, specify ``GENERATE_VERIFY_MAC``.
    """
    ENCRYP_T_DECRYPT = "ENCRYPT_DECRYPT"
    """
    KeyUsage enum ENCRYPT_DECRYPT
    """
    GENERAT_E_VERIF_Y_MAC = "GENERATE_VERIFY_MAC"
    """
    KeyUsage enum GENERATE_VERIFY_MAC
    """
    SIG_N_VERIFY = "SIGN_VERIFY"
    """
    KeyUsage enum SIGN_VERIFY
    """


class KeyUsageName(str, Enum):
    """
    KeyUsageName enum
    """
    ANY = "ANY"
    """
    KeyUsageName enum ANY
    """
    CERTIFICAT_E_SIGNING = "CERTIFICATE_SIGNING"
    """
    KeyUsageName enum CERTIFICATE_SIGNING
    """
    CR_L_SIGNING = "CRL_SIGNING"
    """
    KeyUsageName enum CRL_SIGNING
    """
    CUSTOM = "CUSTOM"
    """
    KeyUsageName enum CUSTOM
    """
    DAT_A_ENCIPHERMENT = "DATA_ENCIPHERMENT"
    """
    KeyUsageName enum DATA_ENCIPHERMENT
    """
    DECIPHE_R_ONLY = "DECIPHER_ONLY"
    """
    KeyUsageName enum DECIPHER_ONLY
    """
    DIGITA_L_SIGNATURE = "DIGITAL_SIGNATURE"
    """
    KeyUsageName enum DIGITAL_SIGNATURE
    """
    ENCIPHE_R_ONLY = "ENCIPHER_ONLY"
    """
    KeyUsageName enum ENCIPHER_ONLY
    """
    KE_Y_AGREEMENT = "KEY_AGREEMENT"
    """
    KeyUsageName enum KEY_AGREEMENT
    """
    KE_Y_ENCIPHERMENT = "KEY_ENCIPHERMENT"
    """
    KeyUsageName enum KEY_ENCIPHERMENT
    """
    NO_N_REPUDIATION = "NON_REPUDIATION"
    """
    KeyUsageName enum NON_REPUDIATION
    """


class KinesisStreamSpecificationApproximateCreationDateTimePrecision(str, Enum):
    """
    The precision for the time and date that the stream was created.
    """
    MICROSECOND = "MICROSECOND"
    """
    KinesisStreamSpecificationApproximateCreationDateTimePrecision enum MICROSECOND
    """
    MILLISECOND = "MILLISECOND"
    """
    KinesisStreamSpecificationApproximateCreationDateTimePrecision enum MILLISECOND
    """


class LastRunErrorStatusCode(str, Enum):
    """
    Property value
    """
    ERROR = "ERROR"
    """
    LastRunErrorStatusCode enum ERROR
    """
    NONE = "NONE"
    """
    LastRunErrorStatusCode enum NONE
    """


class LaunchType(str, Enum):
    """
    The launch type on which to run your service. For more information, see [Amazon ECS Launch Types](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) in the *Amazon Elastic Container Service Developer Guide*.
    """
    EC2 = "EC2"
    """
    LaunchType enum EC2
    """
    EXTERNAL = "EXTERNAL"
    """
    LaunchType enum EXTERNAL
    """
    FARGATE = "FARGATE"
    """
    LaunchType enum FARGATE
    """


class LogDestinationType(str, Enum):
    """
    Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3.
    """
    CLOUD_WATCH_LOGS = "cloud-watch-logs"
    """
    LogDestinationType enum cloud-watch-logs
    """
    KINESIS_DATA_FIREHOSE = "kinesis-data-firehose"
    """
    LogDestinationType enum kinesis-data-firehose
    """
    S3 = "s3"
    """
    LogDestinationType enum s3
    """


class LogGroupClass(str, Enum):
    """
    Specifies the log group class for this log group. There are two classes:  +  The ``Standard`` log class supports all CWL features.  +  The ``Infrequent Access`` log class supports a subset of CWL features and incurs lower costs.   For details about the features supported by each class, see [Log classes](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html)
    """
    INFREQUEN_T_ACCESS = "INFREQUENT_ACCESS"
    """
    LogGroupClass enum INFREQUENT_ACCESS
    """
    STANDARD = "STANDARD"
    """
    LogGroupClass enum STANDARD
    """


class LogType(str, Enum):
    """
    LogType enum
    """
    API = "api"
    """
    LogType enum api
    """
    AUDIT = "audit"
    """
    LogType enum audit
    """
    AUTHENTICATOR = "authenticator"
    """
    LogType enum authenticator
    """
    CONTROLLER_MANAGER = "controllerManager"
    """
    LogType enum controllerManager
    """
    SCHEDULER = "scheduler"
    """
    LogType enum scheduler
    """


class LoggingConfigApplicationLogLevel(str, Enum):
    """
    Set this property to filter the application logs for your function that Lambda sends to CloudWatch. Lambda only sends application logs at the selected level of detail and lower, where ``TRACE`` is the highest level and ``FATAL`` is the lowest.
    """
    DEBUG = "DEBUG"
    """
    LoggingConfigApplicationLogLevel enum DEBUG
    """
    ERROR = "ERROR"
    """
    LoggingConfigApplicationLogLevel enum ERROR
    """
    FATAL = "FATAL"
    """
    LoggingConfigApplicationLogLevel enum FATAL
    """
    INFO = "INFO"
    """
    LoggingConfigApplicationLogLevel enum INFO
    """
    TRACE = "TRACE"
    """
    LoggingConfigApplicationLogLevel enum TRACE
    """
    WARN = "WARN"
    """
    LoggingConfigApplicationLogLevel enum WARN
    """


class LoggingConfigLogFormat(str, Enum):
    """
    The format in which Lambda sends your function's application and system logs to CloudWatch. Select between plain text and structured JSON.
    """
    JSON = "JSON"
    """
    LoggingConfigLogFormat enum JSON
    """
    TEXT = "Text"
    """
    LoggingConfigLogFormat enum Text
    """


class LoggingConfigProtocol(str, Enum):
    """
    Property protocol
    """
    APPLICATION = "application"
    """
    LoggingConfigProtocol enum application
    """
    FIREHOSE = "firehose"
    """
    LoggingConfigProtocol enum firehose
    """
    HTTP_S = "http/s"
    """
    LoggingConfigProtocol enum http/s
    """
    LAMBDA_ = "lambda"
    """
    LoggingConfigProtocol enum lambda
    """
    SQS = "sqs"
    """
    LoggingConfigProtocol enum sqs
    """


class LoggingConfigSystemLogLevel(str, Enum):
    """
    Set this property to filter the system logs for your function that Lambda sends to CloudWatch. Lambda only sends system logs at the selected level of detail and lower, where ``DEBUG`` is the highest level and ``WARN`` is the lowest.
    """
    DEBUG = "DEBUG"
    """
    LoggingConfigSystemLogLevel enum DEBUG
    """
    INFO = "INFO"
    """
    LoggingConfigSystemLogLevel enum INFO
    """
    WARN = "WARN"
    """
    LoggingConfigSystemLogLevel enum WARN
    """


class LogsConfigStatusType(str, Enum):
    """
    Property value
    """
    DISABLED = "DISABLED"
    """
    LogsConfigStatusType enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    LogsConfigStatusType enum ENABLED
    """


class MaximumExecutionFrequency(str, Enum):
    """
    Property value
    """
    ONE_HOUR = "One_Hour"
    """
    MaximumExecutionFrequency enum One_Hour
    """
    SIX_HOURS = "Six_Hours"
    """
    MaximumExecutionFrequency enum Six_Hours
    """
    THREE_HOURS = "Three_Hours"
    """
    MaximumExecutionFrequency enum Three_Hours
    """
    TWELVE_HOURS = "Twelve_Hours"
    """
    MaximumExecutionFrequency enum Twelve_Hours
    """
    TWENTY_FOUR_HOURS = "TwentyFour_Hours"
    """
    MaximumExecutionFrequency enum TwentyFour_Hours
    """


class MetricTransformationUnit(str, Enum):
    """
    The unit to assign to the metric. If you omit this, the unit is set as ``None``.
    """
    BITS = "Bits"
    """
    MetricTransformationUnit enum Bits
    """
    BITS_SECOND = "Bits/Second"
    """
    MetricTransformationUnit enum Bits/Second
    """
    BYTES = "Bytes"
    """
    MetricTransformationUnit enum Bytes
    """
    BYTES_SECOND = "Bytes/Second"
    """
    MetricTransformationUnit enum Bytes/Second
    """
    COUNT = "Count"
    """
    MetricTransformationUnit enum Count
    """
    COUNT_SECOND = "Count/Second"
    """
    MetricTransformationUnit enum Count/Second
    """
    GIGABITS = "Gigabits"
    """
    MetricTransformationUnit enum Gigabits
    """
    GIGABITS_SECOND = "Gigabits/Second"
    """
    MetricTransformationUnit enum Gigabits/Second
    """
    GIGABYTES = "Gigabytes"
    """
    MetricTransformationUnit enum Gigabytes
    """
    GIGABYTES_SECOND = "Gigabytes/Second"
    """
    MetricTransformationUnit enum Gigabytes/Second
    """
    KILOBITS = "Kilobits"
    """
    MetricTransformationUnit enum Kilobits
    """
    KILOBITS_SECOND = "Kilobits/Second"
    """
    MetricTransformationUnit enum Kilobits/Second
    """
    KILOBYTES = "Kilobytes"
    """
    MetricTransformationUnit enum Kilobytes
    """
    KILOBYTES_SECOND = "Kilobytes/Second"
    """
    MetricTransformationUnit enum Kilobytes/Second
    """
    MEGABITS = "Megabits"
    """
    MetricTransformationUnit enum Megabits
    """
    MEGABITS_SECOND = "Megabits/Second"
    """
    MetricTransformationUnit enum Megabits/Second
    """
    MEGABYTES = "Megabytes"
    """
    MetricTransformationUnit enum Megabytes
    """
    MEGABYTES_SECOND = "Megabytes/Second"
    """
    MetricTransformationUnit enum Megabytes/Second
    """
    MICROSECONDS = "Microseconds"
    """
    MetricTransformationUnit enum Microseconds
    """
    MILLISECONDS = "Milliseconds"
    """
    MetricTransformationUnit enum Milliseconds
    """
    NONE = "None"
    """
    MetricTransformationUnit enum None
    """
    PERCENT = "Percent"
    """
    MetricTransformationUnit enum Percent
    """
    SECONDS = "Seconds"
    """
    MetricTransformationUnit enum Seconds
    """
    TERABITS = "Terabits"
    """
    MetricTransformationUnit enum Terabits
    """
    TERABITS_SECOND = "Terabits/Second"
    """
    MetricTransformationUnit enum Terabits/Second
    """
    TERABYTES = "Terabytes"
    """
    MetricTransformationUnit enum Terabytes
    """
    TERABYTES_SECOND = "Terabytes/Second"
    """
    MetricTransformationUnit enum Terabytes/Second
    """


class MetricsStatus(str, Enum):
    """
    Specifies whether the replication metrics are enabled.
    """
    DISABLED = "Disabled"
    """
    MetricsStatus enum Disabled
    """
    ENABLED = "Enabled"
    """
    MetricsStatus enum Enabled
    """


class MitigationInEffectEnum(str, Enum):
    """
    Property value
    """
    NO = "no"
    """
    MitigationInEffectEnum enum no
    """
    YES = "yes"
    """
    MitigationInEffectEnum enum yes
    """


class MonitoringState(str, Enum):
    """
    Property value
    """
    DISABLED = "disabled"
    """
    MonitoringState enum disabled
    """
    DISABLING = "disabling"
    """
    MonitoringState enum disabling
    """
    ENABLED = "enabled"
    """
    MonitoringState enum enabled
    """
    PENDING = "pending"
    """
    MonitoringState enum pending
    """


class NetworkInterfaceStatus(str, Enum):
    """
    Property value
    """
    ASSOCIATED = "associated"
    """
    NetworkInterfaceStatus enum associated
    """
    ATTACHING = "attaching"
    """
    NetworkInterfaceStatus enum attaching
    """
    AVAILABLE = "available"
    """
    NetworkInterfaceStatus enum available
    """
    DETACHING = "detaching"
    """
    NetworkInterfaceStatus enum detaching
    """
    IN_USE = "in-use"
    """
    NetworkInterfaceStatus enum in-use
    """


class NetworkOrigin(str, Enum):
    """
    Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise, NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and bucket access policies.
    """
    INTERNET = "Internet"
    """
    NetworkOrigin enum Internet
    """
    VPC = "VPC"
    """
    NetworkOrigin enum VPC
    """


class NoncurrentVersionTransitionStorageClass(str, Enum):
    """
    The class of storage used to store the object.
    """
    DEE_P_ARCHIVE = "DEEP_ARCHIVE"
    """
    NoncurrentVersionTransitionStorageClass enum DEEP_ARCHIVE
    """
    GLACIER = "GLACIER"
    """
    NoncurrentVersionTransitionStorageClass enum GLACIER
    """
    GLACIE_R_IR = "GLACIER_IR"
    """
    NoncurrentVersionTransitionStorageClass enum GLACIER_IR
    """
    INTELLIGEN_T_TIERING = "INTELLIGENT_TIERING"
    """
    NoncurrentVersionTransitionStorageClass enum INTELLIGENT_TIERING
    """
    ONEZON_E_IA = "ONEZONE_IA"
    """
    NoncurrentVersionTransitionStorageClass enum ONEZONE_IA
    """
    STANDAR_D_IA = "STANDARD_IA"
    """
    NoncurrentVersionTransitionStorageClass enum STANDARD_IA
    """


class NotebookInstanceStatus(str, Enum):
    """
    Property value
    """
    DELETING = "Deleting"
    """
    NotebookInstanceStatus enum Deleting
    """
    FAILED = "Failed"
    """
    NotebookInstanceStatus enum Failed
    """
    IN_SERVICE = "InService"
    """
    NotebookInstanceStatus enum InService
    """
    PENDING = "Pending"
    """
    NotebookInstanceStatus enum Pending
    """
    STOPPED = "Stopped"
    """
    NotebookInstanceStatus enum Stopped
    """
    STOPPING = "Stopping"
    """
    NotebookInstanceStatus enum Stopping
    """
    UPDATING = "Updating"
    """
    NotebookInstanceStatus enum Updating
    """


class OpenSearchPartitionInstanceType(str, Enum):
    """
    Property value
    """
    C42XLARGE_SEARCH = "c4.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c4.2xlarge.search
    """
    C44XLARGE_SEARCH = "c4.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c4.4xlarge.search
    """
    C48XLARGE_SEARCH = "c4.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c4.8xlarge.search
    """
    C4_LARGE_SEARCH = "c4.large.search"
    """
    OpenSearchPartitionInstanceType enum c4.large.search
    """
    C4_XLARGE_SEARCH = "c4.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c4.xlarge.search
    """
    C518XLARGE_SEARCH = "c5.18xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c5.18xlarge.search
    """
    C52XLARGE_SEARCH = "c5.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c5.2xlarge.search
    """
    C54XLARGE_SEARCH = "c5.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c5.4xlarge.search
    """
    C59XLARGE_SEARCH = "c5.9xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c5.9xlarge.search
    """
    C5_LARGE_SEARCH = "c5.large.search"
    """
    OpenSearchPartitionInstanceType enum c5.large.search
    """
    C5_XLARGE_SEARCH = "c5.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c5.xlarge.search
    """
    C6G12XLARGE_SEARCH = "c6g.12xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c6g.12xlarge.search
    """
    C6G2XLARGE_SEARCH = "c6g.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c6g.2xlarge.search
    """
    C6G4XLARGE_SEARCH = "c6g.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c6g.4xlarge.search
    """
    C6G8XLARGE_SEARCH = "c6g.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c6g.8xlarge.search
    """
    C6G_LARGE_SEARCH = "c6g.large.search"
    """
    OpenSearchPartitionInstanceType enum c6g.large.search
    """
    C6G_XLARGE_SEARCH = "c6g.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum c6g.xlarge.search
    """
    D22XLARGE_SEARCH = "d2.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum d2.2xlarge.search
    """
    D24XLARGE_SEARCH = "d2.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum d2.4xlarge.search
    """
    D28XLARGE_SEARCH = "d2.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum d2.8xlarge.search
    """
    D2_XLARGE_SEARCH = "d2.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum d2.xlarge.search
    """
    I22XLARGE_SEARCH = "i2.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum i2.2xlarge.search
    """
    I2_XLARGE_SEARCH = "i2.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum i2.xlarge.search
    """
    I316XLARGE_SEARCH = "i3.16xlarge.search"
    """
    OpenSearchPartitionInstanceType enum i3.16xlarge.search
    """
    I32XLARGE_SEARCH = "i3.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum i3.2xlarge.search
    """
    I34XLARGE_SEARCH = "i3.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum i3.4xlarge.search
    """
    I38XLARGE_SEARCH = "i3.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum i3.8xlarge.search
    """
    I3_LARGE_SEARCH = "i3.large.search"
    """
    OpenSearchPartitionInstanceType enum i3.large.search
    """
    I3_XLARGE_SEARCH = "i3.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum i3.xlarge.search
    """
    M32XLARGE_SEARCH = "m3.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m3.2xlarge.search
    """
    M3_LARGE_SEARCH = "m3.large.search"
    """
    OpenSearchPartitionInstanceType enum m3.large.search
    """
    M3_MEDIUM_SEARCH = "m3.medium.search"
    """
    OpenSearchPartitionInstanceType enum m3.medium.search
    """
    M3_XLARGE_SEARCH = "m3.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m3.xlarge.search
    """
    M410XLARGE_SEARCH = "m4.10xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m4.10xlarge.search
    """
    M42XLARGE_SEARCH = "m4.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m4.2xlarge.search
    """
    M44XLARGE_SEARCH = "m4.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m4.4xlarge.search
    """
    M4_LARGE_SEARCH = "m4.large.search"
    """
    OpenSearchPartitionInstanceType enum m4.large.search
    """
    M4_XLARGE_SEARCH = "m4.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m4.xlarge.search
    """
    M512XLARGE_SEARCH = "m5.12xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m5.12xlarge.search
    """
    M524XLARGE_SEARCH = "m5.24xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m5.24xlarge.search
    """
    M52XLARGE_SEARCH = "m5.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m5.2xlarge.search
    """
    M54XLARGE_SEARCH = "m5.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m5.4xlarge.search
    """
    M5_LARGE_SEARCH = "m5.large.search"
    """
    OpenSearchPartitionInstanceType enum m5.large.search
    """
    M5_XLARGE_SEARCH = "m5.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m5.xlarge.search
    """
    M6G12XLARGE_SEARCH = "m6g.12xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m6g.12xlarge.search
    """
    M6G2XLARGE_SEARCH = "m6g.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m6g.2xlarge.search
    """
    M6G4XLARGE_SEARCH = "m6g.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m6g.4xlarge.search
    """
    M6G8XLARGE_SEARCH = "m6g.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m6g.8xlarge.search
    """
    M6G_LARGE_SEARCH = "m6g.large.search"
    """
    OpenSearchPartitionInstanceType enum m6g.large.search
    """
    M6G_XLARGE_SEARCH = "m6g.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum m6g.xlarge.search
    """
    OR112XLARGE_SEARCH = "or1.12xlarge.search"
    """
    OpenSearchPartitionInstanceType enum or1.12xlarge.search
    """
    OR116XLARGE_SEARCH = "or1.16xlarge.search"
    """
    OpenSearchPartitionInstanceType enum or1.16xlarge.search
    """
    OR12XLARGE_SEARCH = "or1.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum or1.2xlarge.search
    """
    OR14XLARGE_SEARCH = "or1.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum or1.4xlarge.search
    """
    OR18XLARGE_SEARCH = "or1.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum or1.8xlarge.search
    """
    OR1_LARGE_SEARCH = "or1.large.search"
    """
    OpenSearchPartitionInstanceType enum or1.large.search
    """
    OR1_MEDIUM_SEARCH = "or1.medium.search"
    """
    OpenSearchPartitionInstanceType enum or1.medium.search
    """
    OR1_XLARGE_SEARCH = "or1.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum or1.xlarge.search
    """
    R32XLARGE_SEARCH = "r3.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r3.2xlarge.search
    """
    R34XLARGE_SEARCH = "r3.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r3.4xlarge.search
    """
    R38XLARGE_SEARCH = "r3.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r3.8xlarge.search
    """
    R3_LARGE_SEARCH = "r3.large.search"
    """
    OpenSearchPartitionInstanceType enum r3.large.search
    """
    R3_XLARGE_SEARCH = "r3.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r3.xlarge.search
    """
    R416XLARGE_SEARCH = "r4.16xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r4.16xlarge.search
    """
    R42XLARGE_SEARCH = "r4.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r4.2xlarge.search
    """
    R44XLARGE_SEARCH = "r4.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r4.4xlarge.search
    """
    R48XLARGE_SEARCH = "r4.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r4.8xlarge.search
    """
    R4_LARGE_SEARCH = "r4.large.search"
    """
    OpenSearchPartitionInstanceType enum r4.large.search
    """
    R4_XLARGE_SEARCH = "r4.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r4.xlarge.search
    """
    R512XLARGE_SEARCH = "r5.12xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r5.12xlarge.search
    """
    R524XLARGE_SEARCH = "r5.24xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r5.24xlarge.search
    """
    R52XLARGE_SEARCH = "r5.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r5.2xlarge.search
    """
    R54XLARGE_SEARCH = "r5.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r5.4xlarge.search
    """
    R5_LARGE_SEARCH = "r5.large.search"
    """
    OpenSearchPartitionInstanceType enum r5.large.search
    """
    R5_XLARGE_SEARCH = "r5.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r5.xlarge.search
    """
    R6G12XLARGE_SEARCH = "r6g.12xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6g.12xlarge.search
    """
    R6G2XLARGE_SEARCH = "r6g.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6g.2xlarge.search
    """
    R6G4XLARGE_SEARCH = "r6g.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6g.4xlarge.search
    """
    R6G8XLARGE_SEARCH = "r6g.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6g.8xlarge.search
    """
    R6G_LARGE_SEARCH = "r6g.large.search"
    """
    OpenSearchPartitionInstanceType enum r6g.large.search
    """
    R6G_XLARGE_SEARCH = "r6g.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6g.xlarge.search
    """
    R6GD12XLARGE_SEARCH = "r6gd.12xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6gd.12xlarge.search
    """
    R6GD16XLARGE_SEARCH = "r6gd.16xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6gd.16xlarge.search
    """
    R6GD2XLARGE_SEARCH = "r6gd.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6gd.2xlarge.search
    """
    R6GD4XLARGE_SEARCH = "r6gd.4xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6gd.4xlarge.search
    """
    R6GD8XLARGE_SEARCH = "r6gd.8xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6gd.8xlarge.search
    """
    R6GD_LARGE_SEARCH = "r6gd.large.search"
    """
    OpenSearchPartitionInstanceType enum r6gd.large.search
    """
    R6GD_XLARGE_SEARCH = "r6gd.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum r6gd.xlarge.search
    """
    T2_MEDIUM_SEARCH = "t2.medium.search"
    """
    OpenSearchPartitionInstanceType enum t2.medium.search
    """
    T2_MICRO_SEARCH = "t2.micro.search"
    """
    OpenSearchPartitionInstanceType enum t2.micro.search
    """
    T2_SMALL_SEARCH = "t2.small.search"
    """
    OpenSearchPartitionInstanceType enum t2.small.search
    """
    T32XLARGE_SEARCH = "t3.2xlarge.search"
    """
    OpenSearchPartitionInstanceType enum t3.2xlarge.search
    """
    T3_LARGE_SEARCH = "t3.large.search"
    """
    OpenSearchPartitionInstanceType enum t3.large.search
    """
    T3_MEDIUM_SEARCH = "t3.medium.search"
    """
    OpenSearchPartitionInstanceType enum t3.medium.search
    """
    T3_MICRO_SEARCH = "t3.micro.search"
    """
    OpenSearchPartitionInstanceType enum t3.micro.search
    """
    T3_NANO_SEARCH = "t3.nano.search"
    """
    OpenSearchPartitionInstanceType enum t3.nano.search
    """
    T3_SMALL_SEARCH = "t3.small.search"
    """
    OpenSearchPartitionInstanceType enum t3.small.search
    """
    T3_XLARGE_SEARCH = "t3.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum t3.xlarge.search
    """
    T4G_MEDIUM_SEARCH = "t4g.medium.search"
    """
    OpenSearchPartitionInstanceType enum t4g.medium.search
    """
    T4G_SMALL_SEARCH = "t4g.small.search"
    """
    OpenSearchPartitionInstanceType enum t4g.small.search
    """
    ULTRAWARM1_LARGE_SEARCH = "ultrawarm1.large.search"
    """
    OpenSearchPartitionInstanceType enum ultrawarm1.large.search
    """
    ULTRAWARM1_MEDIUM_SEARCH = "ultrawarm1.medium.search"
    """
    OpenSearchPartitionInstanceType enum ultrawarm1.medium.search
    """
    ULTRAWARM1_XLARGE_SEARCH = "ultrawarm1.xlarge.search"
    """
    OpenSearchPartitionInstanceType enum ultrawarm1.xlarge.search
    """


class OpenSearchWarmPartitionInstanceType(str, Enum):
    """
    Property value
    """
    ULTRAWARM1_LARGE_SEARCH = "ultrawarm1.large.search"
    """
    OpenSearchWarmPartitionInstanceType enum ultrawarm1.large.search
    """
    ULTRAWARM1_MEDIUM_SEARCH = "ultrawarm1.medium.search"
    """
    OpenSearchWarmPartitionInstanceType enum ultrawarm1.medium.search
    """
    ULTRAWARM1_XLARGE_SEARCH = "ultrawarm1.xlarge.search"
    """
    OpenSearchWarmPartitionInstanceType enum ultrawarm1.xlarge.search
    """


class OperationLevelMetricsConfig(str, Enum):
    """
    Property value
    """
    DISABLED = "DISABLED"
    """
    OperationLevelMetricsConfig enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    OperationLevelMetricsConfig enum ENABLED
    """


class OperationPreferencesRegionConcurrencyType(str, Enum):
    """
    The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
    """
    PARALLEL = "PARALLEL"
    """
    OperationPreferencesRegionConcurrencyType enum PARALLEL
    """
    SEQUENTIAL = "SEQUENTIAL"
    """
    OperationPreferencesRegionConcurrencyType enum SEQUENTIAL
    """


class Origin(str, Enum):
    """
    The source of the key material for the KMS key. You cannot change the origin after you create the KMS key. The default is ``AWS_KMS``, which means that KMS creates the key material. To [create a KMS key with no key material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-create-cmk.html) (for imported key material), set this value to ``EXTERNAL``. For more information about importing key material into KMS, see [Importing Key Material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html) in the *Developer Guide*. You can ignore ``ENABLED`` when Origin is ``EXTERNAL``. When a KMS key with Origin ``EXTERNAL`` is created, the key state is ``PENDING_IMPORT`` and ``ENABLED`` is ``false``. After you import the key material, ``ENABLED`` updated to ``true``. The KMS key can then be used for Cryptographic Operations.    CFN doesn't support creating an ``Origin`` parameter of the ``AWS_CLOUDHSM`` or ``EXTERNAL_KEY_STORE`` values.
    """
    AW_S_KMS = "AWS_KMS"
    """
    Origin enum AWS_KMS
    """
    EXTERNAL = "EXTERNAL"
    """
    Origin enum EXTERNAL
    """


class OwnershipControlsRuleObjectOwnership(str, Enum):
    """
    Specifies an object ownership rule.
    """
    BUCKET_OWNER_ENFORCED = "BucketOwnerEnforced"
    """
    OwnershipControlsRuleObjectOwnership enum BucketOwnerEnforced
    """
    BUCKET_OWNER_PREFERRED = "BucketOwnerPreferred"
    """
    OwnershipControlsRuleObjectOwnership enum BucketOwnerPreferred
    """
    OBJECT_WRITER = "ObjectWriter"
    """
    OwnershipControlsRuleObjectOwnership enum ObjectWriter
    """


class PackageType(str, Enum):
    """
    The type of deployment package. Set to ``Image`` for container image and set ``Zip`` for .zip file archive.
    """
    IMAGE = "Image"
    """
    PackageType enum Image
    """
    ZIP = "Zip"
    """
    PackageType enum Zip
    """


class PartitionedPrefixPartitionDateSource(str, Enum):
    """
    Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
    """
    DELIVERY_TIME = "DeliveryTime"
    """
    PartitionedPrefixPartitionDateSource enum DeliveryTime
    """
    EVENT_TIME = "EventTime"
    """
    PartitionedPrefixPartitionDateSource enum EventTime
    """


class Permission(str, Enum):
    """
    Property value
    """
    FUL_L_CONTROL = "FULL_CONTROL"
    """
    Permission enum FULL_CONTROL
    """
    READ = "READ"
    """
    Permission enum READ
    """
    REA_D_ACP = "READ_ACP"
    """
    Permission enum READ_ACP
    """
    WRITE = "WRITE"
    """
    Permission enum WRITE
    """
    WRIT_E_ACP = "WRITE_ACP"
    """
    Permission enum WRITE_ACP
    """


class PermissionModel(str, Enum):
    """
    Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
    """
    SEL_F_MANAGED = "SELF_MANAGED"
    """
    PermissionModel enum SELF_MANAGED
    """
    SERVIC_E_MANAGED = "SERVICE_MANAGED"
    """
    PermissionModel enum SERVICE_MANAGED
    """


class PingStatus(str, Enum):
    """
    Property value
    """
    CONNECTION_LOST = "ConnectionLost"
    """
    PingStatus enum ConnectionLost
    """
    INACTIVE = "Inactive"
    """
    PingStatus enum Inactive
    """
    ONLINE = "Online"
    """
    PingStatus enum Online
    """


class PlacementConstraintType(str, Enum):
    """
    The type of constraint. Use ``distinctInstance`` to ensure that each task in a particular group is running on a different container instance. Use ``memberOf`` to restrict the selection to a group of valid candidates.
    """
    DISTINCT_INSTANCE = "distinctInstance"
    """
    PlacementConstraintType enum distinctInstance
    """
    MEMBER_OF = "memberOf"
    """
    PlacementConstraintType enum memberOf
    """


class PlacementGroupStrategy(str, Enum):
    """
    Property value
    """
    CLUSTER = "CLUSTER"
    """
    PlacementGroupStrategy enum CLUSTER
    """
    NONE = "NONE"
    """
    PlacementGroupStrategy enum NONE
    """
    PARTITION = "PARTITION"
    """
    PlacementGroupStrategy enum PARTITION
    """
    SPREAD = "SPREAD"
    """
    PlacementGroupStrategy enum SPREAD
    """


class PlacementStrategyType(str, Enum):
    """
    The type of placement strategy. The ``random`` placement strategy randomly places tasks on available candidates. The ``spread`` placement strategy spreads placement across available candidates evenly based on the ``field`` parameter. The ``binpack`` strategy places tasks on available candidates that have the least available amount of the resource that's specified with the ``field`` parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory but still enough to run the task.
    """
    BINPACK = "binpack"
    """
    PlacementStrategyType enum binpack
    """
    RANDOM = "random"
    """
    PlacementStrategyType enum random
    """
    SPREAD = "spread"
    """
    PlacementStrategyType enum spread
    """


class PlatformType(str, Enum):
    """
    Property value
    """
    LINUX = "Linux"
    """
    PlatformType enum Linux
    """
    MAC_OS = "MacOS"
    """
    PlatformType enum MacOS
    """
    WINDOWS = "Windows"
    """
    PlatformType enum Windows
    """


class PlatformValues(str, Enum):
    """
    Property value
    """
    WINDOWS = "Windows"
    """
    PlatformValues enum Windows
    """


class PointInTimeRecoveryStatus(str, Enum):
    """
    Property value
    """
    DISABLED = "DISABLED"
    """
    PointInTimeRecoveryStatus enum DISABLED
    """
    ENABLED = "ENABLED"
    """
    PointInTimeRecoveryStatus enum ENABLED
    """


class PortMappingAppProtocol(str, Enum):
    """
    The application protocol that's used for the port mapping. This parameter only applies to Service Connect. We recommend that you set this parameter to be consistent with the protocol that your application uses. If you set this parameter, Amazon ECS adds protocol-specific connection handling to the Service Connect proxy. If you set this parameter, Amazon ECS adds protocol-specific telemetry in the Amazon ECS console and CloudWatch. If you don't set a value for this parameter, then TCP is used. However, Amazon ECS doesn't add protocol-specific telemetry for TCP.  ``appProtocol`` is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment. Tasks that run in a namespace can use short names to connect to services in the namespace. Tasks can connect to services across all of the clusters in the namespace. Tasks connect through a managed proxy container that collects logs and metrics for increased visibility. Only the tasks that Amazon ECS services create are supported with Service Connect. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
    """
    GRPC = "grpc"
    """
    PortMappingAppProtocol enum grpc
    """
    HTTP = "http"
    """
    PortMappingAppProtocol enum http
    """
    HTTP2 = "http2"
    """
    PortMappingAppProtocol enum http2
    """


class ProcessorFeatureName(str, Enum):
    """
    The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``.
    """
    CORE_COUNT = "coreCount"
    """
    ProcessorFeatureName enum coreCount
    """
    THREADS_PER_CORE = "threadsPerCore"
    """
    ProcessorFeatureName enum threadsPerCore
    """


class ProductCodeValues(str, Enum):
    """
    Property value
    """
    DEVPAY = "devpay"
    """
    ProductCodeValues enum devpay
    """
    MARKETPLACE = "marketplace"
    """
    ProductCodeValues enum marketplace
    """


class ProjectVisibilityType(str, Enum):
    """
    Property value
    """
    PRIVATE = "PRIVATE"
    """
    ProjectVisibilityType enum PRIVATE
    """
    PUBLI_C_READ = "PUBLIC_READ"
    """
    ProjectVisibilityType enum PUBLIC_READ
    """


class PropagateTags(str, Enum):
    """
    Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags aren't propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the [TagResource](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_TagResource.html) API action. The default is ``NONE``.
    """
    SERVICE = "SERVICE"
    """
    PropagateTags enum SERVICE
    """
    TAS_K_DEFINITION = "TASK_DEFINITION"
    """
    PropagateTags enum TASK_DEFINITION
    """


class PropertyValueType(str, Enum):
    """
    Property value
    """
    PLAI_N_TEXT = "PLAIN_TEXT"
    """
    PropertyValueType enum PLAIN_TEXT
    """
    STRINGIFIE_D_JSON = "STRINGIFIED_JSON"
    """
    PropertyValueType enum STRINGIFIED_JSON
    """


class RRType(str, Enum):
    """
    Property value
    """
    A = "A"
    """
    RRType enum A
    """
    AAAA = "AAAA"
    """
    RRType enum AAAA
    """
    CAA = "CAA"
    """
    RRType enum CAA
    """
    CNAME = "CNAME"
    """
    RRType enum CNAME
    """
    DS = "DS"
    """
    RRType enum DS
    """
    MX = "MX"
    """
    RRType enum MX
    """
    NAPTR = "NAPTR"
    """
    RRType enum NAPTR
    """
    NS = "NS"
    """
    RRType enum NS
    """
    PTR = "PTR"
    """
    RRType enum PTR
    """
    SOA = "SOA"
    """
    RRType enum SOA
    """
    SPF = "SPF"
    """
    RRType enum SPF
    """
    SRV = "SRV"
    """
    RRType enum SRV
    """
    TXT = "TXT"
    """
    RRType enum TXT
    """


class RecorderStatus(str, Enum):
    """
    Property value
    """
    FAILURE = "Failure"
    """
    RecorderStatus enum Failure
    """
    PENDING = "Pending"
    """
    RecorderStatus enum Pending
    """
    SUCCESS = "Success"
    """
    RecorderStatus enum Success
    """


class RecordingFrequency(str, Enum):
    """
    Property value
    """
    CONTINUOUS = "CONTINUOUS"
    """
    RecordingFrequency enum CONTINUOUS
    """
    DAILY = "DAILY"
    """
    RecordingFrequency enum DAILY
    """


class RecordingStrategyType(str, Enum):
    """
    Property value
    """
    AL_L_SUPPORTE_D_RESOURC_E_TYPES = "ALL_SUPPORTED_RESOURCE_TYPES"
    """
    RecordingStrategyType enum ALL_SUPPORTED_RESOURCE_TYPES
    """
    EXCLUSIO_N_B_Y_RESOURC_E_TYPES = "EXCLUSION_BY_RESOURCE_TYPES"
    """
    RecordingStrategyType enum EXCLUSION_BY_RESOURCE_TYPES
    """
    INCLUSIO_N_B_Y_RESOURC_E_TYPES = "INCLUSION_BY_RESOURCE_TYPES"
    """
    RecordingStrategyType enum INCLUSION_BY_RESOURCE_TYPES
    """


class RedirectAllRequestsToProtocol(str, Enum):
    """
    Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
    """
    HTTP = "http"
    """
    RedirectAllRequestsToProtocol enum http
    """
    HTTPS = "https"
    """
    RedirectAllRequestsToProtocol enum https
    """


class RedirectRuleProtocol(str, Enum):
    """
    Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
    """
    HTTP = "http"
    """
    RedirectRuleProtocol enum http
    """
    HTTPS = "https"
    """
    RedirectRuleProtocol enum https
    """


class RenewalEligibility(str, Enum):
    """
    Property value
    """
    ELIGIBLE = "ELIGIBLE"
    """
    RenewalEligibility enum ELIGIBLE
    """
    INELIGIBLE = "INELIGIBLE"
    """
    RenewalEligibility enum INELIGIBLE
    """


class ReplicaModificationsStatus(str, Enum):
    """
    Specifies whether Amazon S3 replicates modifications on replicas.  *Allowed values*: ``Enabled`` | ``Disabled``
    """
    DISABLED = "Disabled"
    """
    ReplicaModificationsStatus enum Disabled
    """
    ENABLED = "Enabled"
    """
    ReplicaModificationsStatus enum Enabled
    """


class ReplicationDestinationStorageClass(str, Enum):
    """
    The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.  For valid values, see the ``StorageClass`` element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
    """
    DEE_P_ARCHIVE = "DEEP_ARCHIVE"
    """
    ReplicationDestinationStorageClass enum DEEP_ARCHIVE
    """
    GLACIER = "GLACIER"
    """
    ReplicationDestinationStorageClass enum GLACIER
    """
    GLACIE_R_IR = "GLACIER_IR"
    """
    ReplicationDestinationStorageClass enum GLACIER_IR
    """
    INTELLIGEN_T_TIERING = "INTELLIGENT_TIERING"
    """
    ReplicationDestinationStorageClass enum INTELLIGENT_TIERING
    """
    ONEZON_E_IA = "ONEZONE_IA"
    """
    ReplicationDestinationStorageClass enum ONEZONE_IA
    """
    REDUCE_D_REDUNDANCY = "REDUCED_REDUNDANCY"
    """
    ReplicationDestinationStorageClass enum REDUCED_REDUNDANCY
    """
    STANDARD = "STANDARD"
    """
    ReplicationDestinationStorageClass enum STANDARD
    """
    STANDAR_D_IA = "STANDARD_IA"
    """
    ReplicationDestinationStorageClass enum STANDARD_IA
    """


class ReplicationRuleStatus(str, Enum):
    """
    Specifies whether the rule is enabled.
    """
    DISABLED = "Disabled"
    """
    ReplicationRuleStatus enum Disabled
    """
    ENABLED = "Enabled"
    """
    ReplicationRuleStatus enum Enabled
    """


class ReplicationTimeStatus(str, Enum):
    """
    Specifies whether the replication time is enabled.
    """
    DISABLED = "Disabled"
    """
    ReplicationTimeStatus enum Disabled
    """
    ENABLED = "Enabled"
    """
    ReplicationTimeStatus enum Enabled
    """


class RepoUpgradeOnBoot(str, Enum):
    """
    Property value
    """
    NONE = "NONE"
    """
    RepoUpgradeOnBoot enum NONE
    """
    SECURITY = "SECURITY"
    """
    RepoUpgradeOnBoot enum SECURITY
    """


class ResolverLevelMetricsBehavior(str, Enum):
    """
    Property value
    """
    FUL_L_REQUES_T_RESOLVE_R_METRICS = "FULL_REQUEST_RESOLVER_METRICS"
    """
    ResolverLevelMetricsBehavior enum FULL_REQUEST_RESOLVER_METRICS
    """
    PE_R_RESOLVE_R_METRICS = "PER_RESOLVER_METRICS"
    """
    ResolverLevelMetricsBehavior enum PER_RESOLVER_METRICS
    """


class ResourceRecordSetFailover(str, Enum):
    """
    Property value
    """
    PRIMARY = "PRIMARY"
    """
    ResourceRecordSetFailover enum PRIMARY
    """
    SECONDARY = "SECONDARY"
    """
    ResourceRecordSetFailover enum SECONDARY
    """


class ResourceRecordSetRegion(str, Enum):
    """
    Property value
    """
    AF_SOUTH1 = "af-south-1"
    """
    ResourceRecordSetRegion enum af-south-1
    """
    AP_EAST1 = "ap-east-1"
    """
    ResourceRecordSetRegion enum ap-east-1
    """
    AP_NORTHEAST1 = "ap-northeast-1"
    """
    ResourceRecordSetRegion enum ap-northeast-1
    """
    AP_NORTHEAST2 = "ap-northeast-2"
    """
    ResourceRecordSetRegion enum ap-northeast-2
    """
    AP_NORTHEAST3 = "ap-northeast-3"
    """
    ResourceRecordSetRegion enum ap-northeast-3
    """
    AP_SOUTH1 = "ap-south-1"
    """
    ResourceRecordSetRegion enum ap-south-1
    """
    AP_SOUTH2 = "ap-south-2"
    """
    ResourceRecordSetRegion enum ap-south-2
    """
    AP_SOUTHEAST1 = "ap-southeast-1"
    """
    ResourceRecordSetRegion enum ap-southeast-1
    """
    AP_SOUTHEAST2 = "ap-southeast-2"
    """
    ResourceRecordSetRegion enum ap-southeast-2
    """
    AP_SOUTHEAST3 = "ap-southeast-3"
    """
    ResourceRecordSetRegion enum ap-southeast-3
    """
    AP_SOUTHEAST4 = "ap-southeast-4"
    """
    ResourceRecordSetRegion enum ap-southeast-4
    """
    CA_CENTRAL1 = "ca-central-1"
    """
    ResourceRecordSetRegion enum ca-central-1
    """
    CA_WEST1 = "ca-west-1"
    """
    ResourceRecordSetRegion enum ca-west-1
    """
    CN_NORTH1 = "cn-north-1"
    """
    ResourceRecordSetRegion enum cn-north-1
    """
    CN_NORTHWEST1 = "cn-northwest-1"
    """
    ResourceRecordSetRegion enum cn-northwest-1
    """
    EU_CENTRAL1 = "eu-central-1"
    """
    ResourceRecordSetRegion enum eu-central-1
    """
    EU_CENTRAL2 = "eu-central-2"
    """
    ResourceRecordSetRegion enum eu-central-2
    """
    EU_NORTH1 = "eu-north-1"
    """
    ResourceRecordSetRegion enum eu-north-1
    """
    EU_SOUTH1 = "eu-south-1"
    """
    ResourceRecordSetRegion enum eu-south-1
    """
    EU_SOUTH2 = "eu-south-2"
    """
    ResourceRecordSetRegion enum eu-south-2
    """
    EU_WEST1 = "eu-west-1"
    """
    ResourceRecordSetRegion enum eu-west-1
    """
    EU_WEST2 = "eu-west-2"
    """
    ResourceRecordSetRegion enum eu-west-2
    """
    EU_WEST3 = "eu-west-3"
    """
    ResourceRecordSetRegion enum eu-west-3
    """
    IL_CENTRAL1 = "il-central-1"
    """
    ResourceRecordSetRegion enum il-central-1
    """
    ME_CENTRAL1 = "me-central-1"
    """
    ResourceRecordSetRegion enum me-central-1
    """
    ME_SOUTH1 = "me-south-1"
    """
    ResourceRecordSetRegion enum me-south-1
    """
    SA_EAST1 = "sa-east-1"
    """
    ResourceRecordSetRegion enum sa-east-1
    """
    US_EAST1 = "us-east-1"
    """
    ResourceRecordSetRegion enum us-east-1
    """
    US_EAST2 = "us-east-2"
    """
    ResourceRecordSetRegion enum us-east-2
    """
    US_WEST1 = "us-west-1"
    """
    ResourceRecordSetRegion enum us-west-1
    """
    US_WEST2 = "us-west-2"
    """
    ResourceRecordSetRegion enum us-west-2
    """


class ResourceSpecInstanceType(str, Enum):
    """
    The instance type that the image version runs on.
    """
    ML_C512XLARGE = "ml.c5.12xlarge"
    """
    ResourceSpecInstanceType enum ml.c5.12xlarge
    """
    ML_C518XLARGE = "ml.c5.18xlarge"
    """
    ResourceSpecInstanceType enum ml.c5.18xlarge
    """
    ML_C524XLARGE = "ml.c5.24xlarge"
    """
    ResourceSpecInstanceType enum ml.c5.24xlarge
    """
    ML_C52XLARGE = "ml.c5.2xlarge"
    """
    ResourceSpecInstanceType enum ml.c5.2xlarge
    """
    ML_C54XLARGE = "ml.c5.4xlarge"
    """
    ResourceSpecInstanceType enum ml.c5.4xlarge
    """
    ML_C59XLARGE = "ml.c5.9xlarge"
    """
    ResourceSpecInstanceType enum ml.c5.9xlarge
    """
    ML_C5_LARGE = "ml.c5.large"
    """
    ResourceSpecInstanceType enum ml.c5.large
    """
    ML_C5_XLARGE = "ml.c5.xlarge"
    """
    ResourceSpecInstanceType enum ml.c5.xlarge
    """
    ML_G4DN12XLARGE = "ml.g4dn.12xlarge"
    """
    ResourceSpecInstanceType enum ml.g4dn.12xlarge
    """
    ML_G4DN16XLARGE = "ml.g4dn.16xlarge"
    """
    ResourceSpecInstanceType enum ml.g4dn.16xlarge
    """
    ML_G4DN2XLARGE = "ml.g4dn.2xlarge"
    """
    ResourceSpecInstanceType enum ml.g4dn.2xlarge
    """
    ML_G4DN4XLARGE = "ml.g4dn.4xlarge"
    """
    ResourceSpecInstanceType enum ml.g4dn.4xlarge
    """
    ML_G4DN8XLARGE = "ml.g4dn.8xlarge"
    """
    ResourceSpecInstanceType enum ml.g4dn.8xlarge
    """
    ML_G4DN_XLARGE = "ml.g4dn.xlarge"
    """
    ResourceSpecInstanceType enum ml.g4dn.xlarge
    """
    ML_G512XLARGE = "ml.g5.12xlarge"
    """
    ResourceSpecInstanceType enum ml.g5.12xlarge
    """
    ML_G516XLARGE = "ml.g5.16xlarge"
    """
    ResourceSpecInstanceType enum ml.g5.16xlarge
    """
    ML_G524XLARGE = "ml.g5.24xlarge"
    """
    ResourceSpecInstanceType enum ml.g5.24xlarge
    """
    ML_G52XLARGE = "ml.g5.2xlarge"
    """
    ResourceSpecInstanceType enum ml.g5.2xlarge
    """
    ML_G548XLARGE = "ml.g5.48xlarge"
    """
    ResourceSpecInstanceType enum ml.g5.48xlarge
    """
    ML_G54XLARGE = "ml.g5.4xlarge"
    """
    ResourceSpecInstanceType enum ml.g5.4xlarge
    """
    ML_G58XLARGE = "ml.g5.8xlarge"
    """
    ResourceSpecInstanceType enum ml.g5.8xlarge
    """
    ML_G5_XLARGE = "ml.g5.xlarge"
    """
    ResourceSpecInstanceType enum ml.g5.xlarge
    """
    ML_GEOSPATIAL_INTERACTIVE = "ml.geospatial.interactive"
    """
    ResourceSpecInstanceType enum ml.geospatial.interactive
    """
    ML_M512XLARGE = "ml.m5.12xlarge"
    """
    ResourceSpecInstanceType enum ml.m5.12xlarge
    """
    ML_M516XLARGE = "ml.m5.16xlarge"
    """
    ResourceSpecInstanceType enum ml.m5.16xlarge
    """
    ML_M524XLARGE = "ml.m5.24xlarge"
    """
    ResourceSpecInstanceType enum ml.m5.24xlarge
    """
    ML_M52XLARGE = "ml.m5.2xlarge"
    """
    ResourceSpecInstanceType enum ml.m5.2xlarge
    """
    ML_M54XLARGE = "ml.m5.4xlarge"
    """
    ResourceSpecInstanceType enum ml.m5.4xlarge
    """
    ML_M58XLARGE = "ml.m5.8xlarge"
    """
    ResourceSpecInstanceType enum ml.m5.8xlarge
    """
    ML_M5_LARGE = "ml.m5.large"
    """
    ResourceSpecInstanceType enum ml.m5.large
    """
    ML_M5_XLARGE = "ml.m5.xlarge"
    """
    ResourceSpecInstanceType enum ml.m5.xlarge
    """
    ML_M5D12XLARGE = "ml.m5d.12xlarge"
    """
    ResourceSpecInstanceType enum ml.m5d.12xlarge
    """
    ML_M5D16XLARGE = "ml.m5d.16xlarge"
    """
    ResourceSpecInstanceType enum ml.m5d.16xlarge
    """
    ML_M5D24XLARGE = "ml.m5d.24xlarge"
    """
    ResourceSpecInstanceType enum ml.m5d.24xlarge
    """
    ML_M5D2XLARGE = "ml.m5d.2xlarge"
    """
    ResourceSpecInstanceType enum ml.m5d.2xlarge
    """
    ML_M5D4XLARGE = "ml.m5d.4xlarge"
    """
    ResourceSpecInstanceType enum ml.m5d.4xlarge
    """
    ML_M5D8XLARGE = "ml.m5d.8xlarge"
    """
    ResourceSpecInstanceType enum ml.m5d.8xlarge
    """
    ML_M5D_LARGE = "ml.m5d.large"
    """
    ResourceSpecInstanceType enum ml.m5d.large
    """
    ML_M5D_XLARGE = "ml.m5d.xlarge"
    """
    ResourceSpecInstanceType enum ml.m5d.xlarge
    """
    ML_P316XLARGE = "ml.p3.16xlarge"
    """
    ResourceSpecInstanceType enum ml.p3.16xlarge
    """
    ML_P32XLARGE = "ml.p3.2xlarge"
    """
    ResourceSpecInstanceType enum ml.p3.2xlarge
    """
    ML_P38XLARGE = "ml.p3.8xlarge"
    """
    ResourceSpecInstanceType enum ml.p3.8xlarge
    """
    ML_P3DN24XLARGE = "ml.p3dn.24xlarge"
    """
    ResourceSpecInstanceType enum ml.p3dn.24xlarge
    """
    ML_P4D24XLARGE = "ml.p4d.24xlarge"
    """
    ResourceSpecInstanceType enum ml.p4d.24xlarge
    """
    ML_P4DE24XLARGE = "ml.p4de.24xlarge"
    """
    ResourceSpecInstanceType enum ml.p4de.24xlarge
    """
    ML_R512XLARGE = "ml.r5.12xlarge"
    """
    ResourceSpecInstanceType enum ml.r5.12xlarge
    """
    ML_R516XLARGE = "ml.r5.16xlarge"
    """
    ResourceSpecInstanceType enum ml.r5.16xlarge
    """
    ML_R524XLARGE = "ml.r5.24xlarge"
    """
    ResourceSpecInstanceType enum ml.r5.24xlarge
    """
    ML_R52XLARGE = "ml.r5.2xlarge"
    """
    ResourceSpecInstanceType enum ml.r5.2xlarge
    """
    ML_R54XLARGE = "ml.r5.4xlarge"
    """
    ResourceSpecInstanceType enum ml.r5.4xlarge
    """
    ML_R58XLARGE = "ml.r5.8xlarge"
    """
    ResourceSpecInstanceType enum ml.r5.8xlarge
    """
    ML_R5_LARGE = "ml.r5.large"
    """
    ResourceSpecInstanceType enum ml.r5.large
    """
    ML_R5_XLARGE = "ml.r5.xlarge"
    """
    ResourceSpecInstanceType enum ml.r5.xlarge
    """
    ML_T32XLARGE = "ml.t3.2xlarge"
    """
    ResourceSpecInstanceType enum ml.t3.2xlarge
    """
    ML_T3_LARGE = "ml.t3.large"
    """
    ResourceSpecInstanceType enum ml.t3.large
    """
    ML_T3_MEDIUM = "ml.t3.medium"
    """
    ResourceSpecInstanceType enum ml.t3.medium
    """
    ML_T3_MICRO = "ml.t3.micro"
    """
    ResourceSpecInstanceType enum ml.t3.micro
    """
    ML_T3_SMALL = "ml.t3.small"
    """
    ResourceSpecInstanceType enum ml.t3.small
    """
    ML_T3_XLARGE = "ml.t3.xlarge"
    """
    ResourceSpecInstanceType enum ml.t3.xlarge
    """
    ML_TRN12XLARGE = "ml.trn1.2xlarge"
    """
    ResourceSpecInstanceType enum ml.trn1.2xlarge
    """
    ML_TRN132XLARGE = "ml.trn1.32xlarge"
    """
    ResourceSpecInstanceType enum ml.trn1.32xlarge
    """
    ML_TRN1N32XLARGE = "ml.trn1n.32xlarge"
    """
    ResourceSpecInstanceType enum ml.trn1n.32xlarge
    """
    SYSTEM = "system"
    """
    ResourceSpecInstanceType enum system
    """


class ResourceType(str, Enum):
    """
    Property value
    """
    EC2_INSTANCE = "EC2Instance"
    """
    ResourceType enum EC2Instance
    """
    MANAGED_INSTANCE = "ManagedInstance"
    """
    ResourceType enum ManagedInstance
    """


class RuleStatus(str, Enum):
    """
    If ``Enabled``, the rule is currently being applied. If ``Disabled``, the rule is not currently being applied.
    """
    DISABLED = "Disabled"
    """
    RuleStatus enum Disabled
    """
    ENABLED = "Enabled"
    """
    RuleStatus enum Enabled
    """


class RulesSourceListGeneratedRulesType(str, Enum):
    """
    Property generatedRulesType
    """
    ALLOWLIST = "ALLOWLIST"
    """
    RulesSourceListGeneratedRulesType enum ALLOWLIST
    """
    DENYLIST = "DENYLIST"
    """
    RulesSourceListGeneratedRulesType enum DENYLIST
    """


class RuntimeManagementConfigUpdateRuntimeOn(str, Enum):
    """
    Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
    """
    AUTO = "Auto"
    """
    RuntimeManagementConfigUpdateRuntimeOn enum Auto
    """
    FUNCTION_UPDATE = "FunctionUpdate"
    """
    RuntimeManagementConfigUpdateRuntimeOn enum FunctionUpdate
    """
    MANUAL = "Manual"
    """
    RuntimeManagementConfigUpdateRuntimeOn enum Manual
    """


class SSEStatus(str, Enum):
    """
    Property value
    """
    DISABLED = "DISABLED"
    """
    SSEStatus enum DISABLED
    """
    DISABLING = "DISABLING"
    """
    SSEStatus enum DISABLING
    """
    ENABLED = "ENABLED"
    """
    SSEStatus enum ENABLED
    """
    ENABLING = "ENABLING"
    """
    SSEStatus enum ENABLING
    """


class SSEType(str, Enum):
    """
    Property value
    """
    NONE = "none"
    """
    SSEType enum none
    """
    SSE_EBS = "sse-ebs"
    """
    SSEType enum sse-ebs
    """
    SSE_KMS = "sse-kms"
    """
    SSEType enum sse-kms
    """


class ScaleDownBehavior(str, Enum):
    """
    Property value
    """
    TERMINAT_E_A_T_INSTANC_E_HOUR = "TERMINATE_AT_INSTANCE_HOUR"
    """
    ScaleDownBehavior enum TERMINATE_AT_INSTANCE_HOUR
    """
    TERMINAT_E_A_T_TAS_K_COMPLETION = "TERMINATE_AT_TASK_COMPLETION"
    """
    ScaleDownBehavior enum TERMINATE_AT_TASK_COMPLETION
    """


class ScanStatus(str, Enum):
    """
    Property value
    """
    ACTIVE = "ACTIVE"
    """
    ScanStatus enum ACTIVE
    """
    COMPLETE = "COMPLETE"
    """
    ScanStatus enum COMPLETE
    """
    FAILED = "FAILED"
    """
    ScanStatus enum FAILED
    """
    FINDING_S_UNAVAILABLE = "FINDINGS_UNAVAILABLE"
    """
    ScanStatus enum FINDINGS_UNAVAILABLE
    """
    I_N_PROGRESS = "IN_PROGRESS"
    """
    ScanStatus enum IN_PROGRESS
    """
    PENDING = "PENDING"
    """
    ScanStatus enum PENDING
    """
    SCA_N_ELIGIBILIT_Y_EXPIRED = "SCAN_ELIGIBILITY_EXPIRED"
    """
    ScanStatus enum SCAN_ELIGIBILITY_EXPIRED
    """
    UNSUPPORTE_D_IMAGE = "UNSUPPORTED_IMAGE"
    """
    ScanStatus enum UNSUPPORTED_IMAGE
    """


class SchedulingStrategy(str, Enum):
    """
    The scheduling strategy to use for the service. For more information, see [Services](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html). There are two service scheduler strategies available:  +   ``REPLICA``-The replica scheduling strategy places and maintains the desired number of tasks across your cluster. By default, the service scheduler spreads tasks across Availability Zones. You can use task placement strategies and constraints to customize task placement decisions. This scheduler strategy is required if the service uses the ``CODE_DEPLOY`` or ``EXTERNAL`` deployment controller types.  +   ``DAEMON``-The daemon scheduling strategy deploys exactly one task on each active container instance that meets all of the task placement constraints that you specify in your cluster. The service scheduler also evaluates the task placement constraints for running tasks and will stop tasks that don't meet the placement constraints. When you're using this strategy, you don't need to specify a desired number of tasks, a task placement strategy, or use Service Auto Scaling policies.  Tasks using the Fargate launch type or the ``CODE_DEPLOY`` or ``EXTERNAL`` deployment controller types don't support the ``DAEMON`` scheduling strategy.
    """
    DAEMON = "DAEMON"
    """
    SchedulingStrategy enum DAEMON
    """
    REPLICA = "REPLICA"
    """
    SchedulingStrategy enum REPLICA
    """


class ServerSideEncryptionByDefaultSSEAlgorithm(str, Enum):
    """
    Server-side encryption algorithm to use for the default encryption.
    """
    AES256 = "AES256"
    """
    ServerSideEncryptionByDefaultSSEAlgorithm enum AES256
    """
    AWS_KMS = "aws:kms"
    """
    ServerSideEncryptionByDefaultSSEAlgorithm enum aws:kms
    """
    AWS_KMS_DSSE = "aws:kms:dsse"
    """
    ServerSideEncryptionByDefaultSSEAlgorithm enum aws:kms:dsse
    """


class ServerType(str, Enum):
    """
    Property value
    """
    BITBUCKET = "BITBUCKET"
    """
    ServerType enum BITBUCKET
    """
    GITHUB = "GITHUB"
    """
    ServerType enum GITHUB
    """
    GITHU_B_ENTERPRISE = "GITHUB_ENTERPRISE"
    """
    ServerType enum GITHUB_ENTERPRISE
    """
    GITLAB = "GITLAB"
    """
    ServerType enum GITLAB
    """
    GITLA_B_SEL_F_MANAGED = "GITLAB_SELF_MANAGED"
    """
    ServerType enum GITLAB_SELF_MANAGED
    """


class SimpleCriterionKeyForJob(str, Enum):
    """
    Property value
    """
    ACCOUN_T_ID = "ACCOUNT_ID"
    """
    SimpleCriterionKeyForJob enum ACCOUNT_ID
    """
    S3_BUCKE_T_EFFECTIV_E_PERMISSION = "S3_BUCKET_EFFECTIVE_PERMISSION"
    """
    SimpleCriterionKeyForJob enum S3_BUCKET_EFFECTIVE_PERMISSION
    """
    S3_BUCKE_T_NAME = "S3_BUCKET_NAME"
    """
    SimpleCriterionKeyForJob enum S3_BUCKET_NAME
    """
    S3_BUCKE_T_SHARE_D_ACCESS = "S3_BUCKET_SHARED_ACCESS"
    """
    SimpleCriterionKeyForJob enum S3_BUCKET_SHARED_ACCESS
    """


class SnapStartApplyOn(str, Enum):
    """
    Set ``ApplyOn`` to ``PublishedVersions`` to create a snapshot of the initialized execution environment when you publish a function version.
    """
    NONE = "None"
    """
    SnapStartApplyOn enum None
    """
    PUBLISHED_VERSIONS = "PublishedVersions"
    """
    SnapStartApplyOn enum PublishedVersions
    """


class SnapshotState(str, Enum):
    """
    Property value
    """
    COMPLETED = "completed"
    """
    SnapshotState enum completed
    """
    ERROR = "error"
    """
    SnapshotState enum error
    """
    PENDING = "pending"
    """
    SnapshotState enum pending
    """
    RECOVERABLE = "recoverable"
    """
    SnapshotState enum recoverable
    """
    RECOVERING = "recovering"
    """
    SnapshotState enum recovering
    """


class SourceAuthType(str, Enum):
    """
    Property value
    """
    CODECONNECTIONS = "CODECONNECTIONS"
    """
    SourceAuthType enum CODECONNECTIONS
    """
    OAUTH = "OAUTH"
    """
    SourceAuthType enum OAUTH
    """


class SourceType(str, Enum):
    """
    Property value
    """
    AWSEC2_INSTANCE = "AWS::EC2::Instance"
    """
    SourceType enum AWS::EC2::Instance
    """
    AWS_IO_T_THING = "AWS::IoT::Thing"
    """
    SourceType enum AWS::IoT::Thing
    """
    AWSSSM_MANAGED_INSTANCE = "AWS::SSM::ManagedInstance"
    """
    SourceType enum AWS::SSM::ManagedInstance
    """


class SseKmsEncryptedObjectsStatus(str, Enum):
    """
    Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
    """
    DISABLED = "Disabled"
    """
    SseKmsEncryptedObjectsStatus enum Disabled
    """
    ENABLED = "Enabled"
    """
    SseKmsEncryptedObjectsStatus enum Enabled
    """


class StackStatus(str, Enum):
    """
    Property stackStatus
    """
    CREAT_E_COMPLETE = "CREATE_COMPLETE"
    """
    StackStatus enum CREATE_COMPLETE
    """
    CREAT_E_FAILED = "CREATE_FAILED"
    """
    StackStatus enum CREATE_FAILED
    """
    CREAT_E_I_N_PROGRESS = "CREATE_IN_PROGRESS"
    """
    StackStatus enum CREATE_IN_PROGRESS
    """
    DELET_E_COMPLETE = "DELETE_COMPLETE"
    """
    StackStatus enum DELETE_COMPLETE
    """
    DELET_E_FAILED = "DELETE_FAILED"
    """
    StackStatus enum DELETE_FAILED
    """
    DELET_E_I_N_PROGRESS = "DELETE_IN_PROGRESS"
    """
    StackStatus enum DELETE_IN_PROGRESS
    """
    IMPOR_T_COMPLETE = "IMPORT_COMPLETE"
    """
    StackStatus enum IMPORT_COMPLETE
    """
    IMPOR_T_I_N_PROGRESS = "IMPORT_IN_PROGRESS"
    """
    StackStatus enum IMPORT_IN_PROGRESS
    """
    IMPOR_T_ROLLBAC_K_COMPLETE = "IMPORT_ROLLBACK_COMPLETE"
    """
    StackStatus enum IMPORT_ROLLBACK_COMPLETE
    """
    IMPOR_T_ROLLBAC_K_FAILED = "IMPORT_ROLLBACK_FAILED"
    """
    StackStatus enum IMPORT_ROLLBACK_FAILED
    """
    IMPOR_T_ROLLBAC_K_I_N_PROGRESS = "IMPORT_ROLLBACK_IN_PROGRESS"
    """
    StackStatus enum IMPORT_ROLLBACK_IN_PROGRESS
    """
    REVIE_W_I_N_PROGRESS = "REVIEW_IN_PROGRESS"
    """
    StackStatus enum REVIEW_IN_PROGRESS
    """
    ROLLBAC_K_COMPLETE = "ROLLBACK_COMPLETE"
    """
    StackStatus enum ROLLBACK_COMPLETE
    """
    ROLLBAC_K_FAILED = "ROLLBACK_FAILED"
    """
    StackStatus enum ROLLBACK_FAILED
    """
    ROLLBAC_K_I_N_PROGRESS = "ROLLBACK_IN_PROGRESS"
    """
    StackStatus enum ROLLBACK_IN_PROGRESS
    """
    UPDAT_E_COMPLETE = "UPDATE_COMPLETE"
    """
    StackStatus enum UPDATE_COMPLETE
    """
    UPDAT_E_COMPLET_E_CLEANU_P_I_N_PROGRESS = "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS"
    """
    StackStatus enum UPDATE_COMPLETE_CLEANUP_IN_PROGRESS
    """
    UPDAT_E_FAILED = "UPDATE_FAILED"
    """
    StackStatus enum UPDATE_FAILED
    """
    UPDAT_E_I_N_PROGRESS = "UPDATE_IN_PROGRESS"
    """
    StackStatus enum UPDATE_IN_PROGRESS
    """
    UPDAT_E_ROLLBAC_K_COMPLETE = "UPDATE_ROLLBACK_COMPLETE"
    """
    StackStatus enum UPDATE_ROLLBACK_COMPLETE
    """
    UPDAT_E_ROLLBAC_K_COMPLET_E_CLEANU_P_I_N_PROGRESS = "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS"
    """
    StackStatus enum UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS
    """
    UPDAT_E_ROLLBAC_K_FAILED = "UPDATE_ROLLBACK_FAILED"
    """
    StackStatus enum UPDATE_ROLLBACK_FAILED
    """
    UPDAT_E_ROLLBAC_K_I_N_PROGRESS = "UPDATE_ROLLBACK_IN_PROGRESS"
    """
    StackStatus enum UPDATE_ROLLBACK_IN_PROGRESS
    """


class StatefulEngineOptionsRuleOrder(str, Enum):
    """
    Property ruleOrder
    """
    DEFAUL_T_ACTIO_N_ORDER = "DEFAULT_ACTION_ORDER"
    """
    StatefulEngineOptionsRuleOrder enum DEFAULT_ACTION_ORDER
    """
    STRIC_T_ORDER = "STRICT_ORDER"
    """
    StatefulEngineOptionsRuleOrder enum STRICT_ORDER
    """


class StatefulEngineOptionsStreamExceptionPolicy(str, Enum):
    """
    Property streamExceptionPolicy
    """
    CONTINUE_ = "CONTINUE"
    """
    StatefulEngineOptionsStreamExceptionPolicy enum CONTINUE
    """
    DROP = "DROP"
    """
    StatefulEngineOptionsStreamExceptionPolicy enum DROP
    """
    REJECT = "REJECT"
    """
    StatefulEngineOptionsStreamExceptionPolicy enum REJECT
    """


class StatefulRuleAction(str, Enum):
    """
    Property action
    """
    ALERT = "ALERT"
    """
    StatefulRuleAction enum ALERT
    """
    DROP = "DROP"
    """
    StatefulRuleAction enum DROP
    """
    PASS_ = "PASS"
    """
    StatefulRuleAction enum PASS
    """
    REJECT = "REJECT"
    """
    StatefulRuleAction enum REJECT
    """


class StatefulRuleGroupOverrideAction(str, Enum):
    """
    Property action
    """
    DRO_P_T_O_ALERT = "DROP_TO_ALERT"
    """
    StatefulRuleGroupOverrideAction enum DROP_TO_ALERT
    """


class StatefulRuleOptionsRuleOrder(str, Enum):
    """
    Property ruleOrder
    """
    DEFAUL_T_ACTIO_N_ORDER = "DEFAULT_ACTION_ORDER"
    """
    StatefulRuleOptionsRuleOrder enum DEFAULT_ACTION_ORDER
    """
    STRIC_T_ORDER = "STRICT_ORDER"
    """
    StatefulRuleOptionsRuleOrder enum STRICT_ORDER
    """


class Status(str, Enum):
    """
    The status of the account in the organization.
    """
    ACTIVE = "ACTIVE"
    """
    Status enum ACTIVE
    """
    PENDIN_G_CLOSURE = "PENDING_CLOSURE"
    """
    Status enum PENDING_CLOSURE
    """
    SUSPENDED = "SUSPENDED"
    """
    Status enum SUSPENDED
    """


class StatusName(str, Enum):
    """
    Property value
    """
    REACHABILITY = "reachability"
    """
    StatusName enum reachability
    """


class StatusType(str, Enum):
    """
    Property value
    """
    ACTIVE = "Active"
    """
    statusType enum Active
    """
    INACTIVE = "Inactive"
    """
    statusType enum Inactive
    """


class StorageTier(str, Enum):
    """
    Property value
    """
    ARCHIVE = "archive"
    """
    StorageTier enum archive
    """
    STANDARD = "standard"
    """
    StorageTier enum standard
    """


class SummaryStatus(str, Enum):
    """
    Property value
    """
    IMPAIRED = "impaired"
    """
    SummaryStatus enum impaired
    """
    INITIALIZING = "initializing"
    """
    SummaryStatus enum initializing
    """
    INSUFFICIENT_DATA = "insufficient-data"
    """
    SummaryStatus enum insufficient-data
    """
    NOT_APPLICABLE = "not-applicable"
    """
    SummaryStatus enum not-applicable
    """
    OK = "ok"
    """
    SummaryStatus enum ok
    """


class TLSSecurityPolicy(str, Enum):
    """
    Property value
    """
    POLICY_MIN_TLS10201907 = "Policy-Min-TLS-1-0-2019-07"
    """
    TLSSecurityPolicy enum Policy-Min-TLS-1-0-2019-07
    """
    POLICY_MIN_TLS12201907 = "Policy-Min-TLS-1-2-2019-07"
    """
    TLSSecurityPolicy enum Policy-Min-TLS-1-2-2019-07
    """
    POLICY_MIN_TLS12_PFS202310 = "Policy-Min-TLS-1-2-PFS-2023-10"
    """
    TLSSecurityPolicy enum Policy-Min-TLS-1-2-PFS-2023-10
    """


class TargetHealthReasonEnum(str, Enum):
    """
    Property value
    """
    ELB_INITIAL_HEALTH_CHECKING = "Elb.InitialHealthChecking"
    """
    TargetHealthReasonEnum enum Elb.InitialHealthChecking
    """
    ELB_INTERNAL_ERROR = "Elb.InternalError"
    """
    TargetHealthReasonEnum enum Elb.InternalError
    """
    ELB_REGISTRATION_IN_PROGRESS = "Elb.RegistrationInProgress"
    """
    TargetHealthReasonEnum enum Elb.RegistrationInProgress
    """
    TARGET_DEREGISTRATION_IN_PROGRESS = "Target.DeregistrationInProgress"
    """
    TargetHealthReasonEnum enum Target.DeregistrationInProgress
    """
    TARGET_FAILED_HEALTH_CHECKS = "Target.FailedHealthChecks"
    """
    TargetHealthReasonEnum enum Target.FailedHealthChecks
    """
    TARGET_HEALTH_CHECK_DISABLED = "Target.HealthCheckDisabled"
    """
    TargetHealthReasonEnum enum Target.HealthCheckDisabled
    """
    TARGET_INVALID_STATE = "Target.InvalidState"
    """
    TargetHealthReasonEnum enum Target.InvalidState
    """
    TARGET_IP_UNUSABLE = "Target.IpUnusable"
    """
    TargetHealthReasonEnum enum Target.IpUnusable
    """
    TARGET_NOT_IN_USE = "Target.NotInUse"
    """
    TargetHealthReasonEnum enum Target.NotInUse
    """
    TARGET_NOT_REGISTERED = "Target.NotRegistered"
    """
    TargetHealthReasonEnum enum Target.NotRegistered
    """
    TARGET_RESPONSE_CODE_MISMATCH = "Target.ResponseCodeMismatch"
    """
    TargetHealthReasonEnum enum Target.ResponseCodeMismatch
    """
    TARGET_TIMEOUT = "Target.Timeout"
    """
    TargetHealthReasonEnum enum Target.Timeout
    """


class TargetHealthStateEnum(str, Enum):
    """
    Property value
    """
    DRAINING = "draining"
    """
    TargetHealthStateEnum enum draining
    """
    HEALTHY = "healthy"
    """
    TargetHealthStateEnum enum healthy
    """
    INITIAL = "initial"
    """
    TargetHealthStateEnum enum initial
    """
    UNAVAILABLE = "unavailable"
    """
    TargetHealthStateEnum enum unavailable
    """
    UNHEALTHY = "unhealthy"
    """
    TargetHealthStateEnum enum unhealthy
    """
    UNHEALTHY_DRAINING = "unhealthy.draining"
    """
    TargetHealthStateEnum enum unhealthy.draining
    """
    UNUSED = "unused"
    """
    TargetHealthStateEnum enum unused
    """


class Tenancy(str, Enum):
    """
    Property value
    """
    DEDICATED = "dedicated"
    """
    Tenancy enum dedicated
    """
    DEFAULT = "default"
    """
    Tenancy enum default
    """
    HOST = "host"
    """
    Tenancy enum host
    """


class Tier(str, Enum):
    """
    The parameter tier.
    """
    ADVANCED = "Advanced"
    """
    Tier enum Advanced
    """
    INTELLIGENT_TIERING = "Intelligent-Tiering"
    """
    Tier enum Intelligent-Tiering
    """
    STANDARD = "Standard"
    """
    Tier enum Standard
    """


class TieringAccessTier(str, Enum):
    """
    S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
    """
    ARCHIV_E_ACCESS = "ARCHIVE_ACCESS"
    """
    TieringAccessTier enum ARCHIVE_ACCESS
    """
    DEE_P_ARCHIV_E_ACCESS = "DEEP_ARCHIVE_ACCESS"
    """
    TieringAccessTier enum DEEP_ARCHIVE_ACCESS
    """


class TpmSupportValues(str, Enum):
    """
    Property value
    """
    V20 = "v2.0"
    """
    TpmSupportValues enum v2.0
    """


class TracingConfigMode(str, Enum):
    """
    The tracing mode.
    """
    ACTIVE = "Active"
    """
    TracingConfigMode enum Active
    """
    PASS_THROUGH = "PassThrough"
    """
    TracingConfigMode enum PassThrough
    """


class TrafficType(str, Enum):
    """
    The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.
    """
    ACCEPT = "ACCEPT"
    """
    TrafficType enum ACCEPT
    """
    ALL = "ALL"
    """
    TrafficType enum ALL
    """
    REJECT = "REJECT"
    """
    TrafficType enum REJECT
    """


class TransitionStorageClass(str, Enum):
    """
    The storage class to which you want the object to transition.
    """
    DEE_P_ARCHIVE = "DEEP_ARCHIVE"
    """
    TransitionStorageClass enum DEEP_ARCHIVE
    """
    GLACIER = "GLACIER"
    """
    TransitionStorageClass enum GLACIER
    """
    GLACIE_R_IR = "GLACIER_IR"
    """
    TransitionStorageClass enum GLACIER_IR
    """
    INTELLIGEN_T_TIERING = "INTELLIGENT_TIERING"
    """
    TransitionStorageClass enum INTELLIGENT_TIERING
    """
    ONEZON_E_IA = "ONEZONE_IA"
    """
    TransitionStorageClass enum ONEZONE_IA
    """
    STANDAR_D_IA = "STANDARD_IA"
    """
    TransitionStorageClass enum STANDARD_IA
    """


class Type(str, Enum):
    """
    The type of parameter.
    """
    STRING = "String"
    """
    Type enum String
    """
    STRING_LIST = "StringList"
    """
    Type enum StringList
    """


class VersioningConfigurationStatus(str, Enum):
    """
    The versioning state of the bucket.
    """
    ENABLED = "Enabled"
    """
    VersioningConfigurationStatus enum Enabled
    """
    SUSPENDED = "Suspended"
    """
    VersioningConfigurationStatus enum Suspended
    """


class VirtualizationType(str, Enum):
    """
    Property value
    """
    HVM = "hvm"
    """
    VirtualizationType enum hvm
    """
    PARAVIRTUAL = "paravirtual"
    """
    VirtualizationType enum paravirtual
    """


class VolumeType(str, Enum):
    """
    Property value
    """
    GP2 = "gp2"
    """
    VolumeType enum gp2
    """
    GP3 = "gp3"
    """
    VolumeType enum gp3
    """
    IO1 = "io1"
    """
    VolumeType enum io1
    """
    STANDARD = "standard"
    """
    VolumeType enum standard
    """


class VpcEndpointType(str, Enum):
    """
    The type of endpoint. Default: Gateway
    """
    GATEWAY = "Gateway"
    """
    VpcEndpointType enum Gateway
    """
    GATEWAY_LOAD_BALANCER = "GatewayLoadBalancer"
    """
    VpcEndpointType enum GatewayLoadBalancer
    """
    INTERFACE = "Interface"
    """
    VpcEndpointType enum Interface
    """


class WebhookBuildType(str, Enum):
    """
    Property value
    """
    BUILD = "BUILD"
    """
    WebhookBuildType enum BUILD
    """
    BUIL_D_BATCH = "BUILD_BATCH"
    """
    WebhookBuildType enum BUILD_BATCH
    """


class WebhookFilterType(str, Enum):
    """
    Property value
    """
    ACTO_R_ACCOUN_T_ID = "ACTOR_ACCOUNT_ID"
    """
    WebhookFilterType enum ACTOR_ACCOUNT_ID
    """
    BAS_E_REF = "BASE_REF"
    """
    WebhookFilterType enum BASE_REF
    """
    COMMI_T_MESSAGE = "COMMIT_MESSAGE"
    """
    WebhookFilterType enum COMMIT_MESSAGE
    """
    EVENT = "EVENT"
    """
    WebhookFilterType enum EVENT
    """
    FIL_E_PATH = "FILE_PATH"
    """
    WebhookFilterType enum FILE_PATH
    """
    HEA_D_REF = "HEAD_REF"
    """
    WebhookFilterType enum HEAD_REF
    """
    RELEAS_E_NAME = "RELEASE_NAME"
    """
    WebhookFilterType enum RELEASE_NAME
    """
    TA_G_NAME = "TAG_NAME"
    """
    WebhookFilterType enum TAG_NAME
    """
    WORKFLO_W_NAME = "WORKFLOW_NAME"
    """
    WebhookFilterType enum WORKFLOW_NAME
    """
