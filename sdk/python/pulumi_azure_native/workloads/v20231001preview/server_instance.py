# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs

__all__ = ['ServerInstanceArgs', 'ServerInstance']

@pulumi.input_type
class ServerInstanceArgs:
    def __init__(__self__, *,
                 resource_group_name: pulumi.Input[str],
                 sap_discovery_site_name: pulumi.Input[str],
                 sap_instance_name: pulumi.Input[str],
                 server_instance_name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ServerInstance resource.
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[str] sap_discovery_site_name: The name of the discovery site resource for SAP Migration.
        :param pulumi.Input[str] sap_instance_name: The name of SAP Instance resource for SAP Migration.
        :param pulumi.Input[str] server_instance_name: The name of the Server instance resource for SAP Migration.
        """
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        pulumi.set(__self__, "sap_discovery_site_name", sap_discovery_site_name)
        pulumi.set(__self__, "sap_instance_name", sap_instance_name)
        if server_instance_name is not None:
            pulumi.set(__self__, "server_instance_name", server_instance_name)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[str]:
        """
        The name of the resource group. The name is case insensitive.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter(name="sapDiscoverySiteName")
    def sap_discovery_site_name(self) -> pulumi.Input[str]:
        """
        The name of the discovery site resource for SAP Migration.
        """
        return pulumi.get(self, "sap_discovery_site_name")

    @sap_discovery_site_name.setter
    def sap_discovery_site_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "sap_discovery_site_name", value)

    @property
    @pulumi.getter(name="sapInstanceName")
    def sap_instance_name(self) -> pulumi.Input[str]:
        """
        The name of SAP Instance resource for SAP Migration.
        """
        return pulumi.get(self, "sap_instance_name")

    @sap_instance_name.setter
    def sap_instance_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "sap_instance_name", value)

    @property
    @pulumi.getter(name="serverInstanceName")
    def server_instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the Server instance resource for SAP Migration.
        """
        return pulumi.get(self, "server_instance_name")

    @server_instance_name.setter
    def server_instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "server_instance_name", value)


class ServerInstance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 sap_discovery_site_name: Optional[pulumi.Input[str]] = None,
                 sap_instance_name: Optional[pulumi.Input[str]] = None,
                 server_instance_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Define the Server Instance resource.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[str] sap_discovery_site_name: The name of the discovery site resource for SAP Migration.
        :param pulumi.Input[str] sap_instance_name: The name of SAP Instance resource for SAP Migration.
        :param pulumi.Input[str] server_instance_name: The name of the Server instance resource for SAP Migration.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ServerInstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Define the Server Instance resource.

        :param str resource_name: The name of the resource.
        :param ServerInstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ServerInstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 sap_discovery_site_name: Optional[pulumi.Input[str]] = None,
                 sap_instance_name: Optional[pulumi.Input[str]] = None,
                 server_instance_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ServerInstanceArgs.__new__(ServerInstanceArgs)

            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            if sap_discovery_site_name is None and not opts.urn:
                raise TypeError("Missing required property 'sap_discovery_site_name'")
            __props__.__dict__["sap_discovery_site_name"] = sap_discovery_site_name
            if sap_instance_name is None and not opts.urn:
                raise TypeError("Missing required property 'sap_instance_name'")
            __props__.__dict__["sap_instance_name"] = sap_instance_name
            __props__.__dict__["server_instance_name"] = server_instance_name
            __props__.__dict__["configuration_data"] = None
            __props__.__dict__["errors"] = None
            __props__.__dict__["instance_sid"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["operating_system"] = None
            __props__.__dict__["performance_data"] = None
            __props__.__dict__["provisioning_state"] = None
            __props__.__dict__["sap_instance_type"] = None
            __props__.__dict__["sap_product"] = None
            __props__.__dict__["sap_product_version"] = None
            __props__.__dict__["server_name"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:workloads:ServerInstance")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(ServerInstance, __self__).__init__(
            'azure-native:workloads/v20231001preview:ServerInstance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'ServerInstance':
        """
        Get an existing ServerInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = ServerInstanceArgs.__new__(ServerInstanceArgs)

        __props__.__dict__["configuration_data"] = None
        __props__.__dict__["errors"] = None
        __props__.__dict__["instance_sid"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["operating_system"] = None
        __props__.__dict__["performance_data"] = None
        __props__.__dict__["provisioning_state"] = None
        __props__.__dict__["sap_instance_type"] = None
        __props__.__dict__["sap_product"] = None
        __props__.__dict__["sap_product_version"] = None
        __props__.__dict__["server_name"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["type"] = None
        return ServerInstance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="configurationData")
    def configuration_data(self) -> pulumi.Output['outputs.ConfigurationDataResponse']:
        """
        Configuration data for this server instance.
        """
        return pulumi.get(self, "configuration_data")

    @property
    @pulumi.getter
    def errors(self) -> pulumi.Output['outputs.SAPMigrateErrorResponse']:
        """
        Defines the errors related to SAP Instance resource.
        """
        return pulumi.get(self, "errors")

    @property
    @pulumi.getter(name="instanceSid")
    def instance_sid(self) -> pulumi.Output[str]:
        """
        This is the Instance SID for ASCS/AP/DB instance.  An SAP system with HANA database for example could have a different SID for database Instance than that of ASCS instance.
        """
        return pulumi.get(self, "instance_sid")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="operatingSystem")
    def operating_system(self) -> pulumi.Output[str]:
        """
        This is Operating System on which the host server is running.
        """
        return pulumi.get(self, "operating_system")

    @property
    @pulumi.getter(name="performanceData")
    def performance_data(self) -> pulumi.Output[Any]:
        """
        Configuration data for this server instance.
        """
        return pulumi.get(self, "performance_data")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[str]:
        """
        Defines the provisioning states.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="sapInstanceType")
    def sap_instance_type(self) -> pulumi.Output[str]:
        """
        Defines the type SAP instance on this server instance.
        """
        return pulumi.get(self, "sap_instance_type")

    @property
    @pulumi.getter(name="sapProduct")
    def sap_product(self) -> pulumi.Output[str]:
        """
        This is the SAP Application Component; e.g. SAP S/4HANA 2022, SAP ERP ENHANCE PACKAGE.
        """
        return pulumi.get(self, "sap_product")

    @property
    @pulumi.getter(name="sapProductVersion")
    def sap_product_version(self) -> pulumi.Output[str]:
        """
        Provide the product version of the SAP product.
        """
        return pulumi.get(self, "sap_product_version")

    @property
    @pulumi.getter(name="serverName")
    def server_name(self) -> pulumi.Output[str]:
        """
        This is the Virtual Machine Name of the SAP system. Add all the virtual machines attached to an SAP system which you wish to migrate to Azure. Keeping this not equal to ID as for single tier all InstanceTypes would be on same server, leading to multiple resources with same servername.
        """
        return pulumi.get(self, "server_name")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

