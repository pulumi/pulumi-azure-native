# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetServerInstanceResult',
    'AwaitableGetServerInstanceResult',
    'get_server_instance',
    'get_server_instance_output',
]

@pulumi.output_type
class GetServerInstanceResult:
    """
    Define the Server Instance resource.
    """
    def __init__(__self__, configuration_data=None, errors=None, id=None, instance_sid=None, name=None, operating_system=None, performance_data=None, provisioning_state=None, sap_instance_type=None, sap_product=None, sap_product_version=None, server_name=None, system_data=None, type=None):
        if configuration_data and not isinstance(configuration_data, dict):
            raise TypeError("Expected argument 'configuration_data' to be a dict")
        pulumi.set(__self__, "configuration_data", configuration_data)
        if errors and not isinstance(errors, dict):
            raise TypeError("Expected argument 'errors' to be a dict")
        pulumi.set(__self__, "errors", errors)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_sid and not isinstance(instance_sid, str):
            raise TypeError("Expected argument 'instance_sid' to be a str")
        pulumi.set(__self__, "instance_sid", instance_sid)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if operating_system and not isinstance(operating_system, str):
            raise TypeError("Expected argument 'operating_system' to be a str")
        pulumi.set(__self__, "operating_system", operating_system)
        if performance_data and not isinstance(performance_data, dict):
            raise TypeError("Expected argument 'performance_data' to be a dict")
        pulumi.set(__self__, "performance_data", performance_data)
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        if sap_instance_type and not isinstance(sap_instance_type, str):
            raise TypeError("Expected argument 'sap_instance_type' to be a str")
        pulumi.set(__self__, "sap_instance_type", sap_instance_type)
        if sap_product and not isinstance(sap_product, str):
            raise TypeError("Expected argument 'sap_product' to be a str")
        pulumi.set(__self__, "sap_product", sap_product)
        if sap_product_version and not isinstance(sap_product_version, str):
            raise TypeError("Expected argument 'sap_product_version' to be a str")
        pulumi.set(__self__, "sap_product_version", sap_product_version)
        if server_name and not isinstance(server_name, str):
            raise TypeError("Expected argument 'server_name' to be a str")
        pulumi.set(__self__, "server_name", server_name)
        if system_data and not isinstance(system_data, dict):
            raise TypeError("Expected argument 'system_data' to be a dict")
        pulumi.set(__self__, "system_data", system_data)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="configurationData")
    def configuration_data(self) -> 'outputs.ConfigurationDataResponse':
        """
        Configuration data for this server instance.
        """
        return pulumi.get(self, "configuration_data")

    @property
    @pulumi.getter
    def errors(self) -> 'outputs.SAPMigrateErrorResponse':
        """
        Defines the errors related to SAP Instance resource.
        """
        return pulumi.get(self, "errors")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceSid")
    def instance_sid(self) -> str:
        """
        This is the Instance SID for ASCS/AP/DB instance.  An SAP system with HANA database for example could have a different SID for database Instance than that of ASCS instance.
        """
        return pulumi.get(self, "instance_sid")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="operatingSystem")
    def operating_system(self) -> str:
        """
        This is Operating System on which the host server is running.
        """
        return pulumi.get(self, "operating_system")

    @property
    @pulumi.getter(name="performanceData")
    def performance_data(self) -> Any:
        """
        Configuration data for this server instance.
        """
        return pulumi.get(self, "performance_data")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        """
        Defines the provisioning states.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="sapInstanceType")
    def sap_instance_type(self) -> str:
        """
        Defines the type SAP instance on this server instance.
        """
        return pulumi.get(self, "sap_instance_type")

    @property
    @pulumi.getter(name="sapProduct")
    def sap_product(self) -> str:
        """
        This is the SAP Application Component; e.g. SAP S/4HANA 2022, SAP ERP ENHANCE PACKAGE.
        """
        return pulumi.get(self, "sap_product")

    @property
    @pulumi.getter(name="sapProductVersion")
    def sap_product_version(self) -> str:
        """
        Provide the product version of the SAP product.
        """
        return pulumi.get(self, "sap_product_version")

    @property
    @pulumi.getter(name="serverName")
    def server_name(self) -> str:
        """
        This is the Virtual Machine Name of the SAP system. Add all the virtual machines attached to an SAP system which you wish to migrate to Azure. Keeping this not equal to ID as for single tier all InstanceTypes would be on same server, leading to multiple resources with same servername.
        """
        return pulumi.get(self, "server_name")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> 'outputs.SystemDataResponse':
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")


class AwaitableGetServerInstanceResult(GetServerInstanceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServerInstanceResult(
            configuration_data=self.configuration_data,
            errors=self.errors,
            id=self.id,
            instance_sid=self.instance_sid,
            name=self.name,
            operating_system=self.operating_system,
            performance_data=self.performance_data,
            provisioning_state=self.provisioning_state,
            sap_instance_type=self.sap_instance_type,
            sap_product=self.sap_product,
            sap_product_version=self.sap_product_version,
            server_name=self.server_name,
            system_data=self.system_data,
            type=self.type)


def get_server_instance(resource_group_name: Optional[str] = None,
                        sap_discovery_site_name: Optional[str] = None,
                        sap_instance_name: Optional[str] = None,
                        server_instance_name: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetServerInstanceResult:
    """
    Gets the Server Instance resource.
    Azure REST API version: 2023-10-01-preview.


    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str sap_discovery_site_name: The name of the discovery site resource for SAP Migration.
    :param str sap_instance_name: The name of SAP Instance resource for SAP Migration.
    :param str server_instance_name: The name of the Server instance resource for SAP Migration.
    """
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['sapDiscoverySiteName'] = sap_discovery_site_name
    __args__['sapInstanceName'] = sap_instance_name
    __args__['serverInstanceName'] = server_instance_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:workloads:getServerInstance', __args__, opts=opts, typ=GetServerInstanceResult).value

    return AwaitableGetServerInstanceResult(
        configuration_data=pulumi.get(__ret__, 'configuration_data'),
        errors=pulumi.get(__ret__, 'errors'),
        id=pulumi.get(__ret__, 'id'),
        instance_sid=pulumi.get(__ret__, 'instance_sid'),
        name=pulumi.get(__ret__, 'name'),
        operating_system=pulumi.get(__ret__, 'operating_system'),
        performance_data=pulumi.get(__ret__, 'performance_data'),
        provisioning_state=pulumi.get(__ret__, 'provisioning_state'),
        sap_instance_type=pulumi.get(__ret__, 'sap_instance_type'),
        sap_product=pulumi.get(__ret__, 'sap_product'),
        sap_product_version=pulumi.get(__ret__, 'sap_product_version'),
        server_name=pulumi.get(__ret__, 'server_name'),
        system_data=pulumi.get(__ret__, 'system_data'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_server_instance)
def get_server_instance_output(resource_group_name: Optional[pulumi.Input[str]] = None,
                               sap_discovery_site_name: Optional[pulumi.Input[str]] = None,
                               sap_instance_name: Optional[pulumi.Input[str]] = None,
                               server_instance_name: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetServerInstanceResult]:
    """
    Gets the Server Instance resource.
    Azure REST API version: 2023-10-01-preview.


    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str sap_discovery_site_name: The name of the discovery site resource for SAP Migration.
    :param str sap_instance_name: The name of SAP Instance resource for SAP Migration.
    :param str server_instance_name: The name of the Server instance resource for SAP Migration.
    """
    ...
