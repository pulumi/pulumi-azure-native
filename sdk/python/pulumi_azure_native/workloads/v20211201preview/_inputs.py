# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from ._enums import *

__all__ = [
    'DB2ProviderInstancePropertiesArgs',
    'HanaDbProviderInstancePropertiesArgs',
    'ManagedRGConfigurationArgs',
    'MsSqlServerProviderInstancePropertiesArgs',
    'PrometheusHaClusterProviderInstancePropertiesArgs',
    'PrometheusOSProviderInstancePropertiesArgs',
    'SapNetWeaverProviderInstancePropertiesArgs',
]

@pulumi.input_type
class DB2ProviderInstancePropertiesArgs:
    def __init__(__self__, *,
                 provider_type: pulumi.Input[str],
                 db_name: Optional[pulumi.Input[str]] = None,
                 db_password: Optional[pulumi.Input[str]] = None,
                 db_password_uri: Optional[pulumi.Input[str]] = None,
                 db_port: Optional[pulumi.Input[str]] = None,
                 db_username: Optional[pulumi.Input[str]] = None,
                 hostname: Optional[pulumi.Input[str]] = None,
                 sap_sid: Optional[pulumi.Input[str]] = None):
        """
        Gets or sets the DB2 provider properties.
        :param pulumi.Input[str] provider_type: The provider type. For example, the value can be SapHana.
               Expected value is 'Db2'.
        :param pulumi.Input[str] db_name: Gets or sets the db2 database name.
        :param pulumi.Input[str] db_password: Gets or sets the db2 database password.
        :param pulumi.Input[str] db_password_uri: Gets or sets the key vault URI to secret with the database password.
        :param pulumi.Input[str] db_port: Gets or sets the db2 database sql port.
        :param pulumi.Input[str] db_username: Gets or sets the db2 database user name.
        :param pulumi.Input[str] hostname: Gets or sets the target virtual machine name.
        :param pulumi.Input[str] sap_sid: Gets or sets the SAP System Identifier
        """
        pulumi.set(__self__, "provider_type", 'Db2')
        if db_name is not None:
            pulumi.set(__self__, "db_name", db_name)
        if db_password is not None:
            pulumi.set(__self__, "db_password", db_password)
        if db_password_uri is not None:
            pulumi.set(__self__, "db_password_uri", db_password_uri)
        if db_port is not None:
            pulumi.set(__self__, "db_port", db_port)
        if db_username is not None:
            pulumi.set(__self__, "db_username", db_username)
        if hostname is not None:
            pulumi.set(__self__, "hostname", hostname)
        if sap_sid is not None:
            pulumi.set(__self__, "sap_sid", sap_sid)

    @property
    @pulumi.getter(name="providerType")
    def provider_type(self) -> pulumi.Input[str]:
        """
        The provider type. For example, the value can be SapHana.
        Expected value is 'Db2'.
        """
        return pulumi.get(self, "provider_type")

    @provider_type.setter
    def provider_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "provider_type", value)

    @property
    @pulumi.getter(name="dbName")
    def db_name(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the db2 database name.
        """
        return pulumi.get(self, "db_name")

    @db_name.setter
    def db_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_name", value)

    @property
    @pulumi.getter(name="dbPassword")
    def db_password(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the db2 database password.
        """
        return pulumi.get(self, "db_password")

    @db_password.setter
    def db_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_password", value)

    @property
    @pulumi.getter(name="dbPasswordUri")
    def db_password_uri(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the key vault URI to secret with the database password.
        """
        return pulumi.get(self, "db_password_uri")

    @db_password_uri.setter
    def db_password_uri(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_password_uri", value)

    @property
    @pulumi.getter(name="dbPort")
    def db_port(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the db2 database sql port.
        """
        return pulumi.get(self, "db_port")

    @db_port.setter
    def db_port(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_port", value)

    @property
    @pulumi.getter(name="dbUsername")
    def db_username(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the db2 database user name.
        """
        return pulumi.get(self, "db_username")

    @db_username.setter
    def db_username(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_username", value)

    @property
    @pulumi.getter
    def hostname(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the target virtual machine name.
        """
        return pulumi.get(self, "hostname")

    @hostname.setter
    def hostname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostname", value)

    @property
    @pulumi.getter(name="sapSid")
    def sap_sid(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the SAP System Identifier
        """
        return pulumi.get(self, "sap_sid")

    @sap_sid.setter
    def sap_sid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_sid", value)


@pulumi.input_type
class HanaDbProviderInstancePropertiesArgs:
    def __init__(__self__, *,
                 provider_type: pulumi.Input[str],
                 db_name: Optional[pulumi.Input[str]] = None,
                 db_password: Optional[pulumi.Input[str]] = None,
                 db_password_uri: Optional[pulumi.Input[str]] = None,
                 db_ssl_certificate_uri: Optional[pulumi.Input[str]] = None,
                 db_username: Optional[pulumi.Input[str]] = None,
                 hostname: Optional[pulumi.Input[str]] = None,
                 instance_number: Optional[pulumi.Input[str]] = None,
                 sql_port: Optional[pulumi.Input[str]] = None,
                 ssl_host_name_in_certificate: Optional[pulumi.Input[str]] = None):
        """
        Gets or sets the provider properties.
        :param pulumi.Input[str] provider_type: The provider type. For example, the value can be SapHana.
               Expected value is 'SapHana'.
        :param pulumi.Input[str] db_name: Gets or sets the hana database name.
        :param pulumi.Input[str] db_password: Gets or sets the database password.
        :param pulumi.Input[str] db_password_uri: Gets or sets the key vault URI to secret with the database password.
        :param pulumi.Input[str] db_ssl_certificate_uri: Gets or sets the blob URI to SSL certificate for the DB.
        :param pulumi.Input[str] db_username: Gets or sets the database user name.
        :param pulumi.Input[str] hostname: Gets or sets the target virtual machine size.
        :param pulumi.Input[str] instance_number: Gets or sets the database instance number.
        :param pulumi.Input[str] sql_port: Gets or sets the database sql port.
        :param pulumi.Input[str] ssl_host_name_in_certificate: Gets or sets the hostname(s) in the SSL certificate.
        """
        pulumi.set(__self__, "provider_type", 'SapHana')
        if db_name is not None:
            pulumi.set(__self__, "db_name", db_name)
        if db_password is not None:
            pulumi.set(__self__, "db_password", db_password)
        if db_password_uri is not None:
            pulumi.set(__self__, "db_password_uri", db_password_uri)
        if db_ssl_certificate_uri is not None:
            pulumi.set(__self__, "db_ssl_certificate_uri", db_ssl_certificate_uri)
        if db_username is not None:
            pulumi.set(__self__, "db_username", db_username)
        if hostname is not None:
            pulumi.set(__self__, "hostname", hostname)
        if instance_number is not None:
            pulumi.set(__self__, "instance_number", instance_number)
        if sql_port is not None:
            pulumi.set(__self__, "sql_port", sql_port)
        if ssl_host_name_in_certificate is not None:
            pulumi.set(__self__, "ssl_host_name_in_certificate", ssl_host_name_in_certificate)

    @property
    @pulumi.getter(name="providerType")
    def provider_type(self) -> pulumi.Input[str]:
        """
        The provider type. For example, the value can be SapHana.
        Expected value is 'SapHana'.
        """
        return pulumi.get(self, "provider_type")

    @provider_type.setter
    def provider_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "provider_type", value)

    @property
    @pulumi.getter(name="dbName")
    def db_name(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the hana database name.
        """
        return pulumi.get(self, "db_name")

    @db_name.setter
    def db_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_name", value)

    @property
    @pulumi.getter(name="dbPassword")
    def db_password(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the database password.
        """
        return pulumi.get(self, "db_password")

    @db_password.setter
    def db_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_password", value)

    @property
    @pulumi.getter(name="dbPasswordUri")
    def db_password_uri(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the key vault URI to secret with the database password.
        """
        return pulumi.get(self, "db_password_uri")

    @db_password_uri.setter
    def db_password_uri(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_password_uri", value)

    @property
    @pulumi.getter(name="dbSslCertificateUri")
    def db_ssl_certificate_uri(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the blob URI to SSL certificate for the DB.
        """
        return pulumi.get(self, "db_ssl_certificate_uri")

    @db_ssl_certificate_uri.setter
    def db_ssl_certificate_uri(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_ssl_certificate_uri", value)

    @property
    @pulumi.getter(name="dbUsername")
    def db_username(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the database user name.
        """
        return pulumi.get(self, "db_username")

    @db_username.setter
    def db_username(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_username", value)

    @property
    @pulumi.getter
    def hostname(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the target virtual machine size.
        """
        return pulumi.get(self, "hostname")

    @hostname.setter
    def hostname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostname", value)

    @property
    @pulumi.getter(name="instanceNumber")
    def instance_number(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the database instance number.
        """
        return pulumi.get(self, "instance_number")

    @instance_number.setter
    def instance_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_number", value)

    @property
    @pulumi.getter(name="sqlPort")
    def sql_port(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the database sql port.
        """
        return pulumi.get(self, "sql_port")

    @sql_port.setter
    def sql_port(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sql_port", value)

    @property
    @pulumi.getter(name="sslHostNameInCertificate")
    def ssl_host_name_in_certificate(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the hostname(s) in the SSL certificate.
        """
        return pulumi.get(self, "ssl_host_name_in_certificate")

    @ssl_host_name_in_certificate.setter
    def ssl_host_name_in_certificate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ssl_host_name_in_certificate", value)


@pulumi.input_type
class ManagedRGConfigurationArgs:
    def __init__(__self__, *,
                 name: Optional[pulumi.Input[str]] = None):
        """
        Managed resource group configuration
        :param pulumi.Input[str] name: Managed resource group name
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Managed resource group name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class MsSqlServerProviderInstancePropertiesArgs:
    def __init__(__self__, *,
                 provider_type: pulumi.Input[str],
                 db_password: Optional[pulumi.Input[str]] = None,
                 db_password_uri: Optional[pulumi.Input[str]] = None,
                 db_port: Optional[pulumi.Input[str]] = None,
                 db_username: Optional[pulumi.Input[str]] = None,
                 hostname: Optional[pulumi.Input[str]] = None,
                 sap_sid: Optional[pulumi.Input[str]] = None):
        """
        Gets or sets the SQL server provider properties.
        :param pulumi.Input[str] provider_type: The provider type. For example, the value can be SapHana.
               Expected value is 'MsSqlServer'.
        :param pulumi.Input[str] db_password: Gets or sets the database password.
        :param pulumi.Input[str] db_password_uri: Gets or sets the key vault URI to secret with the database password.
        :param pulumi.Input[str] db_port: Gets or sets the database sql port.
        :param pulumi.Input[str] db_username: Gets or sets the database user name.
        :param pulumi.Input[str] hostname: Gets or sets the SQL server host name.
        :param pulumi.Input[str] sap_sid: Gets or sets the SAP System Identifier
        """
        pulumi.set(__self__, "provider_type", 'MsSqlServer')
        if db_password is not None:
            pulumi.set(__self__, "db_password", db_password)
        if db_password_uri is not None:
            pulumi.set(__self__, "db_password_uri", db_password_uri)
        if db_port is not None:
            pulumi.set(__self__, "db_port", db_port)
        if db_username is not None:
            pulumi.set(__self__, "db_username", db_username)
        if hostname is not None:
            pulumi.set(__self__, "hostname", hostname)
        if sap_sid is not None:
            pulumi.set(__self__, "sap_sid", sap_sid)

    @property
    @pulumi.getter(name="providerType")
    def provider_type(self) -> pulumi.Input[str]:
        """
        The provider type. For example, the value can be SapHana.
        Expected value is 'MsSqlServer'.
        """
        return pulumi.get(self, "provider_type")

    @provider_type.setter
    def provider_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "provider_type", value)

    @property
    @pulumi.getter(name="dbPassword")
    def db_password(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the database password.
        """
        return pulumi.get(self, "db_password")

    @db_password.setter
    def db_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_password", value)

    @property
    @pulumi.getter(name="dbPasswordUri")
    def db_password_uri(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the key vault URI to secret with the database password.
        """
        return pulumi.get(self, "db_password_uri")

    @db_password_uri.setter
    def db_password_uri(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_password_uri", value)

    @property
    @pulumi.getter(name="dbPort")
    def db_port(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the database sql port.
        """
        return pulumi.get(self, "db_port")

    @db_port.setter
    def db_port(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_port", value)

    @property
    @pulumi.getter(name="dbUsername")
    def db_username(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the database user name.
        """
        return pulumi.get(self, "db_username")

    @db_username.setter
    def db_username(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_username", value)

    @property
    @pulumi.getter
    def hostname(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the SQL server host name.
        """
        return pulumi.get(self, "hostname")

    @hostname.setter
    def hostname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostname", value)

    @property
    @pulumi.getter(name="sapSid")
    def sap_sid(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the SAP System Identifier
        """
        return pulumi.get(self, "sap_sid")

    @sap_sid.setter
    def sap_sid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_sid", value)


@pulumi.input_type
class PrometheusHaClusterProviderInstancePropertiesArgs:
    def __init__(__self__, *,
                 provider_type: pulumi.Input[str],
                 cluster_name: Optional[pulumi.Input[str]] = None,
                 hostname: Optional[pulumi.Input[str]] = None,
                 prometheus_url: Optional[pulumi.Input[str]] = None,
                 sid: Optional[pulumi.Input[str]] = None):
        """
        Gets or sets the PrometheusHaCluster provider properties.
        :param pulumi.Input[str] provider_type: The provider type. For example, the value can be SapHana.
               Expected value is 'PrometheusHaCluster'.
        :param pulumi.Input[str] cluster_name: Gets or sets the clusterName.
        :param pulumi.Input[str] hostname: Gets or sets the target machine name.
        :param pulumi.Input[str] prometheus_url: URL of the Node Exporter endpoint.
        :param pulumi.Input[str] sid: Gets or sets the cluster sid.
        """
        pulumi.set(__self__, "provider_type", 'PrometheusHaCluster')
        if cluster_name is not None:
            pulumi.set(__self__, "cluster_name", cluster_name)
        if hostname is not None:
            pulumi.set(__self__, "hostname", hostname)
        if prometheus_url is not None:
            pulumi.set(__self__, "prometheus_url", prometheus_url)
        if sid is not None:
            pulumi.set(__self__, "sid", sid)

    @property
    @pulumi.getter(name="providerType")
    def provider_type(self) -> pulumi.Input[str]:
        """
        The provider type. For example, the value can be SapHana.
        Expected value is 'PrometheusHaCluster'.
        """
        return pulumi.get(self, "provider_type")

    @provider_type.setter
    def provider_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "provider_type", value)

    @property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the clusterName.
        """
        return pulumi.get(self, "cluster_name")

    @cluster_name.setter
    def cluster_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_name", value)

    @property
    @pulumi.getter
    def hostname(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the target machine name.
        """
        return pulumi.get(self, "hostname")

    @hostname.setter
    def hostname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostname", value)

    @property
    @pulumi.getter(name="prometheusUrl")
    def prometheus_url(self) -> Optional[pulumi.Input[str]]:
        """
        URL of the Node Exporter endpoint.
        """
        return pulumi.get(self, "prometheus_url")

    @prometheus_url.setter
    def prometheus_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "prometheus_url", value)

    @property
    @pulumi.getter
    def sid(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the cluster sid.
        """
        return pulumi.get(self, "sid")

    @sid.setter
    def sid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sid", value)


@pulumi.input_type
class PrometheusOSProviderInstancePropertiesArgs:
    def __init__(__self__, *,
                 provider_type: pulumi.Input[str],
                 prometheus_url: Optional[pulumi.Input[str]] = None):
        """
        Gets or sets the PrometheusOS provider properties.
        :param pulumi.Input[str] provider_type: The provider type. For example, the value can be SapHana.
               Expected value is 'PrometheusOS'.
        :param pulumi.Input[str] prometheus_url: URL of the Node Exporter endpoint
        """
        pulumi.set(__self__, "provider_type", 'PrometheusOS')
        if prometheus_url is not None:
            pulumi.set(__self__, "prometheus_url", prometheus_url)

    @property
    @pulumi.getter(name="providerType")
    def provider_type(self) -> pulumi.Input[str]:
        """
        The provider type. For example, the value can be SapHana.
        Expected value is 'PrometheusOS'.
        """
        return pulumi.get(self, "provider_type")

    @provider_type.setter
    def provider_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "provider_type", value)

    @property
    @pulumi.getter(name="prometheusUrl")
    def prometheus_url(self) -> Optional[pulumi.Input[str]]:
        """
        URL of the Node Exporter endpoint
        """
        return pulumi.get(self, "prometheus_url")

    @prometheus_url.setter
    def prometheus_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "prometheus_url", value)


@pulumi.input_type
class SapNetWeaverProviderInstancePropertiesArgs:
    def __init__(__self__, *,
                 provider_type: pulumi.Input[str],
                 sap_client_id: Optional[pulumi.Input[str]] = None,
                 sap_host_file_entries: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 sap_hostname: Optional[pulumi.Input[str]] = None,
                 sap_instance_nr: Optional[pulumi.Input[str]] = None,
                 sap_password: Optional[pulumi.Input[str]] = None,
                 sap_password_uri: Optional[pulumi.Input[str]] = None,
                 sap_port_number: Optional[pulumi.Input[str]] = None,
                 sap_sid: Optional[pulumi.Input[str]] = None,
                 sap_ssl_certificate_uri: Optional[pulumi.Input[str]] = None,
                 sap_username: Optional[pulumi.Input[str]] = None):
        """
        Gets or sets the provider properties.
        :param pulumi.Input[str] provider_type: The provider type. For example, the value can be SapHana.
               Expected value is 'SapNetWeaver'.
        :param pulumi.Input[str] sap_client_id: Gets or sets the SAP Client ID.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] sap_host_file_entries: Gets or sets the list of HostFile Entries
        :param pulumi.Input[str] sap_hostname: Gets or sets the target virtual machine IP Address/FQDN.
        :param pulumi.Input[str] sap_instance_nr: Gets or sets the instance number of SAP NetWeaver.
        :param pulumi.Input[str] sap_password: Sets the SAP password.
        :param pulumi.Input[str] sap_password_uri: Gets or sets the key vault URI to secret with the SAP password.
        :param pulumi.Input[str] sap_port_number: Gets or sets the SAP HTTP port number.
        :param pulumi.Input[str] sap_sid: Gets or sets the SAP System Identifier
        :param pulumi.Input[str] sap_ssl_certificate_uri: Gets or sets the blob URI to SSL certificate for the SAP system.
        :param pulumi.Input[str] sap_username: Gets or sets the SAP user name.
        """
        pulumi.set(__self__, "provider_type", 'SapNetWeaver')
        if sap_client_id is not None:
            pulumi.set(__self__, "sap_client_id", sap_client_id)
        if sap_host_file_entries is not None:
            pulumi.set(__self__, "sap_host_file_entries", sap_host_file_entries)
        if sap_hostname is not None:
            pulumi.set(__self__, "sap_hostname", sap_hostname)
        if sap_instance_nr is not None:
            pulumi.set(__self__, "sap_instance_nr", sap_instance_nr)
        if sap_password is not None:
            pulumi.set(__self__, "sap_password", sap_password)
        if sap_password_uri is not None:
            pulumi.set(__self__, "sap_password_uri", sap_password_uri)
        if sap_port_number is not None:
            pulumi.set(__self__, "sap_port_number", sap_port_number)
        if sap_sid is not None:
            pulumi.set(__self__, "sap_sid", sap_sid)
        if sap_ssl_certificate_uri is not None:
            pulumi.set(__self__, "sap_ssl_certificate_uri", sap_ssl_certificate_uri)
        if sap_username is not None:
            pulumi.set(__self__, "sap_username", sap_username)

    @property
    @pulumi.getter(name="providerType")
    def provider_type(self) -> pulumi.Input[str]:
        """
        The provider type. For example, the value can be SapHana.
        Expected value is 'SapNetWeaver'.
        """
        return pulumi.get(self, "provider_type")

    @provider_type.setter
    def provider_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "provider_type", value)

    @property
    @pulumi.getter(name="sapClientId")
    def sap_client_id(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the SAP Client ID.
        """
        return pulumi.get(self, "sap_client_id")

    @sap_client_id.setter
    def sap_client_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_client_id", value)

    @property
    @pulumi.getter(name="sapHostFileEntries")
    def sap_host_file_entries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Gets or sets the list of HostFile Entries
        """
        return pulumi.get(self, "sap_host_file_entries")

    @sap_host_file_entries.setter
    def sap_host_file_entries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "sap_host_file_entries", value)

    @property
    @pulumi.getter(name="sapHostname")
    def sap_hostname(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the target virtual machine IP Address/FQDN.
        """
        return pulumi.get(self, "sap_hostname")

    @sap_hostname.setter
    def sap_hostname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_hostname", value)

    @property
    @pulumi.getter(name="sapInstanceNr")
    def sap_instance_nr(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the instance number of SAP NetWeaver.
        """
        return pulumi.get(self, "sap_instance_nr")

    @sap_instance_nr.setter
    def sap_instance_nr(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_instance_nr", value)

    @property
    @pulumi.getter(name="sapPassword")
    def sap_password(self) -> Optional[pulumi.Input[str]]:
        """
        Sets the SAP password.
        """
        return pulumi.get(self, "sap_password")

    @sap_password.setter
    def sap_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_password", value)

    @property
    @pulumi.getter(name="sapPasswordUri")
    def sap_password_uri(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the key vault URI to secret with the SAP password.
        """
        return pulumi.get(self, "sap_password_uri")

    @sap_password_uri.setter
    def sap_password_uri(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_password_uri", value)

    @property
    @pulumi.getter(name="sapPortNumber")
    def sap_port_number(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the SAP HTTP port number.
        """
        return pulumi.get(self, "sap_port_number")

    @sap_port_number.setter
    def sap_port_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_port_number", value)

    @property
    @pulumi.getter(name="sapSid")
    def sap_sid(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the SAP System Identifier
        """
        return pulumi.get(self, "sap_sid")

    @sap_sid.setter
    def sap_sid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_sid", value)

    @property
    @pulumi.getter(name="sapSslCertificateUri")
    def sap_ssl_certificate_uri(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the blob URI to SSL certificate for the SAP system.
        """
        return pulumi.get(self, "sap_ssl_certificate_uri")

    @sap_ssl_certificate_uri.setter
    def sap_ssl_certificate_uri(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_ssl_certificate_uri", value)

    @property
    @pulumi.getter(name="sapUsername")
    def sap_username(self) -> Optional[pulumi.Input[str]]:
        """
        Gets or sets the SAP user name.
        """
        return pulumi.get(self, "sap_username")

    @sap_username.setter
    def sap_username(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sap_username", value)


