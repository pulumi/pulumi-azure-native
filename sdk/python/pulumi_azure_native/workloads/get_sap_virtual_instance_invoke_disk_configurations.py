# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetSapVirtualInstanceInvokeDiskConfigurationsResult',
    'AwaitableGetSapVirtualInstanceInvokeDiskConfigurationsResult',
    'get_sap_virtual_instance_invoke_disk_configurations',
    'get_sap_virtual_instance_invoke_disk_configurations_output',
]

@pulumi.output_type
class GetSapVirtualInstanceInvokeDiskConfigurationsResult:
    """
    The list of disk configuration for vmSku which are part of SAP deployment.
    """
    def __init__(__self__, volume_configurations=None):
        if volume_configurations and not isinstance(volume_configurations, dict):
            raise TypeError("Expected argument 'volume_configurations' to be a dict")
        pulumi.set(__self__, "volume_configurations", volume_configurations)

    @property
    @pulumi.getter(name="volumeConfigurations")
    def volume_configurations(self) -> Optional[Mapping[str, 'outputs.SAPDiskConfigurationResponse']]:
        """
        The disk configuration for the db volume. For HANA, Required volumes are: ['hana/data', 'hana/log', hana/shared', 'usr/sap', 'os'], Optional volume : ['backup'].
        """
        return pulumi.get(self, "volume_configurations")


class AwaitableGetSapVirtualInstanceInvokeDiskConfigurationsResult(GetSapVirtualInstanceInvokeDiskConfigurationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSapVirtualInstanceInvokeDiskConfigurationsResult(
            volume_configurations=self.volume_configurations)


def get_sap_virtual_instance_invoke_disk_configurations(app_location: Optional[str] = None,
                                                        database_type: Optional[Union[str, 'SAPDatabaseType']] = None,
                                                        db_vm_sku: Optional[str] = None,
                                                        deployment_type: Optional[Union[str, 'SAPDeploymentType']] = None,
                                                        environment: Optional[Union[str, 'SAPEnvironmentType']] = None,
                                                        location: Optional[str] = None,
                                                        sap_product: Optional[Union[str, 'SAPProductType']] = None,
                                                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSapVirtualInstanceInvokeDiskConfigurationsResult:
    """
    Get the SAP Disk Configuration Layout prod/non-prod SAP System.
    Azure REST API version: 2024-09-01.


    :param str app_location: The geo-location where the SAP resources will be created.
    :param Union[str, 'SAPDatabaseType'] database_type: The database type. Eg: HANA, DB2, etc
    :param str db_vm_sku: The VM SKU for database instance.
    :param Union[str, 'SAPDeploymentType'] deployment_type: The deployment type. Eg: SingleServer/ThreeTier
    :param Union[str, 'SAPEnvironmentType'] environment: Defines the environment type - Production/Non Production.
    :param str location: The name of the Azure region.
    :param Union[str, 'SAPProductType'] sap_product: Defines the SAP Product type.
    """
    __args__ = dict()
    __args__['appLocation'] = app_location
    __args__['databaseType'] = database_type
    __args__['dbVmSku'] = db_vm_sku
    __args__['deploymentType'] = deployment_type
    __args__['environment'] = environment
    __args__['location'] = location
    __args__['sapProduct'] = sap_product
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:workloads:getSapVirtualInstanceInvokeDiskConfigurations', __args__, opts=opts, typ=GetSapVirtualInstanceInvokeDiskConfigurationsResult).value

    return AwaitableGetSapVirtualInstanceInvokeDiskConfigurationsResult(
        volume_configurations=pulumi.get(__ret__, 'volume_configurations'))
def get_sap_virtual_instance_invoke_disk_configurations_output(app_location: Optional[pulumi.Input[str]] = None,
                                                               database_type: Optional[pulumi.Input[Union[str, 'SAPDatabaseType']]] = None,
                                                               db_vm_sku: Optional[pulumi.Input[str]] = None,
                                                               deployment_type: Optional[pulumi.Input[Union[str, 'SAPDeploymentType']]] = None,
                                                               environment: Optional[pulumi.Input[Union[str, 'SAPEnvironmentType']]] = None,
                                                               location: Optional[pulumi.Input[str]] = None,
                                                               sap_product: Optional[pulumi.Input[Union[str, 'SAPProductType']]] = None,
                                                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSapVirtualInstanceInvokeDiskConfigurationsResult]:
    """
    Get the SAP Disk Configuration Layout prod/non-prod SAP System.
    Azure REST API version: 2024-09-01.


    :param str app_location: The geo-location where the SAP resources will be created.
    :param Union[str, 'SAPDatabaseType'] database_type: The database type. Eg: HANA, DB2, etc
    :param str db_vm_sku: The VM SKU for database instance.
    :param Union[str, 'SAPDeploymentType'] deployment_type: The deployment type. Eg: SingleServer/ThreeTier
    :param Union[str, 'SAPEnvironmentType'] environment: Defines the environment type - Production/Non Production.
    :param str location: The name of the Azure region.
    :param Union[str, 'SAPProductType'] sap_product: Defines the SAP Product type.
    """
    __args__ = dict()
    __args__['appLocation'] = app_location
    __args__['databaseType'] = database_type
    __args__['dbVmSku'] = db_vm_sku
    __args__['deploymentType'] = deployment_type
    __args__['environment'] = environment
    __args__['location'] = location
    __args__['sapProduct'] = sap_product
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:workloads:getSapVirtualInstanceInvokeDiskConfigurations', __args__, opts=opts, typ=GetSapVirtualInstanceInvokeDiskConfigurationsResult)
    return __ret__.apply(lambda __response__: GetSapVirtualInstanceInvokeDiskConfigurationsResult(
        volume_configurations=pulumi.get(__response__, 'volume_configurations')))
