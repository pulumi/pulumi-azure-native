# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'CustomImageOsType',
    'EnableStatus',
    'LinuxOsState',
    'NotificationChannelEventType',
    'NotificationStatus',
    'PolicyEvaluatorType',
    'PolicyFactName',
    'PolicyStatus',
    'PremiumDataDisk',
    'SourceControlType',
    'StorageType',
    'TransportProtocol',
    'UsagePermissionType',
    'VirtualMachineCreationSource',
    'WindowsOsState',
]


class CustomImageOsType(str, Enum):
    """
    The OS type of the custom image (i.e. Windows, Linux)
    """
    WINDOWS = "Windows"
    LINUX = "Linux"
    NONE = "None"


class EnableStatus(str, Enum):
    """
    The status of the schedule (i.e. Enabled, Disabled)
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class LinuxOsState(str, Enum):
    """
    The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
    """
    NON_DEPROVISIONED = "NonDeprovisioned"
    DEPROVISION_REQUESTED = "DeprovisionRequested"
    DEPROVISION_APPLIED = "DeprovisionApplied"


class NotificationChannelEventType(str, Enum):
    """
    The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
    """
    AUTO_SHUTDOWN = "AutoShutdown"
    COST = "Cost"


class NotificationStatus(str, Enum):
    """
    If notifications are enabled for this schedule (i.e. Enabled, Disabled).
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class PolicyEvaluatorType(str, Enum):
    """
    The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
    """
    ALLOWED_VALUES_POLICY = "AllowedValuesPolicy"
    MAX_VALUE_POLICY = "MaxValuePolicy"


class PolicyFactName(str, Enum):
    """
    The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
    """
    USER_OWNED_LAB_VM_COUNT = "UserOwnedLabVmCount"
    USER_OWNED_LAB_PREMIUM_VM_COUNT = "UserOwnedLabPremiumVmCount"
    LAB_VM_COUNT = "LabVmCount"
    LAB_PREMIUM_VM_COUNT = "LabPremiumVmCount"
    LAB_VM_SIZE = "LabVmSize"
    GALLERY_IMAGE = "GalleryImage"
    USER_OWNED_LAB_VM_COUNT_IN_SUBNET = "UserOwnedLabVmCountInSubnet"
    LAB_TARGET_COST = "LabTargetCost"


class PolicyStatus(str, Enum):
    """
    The status of the policy.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class PremiumDataDisk(str, Enum):
    """
    The setting to enable usage of premium data disks.
    When its value is 'Enabled', creation of standard or premium data disks is allowed.
    When its value is 'Disabled', only creation of standard data disks is allowed.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class SourceControlType(str, Enum):
    """
    The artifact source's type.
    """
    VSO_GIT = "VsoGit"
    GIT_HUB = "GitHub"


class StorageType(str, Enum):
    """
    Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
    """
    STANDARD = "Standard"
    PREMIUM = "Premium"


class TransportProtocol(str, Enum):
    """
    Protocol type of the port.
    """
    TCP = "Tcp"
    UDP = "Udp"


class UsagePermissionType(str, Enum):
    """
    Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
    """
    DEFAULT = "Default"
    DENY = "Deny"
    ALLOW = "Allow"


class VirtualMachineCreationSource(str, Enum):
    """
    Tells source of creation of lab virtual machine. Output property only.
    """
    FROM_CUSTOM_IMAGE = "FromCustomImage"
    FROM_GALLERY_IMAGE = "FromGalleryImage"


class WindowsOsState(str, Enum):
    """
    The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
    """
    NON_SYSPREPPED = "NonSysprepped"
    SYSPREP_REQUESTED = "SysprepRequested"
    SYSPREP_APPLIED = "SysprepApplied"
