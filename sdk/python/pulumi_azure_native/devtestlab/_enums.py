# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import builtins
from enum import Enum

__all__ = [
    'CustomImageOsType',
    'EnableStatus',
    'EnvironmentPermission',
    'HostCachingOptions',
    'LinuxOsState',
    'ManagedIdentityType',
    'NotificationChannelEventType',
    'PolicyEvaluatorType',
    'PolicyFactName',
    'PolicyStatus',
    'PremiumDataDisk',
    'SourceControlType',
    'StorageType',
    'TransportProtocol',
    'UsagePermissionType',
    'WindowsOsState',
]


class CustomImageOsType(builtins.str, Enum):
    """
    The OS type of the custom image (i.e. Windows, Linux)
    """
    WINDOWS = "Windows"
    LINUX = "Linux"
    NONE = "None"


class EnableStatus(builtins.str, Enum):
    """
    The status of the schedule (i.e. Enabled, Disabled)
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class EnvironmentPermission(builtins.str, Enum):
    """
    The access rights to be granted to the user when provisioning an environment
    """
    READER = "Reader"
    CONTRIBUTOR = "Contributor"


class HostCachingOptions(builtins.str, Enum):
    """
    Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
    """
    NONE = "None"
    READ_ONLY = "ReadOnly"
    READ_WRITE = "ReadWrite"


class LinuxOsState(builtins.str, Enum):
    """
    The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
    """
    NON_DEPROVISIONED = "NonDeprovisioned"
    DEPROVISION_REQUESTED = "DeprovisionRequested"
    DEPROVISION_APPLIED = "DeprovisionApplied"


class ManagedIdentityType(builtins.str, Enum):
    """
    Managed identity.
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class NotificationChannelEventType(builtins.str, Enum):
    """
    The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
    """
    AUTO_SHUTDOWN = "AutoShutdown"
    COST = "Cost"


class PolicyEvaluatorType(builtins.str, Enum):
    """
    The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
    """
    ALLOWED_VALUES_POLICY = "AllowedValuesPolicy"
    MAX_VALUE_POLICY = "MaxValuePolicy"


class PolicyFactName(builtins.str, Enum):
    """
    The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
    """
    USER_OWNED_LAB_VM_COUNT = "UserOwnedLabVmCount"
    USER_OWNED_LAB_PREMIUM_VM_COUNT = "UserOwnedLabPremiumVmCount"
    LAB_VM_COUNT = "LabVmCount"
    LAB_PREMIUM_VM_COUNT = "LabPremiumVmCount"
    LAB_VM_SIZE = "LabVmSize"
    GALLERY_IMAGE = "GalleryImage"
    USER_OWNED_LAB_VM_COUNT_IN_SUBNET = "UserOwnedLabVmCountInSubnet"
    LAB_TARGET_COST = "LabTargetCost"
    ENVIRONMENT_TEMPLATE = "EnvironmentTemplate"
    SCHEDULE_EDIT_PERMISSION = "ScheduleEditPermission"


class PolicyStatus(builtins.str, Enum):
    """
    The status of the policy.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class PremiumDataDisk(builtins.str, Enum):
    """
    The setting to enable usage of premium data disks.
    When its value is 'Enabled', creation of standard or premium data disks is allowed.
    When its value is 'Disabled', only creation of standard data disks is allowed.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class SourceControlType(builtins.str, Enum):
    """
    The artifact source's type.
    """
    VSO_GIT = "VsoGit"
    GIT_HUB = "GitHub"
    STORAGE_ACCOUNT = "StorageAccount"


class StorageType(builtins.str, Enum):
    """
    The storage type for the disk (i.e. Standard, Premium).
    """
    STANDARD = "Standard"
    PREMIUM = "Premium"
    STANDARD_SSD = "StandardSSD"


class TransportProtocol(builtins.str, Enum):
    """
    Protocol type of the port.
    """
    TCP = "Tcp"
    UDP = "Udp"


class UsagePermissionType(builtins.str, Enum):
    """
    Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
    """
    DEFAULT = "Default"
    DENY = "Deny"
    ALLOW = "Allow"


class WindowsOsState(builtins.str, Enum):
    """
    The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
    """
    NON_SYSPREPPED = "NonSysprepped"
    SYSPREP_REQUESTED = "SysprepRequested"
    SYSPREP_APPLIED = "SysprepApplied"
