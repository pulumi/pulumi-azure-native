# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetGalleryInVMAccessControlProfileResult',
    'AwaitableGetGalleryInVMAccessControlProfileResult',
    'get_gallery_in_vm_access_control_profile',
    'get_gallery_in_vm_access_control_profile_output',
]

@pulumi.output_type
class GetGalleryInVMAccessControlProfileResult:
    """
    Specifies information about the gallery inVMAccessControlProfile that you want to create or update.
    """
    def __init__(__self__, id=None, location=None, name=None, properties=None, tags=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if properties and not isinstance(properties, dict):
            raise TypeError("Expected argument 'properties' to be a dict")
        pulumi.set(__self__, "properties", properties)
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        pulumi.set(__self__, "tags", tags)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Resource Id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def location(self) -> str:
        """
        Resource location
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Resource name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def properties(self) -> 'outputs.GalleryInVMAccessControlProfilePropertiesResponse':
        """
        Describes the properties of a gallery inVMAccessControlProfile.
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Mapping[str, str]]:
        """
        Resource tags
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Resource type
        """
        return pulumi.get(self, "type")


class AwaitableGetGalleryInVMAccessControlProfileResult(GetGalleryInVMAccessControlProfileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGalleryInVMAccessControlProfileResult(
            id=self.id,
            location=self.location,
            name=self.name,
            properties=self.properties,
            tags=self.tags,
            type=self.type)


def get_gallery_in_vm_access_control_profile(gallery_name: Optional[str] = None,
                                             in_vm_access_control_profile_name: Optional[str] = None,
                                             resource_group_name: Optional[str] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGalleryInVMAccessControlProfileResult:
    """
    Retrieves information about a gallery inVMAccessControlProfile.
    Azure REST API version: 2024-03-03.


    :param str gallery_name: The name of the Shared Image Gallery from which the InVMAccessControlProfiles are to be retrieved.
    :param str in_vm_access_control_profile_name: The name of the gallery inVMAccessControlProfile to be retrieved.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['galleryName'] = gallery_name
    __args__['inVMAccessControlProfileName'] = in_vm_access_control_profile_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:compute:getGalleryInVMAccessControlProfile', __args__, opts=opts, typ=GetGalleryInVMAccessControlProfileResult).value

    return AwaitableGetGalleryInVMAccessControlProfileResult(
        id=pulumi.get(__ret__, 'id'),
        location=pulumi.get(__ret__, 'location'),
        name=pulumi.get(__ret__, 'name'),
        properties=pulumi.get(__ret__, 'properties'),
        tags=pulumi.get(__ret__, 'tags'),
        type=pulumi.get(__ret__, 'type'))
def get_gallery_in_vm_access_control_profile_output(gallery_name: Optional[pulumi.Input[str]] = None,
                                                    in_vm_access_control_profile_name: Optional[pulumi.Input[str]] = None,
                                                    resource_group_name: Optional[pulumi.Input[str]] = None,
                                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGalleryInVMAccessControlProfileResult]:
    """
    Retrieves information about a gallery inVMAccessControlProfile.
    Azure REST API version: 2024-03-03.


    :param str gallery_name: The name of the Shared Image Gallery from which the InVMAccessControlProfiles are to be retrieved.
    :param str in_vm_access_control_profile_name: The name of the gallery inVMAccessControlProfile to be retrieved.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['galleryName'] = gallery_name
    __args__['inVMAccessControlProfileName'] = in_vm_access_control_profile_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:compute:getGalleryInVMAccessControlProfile', __args__, opts=opts, typ=GetGalleryInVMAccessControlProfileResult)
    return __ret__.apply(lambda __response__: GetGalleryInVMAccessControlProfileResult(
        id=pulumi.get(__response__, 'id'),
        location=pulumi.get(__response__, 'location'),
        name=pulumi.get(__response__, 'name'),
        properties=pulumi.get(__response__, 'properties'),
        tags=pulumi.get(__response__, 'tags'),
        type=pulumi.get(__response__, 'type')))
