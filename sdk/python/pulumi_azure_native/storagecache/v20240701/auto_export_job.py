# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from . import outputs
from ._enums import *

__all__ = ['AutoExportJobArgs', 'AutoExportJob']

@pulumi.input_type
class AutoExportJobArgs:
    def __init__(__self__, *,
                 aml_filesystem_name: pulumi.Input[str],
                 resource_group_name: pulumi.Input[str],
                 admin_status: Optional[pulumi.Input[Union[str, 'AutoExportJobAdminStatus']]] = None,
                 auto_export_job_name: Optional[pulumi.Input[str]] = None,
                 auto_export_prefixes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[Union[str, 'AutoExportStatusType']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a AutoExportJob resource.
        :param pulumi.Input[str] aml_filesystem_name: Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[Union[str, 'AutoExportJobAdminStatus']] admin_status: The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.
        :param pulumi.Input[str] auto_export_job_name: Name for the auto export job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] auto_export_prefixes: An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.
        :param pulumi.Input[str] location: The geo-location where the resource lives
        :param pulumi.Input[Union[str, 'AutoExportStatusType']] state: The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags.
        """
        pulumi.set(__self__, "aml_filesystem_name", aml_filesystem_name)
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        if admin_status is None:
            admin_status = 'Active'
        if admin_status is not None:
            pulumi.set(__self__, "admin_status", admin_status)
        if auto_export_job_name is not None:
            pulumi.set(__self__, "auto_export_job_name", auto_export_job_name)
        if auto_export_prefixes is not None:
            pulumi.set(__self__, "auto_export_prefixes", auto_export_prefixes)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="amlFilesystemName")
    def aml_filesystem_name(self) -> pulumi.Input[str]:
        """
        Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        """
        return pulumi.get(self, "aml_filesystem_name")

    @aml_filesystem_name.setter
    def aml_filesystem_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "aml_filesystem_name", value)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[str]:
        """
        The name of the resource group. The name is case insensitive.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter(name="adminStatus")
    def admin_status(self) -> Optional[pulumi.Input[Union[str, 'AutoExportJobAdminStatus']]]:
        """
        The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.
        """
        return pulumi.get(self, "admin_status")

    @admin_status.setter
    def admin_status(self, value: Optional[pulumi.Input[Union[str, 'AutoExportJobAdminStatus']]]):
        pulumi.set(self, "admin_status", value)

    @property
    @pulumi.getter(name="autoExportJobName")
    def auto_export_job_name(self) -> Optional[pulumi.Input[str]]:
        """
        Name for the auto export job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        """
        return pulumi.get(self, "auto_export_job_name")

    @auto_export_job_name.setter
    def auto_export_job_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "auto_export_job_name", value)

    @property
    @pulumi.getter(name="autoExportPrefixes")
    def auto_export_prefixes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.
        """
        return pulumi.get(self, "auto_export_prefixes")

    @auto_export_prefixes.setter
    def auto_export_prefixes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "auto_export_prefixes", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[Union[str, 'AutoExportStatusType']]]:
        """
        The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[Union[str, 'AutoExportStatusType']]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)


class AutoExportJob(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 admin_status: Optional[pulumi.Input[Union[str, 'AutoExportJobAdminStatus']]] = None,
                 aml_filesystem_name: Optional[pulumi.Input[str]] = None,
                 auto_export_job_name: Optional[pulumi.Input[str]] = None,
                 auto_export_prefixes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[Union[str, 'AutoExportStatusType']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union[str, 'AutoExportJobAdminStatus']] admin_status: The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.
        :param pulumi.Input[str] aml_filesystem_name: Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        :param pulumi.Input[str] auto_export_job_name: Name for the auto export job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] auto_export_prefixes: An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.
        :param pulumi.Input[str] location: The geo-location where the resource lives
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[Union[str, 'AutoExportStatusType']] state: The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AutoExportJobArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md

        :param str resource_name: The name of the resource.
        :param AutoExportJobArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AutoExportJobArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 admin_status: Optional[pulumi.Input[Union[str, 'AutoExportJobAdminStatus']]] = None,
                 aml_filesystem_name: Optional[pulumi.Input[str]] = None,
                 auto_export_job_name: Optional[pulumi.Input[str]] = None,
                 auto_export_prefixes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[Union[str, 'AutoExportStatusType']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AutoExportJobArgs.__new__(AutoExportJobArgs)

            if admin_status is None:
                admin_status = 'Active'
            __props__.__dict__["admin_status"] = admin_status
            if aml_filesystem_name is None and not opts.urn:
                raise TypeError("Missing required property 'aml_filesystem_name'")
            __props__.__dict__["aml_filesystem_name"] = aml_filesystem_name
            __props__.__dict__["auto_export_job_name"] = auto_export_job_name
            __props__.__dict__["auto_export_prefixes"] = auto_export_prefixes
            __props__.__dict__["location"] = location
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            __props__.__dict__["state"] = state
            __props__.__dict__["tags"] = tags
            __props__.__dict__["current_iteration_files_discovered"] = None
            __props__.__dict__["current_iteration_files_exported"] = None
            __props__.__dict__["current_iteration_files_failed"] = None
            __props__.__dict__["current_iteration_mi_b_discovered"] = None
            __props__.__dict__["current_iteration_mi_b_exported"] = None
            __props__.__dict__["export_iteration_count"] = None
            __props__.__dict__["last_completion_time_utc"] = None
            __props__.__dict__["last_started_time_utc"] = None
            __props__.__dict__["last_successful_iteration_completion_time_utc"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["provisioning_state"] = None
            __props__.__dict__["status_code"] = None
            __props__.__dict__["status_message"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["total_files_exported"] = None
            __props__.__dict__["total_files_failed"] = None
            __props__.__dict__["total_mi_b_exported"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:storagecache/v20240701:autoExportJob")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(AutoExportJob, __self__).__init__(
            'azure-native:storagecache/v20240701:AutoExportJob',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'AutoExportJob':
        """
        Get an existing AutoExportJob resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = AutoExportJobArgs.__new__(AutoExportJobArgs)

        __props__.__dict__["admin_status"] = None
        __props__.__dict__["auto_export_prefixes"] = None
        __props__.__dict__["current_iteration_files_discovered"] = None
        __props__.__dict__["current_iteration_files_exported"] = None
        __props__.__dict__["current_iteration_files_failed"] = None
        __props__.__dict__["current_iteration_mi_b_discovered"] = None
        __props__.__dict__["current_iteration_mi_b_exported"] = None
        __props__.__dict__["export_iteration_count"] = None
        __props__.__dict__["last_completion_time_utc"] = None
        __props__.__dict__["last_started_time_utc"] = None
        __props__.__dict__["last_successful_iteration_completion_time_utc"] = None
        __props__.__dict__["location"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["provisioning_state"] = None
        __props__.__dict__["state"] = None
        __props__.__dict__["status_code"] = None
        __props__.__dict__["status_message"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["total_files_exported"] = None
        __props__.__dict__["total_files_failed"] = None
        __props__.__dict__["total_mi_b_exported"] = None
        __props__.__dict__["type"] = None
        return AutoExportJob(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="adminStatus")
    def admin_status(self) -> pulumi.Output[Optional[str]]:
        """
        The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.
        """
        return pulumi.get(self, "admin_status")

    @property
    @pulumi.getter(name="autoExportPrefixes")
    def auto_export_prefixes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.
        """
        return pulumi.get(self, "auto_export_prefixes")

    @property
    @pulumi.getter(name="currentIterationFilesDiscovered")
    def current_iteration_files_discovered(self) -> pulumi.Output[float]:
        """
        Files discovered for export in current iteration. It may increase while more export items are found.
        """
        return pulumi.get(self, "current_iteration_files_discovered")

    @property
    @pulumi.getter(name="currentIterationFilesExported")
    def current_iteration_files_exported(self) -> pulumi.Output[float]:
        """
        Files that have been exported in current iteration.
        """
        return pulumi.get(self, "current_iteration_files_exported")

    @property
    @pulumi.getter(name="currentIterationFilesFailed")
    def current_iteration_files_failed(self) -> pulumi.Output[float]:
        """
        Files failed to export in current iteration.
        """
        return pulumi.get(self, "current_iteration_files_failed")

    @property
    @pulumi.getter(name="currentIterationMiBDiscovered")
    def current_iteration_mi_b_discovered(self) -> pulumi.Output[float]:
        """
        Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.
        """
        return pulumi.get(self, "current_iteration_mi_b_discovered")

    @property
    @pulumi.getter(name="currentIterationMiBExported")
    def current_iteration_mi_b_exported(self) -> pulumi.Output[float]:
        """
        Data (in MiB) that have been exported in current iteration.
        """
        return pulumi.get(self, "current_iteration_mi_b_exported")

    @property
    @pulumi.getter(name="exportIterationCount")
    def export_iteration_count(self) -> pulumi.Output[int]:
        """
        Number of iterations completed since the start of the export.
        """
        return pulumi.get(self, "export_iteration_count")

    @property
    @pulumi.getter(name="lastCompletionTimeUTC")
    def last_completion_time_utc(self) -> pulumi.Output[str]:
        """
        The time (in UTC) of the last completed auto export job.
        """
        return pulumi.get(self, "last_completion_time_utc")

    @property
    @pulumi.getter(name="lastStartedTimeUTC")
    def last_started_time_utc(self) -> pulumi.Output[str]:
        """
        The time (in UTC) the latest auto export job started.
        """
        return pulumi.get(self, "last_started_time_utc")

    @property
    @pulumi.getter(name="lastSuccessfulIterationCompletionTimeUTC")
    def last_successful_iteration_completion_time_utc(self) -> pulumi.Output[str]:
        """
        Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.
        """
        return pulumi.get(self, "last_successful_iteration_completion_time_utc")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[str]:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[str]:
        """
        ARM provisioning state.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[Optional[str]]:
        """
        The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="statusCode")
    def status_code(self) -> pulumi.Output[str]:
        """
        Server-defined status code for auto export job.
        """
        return pulumi.get(self, "status_code")

    @property
    @pulumi.getter(name="statusMessage")
    def status_message(self) -> pulumi.Output[str]:
        """
        Server-defined status message for auto export job.
        """
        return pulumi.get(self, "status_message")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="totalFilesExported")
    def total_files_exported(self) -> pulumi.Output[float]:
        """
        Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        """
        return pulumi.get(self, "total_files_exported")

    @property
    @pulumi.getter(name="totalFilesFailed")
    def total_files_failed(self) -> pulumi.Output[float]:
        """
        Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.
        """
        return pulumi.get(self, "total_files_failed")

    @property
    @pulumi.getter(name="totalMiBExported")
    def total_mi_b_exported(self) -> pulumi.Output[float]:
        """
        Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        """
        return pulumi.get(self, "total_mi_b_exported")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

