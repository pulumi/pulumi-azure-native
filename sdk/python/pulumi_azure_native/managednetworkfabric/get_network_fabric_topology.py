# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetNetworkFabricTopologyResult',
    'AwaitableGetNetworkFabricTopologyResult',
    'get_network_fabric_topology',
    'get_network_fabric_topology_output',
]

@pulumi.output_type
class GetNetworkFabricTopologyResult:
    """
    The response of the action validate configuration.
    """
    def __init__(__self__, configuration_state=None, error=None, url=None):
        if configuration_state and not isinstance(configuration_state, str):
            raise TypeError("Expected argument 'configuration_state' to be a str")
        pulumi.set(__self__, "configuration_state", configuration_state)
        if error and not isinstance(error, dict):
            raise TypeError("Expected argument 'error' to be a dict")
        pulumi.set(__self__, "error", error)
        if url and not isinstance(url, str):
            raise TypeError("Expected argument 'url' to be a str")
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="configurationState")
    def configuration_state(self) -> str:
        """
        Gets the configuration state.
        """
        return pulumi.get(self, "configuration_state")

    @property
    @pulumi.getter
    def error(self) -> Optional['outputs.ErrorDetailResponse']:
        """
        The error object.
        """
        return pulumi.get(self, "error")

    @property
    @pulumi.getter
    def url(self) -> Optional[str]:
        """
        URL for the details of the response.
        """
        return pulumi.get(self, "url")


class AwaitableGetNetworkFabricTopologyResult(GetNetworkFabricTopologyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNetworkFabricTopologyResult(
            configuration_state=self.configuration_state,
            error=self.error,
            url=self.url)


def get_network_fabric_topology(network_fabric_name: Optional[str] = None,
                                resource_group_name: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNetworkFabricTopologyResult:
    """
    Gets Topology of the underlying resources in the given Network Fabric instance.
    Azure REST API version: 2023-06-15.


    :param str network_fabric_name: Name of the Network Fabric.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['networkFabricName'] = network_fabric_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:managednetworkfabric:getNetworkFabricTopology', __args__, opts=opts, typ=GetNetworkFabricTopologyResult).value

    return AwaitableGetNetworkFabricTopologyResult(
        configuration_state=pulumi.get(__ret__, 'configuration_state'),
        error=pulumi.get(__ret__, 'error'),
        url=pulumi.get(__ret__, 'url'))


@_utilities.lift_output_func(get_network_fabric_topology)
def get_network_fabric_topology_output(network_fabric_name: Optional[pulumi.Input[str]] = None,
                                       resource_group_name: Optional[pulumi.Input[str]] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNetworkFabricTopologyResult]:
    """
    Gets Topology of the underlying resources in the given Network Fabric instance.
    Azure REST API version: 2023-06-15.


    :param str network_fabric_name: Name of the Network Fabric.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    ...
