# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetNetworkPacketBrokerResult',
    'AwaitableGetNetworkPacketBrokerResult',
    'get_network_packet_broker',
    'get_network_packet_broker_output',
]

@pulumi.output_type
class GetNetworkPacketBrokerResult:
    """
    The NetworkPacketBroker resource definition.
    """
    def __init__(__self__, id=None, location=None, name=None, neighbor_group_ids=None, network_device_ids=None, network_fabric_id=None, network_tap_ids=None, provisioning_state=None, source_interface_ids=None, system_data=None, tags=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if neighbor_group_ids and not isinstance(neighbor_group_ids, list):
            raise TypeError("Expected argument 'neighbor_group_ids' to be a list")
        pulumi.set(__self__, "neighbor_group_ids", neighbor_group_ids)
        if network_device_ids and not isinstance(network_device_ids, list):
            raise TypeError("Expected argument 'network_device_ids' to be a list")
        pulumi.set(__self__, "network_device_ids", network_device_ids)
        if network_fabric_id and not isinstance(network_fabric_id, str):
            raise TypeError("Expected argument 'network_fabric_id' to be a str")
        pulumi.set(__self__, "network_fabric_id", network_fabric_id)
        if network_tap_ids and not isinstance(network_tap_ids, list):
            raise TypeError("Expected argument 'network_tap_ids' to be a list")
        pulumi.set(__self__, "network_tap_ids", network_tap_ids)
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        if source_interface_ids and not isinstance(source_interface_ids, list):
            raise TypeError("Expected argument 'source_interface_ids' to be a list")
        pulumi.set(__self__, "source_interface_ids", source_interface_ids)
        if system_data and not isinstance(system_data, dict):
            raise TypeError("Expected argument 'system_data' to be a dict")
        pulumi.set(__self__, "system_data", system_data)
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        pulumi.set(__self__, "tags", tags)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def location(self) -> str:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="neighborGroupIds")
    def neighbor_group_ids(self) -> Sequence[str]:
        """
        List of neighbor group IDs configured on NPB.
        """
        return pulumi.get(self, "neighbor_group_ids")

    @property
    @pulumi.getter(name="networkDeviceIds")
    def network_device_ids(self) -> Sequence[str]:
        """
        List of ARM resource IDs of Network Devices [NPB].
        """
        return pulumi.get(self, "network_device_ids")

    @property
    @pulumi.getter(name="networkFabricId")
    def network_fabric_id(self) -> str:
        """
        ARM resource ID of the Network Fabric.
        """
        return pulumi.get(self, "network_fabric_id")

    @property
    @pulumi.getter(name="networkTapIds")
    def network_tap_ids(self) -> Sequence[str]:
        """
        List of network Tap IDs configured on NPB.
        """
        return pulumi.get(self, "network_tap_ids")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        """
        Provisioning state of the resource.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="sourceInterfaceIds")
    def source_interface_ids(self) -> Sequence[str]:
        """
        List of network interfaces across NPB devices that are used to mirror source traffic.
        """
        return pulumi.get(self, "source_interface_ids")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> 'outputs.SystemDataResponse':
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Mapping[str, str]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")


class AwaitableGetNetworkPacketBrokerResult(GetNetworkPacketBrokerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNetworkPacketBrokerResult(
            id=self.id,
            location=self.location,
            name=self.name,
            neighbor_group_ids=self.neighbor_group_ids,
            network_device_ids=self.network_device_ids,
            network_fabric_id=self.network_fabric_id,
            network_tap_ids=self.network_tap_ids,
            provisioning_state=self.provisioning_state,
            source_interface_ids=self.source_interface_ids,
            system_data=self.system_data,
            tags=self.tags,
            type=self.type)


def get_network_packet_broker(network_packet_broker_name: Optional[str] = None,
                              resource_group_name: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNetworkPacketBrokerResult:
    """
    Retrieves details of this Network Packet Broker.
    Azure REST API version: 2023-06-15.


    :param str network_packet_broker_name: Name of the Network Packet Broker.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['networkPacketBrokerName'] = network_packet_broker_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:managednetworkfabric:getNetworkPacketBroker', __args__, opts=opts, typ=GetNetworkPacketBrokerResult).value

    return AwaitableGetNetworkPacketBrokerResult(
        id=pulumi.get(__ret__, 'id'),
        location=pulumi.get(__ret__, 'location'),
        name=pulumi.get(__ret__, 'name'),
        neighbor_group_ids=pulumi.get(__ret__, 'neighbor_group_ids'),
        network_device_ids=pulumi.get(__ret__, 'network_device_ids'),
        network_fabric_id=pulumi.get(__ret__, 'network_fabric_id'),
        network_tap_ids=pulumi.get(__ret__, 'network_tap_ids'),
        provisioning_state=pulumi.get(__ret__, 'provisioning_state'),
        source_interface_ids=pulumi.get(__ret__, 'source_interface_ids'),
        system_data=pulumi.get(__ret__, 'system_data'),
        tags=pulumi.get(__ret__, 'tags'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_network_packet_broker)
def get_network_packet_broker_output(network_packet_broker_name: Optional[pulumi.Input[str]] = None,
                                     resource_group_name: Optional[pulumi.Input[str]] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNetworkPacketBrokerResult]:
    """
    Retrieves details of this Network Packet Broker.
    Azure REST API version: 2023-06-15.


    :param str network_packet_broker_name: Name of the Network Packet Broker.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    ...
