# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'DependencyOfRelationshipPropertiesArgs',
    'DependencyOfRelationshipPropertiesArgsDict',
    'ServiceGroupMemberRelationshipPropertiesArgs',
    'ServiceGroupMemberRelationshipPropertiesArgsDict',
]

MYPY = False

if not MYPY:
    class DependencyOfRelationshipPropertiesArgsDict(TypedDict):
        """
        dependencyOf relationship properties.
        """
        target_id: pulumi.Input[builtins.str]
        """
        The relationship target resource id.
        """
        target_tenant: NotRequired[pulumi.Input[builtins.str]]
        """
        The relationship target tenant id.
        """
elif False:
    DependencyOfRelationshipPropertiesArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class DependencyOfRelationshipPropertiesArgs:
    def __init__(__self__, *,
                 target_id: pulumi.Input[builtins.str],
                 target_tenant: Optional[pulumi.Input[builtins.str]] = None):
        """
        dependencyOf relationship properties.
        :param pulumi.Input[builtins.str] target_id: The relationship target resource id.
        :param pulumi.Input[builtins.str] target_tenant: The relationship target tenant id.
        """
        pulumi.set(__self__, "target_id", target_id)
        if target_tenant is not None:
            pulumi.set(__self__, "target_tenant", target_tenant)

    @property
    @pulumi.getter(name="targetId")
    def target_id(self) -> pulumi.Input[builtins.str]:
        """
        The relationship target resource id.
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "target_id", value)

    @property
    @pulumi.getter(name="targetTenant")
    def target_tenant(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The relationship target tenant id.
        """
        return pulumi.get(self, "target_tenant")

    @target_tenant.setter
    def target_tenant(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "target_tenant", value)


if not MYPY:
    class ServiceGroupMemberRelationshipPropertiesArgsDict(TypedDict):
        """
        ServiceGroupMember relationship properties.
        """
        target_id: pulumi.Input[builtins.str]
        """
        The relationship target resource id.
        """
        target_tenant: NotRequired[pulumi.Input[builtins.str]]
        """
        The relationship target tenant id.
        """
elif False:
    ServiceGroupMemberRelationshipPropertiesArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ServiceGroupMemberRelationshipPropertiesArgs:
    def __init__(__self__, *,
                 target_id: pulumi.Input[builtins.str],
                 target_tenant: Optional[pulumi.Input[builtins.str]] = None):
        """
        ServiceGroupMember relationship properties.
        :param pulumi.Input[builtins.str] target_id: The relationship target resource id.
        :param pulumi.Input[builtins.str] target_tenant: The relationship target tenant id.
        """
        pulumi.set(__self__, "target_id", target_id)
        if target_tenant is not None:
            pulumi.set(__self__, "target_tenant", target_tenant)

    @property
    @pulumi.getter(name="targetId")
    def target_id(self) -> pulumi.Input[builtins.str]:
        """
        The relationship target resource id.
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "target_id", value)

    @property
    @pulumi.getter(name="targetTenant")
    def target_tenant(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The relationship target tenant id.
        """
        return pulumi.get(self, "target_tenant")

    @target_tenant.setter
    def target_tenant(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "target_tenant", value)


