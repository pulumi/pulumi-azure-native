# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables
from . import outputs

__all__ = [
    'GetBackupPolicyResult',
    'AwaitableGetBackupPolicyResult',
    'get_backup_policy',
]

warnings.warn("""The 'latest' version is deprecated. Please migrate to the function in the top-level module: 'azure-native:dataprotection:getBackupPolicy'.""", DeprecationWarning)

@pulumi.output_type
class GetBackupPolicyResult:
    """
    BaseBackupPolicy resource
    """
    def __init__(__self__, datasource_types=None, id=None, name=None, object_type=None, system_data=None, type=None):
        if datasource_types and not isinstance(datasource_types, list):
            raise TypeError("Expected argument 'datasource_types' to be a list")
        pulumi.set(__self__, "datasource_types", datasource_types)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if object_type and not isinstance(object_type, str):
            raise TypeError("Expected argument 'object_type' to be a str")
        pulumi.set(__self__, "object_type", object_type)
        if system_data and not isinstance(system_data, dict):
            raise TypeError("Expected argument 'system_data' to be a dict")
        pulumi.set(__self__, "system_data", system_data)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="datasourceTypes")
    def datasource_types(self) -> Sequence[str]:
        """
        Type of datasource for the backup management
        """
        return pulumi.get(self, "datasource_types")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Resource Id represents the complete path to the resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Resource name associated with the resource.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="objectType")
    def object_type(self) -> str:
        return pulumi.get(self, "object_type")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> 'outputs.SystemDataResponse':
        """
        Metadata pertaining to creation and last modification of the resource.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        """
        return pulumi.get(self, "type")


class AwaitableGetBackupPolicyResult(GetBackupPolicyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBackupPolicyResult(
            datasource_types=self.datasource_types,
            id=self.id,
            name=self.name,
            object_type=self.object_type,
            system_data=self.system_data,
            type=self.type)


def get_backup_policy(backup_policy_name: Optional[str] = None,
                      resource_group_name: Optional[str] = None,
                      vault_name: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBackupPolicyResult:
    """
    BaseBackupPolicy resource
    Latest API Version: 2021-01-01.


    :param str resource_group_name: The name of the resource group where the backup vault is present.
    :param str vault_name: The name of the backup vault.
    """
    pulumi.log.warn("""get_backup_policy is deprecated: The 'latest' version is deprecated. Please migrate to the function in the top-level module: 'azure-native:dataprotection:getBackupPolicy'.""")
    __args__ = dict()
    __args__['backupPolicyName'] = backup_policy_name
    __args__['resourceGroupName'] = resource_group_name
    __args__['vaultName'] = vault_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-native:dataprotection/latest:getBackupPolicy', __args__, opts=opts, typ=GetBackupPolicyResult).value

    return AwaitableGetBackupPolicyResult(
        datasource_types=__ret__.datasource_types,
        id=__ret__.id,
        name=__ret__.name,
        object_type=__ret__.object_type,
        system_data=__ret__.system_data,
        type=__ret__.type)
