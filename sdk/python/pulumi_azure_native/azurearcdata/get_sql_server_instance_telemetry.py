# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetSqlServerInstanceTelemetryResult',
    'AwaitableGetSqlServerInstanceTelemetryResult',
    'get_sql_server_instance_telemetry',
    'get_sql_server_instance_telemetry_output',
]

@pulumi.output_type
class GetSqlServerInstanceTelemetryResult:
    """
    A section of the telemetry response for the SQL Server instance.
    """
    def __init__(__self__, columns=None, next_link=None, rows=None):
        if columns and not isinstance(columns, list):
            raise TypeError("Expected argument 'columns' to be a list")
        pulumi.set(__self__, "columns", columns)
        if next_link and not isinstance(next_link, str):
            raise TypeError("Expected argument 'next_link' to be a str")
        pulumi.set(__self__, "next_link", next_link)
        if rows and not isinstance(rows, list):
            raise TypeError("Expected argument 'rows' to be a list")
        pulumi.set(__self__, "rows", rows)

    @property
    @pulumi.getter
    def columns(self) -> Sequence['outputs.SqlServerInstanceTelemetryColumnResponse']:
        """
        The columns of the result telemetry table for the SQL Server instance.
        """
        return pulumi.get(self, "columns")

    @property
    @pulumi.getter(name="nextLink")
    def next_link(self) -> str:
        """
        The link to the next section of rows of the telemetry response for the SQL Server instance. Null if no more sections are available.
        """
        return pulumi.get(self, "next_link")

    @property
    @pulumi.getter
    def rows(self) -> Sequence[Sequence[str]]:
        """
        A list of rows from the result telemetry table for the SQL Server instance.
        """
        return pulumi.get(self, "rows")


class AwaitableGetSqlServerInstanceTelemetryResult(GetSqlServerInstanceTelemetryResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSqlServerInstanceTelemetryResult(
            columns=self.columns,
            next_link=self.next_link,
            rows=self.rows)


def get_sql_server_instance_telemetry(aggregation_type: Optional[Union[str, 'AggregationType']] = None,
                                      database_names: Optional[Sequence[str]] = None,
                                      dataset_name: Optional[str] = None,
                                      end_time: Optional[str] = None,
                                      interval: Optional[str] = None,
                                      resource_group_name: Optional[str] = None,
                                      sql_server_instance_name: Optional[str] = None,
                                      start_time: Optional[str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSqlServerInstanceTelemetryResult:
    """
    Retrieves SQL Server instance telemetry
    Azure REST API version: 2024-01-01.


    :param Union[str, 'AggregationType'] aggregation_type: The aggregation type to use for the numerical columns in the dataset.
    :param Sequence[str] database_names: The list of database names to return telemetry for. If not specified, telemetry for all databases will be aggregated and returned.
    :param str dataset_name: The name of the telemetry dataset to retrieve.
    :param str end_time: The end time for the time range to fetch telemetry for. If not specified, the current time is used.
    :param str interval: The time granularity to fetch telemetry for. This is an ISO8601 duration. Examples: PT15M, PT1H, P1D
    :param str resource_group_name: The name of the Azure resource group
    :param str sql_server_instance_name: Name of SQL Server Instance
    :param str start_time: The start time for the time range to fetch telemetry for. If not specified, the current time minus 1 hour is used.
    """
    __args__ = dict()
    __args__['aggregationType'] = aggregation_type
    __args__['databaseNames'] = database_names
    __args__['datasetName'] = dataset_name
    __args__['endTime'] = end_time
    __args__['interval'] = interval
    __args__['resourceGroupName'] = resource_group_name
    __args__['sqlServerInstanceName'] = sql_server_instance_name
    __args__['startTime'] = start_time
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:azurearcdata:getSqlServerInstanceTelemetry', __args__, opts=opts, typ=GetSqlServerInstanceTelemetryResult).value

    return AwaitableGetSqlServerInstanceTelemetryResult(
        columns=pulumi.get(__ret__, 'columns'),
        next_link=pulumi.get(__ret__, 'next_link'),
        rows=pulumi.get(__ret__, 'rows'))


@_utilities.lift_output_func(get_sql_server_instance_telemetry)
def get_sql_server_instance_telemetry_output(aggregation_type: Optional[pulumi.Input[Optional[Union[str, 'AggregationType']]]] = None,
                                             database_names: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                                             dataset_name: Optional[pulumi.Input[str]] = None,
                                             end_time: Optional[pulumi.Input[Optional[str]]] = None,
                                             interval: Optional[pulumi.Input[Optional[str]]] = None,
                                             resource_group_name: Optional[pulumi.Input[str]] = None,
                                             sql_server_instance_name: Optional[pulumi.Input[str]] = None,
                                             start_time: Optional[pulumi.Input[Optional[str]]] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSqlServerInstanceTelemetryResult]:
    """
    Retrieves SQL Server instance telemetry
    Azure REST API version: 2024-01-01.


    :param Union[str, 'AggregationType'] aggregation_type: The aggregation type to use for the numerical columns in the dataset.
    :param Sequence[str] database_names: The list of database names to return telemetry for. If not specified, telemetry for all databases will be aggregated and returned.
    :param str dataset_name: The name of the telemetry dataset to retrieve.
    :param str end_time: The end time for the time range to fetch telemetry for. If not specified, the current time is used.
    :param str interval: The time granularity to fetch telemetry for. This is an ISO8601 duration. Examples: PT15M, PT1H, P1D
    :param str resource_group_name: The name of the Azure resource group
    :param str sql_server_instance_name: Name of SQL Server Instance
    :param str start_time: The start time for the time range to fetch telemetry for. If not specified, the current time minus 1 hour is used.
    """
    ...
