# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'ListVpnLinkConnectionDefaultSharedKeyResult',
    'AwaitableListVpnLinkConnectionDefaultSharedKeyResult',
    'list_vpn_link_connection_default_shared_key',
    'list_vpn_link_connection_default_shared_key_output',
]

@pulumi.output_type
class ListVpnLinkConnectionDefaultSharedKeyResult:
    """
    SharedKey Resource .
    """
    def __init__(__self__, id=None, name=None, properties=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if properties and not isinstance(properties, dict):
            raise TypeError("Expected argument 'properties' to be a dict")
        pulumi.set(__self__, "properties", properties)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        Resource ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        The name of the resource that is unique within a resource group. This name can be used to access the resource.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def properties(self) -> 'outputs.SharedKeyPropertiesResponse':
        """
        Properties of the shared key.
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Resource type.
        """
        return pulumi.get(self, "type")


class AwaitableListVpnLinkConnectionDefaultSharedKeyResult(ListVpnLinkConnectionDefaultSharedKeyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListVpnLinkConnectionDefaultSharedKeyResult(
            id=self.id,
            name=self.name,
            properties=self.properties,
            type=self.type)


def list_vpn_link_connection_default_shared_key(connection_name: Optional[str] = None,
                                                gateway_name: Optional[str] = None,
                                                link_connection_name: Optional[str] = None,
                                                resource_group_name: Optional[str] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListVpnLinkConnectionDefaultSharedKeyResult:
    """
    Gets the value of the shared key of VpnLink connection specified.
    Azure REST API version: 2024-03-01.

    Other available API versions: 2024-05-01.


    :param str connection_name: The name of the vpn connection.
    :param str gateway_name: The name of the gateway.
    :param str link_connection_name: The name of the vpn link connection.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['connectionName'] = connection_name
    __args__['gatewayName'] = gateway_name
    __args__['linkConnectionName'] = link_connection_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:network:listVpnLinkConnectionDefaultSharedKey', __args__, opts=opts, typ=ListVpnLinkConnectionDefaultSharedKeyResult).value

    return AwaitableListVpnLinkConnectionDefaultSharedKeyResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        properties=pulumi.get(__ret__, 'properties'),
        type=pulumi.get(__ret__, 'type'))
def list_vpn_link_connection_default_shared_key_output(connection_name: Optional[pulumi.Input[str]] = None,
                                                       gateway_name: Optional[pulumi.Input[str]] = None,
                                                       link_connection_name: Optional[pulumi.Input[str]] = None,
                                                       resource_group_name: Optional[pulumi.Input[str]] = None,
                                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[ListVpnLinkConnectionDefaultSharedKeyResult]:
    """
    Gets the value of the shared key of VpnLink connection specified.
    Azure REST API version: 2024-03-01.

    Other available API versions: 2024-05-01.


    :param str connection_name: The name of the vpn connection.
    :param str gateway_name: The name of the gateway.
    :param str link_connection_name: The name of the vpn link connection.
    :param str resource_group_name: The name of the resource group.
    """
    __args__ = dict()
    __args__['connectionName'] = connection_name
    __args__['gatewayName'] = gateway_name
    __args__['linkConnectionName'] = link_connection_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:network:listVpnLinkConnectionDefaultSharedKey', __args__, opts=opts, typ=ListVpnLinkConnectionDefaultSharedKeyResult)
    return __ret__.apply(lambda __response__: ListVpnLinkConnectionDefaultSharedKeyResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        properties=pulumi.get(__response__, 'properties'),
        type=pulumi.get(__response__, 'type')))
