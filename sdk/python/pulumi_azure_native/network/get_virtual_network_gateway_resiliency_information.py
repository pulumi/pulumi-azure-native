# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetVirtualNetworkGatewayResiliencyInformationResult',
    'AwaitableGetVirtualNetworkGatewayResiliencyInformationResult',
    'get_virtual_network_gateway_resiliency_information',
    'get_virtual_network_gateway_resiliency_information_output',
]

@pulumi.output_type
class GetVirtualNetworkGatewayResiliencyInformationResult:
    """
    Gateway Resiliency Information
    """
    def __init__(__self__, components=None, last_computed_time=None, max_score_from_recommendations=None, min_score_from_recommendations=None, next_eligible_compute_time=None, overall_score=None, score_change=None):
        if components and not isinstance(components, list):
            raise TypeError("Expected argument 'components' to be a list")
        pulumi.set(__self__, "components", components)
        if last_computed_time and not isinstance(last_computed_time, str):
            raise TypeError("Expected argument 'last_computed_time' to be a str")
        pulumi.set(__self__, "last_computed_time", last_computed_time)
        if max_score_from_recommendations and not isinstance(max_score_from_recommendations, str):
            raise TypeError("Expected argument 'max_score_from_recommendations' to be a str")
        pulumi.set(__self__, "max_score_from_recommendations", max_score_from_recommendations)
        if min_score_from_recommendations and not isinstance(min_score_from_recommendations, str):
            raise TypeError("Expected argument 'min_score_from_recommendations' to be a str")
        pulumi.set(__self__, "min_score_from_recommendations", min_score_from_recommendations)
        if next_eligible_compute_time and not isinstance(next_eligible_compute_time, str):
            raise TypeError("Expected argument 'next_eligible_compute_time' to be a str")
        pulumi.set(__self__, "next_eligible_compute_time", next_eligible_compute_time)
        if overall_score and not isinstance(overall_score, str):
            raise TypeError("Expected argument 'overall_score' to be a str")
        pulumi.set(__self__, "overall_score", overall_score)
        if score_change and not isinstance(score_change, str):
            raise TypeError("Expected argument 'score_change' to be a str")
        pulumi.set(__self__, "score_change", score_change)

    @property
    @pulumi.getter
    def components(self) -> Optional[Sequence['outputs.ResiliencyRecommendationComponentsResponse']]:
        """
        List of Resiliency based Recommendation Components for the gateway
        """
        return pulumi.get(self, "components")

    @property
    @pulumi.getter(name="lastComputedTime")
    def last_computed_time(self) -> Optional[builtins.str]:
        """
        Timestamp denoting the last time when the resiliency score was computed for the gateway
        """
        return pulumi.get(self, "last_computed_time")

    @property
    @pulumi.getter(name="maxScoreFromRecommendations")
    def max_score_from_recommendations(self) -> Optional[builtins.str]:
        """
        Maximum increase expected in the score if all of the recommendations are applied for the gateway
        """
        return pulumi.get(self, "max_score_from_recommendations")

    @property
    @pulumi.getter(name="minScoreFromRecommendations")
    def min_score_from_recommendations(self) -> Optional[builtins.str]:
        """
        Minimum increase expected in the score if the at least one of the recommendations is applied for the gateway
        """
        return pulumi.get(self, "min_score_from_recommendations")

    @property
    @pulumi.getter(name="nextEligibleComputeTime")
    def next_eligible_compute_time(self) -> Optional[builtins.str]:
        """
        Timestamp denoting the next eligible time to re-compute the resiliency score for the gateway
        """
        return pulumi.get(self, "next_eligible_compute_time")

    @property
    @pulumi.getter(name="overallScore")
    def overall_score(self) -> Optional[builtins.str]:
        """
        Current Resiliency Score for the gateway
        """
        return pulumi.get(self, "overall_score")

    @property
    @pulumi.getter(name="scoreChange")
    def score_change(self) -> Optional[builtins.str]:
        """
        Update in the Resiliency Score for the gateway from the last computed score
        """
        return pulumi.get(self, "score_change")


class AwaitableGetVirtualNetworkGatewayResiliencyInformationResult(GetVirtualNetworkGatewayResiliencyInformationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVirtualNetworkGatewayResiliencyInformationResult(
            components=self.components,
            last_computed_time=self.last_computed_time,
            max_score_from_recommendations=self.max_score_from_recommendations,
            min_score_from_recommendations=self.min_score_from_recommendations,
            next_eligible_compute_time=self.next_eligible_compute_time,
            overall_score=self.overall_score,
            score_change=self.score_change)


def get_virtual_network_gateway_resiliency_information(attempt_refresh: Optional[builtins.bool] = None,
                                                       resource_group_name: Optional[builtins.str] = None,
                                                       virtual_network_gateway_name: Optional[builtins.str] = None,
                                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVirtualNetworkGatewayResiliencyInformationResult:
    """
    This operation retrieves the resiliency information for an Express Route Gateway, including the gateway's current resiliency score and recommendations to further improve the score

    Uses Azure REST API version 2024-07-01.


    :param builtins.bool attempt_refresh: Attempt to recalculate the Resiliency Information for the gateway
    :param builtins.str resource_group_name: The name of the resource group.
    :param builtins.str virtual_network_gateway_name: The name of the virtual network gateway.
    """
    __args__ = dict()
    __args__['attemptRefresh'] = attempt_refresh
    __args__['resourceGroupName'] = resource_group_name
    __args__['virtualNetworkGatewayName'] = virtual_network_gateway_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:network:getVirtualNetworkGatewayResiliencyInformation', __args__, opts=opts, typ=GetVirtualNetworkGatewayResiliencyInformationResult).value

    return AwaitableGetVirtualNetworkGatewayResiliencyInformationResult(
        components=pulumi.get(__ret__, 'components'),
        last_computed_time=pulumi.get(__ret__, 'last_computed_time'),
        max_score_from_recommendations=pulumi.get(__ret__, 'max_score_from_recommendations'),
        min_score_from_recommendations=pulumi.get(__ret__, 'min_score_from_recommendations'),
        next_eligible_compute_time=pulumi.get(__ret__, 'next_eligible_compute_time'),
        overall_score=pulumi.get(__ret__, 'overall_score'),
        score_change=pulumi.get(__ret__, 'score_change'))
def get_virtual_network_gateway_resiliency_information_output(attempt_refresh: Optional[pulumi.Input[Optional[builtins.bool]]] = None,
                                                              resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                                                              virtual_network_gateway_name: Optional[pulumi.Input[builtins.str]] = None,
                                                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetVirtualNetworkGatewayResiliencyInformationResult]:
    """
    This operation retrieves the resiliency information for an Express Route Gateway, including the gateway's current resiliency score and recommendations to further improve the score

    Uses Azure REST API version 2024-07-01.


    :param builtins.bool attempt_refresh: Attempt to recalculate the Resiliency Information for the gateway
    :param builtins.str resource_group_name: The name of the resource group.
    :param builtins.str virtual_network_gateway_name: The name of the virtual network gateway.
    """
    __args__ = dict()
    __args__['attemptRefresh'] = attempt_refresh
    __args__['resourceGroupName'] = resource_group_name
    __args__['virtualNetworkGatewayName'] = virtual_network_gateway_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:network:getVirtualNetworkGatewayResiliencyInformation', __args__, opts=opts, typ=GetVirtualNetworkGatewayResiliencyInformationResult)
    return __ret__.apply(lambda __response__: GetVirtualNetworkGatewayResiliencyInformationResult(
        components=pulumi.get(__response__, 'components'),
        last_computed_time=pulumi.get(__response__, 'last_computed_time'),
        max_score_from_recommendations=pulumi.get(__response__, 'max_score_from_recommendations'),
        min_score_from_recommendations=pulumi.get(__response__, 'min_score_from_recommendations'),
        next_eligible_compute_time=pulumi.get(__response__, 'next_eligible_compute_time'),
        overall_score=pulumi.get(__response__, 'overall_score'),
        score_change=pulumi.get(__response__, 'score_change')))
