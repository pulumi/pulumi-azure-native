# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'ListEffectiveSecurityUserRuleBySubnetResult',
    'AwaitableListEffectiveSecurityUserRuleBySubnetResult',
    'list_effective_security_user_rule_by_subnet',
]

@pulumi.output_type
class ListEffectiveSecurityUserRuleBySubnetResult:
    """
    Result of the request to list NetworkManagerEffectiveSecurityUserRules. It contains a list of groups and a skiptoken to get the next set of results.
    """
    def __init__(__self__, skip_token=None, value=None):
        if skip_token and not isinstance(skip_token, str):
            raise TypeError("Expected argument 'skip_token' to be a str")
        pulumi.set(__self__, "skip_token", skip_token)
        if value and not isinstance(value, list):
            raise TypeError("Expected argument 'value' to be a list")
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="skipToken")
    def skip_token(self) -> Optional[str]:
        """
        When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
        """
        return pulumi.get(self, "skip_token")

    @property
    @pulumi.getter
    def value(self) -> Optional[Sequence[Any]]:
        """
        Gets a page of NetworkManagerEffectiveSecurityUserRules
        """
        return pulumi.get(self, "value")


class AwaitableListEffectiveSecurityUserRuleBySubnetResult(ListEffectiveSecurityUserRuleBySubnetResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListEffectiveSecurityUserRuleBySubnetResult(
            skip_token=self.skip_token,
            value=self.value)


def list_effective_security_user_rule_by_subnet(resource_group_name: Optional[str] = None,
                                                skip_token: Optional[str] = None,
                                                subnet_name: Optional[str] = None,
                                                virtual_network_name: Optional[str] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListEffectiveSecurityUserRuleBySubnetResult:
    """
    Result of the request to list NetworkManagerEffectiveSecurityUserRules. It contains a list of groups and a skiptoken to get the next set of results.
    API Version: 2021-02-01-preview.


    :param str resource_group_name: The name of the resource group.
    :param str skip_token: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
    :param str subnet_name: The name of the subnet.
    :param str virtual_network_name: The name of the virtual network.
    """
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['skipToken'] = skip_token
    __args__['subnetName'] = subnet_name
    __args__['virtualNetworkName'] = virtual_network_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure-native:network:listEffectiveSecurityUserRuleBySubnet', __args__, opts=opts, typ=ListEffectiveSecurityUserRuleBySubnetResult).value

    return AwaitableListEffectiveSecurityUserRuleBySubnetResult(
        skip_token=__ret__.skip_token,
        value=__ret__.value)
