# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .admin_rule import *
from .connectivity_configuration import *
from .get_admin_rule import *
from .get_connectivity_configuration import *
from .get_network_group import *
from .get_network_manager import *
from .get_security_configuration import *
from .get_user_rule import *
from .list_effective_virtual_network_by_network_group import *
from .list_effective_virtual_network_by_network_manager import *
from .list_network_manager_deployment_status import *
from .network_group import *
from .network_manager import *
from .security_configuration import *
from .user_rule import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-native:network/v20210201preview:AdminRule":
                return AdminRule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:network/v20210201preview:ConnectivityConfiguration":
                return ConnectivityConfiguration(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:network/v20210201preview:NetworkGroup":
                return NetworkGroup(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:network/v20210201preview:NetworkManager":
                return NetworkManager(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:network/v20210201preview:SecurityConfiguration":
                return SecurityConfiguration(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:network/v20210201preview:UserRule":
                return UserRule(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-native", "network/v20210201preview", _module_instance)

_register_module()
