# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetVirtualNetworkGatewayRoutesInformationResult',
    'AwaitableGetVirtualNetworkGatewayRoutesInformationResult',
    'get_virtual_network_gateway_routes_information',
    'get_virtual_network_gateway_routes_information_output',
]

@pulumi.output_type
class GetVirtualNetworkGatewayRoutesInformationResult:
    """
    Gateway Route Sets Information
    """
    def __init__(__self__, circuits_metadata_map=None, last_computed_time=None, next_eligible_compute_time=None, route_set_version=None, route_sets=None):
        if circuits_metadata_map and not isinstance(circuits_metadata_map, dict):
            raise TypeError("Expected argument 'circuits_metadata_map' to be a dict")
        pulumi.set(__self__, "circuits_metadata_map", circuits_metadata_map)
        if last_computed_time and not isinstance(last_computed_time, str):
            raise TypeError("Expected argument 'last_computed_time' to be a str")
        pulumi.set(__self__, "last_computed_time", last_computed_time)
        if next_eligible_compute_time and not isinstance(next_eligible_compute_time, str):
            raise TypeError("Expected argument 'next_eligible_compute_time' to be a str")
        pulumi.set(__self__, "next_eligible_compute_time", next_eligible_compute_time)
        if route_set_version and not isinstance(route_set_version, str):
            raise TypeError("Expected argument 'route_set_version' to be a str")
        pulumi.set(__self__, "route_set_version", route_set_version)
        if route_sets and not isinstance(route_sets, list):
            raise TypeError("Expected argument 'route_sets' to be a list")
        pulumi.set(__self__, "route_sets", route_sets)

    @property
    @pulumi.getter(name="circuitsMetadataMap")
    def circuits_metadata_map(self) -> Optional[Mapping[str, 'outputs.CircuitMetadataMapResponse']]:
        """
        Dictionary containing map of the circuit id and circuit details
        """
        return pulumi.get(self, "circuits_metadata_map")

    @property
    @pulumi.getter(name="lastComputedTime")
    def last_computed_time(self) -> Optional[builtins.str]:
        """
        Timestamp denoting the last time when the route sets were computed for the gateway
        """
        return pulumi.get(self, "last_computed_time")

    @property
    @pulumi.getter(name="nextEligibleComputeTime")
    def next_eligible_compute_time(self) -> Optional[builtins.str]:
        """
        Timestamp denoting the next eligible time to re-compute the route sets for the gateway
        """
        return pulumi.get(self, "next_eligible_compute_time")

    @property
    @pulumi.getter(name="routeSetVersion")
    def route_set_version(self) -> Optional[builtins.str]:
        """
        Version for the route set
        """
        return pulumi.get(self, "route_set_version")

    @property
    @pulumi.getter(name="routeSets")
    def route_sets(self) -> Optional[Sequence['outputs.GatewayRouteSetResponse']]:
        """
        List of Gateway Route Sets
        """
        return pulumi.get(self, "route_sets")


class AwaitableGetVirtualNetworkGatewayRoutesInformationResult(GetVirtualNetworkGatewayRoutesInformationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVirtualNetworkGatewayRoutesInformationResult(
            circuits_metadata_map=self.circuits_metadata_map,
            last_computed_time=self.last_computed_time,
            next_eligible_compute_time=self.next_eligible_compute_time,
            route_set_version=self.route_set_version,
            route_sets=self.route_sets)


def get_virtual_network_gateway_routes_information(attempt_refresh: Optional[builtins.bool] = None,
                                                   resource_group_name: Optional[builtins.str] = None,
                                                   virtual_network_gateway_name: Optional[builtins.str] = None,
                                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVirtualNetworkGatewayRoutesInformationResult:
    """
    This operation retrieves the route set information for an Express Route Gateway based on their resiliency

    Uses Azure REST API version 2024-07-01.


    :param builtins.bool attempt_refresh: Attempt to recalculate the Route Sets Information for the gateway
    :param builtins.str resource_group_name: The name of the resource group.
    :param builtins.str virtual_network_gateway_name: The name of the virtual network gateway.
    """
    __args__ = dict()
    __args__['attemptRefresh'] = attempt_refresh
    __args__['resourceGroupName'] = resource_group_name
    __args__['virtualNetworkGatewayName'] = virtual_network_gateway_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:network:getVirtualNetworkGatewayRoutesInformation', __args__, opts=opts, typ=GetVirtualNetworkGatewayRoutesInformationResult).value

    return AwaitableGetVirtualNetworkGatewayRoutesInformationResult(
        circuits_metadata_map=pulumi.get(__ret__, 'circuits_metadata_map'),
        last_computed_time=pulumi.get(__ret__, 'last_computed_time'),
        next_eligible_compute_time=pulumi.get(__ret__, 'next_eligible_compute_time'),
        route_set_version=pulumi.get(__ret__, 'route_set_version'),
        route_sets=pulumi.get(__ret__, 'route_sets'))
def get_virtual_network_gateway_routes_information_output(attempt_refresh: Optional[pulumi.Input[Optional[builtins.bool]]] = None,
                                                          resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                                                          virtual_network_gateway_name: Optional[pulumi.Input[builtins.str]] = None,
                                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetVirtualNetworkGatewayRoutesInformationResult]:
    """
    This operation retrieves the route set information for an Express Route Gateway based on their resiliency

    Uses Azure REST API version 2024-07-01.


    :param builtins.bool attempt_refresh: Attempt to recalculate the Route Sets Information for the gateway
    :param builtins.str resource_group_name: The name of the resource group.
    :param builtins.str virtual_network_gateway_name: The name of the virtual network gateway.
    """
    __args__ = dict()
    __args__['attemptRefresh'] = attempt_refresh
    __args__['resourceGroupName'] = resource_group_name
    __args__['virtualNetworkGatewayName'] = virtual_network_gateway_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:network:getVirtualNetworkGatewayRoutesInformation', __args__, opts=opts, typ=GetVirtualNetworkGatewayRoutesInformationResult)
    return __ret__.apply(lambda __response__: GetVirtualNetworkGatewayRoutesInformationResult(
        circuits_metadata_map=pulumi.get(__response__, 'circuits_metadata_map'),
        last_computed_time=pulumi.get(__response__, 'last_computed_time'),
        next_eligible_compute_time=pulumi.get(__response__, 'next_eligible_compute_time'),
        route_set_version=pulumi.get(__response__, 'route_set_version'),
        route_sets=pulumi.get(__response__, 'route_sets')))
