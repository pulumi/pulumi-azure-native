# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from ._enums import *

__all__ = [
    'ContactDetailResponse',
]

@pulumi.output_type
class ContactDetailResponse(dict):
    """
    The contact detail class.
    """
    def __init__(__self__, *,
                 email: Optional[str] = None,
                 phone: Optional[str] = None,
                 role: Optional[str] = None):
        """
        The contact detail class.
        :param str email: The e-mail address of the contact.
        :param str phone: The phone number of the contact.
        :param str role: The role of the contact.
        """
        if email is not None:
            pulumi.set(__self__, "email", email)
        if phone is not None:
            pulumi.set(__self__, "phone", phone)
        if role is not None:
            pulumi.set(__self__, "role", role)

    @property
    @pulumi.getter
    def email(self) -> Optional[str]:
        """
        The e-mail address of the contact.
        """
        return pulumi.get(self, "email")

    @property
    @pulumi.getter
    def phone(self) -> Optional[str]:
        """
        The phone number of the contact.
        """
        return pulumi.get(self, "phone")

    @property
    @pulumi.getter
    def role(self) -> Optional[str]:
        """
        The role of the contact.
        """
        return pulumi.get(self, "role")


