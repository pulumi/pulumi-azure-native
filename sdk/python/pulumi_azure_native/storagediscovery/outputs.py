# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'StorageDiscoveryScopeResponse',
    'StorageDiscoveryWorkspacePropertiesResponse',
    'SystemDataResponse',
]

@pulumi.output_type
class StorageDiscoveryScopeResponse(dict):
    """
    Storage Discovery Scope. This had added validations
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"
        elif key == "resourceTypes":
            suggest = "resource_types"
        elif key == "tagKeysOnly":
            suggest = "tag_keys_only"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in StorageDiscoveryScopeResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        StorageDiscoveryScopeResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        StorageDiscoveryScopeResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: builtins.str,
                 resource_types: Sequence[builtins.str],
                 tag_keys_only: Optional[Sequence[builtins.str]] = None,
                 tags: Optional[Mapping[str, builtins.str]] = None):
        """
        Storage Discovery Scope. This had added validations
        :param builtins.str display_name: Display name of the collection
        :param Sequence[builtins.str] resource_types: Resource types for the collection
        :param Sequence[builtins.str] tag_keys_only: The storage account tags keys to filter
        :param Mapping[str, builtins.str] tags: Resource tags.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "resource_types", resource_types)
        if tag_keys_only is not None:
            pulumi.set(__self__, "tag_keys_only", tag_keys_only)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        Display name of the collection
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="resourceTypes")
    def resource_types(self) -> Sequence[builtins.str]:
        """
        Resource types for the collection
        """
        return pulumi.get(self, "resource_types")

    @property
    @pulumi.getter(name="tagKeysOnly")
    def tag_keys_only(self) -> Optional[Sequence[builtins.str]]:
        """
        The storage account tags keys to filter
        """
        return pulumi.get(self, "tag_keys_only")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Mapping[str, builtins.str]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class StorageDiscoveryWorkspacePropertiesResponse(dict):
    """
    Storage Discovery Workspace Properties
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "provisioningState":
            suggest = "provisioning_state"
        elif key == "workspaceRoots":
            suggest = "workspace_roots"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in StorageDiscoveryWorkspacePropertiesResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        StorageDiscoveryWorkspacePropertiesResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        StorageDiscoveryWorkspacePropertiesResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 provisioning_state: builtins.str,
                 scopes: Sequence['outputs.StorageDiscoveryScopeResponse'],
                 workspace_roots: Sequence[builtins.str],
                 description: Optional[builtins.str] = None,
                 sku: Optional[builtins.str] = None):
        """
        Storage Discovery Workspace Properties
        :param builtins.str provisioning_state: The status of the last operation.
        :param Sequence['StorageDiscoveryScopeResponse'] scopes: The scopes of the storage discovery workspace.
        :param Sequence[builtins.str] workspace_roots: The view level storage discovery data estate
        :param builtins.str description: The description of the storage discovery workspace
        :param builtins.str sku: The storage discovery sku
        """
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        pulumi.set(__self__, "scopes", scopes)
        pulumi.set(__self__, "workspace_roots", workspace_roots)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if sku is None:
            sku = 'Standard'
        if sku is not None:
            pulumi.set(__self__, "sku", sku)

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> builtins.str:
        """
        The status of the last operation.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter
    def scopes(self) -> Sequence['outputs.StorageDiscoveryScopeResponse']:
        """
        The scopes of the storage discovery workspace.
        """
        return pulumi.get(self, "scopes")

    @property
    @pulumi.getter(name="workspaceRoots")
    def workspace_roots(self) -> Sequence[builtins.str]:
        """
        The view level storage discovery data estate
        """
        return pulumi.get(self, "workspace_roots")

    @property
    @pulumi.getter
    def description(self) -> Optional[builtins.str]:
        """
        The description of the storage discovery workspace
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def sku(self) -> Optional[builtins.str]:
        """
        The storage discovery sku
        """
        return pulumi.get(self, "sku")


@pulumi.output_type
class SystemDataResponse(dict):
    """
    Metadata pertaining to creation and last modification of the resource.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "createdAt":
            suggest = "created_at"
        elif key == "createdBy":
            suggest = "created_by"
        elif key == "createdByType":
            suggest = "created_by_type"
        elif key == "lastModifiedAt":
            suggest = "last_modified_at"
        elif key == "lastModifiedBy":
            suggest = "last_modified_by"
        elif key == "lastModifiedByType":
            suggest = "last_modified_by_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in SystemDataResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 created_at: Optional[builtins.str] = None,
                 created_by: Optional[builtins.str] = None,
                 created_by_type: Optional[builtins.str] = None,
                 last_modified_at: Optional[builtins.str] = None,
                 last_modified_by: Optional[builtins.str] = None,
                 last_modified_by_type: Optional[builtins.str] = None):
        """
        Metadata pertaining to creation and last modification of the resource.
        :param builtins.str created_at: The timestamp of resource creation (UTC).
        :param builtins.str created_by: The identity that created the resource.
        :param builtins.str created_by_type: The type of identity that created the resource.
        :param builtins.str last_modified_at: The timestamp of resource last modification (UTC)
        :param builtins.str last_modified_by: The identity that last modified the resource.
        :param builtins.str last_modified_by_type: The type of identity that last modified the resource.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if created_by_type is not None:
            pulumi.set(__self__, "created_by_type", created_by_type)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by is not None:
            pulumi.set(__self__, "last_modified_by", last_modified_by)
        if last_modified_by_type is not None:
            pulumi.set(__self__, "last_modified_by_type", last_modified_by_type)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[builtins.str]:
        """
        The timestamp of resource creation (UTC).
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[builtins.str]:
        """
        The identity that created the resource.
        """
        return pulumi.get(self, "created_by")

    @property
    @pulumi.getter(name="createdByType")
    def created_by_type(self) -> Optional[builtins.str]:
        """
        The type of identity that created the resource.
        """
        return pulumi.get(self, "created_by_type")

    @property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[builtins.str]:
        """
        The timestamp of resource last modification (UTC)
        """
        return pulumi.get(self, "last_modified_at")

    @property
    @pulumi.getter(name="lastModifiedBy")
    def last_modified_by(self) -> Optional[builtins.str]:
        """
        The identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by")

    @property
    @pulumi.getter(name="lastModifiedByType")
    def last_modified_by_type(self) -> Optional[builtins.str]:
        """
        The type of identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by_type")


