# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AzureSkuName',
    'AzureSkuTier',
    'BlobStorageEventType',
    'ClusterPrincipalRole',
    'Compression',
    'DataConnectionKind',
    'DataFlowComputeType',
    'DatabasePrincipalRole',
    'DefaultPrincipalsModificationKind',
    'EngineType',
    'EventGridDataFormat',
    'EventHubDataFormat',
    'IntegrationRuntimeEdition',
    'IntegrationRuntimeEntityReferenceType',
    'IntegrationRuntimeLicenseType',
    'IntegrationRuntimeSsisCatalogPricingTier',
    'IntegrationRuntimeType',
    'IotHubDataFormat',
    'Kind',
    'NodeSize',
    'NodeSizeFamily',
    'PrincipalType',
    'ResourceIdentityType',
    'SensitivityLabelRank',
    'StorageAccountType',
    'TransparentDataEncryptionStatus',
    'WorkspacePublicNetworkAccess',
]


class AzureSkuName(str, Enum):
    """
    SKU name.
    """
    STANDARD_DS13_V2_1_T_B_PS = "Standard_DS13_v2+1TB_PS"
    STANDARD_DS13_V2_2_T_B_PS = "Standard_DS13_v2+2TB_PS"
    STANDARD_DS14_V2_3_T_B_PS = "Standard_DS14_v2+3TB_PS"
    STANDARD_DS14_V2_4_T_B_PS = "Standard_DS14_v2+4TB_PS"
    STANDARD_D13_V2 = "Standard_D13_v2"
    STANDARD_D14_V2 = "Standard_D14_v2"
    STANDARD_L8S = "Standard_L8s"
    STANDARD_L16S = "Standard_L16s"
    STANDARD_L8S_V2 = "Standard_L8s_v2"
    STANDARD_L16S_V2 = "Standard_L16s_v2"
    STANDARD_D11_V2 = "Standard_D11_v2"
    STANDARD_D12_V2 = "Standard_D12_v2"
    STANDARD_L4S = "Standard_L4s"
    DEV_NO_SL_A_STANDARD_D11_V2 = "Dev(No SLA)_Standard_D11_v2"
    STANDARD_E64I_V3 = "Standard_E64i_v3"
    STANDARD_E80IDS_V4 = "Standard_E80ids_v4"
    STANDARD_E2A_V4 = "Standard_E2a_v4"
    STANDARD_E4A_V4 = "Standard_E4a_v4"
    STANDARD_E8A_V4 = "Standard_E8a_v4"
    STANDARD_E16A_V4 = "Standard_E16a_v4"
    STANDARD_E8AS_V4_1_T_B_PS = "Standard_E8as_v4+1TB_PS"
    STANDARD_E8AS_V4_2_T_B_PS = "Standard_E8as_v4+2TB_PS"
    STANDARD_E16AS_V4_3_T_B_PS = "Standard_E16as_v4+3TB_PS"
    STANDARD_E16AS_V4_4_T_B_PS = "Standard_E16as_v4+4TB_PS"
    DEV_NO_SL_A_STANDARD_E2A_V4 = "Dev(No SLA)_Standard_E2a_v4"


class AzureSkuTier(str, Enum):
    """
    SKU tier.
    """
    BASIC = "Basic"
    STANDARD = "Standard"


class BlobStorageEventType(str, Enum):
    """
    The name of blob storage event type to process.
    """
    MICROSOFT_STORAGE_BLOB_CREATED = "Microsoft.Storage.BlobCreated"
    MICROSOFT_STORAGE_BLOB_RENAMED = "Microsoft.Storage.BlobRenamed"


class ClusterPrincipalRole(str, Enum):
    """
    Cluster principal role.
    """
    ALL_DATABASES_ADMIN = "AllDatabasesAdmin"
    ALL_DATABASES_VIEWER = "AllDatabasesViewer"


class Compression(str, Enum):
    """
    The event hub messages compression type
    """
    NONE = "None"
    G_ZIP = "GZip"


class DataConnectionKind(str, Enum):
    """
    Kind of the endpoint for the data connection
    """
    EVENT_HUB = "EventHub"
    EVENT_GRID = "EventGrid"
    IOT_HUB = "IotHub"


class DataFlowComputeType(str, Enum):
    """
    Compute type of the cluster which will execute data flow job.
    """
    GENERAL = "General"
    MEMORY_OPTIMIZED = "MemoryOptimized"
    COMPUTE_OPTIMIZED = "ComputeOptimized"


class DatabasePrincipalRole(str, Enum):
    """
    Database principal role.
    """
    ADMIN = "Admin"
    INGESTOR = "Ingestor"
    MONITOR = "Monitor"
    USER = "User"
    UNRESTRICTED_VIEWER = "UnrestrictedViewer"
    VIEWER = "Viewer"


class DefaultPrincipalsModificationKind(str, Enum):
    """
    The default principals modification kind
    """
    UNION = "Union"
    REPLACE = "Replace"
    NONE = "None"


class EngineType(str, Enum):
    """
    The engine type
    """
    V2 = "V2"
    V3 = "V3"


class EventGridDataFormat(str, Enum):
    """
    The data format of the message. Optionally the data format can be added to each message.
    """
    MULTIJSON = "MULTIJSON"
    JSON = "JSON"
    CSV = "CSV"
    TSV = "TSV"
    SCSV = "SCSV"
    SOHSV = "SOHSV"
    PSV = "PSV"
    TXT = "TXT"
    RAW = "RAW"
    SINGLEJSON = "SINGLEJSON"
    AVRO = "AVRO"
    TSVE = "TSVE"
    PARQUET = "PARQUET"
    ORC = "ORC"
    APACHEAVRO = "APACHEAVRO"
    W3_CLOGFILE = "W3CLOGFILE"


class EventHubDataFormat(str, Enum):
    """
    The data format of the message. Optionally the data format can be added to each message.
    """
    MULTIJSON = "MULTIJSON"
    JSON = "JSON"
    CSV = "CSV"
    TSV = "TSV"
    SCSV = "SCSV"
    SOHSV = "SOHSV"
    PSV = "PSV"
    TXT = "TXT"
    RAW = "RAW"
    SINGLEJSON = "SINGLEJSON"
    AVRO = "AVRO"
    TSVE = "TSVE"
    PARQUET = "PARQUET"
    ORC = "ORC"
    APACHEAVRO = "APACHEAVRO"
    W3_CLOGFILE = "W3CLOGFILE"


class IntegrationRuntimeEdition(str, Enum):
    """
    The edition for the SSIS Integration Runtime
    """
    STANDARD = "Standard"
    ENTERPRISE = "Enterprise"


class IntegrationRuntimeEntityReferenceType(str, Enum):
    """
    The type of this referenced entity.
    """
    INTEGRATION_RUNTIME_REFERENCE = "IntegrationRuntimeReference"
    LINKED_SERVICE_REFERENCE = "LinkedServiceReference"


class IntegrationRuntimeLicenseType(str, Enum):
    """
    License type for bringing your own license scenario.
    """
    BASE_PRICE = "BasePrice"
    LICENSE_INCLUDED = "LicenseIncluded"


class IntegrationRuntimeSsisCatalogPricingTier(str, Enum):
    """
    The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
    """
    BASIC = "Basic"
    STANDARD = "Standard"
    PREMIUM = "Premium"
    PREMIUM_RS = "PremiumRS"


class IntegrationRuntimeType(str, Enum):
    """
    Type of integration runtime.
    """
    MANAGED = "Managed"
    SELF_HOSTED = "SelfHosted"


class IotHubDataFormat(str, Enum):
    """
    The data format of the message. Optionally the data format can be added to each message.
    """
    MULTIJSON = "MULTIJSON"
    JSON = "JSON"
    CSV = "CSV"
    TSV = "TSV"
    SCSV = "SCSV"
    SOHSV = "SOHSV"
    PSV = "PSV"
    TXT = "TXT"
    RAW = "RAW"
    SINGLEJSON = "SINGLEJSON"
    AVRO = "AVRO"
    TSVE = "TSVE"
    PARQUET = "PARQUET"
    ORC = "ORC"
    APACHEAVRO = "APACHEAVRO"
    W3_CLOGFILE = "W3CLOGFILE"


class Kind(str, Enum):
    """
    Kind of the database
    """
    READ_WRITE = "ReadWrite"
    READ_ONLY_FOLLOWING = "ReadOnlyFollowing"


class NodeSize(str, Enum):
    """
    The level of compute power that each node in the Big Data pool has.
    """
    NONE = "None"
    SMALL = "Small"
    MEDIUM = "Medium"
    LARGE = "Large"
    X_LARGE = "XLarge"
    XX_LARGE = "XXLarge"
    XXX_LARGE = "XXXLarge"


class NodeSizeFamily(str, Enum):
    """
    The kind of nodes that the Big Data pool provides.
    """
    NONE = "None"
    MEMORY_OPTIMIZED = "MemoryOptimized"
    HARDWARE_ACCELERATED_FPGA = "HardwareAcceleratedFPGA"
    HARDWARE_ACCELERATED_GPU = "HardwareAcceleratedGPU"


class PrincipalType(str, Enum):
    """
    Principal type.
    """
    APP = "App"
    GROUP = "Group"
    USER = "User"


class ResourceIdentityType(str, Enum):
    """
    The type of managed identity for the workspace
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"


class SensitivityLabelRank(str, Enum):
    NONE = "None"
    LOW = "Low"
    MEDIUM = "Medium"
    HIGH = "High"
    CRITICAL = "Critical"


class StorageAccountType(str, Enum):
    """
    The storage account type used to store backups for this sql pool.
    """
    GRS = "GRS"
    LRS = "LRS"
    ZRS = "ZRS"


class TransparentDataEncryptionStatus(str, Enum):
    """
    The status of the database transparent data encryption.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class WorkspacePublicNetworkAccess(str, Enum):
    """
    Enable or Disable public network access to workspace
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"
