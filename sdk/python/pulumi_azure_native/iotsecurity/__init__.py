# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .defender_setting import *
from .device_group import *
from .get_defender_setting import *
from .get_device_group import *
from .get_on_premise_sensor import *
from .get_sensor import *
from .get_site import *
from .on_premise_sensor import *
from .sensor import *
from .site import *
from . import outputs

# Make subpackages available:
from . import (
    v20210201preview,
)

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-native:iotsecurity:DefenderSetting":
                return DefenderSetting(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:iotsecurity:DeviceGroup":
                return DeviceGroup(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:iotsecurity:OnPremiseSensor":
                return OnPremiseSensor(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:iotsecurity:Sensor":
                return Sensor(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:iotsecurity:Site":
                return Site(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-native", "iotsecurity", _module_instance)

_register_module()
