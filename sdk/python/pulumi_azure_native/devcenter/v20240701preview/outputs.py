# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from . import outputs

__all__ = [
    'ImageCreationErrorDetailsResponse',
    'ImageDefinitionBuildTaskGroupResponse',
    'ImageDefinitionBuildTaskResponse',
    'ImageDefinitionBuildTaskResponseParameters',
    'ImageReferenceResponse',
    'SystemDataResponse',
]

@pulumi.output_type
class ImageCreationErrorDetailsResponse(dict):
    """
    Image creation error details
    """
    def __init__(__self__, *,
                 code: Optional[str] = None,
                 message: Optional[str] = None):
        """
        Image creation error details
        :param str code: An identifier for the error.
        :param str message: A message describing the error.
        """
        if code is not None:
            pulumi.set(__self__, "code", code)
        if message is not None:
            pulumi.set(__self__, "message", message)

    @property
    @pulumi.getter
    def code(self) -> Optional[str]:
        """
        An identifier for the error.
        """
        return pulumi.get(self, "code")

    @property
    @pulumi.getter
    def message(self) -> Optional[str]:
        """
        A message describing the error.
        """
        return pulumi.get(self, "message")


@pulumi.output_type
class ImageDefinitionBuildTaskGroupResponse(dict):
    """
    A task group executed during the image definition build.
    """
    def __init__(__self__, *,
                 end_time: str,
                 name: str,
                 start_time: str,
                 status: str,
                 tasks: Sequence['outputs.ImageDefinitionBuildTaskResponse']):
        """
        A task group executed during the image definition build.
        :param str end_time: End time of the task group.
        :param str name: The name of the task group.
        :param str start_time: Start time of the task group.
        :param str status: The status of the task group.
        :param Sequence['ImageDefinitionBuildTaskResponse'] tasks: The list of tasks executed during the task group.
        """
        pulumi.set(__self__, "end_time", end_time)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "start_time", start_time)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tasks", tasks)

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> str:
        """
        End time of the task group.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the task group.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> str:
        """
        Start time of the task group.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        The status of the task group.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tasks(self) -> Sequence['outputs.ImageDefinitionBuildTaskResponse']:
        """
        The list of tasks executed during the task group.
        """
        return pulumi.get(self, "tasks")


@pulumi.output_type
class ImageDefinitionBuildTaskResponse(dict):
    """
    A task executed during the image definition build.
    """
    def __init__(__self__, *,
                 end_time: str,
                 id: str,
                 log_uri: str,
                 start_time: str,
                 status: str,
                 display_name: Optional[str] = None,
                 name: Optional[str] = None,
                 parameters: Optional[Sequence['outputs.ImageDefinitionBuildTaskResponseParameters']] = None):
        """
        A task executed during the image definition build.
        :param str end_time: End time of the task.
        :param str id: ID of the task instance.
        :param str log_uri: The URI for retrieving logs for the task execution.
        :param str start_time: Start time of the task.
        :param str status: The status of the task.
        :param str display_name: Display name to help differentiate multiple instances of the same task.
        :param str name: The name of the task.
        :param Sequence['ImageDefinitionBuildTaskResponseParameters'] parameters: Parameters for the task.
        """
        pulumi.set(__self__, "end_time", end_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "log_uri", log_uri)
        pulumi.set(__self__, "start_time", start_time)
        pulumi.set(__self__, "status", status)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if parameters is not None:
            pulumi.set(__self__, "parameters", parameters)

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> str:
        """
        End time of the task.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of the task instance.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="logUri")
    def log_uri(self) -> str:
        """
        The URI for retrieving logs for the task execution.
        """
        return pulumi.get(self, "log_uri")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> str:
        """
        Start time of the task.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        The status of the task.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[str]:
        """
        Display name to help differentiate multiple instances of the same task.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        The name of the task.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def parameters(self) -> Optional[Sequence['outputs.ImageDefinitionBuildTaskResponseParameters']]:
        """
        Parameters for the task.
        """
        return pulumi.get(self, "parameters")


@pulumi.output_type
class ImageDefinitionBuildTaskResponseParameters(dict):
    def __init__(__self__, *,
                 key: str,
                 value: str):
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> str:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> str:
        return pulumi.get(self, "value")


@pulumi.output_type
class ImageReferenceResponse(dict):
    """
    Image reference information
    """
    def __init__(__self__, *,
                 exact_version: str,
                 id: Optional[str] = None):
        """
        Image reference information
        :param str exact_version: The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use.
        :param str id: Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
        """
        pulumi.set(__self__, "exact_version", exact_version)
        if id is not None:
            pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="exactVersion")
    def exact_version(self) -> str:
        """
        The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use.
        """
        return pulumi.get(self, "exact_version")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class SystemDataResponse(dict):
    """
    Metadata pertaining to creation and last modification of the resource.
    """
    def __init__(__self__, *,
                 created_at: Optional[str] = None,
                 created_by: Optional[str] = None,
                 created_by_type: Optional[str] = None,
                 last_modified_at: Optional[str] = None,
                 last_modified_by: Optional[str] = None,
                 last_modified_by_type: Optional[str] = None):
        """
        Metadata pertaining to creation and last modification of the resource.
        :param str created_at: The timestamp of resource creation (UTC).
        :param str created_by: The identity that created the resource.
        :param str created_by_type: The type of identity that created the resource.
        :param str last_modified_at: The timestamp of resource last modification (UTC)
        :param str last_modified_by: The identity that last modified the resource.
        :param str last_modified_by_type: The type of identity that last modified the resource.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if created_by_type is not None:
            pulumi.set(__self__, "created_by_type", created_by_type)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by is not None:
            pulumi.set(__self__, "last_modified_by", last_modified_by)
        if last_modified_by_type is not None:
            pulumi.set(__self__, "last_modified_by_type", last_modified_by_type)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[str]:
        """
        The timestamp of resource creation (UTC).
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[str]:
        """
        The identity that created the resource.
        """
        return pulumi.get(self, "created_by")

    @property
    @pulumi.getter(name="createdByType")
    def created_by_type(self) -> Optional[str]:
        """
        The type of identity that created the resource.
        """
        return pulumi.get(self, "created_by_type")

    @property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[str]:
        """
        The timestamp of resource last modification (UTC)
        """
        return pulumi.get(self, "last_modified_at")

    @property
    @pulumi.getter(name="lastModifiedBy")
    def last_modified_by(self) -> Optional[str]:
        """
        The identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by")

    @property
    @pulumi.getter(name="lastModifiedByType")
    def last_modified_by_type(self) -> Optional[str]:
        """
        The type of identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by_type")


