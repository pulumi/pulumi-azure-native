# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities

__all__ = [
    'ResourcePolicyArgs',
    'ResourcePolicyArgsDict',
]

MYPY = False

if not MYPY:
    class ResourcePolicyArgsDict(TypedDict):
        """
        A resource policy.
        """
        filter: NotRequired[pulumi.Input[str]]
        """
        Optional. When specified, this expression is used to filter the resources.
        """
        resources: NotRequired[pulumi.Input[str]]
        """
        Resources that are included and shared as a part of a curation profile.
        """
elif False:
    ResourcePolicyArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ResourcePolicyArgs:
    def __init__(__self__, *,
                 filter: Optional[pulumi.Input[str]] = None,
                 resources: Optional[pulumi.Input[str]] = None):
        """
        A resource policy.
        :param pulumi.Input[str] filter: Optional. When specified, this expression is used to filter the resources.
        :param pulumi.Input[str] resources: Resources that are included and shared as a part of a curation profile.
        """
        if filter is not None:
            pulumi.set(__self__, "filter", filter)
        if resources is not None:
            pulumi.set(__self__, "resources", resources)

    @property
    @pulumi.getter
    def filter(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. When specified, this expression is used to filter the resources.
        """
        return pulumi.get(self, "filter")

    @filter.setter
    def filter(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "filter", value)

    @property
    @pulumi.getter
    def resources(self) -> Optional[pulumi.Input[str]]:
        """
        Resources that are included and shared as a part of a curation profile.
        """
        return pulumi.get(self, "resources")

    @resources.setter
    def resources(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resources", value)


