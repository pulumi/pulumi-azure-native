# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AutoDeleteCondition',
    'EmailNotificationEnableType',
    'EncryptionStatus',
    'FeatureDataType',
    'IdentityConfigurationType',
    'ImageAnnotationType',
    'IncrementalDataRefresh',
    'IsolationMode',
    'JobType',
    'MLAssistConfigurationType',
    'ManagedNetworkStatus',
    'ManagedServiceIdentityType',
    'MaterializationStoreType',
    'MediaType',
    'MultiSelect',
    'NodesValueType',
    'PrivateEndpointServiceConnectionStatus',
    'PublicNetworkAccess',
    'RecurrenceFrequency',
    'RuleCategory',
    'RuleStatus',
    'RuleType',
    'SkuTier',
    'TextAnnotationType',
    'TriggerType',
    'WebhookType',
    'WeekDay',
]


class AutoDeleteCondition(str, Enum):
    """
    When to check if an asset is expired
    """
    CREATED_GREATER_THAN = "CreatedGreaterThan"
    LAST_ACCESSED_GREATER_THAN = "LastAccessedGreaterThan"


class EmailNotificationEnableType(str, Enum):
    """
    Enum to determine the email notification type.
    """
    JOB_COMPLETED = "JobCompleted"
    JOB_FAILED = "JobFailed"
    JOB_CANCELLED = "JobCancelled"


class EncryptionStatus(str, Enum):
    """
    Indicates whether or not the encryption is enabled for the workspace.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class FeatureDataType(str, Enum):
    """
    Specifies the data type
    """
    STRING = "String"
    INTEGER = "Integer"
    LONG = "Long"
    FLOAT = "Float"
    DOUBLE = "Double"
    BINARY = "Binary"
    DATETIME = "Datetime"
    BOOLEAN = "Boolean"


class IdentityConfigurationType(str, Enum):
    """
    [Required] Specifies the type of identity framework.
    """
    MANAGED = "Managed"
    AML_TOKEN = "AMLToken"
    USER_IDENTITY = "UserIdentity"


class ImageAnnotationType(str, Enum):
    """
    Annotation type of image labeling job.
    """
    CLASSIFICATION = "Classification"
    BOUNDING_BOX = "BoundingBox"
    INSTANCE_SEGMENTATION = "InstanceSegmentation"


class IncrementalDataRefresh(str, Enum):
    """
    Indicates whether to enable incremental data refresh.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class IsolationMode(str, Enum):
    """
    Isolation mode for the managed network of a machine learning workspace.
    """
    DISABLED = "Disabled"
    ALLOW_INTERNET_OUTBOUND = "AllowInternetOutbound"
    ALLOW_ONLY_APPROVED_OUTBOUND = "AllowOnlyApprovedOutbound"


class JobType(str, Enum):
    """
    [Required] Specifies the type of job.
    """
    AUTO_ML = "AutoML"
    COMMAND = "Command"
    LABELING = "Labeling"
    SWEEP = "Sweep"
    PIPELINE = "Pipeline"
    SPARK = "Spark"


class MLAssistConfigurationType(str, Enum):
    """
    [Required] Indicates whether MLAssist feature is enabled.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class ManagedNetworkStatus(str, Enum):
    """
    Status for the managed network of a machine learning workspace.
    """
    INACTIVE = "Inactive"
    ACTIVE = "Active"


class ManagedServiceIdentityType(str, Enum):
    """
    Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class MaterializationStoreType(str, Enum):
    """
    Specifies the stores to which materialization should happen
    """
    NONE = "None"
    ONLINE = "Online"
    OFFLINE = "Offline"
    ONLINE_AND_OFFLINE = "OnlineAndOffline"


class MediaType(str, Enum):
    """
    [Required] Media type of the job.
    """
    IMAGE = "Image"
    TEXT = "Text"


class MultiSelect(str, Enum):
    """
    Indicates whether it is allowed to select multiple classes in this category.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class NodesValueType(str, Enum):
    """
    [Required] Type of the Nodes value
    """
    ALL = "All"
    CUSTOM = "Custom"


class PrivateEndpointServiceConnectionStatus(str, Enum):
    """
    Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    """
    PENDING = "Pending"
    APPROVED = "Approved"
    REJECTED = "Rejected"
    DISCONNECTED = "Disconnected"
    TIMEOUT = "Timeout"


class PublicNetworkAccess(str, Enum):
    """
    Whether requests from Public Network are allowed.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class RecurrenceFrequency(str, Enum):
    """
    [Required] The frequency to trigger schedule.
    """
    MINUTE = "Minute"
    """
    Minute frequency
    """
    HOUR = "Hour"
    """
    Hour frequency
    """
    DAY = "Day"
    """
    Day frequency
    """
    WEEK = "Week"
    """
    Week frequency
    """
    MONTH = "Month"
    """
    Month frequency
    """


class RuleCategory(str, Enum):
    """
    Category of a managed network Outbound Rule of a machine learning workspace.
    """
    REQUIRED = "Required"
    RECOMMENDED = "Recommended"
    USER_DEFINED = "UserDefined"


class RuleStatus(str, Enum):
    """
    Status of a managed network Outbound Rule of a machine learning workspace.
    """
    INACTIVE = "Inactive"
    ACTIVE = "Active"


class RuleType(str, Enum):
    """
    Type of a managed network Outbound Rule of a machine learning workspace.
    """
    FQDN = "FQDN"
    PRIVATE_ENDPOINT = "PrivateEndpoint"
    SERVICE_TAG = "ServiceTag"


class SkuTier(str, Enum):
    """
    This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    """
    FREE = "Free"
    BASIC = "Basic"
    STANDARD = "Standard"
    PREMIUM = "Premium"


class TextAnnotationType(str, Enum):
    """
    Annotation type of text labeling job.
    """
    CLASSIFICATION = "Classification"
    NAMED_ENTITY_RECOGNITION = "NamedEntityRecognition"


class TriggerType(str, Enum):
    """
    [Required] 
    """
    RECURRENCE = "Recurrence"
    CRON = "Cron"


class WebhookType(str, Enum):
    """
    [Required] Specifies the type of service to send a callback
    """
    AZURE_DEV_OPS = "AzureDevOps"


class WeekDay(str, Enum):
    """
    Enum of weekday
    """
    MONDAY = "Monday"
    """
    Monday weekday
    """
    TUESDAY = "Tuesday"
    """
    Tuesday weekday
    """
    WEDNESDAY = "Wednesday"
    """
    Wednesday weekday
    """
    THURSDAY = "Thursday"
    """
    Thursday weekday
    """
    FRIDAY = "Friday"
    """
    Friday weekday
    """
    SATURDAY = "Saturday"
    """
    Saturday weekday
    """
    SUNDAY = "Sunday"
    """
    Sunday weekday
    """
