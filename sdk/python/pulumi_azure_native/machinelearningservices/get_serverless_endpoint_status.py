# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetServerlessEndpointStatusResult',
    'AwaitableGetServerlessEndpointStatusResult',
    'get_serverless_endpoint_status',
    'get_serverless_endpoint_status_output',
]

@pulumi.output_type
class GetServerlessEndpointStatusResult:
    def __init__(__self__, metrics=None):
        if metrics and not isinstance(metrics, dict):
            raise TypeError("Expected argument 'metrics' to be a dict")
        pulumi.set(__self__, "metrics", metrics)

    @property
    @pulumi.getter
    def metrics(self) -> Mapping[str, str]:
        """
        The model-specific metrics from the backing inference endpoint.
        """
        return pulumi.get(self, "metrics")


class AwaitableGetServerlessEndpointStatusResult(GetServerlessEndpointStatusResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServerlessEndpointStatusResult(
            metrics=self.metrics)


def get_serverless_endpoint_status(name: Optional[str] = None,
                                   resource_group_name: Optional[str] = None,
                                   workspace_name: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetServerlessEndpointStatusResult:
    """
    Azure REST API version: 2023-08-01-preview.


    :param str name: Serverless Endpoint name.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str workspace_name: Name of Azure Machine Learning workspace.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __args__['workspaceName'] = workspace_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:machinelearningservices:getServerlessEndpointStatus', __args__, opts=opts, typ=GetServerlessEndpointStatusResult).value

    return AwaitableGetServerlessEndpointStatusResult(
        metrics=pulumi.get(__ret__, 'metrics'))


@_utilities.lift_output_func(get_serverless_endpoint_status)
def get_serverless_endpoint_status_output(name: Optional[pulumi.Input[str]] = None,
                                          resource_group_name: Optional[pulumi.Input[str]] = None,
                                          workspace_name: Optional[pulumi.Input[str]] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetServerlessEndpointStatusResult]:
    """
    Azure REST API version: 2023-08-01-preview.


    :param str name: Serverless Endpoint name.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str workspace_name: Name of Azure Machine Learning workspace.
    """
    ...
