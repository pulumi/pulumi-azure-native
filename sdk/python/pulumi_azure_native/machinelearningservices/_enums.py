# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'ApplicationSharingPolicy',
    'BatchLoggingLevel',
    'BatchOutputAction',
    'ClusterPurpose',
    'ComputeEnvironmentType',
    'ComputeInstanceAuthorizationType',
    'ComputeType',
    'ContainerType',
    'DataBindingMode',
    'DatasetType',
    'DatastoreTypeArm',
    'DistributionType',
    'DockerSpecificationType',
    'EarlyTerminationPolicyType',
    'EncryptionStatus',
    'EndpointAuthMode',
    'EndpointComputeType',
    'Goal',
    'Header',
    'IdentityConfigurationType',
    'ImageAnnotationType',
    'JobType',
    'LinkedServiceLinkType',
    'MediaType',
    'OperatingSystemType',
    'OsType',
    'PrivateEndpointServiceConnectionStatus',
    'ReferenceType',
    'RemoteLoginPortPublicAccess',
    'ResourceIdentityAssignment',
    'ResourceIdentityType',
    'SamplingAlgorithm',
    'ScaleType',
    'SourceType',
    'SshPublicAccess',
    'ValueFormat',
    'VariantType',
    'VmPriority',
]


class ApplicationSharingPolicy(str, Enum):
    """
    Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
    """
    PERSONAL = "Personal"
    SHARED = "Shared"


class BatchLoggingLevel(str, Enum):
    """
    Logging level for batch inference operation.
    """
    INFO = "Info"
    WARNING = "Warning"
    DEBUG = "Debug"


class BatchOutputAction(str, Enum):
    """
    Indicates how the output will be organized.
    """
    SUMMARY_ONLY = "SummaryOnly"
    APPEND_ROW = "AppendRow"


class ClusterPurpose(str, Enum):
    """
    Intended usage of the cluster
    """
    FAST_PROD = "FastProd"
    DENSE_PROD = "DenseProd"
    DEV_TEST = "DevTest"


class ComputeEnvironmentType(str, Enum):
    """
    The compute environment type for the service.
    """
    ACI = "ACI"
    AKS = "AKS"


class ComputeInstanceAuthorizationType(str, Enum):
    """
    The Compute Instance Authorization type. Available values are personal (default).
    """
    PERSONAL = "personal"


class ComputeType(str, Enum):
    """
    The type of compute
    """
    AKS = "AKS"
    AML_COMPUTE = "AmlCompute"
    COMPUTE_INSTANCE = "ComputeInstance"
    DATA_FACTORY = "DataFactory"
    VIRTUAL_MACHINE = "VirtualMachine"
    HD_INSIGHT = "HDInsight"
    DATABRICKS = "Databricks"
    DATA_LAKE_ANALYTICS = "DataLakeAnalytics"


class ContainerType(str, Enum):
    """
    The type of container to retrieve logs from.
    """
    STORAGE_INITIALIZER = "StorageInitializer"
    INFERENCE_SERVER = "InferenceServer"


class DataBindingMode(str, Enum):
    """
    Mechanism for data movement to datastore.
    """
    MOUNT = "Mount"
    DOWNLOAD = "Download"
    UPLOAD = "Upload"


class DatasetType(str, Enum):
    """
    Specifies dataset type.
    """
    TABULAR = "tabular"
    FILE = "file"


class DatastoreTypeArm(str, Enum):
    """
    Specifies datastore type.
    """
    BLOB = "blob"
    ADLS = "adls"
    ADLS_GEN2 = "adls-gen2"
    DBFS = "dbfs"
    FILE = "file"
    MYSQLDB = "mysqldb"
    SQLDB = "sqldb"
    PSQLDB = "psqldb"


class DistributionType(str, Enum):
    """
    Specifies the type of distribution framework.
    """
    PY_TORCH = "PyTorch"
    TENSOR_FLOW = "TensorFlow"
    MPI = "Mpi"


class DockerSpecificationType(str, Enum):
    """
    Docker specification must be either Build or Image
    """
    BUILD = "Build"
    IMAGE = "Image"


class EarlyTerminationPolicyType(str, Enum):
    """
    Name of policy configuration
    """
    BANDIT = "Bandit"
    MEDIAN_STOPPING = "MedianStopping"
    TRUNCATION_SELECTION = "TruncationSelection"


class EncryptionStatus(str, Enum):
    """
    Indicates whether or not the encryption is enabled for the workspace.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class EndpointAuthMode(str, Enum):
    """
    Inference endpoint authentication mode type
    """
    AML_TOKEN = "AMLToken"
    KEY = "Key"
    AAD_TOKEN = "AADToken"


class EndpointComputeType(str, Enum):
    """
    The compute type of the endpoint.
    """
    MANAGED = "Managed"
    K8_S = "K8S"
    AZURE_ML_COMPUTE = "AzureMLCompute"


class Goal(str, Enum):
    """
    Defines supported metric goals for hyperparameter tuning
    """
    MINIMIZE = "Minimize"
    MAXIMIZE = "Maximize"


class Header(str, Enum):
    """
    Header type.
    """
    ALL_FILES_HAVE_SAME_HEADERS = "all_files_have_same_headers"
    ONLY_FIRST_FILE_HAS_HEADERS = "only_first_file_has_headers"
    NO_HEADERS = "no_headers"
    COMBINE_ALL_FILES_HEADERS = "combine_all_files_headers"


class IdentityConfigurationType(str, Enum):
    """
    Specifies the type of identity framework.
    """
    MANAGED = "Managed"
    AML_TOKEN = "AMLToken"


class ImageAnnotationType(str, Enum):
    """
    Annotation type of image labeling tasks.
    """
    CLASSIFICATION = "Classification"
    BOUNDING_BOX = "BoundingBox"
    INSTANCE_SEGMENTATION = "InstanceSegmentation"


class JobType(str, Enum):
    """
    Specifies the type of job.
    """
    COMMAND = "Command"
    SWEEP = "Sweep"
    LABELING = "Labeling"


class LinkedServiceLinkType(str, Enum):
    """
    Type of the link target.
    """
    SYNAPSE = "Synapse"


class MediaType(str, Enum):
    """
    Media type of data asset.
    """
    IMAGE = "Image"
    TEXT = "Text"


class OperatingSystemType(str, Enum):
    """
    The OS type the Environment.
    """
    LINUX = "Linux"
    WINDOWS = "Windows"


class OsType(str, Enum):
    """
    Compute OS Type
    """
    LINUX = "Linux"
    WINDOWS = "Windows"


class PrivateEndpointServiceConnectionStatus(str, Enum):
    """
    Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    """
    PENDING = "Pending"
    APPROVED = "Approved"
    REJECTED = "Rejected"
    DISCONNECTED = "Disconnected"
    TIMEOUT = "Timeout"


class ReferenceType(str, Enum):
    """
    Specifies the type of asset reference.
    """
    ID = "Id"
    DATA_PATH = "DataPath"
    OUTPUT_PATH = "OutputPath"


class RemoteLoginPortPublicAccess(str, Enum):
    """
    State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"
    NOT_SPECIFIED = "NotSpecified"


class ResourceIdentityAssignment(str, Enum):
    """
    Defines values for a ResourceIdentity's type.
    """
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"
    NONE = "None"


class ResourceIdentityType(str, Enum):
    """
    The identity type.
    """
    SYSTEM_ASSIGNED = "SystemAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"
    USER_ASSIGNED = "UserAssigned"
    NONE = "None"


class SamplingAlgorithm(str, Enum):
    """
    Type of the hyperparameter sampling algorithms
    """
    GRID = "Grid"
    RANDOM = "Random"
    BAYESIAN = "Bayesian"


class ScaleType(str, Enum):
    """
    Type of deployment scaling algorithm
    """
    AUTO = "Auto"
    MANUAL = "Manual"


class SourceType(str, Enum):
    """
    Data source type.
    """
    DELIMITED_FILES = "delimited_files"
    JSON_LINES_FILES = "json_lines_files"
    PARQUET_FILES = "parquet_files"


class SshPublicAccess(str, Enum):
    """
    State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class ValueFormat(str, Enum):
    """
    format for the workspace connection value
    """
    JSON = "JSON"


class VariantType(str, Enum):
    """
    The type of the variant.
    """
    CONTROL = "Control"
    TREATMENT = "Treatment"


class VmPriority(str, Enum):
    """
    Virtual Machine priority
    """
    DEDICATED = "Dedicated"
    LOW_PRIORITY = "LowPriority"
