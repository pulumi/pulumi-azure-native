# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'EncryptionStatus',
    'EndpointServiceConnectionStatus',
    'IsolationMode',
    'ManagedNetworkStatus',
    'ManagedServiceIdentityType',
    'PublicNetworkAccessType',
    'RuleAction',
    'RuleCategory',
    'RuleStatus',
    'RuleType',
    'SkuTier',
]


class EncryptionStatus(str, Enum):
    """
    Indicates whether or not the encryption is enabled for the workspace.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class EndpointServiceConnectionStatus(str, Enum):
    """
    Connection status of the service consumer with the service provider
    Possible state transitions
    Pending -> Approved (Service provider approves the connection request)
    Pending -> Rejected (Service provider rejects the connection request)
    Pending -> Disconnected (Service provider deletes the connection)
    Approved -> Rejected (Service provider rejects the approved connection)
    Approved -> Disconnected (Service provider deletes the connection)
    Rejected -> Pending (Service consumer re-initiates the connection request that was rejected)
    Rejected -> Disconnected (Service provider deletes the connection)
    """
    APPROVED = "Approved"
    PENDING = "Pending"
    REJECTED = "Rejected"
    DISCONNECTED = "Disconnected"
    TIMEOUT = "Timeout"


class IsolationMode(str, Enum):
    """
    Isolation mode for the managed network of a machine learning workspace.
    """
    DISABLED = "Disabled"
    ALLOW_INTERNET_OUTBOUND = "AllowInternetOutbound"
    ALLOW_ONLY_APPROVED_OUTBOUND = "AllowOnlyApprovedOutbound"


class ManagedNetworkStatus(str, Enum):
    """
    Status for the managed network of a machine learning workspace.
    """
    INACTIVE = "Inactive"
    ACTIVE = "Active"


class ManagedServiceIdentityType(str, Enum):
    """
    Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class PublicNetworkAccessType(str, Enum):
    """
    Whether requests from Public Network are allowed.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class RuleAction(str, Enum):
    """
    The action enum for networking rule.
    """
    ALLOW = "Allow"
    DENY = "Deny"


class RuleCategory(str, Enum):
    """
    Category of a managed network Outbound Rule of a machine learning workspace.
    """
    REQUIRED = "Required"
    RECOMMENDED = "Recommended"
    USER_DEFINED = "UserDefined"
    DEPENDENCY = "Dependency"


class RuleStatus(str, Enum):
    """
    Type of a managed network Outbound Rule of a machine learning workspace.
    """
    INACTIVE = "Inactive"
    ACTIVE = "Active"


class RuleType(str, Enum):
    """
    Type of a managed network Outbound Rule of a machine learning workspace.
    """
    FQDN = "FQDN"
    PRIVATE_ENDPOINT = "PrivateEndpoint"
    SERVICE_TAG = "ServiceTag"


class SkuTier(str, Enum):
    """
    This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    """
    FREE = "Free"
    BASIC = "Basic"
    STANDARD = "Standard"
    PREMIUM = "Premium"
