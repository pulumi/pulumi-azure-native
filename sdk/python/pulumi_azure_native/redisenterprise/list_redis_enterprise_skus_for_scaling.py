# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'ListRedisEnterpriseSkusForScalingResult',
    'AwaitableListRedisEnterpriseSkusForScalingResult',
    'list_redis_enterprise_skus_for_scaling',
    'list_redis_enterprise_skus_for_scaling_output',
]

@pulumi.output_type
class ListRedisEnterpriseSkusForScalingResult:
    """
    The response of a listSkusForScaling operation.
    """
    def __init__(__self__, skus=None):
        if skus and not isinstance(skus, list):
            raise TypeError("Expected argument 'skus' to be a list")
        pulumi.set(__self__, "skus", skus)

    @property
    @pulumi.getter
    def skus(self) -> Optional[Sequence['outputs.SkuDetailsResponse']]:
        """
        List of SKUS available to scale up or scale down.
        """
        return pulumi.get(self, "skus")


class AwaitableListRedisEnterpriseSkusForScalingResult(ListRedisEnterpriseSkusForScalingResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListRedisEnterpriseSkusForScalingResult(
            skus=self.skus)


def list_redis_enterprise_skus_for_scaling(cluster_name: Optional[builtins.str] = None,
                                           resource_group_name: Optional[builtins.str] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListRedisEnterpriseSkusForScalingResult:
    """
    Lists the available SKUs for scaling the Redis Enterprise cluster.

    Uses Azure REST API version 2025-05-01-preview.


    :param builtins.str cluster_name: The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens
    :param builtins.str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['clusterName'] = cluster_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:redisenterprise:listRedisEnterpriseSkusForScaling', __args__, opts=opts, typ=ListRedisEnterpriseSkusForScalingResult).value

    return AwaitableListRedisEnterpriseSkusForScalingResult(
        skus=pulumi.get(__ret__, 'skus'))
def list_redis_enterprise_skus_for_scaling_output(cluster_name: Optional[pulumi.Input[builtins.str]] = None,
                                                  resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[ListRedisEnterpriseSkusForScalingResult]:
    """
    Lists the available SKUs for scaling the Redis Enterprise cluster.

    Uses Azure REST API version 2025-05-01-preview.


    :param builtins.str cluster_name: The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens
    :param builtins.str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['clusterName'] = cluster_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:redisenterprise:listRedisEnterpriseSkusForScaling', __args__, opts=opts, typ=ListRedisEnterpriseSkusForScalingResult)
    return __ret__.apply(lambda __response__: ListRedisEnterpriseSkusForScalingResult(
        skus=pulumi.get(__response__, 'skus')))
