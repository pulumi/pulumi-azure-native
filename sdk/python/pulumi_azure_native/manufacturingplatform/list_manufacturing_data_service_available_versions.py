# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'ListManufacturingDataServiceAvailableVersionsResult',
    'AwaitableListManufacturingDataServiceAvailableVersionsResult',
    'list_manufacturing_data_service_available_versions',
    'list_manufacturing_data_service_available_versions_output',
]

@pulumi.output_type
class ListManufacturingDataServiceAvailableVersionsResult:
    """
    The list of available versions
    """
    def __init__(__self__, versions=None):
        if versions and not isinstance(versions, list):
            raise TypeError("Expected argument 'versions' to be a list")
        pulumi.set(__self__, "versions", versions)

    @property
    @pulumi.getter
    def versions(self) -> Sequence['outputs.ApplicationVersionResponse']:
        """
        The list of versions
        """
        return pulumi.get(self, "versions")


class AwaitableListManufacturingDataServiceAvailableVersionsResult(ListManufacturingDataServiceAvailableVersionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListManufacturingDataServiceAvailableVersionsResult(
            versions=self.versions)


def list_manufacturing_data_service_available_versions(mds_resource_name: Optional[str] = None,
                                                       resource_group_name: Optional[str] = None,
                                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListManufacturingDataServiceAvailableVersionsResult:
    """
    Returns the list of available versions
    Azure REST API version: 2025-03-01.


    :param str mds_resource_name: Name.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['mdsResourceName'] = mds_resource_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:manufacturingplatform:listManufacturingDataServiceAvailableVersions', __args__, opts=opts, typ=ListManufacturingDataServiceAvailableVersionsResult).value

    return AwaitableListManufacturingDataServiceAvailableVersionsResult(
        versions=pulumi.get(__ret__, 'versions'))
def list_manufacturing_data_service_available_versions_output(mds_resource_name: Optional[pulumi.Input[str]] = None,
                                                              resource_group_name: Optional[pulumi.Input[str]] = None,
                                                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[ListManufacturingDataServiceAvailableVersionsResult]:
    """
    Returns the list of available versions
    Azure REST API version: 2025-03-01.


    :param str mds_resource_name: Name.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['mdsResourceName'] = mds_resource_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:manufacturingplatform:listManufacturingDataServiceAvailableVersions', __args__, opts=opts, typ=ListManufacturingDataServiceAvailableVersionsResult)
    return __ret__.apply(lambda __response__: ListManufacturingDataServiceAvailableVersionsResult(
        versions=pulumi.get(__response__, 'versions')))
