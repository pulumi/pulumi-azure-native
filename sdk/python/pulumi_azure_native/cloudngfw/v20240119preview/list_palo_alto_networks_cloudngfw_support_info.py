# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'ListPaloAltoNetworksCloudngfwSupportInfoResult',
    'AwaitableListPaloAltoNetworksCloudngfwSupportInfoResult',
    'list_palo_alto_networks_cloudngfw_support_info',
    'list_palo_alto_networks_cloudngfw_support_info_output',
]

@pulumi.output_type
class ListPaloAltoNetworksCloudngfwSupportInfoResult:
    """
    Support information for the service
    """
    def __init__(__self__, account_id=None, account_registration_status=None, credits=None, end_date_for_credits=None, free_trial=None, free_trial_credit_left=None, free_trial_days_left=None, help_url=None, hub_url=None, monthly_credit_left=None, product_serial=None, product_sku=None, register_url=None, start_date_for_credits=None, support_url=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if account_registration_status and not isinstance(account_registration_status, str):
            raise TypeError("Expected argument 'account_registration_status' to be a str")
        pulumi.set(__self__, "account_registration_status", account_registration_status)
        if credits and not isinstance(credits, int):
            raise TypeError("Expected argument 'credits' to be a int")
        pulumi.set(__self__, "credits", credits)
        if end_date_for_credits and not isinstance(end_date_for_credits, str):
            raise TypeError("Expected argument 'end_date_for_credits' to be a str")
        pulumi.set(__self__, "end_date_for_credits", end_date_for_credits)
        if free_trial and not isinstance(free_trial, str):
            raise TypeError("Expected argument 'free_trial' to be a str")
        pulumi.set(__self__, "free_trial", free_trial)
        if free_trial_credit_left and not isinstance(free_trial_credit_left, int):
            raise TypeError("Expected argument 'free_trial_credit_left' to be a int")
        pulumi.set(__self__, "free_trial_credit_left", free_trial_credit_left)
        if free_trial_days_left and not isinstance(free_trial_days_left, int):
            raise TypeError("Expected argument 'free_trial_days_left' to be a int")
        pulumi.set(__self__, "free_trial_days_left", free_trial_days_left)
        if help_url and not isinstance(help_url, str):
            raise TypeError("Expected argument 'help_url' to be a str")
        pulumi.set(__self__, "help_url", help_url)
        if hub_url and not isinstance(hub_url, str):
            raise TypeError("Expected argument 'hub_url' to be a str")
        pulumi.set(__self__, "hub_url", hub_url)
        if monthly_credit_left and not isinstance(monthly_credit_left, int):
            raise TypeError("Expected argument 'monthly_credit_left' to be a int")
        pulumi.set(__self__, "monthly_credit_left", monthly_credit_left)
        if product_serial and not isinstance(product_serial, str):
            raise TypeError("Expected argument 'product_serial' to be a str")
        pulumi.set(__self__, "product_serial", product_serial)
        if product_sku and not isinstance(product_sku, str):
            raise TypeError("Expected argument 'product_sku' to be a str")
        pulumi.set(__self__, "product_sku", product_sku)
        if register_url and not isinstance(register_url, str):
            raise TypeError("Expected argument 'register_url' to be a str")
        pulumi.set(__self__, "register_url", register_url)
        if start_date_for_credits and not isinstance(start_date_for_credits, str):
            raise TypeError("Expected argument 'start_date_for_credits' to be a str")
        pulumi.set(__self__, "start_date_for_credits", start_date_for_credits)
        if support_url and not isinstance(support_url, str):
            raise TypeError("Expected argument 'support_url' to be a str")
        pulumi.set(__self__, "support_url", support_url)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[str]:
        """
        Support account associated with given resource
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter(name="accountRegistrationStatus")
    def account_registration_status(self) -> Optional[str]:
        """
        account registered in Customer Support Portal
        """
        return pulumi.get(self, "account_registration_status")

    @property
    @pulumi.getter
    def credits(self) -> Optional[int]:
        """
        credits purchased, unit per hour
        """
        return pulumi.get(self, "credits")

    @property
    @pulumi.getter(name="endDateForCredits")
    def end_date_for_credits(self) -> Optional[str]:
        """
        date in format yyyy-mm-dd
        """
        return pulumi.get(self, "end_date_for_credits")

    @property
    @pulumi.getter(name="freeTrial")
    def free_trial(self) -> Optional[str]:
        """
        Product usage is in free trial period
        """
        return pulumi.get(self, "free_trial")

    @property
    @pulumi.getter(name="freeTrialCreditLeft")
    def free_trial_credit_left(self) -> Optional[int]:
        """
        Free trial credit remaining
        """
        return pulumi.get(self, "free_trial_credit_left")

    @property
    @pulumi.getter(name="freeTrialDaysLeft")
    def free_trial_days_left(self) -> Optional[int]:
        """
        Free trial days remaining
        """
        return pulumi.get(self, "free_trial_days_left")

    @property
    @pulumi.getter(name="helpURL")
    def help_url(self) -> Optional[str]:
        """
        URL for paloaltonetworks live community
        """
        return pulumi.get(self, "help_url")

    @property
    @pulumi.getter(name="hubUrl")
    def hub_url(self) -> Optional[str]:
        """
        URL for Strata Cloud Manager
        """
        return pulumi.get(self, "hub_url")

    @property
    @pulumi.getter(name="monthlyCreditLeft")
    def monthly_credit_left(self) -> Optional[int]:
        """
        monthly credit is computed as credits * days in calendar month
        """
        return pulumi.get(self, "monthly_credit_left")

    @property
    @pulumi.getter(name="productSerial")
    def product_serial(self) -> Optional[str]:
        """
        product Serial associated with given resource
        """
        return pulumi.get(self, "product_serial")

    @property
    @pulumi.getter(name="productSku")
    def product_sku(self) -> Optional[str]:
        """
        product SKU associated with given resource
        """
        return pulumi.get(self, "product_sku")

    @property
    @pulumi.getter(name="registerURL")
    def register_url(self) -> Optional[str]:
        """
        URL for registering product in paloaltonetworks Customer Service Portal
        """
        return pulumi.get(self, "register_url")

    @property
    @pulumi.getter(name="startDateForCredits")
    def start_date_for_credits(self) -> Optional[str]:
        """
        date in format yyyy-mm-dd
        """
        return pulumi.get(self, "start_date_for_credits")

    @property
    @pulumi.getter(name="supportURL")
    def support_url(self) -> Optional[str]:
        """
        URL for paloaltonetworks Customer Service Portal
        """
        return pulumi.get(self, "support_url")


class AwaitableListPaloAltoNetworksCloudngfwSupportInfoResult(ListPaloAltoNetworksCloudngfwSupportInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListPaloAltoNetworksCloudngfwSupportInfoResult(
            account_id=self.account_id,
            account_registration_status=self.account_registration_status,
            credits=self.credits,
            end_date_for_credits=self.end_date_for_credits,
            free_trial=self.free_trial,
            free_trial_credit_left=self.free_trial_credit_left,
            free_trial_days_left=self.free_trial_days_left,
            help_url=self.help_url,
            hub_url=self.hub_url,
            monthly_credit_left=self.monthly_credit_left,
            product_serial=self.product_serial,
            product_sku=self.product_sku,
            register_url=self.register_url,
            start_date_for_credits=self.start_date_for_credits,
            support_url=self.support_url)


def list_palo_alto_networks_cloudngfw_support_info(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListPaloAltoNetworksCloudngfwSupportInfoResult:
    """
    Support information for the service
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:cloudngfw/v20240119preview:listPaloAltoNetworksCloudngfwSupportInfo', __args__, opts=opts, typ=ListPaloAltoNetworksCloudngfwSupportInfoResult).value

    return AwaitableListPaloAltoNetworksCloudngfwSupportInfoResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        account_registration_status=pulumi.get(__ret__, 'account_registration_status'),
        credits=pulumi.get(__ret__, 'credits'),
        end_date_for_credits=pulumi.get(__ret__, 'end_date_for_credits'),
        free_trial=pulumi.get(__ret__, 'free_trial'),
        free_trial_credit_left=pulumi.get(__ret__, 'free_trial_credit_left'),
        free_trial_days_left=pulumi.get(__ret__, 'free_trial_days_left'),
        help_url=pulumi.get(__ret__, 'help_url'),
        hub_url=pulumi.get(__ret__, 'hub_url'),
        monthly_credit_left=pulumi.get(__ret__, 'monthly_credit_left'),
        product_serial=pulumi.get(__ret__, 'product_serial'),
        product_sku=pulumi.get(__ret__, 'product_sku'),
        register_url=pulumi.get(__ret__, 'register_url'),
        start_date_for_credits=pulumi.get(__ret__, 'start_date_for_credits'),
        support_url=pulumi.get(__ret__, 'support_url'))


@_utilities.lift_output_func(list_palo_alto_networks_cloudngfw_support_info)
def list_palo_alto_networks_cloudngfw_support_info_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ListPaloAltoNetworksCloudngfwSupportInfoResult]:
    """
    Support information for the service
    """
    ...
