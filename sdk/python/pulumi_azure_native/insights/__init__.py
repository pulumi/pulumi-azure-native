# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .action_group import *
from .activity_log_alert import *
from .alert_rule import *
from .analytics_item import *
from .autoscale_setting import *
from .component import *
from .component_current_billing_feature import *
from .component_linked_storage_account import *
from .data_collection_rule import *
from .data_collection_rule_association import *
from .diagnostic_setting import *
from .export_configuration import *
from .favorite import *
from .get_action_group import *
from .get_activity_log_alert import *
from .get_alert_rule import *
from .get_analytics_item import *
from .get_autoscale_setting import *
from .get_component import *
from .get_component_current_billing_feature import *
from .get_component_linked_storage_account import *
from .get_data_collection_rule import *
from .get_data_collection_rule_association import *
from .get_diagnostic_setting import *
from .get_export_configuration import *
from .get_favorite import *
from .get_guest_diagnostics_settings_association import *
from .get_log_profile import *
from .get_management_group_diagnostic_setting import *
from .get_metric_alert import *
from .get_my_workbook import *
from .get_private_endpoint_connection import *
from .get_private_link_scope import *
from .get_private_link_scoped_resource import *
from .get_proactive_detection_configuration import *
from .get_scheduled_query_rule import *
from .get_subscription_diagnostic_setting import *
from .get_test_result_file import *
from .get_web_test import *
from .get_workbook import *
from .get_workbook_template import *
from .getguest_diagnostics_setting import *
from .guest_diagnostics_setting import *
from .guest_diagnostics_settings_association import *
from .list_ea_subscription_list_migration_date_post import *
from .log_profile import *
from .management_group_diagnostic_setting import *
from .metric_alert import *
from .my_workbook import *
from .private_endpoint_connection import *
from .private_link_scope import *
from .private_link_scoped_resource import *
from .proactive_detection_configuration import *
from .scheduled_query_rule import *
from .subscription_diagnostic_setting import *
from .web_test import *
from .workbook import *
from .workbook_template import *
from ._inputs import *
from . import outputs

# Make subpackages available:
from . import (
    latest,
    v20140401,
    v20150401,
    v20150501,
    v20160301,
    v20170401,
    v20170501preview,
    v20171001,
    v20180301,
    v20180416,
    v20180501preview,
    v20180601preview,
    v20180617preview,
    v20180901,
    v20190301,
    v20190601,
    v20191017preview,
    v20191101preview,
    v20200101preview,
    v20200202preview,
    v20200210preview,
    v20200301preview,
    v20200501preview,
    v20201001,
    v20201005preview,
    v20201020,
    v20210201preview,
)

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-native:insights:ActionGroup":
                return ActionGroup(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:ActivityLogAlert":
                return ActivityLogAlert(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:AlertRule":
                return AlertRule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:AnalyticsItem":
                return AnalyticsItem(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:AutoscaleSetting":
                return AutoscaleSetting(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:Component":
                return Component(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:ComponentCurrentBillingFeature":
                return ComponentCurrentBillingFeature(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:ComponentLinkedStorageAccount":
                return ComponentLinkedStorageAccount(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:DataCollectionRule":
                return DataCollectionRule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:DataCollectionRuleAssociation":
                return DataCollectionRuleAssociation(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:DiagnosticSetting":
                return DiagnosticSetting(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:ExportConfiguration":
                return ExportConfiguration(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:Favorite":
                return Favorite(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:GuestDiagnosticsSettingsAssociation":
                return GuestDiagnosticsSettingsAssociation(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:LogProfile":
                return LogProfile(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:ManagementGroupDiagnosticSetting":
                return ManagementGroupDiagnosticSetting(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:MetricAlert":
                return MetricAlert(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:MyWorkbook":
                return MyWorkbook(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:PrivateEndpointConnection":
                return PrivateEndpointConnection(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:PrivateLinkScope":
                return PrivateLinkScope(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:PrivateLinkScopedResource":
                return PrivateLinkScopedResource(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:ProactiveDetectionConfiguration":
                return ProactiveDetectionConfiguration(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:ScheduledQueryRule":
                return ScheduledQueryRule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:SubscriptionDiagnosticSetting":
                return SubscriptionDiagnosticSetting(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:WebTest":
                return WebTest(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:Workbook":
                return Workbook(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:WorkbookTemplate":
                return WorkbookTemplate(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:insights:guestDiagnosticsSetting":
                return GuestDiagnosticsSetting(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-native", "insights", _module_instance)

_register_module()
