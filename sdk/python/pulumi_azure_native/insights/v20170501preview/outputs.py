# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'SubscriptionLogSettingsResponse',
]

@pulumi.output_type
class SubscriptionLogSettingsResponse(dict):
    """
    Part of Subscription diagnostic setting. Specifies the settings for a particular log.
    """
    def __init__(__self__, *,
                 enabled: bool,
                 category: Optional[str] = None):
        """
        Part of Subscription diagnostic setting. Specifies the settings for a particular log.
        :param bool enabled: a value indicating whether this log is enabled.
        :param str category: Name of a Subscription Diagnostic Log category for a resource type this setting is applied to.
        """
        pulumi.set(__self__, "enabled", enabled)
        if category is not None:
            pulumi.set(__self__, "category", category)

    @property
    @pulumi.getter
    def enabled(self) -> bool:
        """
        a value indicating whether this log is enabled.
        """
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter
    def category(self) -> Optional[str]:
        """
        Name of a Subscription Diagnostic Log category for a resource type this setting is applied to.
        """
        return pulumi.get(self, "category")


