# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .blob import *
from .blob_container import *
from .blob_container_immutability_policy import *
from .blob_inventory_policy import *
from .blob_service_properties import *
from .encryption_scope import *
from .file_service_properties import *
from .file_share import *
from .get_blob_container import *
from .get_blob_container_immutability_policy import *
from .get_blob_inventory_policy import *
from .get_blob_service_properties import *
from .get_encryption_scope import *
from .get_file_service_properties import *
from .get_file_share import *
from .get_management_policy import *
from .get_object_replication_policy import *
from .get_private_endpoint_connection import *
from .get_queue import *
from .get_queue_service_properties import *
from .get_storage_account import *
from .get_table import *
from .get_table_service_properties import *
from .list_storage_account_keys import *
from .list_storage_account_sas import *
from .list_storage_account_service_sas import *
from .management_policy import *
from .object_replication_policy import *
from .private_endpoint_connection import *
from .queue import *
from .queue_service_properties import *
from .storage_account import *
from .storage_account_static_website import *
from .table import *
from .table_service_properties import *
from ._inputs import *
from . import outputs

# Make subpackages available:
from . import (
    latest,
    v20150501preview,
    v20150615,
    v20160101,
    v20160501,
    v20161201,
    v20170601,
    v20171001,
    v20180201,
    v20180301preview,
    v20180701,
    v20181101,
    v20190401,
    v20190601,
    v20200801preview,
    v20210101,
    v20210201,
)

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-native:storage:Blob":
                return Blob(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:BlobContainer":
                return BlobContainer(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:BlobContainerImmutabilityPolicy":
                return BlobContainerImmutabilityPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:BlobInventoryPolicy":
                return BlobInventoryPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:BlobServiceProperties":
                return BlobServiceProperties(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:EncryptionScope":
                return EncryptionScope(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:FileServiceProperties":
                return FileServiceProperties(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:FileShare":
                return FileShare(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:ManagementPolicy":
                return ManagementPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:ObjectReplicationPolicy":
                return ObjectReplicationPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:PrivateEndpointConnection":
                return PrivateEndpointConnection(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:Queue":
                return Queue(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:QueueServiceProperties":
                return QueueServiceProperties(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:StorageAccount":
                return StorageAccount(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:StorageAccountStaticWebsite":
                return StorageAccountStaticWebsite(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:Table":
                return Table(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:storage:TableServiceProperties":
                return TableServiceProperties(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-native", "storage", _module_instance)

_register_module()
