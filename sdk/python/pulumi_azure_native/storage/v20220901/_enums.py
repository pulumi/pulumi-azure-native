# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AccessTier',
    'AccountImmutabilityPolicyState',
    'AccountType',
    'Action',
    'AllowedCopyScope',
    'AllowedMethods',
    'Bypass',
    'DefaultAction',
    'DefaultSharePermission',
    'DirectoryServiceOptions',
    'DnsEndpointType',
    'EnabledProtocols',
    'EncryptionScopeSource',
    'EncryptionScopeState',
    'ExpirationAction',
    'ExtendedLocationTypes',
    'Format',
    'HttpProtocol',
    'IdentityType',
    'InventoryRuleType',
    'KeySource',
    'KeyType',
    'Kind',
    'LargeFileSharesState',
    'MinimumTlsVersion',
    'Name',
    'ObjectType',
    'Permissions',
    'PrivateEndpointServiceConnectionStatus',
    'PublicAccess',
    'PublicNetworkAccess',
    'RootSquashType',
    'RoutingChoice',
    'RuleType',
    'Schedule',
    'Services',
    'ShareAccessTier',
    'SignedResource',
    'SignedResourceTypes',
    'SkuName',
    'State',
]


class AccessTier(str, Enum):
    HOT = "Hot"
    COOL = "Cool"
    PREMIUM = "Premium"


class AccountImmutabilityPolicyState(str, Enum):
    UNLOCKED = "Unlocked"
    LOCKED = "Locked"
    DISABLED = "Disabled"


class AccountType(str, Enum):
    USER = "User"
    COMPUTER = "Computer"


class Action(str, Enum):
    ALLOW = "Allow"


class AllowedCopyScope(str, Enum):
    PRIVATE_LINK = "PrivateLink"
    AAD = "AAD"


class AllowedMethods(str, Enum):
    DELETE = "DELETE"
    GET = "GET"
    HEAD = "HEAD"
    MERGE = "MERGE"
    POST = "POST"
    OPTIONS = "OPTIONS"
    PUT = "PUT"
    PATCH = "PATCH"


class Bypass(str, Enum):
    NONE = "None"
    LOGGING = "Logging"
    METRICS = "Metrics"
    AZURE_SERVICES = "AzureServices"


class DefaultAction(str, Enum):
    ALLOW = "Allow"
    DENY = "Deny"


class DefaultSharePermission(str, Enum):
    NONE = "None"
    STORAGE_FILE_DATA_SMB_SHARE_READER = "StorageFileDataSmbShareReader"
    STORAGE_FILE_DATA_SMB_SHARE_CONTRIBUTOR = "StorageFileDataSmbShareContributor"
    STORAGE_FILE_DATA_SMB_SHARE_ELEVATED_CONTRIBUTOR = "StorageFileDataSmbShareElevatedContributor"


class DirectoryServiceOptions(str, Enum):
    NONE = "None"
    AADDS = "AADDS"
    AD = "AD"
    AADKERB = "AADKERB"


class DnsEndpointType(str, Enum):
    STANDARD = "Standard"
    AZURE_DNS_ZONE = "AzureDnsZone"


class EnabledProtocols(str, Enum):
    SMB = "SMB"
    NFS = "NFS"


class EncryptionScopeSource(str, Enum):
    MICROSOFT_STORAGE = "Microsoft.Storage"
    MICROSOFT_KEY_VAULT = "Microsoft.KeyVault"


class EncryptionScopeState(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class ExpirationAction(str, Enum):
    LOG = "Log"


class ExtendedLocationTypes(str, Enum):
    EDGE_ZONE = "EdgeZone"


class Format(str, Enum):
    CSV = "Csv"
    PARQUET = "Parquet"


class HttpProtocol(str, Enum):
    HTTPS_HTTP = "https,http"
    HTTPS = "https"


class IdentityType(str, Enum):
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class InventoryRuleType(str, Enum):
    INVENTORY = "Inventory"


class KeySource(str, Enum):
    MICROSOFT_STORAGE = "Microsoft.Storage"
    MICROSOFT_KEYVAULT = "Microsoft.Keyvault"


class KeyType(str, Enum):
    SERVICE = "Service"
    ACCOUNT = "Account"


class Kind(str, Enum):
    STORAGE = "Storage"
    STORAGE_V2 = "StorageV2"
    BLOB_STORAGE = "BlobStorage"
    FILE_STORAGE = "FileStorage"
    BLOCK_BLOB_STORAGE = "BlockBlobStorage"


class LargeFileSharesState(str, Enum):
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class MinimumTlsVersion(str, Enum):
    TLS1_0 = "TLS1_0"
    TLS1_1 = "TLS1_1"
    TLS1_2 = "TLS1_2"


class Name(str, Enum):
    ACCESS_TIME_TRACKING = "AccessTimeTracking"


class ObjectType(str, Enum):
    BLOB = "Blob"
    CONTAINER = "Container"


class Permissions(str, Enum):
    R = "r"
    D = "d"
    W = "w"
    L = "l"
    A = "a"
    C = "c"
    U = "u"
    P = "p"


class PrivateEndpointServiceConnectionStatus(str, Enum):
    PENDING = "Pending"
    APPROVED = "Approved"
    REJECTED = "Rejected"


class PublicAccess(str, Enum):
    CONTAINER = "Container"
    BLOB = "Blob"
    NONE = "None"


class PublicNetworkAccess(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class RootSquashType(str, Enum):
    NO_ROOT_SQUASH = "NoRootSquash"
    ROOT_SQUASH = "RootSquash"
    ALL_SQUASH = "AllSquash"


class RoutingChoice(str, Enum):
    MICROSOFT_ROUTING = "MicrosoftRouting"
    INTERNET_ROUTING = "InternetRouting"


class RuleType(str, Enum):
    LIFECYCLE = "Lifecycle"


class Schedule(str, Enum):
    DAILY = "Daily"
    WEEKLY = "Weekly"


class Services(str, Enum):
    B = "b"
    Q = "q"
    T = "t"
    F = "f"


class ShareAccessTier(str, Enum):
    TRANSACTION_OPTIMIZED = "TransactionOptimized"
    HOT = "Hot"
    COOL = "Cool"
    PREMIUM = "Premium"


class SignedResource(str, Enum):
    B = "b"
    C = "c"
    F = "f"
    S = "s"


class SignedResourceTypes(str, Enum):
    S = "s"
    C = "c"
    O = "o"


class SkuName(str, Enum):
    STANDARD_LRS = "Standard_LRS"
    STANDARD_GRS = "Standard_GRS"
    STANDARD_RAGRS = "Standard_RAGRS"
    STANDARD_ZRS = "Standard_ZRS"
    PREMIUM_LRS = "Premium_LRS"
    PREMIUM_ZRS = "Premium_ZRS"
    STANDARD_GZRS = "Standard_GZRS"
    STANDARD_RAGZRS = "Standard_RAGZRS"


class State(str, Enum):
    PROVISIONING = "Provisioning"
    DEPROVISIONING = "Deprovisioning"
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    NETWORK_SOURCE_DELETED = "NetworkSourceDeleted"
