# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ServiceGroupArgs', 'ServiceGroup']

@pulumi.input_type
class ServiceGroupArgs:
    def __init__(__self__, *,
                 kind: Optional[pulumi.Input[builtins.str]] = None,
                 properties: Optional[pulumi.Input['ServiceGroupPropertiesArgs']] = None,
                 service_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None):
        """
        The set of arguments for constructing a ServiceGroup resource.
        :param pulumi.Input[builtins.str] kind: The kind of the serviceGroup.
        :param pulumi.Input['ServiceGroupPropertiesArgs'] properties: ServiceGroup creation request body parameters.
        :param pulumi.Input[builtins.str] service_group_name: ServiceGroup Name.
        :param pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]] tags: The serviceGroup tags.
        """
        if kind is not None:
            pulumi.set(__self__, "kind", kind)
        if properties is not None:
            pulumi.set(__self__, "properties", properties)
        if service_group_name is not None:
            pulumi.set(__self__, "service_group_name", service_group_name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def kind(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The kind of the serviceGroup.
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter
    def properties(self) -> Optional[pulumi.Input['ServiceGroupPropertiesArgs']]:
        """
        ServiceGroup creation request body parameters.
        """
        return pulumi.get(self, "properties")

    @properties.setter
    def properties(self, value: Optional[pulumi.Input['ServiceGroupPropertiesArgs']]):
        pulumi.set(self, "properties", value)

    @property
    @pulumi.getter(name="serviceGroupName")
    def service_group_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        ServiceGroup Name.
        """
        return pulumi.get(self, "service_group_name")

    @service_group_name.setter
    def service_group_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "service_group_name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]:
        """
        The serviceGroup tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "tags", value)


class ServiceGroup(pulumi.CustomResource):

    pulumi_type = "azure-native:management:ServiceGroup"

    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 kind: Optional[pulumi.Input[builtins.str]] = None,
                 properties: Optional[pulumi.Input[Union['ServiceGroupPropertiesArgs', 'ServiceGroupPropertiesArgsDict']]] = None,
                 service_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 __props__=None):
        """
        The serviceGroup details.

        Uses Azure REST API version 2024-02-01-preview.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] kind: The kind of the serviceGroup.
        :param pulumi.Input[Union['ServiceGroupPropertiesArgs', 'ServiceGroupPropertiesArgsDict']] properties: ServiceGroup creation request body parameters.
        :param pulumi.Input[builtins.str] service_group_name: ServiceGroup Name.
        :param pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]] tags: The serviceGroup tags.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ServiceGroupArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The serviceGroup details.

        Uses Azure REST API version 2024-02-01-preview.

        :param str resource_name: The name of the resource.
        :param ServiceGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ServiceGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 kind: Optional[pulumi.Input[builtins.str]] = None,
                 properties: Optional[pulumi.Input[Union['ServiceGroupPropertiesArgs', 'ServiceGroupPropertiesArgsDict']]] = None,
                 service_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ServiceGroupArgs.__new__(ServiceGroupArgs)

            __props__.__dict__["kind"] = kind
            __props__.__dict__["properties"] = properties
            __props__.__dict__["service_group_name"] = service_group_name
            __props__.__dict__["tags"] = tags
            __props__.__dict__["azure_api_version"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:management/v20240201preview:ServiceGroup")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(ServiceGroup, __self__).__init__(
            'azure-native:management:ServiceGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'ServiceGroup':
        """
        Get an existing ServiceGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = ServiceGroupArgs.__new__(ServiceGroupArgs)

        __props__.__dict__["azure_api_version"] = None
        __props__.__dict__["kind"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["properties"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["type"] = None
        return ServiceGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="azureApiVersion")
    def azure_api_version(self) -> pulumi.Output[builtins.str]:
        """
        The Azure API version of the resource.
        """
        return pulumi.get(self, "azure_api_version")

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The kind of the serviceGroup.
        """
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def properties(self) -> pulumi.Output['outputs.ServiceGroupPropertiesResponse']:
        """
        ServiceGroup creation request body parameters.
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, builtins.str]]]:
        """
        The serviceGroup tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[builtins.str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

