# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'ListApplianceClusterCustomerUserCredentialResult',
    'AwaitableListApplianceClusterCustomerUserCredentialResult',
    'list_appliance_cluster_customer_user_credential',
    'list_appliance_cluster_customer_user_credential_output',
]

@pulumi.output_type
class ListApplianceClusterCustomerUserCredentialResult:
    """
    The List Cluster Customer User Credential Results appliance.
    """
    def __init__(__self__, kubeconfigs=None, ssh_keys=None):
        if kubeconfigs and not isinstance(kubeconfigs, list):
            raise TypeError("Expected argument 'kubeconfigs' to be a list")
        pulumi.set(__self__, "kubeconfigs", kubeconfigs)
        if ssh_keys and not isinstance(ssh_keys, dict):
            raise TypeError("Expected argument 'ssh_keys' to be a dict")
        pulumi.set(__self__, "ssh_keys", ssh_keys)

    @property
    @pulumi.getter
    def kubeconfigs(self) -> Sequence['outputs.ApplianceCredentialKubeconfigResponse']:
        """
        The list of appliance kubeconfigs.
        """
        return pulumi.get(self, "kubeconfigs")

    @property
    @pulumi.getter(name="sshKeys")
    def ssh_keys(self) -> Mapping[str, 'outputs.SSHKeyResponse']:
        """
        Map of Customer User Public and Private SSH Keys
        """
        return pulumi.get(self, "ssh_keys")


class AwaitableListApplianceClusterCustomerUserCredentialResult(ListApplianceClusterCustomerUserCredentialResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListApplianceClusterCustomerUserCredentialResult(
            kubeconfigs=self.kubeconfigs,
            ssh_keys=self.ssh_keys)


def list_appliance_cluster_customer_user_credential(resource_group_name: Optional[str] = None,
                                                    resource_name: Optional[str] = None,
                                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListApplianceClusterCustomerUserCredentialResult:
    """
    Returns the cluster customer user credentials for the dedicated appliance.
    Azure REST API version: 2022-04-15-preview.


    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str resource_name: Appliances name.
    """
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['resourceName'] = resource_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:resourceconnector:listApplianceClusterCustomerUserCredential', __args__, opts=opts, typ=ListApplianceClusterCustomerUserCredentialResult).value

    return AwaitableListApplianceClusterCustomerUserCredentialResult(
        kubeconfigs=pulumi.get(__ret__, 'kubeconfigs'),
        ssh_keys=pulumi.get(__ret__, 'ssh_keys'))


@_utilities.lift_output_func(list_appliance_cluster_customer_user_credential)
def list_appliance_cluster_customer_user_credential_output(resource_group_name: Optional[pulumi.Input[str]] = None,
                                                           resource_name: Optional[pulumi.Input[str]] = None,
                                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ListApplianceClusterCustomerUserCredentialResult]:
    """
    Returns the cluster customer user credentials for the dedicated appliance.
    Azure REST API version: 2022-04-15-preview.


    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str resource_name: Appliances name.
    """
    ...
