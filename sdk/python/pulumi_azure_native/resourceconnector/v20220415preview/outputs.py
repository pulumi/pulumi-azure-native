# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'ApplianceCredentialKubeconfigResponse',
    'SSHKeyResponse',
]

@pulumi.output_type
class ApplianceCredentialKubeconfigResponse(dict):
    """
    Cluster User Credential appliance.
    """
    def __init__(__self__, *,
                 name: str,
                 value: str):
        """
        Cluster User Credential appliance.
        :param str name: Name which contains the role of the kubeconfig.
        :param str value: Contains the kubeconfig value.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name which contains the role of the kubeconfig.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        Contains the kubeconfig value.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class SSHKeyResponse(dict):
    """
    Appliance SSHKey definition.
    """
    def __init__(__self__, *,
                 private_key: Optional[str] = None,
                 public_key: Optional[str] = None):
        """
        Appliance SSHKey definition.
        :param str private_key: User Private Key.
        :param str public_key: User Public Key.
        """
        if private_key is not None:
            pulumi.set(__self__, "private_key", private_key)
        if public_key is not None:
            pulumi.set(__self__, "public_key", public_key)

    @property
    @pulumi.getter(name="privateKey")
    def private_key(self) -> Optional[str]:
        """
        User Private Key.
        """
        return pulumi.get(self, "private_key")

    @property
    @pulumi.getter(name="publicKey")
    def public_key(self) -> Optional[str]:
        """
        User Public Key.
        """
        return pulumi.get(self, "public_key")


