# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetImageDefinitionResult',
    'AwaitableGetImageDefinitionResult',
    'get_image_definition',
    'get_image_definition_output',
]

@pulumi.output_type
class GetImageDefinitionResult:
    """
    The test base image definition resource.
    """
    def __init__(__self__, architecture=None, id=None, name=None, os_state=None, provisioning_state=None, security_type=None, system_data=None, type=None):
        if architecture and not isinstance(architecture, str):
            raise TypeError("Expected argument 'architecture' to be a str")
        pulumi.set(__self__, "architecture", architecture)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if os_state and not isinstance(os_state, str):
            raise TypeError("Expected argument 'os_state' to be a str")
        pulumi.set(__self__, "os_state", os_state)
        if provisioning_state and not isinstance(provisioning_state, str):
            raise TypeError("Expected argument 'provisioning_state' to be a str")
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        if security_type and not isinstance(security_type, str):
            raise TypeError("Expected argument 'security_type' to be a str")
        pulumi.set(__self__, "security_type", security_type)
        if system_data and not isinstance(system_data, dict):
            raise TypeError("Expected argument 'system_data' to be a dict")
        pulumi.set(__self__, "system_data", system_data)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def architecture(self) -> str:
        """
        Custom image architecture.
        """
        return pulumi.get(self, "architecture")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="osState")
    def os_state(self) -> str:
        """
        Custom image OS state.
        """
        return pulumi.get(self, "os_state")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="securityType")
    def security_type(self) -> str:
        """
        Custom image security type.
        """
        return pulumi.get(self, "security_type")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> 'outputs.SystemDataResponse':
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")


class AwaitableGetImageDefinitionResult(GetImageDefinitionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetImageDefinitionResult(
            architecture=self.architecture,
            id=self.id,
            name=self.name,
            os_state=self.os_state,
            provisioning_state=self.provisioning_state,
            security_type=self.security_type,
            system_data=self.system_data,
            type=self.type)


def get_image_definition(image_definition_name: Optional[str] = None,
                         resource_group_name: Optional[str] = None,
                         test_base_account_name: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetImageDefinitionResult:
    """
    Get image properties under the image definition name created by test base custom image which derived from 'VHD' source.
    Azure REST API version: 2023-11-01-preview.


    :param str image_definition_name: The resource name of the test base image definition.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str test_base_account_name: The resource name of the Test Base Account.
    """
    __args__ = dict()
    __args__['imageDefinitionName'] = image_definition_name
    __args__['resourceGroupName'] = resource_group_name
    __args__['testBaseAccountName'] = test_base_account_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:testbase:getImageDefinition', __args__, opts=opts, typ=GetImageDefinitionResult).value

    return AwaitableGetImageDefinitionResult(
        architecture=pulumi.get(__ret__, 'architecture'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        os_state=pulumi.get(__ret__, 'os_state'),
        provisioning_state=pulumi.get(__ret__, 'provisioning_state'),
        security_type=pulumi.get(__ret__, 'security_type'),
        system_data=pulumi.get(__ret__, 'system_data'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_image_definition)
def get_image_definition_output(image_definition_name: Optional[pulumi.Input[str]] = None,
                                resource_group_name: Optional[pulumi.Input[str]] = None,
                                test_base_account_name: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetImageDefinitionResult]:
    """
    Get image properties under the image definition name created by test base custom image which derived from 'VHD' source.
    Azure REST API version: 2023-11-01-preview.


    :param str image_definition_name: The resource name of the test base image definition.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    :param str test_base_account_name: The resource name of the Test Base Account.
    """
    ...
