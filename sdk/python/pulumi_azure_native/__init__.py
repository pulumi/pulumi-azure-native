# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .provider import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_azure_native.aad as __aad
    aad = __aad
    import pulumi_azure_native.aadiam as __aadiam
    aadiam = __aadiam
    import pulumi_azure_native.addons as __addons
    addons = __addons
    import pulumi_azure_native.advisor as __advisor
    advisor = __advisor
    import pulumi_azure_native.agfoodplatform as __agfoodplatform
    agfoodplatform = __agfoodplatform
    import pulumi_azure_native.agricultureplatform as __agricultureplatform
    agricultureplatform = __agricultureplatform
    import pulumi_azure_native.alertsmanagement as __alertsmanagement
    alertsmanagement = __alertsmanagement
    import pulumi_azure_native.analysisservices as __analysisservices
    analysisservices = __analysisservices
    import pulumi_azure_native.apicenter as __apicenter
    apicenter = __apicenter
    import pulumi_azure_native.apimanagement as __apimanagement
    apimanagement = __apimanagement
    import pulumi_azure_native.app as __app
    app = __app
    import pulumi_azure_native.appcomplianceautomation as __appcomplianceautomation
    appcomplianceautomation = __appcomplianceautomation
    import pulumi_azure_native.appconfiguration as __appconfiguration
    appconfiguration = __appconfiguration
    import pulumi_azure_native.applicationinsights as __applicationinsights
    applicationinsights = __applicationinsights
    import pulumi_azure_native.appplatform as __appplatform
    appplatform = __appplatform
    import pulumi_azure_native.attestation as __attestation
    attestation = __attestation
    import pulumi_azure_native.authorization as __authorization
    authorization = __authorization
    import pulumi_azure_native.automanage as __automanage
    automanage = __automanage
    import pulumi_azure_native.automation as __automation
    automation = __automation
    import pulumi_azure_native.avs as __avs
    avs = __avs
    import pulumi_azure_native.awsconnector as __awsconnector
    awsconnector = __awsconnector
    import pulumi_azure_native.azureactivedirectory as __azureactivedirectory
    azureactivedirectory = __azureactivedirectory
    import pulumi_azure_native.azurearcdata as __azurearcdata
    azurearcdata = __azurearcdata
    import pulumi_azure_native.azuredata as __azuredata
    azuredata = __azuredata
    import pulumi_azure_native.azuredatatransfer as __azuredatatransfer
    azuredatatransfer = __azuredatatransfer
    import pulumi_azure_native.azurefleet as __azurefleet
    azurefleet = __azurefleet
    import pulumi_azure_native.azurelargeinstance as __azurelargeinstance
    azurelargeinstance = __azurelargeinstance
    import pulumi_azure_native.azureplaywrightservice as __azureplaywrightservice
    azureplaywrightservice = __azureplaywrightservice
    import pulumi_azure_native.azuresphere as __azuresphere
    azuresphere = __azuresphere
    import pulumi_azure_native.azurestack as __azurestack
    azurestack = __azurestack
    import pulumi_azure_native.azurestackhci as __azurestackhci
    azurestackhci = __azurestackhci
    import pulumi_azure_native.baremetalinfrastructure as __baremetalinfrastructure
    baremetalinfrastructure = __baremetalinfrastructure
    import pulumi_azure_native.batch as __batch
    batch = __batch
    import pulumi_azure_native.billing as __billing
    billing = __billing
    import pulumi_azure_native.billingbenefits as __billingbenefits
    billingbenefits = __billingbenefits
    import pulumi_azure_native.blueprint as __blueprint
    blueprint = __blueprint
    import pulumi_azure_native.botservice as __botservice
    botservice = __botservice
    import pulumi_azure_native.cdn as __cdn
    cdn = __cdn
    import pulumi_azure_native.certificateregistration as __certificateregistration
    certificateregistration = __certificateregistration
    import pulumi_azure_native.changeanalysis as __changeanalysis
    changeanalysis = __changeanalysis
    import pulumi_azure_native.chaos as __chaos
    chaos = __chaos
    import pulumi_azure_native.cloudngfw as __cloudngfw
    cloudngfw = __cloudngfw
    import pulumi_azure_native.codesigning as __codesigning
    codesigning = __codesigning
    import pulumi_azure_native.cognitiveservices as __cognitiveservices
    cognitiveservices = __cognitiveservices
    import pulumi_azure_native.communication as __communication
    communication = __communication
    import pulumi_azure_native.community as __community
    community = __community
    import pulumi_azure_native.compute as __compute
    compute = __compute
    import pulumi_azure_native.confidentialledger as __confidentialledger
    confidentialledger = __confidentialledger
    import pulumi_azure_native.config as __config
    config = __config
    import pulumi_azure_native.confluent as __confluent
    confluent = __confluent
    import pulumi_azure_native.connectedcache as __connectedcache
    connectedcache = __connectedcache
    import pulumi_azure_native.connectedvmwarevsphere as __connectedvmwarevsphere
    connectedvmwarevsphere = __connectedvmwarevsphere
    import pulumi_azure_native.consumption as __consumption
    consumption = __consumption
    import pulumi_azure_native.containerinstance as __containerinstance
    containerinstance = __containerinstance
    import pulumi_azure_native.containerregistry as __containerregistry
    containerregistry = __containerregistry
    import pulumi_azure_native.containerservice as __containerservice
    containerservice = __containerservice
    import pulumi_azure_native.containerstorage as __containerstorage
    containerstorage = __containerstorage
    import pulumi_azure_native.contoso as __contoso
    contoso = __contoso
    import pulumi_azure_native.cosmosdb as __cosmosdb
    cosmosdb = __cosmosdb
    import pulumi_azure_native.costmanagement as __costmanagement
    costmanagement = __costmanagement
    import pulumi_azure_native.customerinsights as __customerinsights
    customerinsights = __customerinsights
    import pulumi_azure_native.customproviders as __customproviders
    customproviders = __customproviders
    import pulumi_azure_native.dashboard as __dashboard
    dashboard = __dashboard
    import pulumi_azure_native.databasefleetmanager as __databasefleetmanager
    databasefleetmanager = __databasefleetmanager
    import pulumi_azure_native.databasewatcher as __databasewatcher
    databasewatcher = __databasewatcher
    import pulumi_azure_native.databox as __databox
    databox = __databox
    import pulumi_azure_native.databoxedge as __databoxedge
    databoxedge = __databoxedge
    import pulumi_azure_native.databricks as __databricks
    databricks = __databricks
    import pulumi_azure_native.datacatalog as __datacatalog
    datacatalog = __datacatalog
    import pulumi_azure_native.datadog as __datadog
    datadog = __datadog
    import pulumi_azure_native.datafactory as __datafactory
    datafactory = __datafactory
    import pulumi_azure_native.datalakeanalytics as __datalakeanalytics
    datalakeanalytics = __datalakeanalytics
    import pulumi_azure_native.datalakestore as __datalakestore
    datalakestore = __datalakestore
    import pulumi_azure_native.datamigration as __datamigration
    datamigration = __datamigration
    import pulumi_azure_native.dataprotection as __dataprotection
    dataprotection = __dataprotection
    import pulumi_azure_native.datareplication as __datareplication
    datareplication = __datareplication
    import pulumi_azure_native.datashare as __datashare
    datashare = __datashare
    import pulumi_azure_native.dbformariadb as __dbformariadb
    dbformariadb = __dbformariadb
    import pulumi_azure_native.dbformysql as __dbformysql
    dbformysql = __dbformysql
    import pulumi_azure_native.dbforpostgresql as __dbforpostgresql
    dbforpostgresql = __dbforpostgresql
    import pulumi_azure_native.delegatednetwork as __delegatednetwork
    delegatednetwork = __delegatednetwork
    import pulumi_azure_native.dependencymap as __dependencymap
    dependencymap = __dependencymap
    import pulumi_azure_native.desktopvirtualization as __desktopvirtualization
    desktopvirtualization = __desktopvirtualization
    import pulumi_azure_native.devcenter as __devcenter
    devcenter = __devcenter
    import pulumi_azure_native.devhub as __devhub
    devhub = __devhub
    import pulumi_azure_native.deviceprovisioningservices as __deviceprovisioningservices
    deviceprovisioningservices = __deviceprovisioningservices
    import pulumi_azure_native.deviceregistry as __deviceregistry
    deviceregistry = __deviceregistry
    import pulumi_azure_native.deviceupdate as __deviceupdate
    deviceupdate = __deviceupdate
    import pulumi_azure_native.devopsinfrastructure as __devopsinfrastructure
    devopsinfrastructure = __devopsinfrastructure
    import pulumi_azure_native.devspaces as __devspaces
    devspaces = __devspaces
    import pulumi_azure_native.devtestlab as __devtestlab
    devtestlab = __devtestlab
    import pulumi_azure_native.digitaltwins as __digitaltwins
    digitaltwins = __digitaltwins
    import pulumi_azure_native.dns as __dns
    dns = __dns
    import pulumi_azure_native.dnsresolver as __dnsresolver
    dnsresolver = __dnsresolver
    import pulumi_azure_native.domainregistration as __domainregistration
    domainregistration = __domainregistration
    import pulumi_azure_native.durabletask as __durabletask
    durabletask = __durabletask
    import pulumi_azure_native.dynamics365fraudprotection as __dynamics365fraudprotection
    dynamics365fraudprotection = __dynamics365fraudprotection
    import pulumi_azure_native.easm as __easm
    easm = __easm
    import pulumi_azure_native.edge as __edge
    edge = __edge
    import pulumi_azure_native.edgemarketplace as __edgemarketplace
    edgemarketplace = __edgemarketplace
    import pulumi_azure_native.edgeorder as __edgeorder
    edgeorder = __edgeorder
    import pulumi_azure_native.education as __education
    education = __education
    import pulumi_azure_native.elastic as __elastic
    elastic = __elastic
    import pulumi_azure_native.elasticsan as __elasticsan
    elasticsan = __elasticsan
    import pulumi_azure_native.engagementfabric as __engagementfabric
    engagementfabric = __engagementfabric
    import pulumi_azure_native.enterpriseknowledgegraph as __enterpriseknowledgegraph
    enterpriseknowledgegraph = __enterpriseknowledgegraph
    import pulumi_azure_native.eventgrid as __eventgrid
    eventgrid = __eventgrid
    import pulumi_azure_native.eventhub as __eventhub
    eventhub = __eventhub
    import pulumi_azure_native.extendedlocation as __extendedlocation
    extendedlocation = __extendedlocation
    import pulumi_azure_native.fabric as __fabric
    fabric = __fabric
    import pulumi_azure_native.features as __features
    features = __features
    import pulumi_azure_native.fluidrelay as __fluidrelay
    fluidrelay = __fluidrelay
    import pulumi_azure_native.frontdoor as __frontdoor
    frontdoor = __frontdoor
    import pulumi_azure_native.graphservices as __graphservices
    graphservices = __graphservices
    import pulumi_azure_native.guestconfiguration as __guestconfiguration
    guestconfiguration = __guestconfiguration
    import pulumi_azure_native.hardwaresecuritymodules as __hardwaresecuritymodules
    hardwaresecuritymodules = __hardwaresecuritymodules
    import pulumi_azure_native.hdinsight as __hdinsight
    hdinsight = __hdinsight
    import pulumi_azure_native.healthbot as __healthbot
    healthbot = __healthbot
    import pulumi_azure_native.healthcareapis as __healthcareapis
    healthcareapis = __healthcareapis
    import pulumi_azure_native.healthdataaiservices as __healthdataaiservices
    healthdataaiservices = __healthdataaiservices
    import pulumi_azure_native.hybridcloud as __hybridcloud
    hybridcloud = __hybridcloud
    import pulumi_azure_native.hybridcompute as __hybridcompute
    hybridcompute = __hybridcompute
    import pulumi_azure_native.hybridconnectivity as __hybridconnectivity
    hybridconnectivity = __hybridconnectivity
    import pulumi_azure_native.hybridcontainerservice as __hybridcontainerservice
    hybridcontainerservice = __hybridcontainerservice
    import pulumi_azure_native.hybriddata as __hybriddata
    hybriddata = __hybriddata
    import pulumi_azure_native.hybridnetwork as __hybridnetwork
    hybridnetwork = __hybridnetwork
    import pulumi_azure_native.impact as __impact
    impact = __impact
    import pulumi_azure_native.importexport as __importexport
    importexport = __importexport
    import pulumi_azure_native.integrationspaces as __integrationspaces
    integrationspaces = __integrationspaces
    import pulumi_azure_native.intune as __intune
    intune = __intune
    import pulumi_azure_native.iotcentral as __iotcentral
    iotcentral = __iotcentral
    import pulumi_azure_native.iotfirmwaredefense as __iotfirmwaredefense
    iotfirmwaredefense = __iotfirmwaredefense
    import pulumi_azure_native.iothub as __iothub
    iothub = __iothub
    import pulumi_azure_native.iotoperations as __iotoperations
    iotoperations = __iotoperations
    import pulumi_azure_native.iotoperationsdataprocessor as __iotoperationsdataprocessor
    iotoperationsdataprocessor = __iotoperationsdataprocessor
    import pulumi_azure_native.iotoperationsmq as __iotoperationsmq
    iotoperationsmq = __iotoperationsmq
    import pulumi_azure_native.iotoperationsorchestrator as __iotoperationsorchestrator
    iotoperationsorchestrator = __iotoperationsorchestrator
    import pulumi_azure_native.keyvault as __keyvault
    keyvault = __keyvault
    import pulumi_azure_native.kubernetes as __kubernetes
    kubernetes = __kubernetes
    import pulumi_azure_native.kubernetesconfiguration as __kubernetesconfiguration
    kubernetesconfiguration = __kubernetesconfiguration
    import pulumi_azure_native.kubernetesruntime as __kubernetesruntime
    kubernetesruntime = __kubernetesruntime
    import pulumi_azure_native.kusto as __kusto
    kusto = __kusto
    import pulumi_azure_native.labservices as __labservices
    labservices = __labservices
    import pulumi_azure_native.loadtestservice as __loadtestservice
    loadtestservice = __loadtestservice
    import pulumi_azure_native.logic as __logic
    logic = __logic
    import pulumi_azure_native.m365securityandcompliance as __m365securityandcompliance
    m365securityandcompliance = __m365securityandcompliance
    import pulumi_azure_native.machinelearning as __machinelearning
    machinelearning = __machinelearning
    import pulumi_azure_native.machinelearningservices as __machinelearningservices
    machinelearningservices = __machinelearningservices
    import pulumi_azure_native.maintenance as __maintenance
    maintenance = __maintenance
    import pulumi_azure_native.managedidentity as __managedidentity
    managedidentity = __managedidentity
    import pulumi_azure_native.managednetwork as __managednetwork
    managednetwork = __managednetwork
    import pulumi_azure_native.managednetworkfabric as __managednetworkfabric
    managednetworkfabric = __managednetworkfabric
    import pulumi_azure_native.managedservices as __managedservices
    managedservices = __managedservices
    import pulumi_azure_native.management as __management
    management = __management
    import pulumi_azure_native.managementpartner as __managementpartner
    managementpartner = __managementpartner
    import pulumi_azure_native.manufacturingplatform as __manufacturingplatform
    manufacturingplatform = __manufacturingplatform
    import pulumi_azure_native.maps as __maps
    maps = __maps
    import pulumi_azure_native.marketplace as __marketplace
    marketplace = __marketplace
    import pulumi_azure_native.media as __media
    media = __media
    import pulumi_azure_native.migrate as __migrate
    migrate = __migrate
    import pulumi_azure_native.mixedreality as __mixedreality
    mixedreality = __mixedreality
    import pulumi_azure_native.mobilenetwork as __mobilenetwork
    mobilenetwork = __mobilenetwork
    import pulumi_azure_native.mongocluster as __mongocluster
    mongocluster = __mongocluster
    import pulumi_azure_native.monitor as __monitor
    monitor = __monitor
    import pulumi_azure_native.mysqldiscovery as __mysqldiscovery
    mysqldiscovery = __mysqldiscovery
    import pulumi_azure_native.netapp as __netapp
    netapp = __netapp
    import pulumi_azure_native.network as __network
    network = __network
    import pulumi_azure_native.networkcloud as __networkcloud
    networkcloud = __networkcloud
    import pulumi_azure_native.networkfunction as __networkfunction
    networkfunction = __networkfunction
    import pulumi_azure_native.notificationhubs as __notificationhubs
    notificationhubs = __notificationhubs
    import pulumi_azure_native.offazure as __offazure
    offazure = __offazure
    import pulumi_azure_native.offazurespringboot as __offazurespringboot
    offazurespringboot = __offazurespringboot
    import pulumi_azure_native.openenergyplatform as __openenergyplatform
    openenergyplatform = __openenergyplatform
    import pulumi_azure_native.operationalinsights as __operationalinsights
    operationalinsights = __operationalinsights
    import pulumi_azure_native.operationsmanagement as __operationsmanagement
    operationsmanagement = __operationsmanagement
    import pulumi_azure_native.orbital as __orbital
    orbital = __orbital
    import pulumi_azure_native.peering as __peering
    peering = __peering
    import pulumi_azure_native.policyinsights as __policyinsights
    policyinsights = __policyinsights
    import pulumi_azure_native.portal as __portal
    portal = __portal
    import pulumi_azure_native.portalservices as __portalservices
    portalservices = __portalservices
    import pulumi_azure_native.powerbi as __powerbi
    powerbi = __powerbi
    import pulumi_azure_native.powerbidedicated as __powerbidedicated
    powerbidedicated = __powerbidedicated
    import pulumi_azure_native.powerplatform as __powerplatform
    powerplatform = __powerplatform
    import pulumi_azure_native.privatedns as __privatedns
    privatedns = __privatedns
    import pulumi_azure_native.professionalservice as __professionalservice
    professionalservice = __professionalservice
    import pulumi_azure_native.programmableconnectivity as __programmableconnectivity
    programmableconnectivity = __programmableconnectivity
    import pulumi_azure_native.providerhub as __providerhub
    providerhub = __providerhub
    import pulumi_azure_native.purview as __purview
    purview = __purview
    import pulumi_azure_native.quantum as __quantum
    quantum = __quantum
    import pulumi_azure_native.quota as __quota
    quota = __quota
    import pulumi_azure_native.recommendationsservice as __recommendationsservice
    recommendationsservice = __recommendationsservice
    import pulumi_azure_native.recoveryservices as __recoveryservices
    recoveryservices = __recoveryservices
    import pulumi_azure_native.redhatopenshift as __redhatopenshift
    redhatopenshift = __redhatopenshift
    import pulumi_azure_native.redis as __redis
    redis = __redis
    import pulumi_azure_native.redisenterprise as __redisenterprise
    redisenterprise = __redisenterprise
    import pulumi_azure_native.relay as __relay
    relay = __relay
    import pulumi_azure_native.resourceconnector as __resourceconnector
    resourceconnector = __resourceconnector
    import pulumi_azure_native.resourcegraph as __resourcegraph
    resourcegraph = __resourcegraph
    import pulumi_azure_native.resourcehealth as __resourcehealth
    resourcehealth = __resourcehealth
    import pulumi_azure_native.resources as __resources
    resources = __resources
    import pulumi_azure_native.saas as __saas
    saas = __saas
    import pulumi_azure_native.scheduler as __scheduler
    scheduler = __scheduler
    import pulumi_azure_native.scom as __scom
    scom = __scom
    import pulumi_azure_native.scvmm as __scvmm
    scvmm = __scvmm
    import pulumi_azure_native.search as __search
    search = __search
    import pulumi_azure_native.secretsynccontroller as __secretsynccontroller
    secretsynccontroller = __secretsynccontroller
    import pulumi_azure_native.security as __security
    security = __security
    import pulumi_azure_native.securityandcompliance as __securityandcompliance
    securityandcompliance = __securityandcompliance
    import pulumi_azure_native.securityinsights as __securityinsights
    securityinsights = __securityinsights
    import pulumi_azure_native.serialconsole as __serialconsole
    serialconsole = __serialconsole
    import pulumi_azure_native.servicebus as __servicebus
    servicebus = __servicebus
    import pulumi_azure_native.servicefabric as __servicefabric
    servicefabric = __servicefabric
    import pulumi_azure_native.servicefabricmesh as __servicefabricmesh
    servicefabricmesh = __servicefabricmesh
    import pulumi_azure_native.servicelinker as __servicelinker
    servicelinker = __servicelinker
    import pulumi_azure_native.servicenetworking as __servicenetworking
    servicenetworking = __servicenetworking
    import pulumi_azure_native.signalrservice as __signalrservice
    signalrservice = __signalrservice
    import pulumi_azure_native.softwareplan as __softwareplan
    softwareplan = __softwareplan
    import pulumi_azure_native.solutions as __solutions
    solutions = __solutions
    import pulumi_azure_native.sovereign as __sovereign
    sovereign = __sovereign
    import pulumi_azure_native.sql as __sql
    sql = __sql
    import pulumi_azure_native.sqlvirtualmachine as __sqlvirtualmachine
    sqlvirtualmachine = __sqlvirtualmachine
    import pulumi_azure_native.standbypool as __standbypool
    standbypool = __standbypool
    import pulumi_azure_native.storage as __storage
    storage = __storage
    import pulumi_azure_native.storageactions as __storageactions
    storageactions = __storageactions
    import pulumi_azure_native.storagecache as __storagecache
    storagecache = __storagecache
    import pulumi_azure_native.storagemover as __storagemover
    storagemover = __storagemover
    import pulumi_azure_native.storagepool as __storagepool
    storagepool = __storagepool
    import pulumi_azure_native.storagesync as __storagesync
    storagesync = __storagesync
    import pulumi_azure_native.storsimple as __storsimple
    storsimple = __storsimple
    import pulumi_azure_native.streamanalytics as __streamanalytics
    streamanalytics = __streamanalytics
    import pulumi_azure_native.subscription as __subscription
    subscription = __subscription
    import pulumi_azure_native.synapse as __synapse
    synapse = __synapse
    import pulumi_azure_native.syntex as __syntex
    syntex = __syntex
    import pulumi_azure_native.testbase as __testbase
    testbase = __testbase
    import pulumi_azure_native.timeseriesinsights as __timeseriesinsights
    timeseriesinsights = __timeseriesinsights
    import pulumi_azure_native.trafficmanager as __trafficmanager
    trafficmanager = __trafficmanager
    import pulumi_azure_native.verifiedid as __verifiedid
    verifiedid = __verifiedid
    import pulumi_azure_native.videoanalyzer as __videoanalyzer
    videoanalyzer = __videoanalyzer
    import pulumi_azure_native.videoindexer as __videoindexer
    videoindexer = __videoindexer
    import pulumi_azure_native.virtualmachineimages as __virtualmachineimages
    virtualmachineimages = __virtualmachineimages
    import pulumi_azure_native.vmwarecloudsimple as __vmwarecloudsimple
    vmwarecloudsimple = __vmwarecloudsimple
    import pulumi_azure_native.voiceservices as __voiceservices
    voiceservices = __voiceservices
    import pulumi_azure_native.web as __web
    web = __web
    import pulumi_azure_native.webpubsub as __webpubsub
    webpubsub = __webpubsub
    import pulumi_azure_native.weightsandbiases as __weightsandbiases
    weightsandbiases = __weightsandbiases
    import pulumi_azure_native.windowsesu as __windowsesu
    windowsesu = __windowsesu
    import pulumi_azure_native.windowsiot as __windowsiot
    windowsiot = __windowsiot
    import pulumi_azure_native.workloads as __workloads
    workloads = __workloads
else:
    aad = _utilities.lazy_import('pulumi_azure_native.aad')
    aadiam = _utilities.lazy_import('pulumi_azure_native.aadiam')
    addons = _utilities.lazy_import('pulumi_azure_native.addons')
    advisor = _utilities.lazy_import('pulumi_azure_native.advisor')
    agfoodplatform = _utilities.lazy_import('pulumi_azure_native.agfoodplatform')
    agricultureplatform = _utilities.lazy_import('pulumi_azure_native.agricultureplatform')
    alertsmanagement = _utilities.lazy_import('pulumi_azure_native.alertsmanagement')
    analysisservices = _utilities.lazy_import('pulumi_azure_native.analysisservices')
    apicenter = _utilities.lazy_import('pulumi_azure_native.apicenter')
    apimanagement = _utilities.lazy_import('pulumi_azure_native.apimanagement')
    app = _utilities.lazy_import('pulumi_azure_native.app')
    appcomplianceautomation = _utilities.lazy_import('pulumi_azure_native.appcomplianceautomation')
    appconfiguration = _utilities.lazy_import('pulumi_azure_native.appconfiguration')
    applicationinsights = _utilities.lazy_import('pulumi_azure_native.applicationinsights')
    appplatform = _utilities.lazy_import('pulumi_azure_native.appplatform')
    attestation = _utilities.lazy_import('pulumi_azure_native.attestation')
    authorization = _utilities.lazy_import('pulumi_azure_native.authorization')
    automanage = _utilities.lazy_import('pulumi_azure_native.automanage')
    automation = _utilities.lazy_import('pulumi_azure_native.automation')
    avs = _utilities.lazy_import('pulumi_azure_native.avs')
    awsconnector = _utilities.lazy_import('pulumi_azure_native.awsconnector')
    azureactivedirectory = _utilities.lazy_import('pulumi_azure_native.azureactivedirectory')
    azurearcdata = _utilities.lazy_import('pulumi_azure_native.azurearcdata')
    azuredata = _utilities.lazy_import('pulumi_azure_native.azuredata')
    azuredatatransfer = _utilities.lazy_import('pulumi_azure_native.azuredatatransfer')
    azurefleet = _utilities.lazy_import('pulumi_azure_native.azurefleet')
    azurelargeinstance = _utilities.lazy_import('pulumi_azure_native.azurelargeinstance')
    azureplaywrightservice = _utilities.lazy_import('pulumi_azure_native.azureplaywrightservice')
    azuresphere = _utilities.lazy_import('pulumi_azure_native.azuresphere')
    azurestack = _utilities.lazy_import('pulumi_azure_native.azurestack')
    azurestackhci = _utilities.lazy_import('pulumi_azure_native.azurestackhci')
    baremetalinfrastructure = _utilities.lazy_import('pulumi_azure_native.baremetalinfrastructure')
    batch = _utilities.lazy_import('pulumi_azure_native.batch')
    billing = _utilities.lazy_import('pulumi_azure_native.billing')
    billingbenefits = _utilities.lazy_import('pulumi_azure_native.billingbenefits')
    blueprint = _utilities.lazy_import('pulumi_azure_native.blueprint')
    botservice = _utilities.lazy_import('pulumi_azure_native.botservice')
    cdn = _utilities.lazy_import('pulumi_azure_native.cdn')
    certificateregistration = _utilities.lazy_import('pulumi_azure_native.certificateregistration')
    changeanalysis = _utilities.lazy_import('pulumi_azure_native.changeanalysis')
    chaos = _utilities.lazy_import('pulumi_azure_native.chaos')
    cloudngfw = _utilities.lazy_import('pulumi_azure_native.cloudngfw')
    codesigning = _utilities.lazy_import('pulumi_azure_native.codesigning')
    cognitiveservices = _utilities.lazy_import('pulumi_azure_native.cognitiveservices')
    communication = _utilities.lazy_import('pulumi_azure_native.communication')
    community = _utilities.lazy_import('pulumi_azure_native.community')
    compute = _utilities.lazy_import('pulumi_azure_native.compute')
    confidentialledger = _utilities.lazy_import('pulumi_azure_native.confidentialledger')
    config = _utilities.lazy_import('pulumi_azure_native.config')
    confluent = _utilities.lazy_import('pulumi_azure_native.confluent')
    connectedcache = _utilities.lazy_import('pulumi_azure_native.connectedcache')
    connectedvmwarevsphere = _utilities.lazy_import('pulumi_azure_native.connectedvmwarevsphere')
    consumption = _utilities.lazy_import('pulumi_azure_native.consumption')
    containerinstance = _utilities.lazy_import('pulumi_azure_native.containerinstance')
    containerregistry = _utilities.lazy_import('pulumi_azure_native.containerregistry')
    containerservice = _utilities.lazy_import('pulumi_azure_native.containerservice')
    containerstorage = _utilities.lazy_import('pulumi_azure_native.containerstorage')
    contoso = _utilities.lazy_import('pulumi_azure_native.contoso')
    cosmosdb = _utilities.lazy_import('pulumi_azure_native.cosmosdb')
    costmanagement = _utilities.lazy_import('pulumi_azure_native.costmanagement')
    customerinsights = _utilities.lazy_import('pulumi_azure_native.customerinsights')
    customproviders = _utilities.lazy_import('pulumi_azure_native.customproviders')
    dashboard = _utilities.lazy_import('pulumi_azure_native.dashboard')
    databasefleetmanager = _utilities.lazy_import('pulumi_azure_native.databasefleetmanager')
    databasewatcher = _utilities.lazy_import('pulumi_azure_native.databasewatcher')
    databox = _utilities.lazy_import('pulumi_azure_native.databox')
    databoxedge = _utilities.lazy_import('pulumi_azure_native.databoxedge')
    databricks = _utilities.lazy_import('pulumi_azure_native.databricks')
    datacatalog = _utilities.lazy_import('pulumi_azure_native.datacatalog')
    datadog = _utilities.lazy_import('pulumi_azure_native.datadog')
    datafactory = _utilities.lazy_import('pulumi_azure_native.datafactory')
    datalakeanalytics = _utilities.lazy_import('pulumi_azure_native.datalakeanalytics')
    datalakestore = _utilities.lazy_import('pulumi_azure_native.datalakestore')
    datamigration = _utilities.lazy_import('pulumi_azure_native.datamigration')
    dataprotection = _utilities.lazy_import('pulumi_azure_native.dataprotection')
    datareplication = _utilities.lazy_import('pulumi_azure_native.datareplication')
    datashare = _utilities.lazy_import('pulumi_azure_native.datashare')
    dbformariadb = _utilities.lazy_import('pulumi_azure_native.dbformariadb')
    dbformysql = _utilities.lazy_import('pulumi_azure_native.dbformysql')
    dbforpostgresql = _utilities.lazy_import('pulumi_azure_native.dbforpostgresql')
    delegatednetwork = _utilities.lazy_import('pulumi_azure_native.delegatednetwork')
    dependencymap = _utilities.lazy_import('pulumi_azure_native.dependencymap')
    desktopvirtualization = _utilities.lazy_import('pulumi_azure_native.desktopvirtualization')
    devcenter = _utilities.lazy_import('pulumi_azure_native.devcenter')
    devhub = _utilities.lazy_import('pulumi_azure_native.devhub')
    deviceprovisioningservices = _utilities.lazy_import('pulumi_azure_native.deviceprovisioningservices')
    deviceregistry = _utilities.lazy_import('pulumi_azure_native.deviceregistry')
    deviceupdate = _utilities.lazy_import('pulumi_azure_native.deviceupdate')
    devopsinfrastructure = _utilities.lazy_import('pulumi_azure_native.devopsinfrastructure')
    devspaces = _utilities.lazy_import('pulumi_azure_native.devspaces')
    devtestlab = _utilities.lazy_import('pulumi_azure_native.devtestlab')
    digitaltwins = _utilities.lazy_import('pulumi_azure_native.digitaltwins')
    dns = _utilities.lazy_import('pulumi_azure_native.dns')
    dnsresolver = _utilities.lazy_import('pulumi_azure_native.dnsresolver')
    domainregistration = _utilities.lazy_import('pulumi_azure_native.domainregistration')
    durabletask = _utilities.lazy_import('pulumi_azure_native.durabletask')
    dynamics365fraudprotection = _utilities.lazy_import('pulumi_azure_native.dynamics365fraudprotection')
    easm = _utilities.lazy_import('pulumi_azure_native.easm')
    edge = _utilities.lazy_import('pulumi_azure_native.edge')
    edgemarketplace = _utilities.lazy_import('pulumi_azure_native.edgemarketplace')
    edgeorder = _utilities.lazy_import('pulumi_azure_native.edgeorder')
    education = _utilities.lazy_import('pulumi_azure_native.education')
    elastic = _utilities.lazy_import('pulumi_azure_native.elastic')
    elasticsan = _utilities.lazy_import('pulumi_azure_native.elasticsan')
    engagementfabric = _utilities.lazy_import('pulumi_azure_native.engagementfabric')
    enterpriseknowledgegraph = _utilities.lazy_import('pulumi_azure_native.enterpriseknowledgegraph')
    eventgrid = _utilities.lazy_import('pulumi_azure_native.eventgrid')
    eventhub = _utilities.lazy_import('pulumi_azure_native.eventhub')
    extendedlocation = _utilities.lazy_import('pulumi_azure_native.extendedlocation')
    fabric = _utilities.lazy_import('pulumi_azure_native.fabric')
    features = _utilities.lazy_import('pulumi_azure_native.features')
    fluidrelay = _utilities.lazy_import('pulumi_azure_native.fluidrelay')
    frontdoor = _utilities.lazy_import('pulumi_azure_native.frontdoor')
    graphservices = _utilities.lazy_import('pulumi_azure_native.graphservices')
    guestconfiguration = _utilities.lazy_import('pulumi_azure_native.guestconfiguration')
    hardwaresecuritymodules = _utilities.lazy_import('pulumi_azure_native.hardwaresecuritymodules')
    hdinsight = _utilities.lazy_import('pulumi_azure_native.hdinsight')
    healthbot = _utilities.lazy_import('pulumi_azure_native.healthbot')
    healthcareapis = _utilities.lazy_import('pulumi_azure_native.healthcareapis')
    healthdataaiservices = _utilities.lazy_import('pulumi_azure_native.healthdataaiservices')
    hybridcloud = _utilities.lazy_import('pulumi_azure_native.hybridcloud')
    hybridcompute = _utilities.lazy_import('pulumi_azure_native.hybridcompute')
    hybridconnectivity = _utilities.lazy_import('pulumi_azure_native.hybridconnectivity')
    hybridcontainerservice = _utilities.lazy_import('pulumi_azure_native.hybridcontainerservice')
    hybriddata = _utilities.lazy_import('pulumi_azure_native.hybriddata')
    hybridnetwork = _utilities.lazy_import('pulumi_azure_native.hybridnetwork')
    impact = _utilities.lazy_import('pulumi_azure_native.impact')
    importexport = _utilities.lazy_import('pulumi_azure_native.importexport')
    integrationspaces = _utilities.lazy_import('pulumi_azure_native.integrationspaces')
    intune = _utilities.lazy_import('pulumi_azure_native.intune')
    iotcentral = _utilities.lazy_import('pulumi_azure_native.iotcentral')
    iotfirmwaredefense = _utilities.lazy_import('pulumi_azure_native.iotfirmwaredefense')
    iothub = _utilities.lazy_import('pulumi_azure_native.iothub')
    iotoperations = _utilities.lazy_import('pulumi_azure_native.iotoperations')
    iotoperationsdataprocessor = _utilities.lazy_import('pulumi_azure_native.iotoperationsdataprocessor')
    iotoperationsmq = _utilities.lazy_import('pulumi_azure_native.iotoperationsmq')
    iotoperationsorchestrator = _utilities.lazy_import('pulumi_azure_native.iotoperationsorchestrator')
    keyvault = _utilities.lazy_import('pulumi_azure_native.keyvault')
    kubernetes = _utilities.lazy_import('pulumi_azure_native.kubernetes')
    kubernetesconfiguration = _utilities.lazy_import('pulumi_azure_native.kubernetesconfiguration')
    kubernetesruntime = _utilities.lazy_import('pulumi_azure_native.kubernetesruntime')
    kusto = _utilities.lazy_import('pulumi_azure_native.kusto')
    labservices = _utilities.lazy_import('pulumi_azure_native.labservices')
    loadtestservice = _utilities.lazy_import('pulumi_azure_native.loadtestservice')
    logic = _utilities.lazy_import('pulumi_azure_native.logic')
    m365securityandcompliance = _utilities.lazy_import('pulumi_azure_native.m365securityandcompliance')
    machinelearning = _utilities.lazy_import('pulumi_azure_native.machinelearning')
    machinelearningservices = _utilities.lazy_import('pulumi_azure_native.machinelearningservices')
    maintenance = _utilities.lazy_import('pulumi_azure_native.maintenance')
    managedidentity = _utilities.lazy_import('pulumi_azure_native.managedidentity')
    managednetwork = _utilities.lazy_import('pulumi_azure_native.managednetwork')
    managednetworkfabric = _utilities.lazy_import('pulumi_azure_native.managednetworkfabric')
    managedservices = _utilities.lazy_import('pulumi_azure_native.managedservices')
    management = _utilities.lazy_import('pulumi_azure_native.management')
    managementpartner = _utilities.lazy_import('pulumi_azure_native.managementpartner')
    manufacturingplatform = _utilities.lazy_import('pulumi_azure_native.manufacturingplatform')
    maps = _utilities.lazy_import('pulumi_azure_native.maps')
    marketplace = _utilities.lazy_import('pulumi_azure_native.marketplace')
    media = _utilities.lazy_import('pulumi_azure_native.media')
    migrate = _utilities.lazy_import('pulumi_azure_native.migrate')
    mixedreality = _utilities.lazy_import('pulumi_azure_native.mixedreality')
    mobilenetwork = _utilities.lazy_import('pulumi_azure_native.mobilenetwork')
    mongocluster = _utilities.lazy_import('pulumi_azure_native.mongocluster')
    monitor = _utilities.lazy_import('pulumi_azure_native.monitor')
    mysqldiscovery = _utilities.lazy_import('pulumi_azure_native.mysqldiscovery')
    netapp = _utilities.lazy_import('pulumi_azure_native.netapp')
    network = _utilities.lazy_import('pulumi_azure_native.network')
    networkcloud = _utilities.lazy_import('pulumi_azure_native.networkcloud')
    networkfunction = _utilities.lazy_import('pulumi_azure_native.networkfunction')
    notificationhubs = _utilities.lazy_import('pulumi_azure_native.notificationhubs')
    offazure = _utilities.lazy_import('pulumi_azure_native.offazure')
    offazurespringboot = _utilities.lazy_import('pulumi_azure_native.offazurespringboot')
    openenergyplatform = _utilities.lazy_import('pulumi_azure_native.openenergyplatform')
    operationalinsights = _utilities.lazy_import('pulumi_azure_native.operationalinsights')
    operationsmanagement = _utilities.lazy_import('pulumi_azure_native.operationsmanagement')
    orbital = _utilities.lazy_import('pulumi_azure_native.orbital')
    peering = _utilities.lazy_import('pulumi_azure_native.peering')
    policyinsights = _utilities.lazy_import('pulumi_azure_native.policyinsights')
    portal = _utilities.lazy_import('pulumi_azure_native.portal')
    portalservices = _utilities.lazy_import('pulumi_azure_native.portalservices')
    powerbi = _utilities.lazy_import('pulumi_azure_native.powerbi')
    powerbidedicated = _utilities.lazy_import('pulumi_azure_native.powerbidedicated')
    powerplatform = _utilities.lazy_import('pulumi_azure_native.powerplatform')
    privatedns = _utilities.lazy_import('pulumi_azure_native.privatedns')
    professionalservice = _utilities.lazy_import('pulumi_azure_native.professionalservice')
    programmableconnectivity = _utilities.lazy_import('pulumi_azure_native.programmableconnectivity')
    providerhub = _utilities.lazy_import('pulumi_azure_native.providerhub')
    purview = _utilities.lazy_import('pulumi_azure_native.purview')
    quantum = _utilities.lazy_import('pulumi_azure_native.quantum')
    quota = _utilities.lazy_import('pulumi_azure_native.quota')
    recommendationsservice = _utilities.lazy_import('pulumi_azure_native.recommendationsservice')
    recoveryservices = _utilities.lazy_import('pulumi_azure_native.recoveryservices')
    redhatopenshift = _utilities.lazy_import('pulumi_azure_native.redhatopenshift')
    redis = _utilities.lazy_import('pulumi_azure_native.redis')
    redisenterprise = _utilities.lazy_import('pulumi_azure_native.redisenterprise')
    relay = _utilities.lazy_import('pulumi_azure_native.relay')
    resourceconnector = _utilities.lazy_import('pulumi_azure_native.resourceconnector')
    resourcegraph = _utilities.lazy_import('pulumi_azure_native.resourcegraph')
    resourcehealth = _utilities.lazy_import('pulumi_azure_native.resourcehealth')
    resources = _utilities.lazy_import('pulumi_azure_native.resources')
    saas = _utilities.lazy_import('pulumi_azure_native.saas')
    scheduler = _utilities.lazy_import('pulumi_azure_native.scheduler')
    scom = _utilities.lazy_import('pulumi_azure_native.scom')
    scvmm = _utilities.lazy_import('pulumi_azure_native.scvmm')
    search = _utilities.lazy_import('pulumi_azure_native.search')
    secretsynccontroller = _utilities.lazy_import('pulumi_azure_native.secretsynccontroller')
    security = _utilities.lazy_import('pulumi_azure_native.security')
    securityandcompliance = _utilities.lazy_import('pulumi_azure_native.securityandcompliance')
    securityinsights = _utilities.lazy_import('pulumi_azure_native.securityinsights')
    serialconsole = _utilities.lazy_import('pulumi_azure_native.serialconsole')
    servicebus = _utilities.lazy_import('pulumi_azure_native.servicebus')
    servicefabric = _utilities.lazy_import('pulumi_azure_native.servicefabric')
    servicefabricmesh = _utilities.lazy_import('pulumi_azure_native.servicefabricmesh')
    servicelinker = _utilities.lazy_import('pulumi_azure_native.servicelinker')
    servicenetworking = _utilities.lazy_import('pulumi_azure_native.servicenetworking')
    signalrservice = _utilities.lazy_import('pulumi_azure_native.signalrservice')
    softwareplan = _utilities.lazy_import('pulumi_azure_native.softwareplan')
    solutions = _utilities.lazy_import('pulumi_azure_native.solutions')
    sovereign = _utilities.lazy_import('pulumi_azure_native.sovereign')
    sql = _utilities.lazy_import('pulumi_azure_native.sql')
    sqlvirtualmachine = _utilities.lazy_import('pulumi_azure_native.sqlvirtualmachine')
    standbypool = _utilities.lazy_import('pulumi_azure_native.standbypool')
    storage = _utilities.lazy_import('pulumi_azure_native.storage')
    storageactions = _utilities.lazy_import('pulumi_azure_native.storageactions')
    storagecache = _utilities.lazy_import('pulumi_azure_native.storagecache')
    storagemover = _utilities.lazy_import('pulumi_azure_native.storagemover')
    storagepool = _utilities.lazy_import('pulumi_azure_native.storagepool')
    storagesync = _utilities.lazy_import('pulumi_azure_native.storagesync')
    storsimple = _utilities.lazy_import('pulumi_azure_native.storsimple')
    streamanalytics = _utilities.lazy_import('pulumi_azure_native.streamanalytics')
    subscription = _utilities.lazy_import('pulumi_azure_native.subscription')
    synapse = _utilities.lazy_import('pulumi_azure_native.synapse')
    syntex = _utilities.lazy_import('pulumi_azure_native.syntex')
    testbase = _utilities.lazy_import('pulumi_azure_native.testbase')
    timeseriesinsights = _utilities.lazy_import('pulumi_azure_native.timeseriesinsights')
    trafficmanager = _utilities.lazy_import('pulumi_azure_native.trafficmanager')
    verifiedid = _utilities.lazy_import('pulumi_azure_native.verifiedid')
    videoanalyzer = _utilities.lazy_import('pulumi_azure_native.videoanalyzer')
    videoindexer = _utilities.lazy_import('pulumi_azure_native.videoindexer')
    virtualmachineimages = _utilities.lazy_import('pulumi_azure_native.virtualmachineimages')
    vmwarecloudsimple = _utilities.lazy_import('pulumi_azure_native.vmwarecloudsimple')
    voiceservices = _utilities.lazy_import('pulumi_azure_native.voiceservices')
    web = _utilities.lazy_import('pulumi_azure_native.web')
    webpubsub = _utilities.lazy_import('pulumi_azure_native.webpubsub')
    weightsandbiases = _utilities.lazy_import('pulumi_azure_native.weightsandbiases')
    windowsesu = _utilities.lazy_import('pulumi_azure_native.windowsesu')
    windowsiot = _utilities.lazy_import('pulumi_azure_native.windowsiot')
    workloads = _utilities.lazy_import('pulumi_azure_native.workloads')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "azure-native",
  "mod": "aad",
  "fqn": "pulumi_azure_native.aad",
  "classes": {
   "azure-native:aad:DomainService": "DomainService",
   "azure-native:aad:OuContainer": "OuContainer"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "aadiam",
  "fqn": "pulumi_azure_native.aadiam",
  "classes": {
   "azure-native:aadiam:DiagnosticSetting": "DiagnosticSetting"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "addons",
  "fqn": "pulumi_azure_native.addons",
  "classes": {
   "azure-native:addons:SupportPlanType": "SupportPlanType"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "advisor",
  "fqn": "pulumi_azure_native.advisor",
  "classes": {
   "azure-native:advisor:Assessment": "Assessment",
   "azure-native:advisor:Suppression": "Suppression"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "agfoodplatform",
  "fqn": "pulumi_azure_native.agfoodplatform",
  "classes": {
   "azure-native:agfoodplatform:DataConnector": "DataConnector",
   "azure-native:agfoodplatform:DataManagerForAgricultureResource": "DataManagerForAgricultureResource",
   "azure-native:agfoodplatform:Extension": "Extension",
   "azure-native:agfoodplatform:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:agfoodplatform:Solution": "Solution"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "agricultureplatform",
  "fqn": "pulumi_azure_native.agricultureplatform",
  "classes": {
   "azure-native:agricultureplatform:AgriService": "AgriService"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "alertsmanagement",
  "fqn": "pulumi_azure_native.alertsmanagement",
  "classes": {
   "azure-native:alertsmanagement:ActionRuleByName": "ActionRuleByName",
   "azure-native:alertsmanagement:AlertProcessingRuleByName": "AlertProcessingRuleByName",
   "azure-native:alertsmanagement:PrometheusRuleGroup": "PrometheusRuleGroup",
   "azure-native:alertsmanagement:SmartDetectorAlertRule": "SmartDetectorAlertRule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "analysisservices",
  "fqn": "pulumi_azure_native.analysisservices",
  "classes": {
   "azure-native:analysisservices:ServerDetails": "ServerDetails"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "apicenter",
  "fqn": "pulumi_azure_native.apicenter",
  "classes": {
   "azure-native:apicenter:Api": "Api",
   "azure-native:apicenter:ApiDefinition": "ApiDefinition",
   "azure-native:apicenter:ApiSource": "ApiSource",
   "azure-native:apicenter:ApiVersion": "ApiVersion",
   "azure-native:apicenter:Deployment": "Deployment",
   "azure-native:apicenter:Environment": "Environment",
   "azure-native:apicenter:MetadataSchema": "MetadataSchema",
   "azure-native:apicenter:Service": "Service",
   "azure-native:apicenter:Workspace": "Workspace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "apimanagement",
  "fqn": "pulumi_azure_native.apimanagement",
  "classes": {
   "azure-native:apimanagement:Api": "Api",
   "azure-native:apimanagement:ApiDiagnostic": "ApiDiagnostic",
   "azure-native:apimanagement:ApiGateway": "ApiGateway",
   "azure-native:apimanagement:ApiGatewayConfigConnection": "ApiGatewayConfigConnection",
   "azure-native:apimanagement:ApiIssue": "ApiIssue",
   "azure-native:apimanagement:ApiIssueAttachment": "ApiIssueAttachment",
   "azure-native:apimanagement:ApiIssueComment": "ApiIssueComment",
   "azure-native:apimanagement:ApiManagementService": "ApiManagementService",
   "azure-native:apimanagement:ApiOperation": "ApiOperation",
   "azure-native:apimanagement:ApiOperationPolicy": "ApiOperationPolicy",
   "azure-native:apimanagement:ApiPolicy": "ApiPolicy",
   "azure-native:apimanagement:ApiRelease": "ApiRelease",
   "azure-native:apimanagement:ApiSchema": "ApiSchema",
   "azure-native:apimanagement:ApiTagDescription": "ApiTagDescription",
   "azure-native:apimanagement:ApiVersionSet": "ApiVersionSet",
   "azure-native:apimanagement:ApiWiki": "ApiWiki",
   "azure-native:apimanagement:Authorization": "Authorization",
   "azure-native:apimanagement:AuthorizationAccessPolicy": "AuthorizationAccessPolicy",
   "azure-native:apimanagement:AuthorizationProvider": "AuthorizationProvider",
   "azure-native:apimanagement:AuthorizationServer": "AuthorizationServer",
   "azure-native:apimanagement:Backend": "Backend",
   "azure-native:apimanagement:Cache": "Cache",
   "azure-native:apimanagement:Certificate": "Certificate",
   "azure-native:apimanagement:ContentItem": "ContentItem",
   "azure-native:apimanagement:ContentType": "ContentType",
   "azure-native:apimanagement:Diagnostic": "Diagnostic",
   "azure-native:apimanagement:Documentation": "Documentation",
   "azure-native:apimanagement:EmailTemplate": "EmailTemplate",
   "azure-native:apimanagement:Gateway": "Gateway",
   "azure-native:apimanagement:GatewayApiEntityTag": "GatewayApiEntityTag",
   "azure-native:apimanagement:GatewayCertificateAuthority": "GatewayCertificateAuthority",
   "azure-native:apimanagement:GatewayHostnameConfiguration": "GatewayHostnameConfiguration",
   "azure-native:apimanagement:GlobalSchema": "GlobalSchema",
   "azure-native:apimanagement:GraphQLApiResolver": "GraphQLApiResolver",
   "azure-native:apimanagement:GraphQLApiResolverPolicy": "GraphQLApiResolverPolicy",
   "azure-native:apimanagement:Group": "Group",
   "azure-native:apimanagement:GroupUser": "GroupUser",
   "azure-native:apimanagement:IdentityProvider": "IdentityProvider",
   "azure-native:apimanagement:Logger": "Logger",
   "azure-native:apimanagement:NamedValue": "NamedValue",
   "azure-native:apimanagement:NotificationRecipientEmail": "NotificationRecipientEmail",
   "azure-native:apimanagement:NotificationRecipientUser": "NotificationRecipientUser",
   "azure-native:apimanagement:OpenIdConnectProvider": "OpenIdConnectProvider",
   "azure-native:apimanagement:Policy": "Policy",
   "azure-native:apimanagement:PolicyFragment": "PolicyFragment",
   "azure-native:apimanagement:PolicyRestriction": "PolicyRestriction",
   "azure-native:apimanagement:PrivateEndpointConnectionByName": "PrivateEndpointConnectionByName",
   "azure-native:apimanagement:Product": "Product",
   "azure-native:apimanagement:ProductApi": "ProductApi",
   "azure-native:apimanagement:ProductApiLink": "ProductApiLink",
   "azure-native:apimanagement:ProductGroup": "ProductGroup",
   "azure-native:apimanagement:ProductGroupLink": "ProductGroupLink",
   "azure-native:apimanagement:ProductPolicy": "ProductPolicy",
   "azure-native:apimanagement:ProductWiki": "ProductWiki",
   "azure-native:apimanagement:Schema": "Schema",
   "azure-native:apimanagement:Subscription": "Subscription",
   "azure-native:apimanagement:Tag": "Tag",
   "azure-native:apimanagement:TagApiLink": "TagApiLink",
   "azure-native:apimanagement:TagByApi": "TagByApi",
   "azure-native:apimanagement:TagByOperation": "TagByOperation",
   "azure-native:apimanagement:TagByProduct": "TagByProduct",
   "azure-native:apimanagement:TagOperationLink": "TagOperationLink",
   "azure-native:apimanagement:TagProductLink": "TagProductLink",
   "azure-native:apimanagement:User": "User",
   "azure-native:apimanagement:Workspace": "Workspace",
   "azure-native:apimanagement:WorkspaceApi": "WorkspaceApi",
   "azure-native:apimanagement:WorkspaceApiDiagnostic": "WorkspaceApiDiagnostic",
   "azure-native:apimanagement:WorkspaceApiOperation": "WorkspaceApiOperation",
   "azure-native:apimanagement:WorkspaceApiOperationPolicy": "WorkspaceApiOperationPolicy",
   "azure-native:apimanagement:WorkspaceApiPolicy": "WorkspaceApiPolicy",
   "azure-native:apimanagement:WorkspaceApiRelease": "WorkspaceApiRelease",
   "azure-native:apimanagement:WorkspaceApiSchema": "WorkspaceApiSchema",
   "azure-native:apimanagement:WorkspaceApiVersionSet": "WorkspaceApiVersionSet",
   "azure-native:apimanagement:WorkspaceBackend": "WorkspaceBackend",
   "azure-native:apimanagement:WorkspaceCertificate": "WorkspaceCertificate",
   "azure-native:apimanagement:WorkspaceDiagnostic": "WorkspaceDiagnostic",
   "azure-native:apimanagement:WorkspaceGlobalSchema": "WorkspaceGlobalSchema",
   "azure-native:apimanagement:WorkspaceGroup": "WorkspaceGroup",
   "azure-native:apimanagement:WorkspaceGroupUser": "WorkspaceGroupUser",
   "azure-native:apimanagement:WorkspaceLogger": "WorkspaceLogger",
   "azure-native:apimanagement:WorkspaceNamedValue": "WorkspaceNamedValue",
   "azure-native:apimanagement:WorkspaceNotificationRecipientEmail": "WorkspaceNotificationRecipientEmail",
   "azure-native:apimanagement:WorkspaceNotificationRecipientUser": "WorkspaceNotificationRecipientUser",
   "azure-native:apimanagement:WorkspacePolicy": "WorkspacePolicy",
   "azure-native:apimanagement:WorkspacePolicyFragment": "WorkspacePolicyFragment",
   "azure-native:apimanagement:WorkspaceProduct": "WorkspaceProduct",
   "azure-native:apimanagement:WorkspaceProductApiLink": "WorkspaceProductApiLink",
   "azure-native:apimanagement:WorkspaceProductGroupLink": "WorkspaceProductGroupLink",
   "azure-native:apimanagement:WorkspaceProductPolicy": "WorkspaceProductPolicy",
   "azure-native:apimanagement:WorkspaceSubscription": "WorkspaceSubscription",
   "azure-native:apimanagement:WorkspaceTag": "WorkspaceTag",
   "azure-native:apimanagement:WorkspaceTagApiLink": "WorkspaceTagApiLink",
   "azure-native:apimanagement:WorkspaceTagOperationLink": "WorkspaceTagOperationLink",
   "azure-native:apimanagement:WorkspaceTagProductLink": "WorkspaceTagProductLink"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "app",
  "fqn": "pulumi_azure_native.app",
  "classes": {
   "azure-native:app:AppResiliency": "AppResiliency",
   "azure-native:app:Build": "Build",
   "azure-native:app:Builder": "Builder",
   "azure-native:app:Certificate": "Certificate",
   "azure-native:app:ConnectedEnvironment": "ConnectedEnvironment",
   "azure-native:app:ConnectedEnvironmentsCertificate": "ConnectedEnvironmentsCertificate",
   "azure-native:app:ConnectedEnvironmentsDaprComponent": "ConnectedEnvironmentsDaprComponent",
   "azure-native:app:ConnectedEnvironmentsStorage": "ConnectedEnvironmentsStorage",
   "azure-native:app:ContainerApp": "ContainerApp",
   "azure-native:app:ContainerAppsAuthConfig": "ContainerAppsAuthConfig",
   "azure-native:app:ContainerAppsSessionPool": "ContainerAppsSessionPool",
   "azure-native:app:ContainerAppsSourceControl": "ContainerAppsSourceControl",
   "azure-native:app:DaprComponent": "DaprComponent",
   "azure-native:app:DaprComponentResiliencyPolicy": "DaprComponentResiliencyPolicy",
   "azure-native:app:DaprSubscription": "DaprSubscription",
   "azure-native:app:DotNetComponent": "DotNetComponent",
   "azure-native:app:HttpRouteConfig": "HttpRouteConfig",
   "azure-native:app:JavaComponent": "JavaComponent",
   "azure-native:app:Job": "Job",
   "azure-native:app:LogicApp": "LogicApp",
   "azure-native:app:MaintenanceConfiguration": "MaintenanceConfiguration",
   "azure-native:app:ManagedCertificate": "ManagedCertificate",
   "azure-native:app:ManagedEnvironment": "ManagedEnvironment",
   "azure-native:app:ManagedEnvironmentPrivateEndpointConnection": "ManagedEnvironmentPrivateEndpointConnection",
   "azure-native:app:ManagedEnvironmentsStorage": "ManagedEnvironmentsStorage"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "appcomplianceautomation",
  "fqn": "pulumi_azure_native.appcomplianceautomation",
  "classes": {
   "azure-native:appcomplianceautomation:Evidence": "Evidence",
   "azure-native:appcomplianceautomation:Report": "Report",
   "azure-native:appcomplianceautomation:ScopingConfiguration": "ScopingConfiguration",
   "azure-native:appcomplianceautomation:Webhook": "Webhook"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "appconfiguration",
  "fqn": "pulumi_azure_native.appconfiguration",
  "classes": {
   "azure-native:appconfiguration:ConfigurationStore": "ConfigurationStore",
   "azure-native:appconfiguration:KeyValue": "KeyValue",
   "azure-native:appconfiguration:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:appconfiguration:Replica": "Replica"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "applicationinsights",
  "fqn": "pulumi_azure_native.applicationinsights",
  "classes": {
   "azure-native:applicationinsights:AnalyticsItem": "AnalyticsItem",
   "azure-native:applicationinsights:Component": "Component",
   "azure-native:applicationinsights:ComponentCurrentBillingFeature": "ComponentCurrentBillingFeature",
   "azure-native:applicationinsights:ComponentLinkedStorageAccount": "ComponentLinkedStorageAccount",
   "azure-native:applicationinsights:ExportConfiguration": "ExportConfiguration",
   "azure-native:applicationinsights:Favorite": "Favorite",
   "azure-native:applicationinsights:MyWorkbook": "MyWorkbook",
   "azure-native:applicationinsights:ProactiveDetectionConfiguration": "ProactiveDetectionConfiguration",
   "azure-native:applicationinsights:WebTest": "WebTest",
   "azure-native:applicationinsights:Workbook": "Workbook",
   "azure-native:applicationinsights:WorkbookTemplate": "WorkbookTemplate"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "appplatform",
  "fqn": "pulumi_azure_native.appplatform",
  "classes": {
   "azure-native:appplatform:ApiPortal": "ApiPortal",
   "azure-native:appplatform:ApiPortalCustomDomain": "ApiPortalCustomDomain",
   "azure-native:appplatform:Apm": "Apm",
   "azure-native:appplatform:App": "App",
   "azure-native:appplatform:ApplicationAccelerator": "ApplicationAccelerator",
   "azure-native:appplatform:ApplicationLiveView": "ApplicationLiveView",
   "azure-native:appplatform:Binding": "Binding",
   "azure-native:appplatform:BuildServiceAgentPool": "BuildServiceAgentPool",
   "azure-native:appplatform:BuildServiceBuild": "BuildServiceBuild",
   "azure-native:appplatform:BuildServiceBuilder": "BuildServiceBuilder",
   "azure-native:appplatform:BuildpackBinding": "BuildpackBinding",
   "azure-native:appplatform:Certificate": "Certificate",
   "azure-native:appplatform:ConfigServer": "ConfigServer",
   "azure-native:appplatform:ConfigurationService": "ConfigurationService",
   "azure-native:appplatform:ContainerRegistry": "ContainerRegistry",
   "azure-native:appplatform:CustomDomain": "CustomDomain",
   "azure-native:appplatform:CustomizedAccelerator": "CustomizedAccelerator",
   "azure-native:appplatform:Deployment": "Deployment",
   "azure-native:appplatform:DevToolPortal": "DevToolPortal",
   "azure-native:appplatform:Gateway": "Gateway",
   "azure-native:appplatform:GatewayCustomDomain": "GatewayCustomDomain",
   "azure-native:appplatform:GatewayRouteConfig": "GatewayRouteConfig",
   "azure-native:appplatform:Job": "Job",
   "azure-native:appplatform:MonitoringSetting": "MonitoringSetting",
   "azure-native:appplatform:Service": "Service",
   "azure-native:appplatform:ServiceRegistry": "ServiceRegistry",
   "azure-native:appplatform:Storage": "Storage"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "attestation",
  "fqn": "pulumi_azure_native.attestation",
  "classes": {
   "azure-native:attestation:AttestationProvider": "AttestationProvider",
   "azure-native:attestation:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "authorization",
  "fqn": "pulumi_azure_native.authorization",
  "classes": {
   "azure-native:authorization:AccessReviewHistoryDefinitionById": "AccessReviewHistoryDefinitionById",
   "azure-native:authorization:AccessReviewScheduleDefinitionById": "AccessReviewScheduleDefinitionById",
   "azure-native:authorization:ManagementLockAtResourceGroupLevel": "ManagementLockAtResourceGroupLevel",
   "azure-native:authorization:ManagementLockAtResourceLevel": "ManagementLockAtResourceLevel",
   "azure-native:authorization:ManagementLockAtSubscriptionLevel": "ManagementLockAtSubscriptionLevel",
   "azure-native:authorization:ManagementLockByScope": "ManagementLockByScope",
   "azure-native:authorization:PimRoleEligibilitySchedule": "PimRoleEligibilitySchedule",
   "azure-native:authorization:PolicyAssignment": "PolicyAssignment",
   "azure-native:authorization:PolicyDefinition": "PolicyDefinition",
   "azure-native:authorization:PolicyDefinitionAtManagementGroup": "PolicyDefinitionAtManagementGroup",
   "azure-native:authorization:PolicyDefinitionVersion": "PolicyDefinitionVersion",
   "azure-native:authorization:PolicyDefinitionVersionAtManagementGroup": "PolicyDefinitionVersionAtManagementGroup",
   "azure-native:authorization:PolicyExemption": "PolicyExemption",
   "azure-native:authorization:PolicySetDefinition": "PolicySetDefinition",
   "azure-native:authorization:PolicySetDefinitionAtManagementGroup": "PolicySetDefinitionAtManagementGroup",
   "azure-native:authorization:PolicySetDefinitionVersion": "PolicySetDefinitionVersion",
   "azure-native:authorization:PolicySetDefinitionVersionAtManagementGroup": "PolicySetDefinitionVersionAtManagementGroup",
   "azure-native:authorization:PrivateLinkAssociation": "PrivateLinkAssociation",
   "azure-native:authorization:ResourceManagementPrivateLink": "ResourceManagementPrivateLink",
   "azure-native:authorization:RoleAssignment": "RoleAssignment",
   "azure-native:authorization:RoleDefinition": "RoleDefinition",
   "azure-native:authorization:RoleManagementPolicy": "RoleManagementPolicy",
   "azure-native:authorization:RoleManagementPolicyAssignment": "RoleManagementPolicyAssignment",
   "azure-native:authorization:ScopeAccessReviewHistoryDefinitionById": "ScopeAccessReviewHistoryDefinitionById",
   "azure-native:authorization:ScopeAccessReviewScheduleDefinitionById": "ScopeAccessReviewScheduleDefinitionById",
   "azure-native:authorization:Variable": "Variable",
   "azure-native:authorization:VariableAtManagementGroup": "VariableAtManagementGroup",
   "azure-native:authorization:VariableValue": "VariableValue",
   "azure-native:authorization:VariableValueAtManagementGroup": "VariableValueAtManagementGroup"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "automanage",
  "fqn": "pulumi_azure_native.automanage",
  "classes": {
   "azure-native:automanage:ConfigurationProfile": "ConfigurationProfile",
   "azure-native:automanage:ConfigurationProfileAssignment": "ConfigurationProfileAssignment",
   "azure-native:automanage:ConfigurationProfileHCIAssignment": "ConfigurationProfileHCIAssignment",
   "azure-native:automanage:ConfigurationProfileHCRPAssignment": "ConfigurationProfileHCRPAssignment",
   "azure-native:automanage:ConfigurationProfilesVersion": "ConfigurationProfilesVersion"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "automation",
  "fqn": "pulumi_azure_native.automation",
  "classes": {
   "azure-native:automation:AutomationAccount": "AutomationAccount",
   "azure-native:automation:Certificate": "Certificate",
   "azure-native:automation:Connection": "Connection",
   "azure-native:automation:ConnectionType": "ConnectionType",
   "azure-native:automation:Credential": "Credential",
   "azure-native:automation:DscConfiguration": "DscConfiguration",
   "azure-native:automation:DscNodeConfiguration": "DscNodeConfiguration",
   "azure-native:automation:HybridRunbookWorker": "HybridRunbookWorker",
   "azure-native:automation:HybridRunbookWorkerGroup": "HybridRunbookWorkerGroup",
   "azure-native:automation:JobSchedule": "JobSchedule",
   "azure-native:automation:Module": "Module",
   "azure-native:automation:Package": "Package",
   "azure-native:automation:PowerShell72Module": "PowerShell72Module",
   "azure-native:automation:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:automation:Python2Package": "Python2Package",
   "azure-native:automation:Python3Package": "Python3Package",
   "azure-native:automation:Runbook": "Runbook",
   "azure-native:automation:RuntimeEnvironment": "RuntimeEnvironment",
   "azure-native:automation:Schedule": "Schedule",
   "azure-native:automation:SoftwareUpdateConfigurationByName": "SoftwareUpdateConfigurationByName",
   "azure-native:automation:SourceControl": "SourceControl",
   "azure-native:automation:Variable": "Variable",
   "azure-native:automation:Watcher": "Watcher",
   "azure-native:automation:Webhook": "Webhook"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "avs",
  "fqn": "pulumi_azure_native.avs",
  "classes": {
   "azure-native:avs:Addon": "Addon",
   "azure-native:avs:Authorization": "Authorization",
   "azure-native:avs:CloudLink": "CloudLink",
   "azure-native:avs:Cluster": "Cluster",
   "azure-native:avs:Datastore": "Datastore",
   "azure-native:avs:GlobalReachConnection": "GlobalReachConnection",
   "azure-native:avs:HcxEnterpriseSite": "HcxEnterpriseSite",
   "azure-native:avs:IscsiPath": "IscsiPath",
   "azure-native:avs:PlacementPolicy": "PlacementPolicy",
   "azure-native:avs:PrivateCloud": "PrivateCloud",
   "azure-native:avs:ScriptExecution": "ScriptExecution",
   "azure-native:avs:WorkloadNetworkDhcp": "WorkloadNetworkDhcp",
   "azure-native:avs:WorkloadNetworkDnsService": "WorkloadNetworkDnsService",
   "azure-native:avs:WorkloadNetworkDnsZone": "WorkloadNetworkDnsZone",
   "azure-native:avs:WorkloadNetworkPortMirroring": "WorkloadNetworkPortMirroring",
   "azure-native:avs:WorkloadNetworkPublicIP": "WorkloadNetworkPublicIP",
   "azure-native:avs:WorkloadNetworkSegment": "WorkloadNetworkSegment",
   "azure-native:avs:WorkloadNetworkVMGroup": "WorkloadNetworkVMGroup"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "awsconnector",
  "fqn": "pulumi_azure_native.awsconnector",
  "classes": {
   "azure-native:awsconnector:AccessAnalyzerAnalyzer": "AccessAnalyzerAnalyzer",
   "azure-native:awsconnector:AcmCertificateSummary": "AcmCertificateSummary",
   "azure-native:awsconnector:ApiGatewayRestApi": "ApiGatewayRestApi",
   "azure-native:awsconnector:ApiGatewayStage": "ApiGatewayStage",
   "azure-native:awsconnector:AppSyncGraphqlApi": "AppSyncGraphqlApi",
   "azure-native:awsconnector:AutoScalingAutoScalingGroup": "AutoScalingAutoScalingGroup",
   "azure-native:awsconnector:CloudFormationStack": "CloudFormationStack",
   "azure-native:awsconnector:CloudFormationStackSet": "CloudFormationStackSet",
   "azure-native:awsconnector:CloudFrontDistribution": "CloudFrontDistribution",
   "azure-native:awsconnector:CloudTrailTrail": "CloudTrailTrail",
   "azure-native:awsconnector:CloudWatchAlarm": "CloudWatchAlarm",
   "azure-native:awsconnector:CodeBuildProject": "CodeBuildProject",
   "azure-native:awsconnector:CodeBuildSourceCredentialsInfo": "CodeBuildSourceCredentialsInfo",
   "azure-native:awsconnector:ConfigServiceConfigurationRecorder": "ConfigServiceConfigurationRecorder",
   "azure-native:awsconnector:ConfigServiceConfigurationRecorderStatus": "ConfigServiceConfigurationRecorderStatus",
   "azure-native:awsconnector:ConfigServiceDeliveryChannel": "ConfigServiceDeliveryChannel",
   "azure-native:awsconnector:DatabaseMigrationServiceReplicationInstance": "DatabaseMigrationServiceReplicationInstance",
   "azure-native:awsconnector:DaxCluster": "DaxCluster",
   "azure-native:awsconnector:DynamoDbContinuousBackupsDescription": "DynamoDbContinuousBackupsDescription",
   "azure-native:awsconnector:DynamoDbTable": "DynamoDbTable",
   "azure-native:awsconnector:Ec2AccountAttribute": "Ec2AccountAttribute",
   "azure-native:awsconnector:Ec2Address": "Ec2Address",
   "azure-native:awsconnector:Ec2FlowLog": "Ec2FlowLog",
   "azure-native:awsconnector:Ec2Image": "Ec2Image",
   "azure-native:awsconnector:Ec2Instance": "Ec2Instance",
   "azure-native:awsconnector:Ec2InstanceStatus": "Ec2InstanceStatus",
   "azure-native:awsconnector:Ec2Ipam": "Ec2Ipam",
   "azure-native:awsconnector:Ec2KeyPair": "Ec2KeyPair",
   "azure-native:awsconnector:Ec2NetworkAcl": "Ec2NetworkAcl",
   "azure-native:awsconnector:Ec2NetworkInterface": "Ec2NetworkInterface",
   "azure-native:awsconnector:Ec2RouteTable": "Ec2RouteTable",
   "azure-native:awsconnector:Ec2SecurityGroup": "Ec2SecurityGroup",
   "azure-native:awsconnector:Ec2Snapshot": "Ec2Snapshot",
   "azure-native:awsconnector:Ec2Subnet": "Ec2Subnet",
   "azure-native:awsconnector:Ec2Volume": "Ec2Volume",
   "azure-native:awsconnector:Ec2Vpc": "Ec2Vpc",
   "azure-native:awsconnector:Ec2VpcEndpoint": "Ec2VpcEndpoint",
   "azure-native:awsconnector:Ec2VpcPeeringConnection": "Ec2VpcPeeringConnection",
   "azure-native:awsconnector:EcrImageDetail": "EcrImageDetail",
   "azure-native:awsconnector:EcrRepository": "EcrRepository",
   "azure-native:awsconnector:EcsCluster": "EcsCluster",
   "azure-native:awsconnector:EcsService": "EcsService",
   "azure-native:awsconnector:EcsTaskDefinition": "EcsTaskDefinition",
   "azure-native:awsconnector:EfsFileSystem": "EfsFileSystem",
   "azure-native:awsconnector:EfsMountTarget": "EfsMountTarget",
   "azure-native:awsconnector:EksCluster": "EksCluster",
   "azure-native:awsconnector:EksNodegroup": "EksNodegroup",
   "azure-native:awsconnector:ElasticBeanstalkApplication": "ElasticBeanstalkApplication",
   "azure-native:awsconnector:ElasticBeanstalkConfigurationTemplate": "ElasticBeanstalkConfigurationTemplate",
   "azure-native:awsconnector:ElasticBeanstalkEnvironment": "ElasticBeanstalkEnvironment",
   "azure-native:awsconnector:ElasticLoadBalancingV2Listener": "ElasticLoadBalancingV2Listener",
   "azure-native:awsconnector:ElasticLoadBalancingV2LoadBalancer": "ElasticLoadBalancingV2LoadBalancer",
   "azure-native:awsconnector:ElasticLoadBalancingV2TargetGroup": "ElasticLoadBalancingV2TargetGroup",
   "azure-native:awsconnector:ElasticLoadBalancingv2TargetHealthDescription": "ElasticLoadBalancingv2TargetHealthDescription",
   "azure-native:awsconnector:EmrCluster": "EmrCluster",
   "azure-native:awsconnector:GuardDutyDetector": "GuardDutyDetector",
   "azure-native:awsconnector:IamAccessKeyLastUsed": "IamAccessKeyLastUsed",
   "azure-native:awsconnector:IamAccessKeyMetadataInfo": "IamAccessKeyMetadataInfo",
   "azure-native:awsconnector:IamGroup": "IamGroup",
   "azure-native:awsconnector:IamInstanceProfile": "IamInstanceProfile",
   "azure-native:awsconnector:IamMfaDevice": "IamMfaDevice",
   "azure-native:awsconnector:IamPasswordPolicy": "IamPasswordPolicy",
   "azure-native:awsconnector:IamPolicyVersion": "IamPolicyVersion",
   "azure-native:awsconnector:IamRole": "IamRole",
   "azure-native:awsconnector:IamServerCertificate": "IamServerCertificate",
   "azure-native:awsconnector:IamVirtualMfaDevice": "IamVirtualMfaDevice",
   "azure-native:awsconnector:KmsAlias": "KmsAlias",
   "azure-native:awsconnector:KmsKey": "KmsKey",
   "azure-native:awsconnector:LambdaFunction": "LambdaFunction",
   "azure-native:awsconnector:LambdaFunctionCodeLocation": "LambdaFunctionCodeLocation",
   "azure-native:awsconnector:LightsailBucket": "LightsailBucket",
   "azure-native:awsconnector:LightsailInstance": "LightsailInstance",
   "azure-native:awsconnector:LogsLogGroup": "LogsLogGroup",
   "azure-native:awsconnector:LogsLogStream": "LogsLogStream",
   "azure-native:awsconnector:LogsMetricFilter": "LogsMetricFilter",
   "azure-native:awsconnector:LogsSubscriptionFilter": "LogsSubscriptionFilter",
   "azure-native:awsconnector:Macie2JobSummary": "Macie2JobSummary",
   "azure-native:awsconnector:MacieAllowList": "MacieAllowList",
   "azure-native:awsconnector:NetworkFirewallFirewall": "NetworkFirewallFirewall",
   "azure-native:awsconnector:NetworkFirewallFirewallPolicy": "NetworkFirewallFirewallPolicy",
   "azure-native:awsconnector:NetworkFirewallRuleGroup": "NetworkFirewallRuleGroup",
   "azure-native:awsconnector:OpenSearchDomainStatus": "OpenSearchDomainStatus",
   "azure-native:awsconnector:OrganizationsAccount": "OrganizationsAccount",
   "azure-native:awsconnector:OrganizationsOrganization": "OrganizationsOrganization",
   "azure-native:awsconnector:RdsDbCluster": "RdsDbCluster",
   "azure-native:awsconnector:RdsDbInstance": "RdsDbInstance",
   "azure-native:awsconnector:RdsDbSnapshot": "RdsDbSnapshot",
   "azure-native:awsconnector:RdsDbSnapshotAttributesResult": "RdsDbSnapshotAttributesResult",
   "azure-native:awsconnector:RdsEventSubscription": "RdsEventSubscription",
   "azure-native:awsconnector:RdsExportTask": "RdsExportTask",
   "azure-native:awsconnector:RedshiftCluster": "RedshiftCluster",
   "azure-native:awsconnector:RedshiftClusterParameterGroup": "RedshiftClusterParameterGroup",
   "azure-native:awsconnector:Route53DomainsDomainSummary": "Route53DomainsDomainSummary",
   "azure-native:awsconnector:Route53HostedZone": "Route53HostedZone",
   "azure-native:awsconnector:Route53ResourceRecordSet": "Route53ResourceRecordSet",
   "azure-native:awsconnector:S3AccessControlPolicy": "S3AccessControlPolicy",
   "azure-native:awsconnector:S3AccessPoint": "S3AccessPoint",
   "azure-native:awsconnector:S3Bucket": "S3Bucket",
   "azure-native:awsconnector:S3BucketPolicy": "S3BucketPolicy",
   "azure-native:awsconnector:S3ControlMultiRegionAccessPointPolicyDocument": "S3ControlMultiRegionAccessPointPolicyDocument",
   "azure-native:awsconnector:SageMakerApp": "SageMakerApp",
   "azure-native:awsconnector:SageMakerNotebookInstanceSummary": "SageMakerNotebookInstanceSummary",
   "azure-native:awsconnector:SecretsManagerResourcePolicy": "SecretsManagerResourcePolicy",
   "azure-native:awsconnector:SecretsManagerSecret": "SecretsManagerSecret",
   "azure-native:awsconnector:SnsSubscription": "SnsSubscription",
   "azure-native:awsconnector:SnsTopic": "SnsTopic",
   "azure-native:awsconnector:SqsQueue": "SqsQueue",
   "azure-native:awsconnector:SsmInstanceInformation": "SsmInstanceInformation",
   "azure-native:awsconnector:SsmParameter": "SsmParameter",
   "azure-native:awsconnector:SsmResourceComplianceSummaryItem": "SsmResourceComplianceSummaryItem",
   "azure-native:awsconnector:WafWebAclSummary": "WafWebAclSummary",
   "azure-native:awsconnector:Wafv2LoggingConfiguration": "Wafv2LoggingConfiguration"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azureactivedirectory",
  "fqn": "pulumi_azure_native.azureactivedirectory",
  "classes": {
   "azure-native:azureactivedirectory:B2CTenant": "B2CTenant",
   "azure-native:azureactivedirectory:CIAMTenant": "CIAMTenant",
   "azure-native:azureactivedirectory:GuestUsage": "GuestUsage"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azurearcdata",
  "fqn": "pulumi_azure_native.azurearcdata",
  "classes": {
   "azure-native:azurearcdata:ActiveDirectoryConnector": "ActiveDirectoryConnector",
   "azure-native:azurearcdata:DataController": "DataController",
   "azure-native:azurearcdata:FailoverGroup": "FailoverGroup",
   "azure-native:azurearcdata:PostgresInstance": "PostgresInstance",
   "azure-native:azurearcdata:SqlManagedInstance": "SqlManagedInstance",
   "azure-native:azurearcdata:SqlServerAvailabilityGroup": "SqlServerAvailabilityGroup",
   "azure-native:azurearcdata:SqlServerDatabase": "SqlServerDatabase",
   "azure-native:azurearcdata:SqlServerEsuLicense": "SqlServerEsuLicense",
   "azure-native:azurearcdata:SqlServerInstance": "SqlServerInstance",
   "azure-native:azurearcdata:SqlServerLicense": "SqlServerLicense"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azuredata",
  "fqn": "pulumi_azure_native.azuredata",
  "classes": {
   "azure-native:azuredata:SqlServer": "SqlServer",
   "azure-native:azuredata:SqlServerRegistration": "SqlServerRegistration"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azuredatatransfer",
  "fqn": "pulumi_azure_native.azuredatatransfer",
  "classes": {
   "azure-native:azuredatatransfer:Connection": "Connection",
   "azure-native:azuredatatransfer:Flow": "Flow",
   "azure-native:azuredatatransfer:Pipeline": "Pipeline"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azurefleet",
  "fqn": "pulumi_azure_native.azurefleet",
  "classes": {
   "azure-native:azurefleet:Fleet": "Fleet"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azurelargeinstance",
  "fqn": "pulumi_azure_native.azurelargeinstance",
  "classes": {
   "azure-native:azurelargeinstance:AzureLargeInstance": "AzureLargeInstance",
   "azure-native:azurelargeinstance:AzureLargeStorageInstance": "AzureLargeStorageInstance"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azureplaywrightservice",
  "fqn": "pulumi_azure_native.azureplaywrightservice",
  "classes": {
   "azure-native:azureplaywrightservice:Account": "Account"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azuresphere",
  "fqn": "pulumi_azure_native.azuresphere",
  "classes": {
   "azure-native:azuresphere:Catalog": "Catalog",
   "azure-native:azuresphere:Deployment": "Deployment",
   "azure-native:azuresphere:Device": "Device",
   "azure-native:azuresphere:DeviceGroup": "DeviceGroup",
   "azure-native:azuresphere:Image": "Image",
   "azure-native:azuresphere:Product": "Product"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azurestack",
  "fqn": "pulumi_azure_native.azurestack",
  "classes": {
   "azure-native:azurestack:CustomerSubscription": "CustomerSubscription",
   "azure-native:azurestack:LinkedSubscription": "LinkedSubscription",
   "azure-native:azurestack:Registration": "Registration"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "azurestackhci",
  "fqn": "pulumi_azure_native.azurestackhci",
  "classes": {
   "azure-native:azurestackhci:ArcSetting": "ArcSetting",
   "azure-native:azurestackhci:Cluster": "Cluster",
   "azure-native:azurestackhci:DeploymentSetting": "DeploymentSetting",
   "azure-native:azurestackhci:Extension": "Extension",
   "azure-native:azurestackhci:GalleryImage": "GalleryImage",
   "azure-native:azurestackhci:GuestAgent": "GuestAgent",
   "azure-native:azurestackhci:HciEdgeDevice": "HciEdgeDevice",
   "azure-native:azurestackhci:HciEdgeDeviceJob": "HciEdgeDeviceJob",
   "azure-native:azurestackhci:HybridIdentityMetadatum": "HybridIdentityMetadatum",
   "azure-native:azurestackhci:LogicalNetwork": "LogicalNetwork",
   "azure-native:azurestackhci:MachineExtension": "MachineExtension",
   "azure-native:azurestackhci:MarketplaceGalleryImage": "MarketplaceGalleryImage",
   "azure-native:azurestackhci:NetworkInterface": "NetworkInterface",
   "azure-native:azurestackhci:NetworkSecurityGroup": "NetworkSecurityGroup",
   "azure-native:azurestackhci:SecurityRule": "SecurityRule",
   "azure-native:azurestackhci:SecuritySetting": "SecuritySetting",
   "azure-native:azurestackhci:StorageContainer": "StorageContainer",
   "azure-native:azurestackhci:Update": "Update",
   "azure-native:azurestackhci:UpdateRun": "UpdateRun",
   "azure-native:azurestackhci:UpdateSummary": "UpdateSummary",
   "azure-native:azurestackhci:VirtualHardDisk": "VirtualHardDisk",
   "azure-native:azurestackhci:VirtualMachine": "VirtualMachine",
   "azure-native:azurestackhci:VirtualMachineInstance": "VirtualMachineInstance",
   "azure-native:azurestackhci:VirtualNetwork": "VirtualNetwork"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "baremetalinfrastructure",
  "fqn": "pulumi_azure_native.baremetalinfrastructure",
  "classes": {
   "azure-native:baremetalinfrastructure:AzureBareMetalInstance": "AzureBareMetalInstance",
   "azure-native:baremetalinfrastructure:AzureBareMetalStorageInstance": "AzureBareMetalStorageInstance"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "batch",
  "fqn": "pulumi_azure_native.batch",
  "classes": {
   "azure-native:batch:Application": "Application",
   "azure-native:batch:ApplicationPackage": "ApplicationPackage",
   "azure-native:batch:BatchAccount": "BatchAccount",
   "azure-native:batch:Pool": "Pool"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "billing",
  "fqn": "pulumi_azure_native.billing",
  "classes": {
   "azure-native:billing:AssociatedTenant": "AssociatedTenant",
   "azure-native:billing:BillingProfile": "BillingProfile",
   "azure-native:billing:BillingRoleAssignmentByBillingAccount": "BillingRoleAssignmentByBillingAccount",
   "azure-native:billing:BillingRoleAssignmentByDepartment": "BillingRoleAssignmentByDepartment",
   "azure-native:billing:BillingRoleAssignmentByEnrollmentAccount": "BillingRoleAssignmentByEnrollmentAccount",
   "azure-native:billing:InvoiceSection": "InvoiceSection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "billingbenefits",
  "fqn": "pulumi_azure_native.billingbenefits",
  "classes": {
   "azure-native:billingbenefits:Discount": "Discount"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "blueprint",
  "fqn": "pulumi_azure_native.blueprint",
  "classes": {
   "azure-native:blueprint:Assignment": "Assignment",
   "azure-native:blueprint:Blueprint": "Blueprint",
   "azure-native:blueprint:PolicyAssignmentArtifact": "PolicyAssignmentArtifact",
   "azure-native:blueprint:PublishedBlueprint": "PublishedBlueprint",
   "azure-native:blueprint:RoleAssignmentArtifact": "RoleAssignmentArtifact",
   "azure-native:blueprint:TemplateArtifact": "TemplateArtifact"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "botservice",
  "fqn": "pulumi_azure_native.botservice",
  "classes": {
   "azure-native:botservice:Bot": "Bot",
   "azure-native:botservice:BotConnection": "BotConnection",
   "azure-native:botservice:Channel": "Channel",
   "azure-native:botservice:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "cdn",
  "fqn": "pulumi_azure_native.cdn",
  "classes": {
   "azure-native:cdn:AFDCustomDomain": "AFDCustomDomain",
   "azure-native:cdn:AFDEndpoint": "AFDEndpoint",
   "azure-native:cdn:AFDOrigin": "AFDOrigin",
   "azure-native:cdn:AFDOriginGroup": "AFDOriginGroup",
   "azure-native:cdn:AFDTargetGroup": "AFDTargetGroup",
   "azure-native:cdn:CustomDomain": "CustomDomain",
   "azure-native:cdn:Endpoint": "Endpoint",
   "azure-native:cdn:KeyGroup": "KeyGroup",
   "azure-native:cdn:Origin": "Origin",
   "azure-native:cdn:OriginGroup": "OriginGroup",
   "azure-native:cdn:Policy": "Policy",
   "azure-native:cdn:Profile": "Profile",
   "azure-native:cdn:Route": "Route",
   "azure-native:cdn:Rule": "Rule",
   "azure-native:cdn:RuleSet": "RuleSet",
   "azure-native:cdn:Secret": "Secret",
   "azure-native:cdn:SecurityPolicy": "SecurityPolicy",
   "azure-native:cdn:TunnelPolicy": "TunnelPolicy"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "certificateregistration",
  "fqn": "pulumi_azure_native.certificateregistration",
  "classes": {
   "azure-native:certificateregistration:AppServiceCertificateOrder": "AppServiceCertificateOrder",
   "azure-native:certificateregistration:AppServiceCertificateOrderCertificate": "AppServiceCertificateOrderCertificate"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "changeanalysis",
  "fqn": "pulumi_azure_native.changeanalysis",
  "classes": {
   "azure-native:changeanalysis:ConfigurationProfile": "ConfigurationProfile"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "chaos",
  "fqn": "pulumi_azure_native.chaos",
  "classes": {
   "azure-native:chaos:Capability": "Capability",
   "azure-native:chaos:Experiment": "Experiment",
   "azure-native:chaos:PrivateAccess": "PrivateAccess",
   "azure-native:chaos:Target": "Target"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "cloudngfw",
  "fqn": "pulumi_azure_native.cloudngfw",
  "classes": {
   "azure-native:cloudngfw:CertificateObjectGlobalRulestack": "CertificateObjectGlobalRulestack",
   "azure-native:cloudngfw:CertificateObjectLocalRulestack": "CertificateObjectLocalRulestack",
   "azure-native:cloudngfw:Firewall": "Firewall",
   "azure-native:cloudngfw:FqdnListGlobalRulestack": "FqdnListGlobalRulestack",
   "azure-native:cloudngfw:FqdnListLocalRulestack": "FqdnListLocalRulestack",
   "azure-native:cloudngfw:GlobalRulestack": "GlobalRulestack",
   "azure-native:cloudngfw:LocalRule": "LocalRule",
   "azure-native:cloudngfw:LocalRulestack": "LocalRulestack",
   "azure-native:cloudngfw:PostRule": "PostRule",
   "azure-native:cloudngfw:PreRule": "PreRule",
   "azure-native:cloudngfw:PrefixListGlobalRulestack": "PrefixListGlobalRulestack",
   "azure-native:cloudngfw:PrefixListLocalRulestack": "PrefixListLocalRulestack"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "codesigning",
  "fqn": "pulumi_azure_native.codesigning",
  "classes": {
   "azure-native:codesigning:CertificateProfile": "CertificateProfile",
   "azure-native:codesigning:CodeSigningAccount": "CodeSigningAccount"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "cognitiveservices",
  "fqn": "pulumi_azure_native.cognitiveservices",
  "classes": {
   "azure-native:cognitiveservices:Account": "Account",
   "azure-native:cognitiveservices:CommitmentPlan": "CommitmentPlan",
   "azure-native:cognitiveservices:CommitmentPlanAssociation": "CommitmentPlanAssociation",
   "azure-native:cognitiveservices:Deployment": "Deployment",
   "azure-native:cognitiveservices:EncryptionScope": "EncryptionScope",
   "azure-native:cognitiveservices:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:cognitiveservices:RaiBlocklist": "RaiBlocklist",
   "azure-native:cognitiveservices:RaiBlocklistItem": "RaiBlocklistItem",
   "azure-native:cognitiveservices:RaiPolicy": "RaiPolicy",
   "azure-native:cognitiveservices:SharedCommitmentPlan": "SharedCommitmentPlan"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "communication",
  "fqn": "pulumi_azure_native.communication",
  "classes": {
   "azure-native:communication:CommunicationService": "CommunicationService",
   "azure-native:communication:Domain": "Domain",
   "azure-native:communication:EmailService": "EmailService",
   "azure-native:communication:SenderUsername": "SenderUsername",
   "azure-native:communication:SuppressionList": "SuppressionList",
   "azure-native:communication:SuppressionListAddress": "SuppressionListAddress"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "community",
  "fqn": "pulumi_azure_native.community",
  "classes": {
   "azure-native:community:CommunityTraining": "CommunityTraining"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "compute",
  "fqn": "pulumi_azure_native.compute",
  "classes": {
   "azure-native:compute:AvailabilitySet": "AvailabilitySet",
   "azure-native:compute:CapacityReservation": "CapacityReservation",
   "azure-native:compute:CapacityReservationGroup": "CapacityReservationGroup",
   "azure-native:compute:CloudService": "CloudService",
   "azure-native:compute:DedicatedHost": "DedicatedHost",
   "azure-native:compute:DedicatedHostGroup": "DedicatedHostGroup",
   "azure-native:compute:Disk": "Disk",
   "azure-native:compute:DiskAccess": "DiskAccess",
   "azure-native:compute:DiskAccessAPrivateEndpointConnection": "DiskAccessAPrivateEndpointConnection",
   "azure-native:compute:DiskEncryptionSet": "DiskEncryptionSet",
   "azure-native:compute:Gallery": "Gallery",
   "azure-native:compute:GalleryApplication": "GalleryApplication",
   "azure-native:compute:GalleryApplicationVersion": "GalleryApplicationVersion",
   "azure-native:compute:GalleryImage": "GalleryImage",
   "azure-native:compute:GalleryImageVersion": "GalleryImageVersion",
   "azure-native:compute:GalleryInVMAccessControlProfile": "GalleryInVMAccessControlProfile",
   "azure-native:compute:GalleryInVMAccessControlProfileVersion": "GalleryInVMAccessControlProfileVersion",
   "azure-native:compute:Image": "Image",
   "azure-native:compute:ProximityPlacementGroup": "ProximityPlacementGroup",
   "azure-native:compute:RestorePoint": "RestorePoint",
   "azure-native:compute:RestorePointCollection": "RestorePointCollection",
   "azure-native:compute:Snapshot": "Snapshot",
   "azure-native:compute:SshPublicKey": "SshPublicKey",
   "azure-native:compute:VirtualMachine": "VirtualMachine",
   "azure-native:compute:VirtualMachineExtension": "VirtualMachineExtension",
   "azure-native:compute:VirtualMachineRunCommandByVirtualMachine": "VirtualMachineRunCommandByVirtualMachine",
   "azure-native:compute:VirtualMachineScaleSet": "VirtualMachineScaleSet",
   "azure-native:compute:VirtualMachineScaleSetExtension": "VirtualMachineScaleSetExtension",
   "azure-native:compute:VirtualMachineScaleSetVM": "VirtualMachineScaleSetVM",
   "azure-native:compute:VirtualMachineScaleSetVMExtension": "VirtualMachineScaleSetVMExtension",
   "azure-native:compute:VirtualMachineScaleSetVMRunCommand": "VirtualMachineScaleSetVMRunCommand"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "confidentialledger",
  "fqn": "pulumi_azure_native.confidentialledger",
  "classes": {
   "azure-native:confidentialledger:Ledger": "Ledger",
   "azure-native:confidentialledger:ManagedCCF": "ManagedCCF"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "confluent",
  "fqn": "pulumi_azure_native.confluent",
  "classes": {
   "azure-native:confluent:Connector": "Connector",
   "azure-native:confluent:Organization": "Organization",
   "azure-native:confluent:OrganizationClusterById": "OrganizationClusterById",
   "azure-native:confluent:OrganizationEnvironmentById": "OrganizationEnvironmentById",
   "azure-native:confluent:Topic": "Topic"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "connectedcache",
  "fqn": "pulumi_azure_native.connectedcache",
  "classes": {
   "azure-native:connectedcache:CacheNodesOperation": "CacheNodesOperation",
   "azure-native:connectedcache:EnterpriseCustomerOperation": "EnterpriseCustomerOperation",
   "azure-native:connectedcache:EnterpriseMccCacheNodesOperation": "EnterpriseMccCacheNodesOperation",
   "azure-native:connectedcache:EnterpriseMccCustomer": "EnterpriseMccCustomer",
   "azure-native:connectedcache:IspCacheNodesOperation": "IspCacheNodesOperation",
   "azure-native:connectedcache:IspCustomer": "IspCustomer"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "connectedvmwarevsphere",
  "fqn": "pulumi_azure_native.connectedvmwarevsphere",
  "classes": {
   "azure-native:connectedvmwarevsphere:Cluster": "Cluster",
   "azure-native:connectedvmwarevsphere:Datastore": "Datastore",
   "azure-native:connectedvmwarevsphere:GuestAgent": "GuestAgent",
   "azure-native:connectedvmwarevsphere:Host": "Host",
   "azure-native:connectedvmwarevsphere:HybridIdentityMetadatum": "HybridIdentityMetadatum",
   "azure-native:connectedvmwarevsphere:InventoryItem": "InventoryItem",
   "azure-native:connectedvmwarevsphere:MachineExtension": "MachineExtension",
   "azure-native:connectedvmwarevsphere:ResourcePool": "ResourcePool",
   "azure-native:connectedvmwarevsphere:VCenter": "VCenter",
   "azure-native:connectedvmwarevsphere:VMInstanceGuestAgent": "VMInstanceGuestAgent",
   "azure-native:connectedvmwarevsphere:VirtualMachine": "VirtualMachine",
   "azure-native:connectedvmwarevsphere:VirtualMachineInstance": "VirtualMachineInstance",
   "azure-native:connectedvmwarevsphere:VirtualMachineTemplate": "VirtualMachineTemplate",
   "azure-native:connectedvmwarevsphere:VirtualNetwork": "VirtualNetwork"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "consumption",
  "fqn": "pulumi_azure_native.consumption",
  "classes": {
   "azure-native:consumption:Budget": "Budget"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "containerinstance",
  "fqn": "pulumi_azure_native.containerinstance",
  "classes": {
   "azure-native:containerinstance:ContainerGroup": "ContainerGroup",
   "azure-native:containerinstance:ContainerGroupProfile": "ContainerGroupProfile"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "containerregistry",
  "fqn": "pulumi_azure_native.containerregistry",
  "classes": {
   "azure-native:containerregistry:AgentPool": "AgentPool",
   "azure-native:containerregistry:Archife": "Archife",
   "azure-native:containerregistry:ArchiveVersion": "ArchiveVersion",
   "azure-native:containerregistry:CacheRule": "CacheRule",
   "azure-native:containerregistry:ConnectedRegistry": "ConnectedRegistry",
   "azure-native:containerregistry:CredentialSet": "CredentialSet",
   "azure-native:containerregistry:ExportPipeline": "ExportPipeline",
   "azure-native:containerregistry:ImportPipeline": "ImportPipeline",
   "azure-native:containerregistry:PipelineRun": "PipelineRun",
   "azure-native:containerregistry:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:containerregistry:Registry": "Registry",
   "azure-native:containerregistry:Replication": "Replication",
   "azure-native:containerregistry:ScopeMap": "ScopeMap",
   "azure-native:containerregistry:Task": "Task",
   "azure-native:containerregistry:TaskRun": "TaskRun",
   "azure-native:containerregistry:Token": "Token",
   "azure-native:containerregistry:Webhook": "Webhook"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "containerservice",
  "fqn": "pulumi_azure_native.containerservice",
  "classes": {
   "azure-native:containerservice:AgentPool": "AgentPool",
   "azure-native:containerservice:AutoUpgradeProfile": "AutoUpgradeProfile",
   "azure-native:containerservice:Fleet": "Fleet",
   "azure-native:containerservice:FleetMember": "FleetMember",
   "azure-native:containerservice:FleetUpdateStrategy": "FleetUpdateStrategy",
   "azure-native:containerservice:LoadBalancer": "LoadBalancer",
   "azure-native:containerservice:MaintenanceConfiguration": "MaintenanceConfiguration",
   "azure-native:containerservice:ManagedCluster": "ManagedCluster",
   "azure-native:containerservice:ManagedClusterSnapshot": "ManagedClusterSnapshot",
   "azure-native:containerservice:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:containerservice:Snapshot": "Snapshot",
   "azure-native:containerservice:TrustedAccessRoleBinding": "TrustedAccessRoleBinding",
   "azure-native:containerservice:UpdateRun": "UpdateRun"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "containerstorage",
  "fqn": "pulumi_azure_native.containerstorage",
  "classes": {
   "azure-native:containerstorage:Pool": "Pool",
   "azure-native:containerstorage:Snapshot": "Snapshot",
   "azure-native:containerstorage:Volume": "Volume"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "contoso",
  "fqn": "pulumi_azure_native.contoso",
  "classes": {
   "azure-native:contoso:Employee": "Employee"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "cosmosdb",
  "fqn": "pulumi_azure_native.cosmosdb",
  "classes": {
   "azure-native:cosmosdb:CassandraCluster": "CassandraCluster",
   "azure-native:cosmosdb:CassandraDataCenter": "CassandraDataCenter",
   "azure-native:cosmosdb:CassandraResourceCassandraKeyspace": "CassandraResourceCassandraKeyspace",
   "azure-native:cosmosdb:CassandraResourceCassandraTable": "CassandraResourceCassandraTable",
   "azure-native:cosmosdb:CassandraResourceCassandraView": "CassandraResourceCassandraView",
   "azure-native:cosmosdb:DatabaseAccount": "DatabaseAccount",
   "azure-native:cosmosdb:DatabaseAccountCassandraKeyspace": "DatabaseAccountCassandraKeyspace",
   "azure-native:cosmosdb:DatabaseAccountCassandraTable": "DatabaseAccountCassandraTable",
   "azure-native:cosmosdb:DatabaseAccountGremlinDatabase": "DatabaseAccountGremlinDatabase",
   "azure-native:cosmosdb:DatabaseAccountGremlinGraph": "DatabaseAccountGremlinGraph",
   "azure-native:cosmosdb:DatabaseAccountMongoDBCollection": "DatabaseAccountMongoDBCollection",
   "azure-native:cosmosdb:DatabaseAccountMongoDBDatabase": "DatabaseAccountMongoDBDatabase",
   "azure-native:cosmosdb:DatabaseAccountSqlContainer": "DatabaseAccountSqlContainer",
   "azure-native:cosmosdb:DatabaseAccountSqlDatabase": "DatabaseAccountSqlDatabase",
   "azure-native:cosmosdb:DatabaseAccountTable": "DatabaseAccountTable",
   "azure-native:cosmosdb:GraphResourceGraph": "GraphResourceGraph",
   "azure-native:cosmosdb:GremlinResourceGremlinDatabase": "GremlinResourceGremlinDatabase",
   "azure-native:cosmosdb:GremlinResourceGremlinGraph": "GremlinResourceGremlinGraph",
   "azure-native:cosmosdb:MongoCluster": "MongoCluster",
   "azure-native:cosmosdb:MongoClusterFirewallRule": "MongoClusterFirewallRule",
   "azure-native:cosmosdb:MongoDBResourceMongoDBCollection": "MongoDBResourceMongoDBCollection",
   "azure-native:cosmosdb:MongoDBResourceMongoDBDatabase": "MongoDBResourceMongoDBDatabase",
   "azure-native:cosmosdb:MongoDBResourceMongoRoleDefinition": "MongoDBResourceMongoRoleDefinition",
   "azure-native:cosmosdb:MongoDBResourceMongoUserDefinition": "MongoDBResourceMongoUserDefinition",
   "azure-native:cosmosdb:NotebookWorkspace": "NotebookWorkspace",
   "azure-native:cosmosdb:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:cosmosdb:Service": "Service",
   "azure-native:cosmosdb:SqlResourceSqlContainer": "SqlResourceSqlContainer",
   "azure-native:cosmosdb:SqlResourceSqlDatabase": "SqlResourceSqlDatabase",
   "azure-native:cosmosdb:SqlResourceSqlRoleAssignment": "SqlResourceSqlRoleAssignment",
   "azure-native:cosmosdb:SqlResourceSqlRoleDefinition": "SqlResourceSqlRoleDefinition",
   "azure-native:cosmosdb:SqlResourceSqlStoredProcedure": "SqlResourceSqlStoredProcedure",
   "azure-native:cosmosdb:SqlResourceSqlTrigger": "SqlResourceSqlTrigger",
   "azure-native:cosmosdb:SqlResourceSqlUserDefinedFunction": "SqlResourceSqlUserDefinedFunction",
   "azure-native:cosmosdb:TableResourceTable": "TableResourceTable",
   "azure-native:cosmosdb:TableResourceTableRoleAssignment": "TableResourceTableRoleAssignment",
   "azure-native:cosmosdb:TableResourceTableRoleDefinition": "TableResourceTableRoleDefinition",
   "azure-native:cosmosdb:ThroughputPool": "ThroughputPool",
   "azure-native:cosmosdb:ThroughputPoolAccount": "ThroughputPoolAccount"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "costmanagement",
  "fqn": "pulumi_azure_native.costmanagement",
  "classes": {
   "azure-native:costmanagement:Budget": "Budget",
   "azure-native:costmanagement:CloudConnector": "CloudConnector",
   "azure-native:costmanagement:Connector": "Connector",
   "azure-native:costmanagement:CostAllocationRule": "CostAllocationRule",
   "azure-native:costmanagement:Export": "Export",
   "azure-native:costmanagement:MarkupRule": "MarkupRule",
   "azure-native:costmanagement:Report": "Report",
   "azure-native:costmanagement:ReportByBillingAccount": "ReportByBillingAccount",
   "azure-native:costmanagement:ReportByDepartment": "ReportByDepartment",
   "azure-native:costmanagement:ReportByResourceGroupName": "ReportByResourceGroupName",
   "azure-native:costmanagement:ScheduledAction": "ScheduledAction",
   "azure-native:costmanagement:ScheduledActionByScope": "ScheduledActionByScope",
   "azure-native:costmanagement:Setting": "Setting",
   "azure-native:costmanagement:TagInheritanceSetting": "TagInheritanceSetting",
   "azure-native:costmanagement:View": "View",
   "azure-native:costmanagement:ViewByScope": "ViewByScope"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "customerinsights",
  "fqn": "pulumi_azure_native.customerinsights",
  "classes": {
   "azure-native:customerinsights:Connector": "Connector",
   "azure-native:customerinsights:ConnectorMapping": "ConnectorMapping",
   "azure-native:customerinsights:Hub": "Hub",
   "azure-native:customerinsights:Kpi": "Kpi",
   "azure-native:customerinsights:Link": "Link",
   "azure-native:customerinsights:Prediction": "Prediction",
   "azure-native:customerinsights:Profile": "Profile",
   "azure-native:customerinsights:Relationship": "Relationship",
   "azure-native:customerinsights:RelationshipLink": "RelationshipLink",
   "azure-native:customerinsights:RoleAssignment": "RoleAssignment",
   "azure-native:customerinsights:View": "View"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "customproviders",
  "fqn": "pulumi_azure_native.customproviders",
  "classes": {
   "azure-native:customproviders:Association": "Association",
   "azure-native:customproviders:CustomResourceProvider": "CustomResourceProvider"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "dashboard",
  "fqn": "pulumi_azure_native.dashboard",
  "classes": {
   "azure-native:dashboard:Grafana": "Grafana",
   "azure-native:dashboard:IntegrationFabric": "IntegrationFabric",
   "azure-native:dashboard:ManagedPrivateEndpoint": "ManagedPrivateEndpoint",
   "azure-native:dashboard:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "databasefleetmanager",
  "fqn": "pulumi_azure_native.databasefleetmanager",
  "classes": {
   "azure-native:databasefleetmanager:FirewallRule": "FirewallRule",
   "azure-native:databasefleetmanager:Fleet": "Fleet",
   "azure-native:databasefleetmanager:FleetDatabase": "FleetDatabase",
   "azure-native:databasefleetmanager:FleetTier": "FleetTier",
   "azure-native:databasefleetmanager:Fleetspace": "Fleetspace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "databasewatcher",
  "fqn": "pulumi_azure_native.databasewatcher",
  "classes": {
   "azure-native:databasewatcher:AlertRuleResource": "AlertRuleResource",
   "azure-native:databasewatcher:SharedPrivateLinkResource": "SharedPrivateLinkResource",
   "azure-native:databasewatcher:Target": "Target",
   "azure-native:databasewatcher:Watcher": "Watcher"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "databox",
  "fqn": "pulumi_azure_native.databox",
  "classes": {
   "azure-native:databox:Job": "Job"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "databoxedge",
  "fqn": "pulumi_azure_native.databoxedge",
  "classes": {
   "azure-native:databoxedge:ArcAddon": "ArcAddon",
   "azure-native:databoxedge:BandwidthSchedule": "BandwidthSchedule",
   "azure-native:databoxedge:CloudEdgeManagementRole": "CloudEdgeManagementRole",
   "azure-native:databoxedge:Container": "Container",
   "azure-native:databoxedge:Device": "Device",
   "azure-native:databoxedge:FileEventTrigger": "FileEventTrigger",
   "azure-native:databoxedge:IoTAddon": "IoTAddon",
   "azure-native:databoxedge:IoTRole": "IoTRole",
   "azure-native:databoxedge:KubernetesRole": "KubernetesRole",
   "azure-native:databoxedge:MECRole": "MECRole",
   "azure-native:databoxedge:MonitoringConfig": "MonitoringConfig",
   "azure-native:databoxedge:Order": "Order",
   "azure-native:databoxedge:PeriodicTimerEventTrigger": "PeriodicTimerEventTrigger",
   "azure-native:databoxedge:Share": "Share",
   "azure-native:databoxedge:StorageAccount": "StorageAccount",
   "azure-native:databoxedge:StorageAccountCredential": "StorageAccountCredential",
   "azure-native:databoxedge:User": "User"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "databricks",
  "fqn": "pulumi_azure_native.databricks",
  "classes": {
   "azure-native:databricks:AccessConnector": "AccessConnector",
   "azure-native:databricks:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:databricks:VNetPeering": "VNetPeering",
   "azure-native:databricks:Workspace": "Workspace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "datacatalog",
  "fqn": "pulumi_azure_native.datacatalog",
  "classes": {
   "azure-native:datacatalog:ADCCatalog": "ADCCatalog"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "datadog",
  "fqn": "pulumi_azure_native.datadog",
  "classes": {
   "azure-native:datadog:Monitor": "Monitor",
   "azure-native:datadog:MonitoredSubscription": "MonitoredSubscription"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "datafactory",
  "fqn": "pulumi_azure_native.datafactory",
  "classes": {
   "azure-native:datafactory:ChangeDataCapture": "ChangeDataCapture",
   "azure-native:datafactory:CredentialOperation": "CredentialOperation",
   "azure-native:datafactory:DataFlow": "DataFlow",
   "azure-native:datafactory:Dataset": "Dataset",
   "azure-native:datafactory:Factory": "Factory",
   "azure-native:datafactory:GlobalParameter": "GlobalParameter",
   "azure-native:datafactory:IntegrationRuntime": "IntegrationRuntime",
   "azure-native:datafactory:LinkedService": "LinkedService",
   "azure-native:datafactory:ManagedPrivateEndpoint": "ManagedPrivateEndpoint",
   "azure-native:datafactory:Pipeline": "Pipeline",
   "azure-native:datafactory:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:datafactory:Trigger": "Trigger"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "datalakeanalytics",
  "fqn": "pulumi_azure_native.datalakeanalytics",
  "classes": {
   "azure-native:datalakeanalytics:Account": "Account",
   "azure-native:datalakeanalytics:ComputePolicy": "ComputePolicy",
   "azure-native:datalakeanalytics:FirewallRule": "FirewallRule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "datalakestore",
  "fqn": "pulumi_azure_native.datalakestore",
  "classes": {
   "azure-native:datalakestore:Account": "Account",
   "azure-native:datalakestore:FirewallRule": "FirewallRule",
   "azure-native:datalakestore:TrustedIdProvider": "TrustedIdProvider",
   "azure-native:datalakestore:VirtualNetworkRule": "VirtualNetworkRule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "datamigration",
  "fqn": "pulumi_azure_native.datamigration",
  "classes": {
   "azure-native:datamigration:DatabaseMigrationsMongoToCosmosDbRUMongo": "DatabaseMigrationsMongoToCosmosDbRUMongo",
   "azure-native:datamigration:DatabaseMigrationsSqlDb": "DatabaseMigrationsSqlDb",
   "azure-native:datamigration:File": "File",
   "azure-native:datamigration:MigrationService": "MigrationService",
   "azure-native:datamigration:MongoClusterDatabaseMigrationsMongoToCosmosDbvCoreMongo": "MongoClusterDatabaseMigrationsMongoToCosmosDbvCoreMongo",
   "azure-native:datamigration:Project": "Project",
   "azure-native:datamigration:Service": "Service",
   "azure-native:datamigration:ServiceTask": "ServiceTask",
   "azure-native:datamigration:SqlMigrationService": "SqlMigrationService",
   "azure-native:datamigration:Task": "Task"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "dataprotection",
  "fqn": "pulumi_azure_native.dataprotection",
  "classes": {
   "azure-native:dataprotection:BackupInstance": "BackupInstance",
   "azure-native:dataprotection:BackupPolicy": "BackupPolicy",
   "azure-native:dataprotection:BackupVault": "BackupVault",
   "azure-native:dataprotection:DppResourceGuardProxy": "DppResourceGuardProxy",
   "azure-native:dataprotection:ResourceGuard": "ResourceGuard"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "datareplication",
  "fqn": "pulumi_azure_native.datareplication",
  "classes": {
   "azure-native:datareplication:Dra": "Dra",
   "azure-native:datareplication:Fabric": "Fabric",
   "azure-native:datareplication:Policy": "Policy",
   "azure-native:datareplication:ProtectedItem": "ProtectedItem",
   "azure-native:datareplication:ReplicationExtension": "ReplicationExtension",
   "azure-native:datareplication:Vault": "Vault"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "datashare",
  "fqn": "pulumi_azure_native.datashare",
  "classes": {
   "azure-native:datashare:ADLSGen1FileDataSet": "ADLSGen1FileDataSet",
   "azure-native:datashare:ADLSGen1FolderDataSet": "ADLSGen1FolderDataSet",
   "azure-native:datashare:ADLSGen2FileDataSet": "ADLSGen2FileDataSet",
   "azure-native:datashare:ADLSGen2FileDataSetMapping": "ADLSGen2FileDataSetMapping",
   "azure-native:datashare:ADLSGen2FileSystemDataSet": "ADLSGen2FileSystemDataSet",
   "azure-native:datashare:ADLSGen2FileSystemDataSetMapping": "ADLSGen2FileSystemDataSetMapping",
   "azure-native:datashare:ADLSGen2FolderDataSet": "ADLSGen2FolderDataSet",
   "azure-native:datashare:ADLSGen2FolderDataSetMapping": "ADLSGen2FolderDataSetMapping",
   "azure-native:datashare:Account": "Account",
   "azure-native:datashare:BlobContainerDataSet": "BlobContainerDataSet",
   "azure-native:datashare:BlobContainerDataSetMapping": "BlobContainerDataSetMapping",
   "azure-native:datashare:BlobDataSet": "BlobDataSet",
   "azure-native:datashare:BlobDataSetMapping": "BlobDataSetMapping",
   "azure-native:datashare:BlobFolderDataSet": "BlobFolderDataSet",
   "azure-native:datashare:BlobFolderDataSetMapping": "BlobFolderDataSetMapping",
   "azure-native:datashare:Invitation": "Invitation",
   "azure-native:datashare:KustoClusterDataSet": "KustoClusterDataSet",
   "azure-native:datashare:KustoClusterDataSetMapping": "KustoClusterDataSetMapping",
   "azure-native:datashare:KustoDatabaseDataSet": "KustoDatabaseDataSet",
   "azure-native:datashare:KustoDatabaseDataSetMapping": "KustoDatabaseDataSetMapping",
   "azure-native:datashare:KustoTableDataSet": "KustoTableDataSet",
   "azure-native:datashare:KustoTableDataSetMapping": "KustoTableDataSetMapping",
   "azure-native:datashare:ScheduledSynchronizationSetting": "ScheduledSynchronizationSetting",
   "azure-native:datashare:ScheduledTrigger": "ScheduledTrigger",
   "azure-native:datashare:Share": "Share",
   "azure-native:datashare:ShareSubscription": "ShareSubscription",
   "azure-native:datashare:SqlDBTableDataSet": "SqlDBTableDataSet",
   "azure-native:datashare:SqlDBTableDataSetMapping": "SqlDBTableDataSetMapping",
   "azure-native:datashare:SqlDWTableDataSet": "SqlDWTableDataSet",
   "azure-native:datashare:SqlDWTableDataSetMapping": "SqlDWTableDataSetMapping",
   "azure-native:datashare:SynapseWorkspaceSqlPoolTableDataSet": "SynapseWorkspaceSqlPoolTableDataSet",
   "azure-native:datashare:SynapseWorkspaceSqlPoolTableDataSetMapping": "SynapseWorkspaceSqlPoolTableDataSetMapping"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "dbformariadb",
  "fqn": "pulumi_azure_native.dbformariadb",
  "classes": {
   "azure-native:dbformariadb:Configuration": "Configuration",
   "azure-native:dbformariadb:Database": "Database",
   "azure-native:dbformariadb:FirewallRule": "FirewallRule",
   "azure-native:dbformariadb:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:dbformariadb:Server": "Server",
   "azure-native:dbformariadb:VirtualNetworkRule": "VirtualNetworkRule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "dbformysql",
  "fqn": "pulumi_azure_native.dbformysql",
  "classes": {
   "azure-native:dbformysql:AzureADAdministrator": "AzureADAdministrator",
   "azure-native:dbformysql:Configuration": "Configuration",
   "azure-native:dbformysql:Database": "Database",
   "azure-native:dbformysql:FirewallRule": "FirewallRule",
   "azure-native:dbformysql:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:dbformysql:Server": "Server",
   "azure-native:dbformysql:SingleServer": "SingleServer",
   "azure-native:dbformysql:SingleServerDatabase": "SingleServerDatabase",
   "azure-native:dbformysql:SingleServerFirewallRule": "SingleServerFirewallRule",
   "azure-native:dbformysql:SingleServerServerAdministrator": "SingleServerServerAdministrator",
   "azure-native:dbformysql:SingleServerVirtualNetworkRule": "SingleServerVirtualNetworkRule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "dbforpostgresql",
  "fqn": "pulumi_azure_native.dbforpostgresql",
  "classes": {
   "azure-native:dbforpostgresql:Administrator": "Administrator",
   "azure-native:dbforpostgresql:Backup": "Backup",
   "azure-native:dbforpostgresql:Configuration": "Configuration",
   "azure-native:dbforpostgresql:Database": "Database",
   "azure-native:dbforpostgresql:FirewallRule": "FirewallRule",
   "azure-native:dbforpostgresql:Migration": "Migration",
   "azure-native:dbforpostgresql:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:dbforpostgresql:Server": "Server",
   "azure-native:dbforpostgresql:ServerGroupCluster": "ServerGroupCluster",
   "azure-native:dbforpostgresql:ServerGroupFirewallRule": "ServerGroupFirewallRule",
   "azure-native:dbforpostgresql:ServerGroupPrivateEndpointConnection": "ServerGroupPrivateEndpointConnection",
   "azure-native:dbforpostgresql:ServerGroupRole": "ServerGroupRole",
   "azure-native:dbforpostgresql:SingleServer": "SingleServer",
   "azure-native:dbforpostgresql:SingleServerDatabase": "SingleServerDatabase",
   "azure-native:dbforpostgresql:SingleServerFirewallRule": "SingleServerFirewallRule",
   "azure-native:dbforpostgresql:SingleServerServerAdministrator": "SingleServerServerAdministrator",
   "azure-native:dbforpostgresql:SingleServerServerSecurityAlertPolicy": "SingleServerServerSecurityAlertPolicy",
   "azure-native:dbforpostgresql:SingleServerVirtualNetworkRule": "SingleServerVirtualNetworkRule",
   "azure-native:dbforpostgresql:VirtualEndpoint": "VirtualEndpoint"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "delegatednetwork",
  "fqn": "pulumi_azure_native.delegatednetwork",
  "classes": {
   "azure-native:delegatednetwork:ControllerDetails": "ControllerDetails",
   "azure-native:delegatednetwork:DelegatedSubnetServiceDetails": "DelegatedSubnetServiceDetails",
   "azure-native:delegatednetwork:OrchestratorInstanceServiceDetails": "OrchestratorInstanceServiceDetails"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "dependencymap",
  "fqn": "pulumi_azure_native.dependencymap",
  "classes": {
   "azure-native:dependencymap:DiscoverySource": "DiscoverySource",
   "azure-native:dependencymap:Map": "Map"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "desktopvirtualization",
  "fqn": "pulumi_azure_native.desktopvirtualization",
  "classes": {
   "azure-native:desktopvirtualization:AppAttachPackage": "AppAttachPackage",
   "azure-native:desktopvirtualization:Application": "Application",
   "azure-native:desktopvirtualization:ApplicationGroup": "ApplicationGroup",
   "azure-native:desktopvirtualization:HostPool": "HostPool",
   "azure-native:desktopvirtualization:MSIXPackage": "MSIXPackage",
   "azure-native:desktopvirtualization:PrivateEndpointConnectionByHostPool": "PrivateEndpointConnectionByHostPool",
   "azure-native:desktopvirtualization:PrivateEndpointConnectionByWorkspace": "PrivateEndpointConnectionByWorkspace",
   "azure-native:desktopvirtualization:ScalingPlan": "ScalingPlan",
   "azure-native:desktopvirtualization:ScalingPlanPersonalSchedule": "ScalingPlanPersonalSchedule",
   "azure-native:desktopvirtualization:ScalingPlanPooledSchedule": "ScalingPlanPooledSchedule",
   "azure-native:desktopvirtualization:Workspace": "Workspace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "devcenter",
  "fqn": "pulumi_azure_native.devcenter",
  "classes": {
   "azure-native:devcenter:AttachedNetworkByDevCenter": "AttachedNetworkByDevCenter",
   "azure-native:devcenter:Catalog": "Catalog",
   "azure-native:devcenter:CurationProfile": "CurationProfile",
   "azure-native:devcenter:DevBoxDefinition": "DevBoxDefinition",
   "azure-native:devcenter:DevCenter": "DevCenter",
   "azure-native:devcenter:EncryptionSet": "EncryptionSet",
   "azure-native:devcenter:EnvironmentType": "EnvironmentType",
   "azure-native:devcenter:Gallery": "Gallery",
   "azure-native:devcenter:NetworkConnection": "NetworkConnection",
   "azure-native:devcenter:Plan": "Plan",
   "azure-native:devcenter:PlanMember": "PlanMember",
   "azure-native:devcenter:Pool": "Pool",
   "azure-native:devcenter:Project": "Project",
   "azure-native:devcenter:ProjectCatalog": "ProjectCatalog",
   "azure-native:devcenter:ProjectEnvironmentType": "ProjectEnvironmentType",
   "azure-native:devcenter:ProjectPolicy": "ProjectPolicy",
   "azure-native:devcenter:Schedule": "Schedule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "devhub",
  "fqn": "pulumi_azure_native.devhub",
  "classes": {
   "azure-native:devhub:IacProfile": "IacProfile",
   "azure-native:devhub:Workflow": "Workflow"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "deviceprovisioningservices",
  "fqn": "pulumi_azure_native.deviceprovisioningservices",
  "classes": {
   "azure-native:deviceprovisioningservices:DpsCertificate": "DpsCertificate",
   "azure-native:deviceprovisioningservices:IotDpsResource": "IotDpsResource",
   "azure-native:deviceprovisioningservices:IotDpsResourcePrivateEndpointConnection": "IotDpsResourcePrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "deviceregistry",
  "fqn": "pulumi_azure_native.deviceregistry",
  "classes": {
   "azure-native:deviceregistry:Asset": "Asset",
   "azure-native:deviceregistry:AssetEndpointProfile": "AssetEndpointProfile",
   "azure-native:deviceregistry:DiscoveredAsset": "DiscoveredAsset",
   "azure-native:deviceregistry:DiscoveredAssetEndpointProfile": "DiscoveredAssetEndpointProfile",
   "azure-native:deviceregistry:Schema": "Schema",
   "azure-native:deviceregistry:SchemaRegistry": "SchemaRegistry",
   "azure-native:deviceregistry:SchemaVersion": "SchemaVersion"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "deviceupdate",
  "fqn": "pulumi_azure_native.deviceupdate",
  "classes": {
   "azure-native:deviceupdate:Account": "Account",
   "azure-native:deviceupdate:Instance": "Instance",
   "azure-native:deviceupdate:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:deviceupdate:PrivateEndpointConnectionProxy": "PrivateEndpointConnectionProxy"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "devopsinfrastructure",
  "fqn": "pulumi_azure_native.devopsinfrastructure",
  "classes": {
   "azure-native:devopsinfrastructure:Pool": "Pool"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "devspaces",
  "fqn": "pulumi_azure_native.devspaces",
  "classes": {
   "azure-native:devspaces:Controller": "Controller"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "devtestlab",
  "fqn": "pulumi_azure_native.devtestlab",
  "classes": {
   "azure-native:devtestlab:ArtifactSource": "ArtifactSource",
   "azure-native:devtestlab:CustomImage": "CustomImage",
   "azure-native:devtestlab:Disk": "Disk",
   "azure-native:devtestlab:Environment": "Environment",
   "azure-native:devtestlab:Formula": "Formula",
   "azure-native:devtestlab:GlobalSchedule": "GlobalSchedule",
   "azure-native:devtestlab:Lab": "Lab",
   "azure-native:devtestlab:NotificationChannel": "NotificationChannel",
   "azure-native:devtestlab:Policy": "Policy",
   "azure-native:devtestlab:Schedule": "Schedule",
   "azure-native:devtestlab:Secret": "Secret",
   "azure-native:devtestlab:ServiceFabric": "ServiceFabric",
   "azure-native:devtestlab:ServiceFabricSchedule": "ServiceFabricSchedule",
   "azure-native:devtestlab:ServiceRunner": "ServiceRunner",
   "azure-native:devtestlab:User": "User",
   "azure-native:devtestlab:VirtualMachine": "VirtualMachine",
   "azure-native:devtestlab:VirtualMachineSchedule": "VirtualMachineSchedule",
   "azure-native:devtestlab:VirtualNetwork": "VirtualNetwork"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "digitaltwins",
  "fqn": "pulumi_azure_native.digitaltwins",
  "classes": {
   "azure-native:digitaltwins:DigitalTwin": "DigitalTwin",
   "azure-native:digitaltwins:DigitalTwinsEndpoint": "DigitalTwinsEndpoint",
   "azure-native:digitaltwins:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:digitaltwins:TimeSeriesDatabaseConnection": "TimeSeriesDatabaseConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "dns",
  "fqn": "pulumi_azure_native.dns",
  "classes": {
   "azure-native:dns:DnssecConfig": "DnssecConfig",
   "azure-native:dns:RecordSet": "RecordSet",
   "azure-native:dns:Zone": "Zone"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "dnsresolver",
  "fqn": "pulumi_azure_native.dnsresolver",
  "classes": {
   "azure-native:dnsresolver:DnsForwardingRuleset": "DnsForwardingRuleset",
   "azure-native:dnsresolver:DnsResolver": "DnsResolver",
   "azure-native:dnsresolver:DnsResolverDomainList": "DnsResolverDomainList",
   "azure-native:dnsresolver:DnsResolverPolicy": "DnsResolverPolicy",
   "azure-native:dnsresolver:DnsResolverPolicyVirtualNetworkLink": "DnsResolverPolicyVirtualNetworkLink",
   "azure-native:dnsresolver:DnsSecurityRule": "DnsSecurityRule",
   "azure-native:dnsresolver:ForwardingRule": "ForwardingRule",
   "azure-native:dnsresolver:InboundEndpoint": "InboundEndpoint",
   "azure-native:dnsresolver:OutboundEndpoint": "OutboundEndpoint",
   "azure-native:dnsresolver:PrivateResolverVirtualNetworkLink": "PrivateResolverVirtualNetworkLink"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "domainregistration",
  "fqn": "pulumi_azure_native.domainregistration",
  "classes": {
   "azure-native:domainregistration:Domain": "Domain",
   "azure-native:domainregistration:DomainOwnershipIdentifier": "DomainOwnershipIdentifier"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "durabletask",
  "fqn": "pulumi_azure_native.durabletask",
  "classes": {
   "azure-native:durabletask:Scheduler": "Scheduler",
   "azure-native:durabletask:TaskHub": "TaskHub"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "dynamics365fraudprotection",
  "fqn": "pulumi_azure_native.dynamics365fraudprotection",
  "classes": {
   "azure-native:dynamics365fraudprotection:InstanceDetails": "InstanceDetails"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "easm",
  "fqn": "pulumi_azure_native.easm",
  "classes": {
   "azure-native:easm:LabelByWorkspace": "LabelByWorkspace",
   "azure-native:easm:Workspace": "Workspace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "edge",
  "fqn": "pulumi_azure_native.edge",
  "classes": {
   "azure-native:edge:Site": "Site",
   "azure-native:edge:SitesBySubscription": "SitesBySubscription"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "edgeorder",
  "fqn": "pulumi_azure_native.edgeorder",
  "classes": {
   "azure-native:edgeorder:Address": "Address",
   "azure-native:edgeorder:OrderItem": "OrderItem"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "education",
  "fqn": "pulumi_azure_native.education",
  "classes": {
   "azure-native:education:Lab": "Lab",
   "azure-native:education:Student": "Student"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "elastic",
  "fqn": "pulumi_azure_native.elastic",
  "classes": {
   "azure-native:elastic:Monitor": "Monitor",
   "azure-native:elastic:MonitoredSubscription": "MonitoredSubscription",
   "azure-native:elastic:OpenAI": "OpenAI",
   "azure-native:elastic:TagRule": "TagRule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "elasticsan",
  "fqn": "pulumi_azure_native.elasticsan",
  "classes": {
   "azure-native:elasticsan:ElasticSan": "ElasticSan",
   "azure-native:elasticsan:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:elasticsan:Volume": "Volume",
   "azure-native:elasticsan:VolumeGroup": "VolumeGroup",
   "azure-native:elasticsan:VolumeSnapshot": "VolumeSnapshot"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "engagementfabric",
  "fqn": "pulumi_azure_native.engagementfabric",
  "classes": {
   "azure-native:engagementfabric:Account": "Account",
   "azure-native:engagementfabric:Channel": "Channel"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "enterpriseknowledgegraph",
  "fqn": "pulumi_azure_native.enterpriseknowledgegraph",
  "classes": {
   "azure-native:enterpriseknowledgegraph:EnterpriseKnowledgeGraph": "EnterpriseKnowledgeGraph"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "eventgrid",
  "fqn": "pulumi_azure_native.eventgrid",
  "classes": {
   "azure-native:eventgrid:CaCertificate": "CaCertificate",
   "azure-native:eventgrid:Channel": "Channel",
   "azure-native:eventgrid:Client": "Client",
   "azure-native:eventgrid:ClientGroup": "ClientGroup",
   "azure-native:eventgrid:Domain": "Domain",
   "azure-native:eventgrid:DomainEventSubscription": "DomainEventSubscription",
   "azure-native:eventgrid:DomainTopic": "DomainTopic",
   "azure-native:eventgrid:DomainTopicEventSubscription": "DomainTopicEventSubscription",
   "azure-native:eventgrid:EventSubscription": "EventSubscription",
   "azure-native:eventgrid:Namespace": "Namespace",
   "azure-native:eventgrid:NamespaceTopic": "NamespaceTopic",
   "azure-native:eventgrid:NamespaceTopicEventSubscription": "NamespaceTopicEventSubscription",
   "azure-native:eventgrid:PartnerConfiguration": "PartnerConfiguration",
   "azure-native:eventgrid:PartnerDestination": "PartnerDestination",
   "azure-native:eventgrid:PartnerNamespace": "PartnerNamespace",
   "azure-native:eventgrid:PartnerRegistration": "PartnerRegistration",
   "azure-native:eventgrid:PartnerTopic": "PartnerTopic",
   "azure-native:eventgrid:PartnerTopicEventSubscription": "PartnerTopicEventSubscription",
   "azure-native:eventgrid:PermissionBinding": "PermissionBinding",
   "azure-native:eventgrid:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:eventgrid:SystemTopic": "SystemTopic",
   "azure-native:eventgrid:SystemTopicEventSubscription": "SystemTopicEventSubscription",
   "azure-native:eventgrid:Topic": "Topic",
   "azure-native:eventgrid:TopicEventSubscription": "TopicEventSubscription",
   "azure-native:eventgrid:TopicSpace": "TopicSpace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "eventhub",
  "fqn": "pulumi_azure_native.eventhub",
  "classes": {
   "azure-native:eventhub:ApplicationGroup": "ApplicationGroup",
   "azure-native:eventhub:Cluster": "Cluster",
   "azure-native:eventhub:ConsumerGroup": "ConsumerGroup",
   "azure-native:eventhub:DisasterRecoveryConfig": "DisasterRecoveryConfig",
   "azure-native:eventhub:EventHub": "EventHub",
   "azure-native:eventhub:EventHubAuthorizationRule": "EventHubAuthorizationRule",
   "azure-native:eventhub:Namespace": "Namespace",
   "azure-native:eventhub:NamespaceAuthorizationRule": "NamespaceAuthorizationRule",
   "azure-native:eventhub:NamespaceIpFilterRule": "NamespaceIpFilterRule",
   "azure-native:eventhub:NamespaceNetworkRuleSet": "NamespaceNetworkRuleSet",
   "azure-native:eventhub:NamespaceVirtualNetworkRule": "NamespaceVirtualNetworkRule",
   "azure-native:eventhub:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:eventhub:SchemaRegistry": "SchemaRegistry"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "extendedlocation",
  "fqn": "pulumi_azure_native.extendedlocation",
  "classes": {
   "azure-native:extendedlocation:CustomLocation": "CustomLocation",
   "azure-native:extendedlocation:ResourceSyncRule": "ResourceSyncRule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "fabric",
  "fqn": "pulumi_azure_native.fabric",
  "classes": {
   "azure-native:fabric:FabricCapacity": "FabricCapacity"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "features",
  "fqn": "pulumi_azure_native.features",
  "classes": {
   "azure-native:features:SubscriptionFeatureRegistration": "SubscriptionFeatureRegistration"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "fluidrelay",
  "fqn": "pulumi_azure_native.fluidrelay",
  "classes": {
   "azure-native:fluidrelay:FluidRelayServer": "FluidRelayServer"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "frontdoor",
  "fqn": "pulumi_azure_native.frontdoor",
  "classes": {
   "azure-native:frontdoor:Experiment": "Experiment",
   "azure-native:frontdoor:FrontDoor": "FrontDoor",
   "azure-native:frontdoor:NetworkExperimentProfile": "NetworkExperimentProfile",
   "azure-native:frontdoor:Policy": "Policy",
   "azure-native:frontdoor:RulesEngine": "RulesEngine"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "graphservices",
  "fqn": "pulumi_azure_native.graphservices",
  "classes": {
   "azure-native:graphservices:Account": "Account"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "guestconfiguration",
  "fqn": "pulumi_azure_native.guestconfiguration",
  "classes": {
   "azure-native:guestconfiguration:GuestConfigurationAssignment": "GuestConfigurationAssignment",
   "azure-native:guestconfiguration:GuestConfigurationAssignmentsVMSS": "GuestConfigurationAssignmentsVMSS",
   "azure-native:guestconfiguration:GuestConfigurationConnectedVMwarevSphereAssignment": "GuestConfigurationConnectedVMwarevSphereAssignment",
   "azure-native:guestconfiguration:GuestConfigurationHCRPAssignment": "GuestConfigurationHCRPAssignment"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "hardwaresecuritymodules",
  "fqn": "pulumi_azure_native.hardwaresecuritymodules",
  "classes": {
   "azure-native:hardwaresecuritymodules:CloudHsmCluster": "CloudHsmCluster",
   "azure-native:hardwaresecuritymodules:CloudHsmClusterPrivateEndpointConnection": "CloudHsmClusterPrivateEndpointConnection",
   "azure-native:hardwaresecuritymodules:DedicatedHsm": "DedicatedHsm"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "hdinsight",
  "fqn": "pulumi_azure_native.hdinsight",
  "classes": {
   "azure-native:hdinsight:Application": "Application",
   "azure-native:hdinsight:Cluster": "Cluster",
   "azure-native:hdinsight:ClusterPool": "ClusterPool",
   "azure-native:hdinsight:ClusterPoolCluster": "ClusterPoolCluster",
   "azure-native:hdinsight:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "healthbot",
  "fqn": "pulumi_azure_native.healthbot",
  "classes": {
   "azure-native:healthbot:Bot": "Bot"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "healthcareapis",
  "fqn": "pulumi_azure_native.healthcareapis",
  "classes": {
   "azure-native:healthcareapis:AnalyticsConnector": "AnalyticsConnector",
   "azure-native:healthcareapis:DicomService": "DicomService",
   "azure-native:healthcareapis:FhirService": "FhirService",
   "azure-native:healthcareapis:IotConnector": "IotConnector",
   "azure-native:healthcareapis:IotConnectorFhirDestination": "IotConnectorFhirDestination",
   "azure-native:healthcareapis:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:healthcareapis:Service": "Service",
   "azure-native:healthcareapis:Workspace": "Workspace",
   "azure-native:healthcareapis:WorkspacePrivateEndpointConnection": "WorkspacePrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "healthdataaiservices",
  "fqn": "pulumi_azure_native.healthdataaiservices",
  "classes": {
   "azure-native:healthdataaiservices:DeidService": "DeidService",
   "azure-native:healthdataaiservices:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "hybridcloud",
  "fqn": "pulumi_azure_native.hybridcloud",
  "classes": {
   "azure-native:hybridcloud:CloudConnection": "CloudConnection",
   "azure-native:hybridcloud:CloudConnector": "CloudConnector"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "hybridcompute",
  "fqn": "pulumi_azure_native.hybridcompute",
  "classes": {
   "azure-native:hybridcompute:Gateway": "Gateway",
   "azure-native:hybridcompute:License": "License",
   "azure-native:hybridcompute:LicenseProfile": "LicenseProfile",
   "azure-native:hybridcompute:Machine": "Machine",
   "azure-native:hybridcompute:MachineExtension": "MachineExtension",
   "azure-native:hybridcompute:MachineRunCommand": "MachineRunCommand",
   "azure-native:hybridcompute:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:hybridcompute:PrivateLinkScope": "PrivateLinkScope",
   "azure-native:hybridcompute:PrivateLinkScopedResource": "PrivateLinkScopedResource"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "hybridconnectivity",
  "fqn": "pulumi_azure_native.hybridconnectivity",
  "classes": {
   "azure-native:hybridconnectivity:Endpoint": "Endpoint",
   "azure-native:hybridconnectivity:PublicCloudConnector": "PublicCloudConnector",
   "azure-native:hybridconnectivity:ServiceConfiguration": "ServiceConfiguration",
   "azure-native:hybridconnectivity:SolutionConfiguration": "SolutionConfiguration"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "hybridcontainerservice",
  "fqn": "pulumi_azure_native.hybridcontainerservice",
  "classes": {
   "azure-native:hybridcontainerservice:AgentPool": "AgentPool",
   "azure-native:hybridcontainerservice:ClusterInstanceHybridIdentityMetadatum": "ClusterInstanceHybridIdentityMetadatum",
   "azure-native:hybridcontainerservice:HybridIdentityMetadatum": "HybridIdentityMetadatum",
   "azure-native:hybridcontainerservice:ProvisionedCluster": "ProvisionedCluster",
   "azure-native:hybridcontainerservice:StorageSpaceRetrieve": "StorageSpaceRetrieve",
   "azure-native:hybridcontainerservice:VirtualNetworkRetrieve": "VirtualNetworkRetrieve"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "hybriddata",
  "fqn": "pulumi_azure_native.hybriddata",
  "classes": {
   "azure-native:hybriddata:DataManager": "DataManager",
   "azure-native:hybriddata:DataStore": "DataStore",
   "azure-native:hybriddata:JobDefinition": "JobDefinition"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "hybridnetwork",
  "fqn": "pulumi_azure_native.hybridnetwork",
  "classes": {
   "azure-native:hybridnetwork:ArtifactManifest": "ArtifactManifest",
   "azure-native:hybridnetwork:ArtifactStore": "ArtifactStore",
   "azure-native:hybridnetwork:ConfigurationGroupSchema": "ConfigurationGroupSchema",
   "azure-native:hybridnetwork:ConfigurationGroupValue": "ConfigurationGroupValue",
   "azure-native:hybridnetwork:Device": "Device",
   "azure-native:hybridnetwork:NetworkFunction": "NetworkFunction",
   "azure-native:hybridnetwork:NetworkFunctionDefinitionGroup": "NetworkFunctionDefinitionGroup",
   "azure-native:hybridnetwork:NetworkFunctionDefinitionVersion": "NetworkFunctionDefinitionVersion",
   "azure-native:hybridnetwork:NetworkServiceDesignGroup": "NetworkServiceDesignGroup",
   "azure-native:hybridnetwork:NetworkServiceDesignVersion": "NetworkServiceDesignVersion",
   "azure-native:hybridnetwork:Publisher": "Publisher",
   "azure-native:hybridnetwork:Site": "Site",
   "azure-native:hybridnetwork:SiteNetworkService": "SiteNetworkService",
   "azure-native:hybridnetwork:Vendor": "Vendor",
   "azure-native:hybridnetwork:VendorSkuPreview": "VendorSkuPreview",
   "azure-native:hybridnetwork:VendorSkus": "VendorSkus"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "impact",
  "fqn": "pulumi_azure_native.impact",
  "classes": {
   "azure-native:impact:Connector": "Connector",
   "azure-native:impact:Insight": "Insight",
   "azure-native:impact:WorkloadImpact": "WorkloadImpact"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "importexport",
  "fqn": "pulumi_azure_native.importexport",
  "classes": {
   "azure-native:importexport:Job": "Job"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "integrationspaces",
  "fqn": "pulumi_azure_native.integrationspaces",
  "classes": {
   "azure-native:integrationspaces:Application": "Application",
   "azure-native:integrationspaces:ApplicationResource": "ApplicationResource",
   "azure-native:integrationspaces:BusinessProcess": "BusinessProcess",
   "azure-native:integrationspaces:InfrastructureResource": "InfrastructureResource",
   "azure-native:integrationspaces:Space": "Space"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "intune",
  "fqn": "pulumi_azure_native.intune",
  "classes": {
   "azure-native:intune:AndroidMAMPolicyByName": "AndroidMAMPolicyByName",
   "azure-native:intune:IoMAMPolicyByName": "IoMAMPolicyByName"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "iotcentral",
  "fqn": "pulumi_azure_native.iotcentral",
  "classes": {
   "azure-native:iotcentral:App": "App",
   "azure-native:iotcentral:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "iotfirmwaredefense",
  "fqn": "pulumi_azure_native.iotfirmwaredefense",
  "classes": {
   "azure-native:iotfirmwaredefense:Firmware": "Firmware",
   "azure-native:iotfirmwaredefense:Workspace": "Workspace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "iothub",
  "fqn": "pulumi_azure_native.iothub",
  "classes": {
   "azure-native:iothub:Certificate": "Certificate",
   "azure-native:iothub:IotHubResource": "IotHubResource",
   "azure-native:iothub:IotHubResourceEventHubConsumerGroup": "IotHubResourceEventHubConsumerGroup",
   "azure-native:iothub:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "iotoperations",
  "fqn": "pulumi_azure_native.iotoperations",
  "classes": {
   "azure-native:iotoperations:Broker": "Broker",
   "azure-native:iotoperations:BrokerAuthentication": "BrokerAuthentication",
   "azure-native:iotoperations:BrokerAuthorization": "BrokerAuthorization",
   "azure-native:iotoperations:BrokerListener": "BrokerListener",
   "azure-native:iotoperations:Dataflow": "Dataflow",
   "azure-native:iotoperations:DataflowEndpoint": "DataflowEndpoint",
   "azure-native:iotoperations:DataflowProfile": "DataflowProfile",
   "azure-native:iotoperations:Instance": "Instance"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "iotoperationsdataprocessor",
  "fqn": "pulumi_azure_native.iotoperationsdataprocessor",
  "classes": {
   "azure-native:iotoperationsdataprocessor:Dataset": "Dataset",
   "azure-native:iotoperationsdataprocessor:Instance": "Instance",
   "azure-native:iotoperationsdataprocessor:Pipeline": "Pipeline"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "iotoperationsmq",
  "fqn": "pulumi_azure_native.iotoperationsmq",
  "classes": {
   "azure-native:iotoperationsmq:Broker": "Broker",
   "azure-native:iotoperationsmq:BrokerAuthentication": "BrokerAuthentication",
   "azure-native:iotoperationsmq:BrokerAuthorization": "BrokerAuthorization",
   "azure-native:iotoperationsmq:BrokerListener": "BrokerListener",
   "azure-native:iotoperationsmq:DataLakeConnector": "DataLakeConnector",
   "azure-native:iotoperationsmq:DataLakeConnectorTopicMap": "DataLakeConnectorTopicMap",
   "azure-native:iotoperationsmq:DiagnosticService": "DiagnosticService",
   "azure-native:iotoperationsmq:KafkaConnector": "KafkaConnector",
   "azure-native:iotoperationsmq:KafkaConnectorTopicMap": "KafkaConnectorTopicMap",
   "azure-native:iotoperationsmq:Mq": "Mq",
   "azure-native:iotoperationsmq:MqttBridgeConnector": "MqttBridgeConnector",
   "azure-native:iotoperationsmq:MqttBridgeTopicMap": "MqttBridgeTopicMap"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "iotoperationsorchestrator",
  "fqn": "pulumi_azure_native.iotoperationsorchestrator",
  "classes": {
   "azure-native:iotoperationsorchestrator:Instance": "Instance",
   "azure-native:iotoperationsorchestrator:Solution": "Solution",
   "azure-native:iotoperationsorchestrator:Target": "Target"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "keyvault",
  "fqn": "pulumi_azure_native.keyvault",
  "classes": {
   "azure-native:keyvault:AccessPolicy": "AccessPolicy",
   "azure-native:keyvault:Key": "Key",
   "azure-native:keyvault:MHSMPrivateEndpointConnection": "MHSMPrivateEndpointConnection",
   "azure-native:keyvault:ManagedHsm": "ManagedHsm",
   "azure-native:keyvault:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:keyvault:Secret": "Secret",
   "azure-native:keyvault:Vault": "Vault"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "kubernetes",
  "fqn": "pulumi_azure_native.kubernetes",
  "classes": {
   "azure-native:kubernetes:ConnectedCluster": "ConnectedCluster"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "kubernetesconfiguration",
  "fqn": "pulumi_azure_native.kubernetesconfiguration",
  "classes": {
   "azure-native:kubernetesconfiguration:Extension": "Extension",
   "azure-native:kubernetesconfiguration:FluxConfiguration": "FluxConfiguration",
   "azure-native:kubernetesconfiguration:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:kubernetesconfiguration:PrivateLinkScope": "PrivateLinkScope",
   "azure-native:kubernetesconfiguration:SourceControlConfiguration": "SourceControlConfiguration"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "kubernetesruntime",
  "fqn": "pulumi_azure_native.kubernetesruntime",
  "classes": {
   "azure-native:kubernetesruntime:BgpPeer": "BgpPeer",
   "azure-native:kubernetesruntime:LoadBalancer": "LoadBalancer",
   "azure-native:kubernetesruntime:Service": "Service",
   "azure-native:kubernetesruntime:StorageClass": "StorageClass"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "kusto",
  "fqn": "pulumi_azure_native.kusto",
  "classes": {
   "azure-native:kusto:AttachedDatabaseConfiguration": "AttachedDatabaseConfiguration",
   "azure-native:kusto:Cluster": "Cluster",
   "azure-native:kusto:ClusterPrincipalAssignment": "ClusterPrincipalAssignment",
   "azure-native:kusto:CosmosDbDataConnection": "CosmosDbDataConnection",
   "azure-native:kusto:DatabasePrincipalAssignment": "DatabasePrincipalAssignment",
   "azure-native:kusto:EventGridDataConnection": "EventGridDataConnection",
   "azure-native:kusto:EventHubConnection": "EventHubConnection",
   "azure-native:kusto:EventHubDataConnection": "EventHubDataConnection",
   "azure-native:kusto:IotHubDataConnection": "IotHubDataConnection",
   "azure-native:kusto:ManagedPrivateEndpoint": "ManagedPrivateEndpoint",
   "azure-native:kusto:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:kusto:ReadOnlyFollowingDatabase": "ReadOnlyFollowingDatabase",
   "azure-native:kusto:ReadWriteDatabase": "ReadWriteDatabase",
   "azure-native:kusto:SandboxCustomImage": "SandboxCustomImage",
   "azure-native:kusto:Script": "Script"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "labservices",
  "fqn": "pulumi_azure_native.labservices",
  "classes": {
   "azure-native:labservices:Lab": "Lab",
   "azure-native:labservices:LabPlan": "LabPlan",
   "azure-native:labservices:Schedule": "Schedule",
   "azure-native:labservices:User": "User"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "loadtestservice",
  "fqn": "pulumi_azure_native.loadtestservice",
  "classes": {
   "azure-native:loadtestservice:LoadTest": "LoadTest",
   "azure-native:loadtestservice:LoadTestMapping": "LoadTestMapping",
   "azure-native:loadtestservice:LoadTestProfileMapping": "LoadTestProfileMapping"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "logic",
  "fqn": "pulumi_azure_native.logic",
  "classes": {
   "azure-native:logic:IntegrationAccount": "IntegrationAccount",
   "azure-native:logic:IntegrationAccountAgreement": "IntegrationAccountAgreement",
   "azure-native:logic:IntegrationAccountAssembly": "IntegrationAccountAssembly",
   "azure-native:logic:IntegrationAccountBatchConfiguration": "IntegrationAccountBatchConfiguration",
   "azure-native:logic:IntegrationAccountCertificate": "IntegrationAccountCertificate",
   "azure-native:logic:IntegrationAccountMap": "IntegrationAccountMap",
   "azure-native:logic:IntegrationAccountPartner": "IntegrationAccountPartner",
   "azure-native:logic:IntegrationAccountSchema": "IntegrationAccountSchema",
   "azure-native:logic:IntegrationAccountSession": "IntegrationAccountSession",
   "azure-native:logic:IntegrationServiceEnvironment": "IntegrationServiceEnvironment",
   "azure-native:logic:IntegrationServiceEnvironmentManagedApi": "IntegrationServiceEnvironmentManagedApi",
   "azure-native:logic:RosettaNetProcessConfiguration": "RosettaNetProcessConfiguration",
   "azure-native:logic:Workflow": "Workflow",
   "azure-native:logic:WorkflowAccessKey": "WorkflowAccessKey"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "m365securityandcompliance",
  "fqn": "pulumi_azure_native.m365securityandcompliance",
  "classes": {
   "azure-native:m365securityandcompliance:PrivateEndpointConnectionsAdtAPI": "PrivateEndpointConnectionsAdtAPI",
   "azure-native:m365securityandcompliance:PrivateEndpointConnectionsComp": "PrivateEndpointConnectionsComp",
   "azure-native:m365securityandcompliance:PrivateEndpointConnectionsForEDM": "PrivateEndpointConnectionsForEDM",
   "azure-native:m365securityandcompliance:PrivateEndpointConnectionsForMIPPolicySync": "PrivateEndpointConnectionsForMIPPolicySync",
   "azure-native:m365securityandcompliance:PrivateEndpointConnectionsForSCCPowershell": "PrivateEndpointConnectionsForSCCPowershell",
   "azure-native:m365securityandcompliance:PrivateEndpointConnectionsSec": "PrivateEndpointConnectionsSec",
   "azure-native:m365securityandcompliance:PrivateLinkServicesForEDMUpload": "PrivateLinkServicesForEDMUpload",
   "azure-native:m365securityandcompliance:PrivateLinkServicesForM365ComplianceCenter": "PrivateLinkServicesForM365ComplianceCenter",
   "azure-native:m365securityandcompliance:PrivateLinkServicesForM365SecurityCenter": "PrivateLinkServicesForM365SecurityCenter",
   "azure-native:m365securityandcompliance:PrivateLinkServicesForMIPPolicySync": "PrivateLinkServicesForMIPPolicySync",
   "azure-native:m365securityandcompliance:PrivateLinkServicesForO365ManagementActivityAPI": "PrivateLinkServicesForO365ManagementActivityAPI",
   "azure-native:m365securityandcompliance:PrivateLinkServicesForSCCPowershell": "PrivateLinkServicesForSCCPowershell"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "machinelearning",
  "fqn": "pulumi_azure_native.machinelearning",
  "classes": {
   "azure-native:machinelearning:Workspace": "Workspace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "machinelearningservices",
  "fqn": "pulumi_azure_native.machinelearningservices",
  "classes": {
   "azure-native:machinelearningservices:BatchDeployment": "BatchDeployment",
   "azure-native:machinelearningservices:BatchEndpoint": "BatchEndpoint",
   "azure-native:machinelearningservices:CapabilityHost": "CapabilityHost",
   "azure-native:machinelearningservices:CapacityReservationGroup": "CapacityReservationGroup",
   "azure-native:machinelearningservices:CodeContainer": "CodeContainer",
   "azure-native:machinelearningservices:CodeVersion": "CodeVersion",
   "azure-native:machinelearningservices:ComponentContainer": "ComponentContainer",
   "azure-native:machinelearningservices:ComponentVersion": "ComponentVersion",
   "azure-native:machinelearningservices:Compute": "Compute",
   "azure-native:machinelearningservices:ConnectionDeployment": "ConnectionDeployment",
   "azure-native:machinelearningservices:ConnectionRaiBlocklist": "ConnectionRaiBlocklist",
   "azure-native:machinelearningservices:ConnectionRaiBlocklistItem": "ConnectionRaiBlocklistItem",
   "azure-native:machinelearningservices:ConnectionRaiPolicy": "ConnectionRaiPolicy",
   "azure-native:machinelearningservices:DataContainer": "DataContainer",
   "azure-native:machinelearningservices:DataVersion": "DataVersion",
   "azure-native:machinelearningservices:Datastore": "Datastore",
   "azure-native:machinelearningservices:EndpointDeployment": "EndpointDeployment",
   "azure-native:machinelearningservices:EnvironmentContainer": "EnvironmentContainer",
   "azure-native:machinelearningservices:EnvironmentSpecificationVersion": "EnvironmentSpecificationVersion",
   "azure-native:machinelearningservices:EnvironmentVersion": "EnvironmentVersion",
   "azure-native:machinelearningservices:FeaturesetContainerEntity": "FeaturesetContainerEntity",
   "azure-native:machinelearningservices:FeaturesetVersion": "FeaturesetVersion",
   "azure-native:machinelearningservices:FeaturestoreEntityContainerEntity": "FeaturestoreEntityContainerEntity",
   "azure-native:machinelearningservices:FeaturestoreEntityVersion": "FeaturestoreEntityVersion",
   "azure-native:machinelearningservices:InferenceEndpoint": "InferenceEndpoint",
   "azure-native:machinelearningservices:InferenceGroup": "InferenceGroup",
   "azure-native:machinelearningservices:InferencePool": "InferencePool",
   "azure-native:machinelearningservices:Job": "Job",
   "azure-native:machinelearningservices:LabelingJob": "LabelingJob",
   "azure-native:machinelearningservices:LinkedService": "LinkedService",
   "azure-native:machinelearningservices:LinkedWorkspace": "LinkedWorkspace",
   "azure-native:machinelearningservices:MachineLearningDataset": "MachineLearningDataset",
   "azure-native:machinelearningservices:MachineLearningDatastore": "MachineLearningDatastore",
   "azure-native:machinelearningservices:ManagedNetworkSettingsRule": "ManagedNetworkSettingsRule",
   "azure-native:machinelearningservices:MarketplaceSubscription": "MarketplaceSubscription",
   "azure-native:machinelearningservices:ModelContainer": "ModelContainer",
   "azure-native:machinelearningservices:ModelVersion": "ModelVersion",
   "azure-native:machinelearningservices:OnlineDeployment": "OnlineDeployment",
   "azure-native:machinelearningservices:OnlineEndpoint": "OnlineEndpoint",
   "azure-native:machinelearningservices:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:machinelearningservices:RaiPolicy": "RaiPolicy",
   "azure-native:machinelearningservices:Registry": "Registry",
   "azure-native:machinelearningservices:RegistryCodeContainer": "RegistryCodeContainer",
   "azure-native:machinelearningservices:RegistryCodeVersion": "RegistryCodeVersion",
   "azure-native:machinelearningservices:RegistryComponentContainer": "RegistryComponentContainer",
   "azure-native:machinelearningservices:RegistryComponentVersion": "RegistryComponentVersion",
   "azure-native:machinelearningservices:RegistryDataContainer": "RegistryDataContainer",
   "azure-native:machinelearningservices:RegistryDataVersion": "RegistryDataVersion",
   "azure-native:machinelearningservices:RegistryEnvironmentContainer": "RegistryEnvironmentContainer",
   "azure-native:machinelearningservices:RegistryEnvironmentVersion": "RegistryEnvironmentVersion",
   "azure-native:machinelearningservices:RegistryModelContainer": "RegistryModelContainer",
   "azure-native:machinelearningservices:RegistryModelVersion": "RegistryModelVersion",
   "azure-native:machinelearningservices:Schedule": "Schedule",
   "azure-native:machinelearningservices:ServerlessEndpoint": "ServerlessEndpoint",
   "azure-native:machinelearningservices:Workspace": "Workspace",
   "azure-native:machinelearningservices:WorkspaceConnection": "WorkspaceConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "maintenance",
  "fqn": "pulumi_azure_native.maintenance",
  "classes": {
   "azure-native:maintenance:ConfigurationAssignment": "ConfigurationAssignment",
   "azure-native:maintenance:ConfigurationAssignmentParent": "ConfigurationAssignmentParent",
   "azure-native:maintenance:ConfigurationAssignmentsForResourceGroup": "ConfigurationAssignmentsForResourceGroup",
   "azure-native:maintenance:ConfigurationAssignmentsForSubscription": "ConfigurationAssignmentsForSubscription",
   "azure-native:maintenance:MaintenanceConfiguration": "MaintenanceConfiguration"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "managedidentity",
  "fqn": "pulumi_azure_native.managedidentity",
  "classes": {
   "azure-native:managedidentity:FederatedIdentityCredential": "FederatedIdentityCredential",
   "azure-native:managedidentity:UserAssignedIdentity": "UserAssignedIdentity"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "managednetwork",
  "fqn": "pulumi_azure_native.managednetwork",
  "classes": {
   "azure-native:managednetwork:ManagedNetwork": "ManagedNetwork",
   "azure-native:managednetwork:ManagedNetworkGroup": "ManagedNetworkGroup",
   "azure-native:managednetwork:ManagedNetworkPeeringPolicy": "ManagedNetworkPeeringPolicy",
   "azure-native:managednetwork:ScopeAssignment": "ScopeAssignment"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "managednetworkfabric",
  "fqn": "pulumi_azure_native.managednetworkfabric",
  "classes": {
   "azure-native:managednetworkfabric:AccessControlList": "AccessControlList",
   "azure-native:managednetworkfabric:ExternalNetwork": "ExternalNetwork",
   "azure-native:managednetworkfabric:InternalNetwork": "InternalNetwork",
   "azure-native:managednetworkfabric:InternetGateway": "InternetGateway",
   "azure-native:managednetworkfabric:InternetGatewayRule": "InternetGatewayRule",
   "azure-native:managednetworkfabric:IpCommunity": "IpCommunity",
   "azure-native:managednetworkfabric:IpExtendedCommunity": "IpExtendedCommunity",
   "azure-native:managednetworkfabric:IpPrefix": "IpPrefix",
   "azure-native:managednetworkfabric:L2IsolationDomain": "L2IsolationDomain",
   "azure-native:managednetworkfabric:L3IsolationDomain": "L3IsolationDomain",
   "azure-native:managednetworkfabric:NeighborGroup": "NeighborGroup",
   "azure-native:managednetworkfabric:NetworkDevice": "NetworkDevice",
   "azure-native:managednetworkfabric:NetworkFabric": "NetworkFabric",
   "azure-native:managednetworkfabric:NetworkFabricController": "NetworkFabricController",
   "azure-native:managednetworkfabric:NetworkInterface": "NetworkInterface",
   "azure-native:managednetworkfabric:NetworkPacketBroker": "NetworkPacketBroker",
   "azure-native:managednetworkfabric:NetworkRack": "NetworkRack",
   "azure-native:managednetworkfabric:NetworkTap": "NetworkTap",
   "azure-native:managednetworkfabric:NetworkTapRule": "NetworkTapRule",
   "azure-native:managednetworkfabric:NetworkToNetworkInterconnect": "NetworkToNetworkInterconnect",
   "azure-native:managednetworkfabric:RoutePolicy": "RoutePolicy"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "managedservices",
  "fqn": "pulumi_azure_native.managedservices",
  "classes": {
   "azure-native:managedservices:RegistrationAssignment": "RegistrationAssignment",
   "azure-native:managedservices:RegistrationDefinition": "RegistrationDefinition"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "management",
  "fqn": "pulumi_azure_native.management",
  "classes": {
   "azure-native:management:HierarchySetting": "HierarchySetting",
   "azure-native:management:ManagementGroup": "ManagementGroup",
   "azure-native:management:ManagementGroupSubscription": "ManagementGroupSubscription"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "managementpartner",
  "fqn": "pulumi_azure_native.managementpartner",
  "classes": {
   "azure-native:managementpartner:Partner": "Partner"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "manufacturingplatform",
  "fqn": "pulumi_azure_native.manufacturingplatform",
  "classes": {
   "azure-native:manufacturingplatform:ManufacturingDataService": "ManufacturingDataService"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "maps",
  "fqn": "pulumi_azure_native.maps",
  "classes": {
   "azure-native:maps:Account": "Account",
   "azure-native:maps:Creator": "Creator",
   "azure-native:maps:PrivateAtlase": "PrivateAtlase",
   "azure-native:maps:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "marketplace",
  "fqn": "pulumi_azure_native.marketplace",
  "classes": {
   "azure-native:marketplace:PrivateStoreCollection": "PrivateStoreCollection",
   "azure-native:marketplace:PrivateStoreCollectionOffer": "PrivateStoreCollectionOffer"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "media",
  "fqn": "pulumi_azure_native.media",
  "classes": {
   "azure-native:media:AccountFilter": "AccountFilter",
   "azure-native:media:Asset": "Asset",
   "azure-native:media:AssetFilter": "AssetFilter",
   "azure-native:media:ContentKeyPolicy": "ContentKeyPolicy",
   "azure-native:media:Job": "Job",
   "azure-native:media:LiveEvent": "LiveEvent",
   "azure-native:media:LiveOutput": "LiveOutput",
   "azure-native:media:MediaService": "MediaService",
   "azure-native:media:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:media:StreamingEndpoint": "StreamingEndpoint",
   "azure-native:media:StreamingLocator": "StreamingLocator",
   "azure-native:media:StreamingPolicy": "StreamingPolicy",
   "azure-native:media:Track": "Track",
   "azure-native:media:Transform": "Transform"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "migrate",
  "fqn": "pulumi_azure_native.migrate",
  "classes": {
   "azure-native:migrate:AssessmentProjectsAksAssessmentOperation": "AssessmentProjectsAksAssessmentOperation",
   "azure-native:migrate:AssessmentProjectsAssessment": "AssessmentProjectsAssessment",
   "azure-native:migrate:AssessmentProjectsAssessmentsOperation": "AssessmentProjectsAssessmentsOperation",
   "azure-native:migrate:AssessmentProjectsAvsAssessmentsOperation": "AssessmentProjectsAvsAssessmentsOperation",
   "azure-native:migrate:AssessmentProjectsBusinessCaseOperation": "AssessmentProjectsBusinessCaseOperation",
   "azure-native:migrate:AssessmentProjectsGroup": "AssessmentProjectsGroup",
   "azure-native:migrate:AssessmentProjectsGroupsOperation": "AssessmentProjectsGroupsOperation",
   "azure-native:migrate:AssessmentProjectsHyperVCollector": "AssessmentProjectsHyperVCollector",
   "azure-native:migrate:AssessmentProjectsHypervCollectorsOperation": "AssessmentProjectsHypervCollectorsOperation",
   "azure-native:migrate:AssessmentProjectsImportCollector": "AssessmentProjectsImportCollector",
   "azure-native:migrate:AssessmentProjectsImportCollectorsOperation": "AssessmentProjectsImportCollectorsOperation",
   "azure-native:migrate:AssessmentProjectsOperation": "AssessmentProjectsOperation",
   "azure-native:migrate:AssessmentProjectsPrivateEndpointConnection": "AssessmentProjectsPrivateEndpointConnection",
   "azure-native:migrate:AssessmentProjectsPrivateEndpointConnectionOperation": "AssessmentProjectsPrivateEndpointConnectionOperation",
   "azure-native:migrate:AssessmentProjectsProject": "AssessmentProjectsProject",
   "azure-native:migrate:AssessmentProjectsServerCollector": "AssessmentProjectsServerCollector",
   "azure-native:migrate:AssessmentProjectsServerCollectorsOperation": "AssessmentProjectsServerCollectorsOperation",
   "azure-native:migrate:AssessmentProjectsSqlAssessmentV2Operation": "AssessmentProjectsSqlAssessmentV2Operation",
   "azure-native:migrate:AssessmentProjectsSqlCollectorOperation": "AssessmentProjectsSqlCollectorOperation",
   "azure-native:migrate:AssessmentProjectsVMwareCollector": "AssessmentProjectsVMwareCollector",
   "azure-native:migrate:AssessmentProjectsVmwareCollectorsOperation": "AssessmentProjectsVmwareCollectorsOperation",
   "azure-native:migrate:AssessmentProjectsWebAppAssessmentV2Operation": "AssessmentProjectsWebAppAssessmentV2Operation",
   "azure-native:migrate:AssessmentProjectsWebAppCollectorOperation": "AssessmentProjectsWebAppCollectorOperation",
   "azure-native:migrate:MigrateAgent": "MigrateAgent",
   "azure-native:migrate:MigrateProject": "MigrateProject",
   "azure-native:migrate:MigrateProjectsControllerMigrateProject": "MigrateProjectsControllerMigrateProject",
   "azure-native:migrate:ModernizeProject": "ModernizeProject",
   "azure-native:migrate:MoveCollection": "MoveCollection",
   "azure-native:migrate:MoveResource": "MoveResource",
   "azure-native:migrate:PrivateEndpointConnectionControllerPrivateEndpointConnection": "PrivateEndpointConnectionControllerPrivateEndpointConnection",
   "azure-native:migrate:Solution": "Solution",
   "azure-native:migrate:WorkloadDeployment": "WorkloadDeployment",
   "azure-native:migrate:WorkloadInstance": "WorkloadInstance"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "mixedreality",
  "fqn": "pulumi_azure_native.mixedreality",
  "classes": {
   "azure-native:mixedreality:ObjectAnchorsAccount": "ObjectAnchorsAccount",
   "azure-native:mixedreality:RemoteRenderingAccount": "RemoteRenderingAccount",
   "azure-native:mixedreality:SpatialAnchorsAccount": "SpatialAnchorsAccount"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "mobilenetwork",
  "fqn": "pulumi_azure_native.mobilenetwork",
  "classes": {
   "azure-native:mobilenetwork:AttachedDataNetwork": "AttachedDataNetwork",
   "azure-native:mobilenetwork:DataNetwork": "DataNetwork",
   "azure-native:mobilenetwork:DiagnosticsPackage": "DiagnosticsPackage",
   "azure-native:mobilenetwork:MobileNetwork": "MobileNetwork",
   "azure-native:mobilenetwork:PacketCapture": "PacketCapture",
   "azure-native:mobilenetwork:PacketCoreControlPlane": "PacketCoreControlPlane",
   "azure-native:mobilenetwork:PacketCoreDataPlane": "PacketCoreDataPlane",
   "azure-native:mobilenetwork:Service": "Service",
   "azure-native:mobilenetwork:SimGroup": "SimGroup",
   "azure-native:mobilenetwork:SimGroupSim": "SimGroupSim",
   "azure-native:mobilenetwork:SimPolicy": "SimPolicy",
   "azure-native:mobilenetwork:Site": "Site",
   "azure-native:mobilenetwork:Slice": "Slice"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "mongocluster",
  "fqn": "pulumi_azure_native.mongocluster",
  "classes": {
   "azure-native:mongocluster:MongoCluster": "MongoCluster",
   "azure-native:mongocluster:MongoClusterFirewallRule": "MongoClusterFirewallRule",
   "azure-native:mongocluster:MongoClusterPrivateEndpointConnection": "MongoClusterPrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "monitor",
  "fqn": "pulumi_azure_native.monitor",
  "classes": {
   "azure-native:monitor:ActionGroup": "ActionGroup",
   "azure-native:monitor:AzureMonitorWorkspace": "AzureMonitorWorkspace",
   "azure-native:monitor:PipelineGroup": "PipelineGroup",
   "azure-native:monitor:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:monitor:PrivateLinkScope": "PrivateLinkScope",
   "azure-native:monitor:PrivateLinkScopedResource": "PrivateLinkScopedResource",
   "azure-native:monitor:ScheduledQueryRule": "ScheduledQueryRule",
   "azure-native:monitor:TenantActionGroup": "TenantActionGroup"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "mysqldiscovery",
  "fqn": "pulumi_azure_native.mysqldiscovery",
  "classes": {
   "azure-native:mysqldiscovery:MySQLServer": "MySQLServer",
   "azure-native:mysqldiscovery:MySQLSite": "MySQLSite"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "netapp",
  "fqn": "pulumi_azure_native.netapp",
  "classes": {
   "azure-native:netapp:Account": "Account",
   "azure-native:netapp:Backup": "Backup",
   "azure-native:netapp:BackupPolicy": "BackupPolicy",
   "azure-native:netapp:BackupVault": "BackupVault",
   "azure-native:netapp:CapacityPoolBackup": "CapacityPoolBackup",
   "azure-native:netapp:CapacityPoolPool": "CapacityPoolPool",
   "azure-native:netapp:CapacityPoolSnapshot": "CapacityPoolSnapshot",
   "azure-native:netapp:CapacityPoolSubvolume": "CapacityPoolSubvolume",
   "azure-native:netapp:CapacityPoolVolume": "CapacityPoolVolume",
   "azure-native:netapp:CapacityPoolVolumeQuotaRule": "CapacityPoolVolumeQuotaRule",
   "azure-native:netapp:SnapshotPolicy": "SnapshotPolicy",
   "azure-native:netapp:VolumeGroup": "VolumeGroup"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "network",
  "fqn": "pulumi_azure_native.network",
  "classes": {
   "azure-native:network:AdminRule": "AdminRule",
   "azure-native:network:AdminRuleCollection": "AdminRuleCollection",
   "azure-native:network:ApplicationGateway": "ApplicationGateway",
   "azure-native:network:ApplicationGatewayPrivateEndpointConnection": "ApplicationGatewayPrivateEndpointConnection",
   "azure-native:network:ApplicationSecurityGroup": "ApplicationSecurityGroup",
   "azure-native:network:AzureFirewall": "AzureFirewall",
   "azure-native:network:BastionHost": "BastionHost",
   "azure-native:network:ConfigurationPolicyGroup": "ConfigurationPolicyGroup",
   "azure-native:network:ConnectionMonitor": "ConnectionMonitor",
   "azure-native:network:ConnectivityConfiguration": "ConnectivityConfiguration",
   "azure-native:network:CustomIPPrefix": "CustomIPPrefix",
   "azure-native:network:DdosCustomPolicy": "DdosCustomPolicy",
   "azure-native:network:DdosProtectionPlan": "DdosProtectionPlan",
   "azure-native:network:DefaultAdminRule": "DefaultAdminRule",
   "azure-native:network:DefaultUserRule": "DefaultUserRule",
   "azure-native:network:DscpConfiguration": "DscpConfiguration",
   "azure-native:network:ExpressRouteCircuit": "ExpressRouteCircuit",
   "azure-native:network:ExpressRouteCircuitAuthorization": "ExpressRouteCircuitAuthorization",
   "azure-native:network:ExpressRouteCircuitConnection": "ExpressRouteCircuitConnection",
   "azure-native:network:ExpressRouteCircuitPeering": "ExpressRouteCircuitPeering",
   "azure-native:network:ExpressRouteConnection": "ExpressRouteConnection",
   "azure-native:network:ExpressRouteCrossConnectionPeering": "ExpressRouteCrossConnectionPeering",
   "azure-native:network:ExpressRouteGateway": "ExpressRouteGateway",
   "azure-native:network:ExpressRoutePort": "ExpressRoutePort",
   "azure-native:network:ExpressRoutePortAuthorization": "ExpressRoutePortAuthorization",
   "azure-native:network:FirewallPolicy": "FirewallPolicy",
   "azure-native:network:FirewallPolicyDraft": "FirewallPolicyDraft",
   "azure-native:network:FirewallPolicyRuleCollectionGroup": "FirewallPolicyRuleCollectionGroup",
   "azure-native:network:FirewallPolicyRuleCollectionGroupDraft": "FirewallPolicyRuleCollectionGroupDraft",
   "azure-native:network:FirewallPolicyRuleGroup": "FirewallPolicyRuleGroup",
   "azure-native:network:FlowLog": "FlowLog",
   "azure-native:network:HubRouteTable": "HubRouteTable",
   "azure-native:network:HubVirtualNetworkConnection": "HubVirtualNetworkConnection",
   "azure-native:network:InboundNatRule": "InboundNatRule",
   "azure-native:network:InterfaceEndpoint": "InterfaceEndpoint",
   "azure-native:network:IpAllocation": "IpAllocation",
   "azure-native:network:IpGroup": "IpGroup",
   "azure-native:network:IpamPool": "IpamPool",
   "azure-native:network:LoadBalancer": "LoadBalancer",
   "azure-native:network:LoadBalancerBackendAddressPool": "LoadBalancerBackendAddressPool",
   "azure-native:network:LocalNetworkGateway": "LocalNetworkGateway",
   "azure-native:network:ManagementGroupNetworkManagerConnection": "ManagementGroupNetworkManagerConnection",
   "azure-native:network:NatGateway": "NatGateway",
   "azure-native:network:NatRule": "NatRule",
   "azure-native:network:NetworkGroup": "NetworkGroup",
   "azure-native:network:NetworkInterface": "NetworkInterface",
   "azure-native:network:NetworkInterfaceTapConfiguration": "NetworkInterfaceTapConfiguration",
   "azure-native:network:NetworkManager": "NetworkManager",
   "azure-native:network:NetworkManagerRoutingConfiguration": "NetworkManagerRoutingConfiguration",
   "azure-native:network:NetworkProfile": "NetworkProfile",
   "azure-native:network:NetworkSecurityGroup": "NetworkSecurityGroup",
   "azure-native:network:NetworkSecurityPerimeter": "NetworkSecurityPerimeter",
   "azure-native:network:NetworkSecurityPerimeterAccessRule": "NetworkSecurityPerimeterAccessRule",
   "azure-native:network:NetworkSecurityPerimeterAssociation": "NetworkSecurityPerimeterAssociation",
   "azure-native:network:NetworkSecurityPerimeterLink": "NetworkSecurityPerimeterLink",
   "azure-native:network:NetworkSecurityPerimeterLoggingConfiguration": "NetworkSecurityPerimeterLoggingConfiguration",
   "azure-native:network:NetworkSecurityPerimeterProfile": "NetworkSecurityPerimeterProfile",
   "azure-native:network:NetworkVirtualAppliance": "NetworkVirtualAppliance",
   "azure-native:network:NetworkVirtualApplianceConnection": "NetworkVirtualApplianceConnection",
   "azure-native:network:NetworkWatcher": "NetworkWatcher",
   "azure-native:network:NspAccessRule": "NspAccessRule",
   "azure-native:network:NspAssociation": "NspAssociation",
   "azure-native:network:NspLink": "NspLink",
   "azure-native:network:NspProfile": "NspProfile",
   "azure-native:network:P2sVpnGateway": "P2sVpnGateway",
   "azure-native:network:P2sVpnServerConfiguration": "P2sVpnServerConfiguration",
   "azure-native:network:PacketCapture": "PacketCapture",
   "azure-native:network:PrivateDnsZoneGroup": "PrivateDnsZoneGroup",
   "azure-native:network:PrivateEndpoint": "PrivateEndpoint",
   "azure-native:network:PrivateLinkService": "PrivateLinkService",
   "azure-native:network:PrivateLinkServicePrivateEndpointConnection": "PrivateLinkServicePrivateEndpointConnection",
   "azure-native:network:PublicIPAddress": "PublicIPAddress",
   "azure-native:network:PublicIPPrefix": "PublicIPPrefix",
   "azure-native:network:ReachabilityAnalysisIntent": "ReachabilityAnalysisIntent",
   "azure-native:network:ReachabilityAnalysisRun": "ReachabilityAnalysisRun",
   "azure-native:network:Route": "Route",
   "azure-native:network:RouteFilter": "RouteFilter",
   "azure-native:network:RouteFilterRule": "RouteFilterRule",
   "azure-native:network:RouteMap": "RouteMap",
   "azure-native:network:RouteTable": "RouteTable",
   "azure-native:network:RoutingIntent": "RoutingIntent",
   "azure-native:network:RoutingRule": "RoutingRule",
   "azure-native:network:RoutingRuleCollection": "RoutingRuleCollection",
   "azure-native:network:ScopeConnection": "ScopeConnection",
   "azure-native:network:SecurityAdminConfiguration": "SecurityAdminConfiguration",
   "azure-native:network:SecurityPartnerProvider": "SecurityPartnerProvider",
   "azure-native:network:SecurityRule": "SecurityRule",
   "azure-native:network:SecurityUserConfiguration": "SecurityUserConfiguration",
   "azure-native:network:SecurityUserRule": "SecurityUserRule",
   "azure-native:network:SecurityUserRuleCollection": "SecurityUserRuleCollection",
   "azure-native:network:ServiceEndpointPolicy": "ServiceEndpointPolicy",
   "azure-native:network:ServiceEndpointPolicyDefinition": "ServiceEndpointPolicyDefinition",
   "azure-native:network:StaticCidr": "StaticCidr",
   "azure-native:network:StaticMember": "StaticMember",
   "azure-native:network:Subnet": "Subnet",
   "azure-native:network:SubscriptionNetworkManagerConnection": "SubscriptionNetworkManagerConnection",
   "azure-native:network:UserRule": "UserRule",
   "azure-native:network:UserRuleCollection": "UserRuleCollection",
   "azure-native:network:VerifierWorkspace": "VerifierWorkspace",
   "azure-native:network:VirtualApplianceSite": "VirtualApplianceSite",
   "azure-native:network:VirtualHub": "VirtualHub",
   "azure-native:network:VirtualHubBgpConnection": "VirtualHubBgpConnection",
   "azure-native:network:VirtualHubIpConfiguration": "VirtualHubIpConfiguration",
   "azure-native:network:VirtualHubRouteTableV2": "VirtualHubRouteTableV2",
   "azure-native:network:VirtualNetwork": "VirtualNetwork",
   "azure-native:network:VirtualNetworkGateway": "VirtualNetworkGateway",
   "azure-native:network:VirtualNetworkGatewayConnection": "VirtualNetworkGatewayConnection",
   "azure-native:network:VirtualNetworkGatewayNatRule": "VirtualNetworkGatewayNatRule",
   "azure-native:network:VirtualNetworkPeering": "VirtualNetworkPeering",
   "azure-native:network:VirtualNetworkTap": "VirtualNetworkTap",
   "azure-native:network:VirtualRouter": "VirtualRouter",
   "azure-native:network:VirtualRouterPeering": "VirtualRouterPeering",
   "azure-native:network:VirtualWan": "VirtualWan",
   "azure-native:network:VpnConnection": "VpnConnection",
   "azure-native:network:VpnGateway": "VpnGateway",
   "azure-native:network:VpnServerConfiguration": "VpnServerConfiguration",
   "azure-native:network:VpnSite": "VpnSite",
   "azure-native:network:WebApplicationFirewallPolicy": "WebApplicationFirewallPolicy"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "networkcloud",
  "fqn": "pulumi_azure_native.networkcloud",
  "classes": {
   "azure-native:networkcloud:AgentPool": "AgentPool",
   "azure-native:networkcloud:BareMetalMachine": "BareMetalMachine",
   "azure-native:networkcloud:BareMetalMachineKeySet": "BareMetalMachineKeySet",
   "azure-native:networkcloud:BmcKeySet": "BmcKeySet",
   "azure-native:networkcloud:CloudServicesNetwork": "CloudServicesNetwork",
   "azure-native:networkcloud:Cluster": "Cluster",
   "azure-native:networkcloud:ClusterManager": "ClusterManager",
   "azure-native:networkcloud:Console": "Console",
   "azure-native:networkcloud:KubernetesCluster": "KubernetesCluster",
   "azure-native:networkcloud:KubernetesClusterFeature": "KubernetesClusterFeature",
   "azure-native:networkcloud:L2Network": "L2Network",
   "azure-native:networkcloud:L3Network": "L3Network",
   "azure-native:networkcloud:MetricsConfiguration": "MetricsConfiguration",
   "azure-native:networkcloud:Rack": "Rack",
   "azure-native:networkcloud:StorageAppliance": "StorageAppliance",
   "azure-native:networkcloud:TrunkedNetwork": "TrunkedNetwork",
   "azure-native:networkcloud:VirtualMachine": "VirtualMachine",
   "azure-native:networkcloud:Volume": "Volume"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "networkfunction",
  "fqn": "pulumi_azure_native.networkfunction",
  "classes": {
   "azure-native:networkfunction:AzureTrafficCollector": "AzureTrafficCollector",
   "azure-native:networkfunction:CollectorPolicy": "CollectorPolicy"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "notificationhubs",
  "fqn": "pulumi_azure_native.notificationhubs",
  "classes": {
   "azure-native:notificationhubs:Namespace": "Namespace",
   "azure-native:notificationhubs:NamespaceAuthorizationRule": "NamespaceAuthorizationRule",
   "azure-native:notificationhubs:NotificationHub": "NotificationHub",
   "azure-native:notificationhubs:NotificationHubAuthorizationRule": "NotificationHubAuthorizationRule",
   "azure-native:notificationhubs:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "offazure",
  "fqn": "pulumi_azure_native.offazure",
  "classes": {
   "azure-native:offazure:HyperVSite": "HyperVSite",
   "azure-native:offazure:HypervClusterControllerCluster": "HypervClusterControllerCluster",
   "azure-native:offazure:HypervHostController": "HypervHostController",
   "azure-native:offazure:HypervSitesController": "HypervSitesController",
   "azure-native:offazure:ImportSitesController": "ImportSitesController",
   "azure-native:offazure:MasterSitesController": "MasterSitesController",
   "azure-native:offazure:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:offazure:PrivateEndpointConnectionController": "PrivateEndpointConnectionController",
   "azure-native:offazure:ServerSitesController": "ServerSitesController",
   "azure-native:offazure:Site": "Site",
   "azure-native:offazure:SitesController": "SitesController",
   "azure-native:offazure:SqlDiscoverySiteDataSourceController": "SqlDiscoverySiteDataSourceController",
   "azure-native:offazure:SqlSitesController": "SqlSitesController",
   "azure-native:offazure:VcenterController": "VcenterController",
   "azure-native:offazure:WebAppDiscoverySiteDataSourcesController": "WebAppDiscoverySiteDataSourcesController",
   "azure-native:offazure:WebAppSitesController": "WebAppSitesController"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "offazurespringboot",
  "fqn": "pulumi_azure_native.offazurespringboot",
  "classes": {
   "azure-native:offazurespringboot:Springbootapp": "Springbootapp",
   "azure-native:offazurespringboot:Springbootserver": "Springbootserver",
   "azure-native:offazurespringboot:Springbootsite": "Springbootsite"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "openenergyplatform",
  "fqn": "pulumi_azure_native.openenergyplatform",
  "classes": {
   "azure-native:openenergyplatform:EnergyService": "EnergyService"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "operationalinsights",
  "fqn": "pulumi_azure_native.operationalinsights",
  "classes": {
   "azure-native:operationalinsights:Cluster": "Cluster",
   "azure-native:operationalinsights:DataExport": "DataExport",
   "azure-native:operationalinsights:DataSource": "DataSource",
   "azure-native:operationalinsights:LinkedService": "LinkedService",
   "azure-native:operationalinsights:LinkedStorageAccount": "LinkedStorageAccount",
   "azure-native:operationalinsights:MachineGroup": "MachineGroup",
   "azure-native:operationalinsights:Query": "Query",
   "azure-native:operationalinsights:QueryPack": "QueryPack",
   "azure-native:operationalinsights:SavedSearch": "SavedSearch",
   "azure-native:operationalinsights:StorageInsightConfig": "StorageInsightConfig",
   "azure-native:operationalinsights:Table": "Table",
   "azure-native:operationalinsights:Workspace": "Workspace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "operationsmanagement",
  "fqn": "pulumi_azure_native.operationsmanagement",
  "classes": {
   "azure-native:operationsmanagement:ManagementAssociation": "ManagementAssociation",
   "azure-native:operationsmanagement:ManagementConfiguration": "ManagementConfiguration",
   "azure-native:operationsmanagement:Solution": "Solution"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "orbital",
  "fqn": "pulumi_azure_native.orbital",
  "classes": {
   "azure-native:orbital:Contact": "Contact",
   "azure-native:orbital:ContactProfile": "ContactProfile",
   "azure-native:orbital:EdgeSite": "EdgeSite",
   "azure-native:orbital:GroundStation": "GroundStation",
   "azure-native:orbital:L2Connection": "L2Connection",
   "azure-native:orbital:Spacecraft": "Spacecraft"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "peering",
  "fqn": "pulumi_azure_native.peering",
  "classes": {
   "azure-native:peering:ConnectionMonitorTest": "ConnectionMonitorTest",
   "azure-native:peering:PeerAsn": "PeerAsn",
   "azure-native:peering:Peering": "Peering",
   "azure-native:peering:PeeringService": "PeeringService",
   "azure-native:peering:Prefix": "Prefix",
   "azure-native:peering:RegisteredAsn": "RegisteredAsn",
   "azure-native:peering:RegisteredPrefix": "RegisteredPrefix"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "policyinsights",
  "fqn": "pulumi_azure_native.policyinsights",
  "classes": {
   "azure-native:policyinsights:AttestationAtResource": "AttestationAtResource",
   "azure-native:policyinsights:AttestationAtResourceGroup": "AttestationAtResourceGroup",
   "azure-native:policyinsights:AttestationAtSubscription": "AttestationAtSubscription",
   "azure-native:policyinsights:RemediationAtManagementGroup": "RemediationAtManagementGroup",
   "azure-native:policyinsights:RemediationAtResource": "RemediationAtResource",
   "azure-native:policyinsights:RemediationAtResourceGroup": "RemediationAtResourceGroup",
   "azure-native:policyinsights:RemediationAtSubscription": "RemediationAtSubscription"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "portal",
  "fqn": "pulumi_azure_native.portal",
  "classes": {
   "azure-native:portal:Console": "Console",
   "azure-native:portal:ConsoleWithLocation": "ConsoleWithLocation",
   "azure-native:portal:Dashboard": "Dashboard",
   "azure-native:portal:TenantConfiguration": "TenantConfiguration",
   "azure-native:portal:UserSettings": "UserSettings",
   "azure-native:portal:UserSettingsWithLocation": "UserSettingsWithLocation"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "portalservices",
  "fqn": "pulumi_azure_native.portalservices",
  "classes": {
   "azure-native:portalservices:CopilotSetting": "CopilotSetting"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "powerbi",
  "fqn": "pulumi_azure_native.powerbi",
  "classes": {
   "azure-native:powerbi:PowerBIResource": "PowerBIResource",
   "azure-native:powerbi:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:powerbi:WorkspaceCollection": "WorkspaceCollection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "powerbidedicated",
  "fqn": "pulumi_azure_native.powerbidedicated",
  "classes": {
   "azure-native:powerbidedicated:AutoScaleVCore": "AutoScaleVCore",
   "azure-native:powerbidedicated:CapacityDetails": "CapacityDetails"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "powerplatform",
  "fqn": "pulumi_azure_native.powerplatform",
  "classes": {
   "azure-native:powerplatform:Account": "Account",
   "azure-native:powerplatform:EnterprisePolicy": "EnterprisePolicy",
   "azure-native:powerplatform:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "privatedns",
  "fqn": "pulumi_azure_native.privatedns",
  "classes": {
   "azure-native:privatedns:PrivateRecordSet": "PrivateRecordSet",
   "azure-native:privatedns:PrivateZone": "PrivateZone",
   "azure-native:privatedns:VirtualNetworkLink": "VirtualNetworkLink"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "professionalservice",
  "fqn": "pulumi_azure_native.professionalservice",
  "classes": {
   "azure-native:professionalservice:ProfessionalServiceSubscriptionLevel": "ProfessionalServiceSubscriptionLevel"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "programmableconnectivity",
  "fqn": "pulumi_azure_native.programmableconnectivity",
  "classes": {
   "azure-native:programmableconnectivity:Gateway": "Gateway",
   "azure-native:programmableconnectivity:OperatorApiConnection": "OperatorApiConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "providerhub",
  "fqn": "pulumi_azure_native.providerhub",
  "classes": {
   "azure-native:providerhub:DefaultRollout": "DefaultRollout",
   "azure-native:providerhub:NotificationRegistration": "NotificationRegistration",
   "azure-native:providerhub:OperationByProviderRegistration": "OperationByProviderRegistration",
   "azure-native:providerhub:ProviderRegistration": "ProviderRegistration",
   "azure-native:providerhub:ResourceTypeRegistration": "ResourceTypeRegistration",
   "azure-native:providerhub:Skus": "Skus",
   "azure-native:providerhub:SkusNestedResourceTypeFirst": "SkusNestedResourceTypeFirst",
   "azure-native:providerhub:SkusNestedResourceTypeSecond": "SkusNestedResourceTypeSecond",
   "azure-native:providerhub:SkusNestedResourceTypeThird": "SkusNestedResourceTypeThird"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "purview",
  "fqn": "pulumi_azure_native.purview",
  "classes": {
   "azure-native:purview:Account": "Account",
   "azure-native:purview:KafkaConfiguration": "KafkaConfiguration",
   "azure-native:purview:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "quantum",
  "fqn": "pulumi_azure_native.quantum",
  "classes": {
   "azure-native:quantum:Workspace": "Workspace"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "quota",
  "fqn": "pulumi_azure_native.quota",
  "classes": {
   "azure-native:quota:GroupQuota": "GroupQuota",
   "azure-native:quota:GroupQuotaSubscription": "GroupQuotaSubscription"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "recommendationsservice",
  "fqn": "pulumi_azure_native.recommendationsservice",
  "classes": {
   "azure-native:recommendationsservice:Account": "Account",
   "azure-native:recommendationsservice:Modeling": "Modeling",
   "azure-native:recommendationsservice:ServiceEndpoint": "ServiceEndpoint"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "recoveryservices",
  "fqn": "pulumi_azure_native.recoveryservices",
  "classes": {
   "azure-native:recoveryservices:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:recoveryservices:ProtectedItem": "ProtectedItem",
   "azure-native:recoveryservices:ProtectionContainer": "ProtectionContainer",
   "azure-native:recoveryservices:ProtectionIntent": "ProtectionIntent",
   "azure-native:recoveryservices:ProtectionPolicy": "ProtectionPolicy",
   "azure-native:recoveryservices:ReplicationFabric": "ReplicationFabric",
   "azure-native:recoveryservices:ReplicationMigrationItem": "ReplicationMigrationItem",
   "azure-native:recoveryservices:ReplicationNetworkMapping": "ReplicationNetworkMapping",
   "azure-native:recoveryservices:ReplicationPolicy": "ReplicationPolicy",
   "azure-native:recoveryservices:ReplicationProtectedItem": "ReplicationProtectedItem",
   "azure-native:recoveryservices:ReplicationProtectionCluster": "ReplicationProtectionCluster",
   "azure-native:recoveryservices:ReplicationProtectionContainerMapping": "ReplicationProtectionContainerMapping",
   "azure-native:recoveryservices:ReplicationRecoveryPlan": "ReplicationRecoveryPlan",
   "azure-native:recoveryservices:ReplicationRecoveryServicesProvider": "ReplicationRecoveryServicesProvider",
   "azure-native:recoveryservices:ReplicationStorageClassificationMapping": "ReplicationStorageClassificationMapping",
   "azure-native:recoveryservices:ReplicationvCenter": "ReplicationvCenter",
   "azure-native:recoveryservices:ResourceGuardProxy": "ResourceGuardProxy",
   "azure-native:recoveryservices:Vault": "Vault"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "redhatopenshift",
  "fqn": "pulumi_azure_native.redhatopenshift",
  "classes": {
   "azure-native:redhatopenshift:MachinePool": "MachinePool",
   "azure-native:redhatopenshift:OpenShiftCluster": "OpenShiftCluster",
   "azure-native:redhatopenshift:Secret": "Secret",
   "azure-native:redhatopenshift:SyncIdentityProvider": "SyncIdentityProvider",
   "azure-native:redhatopenshift:SyncSet": "SyncSet"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "redis",
  "fqn": "pulumi_azure_native.redis",
  "classes": {
   "azure-native:redis:AccessPolicy": "AccessPolicy",
   "azure-native:redis:AccessPolicyAssignment": "AccessPolicyAssignment",
   "azure-native:redis:FirewallRule": "FirewallRule",
   "azure-native:redis:LinkedServer": "LinkedServer",
   "azure-native:redis:PatchSchedule": "PatchSchedule",
   "azure-native:redis:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:redis:Redis": "Redis",
   "azure-native:redis:RedisFirewallRule": "RedisFirewallRule",
   "azure-native:redis:RedisLinkedServer": "RedisLinkedServer"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "redisenterprise",
  "fqn": "pulumi_azure_native.redisenterprise",
  "classes": {
   "azure-native:redisenterprise:EnterpriseAccessPolicyAssignment": "EnterpriseAccessPolicyAssignment",
   "azure-native:redisenterprise:EnterpriseDatabase": "EnterpriseDatabase",
   "azure-native:redisenterprise:EnterprisePrivateEndpointConnection": "EnterprisePrivateEndpointConnection",
   "azure-native:redisenterprise:RedisEnterprise": "RedisEnterprise"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "relay",
  "fqn": "pulumi_azure_native.relay",
  "classes": {
   "azure-native:relay:HybridConnection": "HybridConnection",
   "azure-native:relay:HybridConnectionAuthorizationRule": "HybridConnectionAuthorizationRule",
   "azure-native:relay:Namespace": "Namespace",
   "azure-native:relay:NamespaceAuthorizationRule": "NamespaceAuthorizationRule",
   "azure-native:relay:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:relay:WCFRelay": "WCFRelay",
   "azure-native:relay:WCFRelayAuthorizationRule": "WCFRelayAuthorizationRule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "resourceconnector",
  "fqn": "pulumi_azure_native.resourceconnector",
  "classes": {
   "azure-native:resourceconnector:Appliance": "Appliance"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "resourcegraph",
  "fqn": "pulumi_azure_native.resourcegraph",
  "classes": {
   "azure-native:resourcegraph:GraphQuery": "GraphQuery"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "resources",
  "fqn": "pulumi_azure_native.resources",
  "classes": {
   "azure-native:resources:AzureCliScript": "AzureCliScript",
   "azure-native:resources:AzurePowerShellScript": "AzurePowerShellScript",
   "azure-native:resources:Deployment": "Deployment",
   "azure-native:resources:DeploymentAtManagementGroupScope": "DeploymentAtManagementGroupScope",
   "azure-native:resources:DeploymentAtScope": "DeploymentAtScope",
   "azure-native:resources:DeploymentAtSubscriptionScope": "DeploymentAtSubscriptionScope",
   "azure-native:resources:DeploymentAtTenantScope": "DeploymentAtTenantScope",
   "azure-native:resources:DeploymentStackAtManagementGroup": "DeploymentStackAtManagementGroup",
   "azure-native:resources:DeploymentStackAtResourceGroup": "DeploymentStackAtResourceGroup",
   "azure-native:resources:DeploymentStackAtSubscription": "DeploymentStackAtSubscription",
   "azure-native:resources:Resource": "Resource",
   "azure-native:resources:ResourceGroup": "ResourceGroup",
   "azure-native:resources:TagAtScope": "TagAtScope",
   "azure-native:resources:TemplateSpec": "TemplateSpec",
   "azure-native:resources:TemplateSpecVersion": "TemplateSpecVersion"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "saas",
  "fqn": "pulumi_azure_native.saas",
  "classes": {
   "azure-native:saas:SaasSubscriptionLevel": "SaasSubscriptionLevel"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "scheduler",
  "fqn": "pulumi_azure_native.scheduler",
  "classes": {
   "azure-native:scheduler:Job": "Job",
   "azure-native:scheduler:JobCollection": "JobCollection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "scom",
  "fqn": "pulumi_azure_native.scom",
  "classes": {
   "azure-native:scom:Instance": "Instance",
   "azure-native:scom:ManagedGateway": "ManagedGateway",
   "azure-native:scom:MonitoredResource": "MonitoredResource"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "scvmm",
  "fqn": "pulumi_azure_native.scvmm",
  "classes": {
   "azure-native:scvmm:AvailabilitySet": "AvailabilitySet",
   "azure-native:scvmm:Cloud": "Cloud",
   "azure-native:scvmm:GuestAgent": "GuestAgent",
   "azure-native:scvmm:HybridIdentityMetadata": "HybridIdentityMetadata",
   "azure-native:scvmm:InventoryItem": "InventoryItem",
   "azure-native:scvmm:MachineExtension": "MachineExtension",
   "azure-native:scvmm:VMInstanceGuestAgent": "VMInstanceGuestAgent",
   "azure-native:scvmm:VirtualMachine": "VirtualMachine",
   "azure-native:scvmm:VirtualMachineInstance": "VirtualMachineInstance",
   "azure-native:scvmm:VirtualMachineTemplate": "VirtualMachineTemplate",
   "azure-native:scvmm:VirtualNetwork": "VirtualNetwork",
   "azure-native:scvmm:VmmServer": "VmmServer"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "search",
  "fqn": "pulumi_azure_native.search",
  "classes": {
   "azure-native:search:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:search:Service": "Service",
   "azure-native:search:SharedPrivateLinkResource": "SharedPrivateLinkResource"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "secretsynccontroller",
  "fqn": "pulumi_azure_native.secretsynccontroller",
  "classes": {
   "azure-native:secretsynccontroller:AzureKeyVaultSecretProviderClass": "AzureKeyVaultSecretProviderClass",
   "azure-native:secretsynccontroller:SecretSync": "SecretSync"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "security",
  "fqn": "pulumi_azure_native.security",
  "classes": {
   "azure-native:security:APICollection": "APICollection",
   "azure-native:security:APICollectionByAzureApiManagementService": "APICollectionByAzureApiManagementService",
   "azure-native:security:AdvancedThreatProtection": "AdvancedThreatProtection",
   "azure-native:security:AlertsSuppressionRule": "AlertsSuppressionRule",
   "azure-native:security:Application": "Application",
   "azure-native:security:Assessment": "Assessment",
   "azure-native:security:AssessmentMetadataInSubscription": "AssessmentMetadataInSubscription",
   "azure-native:security:AssessmentsMetadataSubscription": "AssessmentsMetadataSubscription",
   "azure-native:security:Assignment": "Assignment",
   "azure-native:security:Automation": "Automation",
   "azure-native:security:AzureServersSetting": "AzureServersSetting",
   "azure-native:security:Connector": "Connector",
   "azure-native:security:CustomAssessmentAutomation": "CustomAssessmentAutomation",
   "azure-native:security:CustomEntityStoreAssignment": "CustomEntityStoreAssignment",
   "azure-native:security:CustomRecommendation": "CustomRecommendation",
   "azure-native:security:DefenderForStorage": "DefenderForStorage",
   "azure-native:security:DevOpsConfiguration": "DevOpsConfiguration",
   "azure-native:security:DeviceSecurityGroup": "DeviceSecurityGroup",
   "azure-native:security:GovernanceAssignment": "GovernanceAssignment",
   "azure-native:security:GovernanceRule": "GovernanceRule",
   "azure-native:security:IotSecuritySolution": "IotSecuritySolution",
   "azure-native:security:JitNetworkAccessPolicy": "JitNetworkAccessPolicy",
   "azure-native:security:Pricing": "Pricing",
   "azure-native:security:SecurityConnector": "SecurityConnector",
   "azure-native:security:SecurityConnectorApplication": "SecurityConnectorApplication",
   "azure-native:security:SecurityContact": "SecurityContact",
   "azure-native:security:SecurityOperator": "SecurityOperator",
   "azure-native:security:SecurityStandard": "SecurityStandard",
   "azure-native:security:ServerVulnerabilityAssessment": "ServerVulnerabilityAssessment",
   "azure-native:security:SqlVulnerabilityAssessmentBaselineRule": "SqlVulnerabilityAssessmentBaselineRule",
   "azure-native:security:Standard": "Standard",
   "azure-native:security:StandardAssignment": "StandardAssignment",
   "azure-native:security:WorkspaceSetting": "WorkspaceSetting"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "securityandcompliance",
  "fqn": "pulumi_azure_native.securityandcompliance",
  "classes": {
   "azure-native:securityandcompliance:PrivateEndpointConnectionsAdtAPI": "PrivateEndpointConnectionsAdtAPI",
   "azure-native:securityandcompliance:PrivateEndpointConnectionsComp": "PrivateEndpointConnectionsComp",
   "azure-native:securityandcompliance:PrivateEndpointConnectionsForEDM": "PrivateEndpointConnectionsForEDM",
   "azure-native:securityandcompliance:PrivateEndpointConnectionsForMIPPolicySync": "PrivateEndpointConnectionsForMIPPolicySync",
   "azure-native:securityandcompliance:PrivateEndpointConnectionsForSCCPowershell": "PrivateEndpointConnectionsForSCCPowershell",
   "azure-native:securityandcompliance:PrivateEndpointConnectionsSec": "PrivateEndpointConnectionsSec",
   "azure-native:securityandcompliance:PrivateLinkServicesForEDMUpload": "PrivateLinkServicesForEDMUpload",
   "azure-native:securityandcompliance:PrivateLinkServicesForM365ComplianceCenter": "PrivateLinkServicesForM365ComplianceCenter",
   "azure-native:securityandcompliance:PrivateLinkServicesForM365SecurityCenter": "PrivateLinkServicesForM365SecurityCenter",
   "azure-native:securityandcompliance:PrivateLinkServicesForMIPPolicySync": "PrivateLinkServicesForMIPPolicySync",
   "azure-native:securityandcompliance:PrivateLinkServicesForO365ManagementActivityAPI": "PrivateLinkServicesForO365ManagementActivityAPI",
   "azure-native:securityandcompliance:PrivateLinkServicesForSCCPowershell": "PrivateLinkServicesForSCCPowershell"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "securityinsights",
  "fqn": "pulumi_azure_native.securityinsights",
  "classes": {
   "azure-native:securityinsights:AADDataConnector": "AADDataConnector",
   "azure-native:securityinsights:AATPDataConnector": "AATPDataConnector",
   "azure-native:securityinsights:ASCDataConnector": "ASCDataConnector",
   "azure-native:securityinsights:Action": "Action",
   "azure-native:securityinsights:ActivityCustomEntityQuery": "ActivityCustomEntityQuery",
   "azure-native:securityinsights:Anomalies": "Anomalies",
   "azure-native:securityinsights:AnomalySecurityMLAnalyticsSettings": "AnomalySecurityMLAnalyticsSettings",
   "azure-native:securityinsights:AutomationRule": "AutomationRule",
   "azure-native:securityinsights:AwsCloudTrailDataConnector": "AwsCloudTrailDataConnector",
   "azure-native:securityinsights:Bookmark": "Bookmark",
   "azure-native:securityinsights:BookmarkRelation": "BookmarkRelation",
   "azure-native:securityinsights:BusinessApplicationAgent": "BusinessApplicationAgent",
   "azure-native:securityinsights:ContentPackage": "ContentPackage",
   "azure-native:securityinsights:ContentTemplate": "ContentTemplate",
   "azure-native:securityinsights:CustomizableConnectorDefinition": "CustomizableConnectorDefinition",
   "azure-native:securityinsights:EntityAnalytics": "EntityAnalytics",
   "azure-native:securityinsights:EyesOn": "EyesOn",
   "azure-native:securityinsights:FileImport": "FileImport",
   "azure-native:securityinsights:FusionAlertRule": "FusionAlertRule",
   "azure-native:securityinsights:Hunt": "Hunt",
   "azure-native:securityinsights:HuntComment": "HuntComment",
   "azure-native:securityinsights:HuntRelation": "HuntRelation",
   "azure-native:securityinsights:Incident": "Incident",
   "azure-native:securityinsights:IncidentComment": "IncidentComment",
   "azure-native:securityinsights:IncidentRelation": "IncidentRelation",
   "azure-native:securityinsights:IncidentTask": "IncidentTask",
   "azure-native:securityinsights:MCASDataConnector": "MCASDataConnector",
   "azure-native:securityinsights:MDATPDataConnector": "MDATPDataConnector",
   "azure-native:securityinsights:MSTIDataConnector": "MSTIDataConnector",
   "azure-native:securityinsights:Metadata": "Metadata",
   "azure-native:securityinsights:MicrosoftSecurityIncidentCreationAlertRule": "MicrosoftSecurityIncidentCreationAlertRule",
   "azure-native:securityinsights:OfficeDataConnector": "OfficeDataConnector",
   "azure-native:securityinsights:PremiumMicrosoftDefenderForThreatIntelligence": "PremiumMicrosoftDefenderForThreatIntelligence",
   "azure-native:securityinsights:RestApiPollerDataConnector": "RestApiPollerDataConnector",
   "azure-native:securityinsights:ScheduledAlertRule": "ScheduledAlertRule",
   "azure-native:securityinsights:SentinelOnboardingState": "SentinelOnboardingState",
   "azure-native:securityinsights:SourceControl": "SourceControl",
   "azure-native:securityinsights:System": "System",
   "azure-native:securityinsights:TIDataConnector": "TIDataConnector",
   "azure-native:securityinsights:ThreatIntelligenceIndicator": "ThreatIntelligenceIndicator",
   "azure-native:securityinsights:Ueba": "Ueba",
   "azure-native:securityinsights:Watchlist": "Watchlist",
   "azure-native:securityinsights:WatchlistItem": "WatchlistItem",
   "azure-native:securityinsights:WorkspaceManagerAssignment": "WorkspaceManagerAssignment",
   "azure-native:securityinsights:WorkspaceManagerConfiguration": "WorkspaceManagerConfiguration",
   "azure-native:securityinsights:WorkspaceManagerGroup": "WorkspaceManagerGroup",
   "azure-native:securityinsights:WorkspaceManagerMember": "WorkspaceManagerMember"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "serialconsole",
  "fqn": "pulumi_azure_native.serialconsole",
  "classes": {
   "azure-native:serialconsole:SerialPort": "SerialPort"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "servicebus",
  "fqn": "pulumi_azure_native.servicebus",
  "classes": {
   "azure-native:servicebus:DisasterRecoveryConfig": "DisasterRecoveryConfig",
   "azure-native:servicebus:MigrationConfig": "MigrationConfig",
   "azure-native:servicebus:Namespace": "Namespace",
   "azure-native:servicebus:NamespaceAuthorizationRule": "NamespaceAuthorizationRule",
   "azure-native:servicebus:NamespaceIpFilterRule": "NamespaceIpFilterRule",
   "azure-native:servicebus:NamespaceNetworkRuleSet": "NamespaceNetworkRuleSet",
   "azure-native:servicebus:NamespaceVirtualNetworkRule": "NamespaceVirtualNetworkRule",
   "azure-native:servicebus:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:servicebus:Queue": "Queue",
   "azure-native:servicebus:QueueAuthorizationRule": "QueueAuthorizationRule",
   "azure-native:servicebus:Rule": "Rule",
   "azure-native:servicebus:Subscription": "Subscription",
   "azure-native:servicebus:Topic": "Topic",
   "azure-native:servicebus:TopicAuthorizationRule": "TopicAuthorizationRule"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "servicefabric",
  "fqn": "pulumi_azure_native.servicefabric",
  "classes": {
   "azure-native:servicefabric:Application": "Application",
   "azure-native:servicefabric:ApplicationType": "ApplicationType",
   "azure-native:servicefabric:ApplicationTypeVersion": "ApplicationTypeVersion",
   "azure-native:servicefabric:ManagedCluster": "ManagedCluster",
   "azure-native:servicefabric:ManagedClusterApplication": "ManagedClusterApplication",
   "azure-native:servicefabric:ManagedClusterApplicationType": "ManagedClusterApplicationType",
   "azure-native:servicefabric:ManagedClusterApplicationTypeVersion": "ManagedClusterApplicationTypeVersion",
   "azure-native:servicefabric:ManagedClusterService": "ManagedClusterService",
   "azure-native:servicefabric:NodeType": "NodeType",
   "azure-native:servicefabric:Service": "Service"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "servicefabricmesh",
  "fqn": "pulumi_azure_native.servicefabricmesh",
  "classes": {
   "azure-native:servicefabricmesh:Application": "Application",
   "azure-native:servicefabricmesh:Gateway": "Gateway",
   "azure-native:servicefabricmesh:Network": "Network",
   "azure-native:servicefabricmesh:Secret": "Secret",
   "azure-native:servicefabricmesh:SecretValue": "SecretValue",
   "azure-native:servicefabricmesh:Volume": "Volume"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "servicelinker",
  "fqn": "pulumi_azure_native.servicelinker",
  "classes": {
   "azure-native:servicelinker:Connector": "Connector",
   "azure-native:servicelinker:ConnectorDryrun": "ConnectorDryrun",
   "azure-native:servicelinker:Linker": "Linker",
   "azure-native:servicelinker:LinkerDryrun": "LinkerDryrun"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "servicenetworking",
  "fqn": "pulumi_azure_native.servicenetworking",
  "classes": {
   "azure-native:servicenetworking:AssociationsInterface": "AssociationsInterface",
   "azure-native:servicenetworking:FrontendsInterface": "FrontendsInterface",
   "azure-native:servicenetworking:SecurityPoliciesInterface": "SecurityPoliciesInterface",
   "azure-native:servicenetworking:TrafficControllerInterface": "TrafficControllerInterface"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "signalrservice",
  "fqn": "pulumi_azure_native.signalrservice",
  "classes": {
   "azure-native:signalrservice:SignalR": "SignalR",
   "azure-native:signalrservice:SignalRCustomCertificate": "SignalRCustomCertificate",
   "azure-native:signalrservice:SignalRCustomDomain": "SignalRCustomDomain",
   "azure-native:signalrservice:SignalRPrivateEndpointConnection": "SignalRPrivateEndpointConnection",
   "azure-native:signalrservice:SignalRReplica": "SignalRReplica",
   "azure-native:signalrservice:SignalRSharedPrivateLinkResource": "SignalRSharedPrivateLinkResource"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "softwareplan",
  "fqn": "pulumi_azure_native.softwareplan",
  "classes": {
   "azure-native:softwareplan:HybridUseBenefit": "HybridUseBenefit"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "solutions",
  "fqn": "pulumi_azure_native.solutions",
  "classes": {
   "azure-native:solutions:Application": "Application",
   "azure-native:solutions:ApplicationDefinition": "ApplicationDefinition",
   "azure-native:solutions:JitRequest": "JitRequest"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "sovereign",
  "fqn": "pulumi_azure_native.sovereign",
  "classes": {
   "azure-native:sovereign:LandingZoneAccountOperation": "LandingZoneAccountOperation",
   "azure-native:sovereign:LandingZoneConfigurationOperation": "LandingZoneConfigurationOperation",
   "azure-native:sovereign:LandingZoneRegistrationOperation": "LandingZoneRegistrationOperation"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "sql",
  "fqn": "pulumi_azure_native.sql",
  "classes": {
   "azure-native:sql:BackupLongTermRetentionPolicy": "BackupLongTermRetentionPolicy",
   "azure-native:sql:BackupShortTermRetentionPolicy": "BackupShortTermRetentionPolicy",
   "azure-native:sql:DataMaskingPolicy": "DataMaskingPolicy",
   "azure-native:sql:Database": "Database",
   "azure-native:sql:DatabaseAdvisor": "DatabaseAdvisor",
   "azure-native:sql:DatabaseBlobAuditingPolicy": "DatabaseBlobAuditingPolicy",
   "azure-native:sql:DatabaseSecurityAlertPolicy": "DatabaseSecurityAlertPolicy",
   "azure-native:sql:DatabaseSqlVulnerabilityAssessmentRuleBaseline": "DatabaseSqlVulnerabilityAssessmentRuleBaseline",
   "azure-native:sql:DatabaseThreatDetectionPolicy": "DatabaseThreatDetectionPolicy",
   "azure-native:sql:DatabaseVulnerabilityAssessment": "DatabaseVulnerabilityAssessment",
   "azure-native:sql:DatabaseVulnerabilityAssessmentRuleBaseline": "DatabaseVulnerabilityAssessmentRuleBaseline",
   "azure-native:sql:DisasterRecoveryConfiguration": "DisasterRecoveryConfiguration",
   "azure-native:sql:DistributedAvailabilityGroup": "DistributedAvailabilityGroup",
   "azure-native:sql:ElasticPool": "ElasticPool",
   "azure-native:sql:EncryptionProtector": "EncryptionProtector",
   "azure-native:sql:ExtendedDatabaseBlobAuditingPolicy": "ExtendedDatabaseBlobAuditingPolicy",
   "azure-native:sql:ExtendedServerBlobAuditingPolicy": "ExtendedServerBlobAuditingPolicy",
   "azure-native:sql:FailoverGroup": "FailoverGroup",
   "azure-native:sql:FirewallRule": "FirewallRule",
   "azure-native:sql:GeoBackupPolicy": "GeoBackupPolicy",
   "azure-native:sql:IPv6FirewallRule": "IPv6FirewallRule",
   "azure-native:sql:InstanceFailoverGroup": "InstanceFailoverGroup",
   "azure-native:sql:InstancePool": "InstancePool",
   "azure-native:sql:Job": "Job",
   "azure-native:sql:JobAgent": "JobAgent",
   "azure-native:sql:JobCredential": "JobCredential",
   "azure-native:sql:JobPrivateEndpoint": "JobPrivateEndpoint",
   "azure-native:sql:JobStep": "JobStep",
   "azure-native:sql:JobTargetGroup": "JobTargetGroup",
   "azure-native:sql:LongTermRetentionPolicy": "LongTermRetentionPolicy",
   "azure-native:sql:ManagedDatabase": "ManagedDatabase",
   "azure-native:sql:ManagedDatabaseSensitivityLabel": "ManagedDatabaseSensitivityLabel",
   "azure-native:sql:ManagedDatabaseVulnerabilityAssessment": "ManagedDatabaseVulnerabilityAssessment",
   "azure-native:sql:ManagedDatabaseVulnerabilityAssessmentRuleBaseline": "ManagedDatabaseVulnerabilityAssessmentRuleBaseline",
   "azure-native:sql:ManagedInstance": "ManagedInstance",
   "azure-native:sql:ManagedInstanceAdministrator": "ManagedInstanceAdministrator",
   "azure-native:sql:ManagedInstanceAzureADOnlyAuthentication": "ManagedInstanceAzureADOnlyAuthentication",
   "azure-native:sql:ManagedInstanceKey": "ManagedInstanceKey",
   "azure-native:sql:ManagedInstanceLongTermRetentionPolicy": "ManagedInstanceLongTermRetentionPolicy",
   "azure-native:sql:ManagedInstancePrivateEndpointConnection": "ManagedInstancePrivateEndpointConnection",
   "azure-native:sql:ManagedInstanceVulnerabilityAssessment": "ManagedInstanceVulnerabilityAssessment",
   "azure-native:sql:ManagedServerDnsAlias": "ManagedServerDnsAlias",
   "azure-native:sql:OutboundFirewallRule": "OutboundFirewallRule",
   "azure-native:sql:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:sql:ReplicationLink": "ReplicationLink",
   "azure-native:sql:SensitivityLabel": "SensitivityLabel",
   "azure-native:sql:Server": "Server",
   "azure-native:sql:ServerAdvisor": "ServerAdvisor",
   "azure-native:sql:ServerAzureADAdministrator": "ServerAzureADAdministrator",
   "azure-native:sql:ServerAzureADOnlyAuthentication": "ServerAzureADOnlyAuthentication",
   "azure-native:sql:ServerBlobAuditingPolicy": "ServerBlobAuditingPolicy",
   "azure-native:sql:ServerCommunicationLink": "ServerCommunicationLink",
   "azure-native:sql:ServerDnsAlias": "ServerDnsAlias",
   "azure-native:sql:ServerKey": "ServerKey",
   "azure-native:sql:ServerSecurityAlertPolicy": "ServerSecurityAlertPolicy",
   "azure-native:sql:ServerTrustCertificate": "ServerTrustCertificate",
   "azure-native:sql:ServerTrustGroup": "ServerTrustGroup",
   "azure-native:sql:ServerVulnerabilityAssessment": "ServerVulnerabilityAssessment",
   "azure-native:sql:SqlVulnerabilityAssessmentRuleBaseline": "SqlVulnerabilityAssessmentRuleBaseline",
   "azure-native:sql:SqlVulnerabilityAssessmentsSetting": "SqlVulnerabilityAssessmentsSetting",
   "azure-native:sql:StartStopManagedInstanceSchedule": "StartStopManagedInstanceSchedule",
   "azure-native:sql:SyncAgent": "SyncAgent",
   "azure-native:sql:SyncGroup": "SyncGroup",
   "azure-native:sql:SyncMember": "SyncMember",
   "azure-native:sql:TransparentDataEncryption": "TransparentDataEncryption",
   "azure-native:sql:VirtualNetworkRule": "VirtualNetworkRule",
   "azure-native:sql:WorkloadClassifier": "WorkloadClassifier",
   "azure-native:sql:WorkloadGroup": "WorkloadGroup"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "sqlvirtualmachine",
  "fqn": "pulumi_azure_native.sqlvirtualmachine",
  "classes": {
   "azure-native:sqlvirtualmachine:AvailabilityGroupListener": "AvailabilityGroupListener",
   "azure-native:sqlvirtualmachine:SqlVirtualMachine": "SqlVirtualMachine",
   "azure-native:sqlvirtualmachine:SqlVirtualMachineGroup": "SqlVirtualMachineGroup"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "standbypool",
  "fqn": "pulumi_azure_native.standbypool",
  "classes": {
   "azure-native:standbypool:StandbyContainerGroupPool": "StandbyContainerGroupPool",
   "azure-native:standbypool:StandbyVirtualMachinePool": "StandbyVirtualMachinePool"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "storage",
  "fqn": "pulumi_azure_native.storage",
  "classes": {
   "azure-native:storage:Blob": "Blob",
   "azure-native:storage:BlobContainer": "BlobContainer",
   "azure-native:storage:BlobContainerImmutabilityPolicy": "BlobContainerImmutabilityPolicy",
   "azure-native:storage:BlobContainerLegalHold": "BlobContainerLegalHold",
   "azure-native:storage:BlobInventoryPolicy": "BlobInventoryPolicy",
   "azure-native:storage:BlobServiceProperties": "BlobServiceProperties",
   "azure-native:storage:EncryptionScope": "EncryptionScope",
   "azure-native:storage:FileServiceProperties": "FileServiceProperties",
   "azure-native:storage:FileShare": "FileShare",
   "azure-native:storage:LocalUser": "LocalUser",
   "azure-native:storage:ManagementPolicy": "ManagementPolicy",
   "azure-native:storage:ObjectReplicationPolicy": "ObjectReplicationPolicy",
   "azure-native:storage:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:storage:Queue": "Queue",
   "azure-native:storage:QueueServiceProperties": "QueueServiceProperties",
   "azure-native:storage:StorageAccount": "StorageAccount",
   "azure-native:storage:StorageAccountStaticWebsite": "StorageAccountStaticWebsite",
   "azure-native:storage:StorageTaskAssignment": "StorageTaskAssignment",
   "azure-native:storage:Table": "Table",
   "azure-native:storage:TableServiceProperties": "TableServiceProperties"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "storageactions",
  "fqn": "pulumi_azure_native.storageactions",
  "classes": {
   "azure-native:storageactions:StorageTask": "StorageTask"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "storagecache",
  "fqn": "pulumi_azure_native.storagecache",
  "classes": {
   "azure-native:storagecache:AmlFilesystem": "AmlFilesystem",
   "azure-native:storagecache:Cache": "Cache",
   "azure-native:storagecache:ImportJob": "ImportJob",
   "azure-native:storagecache:StorageTarget": "StorageTarget"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "storagemover",
  "fqn": "pulumi_azure_native.storagemover",
  "classes": {
   "azure-native:storagemover:Agent": "Agent",
   "azure-native:storagemover:Endpoint": "Endpoint",
   "azure-native:storagemover:JobDefinition": "JobDefinition",
   "azure-native:storagemover:Project": "Project",
   "azure-native:storagemover:StorageMover": "StorageMover"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "storagepool",
  "fqn": "pulumi_azure_native.storagepool",
  "classes": {
   "azure-native:storagepool:DiskPool": "DiskPool",
   "azure-native:storagepool:IscsiTarget": "IscsiTarget"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "storagesync",
  "fqn": "pulumi_azure_native.storagesync",
  "classes": {
   "azure-native:storagesync:CloudEndpoint": "CloudEndpoint",
   "azure-native:storagesync:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:storagesync:RegisteredServer": "RegisteredServer",
   "azure-native:storagesync:ServerEndpoint": "ServerEndpoint",
   "azure-native:storagesync:StorageSyncService": "StorageSyncService",
   "azure-native:storagesync:SyncGroup": "SyncGroup"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "storsimple",
  "fqn": "pulumi_azure_native.storsimple",
  "classes": {
   "azure-native:storsimple:AccessControlRecord": "AccessControlRecord",
   "azure-native:storsimple:BackupPolicy": "BackupPolicy",
   "azure-native:storsimple:BackupSchedule": "BackupSchedule",
   "azure-native:storsimple:BandwidthSetting": "BandwidthSetting",
   "azure-native:storsimple:Manager": "Manager",
   "azure-native:storsimple:ManagerExtendedInfo": "ManagerExtendedInfo",
   "azure-native:storsimple:StorageAccountCredential": "StorageAccountCredential",
   "azure-native:storsimple:Volume": "Volume",
   "azure-native:storsimple:VolumeContainer": "VolumeContainer"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "streamanalytics",
  "fqn": "pulumi_azure_native.streamanalytics",
  "classes": {
   "azure-native:streamanalytics:Cluster": "Cluster",
   "azure-native:streamanalytics:Function": "Function",
   "azure-native:streamanalytics:Input": "Input",
   "azure-native:streamanalytics:Output": "Output",
   "azure-native:streamanalytics:PrivateEndpoint": "PrivateEndpoint",
   "azure-native:streamanalytics:StreamingJob": "StreamingJob"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "subscription",
  "fqn": "pulumi_azure_native.subscription",
  "classes": {
   "azure-native:subscription:Alias": "Alias",
   "azure-native:subscription:SubscriptionTarDirectory": "SubscriptionTarDirectory"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "synapse",
  "fqn": "pulumi_azure_native.synapse",
  "classes": {
   "azure-native:synapse:BigDataPool": "BigDataPool",
   "azure-native:synapse:DatabasePrincipalAssignment": "DatabasePrincipalAssignment",
   "azure-native:synapse:EventGridDataConnection": "EventGridDataConnection",
   "azure-native:synapse:EventHubDataConnection": "EventHubDataConnection",
   "azure-native:synapse:IntegrationRuntime": "IntegrationRuntime",
   "azure-native:synapse:IotHubDataConnection": "IotHubDataConnection",
   "azure-native:synapse:IpFirewallRule": "IpFirewallRule",
   "azure-native:synapse:Key": "Key",
   "azure-native:synapse:KustoPool": "KustoPool",
   "azure-native:synapse:KustoPoolAttachedDatabaseConfiguration": "KustoPoolAttachedDatabaseConfiguration",
   "azure-native:synapse:KustoPoolDatabasePrincipalAssignment": "KustoPoolDatabasePrincipalAssignment",
   "azure-native:synapse:KustoPoolPrincipalAssignment": "KustoPoolPrincipalAssignment",
   "azure-native:synapse:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:synapse:PrivateLinkHub": "PrivateLinkHub",
   "azure-native:synapse:ReadOnlyFollowingDatabase": "ReadOnlyFollowingDatabase",
   "azure-native:synapse:ReadWriteDatabase": "ReadWriteDatabase",
   "azure-native:synapse:SqlPool": "SqlPool",
   "azure-native:synapse:SqlPoolSensitivityLabel": "SqlPoolSensitivityLabel",
   "azure-native:synapse:SqlPoolTransparentDataEncryption": "SqlPoolTransparentDataEncryption",
   "azure-native:synapse:SqlPoolVulnerabilityAssessment": "SqlPoolVulnerabilityAssessment",
   "azure-native:synapse:SqlPoolVulnerabilityAssessmentRuleBaseline": "SqlPoolVulnerabilityAssessmentRuleBaseline",
   "azure-native:synapse:SqlPoolWorkloadClassifier": "SqlPoolWorkloadClassifier",
   "azure-native:synapse:SqlPoolWorkloadGroup": "SqlPoolWorkloadGroup",
   "azure-native:synapse:Workspace": "Workspace",
   "azure-native:synapse:WorkspaceAadAdmin": "WorkspaceAadAdmin",
   "azure-native:synapse:WorkspaceManagedSqlServerVulnerabilityAssessment": "WorkspaceManagedSqlServerVulnerabilityAssessment",
   "azure-native:synapse:WorkspaceSqlAadAdmin": "WorkspaceSqlAadAdmin"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "syntex",
  "fqn": "pulumi_azure_native.syntex",
  "classes": {
   "azure-native:syntex:DocumentProcessor": "DocumentProcessor"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "testbase",
  "fqn": "pulumi_azure_native.testbase",
  "classes": {
   "azure-native:testbase:ActionRequest": "ActionRequest",
   "azure-native:testbase:Credential": "Credential",
   "azure-native:testbase:CustomImage": "CustomImage",
   "azure-native:testbase:CustomerEvent": "CustomerEvent",
   "azure-native:testbase:DraftPackage": "DraftPackage",
   "azure-native:testbase:FavoriteProcess": "FavoriteProcess",
   "azure-native:testbase:ImageDefinition": "ImageDefinition",
   "azure-native:testbase:Package": "Package",
   "azure-native:testbase:TestBaseAccount": "TestBaseAccount"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "timeseriesinsights",
  "fqn": "pulumi_azure_native.timeseriesinsights",
  "classes": {
   "azure-native:timeseriesinsights:AccessPolicy": "AccessPolicy",
   "azure-native:timeseriesinsights:EventHubEventSource": "EventHubEventSource",
   "azure-native:timeseriesinsights:Gen1Environment": "Gen1Environment",
   "azure-native:timeseriesinsights:Gen2Environment": "Gen2Environment",
   "azure-native:timeseriesinsights:IoTHubEventSource": "IoTHubEventSource",
   "azure-native:timeseriesinsights:ReferenceDataSet": "ReferenceDataSet"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "trafficmanager",
  "fqn": "pulumi_azure_native.trafficmanager",
  "classes": {
   "azure-native:trafficmanager:Endpoint": "Endpoint",
   "azure-native:trafficmanager:Profile": "Profile",
   "azure-native:trafficmanager:TrafficManagerUserMetricsKey": "TrafficManagerUserMetricsKey"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "verifiedid",
  "fqn": "pulumi_azure_native.verifiedid",
  "classes": {
   "azure-native:verifiedid:Authority": "Authority"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "videoanalyzer",
  "fqn": "pulumi_azure_native.videoanalyzer",
  "classes": {
   "azure-native:videoanalyzer:AccessPolicy": "AccessPolicy",
   "azure-native:videoanalyzer:EdgeModule": "EdgeModule",
   "azure-native:videoanalyzer:LivePipeline": "LivePipeline",
   "azure-native:videoanalyzer:PipelineJob": "PipelineJob",
   "azure-native:videoanalyzer:PipelineTopology": "PipelineTopology",
   "azure-native:videoanalyzer:PrivateEndpointConnection": "PrivateEndpointConnection",
   "azure-native:videoanalyzer:Video": "Video",
   "azure-native:videoanalyzer:VideoAnalyzer": "VideoAnalyzer"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "videoindexer",
  "fqn": "pulumi_azure_native.videoindexer",
  "classes": {
   "azure-native:videoindexer:Account": "Account",
   "azure-native:videoindexer:PrivateEndpointConnection": "PrivateEndpointConnection"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "virtualmachineimages",
  "fqn": "pulumi_azure_native.virtualmachineimages",
  "classes": {
   "azure-native:virtualmachineimages:Trigger": "Trigger",
   "azure-native:virtualmachineimages:VirtualMachineImageTemplate": "VirtualMachineImageTemplate"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "vmwarecloudsimple",
  "fqn": "pulumi_azure_native.vmwarecloudsimple",
  "classes": {
   "azure-native:vmwarecloudsimple:DedicatedCloudNode": "DedicatedCloudNode",
   "azure-native:vmwarecloudsimple:DedicatedCloudService": "DedicatedCloudService",
   "azure-native:vmwarecloudsimple:VirtualMachine": "VirtualMachine"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "voiceservices",
  "fqn": "pulumi_azure_native.voiceservices",
  "classes": {
   "azure-native:voiceservices:CommunicationsGateway": "CommunicationsGateway",
   "azure-native:voiceservices:Contact": "Contact",
   "azure-native:voiceservices:TestLine": "TestLine"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "web",
  "fqn": "pulumi_azure_native.web",
  "classes": {
   "azure-native:web:AppServiceEnvironment": "AppServiceEnvironment",
   "azure-native:web:AppServiceEnvironmentAseCustomDnsSuffixConfiguration": "AppServiceEnvironmentAseCustomDnsSuffixConfiguration",
   "azure-native:web:AppServiceEnvironmentPrivateEndpointConnection": "AppServiceEnvironmentPrivateEndpointConnection",
   "azure-native:web:AppServicePlan": "AppServicePlan",
   "azure-native:web:AppServicePlanRouteForVnet": "AppServicePlanRouteForVnet",
   "azure-native:web:Certificate": "Certificate",
   "azure-native:web:Connection": "Connection",
   "azure-native:web:ConnectionGateway": "ConnectionGateway",
   "azure-native:web:CustomApi": "CustomApi",
   "azure-native:web:KubeEnvironment": "KubeEnvironment",
   "azure-native:web:StaticSite": "StaticSite",
   "azure-native:web:StaticSiteBuildDatabaseConnection": "StaticSiteBuildDatabaseConnection",
   "azure-native:web:StaticSiteCustomDomain": "StaticSiteCustomDomain",
   "azure-native:web:StaticSiteDatabaseConnection": "StaticSiteDatabaseConnection",
   "azure-native:web:StaticSiteLinkedBackend": "StaticSiteLinkedBackend",
   "azure-native:web:StaticSiteLinkedBackendForBuild": "StaticSiteLinkedBackendForBuild",
   "azure-native:web:StaticSitePrivateEndpointConnection": "StaticSitePrivateEndpointConnection",
   "azure-native:web:StaticSiteUserProvidedFunctionAppForStaticSite": "StaticSiteUserProvidedFunctionAppForStaticSite",
   "azure-native:web:StaticSiteUserProvidedFunctionAppForStaticSiteBuild": "StaticSiteUserProvidedFunctionAppForStaticSiteBuild",
   "azure-native:web:WebApp": "WebApp",
   "azure-native:web:WebAppApplicationSettings": "WebAppApplicationSettings",
   "azure-native:web:WebAppApplicationSettingsSlot": "WebAppApplicationSettingsSlot",
   "azure-native:web:WebAppAuthSettings": "WebAppAuthSettings",
   "azure-native:web:WebAppAuthSettingsSlot": "WebAppAuthSettingsSlot",
   "azure-native:web:WebAppAuthSettingsV2": "WebAppAuthSettingsV2",
   "azure-native:web:WebAppAuthSettingsV2Slot": "WebAppAuthSettingsV2Slot",
   "azure-native:web:WebAppAzureStorageAccounts": "WebAppAzureStorageAccounts",
   "azure-native:web:WebAppAzureStorageAccountsSlot": "WebAppAzureStorageAccountsSlot",
   "azure-native:web:WebAppBackupConfiguration": "WebAppBackupConfiguration",
   "azure-native:web:WebAppBackupConfigurationSlot": "WebAppBackupConfigurationSlot",
   "azure-native:web:WebAppConnectionStrings": "WebAppConnectionStrings",
   "azure-native:web:WebAppConnectionStringsSlot": "WebAppConnectionStringsSlot",
   "azure-native:web:WebAppDeployment": "WebAppDeployment",
   "azure-native:web:WebAppDeploymentSlot": "WebAppDeploymentSlot",
   "azure-native:web:WebAppDiagnosticLogsConfiguration": "WebAppDiagnosticLogsConfiguration",
   "azure-native:web:WebAppDiagnosticLogsConfigurationSlot": "WebAppDiagnosticLogsConfigurationSlot",
   "azure-native:web:WebAppDomainOwnershipIdentifier": "WebAppDomainOwnershipIdentifier",
   "azure-native:web:WebAppDomainOwnershipIdentifierSlot": "WebAppDomainOwnershipIdentifierSlot",
   "azure-native:web:WebAppFtpAllowed": "WebAppFtpAllowed",
   "azure-native:web:WebAppFtpAllowedSlot": "WebAppFtpAllowedSlot",
   "azure-native:web:WebAppFunction": "WebAppFunction",
   "azure-native:web:WebAppHostNameBinding": "WebAppHostNameBinding",
   "azure-native:web:WebAppHostNameBindingSlot": "WebAppHostNameBindingSlot",
   "azure-native:web:WebAppHybridConnection": "WebAppHybridConnection",
   "azure-native:web:WebAppHybridConnectionSlot": "WebAppHybridConnectionSlot",
   "azure-native:web:WebAppInstanceFunctionSlot": "WebAppInstanceFunctionSlot",
   "azure-native:web:WebAppMetadata": "WebAppMetadata",
   "azure-native:web:WebAppMetadataSlot": "WebAppMetadataSlot",
   "azure-native:web:WebAppPremierAddOn": "WebAppPremierAddOn",
   "azure-native:web:WebAppPremierAddOnSlot": "WebAppPremierAddOnSlot",
   "azure-native:web:WebAppPrivateEndpointConnection": "WebAppPrivateEndpointConnection",
   "azure-native:web:WebAppPrivateEndpointConnectionSlot": "WebAppPrivateEndpointConnectionSlot",
   "azure-native:web:WebAppPublicCertificate": "WebAppPublicCertificate",
   "azure-native:web:WebAppPublicCertificateSlot": "WebAppPublicCertificateSlot",
   "azure-native:web:WebAppRelayServiceConnection": "WebAppRelayServiceConnection",
   "azure-native:web:WebAppRelayServiceConnectionSlot": "WebAppRelayServiceConnectionSlot",
   "azure-native:web:WebAppScmAllowed": "WebAppScmAllowed",
   "azure-native:web:WebAppScmAllowedSlot": "WebAppScmAllowedSlot",
   "azure-native:web:WebAppSiteContainer": "WebAppSiteContainer",
   "azure-native:web:WebAppSiteContainerSlot": "WebAppSiteContainerSlot",
   "azure-native:web:WebAppSiteExtension": "WebAppSiteExtension",
   "azure-native:web:WebAppSiteExtensionSlot": "WebAppSiteExtensionSlot",
   "azure-native:web:WebAppSitePushSettings": "WebAppSitePushSettings",
   "azure-native:web:WebAppSitePushSettingsSlot": "WebAppSitePushSettingsSlot",
   "azure-native:web:WebAppSlot": "WebAppSlot",
   "azure-native:web:WebAppSlotConfigurationNames": "WebAppSlotConfigurationNames",
   "azure-native:web:WebAppSourceControl": "WebAppSourceControl",
   "azure-native:web:WebAppSourceControlSlot": "WebAppSourceControlSlot",
   "azure-native:web:WebAppSwiftVirtualNetworkConnection": "WebAppSwiftVirtualNetworkConnection",
   "azure-native:web:WebAppSwiftVirtualNetworkConnectionSlot": "WebAppSwiftVirtualNetworkConnectionSlot",
   "azure-native:web:WebAppVnetConnection": "WebAppVnetConnection",
   "azure-native:web:WebAppVnetConnectionSlot": "WebAppVnetConnectionSlot"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "webpubsub",
  "fqn": "pulumi_azure_native.webpubsub",
  "classes": {
   "azure-native:webpubsub:WebPubSub": "WebPubSub",
   "azure-native:webpubsub:WebPubSubCustomCertificate": "WebPubSubCustomCertificate",
   "azure-native:webpubsub:WebPubSubCustomDomain": "WebPubSubCustomDomain",
   "azure-native:webpubsub:WebPubSubHub": "WebPubSubHub",
   "azure-native:webpubsub:WebPubSubPrivateEndpointConnection": "WebPubSubPrivateEndpointConnection",
   "azure-native:webpubsub:WebPubSubReplica": "WebPubSubReplica",
   "azure-native:webpubsub:WebPubSubSharedPrivateLinkResource": "WebPubSubSharedPrivateLinkResource"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "weightsandbiases",
  "fqn": "pulumi_azure_native.weightsandbiases",
  "classes": {
   "azure-native:weightsandbiases:Instance": "Instance"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "windowsesu",
  "fqn": "pulumi_azure_native.windowsesu",
  "classes": {
   "azure-native:windowsesu:MultipleActivationKey": "MultipleActivationKey"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "windowsiot",
  "fqn": "pulumi_azure_native.windowsiot",
  "classes": {
   "azure-native:windowsiot:Service": "Service"
  }
 },
 {
  "pkg": "azure-native",
  "mod": "workloads",
  "fqn": "pulumi_azure_native.workloads",
  "classes": {
   "azure-native:workloads:ACSSBackupConnection": "ACSSBackupConnection",
   "azure-native:workloads:Alert": "Alert",
   "azure-native:workloads:Connector": "Connector",
   "azure-native:workloads:Monitor": "Monitor",
   "azure-native:workloads:ProviderInstance": "ProviderInstance",
   "azure-native:workloads:SapApplicationServerInstance": "SapApplicationServerInstance",
   "azure-native:workloads:SapCentralServerInstance": "SapCentralServerInstance",
   "azure-native:workloads:SapDatabaseInstance": "SapDatabaseInstance",
   "azure-native:workloads:SapDiscoverySite": "SapDiscoverySite",
   "azure-native:workloads:SapInstance": "SapInstance",
   "azure-native:workloads:SapLandscapeMonitor": "SapLandscapeMonitor",
   "azure-native:workloads:SapVirtualInstance": "SapVirtualInstance",
   "azure-native:workloads:ServerInstance": "ServerInstance"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "azure-native",
  "token": "pulumi:providers:azure-native",
  "fqn": "pulumi_azure_native",
  "class": "Provider"
 }
]
"""
)
