# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from ._enums import *

__all__ = [
    'AzureResourceManagerCommonTypesExtendedLocationArgs',
    'AzureResourceManagerCommonTypesExtendedLocationArgsDict',
    'KubernetesSecretObjectMappingArgs',
    'KubernetesSecretObjectMappingArgsDict',
]

MYPY = False

if not MYPY:
    class AzureResourceManagerCommonTypesExtendedLocationArgsDict(TypedDict):
        """
        The complex type of the extended location.
        """
        name: pulumi.Input[str]
        """
        The name of the extended location.
        """
        type: pulumi.Input[Union[str, 'ExtendedLocationType']]
        """
        The type of the extended location.
        """
elif False:
    AzureResourceManagerCommonTypesExtendedLocationArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class AzureResourceManagerCommonTypesExtendedLocationArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 type: pulumi.Input[Union[str, 'ExtendedLocationType']]):
        """
        The complex type of the extended location.
        :param pulumi.Input[str] name: The name of the extended location.
        :param pulumi.Input[Union[str, 'ExtendedLocationType']] type: The type of the extended location.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        The name of the extended location.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[Union[str, 'ExtendedLocationType']]:
        """
        The type of the extended location.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[Union[str, 'ExtendedLocationType']]):
        pulumi.set(self, "type", value)


if not MYPY:
    class KubernetesSecretObjectMappingArgsDict(TypedDict):
        """
        Properties defining the mapping between a cloud secret store object and a Kubernetes Secret.
        """
        source_path: pulumi.Input[str]
        """
        SourcePath is the identifier for the secret data as defined by the external secret provider. This is the key or path to the secret in the provider's system, which gets mounted to a specific path in the pod. The value should match the name of the secret as specified in the SecretProviderClass's objects array.
        """
        target_key: pulumi.Input[str]
        """
        TargetKey is the key in the Kubernetes secret's data field where the secret value will be stored. This key is used to reference the secret data within Kubernetes, and it should be unique within the secret.
        """
elif False:
    KubernetesSecretObjectMappingArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class KubernetesSecretObjectMappingArgs:
    def __init__(__self__, *,
                 source_path: pulumi.Input[str],
                 target_key: pulumi.Input[str]):
        """
        Properties defining the mapping between a cloud secret store object and a Kubernetes Secret.
        :param pulumi.Input[str] source_path: SourcePath is the identifier for the secret data as defined by the external secret provider. This is the key or path to the secret in the provider's system, which gets mounted to a specific path in the pod. The value should match the name of the secret as specified in the SecretProviderClass's objects array.
        :param pulumi.Input[str] target_key: TargetKey is the key in the Kubernetes secret's data field where the secret value will be stored. This key is used to reference the secret data within Kubernetes, and it should be unique within the secret.
        """
        pulumi.set(__self__, "source_path", source_path)
        pulumi.set(__self__, "target_key", target_key)

    @property
    @pulumi.getter(name="sourcePath")
    def source_path(self) -> pulumi.Input[str]:
        """
        SourcePath is the identifier for the secret data as defined by the external secret provider. This is the key or path to the secret in the provider's system, which gets mounted to a specific path in the pod. The value should match the name of the secret as specified in the SecretProviderClass's objects array.
        """
        return pulumi.get(self, "source_path")

    @source_path.setter
    def source_path(self, value: pulumi.Input[str]):
        pulumi.set(self, "source_path", value)

    @property
    @pulumi.getter(name="targetKey")
    def target_key(self) -> pulumi.Input[str]:
        """
        TargetKey is the key in the Kubernetes secret's data field where the secret value will be stored. This key is used to reference the secret data within Kubernetes, and it should be unique within the secret.
        """
        return pulumi.get(self, "target_key")

    @target_key.setter
    def target_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "target_key", value)


