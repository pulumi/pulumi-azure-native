# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._enums import *

__all__ = ['AzureServersSettingArgs', 'AzureServersSetting']

@pulumi.input_type
class AzureServersSettingArgs:
    def __init__(__self__, *,
                 kind: pulumi.Input[str],
                 selected_provider: pulumi.Input[Union[str, 'ServerVulnerabilityAssessmentsAzureSettingSelectedProvider']],
                 setting_kind: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a AzureServersSetting resource.
        :param pulumi.Input[str] kind: The kind of the server vulnerability assessments setting
               Expected value is 'AzureServersSetting'.
        :param pulumi.Input[Union[str, 'ServerVulnerabilityAssessmentsAzureSettingSelectedProvider']] selected_provider: The selected vulnerability assessments provider on Azure servers in the defined scope.
        :param pulumi.Input[str] setting_kind: The kind of the server vulnerability assessments setting
        """
        pulumi.set(__self__, "kind", 'AzureServersSetting')
        pulumi.set(__self__, "selected_provider", selected_provider)
        if setting_kind is not None:
            pulumi.set(__self__, "setting_kind", setting_kind)

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Input[str]:
        """
        The kind of the server vulnerability assessments setting
        Expected value is 'AzureServersSetting'.
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: pulumi.Input[str]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter(name="selectedProvider")
    def selected_provider(self) -> pulumi.Input[Union[str, 'ServerVulnerabilityAssessmentsAzureSettingSelectedProvider']]:
        """
        The selected vulnerability assessments provider on Azure servers in the defined scope.
        """
        return pulumi.get(self, "selected_provider")

    @selected_provider.setter
    def selected_provider(self, value: pulumi.Input[Union[str, 'ServerVulnerabilityAssessmentsAzureSettingSelectedProvider']]):
        pulumi.set(self, "selected_provider", value)

    @property
    @pulumi.getter(name="settingKind")
    def setting_kind(self) -> Optional[pulumi.Input[str]]:
        """
        The kind of the server vulnerability assessments setting
        """
        return pulumi.get(self, "setting_kind")

    @setting_kind.setter
    def setting_kind(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "setting_kind", value)


class AzureServersSetting(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 selected_provider: Optional[pulumi.Input[Union[str, 'ServerVulnerabilityAssessmentsAzureSettingSelectedProvider']]] = None,
                 setting_kind: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        A vulnerability assessments setting on Azure servers in the defined scope.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] kind: The kind of the server vulnerability assessments setting
               Expected value is 'AzureServersSetting'.
        :param pulumi.Input[Union[str, 'ServerVulnerabilityAssessmentsAzureSettingSelectedProvider']] selected_provider: The selected vulnerability assessments provider on Azure servers in the defined scope.
        :param pulumi.Input[str] setting_kind: The kind of the server vulnerability assessments setting
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AzureServersSettingArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        A vulnerability assessments setting on Azure servers in the defined scope.

        :param str resource_name: The name of the resource.
        :param AzureServersSettingArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AzureServersSettingArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 selected_provider: Optional[pulumi.Input[Union[str, 'ServerVulnerabilityAssessmentsAzureSettingSelectedProvider']]] = None,
                 setting_kind: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AzureServersSettingArgs.__new__(AzureServersSettingArgs)

            if kind is None and not opts.urn:
                raise TypeError("Missing required property 'kind'")
            __props__.__dict__["kind"] = 'AzureServersSetting'
            if selected_provider is None and not opts.urn:
                raise TypeError("Missing required property 'selected_provider'")
            __props__.__dict__["selected_provider"] = selected_provider
            __props__.__dict__["setting_kind"] = setting_kind
            __props__.__dict__["name"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:security:AzureServersSetting")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(AzureServersSetting, __self__).__init__(
            'azure-native:security/v20230501:AzureServersSetting',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'AzureServersSetting':
        """
        Get an existing AzureServersSetting resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = AzureServersSettingArgs.__new__(AzureServersSettingArgs)

        __props__.__dict__["kind"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["selected_provider"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["type"] = None
        return AzureServersSetting(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Output[str]:
        """
        The kind of the server vulnerability assessments setting
        Expected value is 'AzureServersSetting'.
        """
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="selectedProvider")
    def selected_provider(self) -> pulumi.Output[str]:
        """
        The selected vulnerability assessments provider on Azure servers in the defined scope.
        """
        return pulumi.get(self, "selected_provider")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

