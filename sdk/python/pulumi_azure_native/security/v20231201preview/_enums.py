# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'ActionType',
    'EventSource',
    'MinimalRiskLevel',
    'MinimalSeverity',
    'Operator',
    'PropertyType',
    'SecurityContactRole',
    'SourceType',
    'State',
]


class ActionType(str, Enum):
    """
    The type of the action that will be triggered by the Automation
    """
    LOGIC_APP = "LogicApp"
    EVENT_HUB = "EventHub"
    WORKSPACE = "Workspace"


class EventSource(str, Enum):
    """
    A valid event source type.
    """
    ASSESSMENTS = "Assessments"
    ASSESSMENTS_SNAPSHOT = "AssessmentsSnapshot"
    SUB_ASSESSMENTS = "SubAssessments"
    SUB_ASSESSMENTS_SNAPSHOT = "SubAssessmentsSnapshot"
    ALERTS = "Alerts"
    SECURE_SCORES = "SecureScores"
    SECURE_SCORES_SNAPSHOT = "SecureScoresSnapshot"
    SECURE_SCORE_CONTROLS = "SecureScoreControls"
    SECURE_SCORE_CONTROLS_SNAPSHOT = "SecureScoreControlsSnapshot"
    REGULATORY_COMPLIANCE_ASSESSMENT = "RegulatoryComplianceAssessment"
    REGULATORY_COMPLIANCE_ASSESSMENT_SNAPSHOT = "RegulatoryComplianceAssessmentSnapshot"
    ATTACK_PATHS = "AttackPaths"
    ATTACK_PATHS_SNAPSHOT = "AttackPathsSnapshot"


class MinimalRiskLevel(str, Enum):
    """
    Defines the minimal attach path risk level which will be sent as email notifications
    """
    CRITICAL = "Critical"
    """
    Get notifications on new attack paths with Critical risk level
    """
    HIGH = "High"
    """
    Get notifications on new attack paths with High or Critical risk level
    """
    MEDIUM = "Medium"
    """
    Get notifications on new attach paths with Medium, High or Critical risk level
    """
    LOW = "Low"
    """
    Get notifications on new attach paths with Low, Medium, High or Critical risk level
    """


class MinimalSeverity(str, Enum):
    """
    Defines the minimal alert severity which will be sent as email notifications
    """
    HIGH = "High"
    """
    Get notifications on new alerts with High severity
    """
    MEDIUM = "Medium"
    """
    Get notifications on new alerts with Medium or High severity
    """
    LOW = "Low"
    """
    Get notifications on new alerts with Low, Medium or High severity
    """


class Operator(str, Enum):
    """
    A valid comparer operator to use. A case-insensitive comparison will be applied for String PropertyType.
    """
    EQUALS = "Equals"
    """
    Applies for decimal and non-decimal operands
    """
    GREATER_THAN = "GreaterThan"
    """
    Applies only for decimal operands
    """
    GREATER_THAN_OR_EQUAL_TO = "GreaterThanOrEqualTo"
    """
    Applies only for decimal operands
    """
    LESSER_THAN = "LesserThan"
    """
    Applies only for decimal operands
    """
    LESSER_THAN_OR_EQUAL_TO = "LesserThanOrEqualTo"
    """
    Applies only for decimal operands
    """
    NOT_EQUALS = "NotEquals"
    """
    Applies  for decimal and non-decimal operands
    """
    CONTAINS = "Contains"
    """
    Applies only for non-decimal operands
    """
    STARTS_WITH = "StartsWith"
    """
    Applies only for non-decimal operands
    """
    ENDS_WITH = "EndsWith"
    """
    Applies only for non-decimal operands
    """


class PropertyType(str, Enum):
    """
    The data type of the compared operands (string, integer, floating point number or a boolean [true/false]]
    """
    STRING = "String"
    INTEGER = "Integer"
    NUMBER = "Number"
    BOOLEAN = "Boolean"


class SecurityContactRole(str, Enum):
    """
    A possible role to configure sending security notification alerts to
    """
    ACCOUNT_ADMIN = "AccountAdmin"
    """
    If enabled, send notification on new alerts to the account admins
    """
    SERVICE_ADMIN = "ServiceAdmin"
    """
    If enabled, send notification on new alerts to the service admins
    """
    OWNER = "Owner"
    """
    If enabled, send notification on new alerts to the subscription owners
    """
    CONTRIBUTOR = "Contributor"
    """
    If enabled, send notification on new alerts to the subscription contributors
    """


class SourceType(str, Enum):
    """
    The source type that will trigger the notification
    """
    ALERT = "Alert"
    ATTACK_PATH = "AttackPath"


class State(str, Enum):
    """
    Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription.
    """
    ON = "On"
    """
    Send notification on new alerts to the subscription's admins
    """
    OFF = "Off"
    """
    Don't send notification on new alerts to the subscription's admins
    """
