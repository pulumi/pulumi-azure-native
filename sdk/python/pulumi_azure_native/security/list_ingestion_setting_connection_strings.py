# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'ListIngestionSettingConnectionStringsResult',
    'AwaitableListIngestionSettingConnectionStringsResult',
    'list_ingestion_setting_connection_strings',
    'list_ingestion_setting_connection_strings_output',
]

@pulumi.output_type
class ListIngestionSettingConnectionStringsResult:
    """
    Connection string for ingesting security data and logs
    """
    def __init__(__self__, value=None):
        if value and not isinstance(value, list):
            raise TypeError("Expected argument 'value' to be a list")
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def value(self) -> Sequence['outputs.IngestionConnectionStringResponse']:
        """
        Connection strings
        """
        return pulumi.get(self, "value")


class AwaitableListIngestionSettingConnectionStringsResult(ListIngestionSettingConnectionStringsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListIngestionSettingConnectionStringsResult(
            value=self.value)


def list_ingestion_setting_connection_strings(ingestion_setting_name: Optional[str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListIngestionSettingConnectionStringsResult:
    """
    Connection strings for ingesting security scan logs and data.
    Azure REST API version: 2021-01-15-preview.


    :param str ingestion_setting_name: Name of the ingestion setting
    """
    __args__ = dict()
    __args__['ingestionSettingName'] = ingestion_setting_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:security:listIngestionSettingConnectionStrings', __args__, opts=opts, typ=ListIngestionSettingConnectionStringsResult).value

    return AwaitableListIngestionSettingConnectionStringsResult(
        value=pulumi.get(__ret__, 'value'))


@_utilities.lift_output_func(list_ingestion_setting_connection_strings)
def list_ingestion_setting_connection_strings_output(ingestion_setting_name: Optional[pulumi.Input[str]] = None,
                                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ListIngestionSettingConnectionStringsResult]:
    """
    Connection strings for ingesting security scan logs and data.
    Azure REST API version: 2021-01-15-preview.


    :param str ingestion_setting_name: Name of the ingestion setting
    """
    ...
