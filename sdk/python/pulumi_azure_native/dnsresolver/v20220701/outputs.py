# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from . import outputs

__all__ = [
    'SubResourceResponse',
    'VirtualNetworkDnsForwardingRulesetResponse',
]

@pulumi.output_type
class SubResourceResponse(dict):
    """
    Reference to another ARM resource.
    """
    def __init__(__self__, *,
                 id: str):
        """
        Reference to another ARM resource.
        :param str id: Resource ID.
        """
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Resource ID.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class VirtualNetworkDnsForwardingRulesetResponse(dict):
    """
    Reference to DNS forwarding ruleset and associated virtual network link.
    """
    def __init__(__self__, *,
                 id: Optional[str] = None,
                 virtual_network_link: Optional['outputs.SubResourceResponse'] = None):
        """
        Reference to DNS forwarding ruleset and associated virtual network link.
        :param str id: DNS Forwarding Ruleset Resource ID.
        :param 'SubResourceResponse' virtual_network_link: The reference to the virtual network link.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if virtual_network_link is not None:
            pulumi.set(__self__, "virtual_network_link", virtual_network_link)

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        DNS Forwarding Ruleset Resource ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="virtualNetworkLink")
    def virtual_network_link(self) -> Optional['outputs.SubResourceResponse']:
        """
        The reference to the virtual network link.
        """
        return pulumi.get(self, "virtual_network_link")


