# coding=utf-8
# *** WARNING: this file was generated by pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from ._enums import *

__all__ = [
    'AzureDataExplorerConnectionPropertiesResponse',
    'SystemDataResponse',
]

@pulumi.output_type
class AzureDataExplorerConnectionPropertiesResponse(dict):
    """
    Properties of a time series database connection to Azure Data Explorer with data being sent via an EventHub.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "adxDatabaseName":
            suggest = "adx_database_name"
        elif key == "adxEndpointUri":
            suggest = "adx_endpoint_uri"
        elif key == "adxResourceId":
            suggest = "adx_resource_id"
        elif key == "connectionType":
            suggest = "connection_type"
        elif key == "eventHubEndpointUri":
            suggest = "event_hub_endpoint_uri"
        elif key == "eventHubEntityPath":
            suggest = "event_hub_entity_path"
        elif key == "eventHubNamespaceResourceId":
            suggest = "event_hub_namespace_resource_id"
        elif key == "provisioningState":
            suggest = "provisioning_state"
        elif key == "adxTableName":
            suggest = "adx_table_name"
        elif key == "eventHubConsumerGroup":
            suggest = "event_hub_consumer_group"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AzureDataExplorerConnectionPropertiesResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AzureDataExplorerConnectionPropertiesResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AzureDataExplorerConnectionPropertiesResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 adx_database_name: str,
                 adx_endpoint_uri: str,
                 adx_resource_id: str,
                 connection_type: str,
                 event_hub_endpoint_uri: str,
                 event_hub_entity_path: str,
                 event_hub_namespace_resource_id: str,
                 provisioning_state: str,
                 adx_table_name: Optional[str] = None,
                 event_hub_consumer_group: Optional[str] = None):
        """
        Properties of a time series database connection to Azure Data Explorer with data being sent via an EventHub.
        :param str adx_database_name: The name of the Azure Data Explorer database.
        :param str adx_endpoint_uri: The URI of the Azure Data Explorer endpoint.
        :param str adx_resource_id: The resource ID of the Azure Data Explorer cluster.
        :param str connection_type: The type of time series connection resource.
               Expected value is 'AzureDataExplorer'.
        :param str event_hub_endpoint_uri: The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
        :param str event_hub_entity_path: The EventHub name in the EventHub namespace for identity-based authentication.
        :param str event_hub_namespace_resource_id: The resource ID of the EventHub namespace.
        :param str provisioning_state: The provisioning state.
        :param str adx_table_name: The name of the Azure Data Explorer table. Defaults to AdtPropertyEvents.
        :param str event_hub_consumer_group: The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
        """
        pulumi.set(__self__, "adx_database_name", adx_database_name)
        pulumi.set(__self__, "adx_endpoint_uri", adx_endpoint_uri)
        pulumi.set(__self__, "adx_resource_id", adx_resource_id)
        pulumi.set(__self__, "connection_type", 'AzureDataExplorer')
        pulumi.set(__self__, "event_hub_endpoint_uri", event_hub_endpoint_uri)
        pulumi.set(__self__, "event_hub_entity_path", event_hub_entity_path)
        pulumi.set(__self__, "event_hub_namespace_resource_id", event_hub_namespace_resource_id)
        pulumi.set(__self__, "provisioning_state", provisioning_state)
        if adx_table_name is None:
            adx_table_name = 'AdtPropertyEvents'
        if adx_table_name is not None:
            pulumi.set(__self__, "adx_table_name", adx_table_name)
        if event_hub_consumer_group is None:
            event_hub_consumer_group = '$Default'
        if event_hub_consumer_group is not None:
            pulumi.set(__self__, "event_hub_consumer_group", event_hub_consumer_group)

    @property
    @pulumi.getter(name="adxDatabaseName")
    def adx_database_name(self) -> str:
        """
        The name of the Azure Data Explorer database.
        """
        return pulumi.get(self, "adx_database_name")

    @property
    @pulumi.getter(name="adxEndpointUri")
    def adx_endpoint_uri(self) -> str:
        """
        The URI of the Azure Data Explorer endpoint.
        """
        return pulumi.get(self, "adx_endpoint_uri")

    @property
    @pulumi.getter(name="adxResourceId")
    def adx_resource_id(self) -> str:
        """
        The resource ID of the Azure Data Explorer cluster.
        """
        return pulumi.get(self, "adx_resource_id")

    @property
    @pulumi.getter(name="connectionType")
    def connection_type(self) -> str:
        """
        The type of time series connection resource.
        Expected value is 'AzureDataExplorer'.
        """
        return pulumi.get(self, "connection_type")

    @property
    @pulumi.getter(name="eventHubEndpointUri")
    def event_hub_endpoint_uri(self) -> str:
        """
        The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
        """
        return pulumi.get(self, "event_hub_endpoint_uri")

    @property
    @pulumi.getter(name="eventHubEntityPath")
    def event_hub_entity_path(self) -> str:
        """
        The EventHub name in the EventHub namespace for identity-based authentication.
        """
        return pulumi.get(self, "event_hub_entity_path")

    @property
    @pulumi.getter(name="eventHubNamespaceResourceId")
    def event_hub_namespace_resource_id(self) -> str:
        """
        The resource ID of the EventHub namespace.
        """
        return pulumi.get(self, "event_hub_namespace_resource_id")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> str:
        """
        The provisioning state.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="adxTableName")
    def adx_table_name(self) -> Optional[str]:
        """
        The name of the Azure Data Explorer table. Defaults to AdtPropertyEvents.
        """
        return pulumi.get(self, "adx_table_name")

    @property
    @pulumi.getter(name="eventHubConsumerGroup")
    def event_hub_consumer_group(self) -> Optional[str]:
        """
        The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
        """
        return pulumi.get(self, "event_hub_consumer_group")


@pulumi.output_type
class SystemDataResponse(dict):
    """
    Metadata pertaining to creation and last modification of the resource.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "createdAt":
            suggest = "created_at"
        elif key == "createdBy":
            suggest = "created_by"
        elif key == "createdByType":
            suggest = "created_by_type"
        elif key == "lastModifiedAt":
            suggest = "last_modified_at"
        elif key == "lastModifiedBy":
            suggest = "last_modified_by"
        elif key == "lastModifiedByType":
            suggest = "last_modified_by_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in SystemDataResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 created_at: Optional[str] = None,
                 created_by: Optional[str] = None,
                 created_by_type: Optional[str] = None,
                 last_modified_at: Optional[str] = None,
                 last_modified_by: Optional[str] = None,
                 last_modified_by_type: Optional[str] = None):
        """
        Metadata pertaining to creation and last modification of the resource.
        :param str created_at: The timestamp of resource creation (UTC).
        :param str created_by: The identity that created the resource.
        :param str created_by_type: The type of identity that created the resource.
        :param str last_modified_at: The timestamp of resource last modification (UTC)
        :param str last_modified_by: The identity that last modified the resource.
        :param str last_modified_by_type: The type of identity that last modified the resource.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if created_by_type is not None:
            pulumi.set(__self__, "created_by_type", created_by_type)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by is not None:
            pulumi.set(__self__, "last_modified_by", last_modified_by)
        if last_modified_by_type is not None:
            pulumi.set(__self__, "last_modified_by_type", last_modified_by_type)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[str]:
        """
        The timestamp of resource creation (UTC).
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[str]:
        """
        The identity that created the resource.
        """
        return pulumi.get(self, "created_by")

    @property
    @pulumi.getter(name="createdByType")
    def created_by_type(self) -> Optional[str]:
        """
        The type of identity that created the resource.
        """
        return pulumi.get(self, "created_by_type")

    @property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[str]:
        """
        The timestamp of resource last modification (UTC)
        """
        return pulumi.get(self, "last_modified_at")

    @property
    @pulumi.getter(name="lastModifiedBy")
    def last_modified_by(self) -> Optional[str]:
        """
        The identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by")

    @property
    @pulumi.getter(name="lastModifiedByType")
    def last_modified_by_type(self) -> Optional[str]:
        """
        The type of identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by_type")


