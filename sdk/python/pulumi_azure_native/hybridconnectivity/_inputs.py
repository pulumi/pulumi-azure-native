# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'AwsCloudProfileArgs',
    'AwsCloudProfileArgsDict',
]

MYPY = False

if not MYPY:
    class AwsCloudProfileArgsDict(TypedDict):
        """
        cloud profile for AWS.
        """
        account_id: pulumi.Input[str]
        """
        Account id for the AWS account.
        """
        excluded_accounts: NotRequired[pulumi.Input[Sequence[pulumi.Input[str]]]]
        """
        List of AWS accounts which need to be excluded.
        """
        is_organizational_account: NotRequired[pulumi.Input[bool]]
        """
        Boolean value that indicates whether the account is organizational or not. True represents organization account, whereas false represents a single account.
        """
elif False:
    AwsCloudProfileArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class AwsCloudProfileArgs:
    def __init__(__self__, *,
                 account_id: pulumi.Input[str],
                 excluded_accounts: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 is_organizational_account: Optional[pulumi.Input[bool]] = None):
        """
        cloud profile for AWS.
        :param pulumi.Input[str] account_id: Account id for the AWS account.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] excluded_accounts: List of AWS accounts which need to be excluded.
        :param pulumi.Input[bool] is_organizational_account: Boolean value that indicates whether the account is organizational or not. True represents organization account, whereas false represents a single account.
        """
        pulumi.set(__self__, "account_id", account_id)
        if excluded_accounts is not None:
            pulumi.set(__self__, "excluded_accounts", excluded_accounts)
        if is_organizational_account is None:
            is_organizational_account = False
        if is_organizational_account is not None:
            pulumi.set(__self__, "is_organizational_account", is_organizational_account)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Input[str]:
        """
        Account id for the AWS account.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "account_id", value)

    @property
    @pulumi.getter(name="excludedAccounts")
    def excluded_accounts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List of AWS accounts which need to be excluded.
        """
        return pulumi.get(self, "excluded_accounts")

    @excluded_accounts.setter
    def excluded_accounts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "excluded_accounts", value)

    @property
    @pulumi.getter(name="isOrganizationalAccount")
    def is_organizational_account(self) -> Optional[pulumi.Input[bool]]:
        """
        Boolean value that indicates whether the account is organizational or not. True represents organization account, whereas false represents a single account.
        """
        return pulumi.get(self, "is_organizational_account")

    @is_organizational_account.setter
    def is_organizational_account(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_organizational_account", value)


