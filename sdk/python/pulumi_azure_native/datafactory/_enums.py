# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'ActivityOnInactiveMarkAs',
    'ActivityState',
    'AzureFunctionActivityMethod',
    'AzureSearchIndexWriteBehaviorType',
    'AzureStorageAuthenticationType',
    'BigDataPoolReferenceType',
    'BlobEventTypes',
    'CassandraSourceReadConsistencyLevels',
    'ConfigurationType',
    'ConnectionType',
    'CosmosDbConnectionMode',
    'CredentialReferenceType',
    'DataFlowComputeType',
    'DataFlowReferenceType',
    'DayOfWeek',
    'DaysOfWeek',
    'Db2AuthenticationType',
    'DependencyCondition',
    'DynamicsSinkWriteBehavior',
    'FactoryIdentityType',
    'FrequencyType',
    'FtpAuthenticationType',
    'GlobalParameterType',
    'GoogleAdWordsAuthenticationType',
    'GoogleBigQueryAuthenticationType',
    'HBaseAuthenticationType',
    'HDInsightActivityDebugInfoOption',
    'HiveAuthenticationType',
    'HiveServerType',
    'HiveThriftTransportProtocol',
    'HttpAuthenticationType',
    'ImpalaAuthenticationType',
    'IntegrationRuntimeEdition',
    'IntegrationRuntimeEntityReferenceType',
    'IntegrationRuntimeLicenseType',
    'IntegrationRuntimeSsisCatalogPricingTier',
    'IntegrationRuntimeType',
    'ManagedVirtualNetworkReferenceType',
    'MappingType',
    'MongoDbAuthenticationType',
    'NotebookParameterType',
    'NotebookReferenceType',
    'ODataAadServicePrincipalCredentialType',
    'ODataAuthenticationType',
    'ParameterType',
    'PhoenixAuthenticationType',
    'PolybaseSettingsRejectType',
    'PrestoAuthenticationType',
    'PublicNetworkAccess',
    'RecurrenceFrequency',
    'RestServiceAuthenticationType',
    'SalesforceSinkWriteBehavior',
    'SapCloudForCustomerSinkWriteBehavior',
    'SapHanaAuthenticationType',
    'ScriptActivityLogDestination',
    'ScriptActivityParameterDirection',
    'ScriptActivityParameterType',
    'ScriptType',
    'ServiceNowAuthenticationType',
    'SftpAuthenticationType',
    'SparkAuthenticationType',
    'SparkConfigurationReferenceType',
    'SparkJobReferenceType',
    'SparkServerType',
    'SparkThriftTransportProtocol',
    'SqlAlwaysEncryptedAkvAuthType',
    'SsisLogLocationType',
    'SsisPackageLocationType',
    'SybaseAuthenticationType',
    'TeamDeskAuthenticationType',
    'TeradataAuthenticationType',
    'TriggerReferenceType',
    'TumblingWindowFrequency',
    'Type',
    'VariableType',
    'WebActivityMethod',
    'WebAuthenticationType',
    'WebHookActivityMethod',
    'ZendeskAuthenticationType',
]


class ActivityOnInactiveMarkAs(str, Enum):
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    SKIPPED = "Skipped"


class ActivityState(str, Enum):
    ACTIVE = "Active"
    INACTIVE = "Inactive"


class AzureFunctionActivityMethod(str, Enum):
    GET = "GET"
    POST = "POST"
    PUT = "PUT"
    DELETE = "DELETE"
    OPTIONS = "OPTIONS"
    HEAD = "HEAD"
    TRACE = "TRACE"


class AzureSearchIndexWriteBehaviorType(str, Enum):
    MERGE = "Merge"
    UPLOAD = "Upload"


class AzureStorageAuthenticationType(str, Enum):
    ANONYMOUS = "Anonymous"
    ACCOUNT_KEY = "AccountKey"
    SAS_URI = "SasUri"
    SERVICE_PRINCIPAL = "ServicePrincipal"
    MSI = "Msi"


class BigDataPoolReferenceType(str, Enum):
    BIG_DATA_POOL_REFERENCE = "BigDataPoolReference"


class BlobEventTypes(str, Enum):
    MICROSOFT_STORAGE_BLOB_CREATED = "Microsoft.Storage.BlobCreated"
    MICROSOFT_STORAGE_BLOB_DELETED = "Microsoft.Storage.BlobDeleted"


class CassandraSourceReadConsistencyLevels(str, Enum):
    ALL = "ALL"
    EAC_H_QUORUM = "EACH_QUORUM"
    QUORUM = "QUORUM"
    LOCA_L_QUORUM = "LOCAL_QUORUM"
    ONE = "ONE"
    TWO = "TWO"
    THREE = "THREE"
    LOCA_L_ONE = "LOCAL_ONE"
    SERIAL = "SERIAL"
    LOCA_L_SERIAL = "LOCAL_SERIAL"


class ConfigurationType(str, Enum):
    DEFAULT = "Default"
    CUSTOMIZED = "Customized"
    ARTIFACT = "Artifact"


class ConnectionType(str, Enum):
    LINKEDSERVICETYPE = "linkedservicetype"


class CosmosDbConnectionMode(str, Enum):
    GATEWAY = "Gateway"
    DIRECT = "Direct"


class CredentialReferenceType(str, Enum):
    CREDENTIAL_REFERENCE = "CredentialReference"


class DataFlowComputeType(str, Enum):
    GENERAL = "General"
    MEMORY_OPTIMIZED = "MemoryOptimized"
    COMPUTE_OPTIMIZED = "ComputeOptimized"


class DataFlowReferenceType(str, Enum):
    DATA_FLOW_REFERENCE = "DataFlowReference"


class DayOfWeek(str, Enum):
    SUNDAY = "Sunday"
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"


class DaysOfWeek(str, Enum):
    SUNDAY = "Sunday"
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"


class Db2AuthenticationType(str, Enum):
    BASIC = "Basic"


class DependencyCondition(str, Enum):
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    SKIPPED = "Skipped"
    COMPLETED = "Completed"


class DynamicsSinkWriteBehavior(str, Enum):
    UPSERT = "Upsert"


class FactoryIdentityType(str, Enum):
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class FrequencyType(str, Enum):
    HOUR = "Hour"
    MINUTE = "Minute"
    SECOND = "Second"


class FtpAuthenticationType(str, Enum):
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"


class GlobalParameterType(str, Enum):
    OBJECT = "Object"
    STRING = "String"
    INT = "Int"
    FLOAT = "Float"
    BOOL = "Bool"
    ARRAY = "Array"


class GoogleAdWordsAuthenticationType(str, Enum):
    SERVICE_AUTHENTICATION = "ServiceAuthentication"
    USER_AUTHENTICATION = "UserAuthentication"


class GoogleBigQueryAuthenticationType(str, Enum):
    SERVICE_AUTHENTICATION = "ServiceAuthentication"
    USER_AUTHENTICATION = "UserAuthentication"


class HBaseAuthenticationType(str, Enum):
    ANONYMOUS = "Anonymous"
    BASIC = "Basic"


class HDInsightActivityDebugInfoOption(str, Enum):
    NONE = "None"
    ALWAYS = "Always"
    FAILURE = "Failure"


class HiveAuthenticationType(str, Enum):
    ANONYMOUS = "Anonymous"
    USERNAME = "Username"
    USERNAME_AND_PASSWORD = "UsernameAndPassword"
    WINDOWS_AZURE_HD_INSIGHT_SERVICE = "WindowsAzureHDInsightService"


class HiveServerType(str, Enum):
    HIVE_SERVER1 = "HiveServer1"
    HIVE_SERVER2 = "HiveServer2"
    HIVE_THRIFT_SERVER = "HiveThriftServer"


class HiveThriftTransportProtocol(str, Enum):
    BINARY = "Binary"
    SASL = "SASL"
    HTT_P_ = "HTTP "


class HttpAuthenticationType(str, Enum):
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"
    DIGEST = "Digest"
    WINDOWS = "Windows"
    CLIENT_CERTIFICATE = "ClientCertificate"


class ImpalaAuthenticationType(str, Enum):
    ANONYMOUS = "Anonymous"
    SASLUSERNAME = "SASLUsername"
    USERNAME_AND_PASSWORD = "UsernameAndPassword"


class IntegrationRuntimeEdition(str, Enum):
    STANDARD = "Standard"
    ENTERPRISE = "Enterprise"


class IntegrationRuntimeEntityReferenceType(str, Enum):
    INTEGRATION_RUNTIME_REFERENCE = "IntegrationRuntimeReference"
    LINKED_SERVICE_REFERENCE = "LinkedServiceReference"


class IntegrationRuntimeLicenseType(str, Enum):
    BASE_PRICE = "BasePrice"
    LICENSE_INCLUDED = "LicenseIncluded"


class IntegrationRuntimeSsisCatalogPricingTier(str, Enum):
    BASIC = "Basic"
    STANDARD = "Standard"
    PREMIUM = "Premium"
    PREMIUM_RS = "PremiumRS"


class IntegrationRuntimeType(str, Enum):
    MANAGED = "Managed"
    SELF_HOSTED = "SelfHosted"


class ManagedVirtualNetworkReferenceType(str, Enum):
    MANAGED_VIRTUAL_NETWORK_REFERENCE = "ManagedVirtualNetworkReference"


class MappingType(str, Enum):
    DIRECT = "Direct"
    DERIVED = "Derived"
    AGGREGATE = "Aggregate"


class MongoDbAuthenticationType(str, Enum):
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"


class NotebookParameterType(str, Enum):
    STRING = "string"
    INT = "int"
    FLOAT = "float"
    BOOL = "bool"


class NotebookReferenceType(str, Enum):
    NOTEBOOK_REFERENCE = "NotebookReference"


class ODataAadServicePrincipalCredentialType(str, Enum):
    SERVICE_PRINCIPAL_KEY = "ServicePrincipalKey"
    SERVICE_PRINCIPAL_CERT = "ServicePrincipalCert"


class ODataAuthenticationType(str, Enum):
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"
    WINDOWS = "Windows"
    AAD_SERVICE_PRINCIPAL = "AadServicePrincipal"
    MANAGED_SERVICE_IDENTITY = "ManagedServiceIdentity"


class ParameterType(str, Enum):
    OBJECT = "Object"
    STRING = "String"
    INT = "Int"
    FLOAT = "Float"
    BOOL = "Bool"
    ARRAY = "Array"
    SECURE_STRING = "SecureString"


class PhoenixAuthenticationType(str, Enum):
    ANONYMOUS = "Anonymous"
    USERNAME_AND_PASSWORD = "UsernameAndPassword"
    WINDOWS_AZURE_HD_INSIGHT_SERVICE = "WindowsAzureHDInsightService"


class PolybaseSettingsRejectType(str, Enum):
    VALUE = "value"
    PERCENTAGE = "percentage"


class PrestoAuthenticationType(str, Enum):
    ANONYMOUS = "Anonymous"
    LDAP = "LDAP"


class PublicNetworkAccess(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class RecurrenceFrequency(str, Enum):
    NOT_SPECIFIED = "NotSpecified"
    MINUTE = "Minute"
    HOUR = "Hour"
    DAY = "Day"
    WEEK = "Week"
    MONTH = "Month"
    YEAR = "Year"


class RestServiceAuthenticationType(str, Enum):
    ANONYMOUS = "Anonymous"
    BASIC = "Basic"
    AAD_SERVICE_PRINCIPAL = "AadServicePrincipal"
    MANAGED_SERVICE_IDENTITY = "ManagedServiceIdentity"
    O_AUTH2_CLIENT_CREDENTIAL = "OAuth2ClientCredential"


class SalesforceSinkWriteBehavior(str, Enum):
    INSERT = "Insert"
    UPSERT = "Upsert"


class SapCloudForCustomerSinkWriteBehavior(str, Enum):
    INSERT = "Insert"
    UPDATE = "Update"


class SapHanaAuthenticationType(str, Enum):
    BASIC = "Basic"
    WINDOWS = "Windows"


class ScriptActivityLogDestination(str, Enum):
    ACTIVITY_OUTPUT = "ActivityOutput"
    EXTERNAL_STORE = "ExternalStore"


class ScriptActivityParameterDirection(str, Enum):
    VALUE_INPUT = "Input"
    VALUE_OUTPUT = "Output"
    VALUE_INPUT_OUTPUT = "InputOutput"


class ScriptActivityParameterType(str, Enum):
    BOOLEAN = "Boolean"
    DATE_TIME = "DateTime"
    DATE_TIME_OFFSET = "DateTimeOffset"
    DECIMAL = "Decimal"
    DOUBLE = "Double"
    GUID = "Guid"
    INT16 = "Int16"
    INT32 = "Int32"
    INT64 = "Int64"
    SINGLE = "Single"
    STRING = "String"
    TIMESPAN = "Timespan"


class ScriptType(str, Enum):
    QUERY = "Query"
    NON_QUERY = "NonQuery"


class ServiceNowAuthenticationType(str, Enum):
    BASIC = "Basic"
    O_AUTH2 = "OAuth2"


class SftpAuthenticationType(str, Enum):
    BASIC = "Basic"
    SSH_PUBLIC_KEY = "SshPublicKey"
    MULTI_FACTOR = "MultiFactor"


class SparkAuthenticationType(str, Enum):
    ANONYMOUS = "Anonymous"
    USERNAME = "Username"
    USERNAME_AND_PASSWORD = "UsernameAndPassword"
    WINDOWS_AZURE_HD_INSIGHT_SERVICE = "WindowsAzureHDInsightService"


class SparkConfigurationReferenceType(str, Enum):
    SPARK_CONFIGURATION_REFERENCE = "SparkConfigurationReference"


class SparkJobReferenceType(str, Enum):
    SPARK_JOB_DEFINITION_REFERENCE = "SparkJobDefinitionReference"


class SparkServerType(str, Enum):
    SHARK_SERVER = "SharkServer"
    SHARK_SERVER2 = "SharkServer2"
    SPARK_THRIFT_SERVER = "SparkThriftServer"


class SparkThriftTransportProtocol(str, Enum):
    BINARY = "Binary"
    SASL = "SASL"
    HTT_P_ = "HTTP "


class SqlAlwaysEncryptedAkvAuthType(str, Enum):
    SERVICE_PRINCIPAL = "ServicePrincipal"
    MANAGED_IDENTITY = "ManagedIdentity"
    USER_ASSIGNED_MANAGED_IDENTITY = "UserAssignedManagedIdentity"


class SsisLogLocationType(str, Enum):
    FILE = "File"


class SsisPackageLocationType(str, Enum):
    SSISDB = "SSISDB"
    FILE = "File"
    INLINE_PACKAGE = "InlinePackage"
    PACKAGE_STORE = "PackageStore"


class SybaseAuthenticationType(str, Enum):
    BASIC = "Basic"
    WINDOWS = "Windows"


class TeamDeskAuthenticationType(str, Enum):
    BASIC = "Basic"
    TOKEN = "Token"


class TeradataAuthenticationType(str, Enum):
    BASIC = "Basic"
    WINDOWS = "Windows"


class TriggerReferenceType(str, Enum):
    TRIGGER_REFERENCE = "TriggerReference"


class TumblingWindowFrequency(str, Enum):
    MINUTE = "Minute"
    HOUR = "Hour"
    MONTH = "Month"


class Type(str, Enum):
    LINKED_SERVICE_REFERENCE = "LinkedServiceReference"


class VariableType(str, Enum):
    STRING = "String"
    BOOL = "Bool"
    ARRAY = "Array"


class WebActivityMethod(str, Enum):
    GET = "GET"
    POST = "POST"
    PUT = "PUT"
    DELETE = "DELETE"


class WebAuthenticationType(str, Enum):
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"
    CLIENT_CERTIFICATE = "ClientCertificate"


class WebHookActivityMethod(str, Enum):
    POST = "POST"


class ZendeskAuthenticationType(str, Enum):
    BASIC = "Basic"
    TOKEN = "Token"
