# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetExposureControlFeatureValueByFactoryResult',
    'AwaitableGetExposureControlFeatureValueByFactoryResult',
    'get_exposure_control_feature_value_by_factory',
    'get_exposure_control_feature_value_by_factory_output',
]

@pulumi.output_type
class GetExposureControlFeatureValueByFactoryResult:
    """
    The exposure control response.
    """
    def __init__(__self__, feature_name=None, value=None):
        if feature_name and not isinstance(feature_name, str):
            raise TypeError("Expected argument 'feature_name' to be a str")
        pulumi.set(__self__, "feature_name", feature_name)
        if value and not isinstance(value, str):
            raise TypeError("Expected argument 'value' to be a str")
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter(name="featureName")
    def feature_name(self) -> _builtins.str:
        """
        The feature name.
        """
        return pulumi.get(self, "feature_name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The feature value.
        """
        return pulumi.get(self, "value")


class AwaitableGetExposureControlFeatureValueByFactoryResult(GetExposureControlFeatureValueByFactoryResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetExposureControlFeatureValueByFactoryResult(
            feature_name=self.feature_name,
            value=self.value)


def get_exposure_control_feature_value_by_factory(factory_name: Optional[_builtins.str] = None,
                                                  feature_name: Optional[_builtins.str] = None,
                                                  feature_type: Optional[_builtins.str] = None,
                                                  resource_group_name: Optional[_builtins.str] = None,
                                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetExposureControlFeatureValueByFactoryResult:
    """
    Get exposure control feature for specific factory.

    Uses Azure REST API version 2018-06-01.


    :param _builtins.str factory_name: The factory name.
    :param _builtins.str feature_name: The feature name.
    :param _builtins.str feature_type: The feature type.
    :param _builtins.str resource_group_name: The resource group name.
    """
    __args__ = dict()
    __args__['factoryName'] = factory_name
    __args__['featureName'] = feature_name
    __args__['featureType'] = feature_type
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:datafactory:getExposureControlFeatureValueByFactory', __args__, opts=opts, typ=GetExposureControlFeatureValueByFactoryResult).value

    return AwaitableGetExposureControlFeatureValueByFactoryResult(
        feature_name=pulumi.get(__ret__, 'feature_name'),
        value=pulumi.get(__ret__, 'value'))
def get_exposure_control_feature_value_by_factory_output(factory_name: Optional[pulumi.Input[_builtins.str]] = None,
                                                         feature_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                         feature_type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                         resource_group_name: Optional[pulumi.Input[_builtins.str]] = None,
                                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetExposureControlFeatureValueByFactoryResult]:
    """
    Get exposure control feature for specific factory.

    Uses Azure REST API version 2018-06-01.


    :param _builtins.str factory_name: The factory name.
    :param _builtins.str feature_name: The feature name.
    :param _builtins.str feature_type: The feature type.
    :param _builtins.str resource_group_name: The resource group name.
    """
    __args__ = dict()
    __args__['factoryName'] = factory_name
    __args__['featureName'] = feature_name
    __args__['featureType'] = feature_type
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:datafactory:getExposureControlFeatureValueByFactory', __args__, opts=opts, typ=GetExposureControlFeatureValueByFactoryResult)
    return __ret__.apply(lambda __response__: GetExposureControlFeatureValueByFactoryResult(
        feature_name=pulumi.get(__response__, 'feature_name'),
        value=pulumi.get(__response__, 'value')))
