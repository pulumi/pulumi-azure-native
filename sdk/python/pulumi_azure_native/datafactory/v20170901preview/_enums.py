# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AzureSearchIndexWriteBehaviorType',
    'BlobEventTypes',
    'CassandraSourceReadConsistencyLevels',
    'DatasetCompressionLevel',
    'DayOfWeek',
    'DaysOfWeek',
    'Db2AuthenticationType',
    'DependencyCondition',
    'DynamicsAuthenticationType',
    'DynamicsDeploymentType',
    'DynamicsSinkWriteBehavior',
    'FactoryIdentityType',
    'FtpAuthenticationType',
    'GoogleBigQueryAuthenticationType',
    'HBaseAuthenticationType',
    'HDInsightActivityDebugInfoOption',
    'HiveAuthenticationType',
    'HiveServerType',
    'HiveThriftTransportProtocol',
    'HttpAuthenticationType',
    'ImpalaAuthenticationType',
    'IntegrationRuntimeEdition',
    'IntegrationRuntimeEntityReferenceType',
    'IntegrationRuntimeLicenseType',
    'IntegrationRuntimeType',
    'JsonFormatFilePattern',
    'MongoDbAuthenticationType',
    'ODataAuthenticationType',
    'ParameterType',
    'PhoenixAuthenticationType',
    'PolybaseSettingsRejectType',
    'PrestoAuthenticationType',
    'RecurrenceFrequency',
    'SalesforceSinkWriteBehavior',
    'SalesforceSourceReadBehavior',
    'SapCloudForCustomerSinkWriteBehavior',
    'SapHanaAuthenticationType',
    'ServiceNowAuthenticationType',
    'SftpAuthenticationType',
    'SparkAuthenticationType',
    'SparkServerType',
    'SparkThriftTransportProtocol',
    'SsisLogLocationType',
    'SsisPackageLocationType',
    'StoredProcedureParameterType',
    'SybaseAuthenticationType',
    'TeradataAuthenticationType',
    'TumblingWindowFrequency',
    'WebActivityMethod',
    'WebAuthenticationType',
]


class AzureSearchIndexWriteBehaviorType(str, Enum):
    """
    Specify the write behavior when upserting documents into Azure Search Index.
    """
    MERGE = "Merge"
    UPLOAD = "Upload"


class BlobEventTypes(str, Enum):
    MICROSOFT_STORAGE_BLOB_CREATED = "Microsoft.Storage.BlobCreated"
    MICROSOFT_STORAGE_BLOB_DELETED = "Microsoft.Storage.BlobDeleted"


class CassandraSourceReadConsistencyLevels(str, Enum):
    """
    The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.
    """
    ALL = "ALL"
    EAC_H_QUORUM = "EACH_QUORUM"
    QUORUM = "QUORUM"
    LOCA_L_QUORUM = "LOCAL_QUORUM"
    ONE = "ONE"
    TWO = "TWO"
    THREE = "THREE"
    LOCA_L_ONE = "LOCAL_ONE"
    SERIAL = "SERIAL"
    LOCA_L_SERIAL = "LOCAL_SERIAL"


class DatasetCompressionLevel(str, Enum):
    """
    The ZipDeflate compression level.
    """
    OPTIMAL = "Optimal"
    FASTEST = "Fastest"


class DayOfWeek(str, Enum):
    """
    The day of the week.
    """
    SUNDAY = "Sunday"
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"


class DaysOfWeek(str, Enum):
    SUNDAY = "Sunday"
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"


class Db2AuthenticationType(str, Enum):
    """
    AuthenticationType to be used for connection.
    """
    BASIC = "Basic"


class DependencyCondition(str, Enum):
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    SKIPPED = "Skipped"
    COMPLETED = "Completed"


class DynamicsAuthenticationType(str, Enum):
    """
    The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string).
    """
    OFFICE365 = "Office365"
    IFD = "Ifd"


class DynamicsDeploymentType(str, Enum):
    """
    The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).
    """
    ONLINE = "Online"
    ON_PREMISES_WITH_IFD = "OnPremisesWithIfd"


class DynamicsSinkWriteBehavior(str, Enum):
    """
    The write behavior for the operation.
    """
    UPSERT = "Upsert"


class FactoryIdentityType(str, Enum):
    """
    The identity type. Currently the only supported type is 'SystemAssigned'.
    """
    SYSTEM_ASSIGNED = "SystemAssigned"


class FtpAuthenticationType(str, Enum):
    """
    The authentication type to be used to connect to the FTP server.
    """
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"


class GoogleBigQueryAuthenticationType(str, Enum):
    """
    The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
    """
    SERVICE_AUTHENTICATION = "ServiceAuthentication"
    USER_AUTHENTICATION = "UserAuthentication"


class HBaseAuthenticationType(str, Enum):
    """
    The authentication mechanism to use to connect to the HBase server.
    """
    ANONYMOUS = "Anonymous"
    BASIC = "Basic"


class HDInsightActivityDebugInfoOption(str, Enum):
    """
    Debug info option.
    """
    NONE = "None"
    ALWAYS = "Always"
    FAILURE = "Failure"


class HiveAuthenticationType(str, Enum):
    """
    The authentication method used to access the Hive server.
    """
    ANONYMOUS = "Anonymous"
    USERNAME = "Username"
    USERNAME_AND_PASSWORD = "UsernameAndPassword"
    WINDOWS_AZURE_HD_INSIGHT_SERVICE = "WindowsAzureHDInsightService"


class HiveServerType(str, Enum):
    """
    The type of Hive server.
    """
    HIVE_SERVER1 = "HiveServer1"
    HIVE_SERVER2 = "HiveServer2"
    HIVE_THRIFT_SERVER = "HiveThriftServer"


class HiveThriftTransportProtocol(str, Enum):
    """
    The transport protocol to use in the Thrift layer.
    """
    BINARY = "Binary"
    SASL = "SASL"
    HTT_P_ = "HTTP "


class HttpAuthenticationType(str, Enum):
    """
    The authentication type to be used to connect to the HTTP server.
    """
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"
    DIGEST = "Digest"
    WINDOWS = "Windows"
    CLIENT_CERTIFICATE = "ClientCertificate"


class ImpalaAuthenticationType(str, Enum):
    """
    The authentication type to use.
    """
    ANONYMOUS = "Anonymous"
    SASLUSERNAME = "SASLUsername"
    USERNAME_AND_PASSWORD = "UsernameAndPassword"


class IntegrationRuntimeEdition(str, Enum):
    """
    The edition for the SSIS Integration Runtime
    """
    STANDARD = "Standard"
    ENTERPRISE = "Enterprise"


class IntegrationRuntimeEntityReferenceType(str, Enum):
    """
    The type of this referenced entity.
    """
    INTEGRATION_RUNTIME_REFERENCE = "IntegrationRuntimeReference"
    LINKED_SERVICE_REFERENCE = "LinkedServiceReference"


class IntegrationRuntimeLicenseType(str, Enum):
    """
    License type for bringing your own license scenario.
    """
    BASE_PRICE = "BasePrice"
    LICENSE_INCLUDED = "LicenseIncluded"


class IntegrationRuntimeType(str, Enum):
    """
    Type of integration runtime.
    """
    MANAGED = "Managed"
    SELF_HOSTED = "SelfHosted"


class JsonFormatFilePattern(str, Enum):
    """
    File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
    """
    SET_OF_OBJECTS = "setOfObjects"
    ARRAY_OF_OBJECTS = "arrayOfObjects"


class MongoDbAuthenticationType(str, Enum):
    """
    The authentication type to be used to connect to the MongoDB database.
    """
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"


class ODataAuthenticationType(str, Enum):
    """
    Type of authentication used to connect to the OData service.
    """
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"


class ParameterType(str, Enum):
    """
    Parameter type.
    """
    OBJECT = "Object"
    STRING = "String"
    INT = "Int"
    FLOAT = "Float"
    BOOL = "Bool"
    ARRAY = "Array"
    SECURE_STRING = "SecureString"


class PhoenixAuthenticationType(str, Enum):
    """
    The authentication mechanism used to connect to the Phoenix server.
    """
    ANONYMOUS = "Anonymous"
    USERNAME_AND_PASSWORD = "UsernameAndPassword"
    WINDOWS_AZURE_HD_INSIGHT_SERVICE = "WindowsAzureHDInsightService"


class PolybaseSettingsRejectType(str, Enum):
    """
    Reject type.
    """
    VALUE = "value"
    PERCENTAGE = "percentage"


class PrestoAuthenticationType(str, Enum):
    """
    The authentication mechanism used to connect to the Presto server.
    """
    ANONYMOUS = "Anonymous"
    LDAP = "LDAP"


class RecurrenceFrequency(str, Enum):
    """
    The frequency.
    """
    NOT_SPECIFIED = "NotSpecified"
    MINUTE = "Minute"
    HOUR = "Hour"
    DAY = "Day"
    WEEK = "Week"
    MONTH = "Month"
    YEAR = "Year"


class SalesforceSinkWriteBehavior(str, Enum):
    """
    The write behavior for the operation. Default is Insert.
    """
    INSERT = "Insert"
    UPSERT = "Upsert"


class SalesforceSourceReadBehavior(str, Enum):
    """
    The read behavior for the operation. Default is Query.
    """
    QUERY = "Query"
    QUERY_ALL = "QueryAll"


class SapCloudForCustomerSinkWriteBehavior(str, Enum):
    """
    The write behavior for the operation. Default is 'Insert'.
    """
    INSERT = "Insert"
    UPDATE = "Update"


class SapHanaAuthenticationType(str, Enum):
    """
    The authentication type to be used to connect to the SAP HANA server.
    """
    BASIC = "Basic"
    WINDOWS = "Windows"


class ServiceNowAuthenticationType(str, Enum):
    """
    The authentication type to use.
    """
    BASIC = "Basic"
    O_AUTH2 = "OAuth2"


class SftpAuthenticationType(str, Enum):
    """
    The authentication type to be used to connect to the FTP server.
    """
    BASIC = "Basic"
    SSH_PUBLIC_KEY = "SshPublicKey"


class SparkAuthenticationType(str, Enum):
    """
    The authentication method used to access the Spark server.
    """
    ANONYMOUS = "Anonymous"
    USERNAME = "Username"
    USERNAME_AND_PASSWORD = "UsernameAndPassword"
    WINDOWS_AZURE_HD_INSIGHT_SERVICE = "WindowsAzureHDInsightService"


class SparkServerType(str, Enum):
    """
    The type of Spark server.
    """
    SHARK_SERVER = "SharkServer"
    SHARK_SERVER2 = "SharkServer2"
    SPARK_THRIFT_SERVER = "SparkThriftServer"


class SparkThriftTransportProtocol(str, Enum):
    """
    The transport protocol to use in the Thrift layer.
    """
    BINARY = "Binary"
    SASL = "SASL"
    HTT_P_ = "HTTP "


class SsisLogLocationType(str, Enum):
    """
    The type of SSIS log location.
    """
    FILE = "File"


class SsisPackageLocationType(str, Enum):
    """
    The type of SSIS package location.
    """
    SSISDB = "SSISDB"
    FILE = "File"


class StoredProcedureParameterType(str, Enum):
    """
    Stored procedure parameter type.
    """
    STRING = "String"
    INT = "Int"
    INT64 = "Int64"
    DECIMAL = "Decimal"
    GUID = "Guid"
    BOOLEAN = "Boolean"
    DATE = "Date"


class SybaseAuthenticationType(str, Enum):
    """
    AuthenticationType to be used for connection.
    """
    BASIC = "Basic"
    WINDOWS = "Windows"


class TeradataAuthenticationType(str, Enum):
    """
    AuthenticationType to be used for connection.
    """
    BASIC = "Basic"
    WINDOWS = "Windows"


class TumblingWindowFrequency(str, Enum):
    """
    The frequency of the time windows.
    """
    MINUTE = "Minute"
    HOUR = "Hour"


class WebActivityMethod(str, Enum):
    """
    Rest API method for target endpoint.
    """
    GET = "GET"
    POST = "POST"
    PUT = "PUT"
    DELETE = "DELETE"


class WebAuthenticationType(str, Enum):
    """
    Type of authentication used to connect to the web table source.
    """
    BASIC = "Basic"
    ANONYMOUS = "Anonymous"
    CLIENT_CERTIFICATE = "ClientCertificate"
