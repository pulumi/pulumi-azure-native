# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

import types

__config__ = pulumi.Config('azure-native')


class _ExportableConfig(types.ModuleType):
    @property
    def auxiliary_tenant_ids(self) -> Optional[str]:
        return __config__.get('auxiliaryTenantIds')

    @property
    def client_certificate_password(self) -> Optional[str]:
        """
        The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client Certificate
        """
        return __config__.get('clientCertificatePassword')

    @property
    def client_certificate_path(self) -> Optional[str]:
        """
        The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service Principal using a Client Certificate.
        """
        return __config__.get('clientCertificatePath')

    @property
    def client_id(self) -> Optional[str]:
        """
        The Client ID which should be used.
        """
        return __config__.get('clientId')

    @property
    def client_secret(self) -> Optional[str]:
        """
        The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.
        """
        return __config__.get('clientSecret')

    @property
    def disable_pulumi_partner_id(self) -> Optional[bool]:
        """
        This will disable the Pulumi Partner ID which is used if a custom `partnerId` isn't specified.
        """
        return __config__.get_bool('disablePulumiPartnerId')

    @property
    def environment(self) -> Optional[str]:
        """
        The Cloud Environment which should be used. Possible values are public, usgovernment, german, and china. Defaults to public.
        """
        return __config__.get('environment')

    @property
    def msi_endpoint(self) -> Optional[str]:
        """
        The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected automatically. 
        """
        return __config__.get('msiEndpoint')

    @property
    def partner_id(self) -> Optional[str]:
        """
        A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.
        """
        return __config__.get('partnerId')

    @property
    def subscription_id(self) -> Optional[str]:
        """
        The Subscription ID which should be used.
        """
        return __config__.get('subscriptionId')

    @property
    def tenant_id(self) -> Optional[str]:
        """
        The Tenant ID which should be used.
        """
        return __config__.get('tenantId')

    @property
    def use_msi(self) -> Optional[bool]:
        """
        Allowed Managed Service Identity be used for Authentication.
        """
        return __config__.get_bool('useMsi')

