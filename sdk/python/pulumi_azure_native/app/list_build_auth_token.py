# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ListBuildAuthTokenResult',
    'AwaitableListBuildAuthTokenResult',
    'list_build_auth_token',
    'list_build_auth_token_output',
]

@pulumi.output_type
class ListBuildAuthTokenResult:
    """
    Build Auth Token.
    """
    def __init__(__self__, expires=None, token=None):
        if expires and not isinstance(expires, str):
            raise TypeError("Expected argument 'expires' to be a str")
        pulumi.set(__self__, "expires", expires)
        if token and not isinstance(token, str):
            raise TypeError("Expected argument 'token' to be a str")
        pulumi.set(__self__, "token", token)

    @property
    @pulumi.getter
    def expires(self) -> str:
        """
        Token expiration date.
        """
        return pulumi.get(self, "expires")

    @property
    @pulumi.getter
    def token(self) -> str:
        """
        Authentication token.
        """
        return pulumi.get(self, "token")


class AwaitableListBuildAuthTokenResult(ListBuildAuthTokenResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListBuildAuthTokenResult(
            expires=self.expires,
            token=self.token)


def list_build_auth_token(build_name: Optional[str] = None,
                          builder_name: Optional[str] = None,
                          resource_group_name: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListBuildAuthTokenResult:
    """
    Gets the token used to connect to the endpoint where source code can be uploaded for a build.
    Azure REST API version: 2023-08-01-preview.


    :param str build_name: The name of a build.
    :param str builder_name: The name of the builder.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['buildName'] = build_name
    __args__['builderName'] = builder_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:app:listBuildAuthToken', __args__, opts=opts, typ=ListBuildAuthTokenResult).value

    return AwaitableListBuildAuthTokenResult(
        expires=pulumi.get(__ret__, 'expires'),
        token=pulumi.get(__ret__, 'token'))


@_utilities.lift_output_func(list_build_auth_token)
def list_build_auth_token_output(build_name: Optional[pulumi.Input[str]] = None,
                                 builder_name: Optional[pulumi.Input[str]] = None,
                                 resource_group_name: Optional[pulumi.Input[str]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ListBuildAuthTokenResult]:
    """
    Gets the token used to connect to the endpoint where source code can be uploaded for a build.
    Azure REST API version: 2023-08-01-preview.


    :param str build_name: The name of a build.
    :param str builder_name: The name of the builder.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    ...
