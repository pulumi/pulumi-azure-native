# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AccessMode',
    'Action',
    'ActiveRevisionsMode',
    'Affinity',
    'AppProtocol',
    'BindingType',
    'CertificateType',
    'ClientCredentialMethod',
    'ContainerType',
    'CookieExpirationConvention',
    'DotNetComponentType',
    'ExecutionType',
    'ExtendedLocationTypes',
    'ForwardProxyConvention',
    'IdentitySettingsLifeCycle',
    'ImageType',
    'IngressClientCertificateMode',
    'IngressTargetPortHttpScheme',
    'IngressTransportMethod',
    'JavaComponentType',
    'Kind',
    'Level',
    'LogLevel',
    'ManagedCertificateDomainControlValidation',
    'ManagedServiceIdentityType',
    'PatchingMode',
    'PoolManagementType',
    'PrivateEndpointServiceConnectionStatus',
    'PublicNetworkAccess',
    'Scheme',
    'SessionNetworkStatus',
    'StorageType',
    'TriggerType',
    'Type',
    'UnauthenticatedClientActionV2',
    'WeekDay',
]


class AccessMode(str, Enum):
    """
    Access mode for storage
    """
    READ_ONLY = "ReadOnly"
    READ_WRITE = "ReadWrite"


class Action(str, Enum):
    """
    Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny
    """
    ALLOW = "Allow"
    DENY = "Deny"


class ActiveRevisionsMode(str, Enum):
    """
    ActiveRevisionsMode controls how active revisions are handled for the Container app:
    <list><item>Single: Only one revision can be active at a time. Traffic weights cannot be used. This is the default.</item><item>Multiple: Multiple revisions can be active, including optional traffic weights and labels.</item><item>Labels: Only revisions with labels are active. Traffic weights can be applied to labels.</item></list>
    """
    MULTIPLE = "Multiple"
    SINGLE = "Single"
    LABELS = "Labels"


class Affinity(str, Enum):
    """
    Sticky Session Affinity
    """
    STICKY = "sticky"
    NONE = "none"


class AppProtocol(str, Enum):
    """
    Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
    """
    HTTP = "http"
    GRPC = "grpc"


class BindingType(str, Enum):
    """
    Custom Domain binding type.
    """
    DISABLED = "Disabled"
    SNI_ENABLED = "SniEnabled"
    AUTO = "Auto"


class CertificateType(str, Enum):
    """
    The type of the certificate. Allowed values are `ServerSSLCertificate` and `ImagePullTrustedCA`
    """
    SERVER_SSL_CERTIFICATE = "ServerSSLCertificate"
    IMAGE_PULL_TRUSTED_CA = "ImagePullTrustedCA"


class ClientCredentialMethod(str, Enum):
    """
    The method that should be used to authenticate the user.
    """
    CLIENT_SECRET_POST = "ClientSecretPost"


class ContainerType(str, Enum):
    """
    The container type of the sessions.
    """
    CUSTOM_CONTAINER = "CustomContainer"
    PYTHON_LTS = "PythonLTS"


class CookieExpirationConvention(str, Enum):
    """
    The convention used when determining the session cookie's expiration.
    """
    FIXED_TIME = "FixedTime"
    IDENTITY_PROVIDER_DERIVED = "IdentityProviderDerived"


class DotNetComponentType(str, Enum):
    """
    Type of the .NET Component.
    """
    ASPIRE_DASHBOARD = "AspireDashboard"


class ExecutionType(str, Enum):
    """
    The execution type of the session pool.
    """
    TIMED = "Timed"


class ExtendedLocationTypes(str, Enum):
    """
    The type of the extended location.
    """
    CUSTOM_LOCATION = "CustomLocation"


class ForwardProxyConvention(str, Enum):
    """
    The convention used to determine the url of the request made.
    """
    NO_PROXY = "NoProxy"
    STANDARD = "Standard"
    CUSTOM = "Custom"


class IdentitySettingsLifeCycle(str, Enum):
    """
    Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.
    """
    INIT = "Init"
    MAIN = "Main"
    NONE = "None"
    ALL = "All"


class ImageType(str, Enum):
    """
    The type of the image. Set to CloudBuild to let the system manages the image, where user will not be able to update image through image field. Set to ContainerImage for user provided image.
    """
    CLOUD_BUILD = "CloudBuild"
    CONTAINER_IMAGE = "ContainerImage"


class IngressClientCertificateMode(str, Enum):
    """
    Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.
    """
    IGNORE = "ignore"
    ACCEPT = "accept"
    REQUIRE = "require"


class IngressTargetPortHttpScheme(str, Enum):
    """
    Whether an http app listens on http or https
    """
    HTTP = "http"
    HTTPS = "https"


class IngressTransportMethod(str, Enum):
    """
    Ingress transport protocol
    """
    AUTO = "auto"
    HTTP = "http"
    HTTP2 = "http2"
    TCP = "tcp"


class JavaComponentType(str, Enum):
    """
    Type of the Java Component.
    """
    SPRING_BOOT_ADMIN = "SpringBootAdmin"
    SPRING_CLOUD_EUREKA = "SpringCloudEureka"
    SPRING_CLOUD_CONFIG = "SpringCloudConfig"
    SPRING_CLOUD_GATEWAY = "SpringCloudGateway"
    NACOS = "Nacos"


class Kind(str, Enum):
    """
    Metadata used to render different experiences for resources of the same type; e.g. WorkflowApp is a kind of Microsoft.App/ContainerApps type. If supported, the resource provider must validate and persist this value.
    """
    WORKFLOWAPP = "workflowapp"


class Level(str, Enum):
    """
    The specified logger's log level.
    """
    OFF = "off"
    ERROR = "error"
    INFO = "info"
    DEBUG = "debug"
    TRACE = "trace"
    WARN = "warn"


class LogLevel(str, Enum):
    """
    Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.
    """
    INFO = "info"
    DEBUG = "debug"
    WARN = "warn"
    ERROR = "error"


class ManagedCertificateDomainControlValidation(str, Enum):
    """
    Selected type of domain control validation for managed certificates.
    """
    CNAME = "CNAME"
    HTTP = "HTTP"
    TXT = "TXT"


class ManagedServiceIdentityType(str, Enum):
    """
    Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class PatchingMode(str, Enum):
    """
    Patching mode for the container app. Null or default in this field will be interpreted as Automatic by RP. Automatic mode will automatically apply available patches. Manual mode will require the user to manually apply patches. Disabled mode will stop patch detection and auto patching.
    """
    AUTOMATIC = "Automatic"
    MANUAL = "Manual"
    DISABLED = "Disabled"


class PoolManagementType(str, Enum):
    """
    The pool management type of the session pool.
    """
    MANUAL = "Manual"
    DYNAMIC = "Dynamic"


class PrivateEndpointServiceConnectionStatus(str, Enum):
    """
    Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    """
    PENDING = "Pending"
    APPROVED = "Approved"
    REJECTED = "Rejected"
    DISCONNECTED = "Disconnected"


class PublicNetworkAccess(str, Enum):
    """
    Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class Scheme(str, Enum):
    """
    Scheme to use for connecting to the host. Defaults to HTTP.
    """
    HTTP = "HTTP"
    HTTPS = "HTTPS"


class SessionNetworkStatus(str, Enum):
    """
    Network status for the sessions.
    """
    EGRESS_ENABLED = "EgressEnabled"
    EGRESS_DISABLED = "EgressDisabled"


class StorageType(str, Enum):
    """
    Storage type for the volume. If not provided, use EmptyDir.
    """
    AZURE_FILE = "AzureFile"
    EMPTY_DIR = "EmptyDir"
    SECRET = "Secret"
    NFS_AZURE_FILE = "NfsAzureFile"
    SMB = "Smb"


class TriggerType(str, Enum):
    """
    Trigger type of the job
    """
    SCHEDULE = "Schedule"
    EVENT = "Event"
    MANUAL = "Manual"


class Type(str, Enum):
    """
    The type of probe.
    """
    LIVENESS = "Liveness"
    READINESS = "Readiness"
    STARTUP = "Startup"


class UnauthenticatedClientActionV2(str, Enum):
    """
    The action to take when an unauthenticated client attempts to access the app.
    """
    REDIRECT_TO_LOGIN_PAGE = "RedirectToLoginPage"
    ALLOW_ANONYMOUS = "AllowAnonymous"
    RETURN401 = "Return401"
    RETURN403 = "Return403"


class WeekDay(str, Enum):
    """
    Day of the week when a managed environment can be patched.
    """
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"
    SUNDAY = "Sunday"
    EVERYDAY = "Everyday"
    WEEKEND = "Weekend"
