# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from ._enums import *

__all__ = [
    'GroupQuotasEntityPropertiesArgs',
    'GroupQuotasEntityPropertiesArgsDict',
]

MYPY = False

if not MYPY:
    class GroupQuotasEntityPropertiesArgsDict(TypedDict):
        display_name: NotRequired[pulumi.Input[str]]
        """
        Display name of the GroupQuota entity.
        """
        group_type: NotRequired[pulumi.Input[Union[str, 'GroupType']]]
        """
        Group type.
        """
        location: NotRequired[pulumi.Input[str]]
        """
        Location of the GroupQuota entity.
        """
elif False:
    GroupQuotasEntityPropertiesArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GroupQuotasEntityPropertiesArgs:
    def __init__(__self__, *,
                 display_name: Optional[pulumi.Input[str]] = None,
                 group_type: Optional[pulumi.Input[Union[str, 'GroupType']]] = None,
                 location: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display_name: Display name of the GroupQuota entity.
        :param pulumi.Input[Union[str, 'GroupType']] group_type: Group type.
        :param pulumi.Input[str] location: Location of the GroupQuota entity.
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if group_type is not None:
            pulumi.set(__self__, "group_type", group_type)
        if location is not None:
            pulumi.set(__self__, "location", location)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        Display name of the GroupQuota entity.
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="groupType")
    def group_type(self) -> Optional[pulumi.Input[Union[str, 'GroupType']]]:
        """
        Group type.
        """
        return pulumi.get(self, "group_type")

    @group_type.setter
    def group_type(self, value: Optional[pulumi.Input[Union[str, 'GroupType']]]):
        pulumi.set(self, "group_type", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        Location of the GroupQuota entity.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)


