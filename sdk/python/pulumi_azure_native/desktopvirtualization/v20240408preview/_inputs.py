# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from ._enums import *

__all__ = [
    'TimeArgs',
    'TimeArgsDict',
]

MYPY = False

if not MYPY:
    class TimeArgsDict(TypedDict):
        """
        The time for a scaling action to occur.
        """
        hour: pulumi.Input[int]
        """
        The hour.
        """
        minute: pulumi.Input[int]
        """
        The minute.
        """
elif False:
    TimeArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class TimeArgs:
    def __init__(__self__, *,
                 hour: pulumi.Input[int],
                 minute: pulumi.Input[int]):
        """
        The time for a scaling action to occur.
        :param pulumi.Input[int] hour: The hour.
        :param pulumi.Input[int] minute: The minute.
        """
        pulumi.set(__self__, "hour", hour)
        pulumi.set(__self__, "minute", minute)

    @property
    @pulumi.getter
    def hour(self) -> pulumi.Input[int]:
        """
        The hour.
        """
        return pulumi.get(self, "hour")

    @hour.setter
    def hour(self, value: pulumi.Input[int]):
        pulumi.set(self, "hour", value)

    @property
    @pulumi.getter
    def minute(self) -> pulumi.Input[int]:
        """
        The minute.
        """
        return pulumi.get(self, "minute")

    @minute.setter
    def minute(self, value: pulumi.Input[int]):
        pulumi.set(self, "minute", value)


