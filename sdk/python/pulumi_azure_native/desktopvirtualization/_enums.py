# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import pulumi
from enum import Enum

__all__ = [
    'ApplicationGroupType',
    'CommandLineSetting',
    'DayOfWeek',
    'FailHealthCheckOnStagingFailure',
    'HostPoolType',
    'HostpoolPublicNetworkAccess',
    'LoadBalancerType',
    'PackageTimestamped',
    'PersonalDesktopAssignmentType',
    'PreferredAppGroupType',
    'PrivateEndpointServiceConnectionStatus',
    'PublicNetworkAccess',
    'RegistrationTokenOperation',
    'RemoteApplicationType',
    'ResourceIdentityType',
    'SSOSecretType',
    'ScalingHostPoolType',
    'SessionHandlingOperation',
    'SessionHostComponentUpdateType',
    'SessionHostLoadBalancingAlgorithm',
    'SetStartVMOnConnect',
    'SkuTier',
    'StartupBehavior',
    'StopHostsWhen',
]


@pulumi.type_token("azure-native:desktopvirtualization:ApplicationGroupType")
class ApplicationGroupType(builtins.str, Enum):
    """
    Resource Type of ApplicationGroup.
    """
    REMOTE_APP = "RemoteApp"
    DESKTOP = "Desktop"


@pulumi.type_token("azure-native:desktopvirtualization:CommandLineSetting")
class CommandLineSetting(builtins.str, Enum):
    """
    Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.
    """
    DO_NOT_ALLOW = "DoNotAllow"
    ALLOW = "Allow"
    REQUIRE = "Require"


@pulumi.type_token("azure-native:desktopvirtualization:DayOfWeek")
class DayOfWeek(builtins.str, Enum):
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"
    SUNDAY = "Sunday"


@pulumi.type_token("azure-native:desktopvirtualization:FailHealthCheckOnStagingFailure")
class FailHealthCheckOnStagingFailure(builtins.str, Enum):
    """
    Parameter indicating how the health check should behave if this package fails staging
    """
    UNHEALTHY = "Unhealthy"
    NEEDS_ASSISTANCE = "NeedsAssistance"
    DO_NOT_FAIL = "DoNotFail"


@pulumi.type_token("azure-native:desktopvirtualization:HostPoolType")
class HostPoolType(builtins.str, Enum):
    """
    HostPool type for desktop.
    """
    PERSONAL = "Personal"
    """
    Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost.
    """
    POOLED = "Pooled"
    """
    Users get a new (random) SessionHost every time it connects to the HostPool.
    """
    BYO_DESKTOP = "BYODesktop"
    """
    Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct.
    """


@pulumi.type_token("azure-native:desktopvirtualization:HostpoolPublicNetworkAccess")
class HostpoolPublicNetworkAccess(builtins.str, Enum):
    """
    Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"
    ENABLED_FOR_SESSION_HOSTS_ONLY = "EnabledForSessionHostsOnly"
    ENABLED_FOR_CLIENTS_ONLY = "EnabledForClientsOnly"


@pulumi.type_token("azure-native:desktopvirtualization:LoadBalancerType")
class LoadBalancerType(builtins.str, Enum):
    """
    The type of the load balancer.
    """
    BREADTH_FIRST = "BreadthFirst"
    DEPTH_FIRST = "DepthFirst"
    PERSISTENT = "Persistent"


@pulumi.type_token("azure-native:desktopvirtualization:PackageTimestamped")
class PackageTimestamped(builtins.str, Enum):
    """
    Is package timestamped so it can ignore the certificate expiry date
    """
    TIMESTAMPED = "Timestamped"
    NOT_TIMESTAMPED = "NotTimestamped"


@pulumi.type_token("azure-native:desktopvirtualization:PersonalDesktopAssignmentType")
class PersonalDesktopAssignmentType(builtins.str, Enum):
    """
    PersonalDesktopAssignment type for HostPool.
    """
    AUTOMATIC = "Automatic"
    DIRECT = "Direct"


@pulumi.type_token("azure-native:desktopvirtualization:PreferredAppGroupType")
class PreferredAppGroupType(builtins.str, Enum):
    """
    The type of preferred application group type, default to Desktop Application Group
    """
    NONE = "None"
    DESKTOP = "Desktop"
    RAIL_APPLICATIONS = "RailApplications"


@pulumi.type_token("azure-native:desktopvirtualization:PrivateEndpointServiceConnectionStatus")
class PrivateEndpointServiceConnectionStatus(builtins.str, Enum):
    """
    Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    """
    PENDING = "Pending"
    APPROVED = "Approved"
    REJECTED = "Rejected"


@pulumi.type_token("azure-native:desktopvirtualization:PublicNetworkAccess")
class PublicNetworkAccess(builtins.str, Enum):
    """
    Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:desktopvirtualization:RegistrationTokenOperation")
class RegistrationTokenOperation(builtins.str, Enum):
    """
    The type of resetting the token.
    """
    DELETE = "Delete"
    NONE = "None"
    UPDATE = "Update"


@pulumi.type_token("azure-native:desktopvirtualization:RemoteApplicationType")
class RemoteApplicationType(builtins.str, Enum):
    """
    Resource Type of Application.
    """
    IN_BUILT = "InBuilt"
    MSIX_APPLICATION = "MsixApplication"


@pulumi.type_token("azure-native:desktopvirtualization:ResourceIdentityType")
class ResourceIdentityType(builtins.str, Enum):
    """
    The identity type.
    """
    SYSTEM_ASSIGNED = "SystemAssigned"


@pulumi.type_token("azure-native:desktopvirtualization:SSOSecretType")
class SSOSecretType(builtins.str, Enum):
    """
    The type of single sign on Secret Type.
    """
    SHARED_KEY = "SharedKey"
    CERTIFICATE = "Certificate"
    SHARED_KEY_IN_KEY_VAULT = "SharedKeyInKeyVault"
    CERTIFICATE_IN_KEY_VAULT = "CertificateInKeyVault"


@pulumi.type_token("azure-native:desktopvirtualization:ScalingHostPoolType")
class ScalingHostPoolType(builtins.str, Enum):
    """
    HostPool type for desktop.
    """
    POOLED = "Pooled"
    """
    Users get a new (random) SessionHost every time it connects to the HostPool.
    """


@pulumi.type_token("azure-native:desktopvirtualization:SessionHandlingOperation")
class SessionHandlingOperation(builtins.str, Enum):
    """
    Action to be taken after a logoff during the ramp up period.
    """
    NONE = "None"
    DEALLOCATE = "Deallocate"


@pulumi.type_token("azure-native:desktopvirtualization:SessionHostComponentUpdateType")
class SessionHostComponentUpdateType(builtins.str, Enum):
    """
    The type of maintenance for session host components.
    """
    DEFAULT = "Default"
    """
    Agent and other agent side components are delivery schedule is controlled by WVD Infra.
    """
    SCHEDULED = "Scheduled"
    """
    TenantAdmin have opted in for Scheduled Component Update feature.
    """


@pulumi.type_token("azure-native:desktopvirtualization:SessionHostLoadBalancingAlgorithm")
class SessionHostLoadBalancingAlgorithm(builtins.str, Enum):
    """
    Load balancing algorithm for ramp up period.
    """
    BREADTH_FIRST = "BreadthFirst"
    DEPTH_FIRST = "DepthFirst"


@pulumi.type_token("azure-native:desktopvirtualization:SetStartVMOnConnect")
class SetStartVMOnConnect(builtins.str, Enum):
    """
    The desired configuration of Start VM On Connect for the hostpool during the ramp up phase. If this is disabled, session hosts must be turned on using rampUpAutoStartHosts or by turning them on manually.
    """
    ENABLE = "Enable"
    DISABLE = "Disable"


@pulumi.type_token("azure-native:desktopvirtualization:SkuTier")
class SkuTier(builtins.str, Enum):
    """
    This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    """
    FREE = "Free"
    BASIC = "Basic"
    STANDARD = "Standard"
    PREMIUM = "Premium"


@pulumi.type_token("azure-native:desktopvirtualization:StartupBehavior")
class StartupBehavior(builtins.str, Enum):
    """
    The desired startup behavior during the ramp up period for personal vms in the hostpool.
    """
    NONE = "None"
    """
    Session hosts will not be started by the service. This setting depends on Start VM on Connect to be enabled to start the session hosts.
    """
    WITH_ASSIGNED_USER = "WithAssignedUser"
    """
    Session hosts with an assigned user will be started during Ramp Up
    """
    ALL = "All"
    """
    All personal session hosts in the hostpool will be started during ramp up.
    """


@pulumi.type_token("azure-native:desktopvirtualization:StopHostsWhen")
class StopHostsWhen(builtins.str, Enum):
    """
    Specifies when to stop hosts during ramp down period.
    """
    ZERO_SESSIONS = "ZeroSessions"
    ZERO_ACTIVE_SESSIONS = "ZeroActiveSessions"
