# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AttackTactic',
    'EntityTimelineKind',
    'FileFormat',
    'FileImportContentType',
    'Flag',
    'HypothesisStatus',
    'IncidentTaskStatus',
    'IngestionMode',
    'Kind',
    'Mode',
    'Operator',
    'OwnerType',
    'PackageKind',
    'SourceKind',
    'Status',
    'SupportTier',
]


class AttackTactic(str, Enum):
    """
    The severity for alerts created by this alert rule.
    """
    RECONNAISSANCE = "Reconnaissance"
    RESOURCE_DEVELOPMENT = "ResourceDevelopment"
    INITIAL_ACCESS = "InitialAccess"
    EXECUTION = "Execution"
    PERSISTENCE = "Persistence"
    PRIVILEGE_ESCALATION = "PrivilegeEscalation"
    DEFENSE_EVASION = "DefenseEvasion"
    CREDENTIAL_ACCESS = "CredentialAccess"
    DISCOVERY = "Discovery"
    LATERAL_MOVEMENT = "LateralMovement"
    COLLECTION = "Collection"
    EXFILTRATION = "Exfiltration"
    COMMAND_AND_CONTROL = "CommandAndControl"
    IMPACT = "Impact"
    PRE_ATTACK = "PreAttack"
    IMPAIR_PROCESS_CONTROL = "ImpairProcessControl"
    INHIBIT_RESPONSE_FUNCTION = "InhibitResponseFunction"


class EntityTimelineKind(str, Enum):
    """
    The entity query kind
    """
    ACTIVITY = "Activity"
    """
    activity
    """
    BOOKMARK = "Bookmark"
    """
    bookmarks
    """
    SECURITY_ALERT = "SecurityAlert"
    """
    security alerts
    """
    ANOMALY = "Anomaly"
    """
    anomaly
    """


class FileFormat(str, Enum):
    """
    The format of the file
    """
    CSV = "CSV"
    """
    A CSV file.
    """
    JSON = "JSON"
    """
    A JSON file.
    """
    UNSPECIFIED = "Unspecified"
    """
    A file of other format.
    """


class FileImportContentType(str, Enum):
    """
    The content type of this file.
    """
    BASIC_INDICATOR = "BasicIndicator"
    """
    File containing records with the core fields of an indicator, plus the observables to construct the STIX pattern.
    """
    STIX_INDICATOR = "StixIndicator"
    """
    File containing STIX indicators.
    """
    UNSPECIFIED = "Unspecified"
    """
    File containing other records.
    """


class Flag(str, Enum):
    """
    Flag indicates if this package is in preview.
    """
    TRUE = "true"
    FALSE = "false"


class HypothesisStatus(str, Enum):
    """
    The hypothesis status of the hunt.
    """
    UNKNOWN = "Unknown"
    INVALIDATED = "Invalidated"
    VALIDATED = "Validated"


class IncidentTaskStatus(str, Enum):
    NEW = "New"
    """
    A new task
    """
    COMPLETED = "Completed"
    """
    A completed task
    """


class IngestionMode(str, Enum):
    """
    Describes how to ingest the records in the file.
    """
    INGEST_ONLY_IF_ALL_ARE_VALID = "IngestOnlyIfAllAreValid"
    """
    No records should be ingested when invalid records are detected.
    """
    INGEST_ANY_VALID_RECORDS = "IngestAnyValidRecords"
    """
    Valid records should still be ingested when invalid records are detected.
    """
    UNSPECIFIED = "Unspecified"
    """
    Unspecified
    """


class Kind(str, Enum):
    """
    Type of the content item we depend on
    """
    DATA_CONNECTOR = "DataConnector"
    DATA_TYPE = "DataType"
    WORKBOOK = "Workbook"
    WORKBOOK_TEMPLATE = "WorkbookTemplate"
    PLAYBOOK = "Playbook"
    PLAYBOOK_TEMPLATE = "PlaybookTemplate"
    ANALYTICS_RULE_TEMPLATE = "AnalyticsRuleTemplate"
    ANALYTICS_RULE = "AnalyticsRule"
    HUNTING_QUERY = "HuntingQuery"
    INVESTIGATION_QUERY = "InvestigationQuery"
    PARSER = "Parser"
    WATCHLIST = "Watchlist"
    WATCHLIST_TEMPLATE = "WatchlistTemplate"
    SOLUTION = "Solution"
    AZURE_FUNCTION = "AzureFunction"
    LOGIC_APPS_CUSTOM_CONNECTOR = "LogicAppsCustomConnector"
    AUTOMATION_RULE = "AutomationRule"


class Mode(str, Enum):
    """
    The current mode of the workspace manager configuration
    """
    ENABLED = "Enabled"
    """
    The workspace manager configuration is enabled
    """
    DISABLED = "Disabled"
    """
    The workspace manager configuration is disabled
    """


class Operator(str, Enum):
    """
    Operator used for list of dependencies in criteria array.
    """
    AND_ = "AND"
    OR_ = "OR"


class OwnerType(str, Enum):
    """
    The type of the owner the hunt is assigned to.
    """
    UNKNOWN = "Unknown"
    """
    The hunt owner type is unknown
    """
    USER = "User"
    """
    The hunt owner type is an AAD user
    """
    GROUP = "Group"
    """
    The hunt owner type is an AAD group
    """


class PackageKind(str, Enum):
    """
    the packageKind of the package contains this template
    """
    SOLUTION = "Solution"
    STANDALONE = "Standalone"


class SourceKind(str, Enum):
    """
    Source type of the content
    """
    LOCAL_WORKSPACE = "LocalWorkspace"
    COMMUNITY = "Community"
    SOLUTION = "Solution"
    SOURCE_REPOSITORY = "SourceRepository"


class Status(str, Enum):
    """
    The status of the hunt.
    """
    NEW = "New"
    ACTIVE = "Active"
    CLOSED = "Closed"


class SupportTier(str, Enum):
    """
    Type of support for content item
    """
    MICROSOFT = "Microsoft"
    PARTNER = "Partner"
    COMMUNITY = "Community"
