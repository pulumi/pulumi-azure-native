# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AlertRuleKind',
    'AlertSeverity',
    'AttackTactic',
    'AutomationRuleActionType',
    'AutomationRuleConditionType',
    'AutomationRulePropertyConditionSupportedOperator',
    'AutomationRulePropertyConditionSupportedProperty',
    'CaseSeverity',
    'DataConnectorKind',
    'DataTypeState',
    'EntitiesMatchingMethod',
    'EntityTimelineKind',
    'EventGroupingAggregationKind',
    'GroupingEntityType',
    'IncidentClassification',
    'IncidentClassificationReason',
    'IncidentSeverity',
    'IncidentStatus',
    'MicrosoftSecurityProductName',
    'PollingFrequency',
    'SettingKind',
    'Source',
    'ThreatIntelligenceResourceKind',
    'TriggerOperator',
    'TriggersOn',
    'TriggersWhen',
    'UebaDataSources',
]


class AlertRuleKind(str, Enum):
    """
    The kind of the alert rule
    """
    SCHEDULED = "Scheduled"
    MICROSOFT_SECURITY_INCIDENT_CREATION = "MicrosoftSecurityIncidentCreation"
    FUSION = "Fusion"
    ML_BEHAVIOR_ANALYTICS = "MLBehaviorAnalytics"
    THREAT_INTELLIGENCE = "ThreatIntelligence"


class AlertSeverity(str, Enum):
    """
    The severity for alerts created by this alert rule.
    """
    HIGH = "High"
    MEDIUM = "Medium"
    LOW = "Low"
    INFORMATIONAL = "Informational"


class AttackTactic(str, Enum):
    """
    The severity for alerts created by this alert rule.
    """
    INITIAL_ACCESS = "InitialAccess"
    EXECUTION = "Execution"
    PERSISTENCE = "Persistence"
    PRIVILEGE_ESCALATION = "PrivilegeEscalation"
    DEFENSE_EVASION = "DefenseEvasion"
    CREDENTIAL_ACCESS = "CredentialAccess"
    DISCOVERY = "Discovery"
    LATERAL_MOVEMENT = "LateralMovement"
    COLLECTION = "Collection"
    EXFILTRATION = "Exfiltration"
    COMMAND_AND_CONTROL = "CommandAndControl"
    IMPACT = "Impact"
    PRE_ATTACK = "PreAttack"


class AutomationRuleActionType(str, Enum):
    """
    The type of the automation rule action
    """
    MODIFY_PROPERTIES = "ModifyProperties"
    RUN_PLAYBOOK = "RunPlaybook"


class AutomationRuleConditionType(str, Enum):
    """
    The type of the automation rule condition
    """
    PROPERTY = "Property"


class AutomationRulePropertyConditionSupportedOperator(str, Enum):
    """
    The operator to use for evaluation the condition
    """
    EQUALS = "Equals"
    NOT_EQUALS = "NotEquals"
    CONTAINS = "Contains"
    NOT_CONTAINS = "NotContains"
    STARTS_WITH = "StartsWith"
    NOT_STARTS_WITH = "NotStartsWith"
    ENDS_WITH = "EndsWith"
    NOT_ENDS_WITH = "NotEndsWith"


class AutomationRulePropertyConditionSupportedProperty(str, Enum):
    """
    The property to evaluate
    """
    INCIDENT_TITLE = "IncidentTitle"
    INCIDENT_DESCRIPTION = "IncidentDescription"
    INCIDENT_SEVERITY = "IncidentSeverity"
    INCIDENT_STATUS = "IncidentStatus"
    INCIDENT_TACTICS = "IncidentTactics"
    INCIDENT_RELATED_ANALYTIC_RULE_IDS = "IncidentRelatedAnalyticRuleIds"
    INCIDENT_PROVIDER_NAME = "IncidentProviderName"
    ACCOUNT_AAD_TENANT_ID = "AccountAadTenantId"
    ACCOUNT_AAD_USER_ID = "AccountAadUserId"
    ACCOUNT_NAME = "AccountName"
    ACCOUNT_NT_DOMAIN = "AccountNTDomain"
    ACCOUNT_PUID = "AccountPUID"
    ACCOUNT_SID = "AccountSid"
    ACCOUNT_OBJECT_GUID = "AccountObjectGuid"
    ACCOUNT_UPN_SUFFIX = "AccountUPNSuffix"
    AZURE_RESOURCE_RESOURCE_ID = "AzureResourceResourceId"
    AZURE_RESOURCE_SUBSCRIPTION_ID = "AzureResourceSubscriptionId"
    CLOUD_APPLICATION_APP_ID = "CloudApplicationAppId"
    CLOUD_APPLICATION_APP_NAME = "CloudApplicationAppName"
    DNS_DOMAIN_NAME = "DNSDomainName"
    FILE_DIRECTORY = "FileDirectory"
    FILE_NAME = "FileName"
    FILE_HASH_VALUE = "FileHashValue"
    HOST_AZURE_ID = "HostAzureID"
    HOST_NAME = "HostName"
    HOST_NET_BIOS_NAME = "HostNetBiosName"
    HOST_NT_DOMAIN = "HostNTDomain"
    HOST_OS_VERSION = "HostOSVersion"
    IO_T_DEVICE_ID = "IoTDeviceId"
    IO_T_DEVICE_NAME = "IoTDeviceName"
    IO_T_DEVICE_TYPE = "IoTDeviceType"
    IO_T_DEVICE_VENDOR = "IoTDeviceVendor"
    IO_T_DEVICE_MODEL = "IoTDeviceModel"
    IO_T_DEVICE_OPERATING_SYSTEM = "IoTDeviceOperatingSystem"
    IP_ADDRESS = "IPAddress"
    MAILBOX_DISPLAY_NAME = "MailboxDisplayName"
    MAILBOX_PRIMARY_ADDRESS = "MailboxPrimaryAddress"
    MAILBOX_UPN = "MailboxUPN"
    MAIL_MESSAGE_DELIVERY_ACTION = "MailMessageDeliveryAction"
    MAIL_MESSAGE_DELIVERY_LOCATION = "MailMessageDeliveryLocation"
    MAIL_MESSAGE_RECIPIENT = "MailMessageRecipient"
    MAIL_MESSAGE_SENDER_IP = "MailMessageSenderIP"
    MAIL_MESSAGE_SUBJECT = "MailMessageSubject"
    MAIL_MESSAGE_P1_SENDER = "MailMessageP1Sender"
    MAIL_MESSAGE_P2_SENDER = "MailMessageP2Sender"
    MALWARE_CATEGORY = "MalwareCategory"
    MALWARE_NAME = "MalwareName"
    PROCESS_COMMAND_LINE = "ProcessCommandLine"
    PROCESS_ID = "ProcessId"
    REGISTRY_KEY = "RegistryKey"
    REGISTRY_VALUE_DATA = "RegistryValueData"
    URL = "Url"


class CaseSeverity(str, Enum):
    """
    The severity of the incident
    """
    CRITICAL = "Critical"
    HIGH = "High"
    MEDIUM = "Medium"
    LOW = "Low"
    INFORMATIONAL = "Informational"


class DataConnectorKind(str, Enum):
    """
    The kind of the data connector
    """
    AZURE_ACTIVE_DIRECTORY = "AzureActiveDirectory"
    AZURE_SECURITY_CENTER = "AzureSecurityCenter"
    MICROSOFT_CLOUD_APP_SECURITY = "MicrosoftCloudAppSecurity"
    THREAT_INTELLIGENCE = "ThreatIntelligence"
    THREAT_INTELLIGENCE_TAXII = "ThreatIntelligenceTaxii"
    OFFICE365 = "Office365"
    OFFICE_ATP = "OfficeATP"
    AMAZON_WEB_SERVICES_CLOUD_TRAIL = "AmazonWebServicesCloudTrail"
    AZURE_ADVANCED_THREAT_PROTECTION = "AzureAdvancedThreatProtection"
    MICROSOFT_DEFENDER_ADVANCED_THREAT_PROTECTION = "MicrosoftDefenderAdvancedThreatProtection"
    DYNAMICS365 = "Dynamics365"
    MICROSOFT_THREAT_PROTECTION = "MicrosoftThreatProtection"
    MICROSOFT_THREAT_INTELLIGENCE = "MicrosoftThreatIntelligence"


class DataTypeState(str, Enum):
    """
    Describe whether this data type connection is enabled or not.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class EntitiesMatchingMethod(str, Enum):
    """
    Grouping matching method
    """
    ALL = "All"
    NONE = "None"
    CUSTOM = "Custom"


class EntityTimelineKind(str, Enum):
    """
    The entity query kind
    """
    ACTIVITY = "Activity"
    BOOKMARK = "Bookmark"
    SECURITY_ALERT = "SecurityAlert"


class EventGroupingAggregationKind(str, Enum):
    """
    The event grouping aggregation kinds
    """
    SINGLE_ALERT = "SingleAlert"
    ALERT_PER_RESULT = "AlertPerResult"


class GroupingEntityType(str, Enum):
    """
    Grouping entity type
    """
    ACCOUNT = "Account"
    HOST = "Host"
    IP = "Ip"
    URL = "Url"
    FILE_HASH = "FileHash"


class IncidentClassification(str, Enum):
    """
    The reason the incident was closed
    """
    UNDETERMINED = "Undetermined"
    TRUE_POSITIVE = "TruePositive"
    BENIGN_POSITIVE = "BenignPositive"
    FALSE_POSITIVE = "FalsePositive"


class IncidentClassificationReason(str, Enum):
    """
    The classification reason the incident was closed with
    """
    SUSPICIOUS_ACTIVITY = "SuspiciousActivity"
    SUSPICIOUS_BUT_EXPECTED = "SuspiciousButExpected"
    INCORRECT_ALERT_LOGIC = "IncorrectAlertLogic"
    INACCURATE_DATA = "InaccurateData"


class IncidentSeverity(str, Enum):
    """
    The severity of the incident
    """
    HIGH = "High"
    MEDIUM = "Medium"
    LOW = "Low"
    INFORMATIONAL = "Informational"


class IncidentStatus(str, Enum):
    """
    The status of the incident
    """
    NEW = "New"
    ACTIVE = "Active"
    CLOSED = "Closed"


class MicrosoftSecurityProductName(str, Enum):
    """
    The alerts' productName on which the cases will be generated
    """
    MICROSOFT_CLOUD_APP_SECURITY = "Microsoft Cloud App Security"
    AZURE_SECURITY_CENTER = "Azure Security Center"
    AZURE_ADVANCED_THREAT_PROTECTION = "Azure Advanced Threat Protection"
    AZURE_ACTIVE_DIRECTORY_IDENTITY_PROTECTION = "Azure Active Directory Identity Protection"
    AZURE_SECURITY_CENTER_FOR_IO_T = "Azure Security Center for IoT"
    OFFICE_365_ADVANCED_THREAT_PROTECTION = "Office 365 Advanced Threat Protection"
    MICROSOFT_DEFENDER_ADVANCED_THREAT_PROTECTION = "Microsoft Defender Advanced Threat Protection"


class PollingFrequency(str, Enum):
    """
    The polling frequency for the TAXII server.
    """
    ONCE_A_MINUTE = "OnceAMinute"
    ONCE_AN_HOUR = "OnceAnHour"
    ONCE_A_DAY = "OnceADay"


class SettingKind(str, Enum):
    """
    The kind of the setting
    """
    EYES_ON = "EyesOn"
    ENTITY_ANALYTICS = "EntityAnalytics"
    UEBA = "Ueba"


class Source(str, Enum):
    """
    The source of the watchlist
    """
    LOCAL_FILE = "Local file"
    REMOTE_STORAGE = "Remote storage"


class ThreatIntelligenceResourceKind(str, Enum):
    """
    The kind of the entity.
    """
    INDICATOR = "indicator"


class TriggerOperator(str, Enum):
    """
    The operation against the threshold that triggers alert rule.
    """
    GREATER_THAN = "GreaterThan"
    LESS_THAN = "LessThan"
    EQUAL = "Equal"
    NOT_EQUAL = "NotEqual"


class TriggersOn(str, Enum):
    """
    The type of object the automation rule triggers on
    """
    INCIDENTS = "Incidents"


class TriggersWhen(str, Enum):
    """
    The type of event the automation rule triggers on
    """
    CREATED = "Created"


class UebaDataSources(str, Enum):
    """
    The data source that enriched by ueba.
    """
    AUDIT_LOGS = "AuditLogs"
    AZURE_ACTIVITY = "AzureActivity"
    SECURITY_EVENT = "SecurityEvent"
    SIGNIN_LOGS = "SigninLogs"
