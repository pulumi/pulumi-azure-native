# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AlertDetail',
    'AlertRuleKind',
    'AlertSeverity',
    'AttackTactic',
    'ConnectivityType',
    'ContentType',
    'CreatedByType',
    'CustomEntityQueryKind',
    'DataConnectorKind',
    'DataTypeState',
    'EntityMappingType',
    'EntityType',
    'EventGroupingAggregationKind',
    'IncidentClassification',
    'IncidentClassificationReason',
    'IncidentSeverity',
    'IncidentStatus',
    'Kind',
    'MatchingMethod',
    'MicrosoftSecurityProductName',
    'Operator',
    'PermissionProviderScope',
    'PollingFrequency',
    'ProviderName',
    'RepoType',
    'SettingKind',
    'SettingType',
    'Source',
    'SourceKind',
    'SupportTier',
    'TriggerOperator',
    'UebaDataSources',
]


class AlertDetail(str, Enum):
    DISPLAY_NAME = "DisplayName"
    """
    Alert display name
    """
    SEVERITY = "Severity"
    """
    Alert severity
    """


class AlertRuleKind(str, Enum):
    SCHEDULED = "Scheduled"
    MICROSOFT_SECURITY_INCIDENT_CREATION = "MicrosoftSecurityIncidentCreation"
    FUSION = "Fusion"
    ML_BEHAVIOR_ANALYTICS = "MLBehaviorAnalytics"
    THREAT_INTELLIGENCE = "ThreatIntelligence"


class AlertSeverity(str, Enum):
    HIGH = "High"
    """
    High severity
    """
    MEDIUM = "Medium"
    """
    Medium severity
    """
    LOW = "Low"
    """
    Low severity
    """
    INFORMATIONAL = "Informational"
    """
    Informational severity
    """


class AttackTactic(str, Enum):
    INITIAL_ACCESS = "InitialAccess"
    EXECUTION = "Execution"
    PERSISTENCE = "Persistence"
    PRIVILEGE_ESCALATION = "PrivilegeEscalation"
    DEFENSE_EVASION = "DefenseEvasion"
    CREDENTIAL_ACCESS = "CredentialAccess"
    DISCOVERY = "Discovery"
    LATERAL_MOVEMENT = "LateralMovement"
    COLLECTION = "Collection"
    EXFILTRATION = "Exfiltration"
    COMMAND_AND_CONTROL = "CommandAndControl"
    IMPACT = "Impact"
    PRE_ATTACK = "PreAttack"


class ConnectivityType(str, Enum):
    IS_CONNECTED_QUERY = "IsConnectedQuery"


class ContentType(str, Enum):
    ANALYTIC_RULE = "AnalyticRule"
    WORKBOOK = "Workbook"


class CreatedByType(str, Enum):
    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class CustomEntityQueryKind(str, Enum):
    ACTIVITY = "Activity"


class DataConnectorKind(str, Enum):
    AZURE_ACTIVE_DIRECTORY = "AzureActiveDirectory"
    AZURE_SECURITY_CENTER = "AzureSecurityCenter"
    MICROSOFT_CLOUD_APP_SECURITY = "MicrosoftCloudAppSecurity"
    THREAT_INTELLIGENCE = "ThreatIntelligence"
    THREAT_INTELLIGENCE_TAXII = "ThreatIntelligenceTaxii"
    OFFICE365 = "Office365"
    OFFICE_ATP = "OfficeATP"
    AMAZON_WEB_SERVICES_CLOUD_TRAIL = "AmazonWebServicesCloudTrail"
    AZURE_ADVANCED_THREAT_PROTECTION = "AzureAdvancedThreatProtection"
    MICROSOFT_DEFENDER_ADVANCED_THREAT_PROTECTION = "MicrosoftDefenderAdvancedThreatProtection"
    DYNAMICS365 = "Dynamics365"
    MICROSOFT_THREAT_PROTECTION = "MicrosoftThreatProtection"
    MICROSOFT_THREAT_INTELLIGENCE = "MicrosoftThreatIntelligence"
    GENERIC_UI = "GenericUI"


class DataTypeState(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class EntityMappingType(str, Enum):
    ACCOUNT = "Account"
    """
    User account entity type
    """
    HOST = "Host"
    """
    Host entity type
    """
    IP = "IP"
    """
    IP address entity type
    """
    MALWARE = "Malware"
    """
    Malware entity type
    """
    FILE = "File"
    """
    System file entity type
    """
    PROCESS = "Process"
    """
    Process entity type
    """
    CLOUD_APPLICATION = "CloudApplication"
    """
    Cloud app entity type
    """
    DNS = "DNS"
    """
    DNS entity type
    """
    AZURE_RESOURCE = "AzureResource"
    """
    Azure resource entity type
    """
    FILE_HASH = "FileHash"
    """
    File-hash entity type
    """
    REGISTRY_KEY = "RegistryKey"
    """
    Registry key entity type
    """
    REGISTRY_VALUE = "RegistryValue"
    """
    Registry value entity type
    """
    SECURITY_GROUP = "SecurityGroup"
    """
    Security group entity type
    """
    URL = "URL"
    """
    URL entity type
    """
    MAILBOX = "Mailbox"
    """
    Mailbox entity type
    """
    MAIL_CLUSTER = "MailCluster"
    """
    Mail cluster entity type
    """
    MAIL_MESSAGE = "MailMessage"
    """
    Mail message entity type
    """
    SUBMISSION_MAIL = "SubmissionMail"
    """
    Submission mail entity type
    """


class EntityType(str, Enum):
    ACCOUNT = "Account"
    """
    Entity represents account in the system.
    """
    HOST = "Host"
    """
    Entity represents host in the system.
    """
    FILE = "File"
    """
    Entity represents file in the system.
    """
    AZURE_RESOURCE = "AzureResource"
    """
    Entity represents azure resource in the system.
    """
    CLOUD_APPLICATION = "CloudApplication"
    """
    Entity represents cloud application in the system.
    """
    DNS = "DNS"
    """
    Entity represents dns in the system.
    """
    FILE_HASH = "FileHash"
    """
    Entity represents file hash in the system.
    """
    IP = "IP"
    """
    Entity represents ip in the system.
    """
    MALWARE = "Malware"
    """
    Entity represents malware in the system.
    """
    PROCESS = "Process"
    """
    Entity represents process in the system.
    """
    REGISTRY_KEY = "RegistryKey"
    """
    Entity represents registry key in the system.
    """
    REGISTRY_VALUE = "RegistryValue"
    """
    Entity represents registry value in the system.
    """
    SECURITY_GROUP = "SecurityGroup"
    """
    Entity represents security group in the system.
    """
    URL = "URL"
    """
    Entity represents url in the system.
    """
    IO_T_DEVICE = "IoTDevice"
    """
    Entity represents IoT device in the system.
    """
    SECURITY_ALERT = "SecurityAlert"
    """
    Entity represents security alert in the system.
    """
    HUNTING_BOOKMARK = "HuntingBookmark"
    """
    Entity represents HuntingBookmark in the system.
    """
    MAIL_CLUSTER = "MailCluster"
    """
    Entity represents mail cluster in the system.
    """
    MAIL_MESSAGE = "MailMessage"
    """
    Entity represents mail message in the system.
    """
    MAILBOX = "Mailbox"
    """
    Entity represents mailbox in the system.
    """
    SUBMISSION_MAIL = "SubmissionMail"
    """
    Entity represents submission mail in the system.
    """


class EventGroupingAggregationKind(str, Enum):
    SINGLE_ALERT = "SingleAlert"
    ALERT_PER_RESULT = "AlertPerResult"


class IncidentClassification(str, Enum):
    UNDETERMINED = "Undetermined"
    """
    Incident classification was undetermined
    """
    TRUE_POSITIVE = "TruePositive"
    """
    Incident was true positive
    """
    BENIGN_POSITIVE = "BenignPositive"
    """
    Incident was benign positive
    """
    FALSE_POSITIVE = "FalsePositive"
    """
    Incident was false positive
    """


class IncidentClassificationReason(str, Enum):
    SUSPICIOUS_ACTIVITY = "SuspiciousActivity"
    """
    Classification reason was suspicious activity
    """
    SUSPICIOUS_BUT_EXPECTED = "SuspiciousButExpected"
    """
    Classification reason was suspicious but expected
    """
    INCORRECT_ALERT_LOGIC = "IncorrectAlertLogic"
    """
    Classification reason was incorrect alert logic
    """
    INACCURATE_DATA = "InaccurateData"
    """
    Classification reason was inaccurate data
    """


class IncidentSeverity(str, Enum):
    HIGH = "High"
    """
    High severity
    """
    MEDIUM = "Medium"
    """
    Medium severity
    """
    LOW = "Low"
    """
    Low severity
    """
    INFORMATIONAL = "Informational"
    """
    Informational severity
    """


class IncidentStatus(str, Enum):
    NEW = "New"
    """
    An active incident which isn't being handled currently
    """
    ACTIVE = "Active"
    """
    An active incident which is being handled
    """
    CLOSED = "Closed"
    """
    A non-active incident
    """


class Kind(str, Enum):
    DATA_CONNECTOR = "DataConnector"
    DATA_TYPE = "DataType"
    WORKBOOK = "Workbook"
    WORKBOOK_TEMPLATE = "WorkbookTemplate"
    PLAYBOOK = "Playbook"
    PLAYBOOK_TEMPLATE = "PlaybookTemplate"
    ANALYTICS_RULE_TEMPLATE = "AnalyticsRuleTemplate"
    ANALYTICS_RULE = "AnalyticsRule"
    HUNTING_QUERY = "HuntingQuery"
    INVESTIGATION_QUERY = "InvestigationQuery"
    PARSER = "Parser"
    WATCHLIST = "Watchlist"
    WATCHLIST_TEMPLATE = "WatchlistTemplate"
    SOLUTION = "Solution"


class MatchingMethod(str, Enum):
    ALL_ENTITIES = "AllEntities"
    """
    Grouping alerts into a single incident if all the entities match
    """
    ANY_ALERT = "AnyAlert"
    """
    Grouping any alerts triggered by this rule into a single incident
    """
    SELECTED = "Selected"
    """
    Grouping alerts into a single incident if the selected entities, custom details and alert details match
    """


class MicrosoftSecurityProductName(str, Enum):
    MICROSOFT_CLOUD_APP_SECURITY = "Microsoft Cloud App Security"
    AZURE_SECURITY_CENTER = "Azure Security Center"
    AZURE_ADVANCED_THREAT_PROTECTION = "Azure Advanced Threat Protection"
    AZURE_ACTIVE_DIRECTORY_IDENTITY_PROTECTION = "Azure Active Directory Identity Protection"
    AZURE_SECURITY_CENTER_FOR_IO_T = "Azure Security Center for IoT"
    OFFICE_365_ADVANCED_THREAT_PROTECTION = "Office 365 Advanced Threat Protection"
    MICROSOFT_DEFENDER_ADVANCED_THREAT_PROTECTION = "Microsoft Defender Advanced Threat Protection"


class Operator(str, Enum):
    AND_ = "AND"
    OR_ = "OR"


class PermissionProviderScope(str, Enum):
    RESOURCE_GROUP = "ResourceGroup"
    SUBSCRIPTION = "Subscription"
    WORKSPACE = "Workspace"


class PollingFrequency(str, Enum):
    ONCE_A_MINUTE = "OnceAMinute"
    """
    Once a minute
    """
    ONCE_AN_HOUR = "OnceAnHour"
    """
    Once an hour
    """
    ONCE_A_DAY = "OnceADay"
    """
    Once a day
    """


class ProviderName(str, Enum):
    MICROSOFT_OPERATIONAL_INSIGHTS_SOLUTIONS = "Microsoft.OperationalInsights/solutions"
    MICROSOFT_OPERATIONAL_INSIGHTS_WORKSPACES = "Microsoft.OperationalInsights/workspaces"
    MICROSOFT_OPERATIONAL_INSIGHTS_WORKSPACES_DATASOURCES = "Microsoft.OperationalInsights/workspaces/datasources"
    MICROSOFT_AADIAM_DIAGNOSTIC_SETTINGS = "microsoft.aadiam/diagnosticSettings"
    MICROSOFT_OPERATIONAL_INSIGHTS_WORKSPACES_SHARED_KEYS = "Microsoft.OperationalInsights/workspaces/sharedKeys"
    MICROSOFT_AUTHORIZATION_POLICY_ASSIGNMENTS = "Microsoft.Authorization/policyAssignments"


class RepoType(str, Enum):
    GITHUB = "Github"
    DEV_OPS = "DevOps"


class SettingKind(str, Enum):
    ANOMALIES = "Anomalies"
    EYES_ON = "EyesOn"
    ENTITY_ANALYTICS = "EntityAnalytics"
    UEBA = "Ueba"


class SettingType(str, Enum):
    COPYABLE_LABEL = "CopyableLabel"
    INSTRUCTION_STEPS_GROUP = "InstructionStepsGroup"
    INFO_MESSAGE = "InfoMessage"


class Source(str, Enum):
    LOCAL_FILE = "Local file"
    REMOTE_STORAGE = "Remote storage"


class SourceKind(str, Enum):
    LOCAL_WORKSPACE = "LocalWorkspace"
    COMMUNITY = "Community"
    SOLUTION = "Solution"
    SOURCE_REPOSITORY = "SourceRepository"


class SupportTier(str, Enum):
    MICROSOFT = "Microsoft"
    PARTNER = "Partner"
    COMMUNITY = "Community"


class TriggerOperator(str, Enum):
    GREATER_THAN = "GreaterThan"
    LESS_THAN = "LessThan"
    EQUAL = "Equal"
    NOT_EQUAL = "NotEqual"


class UebaDataSources(str, Enum):
    AUDIT_LOGS = "AuditLogs"
    AZURE_ACTIVITY = "AzureActivity"
    SECURITY_EVENT = "SecurityEvent"
    SIGNIN_LOGS = "SigninLogs"
