# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'DiskResponse',
    'HardwareProfileResponse',
    'NetworkInterfaceResponse',
    'NetworkProfileResponse',
    'OSProfileResponse',
    'StorageBillingPropertiesResponse',
    'StorageProfileResponse',
    'StoragePropertiesResponse',
    'SystemDataResponse',
]

@pulumi.output_type
class DiskResponse(dict):
    """
    Specifies the disk information fo the Azure Bare Metal Instance
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "diskSizeGB":
            suggest = "disk_size_gb"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DiskResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DiskResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DiskResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 lun: int,
                 disk_size_gb: Optional[int] = None,
                 name: Optional[str] = None):
        """
        Specifies the disk information fo the Azure Bare Metal Instance
        :param int lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        :param int disk_size_gb: Specifies the size of an empty data disk in gigabytes.
        :param str name: The disk name.
        """
        pulumi.set(__self__, "lun", lun)
        if disk_size_gb is not None:
            pulumi.set(__self__, "disk_size_gb", disk_size_gb)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def lun(self) -> int:
        """
        Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        """
        return pulumi.get(self, "lun")

    @property
    @pulumi.getter(name="diskSizeGB")
    def disk_size_gb(self) -> Optional[int]:
        """
        Specifies the size of an empty data disk in gigabytes.
        """
        return pulumi.get(self, "disk_size_gb")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        The disk name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class HardwareProfileResponse(dict):
    """
    Specifies the hardware settings for the Azure Bare Metal Instance.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "azureBareMetalInstanceSize":
            suggest = "azure_bare_metal_instance_size"
        elif key == "hardwareType":
            suggest = "hardware_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HardwareProfileResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HardwareProfileResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HardwareProfileResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 azure_bare_metal_instance_size: Optional[str] = None,
                 hardware_type: Optional[str] = None):
        """
        Specifies the hardware settings for the Azure Bare Metal Instance.
        :param str azure_bare_metal_instance_size: Specifies the Azure Bare Metal Instance SKU.
        :param str hardware_type: Name of the hardware type (vendor and/or their product name)
        """
        if azure_bare_metal_instance_size is not None:
            pulumi.set(__self__, "azure_bare_metal_instance_size", azure_bare_metal_instance_size)
        if hardware_type is not None:
            pulumi.set(__self__, "hardware_type", hardware_type)

    @property
    @pulumi.getter(name="azureBareMetalInstanceSize")
    def azure_bare_metal_instance_size(self) -> Optional[str]:
        """
        Specifies the Azure Bare Metal Instance SKU.
        """
        return pulumi.get(self, "azure_bare_metal_instance_size")

    @property
    @pulumi.getter(name="hardwareType")
    def hardware_type(self) -> Optional[str]:
        """
        Name of the hardware type (vendor and/or their product name)
        """
        return pulumi.get(self, "hardware_type")


@pulumi.output_type
class NetworkInterfaceResponse(dict):
    """
    Specifies the network interfaces of a bare metal resource.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "ipAddress":
            suggest = "ip_address"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in NetworkInterfaceResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        NetworkInterfaceResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        NetworkInterfaceResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ip_address: Optional[str] = None):
        """
        Specifies the network interfaces of a bare metal resource.
        :param str ip_address: Specifies the IP address of the network interface.
        """
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[str]:
        """
        Specifies the IP address of the network interface.
        """
        return pulumi.get(self, "ip_address")


@pulumi.output_type
class NetworkProfileResponse(dict):
    """
    Specifies the network settings for the Azure Bare Metal Instance disks.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "circuitId":
            suggest = "circuit_id"
        elif key == "networkInterfaces":
            suggest = "network_interfaces"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in NetworkProfileResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        NetworkProfileResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        NetworkProfileResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 circuit_id: Optional[str] = None,
                 network_interfaces: Optional[Sequence['outputs.NetworkInterfaceResponse']] = None):
        """
        Specifies the network settings for the Azure Bare Metal Instance disks.
        :param str circuit_id: Specifies the circuit id for connecting to express route.
        :param Sequence['NetworkInterfaceResponse'] network_interfaces: Specifies the network interfaces for the Azure Bare Metal Instance.
        """
        if circuit_id is not None:
            pulumi.set(__self__, "circuit_id", circuit_id)
        if network_interfaces is not None:
            pulumi.set(__self__, "network_interfaces", network_interfaces)

    @property
    @pulumi.getter(name="circuitId")
    def circuit_id(self) -> Optional[str]:
        """
        Specifies the circuit id for connecting to express route.
        """
        return pulumi.get(self, "circuit_id")

    @property
    @pulumi.getter(name="networkInterfaces")
    def network_interfaces(self) -> Optional[Sequence['outputs.NetworkInterfaceResponse']]:
        """
        Specifies the network interfaces for the Azure Bare Metal Instance.
        """
        return pulumi.get(self, "network_interfaces")


@pulumi.output_type
class OSProfileResponse(dict):
    """
    Specifies the operating system settings for the Azure Bare Metal instance.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "computerName":
            suggest = "computer_name"
        elif key == "osType":
            suggest = "os_type"
        elif key == "sshPublicKey":
            suggest = "ssh_public_key"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in OSProfileResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        OSProfileResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        OSProfileResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 computer_name: Optional[str] = None,
                 os_type: Optional[str] = None,
                 ssh_public_key: Optional[str] = None,
                 version: Optional[str] = None):
        """
        Specifies the operating system settings for the Azure Bare Metal instance.
        :param str computer_name: Specifies the host OS name of the Azure Bare Metal instance.
        :param str os_type: This property allows you to specify the type of the OS.
        :param str ssh_public_key: Specifies the SSH public key used to access the operating system.
        :param str version: Specifies version of operating system.
        """
        if computer_name is not None:
            pulumi.set(__self__, "computer_name", computer_name)
        if os_type is not None:
            pulumi.set(__self__, "os_type", os_type)
        if ssh_public_key is not None:
            pulumi.set(__self__, "ssh_public_key", ssh_public_key)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="computerName")
    def computer_name(self) -> Optional[str]:
        """
        Specifies the host OS name of the Azure Bare Metal instance.
        """
        return pulumi.get(self, "computer_name")

    @property
    @pulumi.getter(name="osType")
    def os_type(self) -> Optional[str]:
        """
        This property allows you to specify the type of the OS.
        """
        return pulumi.get(self, "os_type")

    @property
    @pulumi.getter(name="sshPublicKey")
    def ssh_public_key(self) -> Optional[str]:
        """
        Specifies the SSH public key used to access the operating system.
        """
        return pulumi.get(self, "ssh_public_key")

    @property
    @pulumi.getter
    def version(self) -> Optional[str]:
        """
        Specifies version of operating system.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class StorageBillingPropertiesResponse(dict):
    """
    Describes the billing related details of the AzureBareMetalStorageInstance.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "azureBareMetalStorageInstanceSize":
            suggest = "azure_bare_metal_storage_instance_size"
        elif key == "billingMode":
            suggest = "billing_mode"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in StorageBillingPropertiesResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        StorageBillingPropertiesResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        StorageBillingPropertiesResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 azure_bare_metal_storage_instance_size: Optional[str] = None,
                 billing_mode: Optional[str] = None):
        """
        Describes the billing related details of the AzureBareMetalStorageInstance.
        :param str azure_bare_metal_storage_instance_size: the SKU type that is provisioned
        :param str billing_mode: the billing mode for the storage instance
        """
        if azure_bare_metal_storage_instance_size is not None:
            pulumi.set(__self__, "azure_bare_metal_storage_instance_size", azure_bare_metal_storage_instance_size)
        if billing_mode is not None:
            pulumi.set(__self__, "billing_mode", billing_mode)

    @property
    @pulumi.getter(name="azureBareMetalStorageInstanceSize")
    def azure_bare_metal_storage_instance_size(self) -> Optional[str]:
        """
        the SKU type that is provisioned
        """
        return pulumi.get(self, "azure_bare_metal_storage_instance_size")

    @property
    @pulumi.getter(name="billingMode")
    def billing_mode(self) -> Optional[str]:
        """
        the billing mode for the storage instance
        """
        return pulumi.get(self, "billing_mode")


@pulumi.output_type
class StorageProfileResponse(dict):
    """
    Specifies the storage settings for the Azure Bare Metal instance disks.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "nfsIpAddress":
            suggest = "nfs_ip_address"
        elif key == "osDisks":
            suggest = "os_disks"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in StorageProfileResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        StorageProfileResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        StorageProfileResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 nfs_ip_address: Optional[str] = None,
                 os_disks: Optional[Sequence['outputs.DiskResponse']] = None):
        """
        Specifies the storage settings for the Azure Bare Metal instance disks.
        :param str nfs_ip_address: IP Address to connect to storage.
        :param Sequence['DiskResponse'] os_disks: Specifies information about the operating system disk used by bare metal instance.
        """
        if nfs_ip_address is not None:
            pulumi.set(__self__, "nfs_ip_address", nfs_ip_address)
        if os_disks is not None:
            pulumi.set(__self__, "os_disks", os_disks)

    @property
    @pulumi.getter(name="nfsIpAddress")
    def nfs_ip_address(self) -> Optional[str]:
        """
        IP Address to connect to storage.
        """
        return pulumi.get(self, "nfs_ip_address")

    @property
    @pulumi.getter(name="osDisks")
    def os_disks(self) -> Optional[Sequence['outputs.DiskResponse']]:
        """
        Specifies information about the operating system disk used by bare metal instance.
        """
        return pulumi.get(self, "os_disks")


@pulumi.output_type
class StoragePropertiesResponse(dict):
    """
    described the storage properties of the azure baremetalstorage instance
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "hardwareType":
            suggest = "hardware_type"
        elif key == "offeringType":
            suggest = "offering_type"
        elif key == "provisioningState":
            suggest = "provisioning_state"
        elif key == "storageBillingProperties":
            suggest = "storage_billing_properties"
        elif key == "storageType":
            suggest = "storage_type"
        elif key == "workloadType":
            suggest = "workload_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in StoragePropertiesResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        StoragePropertiesResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        StoragePropertiesResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 generation: Optional[str] = None,
                 hardware_type: Optional[str] = None,
                 offering_type: Optional[str] = None,
                 provisioning_state: Optional[str] = None,
                 storage_billing_properties: Optional['outputs.StorageBillingPropertiesResponse'] = None,
                 storage_type: Optional[str] = None,
                 workload_type: Optional[str] = None):
        """
        described the storage properties of the azure baremetalstorage instance
        :param str generation: the kind of storage instance
        :param str hardware_type: the hardware type of the storage instance
        :param str offering_type: the offering type for which the resource is getting provisioned
        :param str provisioning_state: State of provisioning of the AzureBareMetalStorageInstance
        :param 'StorageBillingPropertiesResponse' storage_billing_properties: the billing related information for the resource
        :param str storage_type: the storage protocol for which the resource is getting provisioned
        :param str workload_type: the workload for which the resource is getting provisioned
        """
        if generation is not None:
            pulumi.set(__self__, "generation", generation)
        if hardware_type is not None:
            pulumi.set(__self__, "hardware_type", hardware_type)
        if offering_type is not None:
            pulumi.set(__self__, "offering_type", offering_type)
        if provisioning_state is not None:
            pulumi.set(__self__, "provisioning_state", provisioning_state)
        if storage_billing_properties is not None:
            pulumi.set(__self__, "storage_billing_properties", storage_billing_properties)
        if storage_type is not None:
            pulumi.set(__self__, "storage_type", storage_type)
        if workload_type is not None:
            pulumi.set(__self__, "workload_type", workload_type)

    @property
    @pulumi.getter
    def generation(self) -> Optional[str]:
        """
        the kind of storage instance
        """
        return pulumi.get(self, "generation")

    @property
    @pulumi.getter(name="hardwareType")
    def hardware_type(self) -> Optional[str]:
        """
        the hardware type of the storage instance
        """
        return pulumi.get(self, "hardware_type")

    @property
    @pulumi.getter(name="offeringType")
    def offering_type(self) -> Optional[str]:
        """
        the offering type for which the resource is getting provisioned
        """
        return pulumi.get(self, "offering_type")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> Optional[str]:
        """
        State of provisioning of the AzureBareMetalStorageInstance
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="storageBillingProperties")
    def storage_billing_properties(self) -> Optional['outputs.StorageBillingPropertiesResponse']:
        """
        the billing related information for the resource
        """
        return pulumi.get(self, "storage_billing_properties")

    @property
    @pulumi.getter(name="storageType")
    def storage_type(self) -> Optional[str]:
        """
        the storage protocol for which the resource is getting provisioned
        """
        return pulumi.get(self, "storage_type")

    @property
    @pulumi.getter(name="workloadType")
    def workload_type(self) -> Optional[str]:
        """
        the workload for which the resource is getting provisioned
        """
        return pulumi.get(self, "workload_type")


@pulumi.output_type
class SystemDataResponse(dict):
    """
    Metadata pertaining to creation and last modification of the resource.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "createdAt":
            suggest = "created_at"
        elif key == "createdBy":
            suggest = "created_by"
        elif key == "createdByType":
            suggest = "created_by_type"
        elif key == "lastModifiedAt":
            suggest = "last_modified_at"
        elif key == "lastModifiedBy":
            suggest = "last_modified_by"
        elif key == "lastModifiedByType":
            suggest = "last_modified_by_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in SystemDataResponse. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        SystemDataResponse.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 created_at: Optional[str] = None,
                 created_by: Optional[str] = None,
                 created_by_type: Optional[str] = None,
                 last_modified_at: Optional[str] = None,
                 last_modified_by: Optional[str] = None,
                 last_modified_by_type: Optional[str] = None):
        """
        Metadata pertaining to creation and last modification of the resource.
        :param str created_at: The timestamp of resource creation (UTC).
        :param str created_by: The identity that created the resource.
        :param str created_by_type: The type of identity that created the resource.
        :param str last_modified_at: The timestamp of resource last modification (UTC)
        :param str last_modified_by: The identity that last modified the resource.
        :param str last_modified_by_type: The type of identity that last modified the resource.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if created_by_type is not None:
            pulumi.set(__self__, "created_by_type", created_by_type)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by is not None:
            pulumi.set(__self__, "last_modified_by", last_modified_by)
        if last_modified_by_type is not None:
            pulumi.set(__self__, "last_modified_by_type", last_modified_by_type)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[str]:
        """
        The timestamp of resource creation (UTC).
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[str]:
        """
        The identity that created the resource.
        """
        return pulumi.get(self, "created_by")

    @property
    @pulumi.getter(name="createdByType")
    def created_by_type(self) -> Optional[str]:
        """
        The type of identity that created the resource.
        """
        return pulumi.get(self, "created_by_type")

    @property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[str]:
        """
        The timestamp of resource last modification (UTC)
        """
        return pulumi.get(self, "last_modified_at")

    @property
    @pulumi.getter(name="lastModifiedBy")
    def last_modified_by(self) -> Optional[str]:
        """
        The identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by")

    @property
    @pulumi.getter(name="lastModifiedByType")
    def last_modified_by_type(self) -> Optional[str]:
        """
        The type of identity that last modified the resource.
        """
        return pulumi.get(self, "last_modified_by_type")


