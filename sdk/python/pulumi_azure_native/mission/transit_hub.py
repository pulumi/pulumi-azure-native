# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['TransitHubArgs', 'TransitHub']

@pulumi.input_type
class TransitHubArgs:
    def __init__(__self__, *,
                 community_name: pulumi.Input[builtins.str],
                 resource_group_name: pulumi.Input[builtins.str],
                 location: Optional[pulumi.Input[builtins.str]] = None,
                 state: Optional[pulumi.Input[Union[builtins.str, 'TransitHubState']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 transit_hub_name: Optional[pulumi.Input[builtins.str]] = None,
                 transit_option: Optional[pulumi.Input['TransitOptionArgs']] = None):
        """
        The set of arguments for constructing a TransitHub resource.
        :param pulumi.Input[builtins.str] community_name: The name of the communityResource Resource
        :param pulumi.Input[builtins.str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[builtins.str] location: The geo-location where the resource lives
        :param pulumi.Input[Union[builtins.str, 'TransitHubState']] state: The state of the transitHub.
        :param pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]] tags: Resource tags.
        :param pulumi.Input[builtins.str] transit_hub_name: The name of the TransitHub Resource
        :param pulumi.Input['TransitOptionArgs'] transit_option: The TransitOption of the transitHub.
        """
        pulumi.set(__self__, "community_name", community_name)
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if transit_hub_name is not None:
            pulumi.set(__self__, "transit_hub_name", transit_hub_name)
        if transit_option is not None:
            pulumi.set(__self__, "transit_option", transit_option)

    @property
    @pulumi.getter(name="communityName")
    def community_name(self) -> pulumi.Input[builtins.str]:
        """
        The name of the communityResource Resource
        """
        return pulumi.get(self, "community_name")

    @community_name.setter
    def community_name(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "community_name", value)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[builtins.str]:
        """
        The name of the resource group. The name is case insensitive.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[Union[builtins.str, 'TransitHubState']]]:
        """
        The state of the transitHub.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[Union[builtins.str, 'TransitHubState']]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="transitHubName")
    def transit_hub_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the TransitHub Resource
        """
        return pulumi.get(self, "transit_hub_name")

    @transit_hub_name.setter
    def transit_hub_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "transit_hub_name", value)

    @property
    @pulumi.getter(name="transitOption")
    def transit_option(self) -> Optional[pulumi.Input['TransitOptionArgs']]:
        """
        The TransitOption of the transitHub.
        """
        return pulumi.get(self, "transit_option")

    @transit_option.setter
    def transit_option(self, value: Optional[pulumi.Input['TransitOptionArgs']]):
        pulumi.set(self, "transit_option", value)


@pulumi.type_token("azure-native:mission:TransitHub")
class TransitHub(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 community_name: Optional[pulumi.Input[builtins.str]] = None,
                 location: Optional[pulumi.Input[builtins.str]] = None,
                 resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 state: Optional[pulumi.Input[Union[builtins.str, 'TransitHubState']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 transit_hub_name: Optional[pulumi.Input[builtins.str]] = None,
                 transit_option: Optional[pulumi.Input[Union['TransitOptionArgs', 'TransitOptionArgsDict']]] = None,
                 __props__=None):
        """
        TransitHub Model Resource

        Uses Azure REST API version 2025-05-01-preview.

        Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] community_name: The name of the communityResource Resource
        :param pulumi.Input[builtins.str] location: The geo-location where the resource lives
        :param pulumi.Input[builtins.str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[Union[builtins.str, 'TransitHubState']] state: The state of the transitHub.
        :param pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]] tags: Resource tags.
        :param pulumi.Input[builtins.str] transit_hub_name: The name of the TransitHub Resource
        :param pulumi.Input[Union['TransitOptionArgs', 'TransitOptionArgsDict']] transit_option: The TransitOption of the transitHub.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: TransitHubArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        TransitHub Model Resource

        Uses Azure REST API version 2025-05-01-preview.

        Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.

        :param str resource_name: The name of the resource.
        :param TransitHubArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(TransitHubArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 community_name: Optional[pulumi.Input[builtins.str]] = None,
                 location: Optional[pulumi.Input[builtins.str]] = None,
                 resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 state: Optional[pulumi.Input[Union[builtins.str, 'TransitHubState']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 transit_hub_name: Optional[pulumi.Input[builtins.str]] = None,
                 transit_option: Optional[pulumi.Input[Union['TransitOptionArgs', 'TransitOptionArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = TransitHubArgs.__new__(TransitHubArgs)

            if community_name is None and not opts.urn:
                raise TypeError("Missing required property 'community_name'")
            __props__.__dict__["community_name"] = community_name
            __props__.__dict__["location"] = location
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            __props__.__dict__["state"] = state
            __props__.__dict__["tags"] = tags
            __props__.__dict__["transit_hub_name"] = transit_hub_name
            __props__.__dict__["transit_option"] = transit_option
            __props__.__dict__["azure_api_version"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["provisioning_state"] = None
            __props__.__dict__["resource_collection"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:mission/v20240601preview:TransitHub"), pulumi.Alias(type_="azure-native:mission/v20241201preview:TransitHub"), pulumi.Alias(type_="azure-native:mission/v20250501preview:TransitHub")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(TransitHub, __self__).__init__(
            'azure-native:mission:TransitHub',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'TransitHub':
        """
        Get an existing TransitHub resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = TransitHubArgs.__new__(TransitHubArgs)

        __props__.__dict__["azure_api_version"] = None
        __props__.__dict__["location"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["provisioning_state"] = None
        __props__.__dict__["resource_collection"] = None
        __props__.__dict__["state"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["transit_option"] = None
        __props__.__dict__["type"] = None
        return TransitHub(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="azureApiVersion")
    def azure_api_version(self) -> pulumi.Output[builtins.str]:
        """
        The Azure API version of the resource.
        """
        return pulumi.get(self, "azure_api_version")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[builtins.str]:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[builtins.str]:
        """
        The status of the last operation.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="resourceCollection")
    def resource_collection(self) -> pulumi.Output[Sequence[builtins.str]]:
        """
        List of resource ids modified by transitHubs.
        """
        return pulumi.get(self, "resource_collection")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The state of the transitHub.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, builtins.str]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="transitOption")
    def transit_option(self) -> pulumi.Output[Optional['outputs.TransitOptionResponse']]:
        """
        The TransitOption of the transitHub.
        """
        return pulumi.get(self, "transit_option")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[builtins.str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

