# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['ApprovalArgs', 'Approval']

@pulumi.input_type
class ApprovalArgs:
    def __init__(__self__, *,
                 request_metadata: pulumi.Input['RequestMetadataArgs'],
                 resource_uri: pulumi.Input[builtins.str],
                 approval_name: Optional[pulumi.Input[builtins.str]] = None,
                 approvers: Optional[pulumi.Input[Sequence[pulumi.Input['ApproverArgs']]]] = None,
                 created_at: Optional[pulumi.Input[builtins.str]] = None,
                 grandparent_resource_id: Optional[pulumi.Input[builtins.str]] = None,
                 parent_resource_id: Optional[pulumi.Input[builtins.str]] = None,
                 state_changed_at: Optional[pulumi.Input[builtins.str]] = None,
                 ticket_id: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a Approval resource.
        :param pulumi.Input['RequestMetadataArgs'] request_metadata: Request metadata for the approval request.
        :param pulumi.Input[builtins.str] resource_uri: The fully qualified Azure Resource manager identifier of the resource.
        :param pulumi.Input[builtins.str] approval_name: The name of the approvals resource.
        :param pulumi.Input[Sequence[pulumi.Input['ApproverArgs']]] approvers: List of approvers for the approval request
        :param pulumi.Input[builtins.str] created_at: Approval request creation time
        :param pulumi.Input[builtins.str] grandparent_resource_id: Parameter for optimizing query results
        :param pulumi.Input[builtins.str] parent_resource_id: Parameter for optimizing query results
        :param pulumi.Input[builtins.str] state_changed_at: Approval request state change time, time at which approval request state changed from pending to approved or rejected.
        :param pulumi.Input[builtins.str] ticket_id: Ticket ID for the approval request
        """
        pulumi.set(__self__, "request_metadata", request_metadata)
        pulumi.set(__self__, "resource_uri", resource_uri)
        if approval_name is not None:
            pulumi.set(__self__, "approval_name", approval_name)
        if approvers is not None:
            pulumi.set(__self__, "approvers", approvers)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if grandparent_resource_id is not None:
            pulumi.set(__self__, "grandparent_resource_id", grandparent_resource_id)
        if parent_resource_id is not None:
            pulumi.set(__self__, "parent_resource_id", parent_resource_id)
        if state_changed_at is not None:
            pulumi.set(__self__, "state_changed_at", state_changed_at)
        if ticket_id is not None:
            pulumi.set(__self__, "ticket_id", ticket_id)

    @property
    @pulumi.getter(name="requestMetadata")
    def request_metadata(self) -> pulumi.Input['RequestMetadataArgs']:
        """
        Request metadata for the approval request.
        """
        return pulumi.get(self, "request_metadata")

    @request_metadata.setter
    def request_metadata(self, value: pulumi.Input['RequestMetadataArgs']):
        pulumi.set(self, "request_metadata", value)

    @property
    @pulumi.getter(name="resourceUri")
    def resource_uri(self) -> pulumi.Input[builtins.str]:
        """
        The fully qualified Azure Resource manager identifier of the resource.
        """
        return pulumi.get(self, "resource_uri")

    @resource_uri.setter
    def resource_uri(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "resource_uri", value)

    @property
    @pulumi.getter(name="approvalName")
    def approval_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the approvals resource.
        """
        return pulumi.get(self, "approval_name")

    @approval_name.setter
    def approval_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "approval_name", value)

    @property
    @pulumi.getter
    def approvers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ApproverArgs']]]]:
        """
        List of approvers for the approval request
        """
        return pulumi.get(self, "approvers")

    @approvers.setter
    def approvers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ApproverArgs']]]]):
        pulumi.set(self, "approvers", value)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Approval request creation time
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "created_at", value)

    @property
    @pulumi.getter(name="grandparentResourceId")
    def grandparent_resource_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Parameter for optimizing query results
        """
        return pulumi.get(self, "grandparent_resource_id")

    @grandparent_resource_id.setter
    def grandparent_resource_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "grandparent_resource_id", value)

    @property
    @pulumi.getter(name="parentResourceId")
    def parent_resource_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Parameter for optimizing query results
        """
        return pulumi.get(self, "parent_resource_id")

    @parent_resource_id.setter
    def parent_resource_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "parent_resource_id", value)

    @property
    @pulumi.getter(name="stateChangedAt")
    def state_changed_at(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Approval request state change time, time at which approval request state changed from pending to approved or rejected.
        """
        return pulumi.get(self, "state_changed_at")

    @state_changed_at.setter
    def state_changed_at(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "state_changed_at", value)

    @property
    @pulumi.getter(name="ticketId")
    def ticket_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Ticket ID for the approval request
        """
        return pulumi.get(self, "ticket_id")

    @ticket_id.setter
    def ticket_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ticket_id", value)


@pulumi.type_token("azure-native:mission:Approval")
class Approval(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 approval_name: Optional[pulumi.Input[builtins.str]] = None,
                 approvers: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ApproverArgs', 'ApproverArgsDict']]]]] = None,
                 created_at: Optional[pulumi.Input[builtins.str]] = None,
                 grandparent_resource_id: Optional[pulumi.Input[builtins.str]] = None,
                 parent_resource_id: Optional[pulumi.Input[builtins.str]] = None,
                 request_metadata: Optional[pulumi.Input[Union['RequestMetadataArgs', 'RequestMetadataArgsDict']]] = None,
                 resource_uri: Optional[pulumi.Input[builtins.str]] = None,
                 state_changed_at: Optional[pulumi.Input[builtins.str]] = None,
                 ticket_id: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        Approval Model Resource

        Uses Azure REST API version 2025-05-01-preview.

        Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] approval_name: The name of the approvals resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ApproverArgs', 'ApproverArgsDict']]]] approvers: List of approvers for the approval request
        :param pulumi.Input[builtins.str] created_at: Approval request creation time
        :param pulumi.Input[builtins.str] grandparent_resource_id: Parameter for optimizing query results
        :param pulumi.Input[builtins.str] parent_resource_id: Parameter for optimizing query results
        :param pulumi.Input[Union['RequestMetadataArgs', 'RequestMetadataArgsDict']] request_metadata: Request metadata for the approval request.
        :param pulumi.Input[builtins.str] resource_uri: The fully qualified Azure Resource manager identifier of the resource.
        :param pulumi.Input[builtins.str] state_changed_at: Approval request state change time, time at which approval request state changed from pending to approved or rejected.
        :param pulumi.Input[builtins.str] ticket_id: Ticket ID for the approval request
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ApprovalArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Approval Model Resource

        Uses Azure REST API version 2025-05-01-preview.

        Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.

        :param str resource_name: The name of the resource.
        :param ApprovalArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ApprovalArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 approval_name: Optional[pulumi.Input[builtins.str]] = None,
                 approvers: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ApproverArgs', 'ApproverArgsDict']]]]] = None,
                 created_at: Optional[pulumi.Input[builtins.str]] = None,
                 grandparent_resource_id: Optional[pulumi.Input[builtins.str]] = None,
                 parent_resource_id: Optional[pulumi.Input[builtins.str]] = None,
                 request_metadata: Optional[pulumi.Input[Union['RequestMetadataArgs', 'RequestMetadataArgsDict']]] = None,
                 resource_uri: Optional[pulumi.Input[builtins.str]] = None,
                 state_changed_at: Optional[pulumi.Input[builtins.str]] = None,
                 ticket_id: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ApprovalArgs.__new__(ApprovalArgs)

            __props__.__dict__["approval_name"] = approval_name
            __props__.__dict__["approvers"] = approvers
            __props__.__dict__["created_at"] = created_at
            __props__.__dict__["grandparent_resource_id"] = grandparent_resource_id
            __props__.__dict__["parent_resource_id"] = parent_resource_id
            if request_metadata is None and not opts.urn:
                raise TypeError("Missing required property 'request_metadata'")
            __props__.__dict__["request_metadata"] = request_metadata
            if resource_uri is None and not opts.urn:
                raise TypeError("Missing required property 'resource_uri'")
            __props__.__dict__["resource_uri"] = resource_uri
            __props__.__dict__["state_changed_at"] = state_changed_at
            __props__.__dict__["ticket_id"] = ticket_id
            __props__.__dict__["azure_api_version"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["provisioning_state"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:mission/v20240601preview:Approval"), pulumi.Alias(type_="azure-native:mission/v20241201preview:Approval"), pulumi.Alias(type_="azure-native:mission/v20250501preview:Approval")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(Approval, __self__).__init__(
            'azure-native:mission:Approval',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Approval':
        """
        Get an existing Approval resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = ApprovalArgs.__new__(ApprovalArgs)

        __props__.__dict__["approvers"] = None
        __props__.__dict__["azure_api_version"] = None
        __props__.__dict__["created_at"] = None
        __props__.__dict__["grandparent_resource_id"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["parent_resource_id"] = None
        __props__.__dict__["provisioning_state"] = None
        __props__.__dict__["request_metadata"] = None
        __props__.__dict__["state_changed_at"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["ticket_id"] = None
        __props__.__dict__["type"] = None
        return Approval(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def approvers(self) -> pulumi.Output[Optional[Sequence['outputs.ApproverResponse']]]:
        """
        List of approvers for the approval request
        """
        return pulumi.get(self, "approvers")

    @property
    @pulumi.getter(name="azureApiVersion")
    def azure_api_version(self) -> pulumi.Output[builtins.str]:
        """
        The Azure API version of the resource.
        """
        return pulumi.get(self, "azure_api_version")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Approval request creation time
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="grandparentResourceId")
    def grandparent_resource_id(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Parameter for optimizing query results
        """
        return pulumi.get(self, "grandparent_resource_id")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="parentResourceId")
    def parent_resource_id(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Parameter for optimizing query results
        """
        return pulumi.get(self, "parent_resource_id")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[builtins.str]:
        """
        Provisioning State.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter(name="requestMetadata")
    def request_metadata(self) -> pulumi.Output['outputs.RequestMetadataResponse']:
        """
        Request metadata for the approval request.
        """
        return pulumi.get(self, "request_metadata")

    @property
    @pulumi.getter(name="stateChangedAt")
    def state_changed_at(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Approval request state change time, time at which approval request state changed from pending to approved or rejected.
        """
        return pulumi.get(self, "state_changed_at")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter(name="ticketId")
    def ticket_id(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Ticket ID for the approval request
        """
        return pulumi.get(self, "ticket_id")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[builtins.str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

