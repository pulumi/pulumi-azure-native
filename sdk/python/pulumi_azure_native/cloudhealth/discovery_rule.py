# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['DiscoveryRuleArgs', 'DiscoveryRule']

@pulumi.input_type
class DiscoveryRuleArgs:
    def __init__(__self__, *,
                 health_model_name: pulumi.Input[builtins.str],
                 resource_group_name: pulumi.Input[builtins.str],
                 discovery_rule_name: Optional[pulumi.Input[builtins.str]] = None,
                 properties: Optional[pulumi.Input['DiscoveryRulePropertiesArgs']] = None):
        """
        The set of arguments for constructing a DiscoveryRule resource.
        :param pulumi.Input[builtins.str] health_model_name: Name of health model resource
        :param pulumi.Input[builtins.str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[builtins.str] discovery_rule_name: Name of the discovery rule. Must be unique within a health model.
        :param pulumi.Input['DiscoveryRulePropertiesArgs'] properties: The resource-specific properties for this resource.
        """
        pulumi.set(__self__, "health_model_name", health_model_name)
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        if discovery_rule_name is not None:
            pulumi.set(__self__, "discovery_rule_name", discovery_rule_name)
        if properties is not None:
            pulumi.set(__self__, "properties", properties)

    @property
    @pulumi.getter(name="healthModelName")
    def health_model_name(self) -> pulumi.Input[builtins.str]:
        """
        Name of health model resource
        """
        return pulumi.get(self, "health_model_name")

    @health_model_name.setter
    def health_model_name(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "health_model_name", value)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[builtins.str]:
        """
        The name of the resource group. The name is case insensitive.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter(name="discoveryRuleName")
    def discovery_rule_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Name of the discovery rule. Must be unique within a health model.
        """
        return pulumi.get(self, "discovery_rule_name")

    @discovery_rule_name.setter
    def discovery_rule_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "discovery_rule_name", value)

    @property
    @pulumi.getter
    def properties(self) -> Optional[pulumi.Input['DiscoveryRulePropertiesArgs']]:
        """
        The resource-specific properties for this resource.
        """
        return pulumi.get(self, "properties")

    @properties.setter
    def properties(self, value: Optional[pulumi.Input['DiscoveryRulePropertiesArgs']]):
        pulumi.set(self, "properties", value)


@pulumi.type_token("azure-native:cloudhealth:DiscoveryRule")
class DiscoveryRule(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 discovery_rule_name: Optional[pulumi.Input[builtins.str]] = None,
                 health_model_name: Optional[pulumi.Input[builtins.str]] = None,
                 properties: Optional[pulumi.Input[Union['DiscoveryRulePropertiesArgs', 'DiscoveryRulePropertiesArgsDict']]] = None,
                 resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        A discovery rule which automatically finds entities and relationships in a health model based on an Azure Resource Graph query

        Uses Azure REST API version 2025-05-01-preview.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] discovery_rule_name: Name of the discovery rule. Must be unique within a health model.
        :param pulumi.Input[builtins.str] health_model_name: Name of health model resource
        :param pulumi.Input[Union['DiscoveryRulePropertiesArgs', 'DiscoveryRulePropertiesArgsDict']] properties: The resource-specific properties for this resource.
        :param pulumi.Input[builtins.str] resource_group_name: The name of the resource group. The name is case insensitive.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DiscoveryRuleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        A discovery rule which automatically finds entities and relationships in a health model based on an Azure Resource Graph query

        Uses Azure REST API version 2025-05-01-preview.

        :param str resource_name: The name of the resource.
        :param DiscoveryRuleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DiscoveryRuleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 discovery_rule_name: Optional[pulumi.Input[builtins.str]] = None,
                 health_model_name: Optional[pulumi.Input[builtins.str]] = None,
                 properties: Optional[pulumi.Input[Union['DiscoveryRulePropertiesArgs', 'DiscoveryRulePropertiesArgsDict']]] = None,
                 resource_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DiscoveryRuleArgs.__new__(DiscoveryRuleArgs)

            __props__.__dict__["discovery_rule_name"] = discovery_rule_name
            if health_model_name is None and not opts.urn:
                raise TypeError("Missing required property 'health_model_name'")
            __props__.__dict__["health_model_name"] = health_model_name
            __props__.__dict__["properties"] = properties
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            __props__.__dict__["azure_api_version"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:cloudhealth/v20250501preview:DiscoveryRule")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(DiscoveryRule, __self__).__init__(
            'azure-native:cloudhealth:DiscoveryRule',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'DiscoveryRule':
        """
        Get an existing DiscoveryRule resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = DiscoveryRuleArgs.__new__(DiscoveryRuleArgs)

        __props__.__dict__["azure_api_version"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["properties"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["type"] = None
        return DiscoveryRule(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="azureApiVersion")
    def azure_api_version(self) -> pulumi.Output[builtins.str]:
        """
        The Azure API version of the resource.
        """
        return pulumi.get(self, "azure_api_version")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def properties(self) -> pulumi.Output['outputs.DiscoveryRulePropertiesResponse']:
        """
        The resource-specific properties for this resource.
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[builtins.str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

