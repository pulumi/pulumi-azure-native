# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import pulumi
from enum import Enum

__all__ = [
    'AllocationMethod',
    'CreateDiffDisk',
    'DynamicMemoryEnabled',
    'IdentityType',
    'InventoryType',
    'LimitCpuForMigration',
    'ProvisioningAction',
]


@pulumi.type_token("azure-native:scvmm:AllocationMethod")
class AllocationMethod(builtins.str, Enum):
    """
    Gets or sets the mac address type.
    """
    DYNAMIC = "Dynamic"
    STATIC = "Static"


@pulumi.type_token("azure-native:scvmm:CreateDiffDisk")
class CreateDiffDisk(builtins.str, Enum):
    """
    Gets or sets a value indicating diff disk.
    """
    FALSE = "false"
    TRUE = "true"


@pulumi.type_token("azure-native:scvmm:DynamicMemoryEnabled")
class DynamicMemoryEnabled(builtins.str, Enum):
    """
    Gets or sets a value indicating whether to enable dynamic memory or not.
    """
    FALSE = "false"
    TRUE = "true"


@pulumi.type_token("azure-native:scvmm:IdentityType")
class IdentityType(builtins.str, Enum):
    """
    The type of managed service identity.
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"


@pulumi.type_token("azure-native:scvmm:InventoryType")
class InventoryType(builtins.str, Enum):
    """
    They inventory type.
    """
    CLOUD = "Cloud"
    VIRTUAL_NETWORK = "VirtualNetwork"
    VIRTUAL_MACHINE_TEMPLATE = "VirtualMachineTemplate"
    VIRTUAL_MACHINE = "VirtualMachine"


@pulumi.type_token("azure-native:scvmm:LimitCpuForMigration")
class LimitCpuForMigration(builtins.str, Enum):
    """
    Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
    """
    FALSE = "false"
    TRUE = "true"


@pulumi.type_token("azure-native:scvmm:ProvisioningAction")
class ProvisioningAction(builtins.str, Enum):
    """
    Gets or sets the guest agent provisioning action.
    """
    INSTALL = "install"
    UNINSTALL = "uninstall"
    REPAIR = "repair"
