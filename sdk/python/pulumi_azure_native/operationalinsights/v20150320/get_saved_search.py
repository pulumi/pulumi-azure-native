# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs

__all__ = [
    'GetSavedSearchResult',
    'AwaitableGetSavedSearchResult',
    'get_saved_search',
    'get_saved_search_output',
]

warnings.warn("""Version 2015-03-20 will be removed in v2 of the provider.""", DeprecationWarning)

@pulumi.output_type
class GetSavedSearchResult:
    """
    Value object for saved search results.
    """
    def __init__(__self__, e_tag=None, id=None, name=None, properties=None, type=None):
        if e_tag and not isinstance(e_tag, str):
            raise TypeError("Expected argument 'e_tag' to be a str")
        pulumi.set(__self__, "e_tag", e_tag)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if properties and not isinstance(properties, dict):
            raise TypeError("Expected argument 'properties' to be a dict")
        pulumi.set(__self__, "properties", properties)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="eTag")
    def e_tag(self) -> Optional[str]:
        """
        The ETag of the saved search.
        """
        return pulumi.get(self, "e_tag")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the saved search.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the saved search.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def properties(self) -> 'outputs.SavedSearchPropertiesResponse':
        """
        The properties of the saved search.
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the saved search.
        """
        return pulumi.get(self, "type")


class AwaitableGetSavedSearchResult(GetSavedSearchResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSavedSearchResult(
            e_tag=self.e_tag,
            id=self.id,
            name=self.name,
            properties=self.properties,
            type=self.type)


def get_saved_search(resource_group_name: Optional[str] = None,
                     saved_search_id: Optional[str] = None,
                     workspace_name: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSavedSearchResult:
    """
    Gets the specified saved search for a given workspace.


    :param str resource_group_name: The Resource Group name.
    :param str saved_search_id: The id of the saved search.
    :param str workspace_name: The Log Analytics Workspace name.
    """
    pulumi.log.warn("""get_saved_search is deprecated: Version 2015-03-20 will be removed in v2 of the provider.""")
    __args__ = dict()
    __args__['resourceGroupName'] = resource_group_name
    __args__['savedSearchId'] = saved_search_id
    __args__['workspaceName'] = workspace_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:operationalinsights/v20150320:getSavedSearch', __args__, opts=opts, typ=GetSavedSearchResult).value

    return AwaitableGetSavedSearchResult(
        e_tag=__ret__.e_tag,
        id=__ret__.id,
        name=__ret__.name,
        properties=__ret__.properties,
        type=__ret__.type)


@_utilities.lift_output_func(get_saved_search)
def get_saved_search_output(resource_group_name: Optional[pulumi.Input[str]] = None,
                            saved_search_id: Optional[pulumi.Input[str]] = None,
                            workspace_name: Optional[pulumi.Input[str]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSavedSearchResult]:
    """
    Gets the specified saved search for a given workspace.


    :param str resource_group_name: The Resource Group name.
    :param str saved_search_id: The id of the saved search.
    :param str workspace_name: The Log Analytics Workspace name.
    """
    pulumi.log.warn("""get_saved_search is deprecated: Version 2015-03-20 will be removed in v2 of the provider.""")
    ...
