# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'DataPartitionNamesArgs',
    'EnergyServicePropertiesArgs',
]

@pulumi.input_type
class DataPartitionNamesArgs:
    def __init__(__self__, *,
                 name: Optional[pulumi.Input[str]] = None):
        """
        The list of Energy services resource's Data Partition Names.
        """
        DataPartitionNamesArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if name is not None:
            _setter("name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class EnergyServicePropertiesArgs:
    def __init__(__self__, *,
                 auth_app_id: Optional[pulumi.Input[str]] = None,
                 data_partition_names: Optional[pulumi.Input[Sequence[pulumi.Input['DataPartitionNamesArgs']]]] = None):
        EnergyServicePropertiesArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            auth_app_id=auth_app_id,
            data_partition_names=data_partition_names,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             auth_app_id: Optional[pulumi.Input[str]] = None,
             data_partition_names: Optional[pulumi.Input[Sequence[pulumi.Input['DataPartitionNamesArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if auth_app_id is not None:
            _setter("auth_app_id", auth_app_id)
        if data_partition_names is not None:
            _setter("data_partition_names", data_partition_names)

    @property
    @pulumi.getter(name="authAppId")
    def auth_app_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "auth_app_id")

    @auth_app_id.setter
    def auth_app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "auth_app_id", value)

    @property
    @pulumi.getter(name="dataPartitionNames")
    def data_partition_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DataPartitionNamesArgs']]]]:
        return pulumi.get(self, "data_partition_names")

    @data_partition_names.setter
    def data_partition_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DataPartitionNamesArgs']]]]):
        pulumi.set(self, "data_partition_names", value)


