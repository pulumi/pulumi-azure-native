# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'Action',
    'ActionsRequired',
    'Architecture',
    'AuditLogStatus',
    'BaseImageTriggerType',
    'ConnectedRegistryMode',
    'ConnectionStatus',
    'DefaultAction',
    'LogLevel',
    'OS',
    'PipelineOptions',
    'PipelineRunSourceType',
    'PipelineRunTargetType',
    'PipelineSourceType',
    'PolicyStatus',
    'ResourceIdentityType',
    'SecretObjectType',
    'SkuName',
    'SourceControlType',
    'SourceRegistryLoginMode',
    'SourceTriggerEvent',
    'StepType',
    'TaskStatus',
    'TokenCertificateName',
    'TokenPasswordName',
    'TokenStatus',
    'TokenType',
    'TriggerStatus',
    'TrustPolicyType',
    'UpdateTriggerPayloadType',
    'Variant',
    'WebhookAction',
    'WebhookStatus',
]


class Action(str, Enum):
    """
    The action of virtual network rule.
    """
    ALLOW = "Allow"


class ActionsRequired(str, Enum):
    """
    A message indicating if changes on the service provider require any updates on the consumer.
    """
    NONE = "None"
    RECREATE = "Recreate"


class Architecture(str, Enum):
    """
    The OS architecture.
    """
    AMD64 = "amd64"
    X86 = "x86"
    ARCHITECTURE_386 = "386"
    ARM = "arm"
    ARM64 = "arm64"


class AuditLogStatus(str, Enum):
    """
    Indicates whether audit logs are enabled on the connected registry.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class BaseImageTriggerType(str, Enum):
    """
    The type of the auto trigger for base image dependency updates.
    """
    ALL = "All"
    RUNTIME = "Runtime"


class ConnectedRegistryMode(str, Enum):
    """
    The mode of the connected registry resource that indicates the permissions of the registry.
    """
    REGISTRY = "Registry"
    MIRROR = "Mirror"


class ConnectionStatus(str, Enum):
    """
    The private link service connection status.
    """
    APPROVED = "Approved"
    PENDING = "Pending"
    REJECTED = "Rejected"
    DISCONNECTED = "Disconnected"


class DefaultAction(str, Enum):
    """
    The default action of allow or deny when no other rules match.
    """
    ALLOW = "Allow"
    DENY = "Deny"


class LogLevel(str, Enum):
    """
    The verbosity of logs persisted on the connected registry.
    """
    DEBUG = "Debug"
    INFORMATION = "Information"
    WARNING = "Warning"
    ERROR = "Error"
    NONE = "None"


class OS(str, Enum):
    """
    The operating system type required for the run.
    """
    WINDOWS = "Windows"
    LINUX = "Linux"


class PipelineOptions(str, Enum):
    OVERWRITE_TAGS = "OverwriteTags"
    OVERWRITE_BLOBS = "OverwriteBlobs"
    DELETE_SOURCE_BLOB_ON_SUCCESS = "DeleteSourceBlobOnSuccess"
    CONTINUE_ON_ERRORS = "ContinueOnErrors"


class PipelineRunSourceType(str, Enum):
    """
    The type of the source.
    """
    AZURE_STORAGE_BLOB = "AzureStorageBlob"


class PipelineRunTargetType(str, Enum):
    """
    The type of the target.
    """
    AZURE_STORAGE_BLOB = "AzureStorageBlob"


class PipelineSourceType(str, Enum):
    """
    The type of source for the import pipeline.
    """
    AZURE_STORAGE_BLOB_CONTAINER = "AzureStorageBlobContainer"


class PolicyStatus(str, Enum):
    """
    The value that indicates whether the policy is enabled or not.
    """
    ENABLED = "enabled"
    DISABLED = "disabled"


class ResourceIdentityType(str, Enum):
    """
    The identity type.
    """
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned, UserAssigned"
    NONE = "None"


class SecretObjectType(str, Enum):
    """
    The type of the secret object which determines how the value of the secret object has to be
    interpreted.
    """
    OPAQUE = "Opaque"
    VAULTSECRET = "Vaultsecret"


class SkuName(str, Enum):
    """
    The SKU name of the container registry. Required for registry creation.
    """
    CLASSIC = "Classic"
    BASIC = "Basic"
    STANDARD = "Standard"
    PREMIUM = "Premium"


class SourceControlType(str, Enum):
    """
    The type of source control service.
    """
    GITHUB = "Github"
    VISUAL_STUDIO_TEAM_SERVICE = "VisualStudioTeamService"


class SourceRegistryLoginMode(str, Enum):
    """
    The authentication mode which determines the source registry login scope. The credentials for the source registry
    will be generated using the given scope. These credentials will be used to login to
    the source registry during the run.
    """
    NONE = "None"
    DEFAULT = "Default"


class SourceTriggerEvent(str, Enum):
    COMMIT = "commit"
    PULLREQUEST = "pullrequest"


class StepType(str, Enum):
    """
    The type of the step.
    """
    DOCKER = "Docker"
    FILE_TASK = "FileTask"
    ENCODED_TASK = "EncodedTask"


class TaskStatus(str, Enum):
    """
    The current status of task.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class TokenCertificateName(str, Enum):
    CERTIFICATE1 = "certificate1"
    CERTIFICATE2 = "certificate2"


class TokenPasswordName(str, Enum):
    """
    The password name "password1" or "password2"
    """
    PASSWORD1 = "password1"
    PASSWORD2 = "password2"


class TokenStatus(str, Enum):
    """
    The status of the token example enabled or disabled.
    """
    ENABLED = "enabled"
    DISABLED = "disabled"


class TokenType(str, Enum):
    """
    The type of Auth token.
    """
    PAT = "PAT"
    O_AUTH = "OAuth"


class TriggerStatus(str, Enum):
    """
    The current status of trigger.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class TrustPolicyType(str, Enum):
    """
    The type of trust policy.
    """
    NOTARY = "Notary"


class UpdateTriggerPayloadType(str, Enum):
    """
    Type of Payload body for Base image update triggers.
    """
    DEFAULT = "Default"
    TOKEN = "Token"


class Variant(str, Enum):
    """
    Variant of the CPU.
    """
    V6 = "v6"
    V7 = "v7"
    V8 = "v8"


class WebhookAction(str, Enum):
    PUSH = "push"
    DELETE = "delete"
    QUARANTINE = "quarantine"
    CHART_PUSH = "chart_push"
    CHART_DELETE = "chart_delete"


class WebhookStatus(str, Enum):
    """
    The status of the webhook at the time the operation was called.
    """
    ENABLED = "enabled"
    DISABLED = "disabled"
