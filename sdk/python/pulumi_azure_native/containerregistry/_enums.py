# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'Action',
    'ActionsRequired',
    'Architecture',
    'AuditLogStatus',
    'BaseImageTriggerType',
    'ConnectedRegistryMode',
    'ConnectionStatus',
    'CredentialName',
    'DefaultAction',
    'EncryptionStatus',
    'ExportPolicyStatus',
    'LogLevel',
    'NetworkRuleBypassOptions',
    'OS',
    'PackageSourceType',
    'PipelineOptions',
    'PipelineRunSourceType',
    'PipelineRunTargetType',
    'PipelineSourceType',
    'PolicyStatus',
    'PublicNetworkAccess',
    'ResourceIdentityType',
    'SecretObjectType',
    'SkuName',
    'SourceControlType',
    'SourceRegistryLoginMode',
    'SourceTriggerEvent',
    'StepType',
    'TaskStatus',
    'TokenCertificateName',
    'TokenPasswordName',
    'TokenStatus',
    'TokenType',
    'TriggerStatus',
    'TrustPolicyType',
    'UpdateTriggerPayloadType',
    'Variant',
    'WebhookAction',
    'WebhookStatus',
    'ZoneRedundancy',
]


class Action(str, Enum):
    ALLOW = "Allow"


class ActionsRequired(str, Enum):
    NONE = "None"
    RECREATE = "Recreate"


class Architecture(str, Enum):
    AMD64 = "amd64"
    X86 = "x86"
    ARCHITECTURE_386 = "386"
    ARM = "arm"
    ARM64 = "arm64"


class AuditLogStatus(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class BaseImageTriggerType(str, Enum):
    ALL = "All"
    RUNTIME = "Runtime"


class ConnectedRegistryMode(str, Enum):
    READ_WRITE = "ReadWrite"
    READ_ONLY = "ReadOnly"
    REGISTRY = "Registry"
    MIRROR = "Mirror"


class ConnectionStatus(str, Enum):
    APPROVED = "Approved"
    PENDING = "Pending"
    REJECTED = "Rejected"
    DISCONNECTED = "Disconnected"


class CredentialName(str, Enum):
    CREDENTIAL1 = "Credential1"


class DefaultAction(str, Enum):
    ALLOW = "Allow"
    DENY = "Deny"


class EncryptionStatus(str, Enum):
    ENABLED = "enabled"
    DISABLED = "disabled"


class ExportPolicyStatus(str, Enum):
    ENABLED = "enabled"
    DISABLED = "disabled"


class LogLevel(str, Enum):
    DEBUG = "Debug"
    INFORMATION = "Information"
    WARNING = "Warning"
    ERROR = "Error"
    NONE = "None"


class NetworkRuleBypassOptions(str, Enum):
    AZURE_SERVICES = "AzureServices"
    NONE = "None"


class OS(str, Enum):
    WINDOWS = "Windows"
    LINUX = "Linux"


class PackageSourceType(str, Enum):
    REMOTE = "remote"


class PipelineOptions(str, Enum):
    OVERWRITE_TAGS = "OverwriteTags"
    OVERWRITE_BLOBS = "OverwriteBlobs"
    DELETE_SOURCE_BLOB_ON_SUCCESS = "DeleteSourceBlobOnSuccess"
    CONTINUE_ON_ERRORS = "ContinueOnErrors"


class PipelineRunSourceType(str, Enum):
    AZURE_STORAGE_BLOB = "AzureStorageBlob"


class PipelineRunTargetType(str, Enum):
    AZURE_STORAGE_BLOB = "AzureStorageBlob"


class PipelineSourceType(str, Enum):
    AZURE_STORAGE_BLOB_CONTAINER = "AzureStorageBlobContainer"


class PolicyStatus(str, Enum):
    ENABLED = "enabled"
    DISABLED = "disabled"


class PublicNetworkAccess(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class ResourceIdentityType(str, Enum):
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned, UserAssigned"
    NONE = "None"


class SecretObjectType(str, Enum):
    OPAQUE = "Opaque"
    VAULTSECRET = "Vaultsecret"


class SkuName(str, Enum):
    CLASSIC = "Classic"
    BASIC = "Basic"
    STANDARD = "Standard"
    PREMIUM = "Premium"


class SourceControlType(str, Enum):
    GITHUB = "Github"
    VISUAL_STUDIO_TEAM_SERVICE = "VisualStudioTeamService"


class SourceRegistryLoginMode(str, Enum):
    NONE = "None"
    DEFAULT = "Default"


class SourceTriggerEvent(str, Enum):
    COMMIT = "commit"
    PULLREQUEST = "pullrequest"


class StepType(str, Enum):
    DOCKER = "Docker"
    FILE_TASK = "FileTask"
    ENCODED_TASK = "EncodedTask"


class TaskStatus(str, Enum):
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class TokenCertificateName(str, Enum):
    CERTIFICATE1 = "certificate1"
    CERTIFICATE2 = "certificate2"


class TokenPasswordName(str, Enum):
    PASSWORD1 = "password1"
    PASSWORD2 = "password2"


class TokenStatus(str, Enum):
    ENABLED = "enabled"
    DISABLED = "disabled"


class TokenType(str, Enum):
    PAT = "PAT"
    O_AUTH = "OAuth"


class TriggerStatus(str, Enum):
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class TrustPolicyType(str, Enum):
    NOTARY = "Notary"


class UpdateTriggerPayloadType(str, Enum):
    DEFAULT = "Default"
    TOKEN = "Token"


class Variant(str, Enum):
    V6 = "v6"
    V7 = "v7"
    V8 = "v8"


class WebhookAction(str, Enum):
    PUSH = "push"
    DELETE = "delete"
    QUARANTINE = "quarantine"
    CHART_PUSH = "chart_push"
    CHART_DELETE = "chart_delete"


class WebhookStatus(str, Enum):
    ENABLED = "enabled"
    DISABLED = "disabled"


class ZoneRedundancy(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"
