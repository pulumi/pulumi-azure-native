# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import pulumi
from enum import Enum

__all__ = [
    'AgentDeploymentState',
    'AgentDeploymentType',
    'AgentProtocol',
    'BuiltInAuthorizationScheme',
    'ByPassSelection',
    'CapabilityHostKind',
    'ConnectionAuthType',
    'ConnectionCategory',
    'ContentLevel',
    'DeploymentModelVersionUpgradeOption',
    'DeploymentScaleType',
    'EncryptionScopeState',
    'HostingModel',
    'IdentityKind',
    'IdentityManagementType',
    'KeySource',
    'ManagedPERequirement',
    'ManagedPEStatus',
    'NetworkRuleAction',
    'PrivateEndpointServiceConnectionStatus',
    'PublicNetworkAccess',
    'RaiActionType',
    'RaiPolicyContentSource',
    'RaiPolicyMode',
    'ResourceIdentityType',
    'RoutingMethods',
    'RuleCategory',
    'RuleStatus',
    'RuleType',
    'SkuTier',
    'TrafficRoutingProtocol',
]


@pulumi.type_token("azure-native:cognitiveservices:AgentDeploymentState")
class AgentDeploymentState(builtins.str, Enum):
    """
    Gets or sets the current operational state of the deployment (and, intrinsically, of the comprising agents).
    """
    STARTING = "Starting"
    """
    The deployment is starting.
    """
    RUNNING = "Running"
    """
    The deployment started/is operational.
    """
    STOPPING = "Stopping"
    """
    The deployment is being stopped.
    """
    STOPPED = "Stopped"
    """
    The deployment was stopped.
    """
    FAILED = "Failed"
    """
    The deployment failed.
    """
    DELETING = "Deleting"
    """
    The deployment is being deleted.
    """
    DELETED = "Deleted"
    """
    The deployment was deleted.
    """
    UPDATING = "Updating"
    """
    The deployment is being updated.
    """


@pulumi.type_token("azure-native:cognitiveservices:AgentDeploymentType")
class AgentDeploymentType(builtins.str, Enum):
    """
    Gets or sets the type of deployment for the agent.
    """
    MANAGED = "Managed"
    """
    The underlying infra is managed by the platform in the deployer's subscription
    """
    HOSTED = "Hosted"
    """
    The underlying infra is owned by the platform
    """
    CUSTOM = "Custom"
    """
    The underlying infra is provisioned by the deployer (BYO)
    """


@pulumi.type_token("azure-native:cognitiveservices:AgentProtocol")
class AgentProtocol(builtins.str, Enum):
    """
    The protocol used by the agent/exposed by a deployment.
    """
    AGENT = "Agent"
    """
    Agent protocol (aka Active)
    """
    A2_A = "A2A"
    """
    Agent2Agent standard
    """
    RESPONSES = "Responses"
    """
    OpenAI-compatible
    """


@pulumi.type_token("azure-native:cognitiveservices:BuiltInAuthorizationScheme")
class BuiltInAuthorizationScheme(builtins.str, Enum):
    """
    Authorization scheme type.
    """
    DEFAULT = "Default"
    """
    Standard AzureML RBAC
    """
    ORGANIZATION_SCOPE = "OrganizationScope"
    """
    Claim-based, requires membership in the tenant
    """
    MICROSOFT365 = "Microsoft365"
    """
    Microsoft365-specific (AzureBotService) authorization
    """
    CUSTOM = "Custom"
    """
    Custom scheme defined by the application author
    """


@pulumi.type_token("azure-native:cognitiveservices:ByPassSelection")
class ByPassSelection(builtins.str, Enum):
    """
    Setting for trusted services.
    """
    NONE = "None"
    AZURE_SERVICES = "AzureServices"


@pulumi.type_token("azure-native:cognitiveservices:CapabilityHostKind")
class CapabilityHostKind(builtins.str, Enum):
    """
    Kind of this capability host.
    """
    AGENTS = "Agents"


@pulumi.type_token("azure-native:cognitiveservices:ConnectionAuthType")
class ConnectionAuthType(builtins.str, Enum):
    """
    Authentication type of the connection target
    """
    PAT = "PAT"
    MANAGED_IDENTITY = "ManagedIdentity"
    USERNAME_PASSWORD = "UsernamePassword"
    NONE = "None"
    SAS = "SAS"
    ACCOUNT_KEY = "AccountKey"
    SERVICE_PRINCIPAL = "ServicePrincipal"
    ACCESS_KEY = "AccessKey"
    API_KEY = "ApiKey"
    CUSTOM_KEYS = "CustomKeys"
    O_AUTH2 = "OAuth2"
    AAD = "AAD"


@pulumi.type_token("azure-native:cognitiveservices:ConnectionCategory")
class ConnectionCategory(builtins.str, Enum):
    """
    Category of the connection
    """
    PYTHON_FEED = "PythonFeed"
    CONTAINER_REGISTRY = "ContainerRegistry"
    GIT = "Git"
    S3 = "S3"
    SNOWFLAKE = "Snowflake"
    AZURE_SQL_DB = "AzureSqlDb"
    AZURE_SYNAPSE_ANALYTICS = "AzureSynapseAnalytics"
    AZURE_MY_SQL_DB = "AzureMySqlDb"
    AZURE_POSTGRES_DB = "AzurePostgresDb"
    ADLS_GEN2 = "ADLSGen2"
    REDIS = "Redis"
    API_KEY = "ApiKey"
    AZURE_OPEN_AI = "AzureOpenAI"
    AI_SERVICES = "AIServices"
    COGNITIVE_SEARCH = "CognitiveSearch"
    COGNITIVE_SERVICE = "CognitiveService"
    CUSTOM_KEYS = "CustomKeys"
    AZURE_BLOB = "AzureBlob"
    AZURE_ONE_LAKE = "AzureOneLake"
    COSMOS_DB = "CosmosDb"
    COSMOS_DB_MONGO_DB_API = "CosmosDbMongoDbApi"
    AZURE_DATA_EXPLORER = "AzureDataExplorer"
    AZURE_MARIA_DB = "AzureMariaDb"
    AZURE_DATABRICKS_DELTA_LAKE = "AzureDatabricksDeltaLake"
    AZURE_SQL_MI = "AzureSqlMi"
    AZURE_TABLE_STORAGE = "AzureTableStorage"
    AMAZON_RDS_FOR_ORACLE = "AmazonRdsForOracle"
    AMAZON_RDS_FOR_SQL_SERVER = "AmazonRdsForSqlServer"
    AMAZON_REDSHIFT = "AmazonRedshift"
    DB2 = "Db2"
    DRILL = "Drill"
    GOOGLE_BIG_QUERY = "GoogleBigQuery"
    GREENPLUM = "Greenplum"
    HBASE = "Hbase"
    HIVE = "Hive"
    IMPALA = "Impala"
    INFORMIX = "Informix"
    MARIA_DB = "MariaDb"
    MICROSOFT_ACCESS = "MicrosoftAccess"
    MY_SQL = "MySql"
    NETEZZA = "Netezza"
    ORACLE = "Oracle"
    PHOENIX = "Phoenix"
    POSTGRE_SQL = "PostgreSql"
    PRESTO = "Presto"
    SAP_OPEN_HUB = "SapOpenHub"
    SAP_BW = "SapBw"
    SAP_HANA = "SapHana"
    SAP_TABLE = "SapTable"
    SPARK = "Spark"
    SQL_SERVER = "SqlServer"
    SYBASE = "Sybase"
    TERADATA = "Teradata"
    VERTICA = "Vertica"
    PINECONE = "Pinecone"
    CASSANDRA = "Cassandra"
    COUCHBASE = "Couchbase"
    MONGO_DB_V2 = "MongoDbV2"
    MONGO_DB_ATLAS = "MongoDbAtlas"
    AMAZON_S3_COMPATIBLE = "AmazonS3Compatible"
    FILE_SERVER = "FileServer"
    FTP_SERVER = "FtpServer"
    GOOGLE_CLOUD_STORAGE = "GoogleCloudStorage"
    HDFS = "Hdfs"
    ORACLE_CLOUD_STORAGE = "OracleCloudStorage"
    SFTP = "Sftp"
    GENERIC_HTTP = "GenericHttp"
    O_DATA_REST = "ODataRest"
    ODBC = "Odbc"
    GENERIC_REST = "GenericRest"
    AMAZON_MWS = "AmazonMws"
    CONCUR = "Concur"
    DYNAMICS = "Dynamics"
    DYNAMICS_AX = "DynamicsAx"
    DYNAMICS_CRM = "DynamicsCrm"
    GOOGLE_AD_WORDS = "GoogleAdWords"
    HUBSPOT = "Hubspot"
    JIRA = "Jira"
    MAGENTO = "Magento"
    MARKETO = "Marketo"
    OFFICE365 = "Office365"
    ELOQUA = "Eloqua"
    RESPONSYS = "Responsys"
    ORACLE_SERVICE_CLOUD = "OracleServiceCloud"
    PAY_PAL = "PayPal"
    QUICK_BOOKS = "QuickBooks"
    SALESFORCE = "Salesforce"
    SALESFORCE_SERVICE_CLOUD = "SalesforceServiceCloud"
    SALESFORCE_MARKETING_CLOUD = "SalesforceMarketingCloud"
    SAP_CLOUD_FOR_CUSTOMER = "SapCloudForCustomer"
    SAP_ECC = "SapEcc"
    SERVICE_NOW = "ServiceNow"
    SHARE_POINT_ONLINE_LIST = "SharePointOnlineList"
    SHOPIFY = "Shopify"
    SQUARE = "Square"
    WEB_TABLE = "WebTable"
    XERO = "Xero"
    ZOHO = "Zoho"
    GENERIC_CONTAINER_REGISTRY = "GenericContainerRegistry"
    ELASTICSEARCH = "Elasticsearch"
    OPEN_AI = "OpenAI"
    SERP = "Serp"
    BING_LLM_SEARCH = "BingLLMSearch"
    SERVERLESS = "Serverless"
    MANAGED_ONLINE_ENDPOINT = "ManagedOnlineEndpoint"


@pulumi.type_token("azure-native:cognitiveservices:ContentLevel")
class ContentLevel(builtins.str, Enum):
    """
    Level at which content is filtered.
    """
    LOW = "Low"
    MEDIUM = "Medium"
    HIGH = "High"


@pulumi.type_token("azure-native:cognitiveservices:DeploymentModelVersionUpgradeOption")
class DeploymentModelVersionUpgradeOption(builtins.str, Enum):
    """
    Deployment model version upgrade option.
    """
    ONCE_NEW_DEFAULT_VERSION_AVAILABLE = "OnceNewDefaultVersionAvailable"
    ONCE_CURRENT_VERSION_EXPIRED = "OnceCurrentVersionExpired"
    NO_AUTO_UPGRADE = "NoAutoUpgrade"


@pulumi.type_token("azure-native:cognitiveservices:DeploymentScaleType")
class DeploymentScaleType(builtins.str, Enum):
    """
    Deployment scale type.
    """
    STANDARD = "Standard"
    MANUAL = "Manual"


@pulumi.type_token("azure-native:cognitiveservices:EncryptionScopeState")
class EncryptionScopeState(builtins.str, Enum):
    """
    The encryptionScope state.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


@pulumi.type_token("azure-native:cognitiveservices:HostingModel")
class HostingModel(builtins.str, Enum):
    """
    Account hosting model.
    """
    WEB = "Web"
    CONNECTED_CONTAINER = "ConnectedContainer"
    DISCONNECTED_CONTAINER = "DisconnectedContainer"
    PROVISIONED_WEB = "ProvisionedWeb"


@pulumi.type_token("azure-native:cognitiveservices:IdentityKind")
class IdentityKind(builtins.str, Enum):
    """
    Specifies the kind of Entra identity described by this object.
    """
    AGENT_BLUEPRINT = "AgentBlueprint"
    """
    Represents a class identity, used for agentic applications.
    """
    AGENT_INSTANCE = "AgentInstance"
    """
    Represents an instance identity.
    """
    AGENTIC_USER = "AgenticUser"
    """
    Represents an agentic instance identity with user-like traits.
    """
    MANAGED = "Managed"
    """
    Represents a classic managed identity.
    """
    NONE = "None"
    """
    No identity.
    """


@pulumi.type_token("azure-native:cognitiveservices:IdentityManagementType")
class IdentityManagementType(builtins.str, Enum):
    """
    Enumeration of identity types, from the perspective of management.
    """
    SYSTEM = "System"
    """
    Platform-managed identity.
    """
    USER = "User"
    """
    User-managed identity.
    """
    NONE = "None"
    """
    No identity.
    """


@pulumi.type_token("azure-native:cognitiveservices:KeySource")
class KeySource(builtins.str, Enum):
    """
    Enumerates the possible value of keySource for Encryption
    """
    MICROSOFT_COGNITIVE_SERVICES = "Microsoft.CognitiveServices"
    MICROSOFT_KEY_VAULT = "Microsoft.KeyVault"


@pulumi.type_token("azure-native:cognitiveservices:ManagedPERequirement")
class ManagedPERequirement(builtins.str, Enum):
    REQUIRED = "Required"
    NOT_REQUIRED = "NotRequired"
    NOT_APPLICABLE = "NotApplicable"


@pulumi.type_token("azure-native:cognitiveservices:ManagedPEStatus")
class ManagedPEStatus(builtins.str, Enum):
    INACTIVE = "Inactive"
    ACTIVE = "Active"
    NOT_APPLICABLE = "NotApplicable"


@pulumi.type_token("azure-native:cognitiveservices:NetworkRuleAction")
class NetworkRuleAction(builtins.str, Enum):
    """
    The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
    """
    ALLOW = "Allow"
    DENY = "Deny"


@pulumi.type_token("azure-native:cognitiveservices:PrivateEndpointServiceConnectionStatus")
class PrivateEndpointServiceConnectionStatus(builtins.str, Enum):
    """
    Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    """
    PENDING = "Pending"
    APPROVED = "Approved"
    REJECTED = "Rejected"


@pulumi.type_token("azure-native:cognitiveservices:PublicNetworkAccess")
class PublicNetworkAccess(builtins.str, Enum):
    """
    Whether or not public endpoint access is allowed for this account.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:cognitiveservices:RaiActionType")
class RaiActionType(builtins.str, Enum):
    """
    The action types to apply to the content filters
    """
    NONE = "None"
    BLOCKING = "BLOCKING"
    ANNOTATING = "ANNOTATING"
    HITL = "HITL"
    RETRY = "RETRY"


@pulumi.type_token("azure-native:cognitiveservices:RaiPolicyContentSource")
class RaiPolicyContentSource(builtins.str, Enum):
    """
    Content source to apply the Content Filters.
    """
    PROMPT = "Prompt"
    COMPLETION = "Completion"
    PRE_TOOL_CALL = "PreToolCall"
    POST_TOOL_CALL = "PostToolCall"
    PRE_RUN = "PreRun"
    POST_RUN = "PostRun"


@pulumi.type_token("azure-native:cognitiveservices:RaiPolicyMode")
class RaiPolicyMode(builtins.str, Enum):
    """
    Rai policy mode. The enum value mapping is as below: Default = 0, Deferred=1, Blocking=2, Asynchronous_filter =3. Please use 'Asynchronous_filter' after 2025-06-01. It is the same as 'Deferred' in previous version.
    """
    DEFAULT = "Default"
    DEFERRED = "Deferred"
    BLOCKING = "Blocking"
    ASYNCHRONOUS_FILTER = "Asynchronous_filter"


@pulumi.type_token("azure-native:cognitiveservices:ResourceIdentityType")
class ResourceIdentityType(builtins.str, Enum):
    """
    The identity type.
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned, UserAssigned"


@pulumi.type_token("azure-native:cognitiveservices:RoutingMethods")
class RoutingMethods(builtins.str, Enum):
    """
    Multiregion routing methods.
    """
    PRIORITY = "Priority"
    WEIGHTED = "Weighted"
    PERFORMANCE = "Performance"


@pulumi.type_token("azure-native:cognitiveservices:RuleCategory")
class RuleCategory(builtins.str, Enum):
    """
    Category of a managed network Outbound Rule of a cognitive services account.
    """
    REQUIRED = "Required"
    RECOMMENDED = "Recommended"
    USER_DEFINED = "UserDefined"
    DEPENDENCY = "Dependency"


@pulumi.type_token("azure-native:cognitiveservices:RuleStatus")
class RuleStatus(builtins.str, Enum):
    """
    Type of a managed network Outbound Rule of a cognitive services account.
    """
    INACTIVE = "Inactive"
    ACTIVE = "Active"
    PROVISIONING = "Provisioning"
    DELETING = "Deleting"
    FAILED = "Failed"


@pulumi.type_token("azure-native:cognitiveservices:RuleType")
class RuleType(builtins.str, Enum):
    """
    Type of a managed network Outbound Rule of a cognitive services account.
    """
    FQDN = "FQDN"
    PRIVATE_ENDPOINT = "PrivateEndpoint"
    SERVICE_TAG = "ServiceTag"


@pulumi.type_token("azure-native:cognitiveservices:SkuTier")
class SkuTier(builtins.str, Enum):
    """
    This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    """
    FREE = "Free"
    BASIC = "Basic"
    STANDARD = "Standard"
    PREMIUM = "Premium"
    ENTERPRISE = "Enterprise"


@pulumi.type_token("azure-native:cognitiveservices:TrafficRoutingProtocol")
class TrafficRoutingProtocol(builtins.str, Enum):
    """
    Methodology used to route traffic to the application's deployments.
    """
    FIXED_RATIO = "FixedRatio"
    """
    Percentage based routing
    """
