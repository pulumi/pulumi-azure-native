# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from . import outputs

__all__ = [
    'GetProjectCapabilityHostResult',
    'AwaitableGetProjectCapabilityHostResult',
    'get_project_capability_host',
    'get_project_capability_host_output',
]

@pulumi.output_type
class GetProjectCapabilityHostResult:
    """
    Azure Resource Manager resource envelope.
    """
    def __init__(__self__, capability_host_properties=None, id=None, name=None, type=None):
        if capability_host_properties and not isinstance(capability_host_properties, dict):
            raise TypeError("Expected argument 'capability_host_properties' to be a dict")
        pulumi.set(__self__, "capability_host_properties", capability_host_properties)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="capabilityHostProperties")
    def capability_host_properties(self) -> 'outputs.CapabilityHostResponse':
        """
        [Required] Additional attributes of the entity.
        """
        return pulumi.get(self, "capability_host_properties")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")


class AwaitableGetProjectCapabilityHostResult(GetProjectCapabilityHostResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetProjectCapabilityHostResult(
            capability_host_properties=self.capability_host_properties,
            id=self.id,
            name=self.name,
            type=self.type)


def get_project_capability_host(account_name: Optional[str] = None,
                                capability_host_name: Optional[str] = None,
                                project_name: Optional[str] = None,
                                resource_group_name: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetProjectCapabilityHostResult:
    """
    Azure Resource Manager resource envelope.


    :param str account_name: The name of Cognitive Services account.
    :param str capability_host_name: The name of the capability host associated with the Cognitive Services Resource
    :param str project_name: The name of Cognitive Services account's project.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['capabilityHostName'] = capability_host_name
    __args__['projectName'] = project_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:cognitiveservices/v20250401preview:getProjectCapabilityHost', __args__, opts=opts, typ=GetProjectCapabilityHostResult).value

    return AwaitableGetProjectCapabilityHostResult(
        capability_host_properties=pulumi.get(__ret__, 'capability_host_properties'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        type=pulumi.get(__ret__, 'type'))
def get_project_capability_host_output(account_name: Optional[pulumi.Input[str]] = None,
                                       capability_host_name: Optional[pulumi.Input[str]] = None,
                                       project_name: Optional[pulumi.Input[str]] = None,
                                       resource_group_name: Optional[pulumi.Input[str]] = None,
                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetProjectCapabilityHostResult]:
    """
    Azure Resource Manager resource envelope.


    :param str account_name: The name of Cognitive Services account.
    :param str capability_host_name: The name of the capability host associated with the Cognitive Services Resource
    :param str project_name: The name of Cognitive Services account's project.
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['capabilityHostName'] = capability_host_name
    __args__['projectName'] = project_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:cognitiveservices/v20250401preview:getProjectCapabilityHost', __args__, opts=opts, typ=GetProjectCapabilityHostResult)
    return __ret__.apply(lambda __response__: GetProjectCapabilityHostResult(
        capability_host_properties=pulumi.get(__response__, 'capability_host_properties'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        type=pulumi.get(__response__, 'type')))
