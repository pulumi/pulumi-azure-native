# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AvailabilityType',
    'CloudInitDataSource',
    'CreatedByType',
    'DiagnosticLevel',
    'DiskFileFormat',
    'ExtendedLocationTypes',
    'HyperVGeneration',
    'IPPoolTypeEnum',
    'IpAllocationMethodEnum',
    'ManagedServiceIdentityType',
    'NetworkTypeEnum',
    'OperatingSystemTypes',
    'OsTypeEnum',
    'PrivateIPAllocationMethodEnum',
    'ProvisioningAction',
    'ResourceIdentityType',
    'SoftwareAssuranceIntent',
    'SoftwareAssuranceStatus',
    'State',
    'UpdateRunPropertiesState',
    'UpdateSummariesPropertiesState',
    'VmSizeEnum',
    'WindowsServerSubscription',
]


class AvailabilityType(str, Enum):
    """
    Indicates the way the update content can be downloaded.
    """
    LOCAL = "Local"
    ONLINE = "Online"
    NOTIFY = "Notify"


class CloudInitDataSource(str, Enum):
    """
    Datasource for the gallery image when provisioning with cloud-init [NoCloud, Azure]
    """
    NO_CLOUD = "NoCloud"
    AZURE = "Azure"


class CreatedByType(str, Enum):
    """
    The type of identity that last modified the resource.
    """
    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class DiagnosticLevel(str, Enum):
    """
    Desired level of diagnostic data emitted by the cluster.
    """
    OFF = "Off"
    BASIC = "Basic"
    ENHANCED = "Enhanced"


class DiskFileFormat(str, Enum):
    """
    The format of the actual VHD file [vhd, vhdx]
    """
    VHDX = "vhdx"
    VHD = "vhd"


class ExtendedLocationTypes(str, Enum):
    """
    The type of the extended location.
    """
    CUSTOM_LOCATION = "CustomLocation"


class HyperVGeneration(str, Enum):
    """
    The hypervisor generation of the Virtual Machine [V1, V2]
    """
    V1 = "V1"
    V2 = "V2"


class IPPoolTypeEnum(str, Enum):
    """
    ip pool type
    """
    VM = "vm"
    VIPPOOL = "vippool"


class IpAllocationMethodEnum(str, Enum):
    """
    IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
    """
    DYNAMIC = "Dynamic"
    STATIC = "Static"


class ManagedServiceIdentityType(str, Enum):
    """
    Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned, UserAssigned"


class NetworkTypeEnum(str, Enum):
    """
    Type of the network
    """
    NAT = "NAT"
    TRANSPARENT = "Transparent"
    L2_BRIDGE = "L2Bridge"
    L2_TUNNEL = "L2Tunnel"
    ICS = "ICS"
    PRIVATE = "Private"
    OVERLAY = "Overlay"
    INTERNAL = "Internal"
    MIRRORED = "Mirrored"


class OperatingSystemTypes(str, Enum):
    """
    Operating system type that the gallery image uses [Windows, Linux]
    """
    WINDOWS = "Windows"
    LINUX = "Linux"


class OsTypeEnum(str, Enum):
    """
    OsType - string specifying whether the OS is Linux or Windows
    """
    LINUX = "Linux"
    WINDOWS = "Windows"


class PrivateIPAllocationMethodEnum(str, Enum):
    """
    PrivateIPAllocationMethod - The private IP address allocation method. Possible values include: 'Static', 'Dynamic'
    """
    DYNAMIC = "Dynamic"
    STATIC = "Static"


class ProvisioningAction(str, Enum):
    """
    The guest agent provisioning action.
    """
    INSTALL = "install"
    UNINSTALL = "uninstall"
    REPAIR = "repair"


class ResourceIdentityType(str, Enum):
    """
    The identity type.
    """
    SYSTEM_ASSIGNED = "SystemAssigned"


class SoftwareAssuranceIntent(str, Enum):
    """
    Customer Intent for Software Assurance Benefit.
    """
    ENABLE = "Enable"
    DISABLE = "Disable"


class SoftwareAssuranceStatus(str, Enum):
    """
    Status of the Software Assurance for the cluster.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class State(str, Enum):
    """
    State of the update as it relates to this stamp.
    """
    HAS_PREREQUISITE = "HasPrerequisite"
    OBSOLETE = "Obsolete"
    READY = "Ready"
    NOT_APPLICABLE_BECAUSE_ANOTHER_UPDATE_IS_IN_PROGRESS = "NotApplicableBecauseAnotherUpdateIsInProgress"
    PREPARING = "Preparing"
    INSTALLING = "Installing"
    INSTALLED = "Installed"
    PREPARATION_FAILED = "PreparationFailed"
    INSTALLATION_FAILED = "InstallationFailed"
    INVALID = "Invalid"
    RECALLED = "Recalled"
    DOWNLOADING = "Downloading"
    DOWNLOAD_FAILED = "DownloadFailed"
    HEALTH_CHECKING = "HealthChecking"
    HEALTH_CHECK_FAILED = "HealthCheckFailed"
    READY_TO_INSTALL = "ReadyToInstall"
    SCAN_IN_PROGRESS = "ScanInProgress"
    SCAN_FAILED = "ScanFailed"


class UpdateRunPropertiesState(str, Enum):
    """
    State of the update run.
    """
    UNKNOWN = "Unknown"
    SUCCEEDED = "Succeeded"
    IN_PROGRESS = "InProgress"
    FAILED = "Failed"


class UpdateSummariesPropertiesState(str, Enum):
    """
    Overall update state of the stamp.
    """
    UNKNOWN = "Unknown"
    APPLIED_SUCCESSFULLY = "AppliedSuccessfully"
    UPDATE_AVAILABLE = "UpdateAvailable"
    UPDATE_IN_PROGRESS = "UpdateInProgress"
    UPDATE_FAILED = "UpdateFailed"
    NEEDS_ATTENTION = "NeedsAttention"
    PREPARATION_IN_PROGRESS = "PreparationInProgress"
    PREPARATION_FAILED = "PreparationFailed"


class VmSizeEnum(str, Enum):
    DEFAULT = "Default"
    STANDARD_A2_V2 = "Standard_A2_v2"
    STANDARD_A4_V2 = "Standard_A4_v2"
    STANDARD_D2S_V3 = "Standard_D2s_v3"
    STANDARD_D4S_V3 = "Standard_D4s_v3"
    STANDARD_D8S_V3 = "Standard_D8s_v3"
    STANDARD_D16S_V3 = "Standard_D16s_v3"
    STANDARD_D32S_V3 = "Standard_D32s_v3"
    STANDARD_DS2_V2 = "Standard_DS2_v2"
    STANDARD_DS3_V2 = "Standard_DS3_v2"
    STANDARD_DS4_V2 = "Standard_DS4_v2"
    STANDARD_DS5_V2 = "Standard_DS5_v2"
    STANDARD_DS13_V2 = "Standard_DS13_v2"
    STANDARD_K8_S_V1 = "Standard_K8S_v1"
    STANDARD_K8_S2_V1 = "Standard_K8S2_v1"
    STANDARD_K8_S3_V1 = "Standard_K8S3_v1"
    STANDARD_K8_S4_V1 = "Standard_K8S4_v1"
    STANDARD_NK6 = "Standard_NK6"
    STANDARD_NK12 = "Standard_NK12"
    STANDARD_NV6 = "Standard_NV6"
    STANDARD_NV12 = "Standard_NV12"
    STANDARD_K8_S5_V1 = "Standard_K8S5_v1"
    CUSTOM = "Custom"


class WindowsServerSubscription(str, Enum):
    """
    Desired state of Windows Server Subscription.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"
