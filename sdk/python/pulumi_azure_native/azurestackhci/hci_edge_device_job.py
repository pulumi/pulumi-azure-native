# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['HciEdgeDeviceJobArgs', 'HciEdgeDeviceJob']

@pulumi.input_type
class HciEdgeDeviceJobArgs:
    def __init__(__self__, *,
                 edge_device_name: pulumi.Input[str],
                 kind: pulumi.Input[str],
                 properties: pulumi.Input[Union['HciCollectLogJobPropertiesArgs', 'HciRemoteSupportJobPropertiesArgs']],
                 resource_uri: pulumi.Input[str],
                 jobs_name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a HciEdgeDeviceJob resource.
        :param pulumi.Input[str] edge_device_name: The name of the EdgeDevice
        :param pulumi.Input[str] kind: Edge device kind.
               Expected value is 'HCI'.
        :param pulumi.Input[Union['HciCollectLogJobPropertiesArgs', 'HciRemoteSupportJobPropertiesArgs']] properties: HCI Edge device job properties
        :param pulumi.Input[str] resource_uri: The fully qualified Azure Resource manager identifier of the resource.
        :param pulumi.Input[str] jobs_name: Name of EdgeDevice Job
        """
        pulumi.set(__self__, "edge_device_name", edge_device_name)
        pulumi.set(__self__, "kind", 'HCI')
        pulumi.set(__self__, "properties", properties)
        pulumi.set(__self__, "resource_uri", resource_uri)
        if jobs_name is not None:
            pulumi.set(__self__, "jobs_name", jobs_name)

    @property
    @pulumi.getter(name="edgeDeviceName")
    def edge_device_name(self) -> pulumi.Input[str]:
        """
        The name of the EdgeDevice
        """
        return pulumi.get(self, "edge_device_name")

    @edge_device_name.setter
    def edge_device_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "edge_device_name", value)

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Input[str]:
        """
        Edge device kind.
        Expected value is 'HCI'.
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: pulumi.Input[str]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter
    def properties(self) -> pulumi.Input[Union['HciCollectLogJobPropertiesArgs', 'HciRemoteSupportJobPropertiesArgs']]:
        """
        HCI Edge device job properties
        """
        return pulumi.get(self, "properties")

    @properties.setter
    def properties(self, value: pulumi.Input[Union['HciCollectLogJobPropertiesArgs', 'HciRemoteSupportJobPropertiesArgs']]):
        pulumi.set(self, "properties", value)

    @property
    @pulumi.getter(name="resourceUri")
    def resource_uri(self) -> pulumi.Input[str]:
        """
        The fully qualified Azure Resource manager identifier of the resource.
        """
        return pulumi.get(self, "resource_uri")

    @resource_uri.setter
    def resource_uri(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_uri", value)

    @property
    @pulumi.getter(name="jobsName")
    def jobs_name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of EdgeDevice Job
        """
        return pulumi.get(self, "jobs_name")

    @jobs_name.setter
    def jobs_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "jobs_name", value)


class HciEdgeDeviceJob(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 edge_device_name: Optional[pulumi.Input[str]] = None,
                 jobs_name: Optional[pulumi.Input[str]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 properties: Optional[pulumi.Input[Union[Union['HciCollectLogJobPropertiesArgs', 'HciCollectLogJobPropertiesArgsDict'], Union['HciRemoteSupportJobPropertiesArgs', 'HciRemoteSupportJobPropertiesArgsDict']]]] = None,
                 resource_uri: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Edge device job for Azure Stack HCI solution.
        Azure REST API version: 2024-09-01-preview.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] edge_device_name: The name of the EdgeDevice
        :param pulumi.Input[str] jobs_name: Name of EdgeDevice Job
        :param pulumi.Input[str] kind: Edge device kind.
               Expected value is 'HCI'.
        :param pulumi.Input[Union[Union['HciCollectLogJobPropertiesArgs', 'HciCollectLogJobPropertiesArgsDict'], Union['HciRemoteSupportJobPropertiesArgs', 'HciRemoteSupportJobPropertiesArgsDict']]] properties: HCI Edge device job properties
        :param pulumi.Input[str] resource_uri: The fully qualified Azure Resource manager identifier of the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: HciEdgeDeviceJobArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Edge device job for Azure Stack HCI solution.
        Azure REST API version: 2024-09-01-preview.

        :param str resource_name: The name of the resource.
        :param HciEdgeDeviceJobArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(HciEdgeDeviceJobArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 edge_device_name: Optional[pulumi.Input[str]] = None,
                 jobs_name: Optional[pulumi.Input[str]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 properties: Optional[pulumi.Input[Union[Union['HciCollectLogJobPropertiesArgs', 'HciCollectLogJobPropertiesArgsDict'], Union['HciRemoteSupportJobPropertiesArgs', 'HciRemoteSupportJobPropertiesArgsDict']]]] = None,
                 resource_uri: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = HciEdgeDeviceJobArgs.__new__(HciEdgeDeviceJobArgs)

            if edge_device_name is None and not opts.urn:
                raise TypeError("Missing required property 'edge_device_name'")
            __props__.__dict__["edge_device_name"] = edge_device_name
            __props__.__dict__["jobs_name"] = jobs_name
            if kind is None and not opts.urn:
                raise TypeError("Missing required property 'kind'")
            __props__.__dict__["kind"] = 'HCI'
            if properties is None and not opts.urn:
                raise TypeError("Missing required property 'properties'")
            __props__.__dict__["properties"] = properties
            if resource_uri is None and not opts.urn:
                raise TypeError("Missing required property 'resource_uri'")
            __props__.__dict__["resource_uri"] = resource_uri
            __props__.__dict__["name"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:azurestackhci/v20240901preview:HciEdgeDeviceJob")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(HciEdgeDeviceJob, __self__).__init__(
            'azure-native:azurestackhci:HciEdgeDeviceJob',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'HciEdgeDeviceJob':
        """
        Get an existing HciEdgeDeviceJob resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = HciEdgeDeviceJobArgs.__new__(HciEdgeDeviceJobArgs)

        __props__.__dict__["kind"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["properties"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["type"] = None
        return HciEdgeDeviceJob(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Output[str]:
        """
        Edge device kind.
        Expected value is 'HCI'.
        """
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def properties(self) -> pulumi.Output[Any]:
        """
        HCI Edge device job properties
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

