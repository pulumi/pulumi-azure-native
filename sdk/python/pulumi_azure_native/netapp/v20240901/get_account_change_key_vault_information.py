# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from . import outputs

__all__ = [
    'GetAccountChangeKeyVaultInformationResult',
    'AwaitableGetAccountChangeKeyVaultInformationResult',
    'get_account_change_key_vault_information',
    'get_account_change_key_vault_information_output',
]

@pulumi.output_type
class GetAccountChangeKeyVaultInformationResult:
    """
    Result of getKeyVaultStatus with information about how volumes under NetApp account are encrypted.
    """
    def __init__(__self__, key_name=None, key_vault_private_endpoints=None, key_vault_resource_id=None, key_vault_uri=None):
        if key_name and not isinstance(key_name, str):
            raise TypeError("Expected argument 'key_name' to be a str")
        pulumi.set(__self__, "key_name", key_name)
        if key_vault_private_endpoints and not isinstance(key_vault_private_endpoints, list):
            raise TypeError("Expected argument 'key_vault_private_endpoints' to be a list")
        pulumi.set(__self__, "key_vault_private_endpoints", key_vault_private_endpoints)
        if key_vault_resource_id and not isinstance(key_vault_resource_id, str):
            raise TypeError("Expected argument 'key_vault_resource_id' to be a str")
        pulumi.set(__self__, "key_vault_resource_id", key_vault_resource_id)
        if key_vault_uri and not isinstance(key_vault_uri, str):
            raise TypeError("Expected argument 'key_vault_uri' to be a str")
        pulumi.set(__self__, "key_vault_uri", key_vault_uri)

    @property
    @pulumi.getter(name="keyName")
    def key_name(self) -> Optional[str]:
        """
        The name of the key that should be used for encryption.
        """
        return pulumi.get(self, "key_name")

    @property
    @pulumi.getter(name="keyVaultPrivateEndpoints")
    def key_vault_private_endpoints(self) -> Optional[Sequence['outputs.KeyVaultPrivateEndpointResponse']]:
        """
        Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.
        """
        return pulumi.get(self, "key_vault_private_endpoints")

    @property
    @pulumi.getter(name="keyVaultResourceId")
    def key_vault_resource_id(self) -> Optional[str]:
        """
        Azure resource ID of the key vault/managed HSM that should be used for encryption.
        """
        return pulumi.get(self, "key_vault_resource_id")

    @property
    @pulumi.getter(name="keyVaultUri")
    def key_vault_uri(self) -> Optional[str]:
        """
        The URI of the key vault/managed HSM that should be used for encryption.
        """
        return pulumi.get(self, "key_vault_uri")


class AwaitableGetAccountChangeKeyVaultInformationResult(GetAccountChangeKeyVaultInformationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccountChangeKeyVaultInformationResult(
            key_name=self.key_name,
            key_vault_private_endpoints=self.key_vault_private_endpoints,
            key_vault_resource_id=self.key_vault_resource_id,
            key_vault_uri=self.key_vault_uri)


def get_account_change_key_vault_information(account_name: Optional[str] = None,
                                             resource_group_name: Optional[str] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAccountChangeKeyVaultInformationResult:
    """
    Contains data from encryption.keyVaultProperties as well as information about which private endpoint is used by each encryption sibling set. Response from this endpoint can be modified and used as request body for POST request.


    :param str account_name: The name of the NetApp account
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:netapp/v20240901:getAccountChangeKeyVaultInformation', __args__, opts=opts, typ=GetAccountChangeKeyVaultInformationResult).value

    return AwaitableGetAccountChangeKeyVaultInformationResult(
        key_name=pulumi.get(__ret__, 'key_name'),
        key_vault_private_endpoints=pulumi.get(__ret__, 'key_vault_private_endpoints'),
        key_vault_resource_id=pulumi.get(__ret__, 'key_vault_resource_id'),
        key_vault_uri=pulumi.get(__ret__, 'key_vault_uri'))
def get_account_change_key_vault_information_output(account_name: Optional[pulumi.Input[str]] = None,
                                                    resource_group_name: Optional[pulumi.Input[str]] = None,
                                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAccountChangeKeyVaultInformationResult]:
    """
    Contains data from encryption.keyVaultProperties as well as information about which private endpoint is used by each encryption sibling set. Response from this endpoint can be modified and used as request body for POST request.


    :param str account_name: The name of the NetApp account
    :param str resource_group_name: The name of the resource group. The name is case insensitive.
    """
    __args__ = dict()
    __args__['accountName'] = account_name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure-native:netapp/v20240901:getAccountChangeKeyVaultInformation', __args__, opts=opts, typ=GetAccountChangeKeyVaultInformationResult)
    return __ret__.apply(lambda __response__: GetAccountChangeKeyVaultInformationResult(
        key_name=pulumi.get(__response__, 'key_name'),
        key_vault_private_endpoints=pulumi.get(__response__, 'key_vault_private_endpoints'),
        key_vault_resource_id=pulumi.get(__response__, 'key_vault_resource_id'),
        key_vault_uri=pulumi.get(__response__, 'key_vault_uri')))
