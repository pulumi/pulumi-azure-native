# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AssetType',
    'ColumnFormat',
    'ColumnType',
    'DiagnosticsLevel',
    'InputPortType',
    'OutputPortType',
    'ParameterType',
]


class AssetType(str, Enum):
    """
    Asset's type.
    """
    MODULE = "Module"
    RESOURCE = "Resource"


class ColumnFormat(str, Enum):
    """
    Additional format information for the data type.
    """
    BYTE = "Byte"
    CHAR = "Char"
    COMPLEX64 = "Complex64"
    COMPLEX128 = "Complex128"
    DATE_TIME = "Date-time"
    DATE_TIME_OFFSET = "Date-timeOffset"
    DOUBLE = "Double"
    DURATION = "Duration"
    FLOAT = "Float"
    INT8 = "Int8"
    INT16 = "Int16"
    INT32 = "Int32"
    INT64 = "Int64"
    UINT8 = "Uint8"
    UINT16 = "Uint16"
    UINT32 = "Uint32"
    UINT64 = "Uint64"


class ColumnType(str, Enum):
    """
    Data type of the column.
    """
    BOOLEAN = "Boolean"
    INTEGER = "Integer"
    NUMBER = "Number"
    STRING = "String"


class DiagnosticsLevel(str, Enum):
    """
    Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
    """
    NONE = "None"
    ERROR = "Error"
    ALL = "All"


class InputPortType(str, Enum):
    """
    Port data type.
    """
    DATASET = "Dataset"


class OutputPortType(str, Enum):
    """
    Port data type.
    """
    DATASET = "Dataset"


class ParameterType(str, Enum):
    """
    Graph parameter's type.
    """
    STRING = "String"
    INT = "Int"
    FLOAT = "Float"
    ENUMERATED = "Enumerated"
    SCRIPT = "Script"
    MODE = "Mode"
    CREDENTIAL = "Credential"
    BOOLEAN = "Boolean"
    DOUBLE = "Double"
    COLUMN_PICKER = "ColumnPicker"
    PARAMETER_RANGE = "ParameterRange"
    DATA_GATEWAY_NAME = "DataGatewayName"
