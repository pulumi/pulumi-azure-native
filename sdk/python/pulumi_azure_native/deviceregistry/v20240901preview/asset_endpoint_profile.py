# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['AssetEndpointProfileArgs', 'AssetEndpointProfile']

@pulumi.input_type
class AssetEndpointProfileArgs:
    def __init__(__self__, *,
                 endpoint_profile_type: pulumi.Input[str],
                 extended_location: pulumi.Input['ExtendedLocationArgs'],
                 resource_group_name: pulumi.Input[str],
                 target_address: pulumi.Input[str],
                 additional_configuration: Optional[pulumi.Input[str]] = None,
                 asset_endpoint_profile_name: Optional[pulumi.Input[str]] = None,
                 authentication: Optional[pulumi.Input['AuthenticationArgs']] = None,
                 discovered_asset_endpoint_profile_ref: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a AssetEndpointProfile resource.
        :param pulumi.Input[str] endpoint_profile_type: Defines the configuration for the connector type that is being used with the endpoint profile.
        :param pulumi.Input['ExtendedLocationArgs'] extended_location: The extended location.
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[str] target_address: The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
        :param pulumi.Input[str] additional_configuration: Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
        :param pulumi.Input[str] asset_endpoint_profile_name: Asset Endpoint Profile name parameter.
        :param pulumi.Input['AuthenticationArgs'] authentication: Defines the client authentication mechanism to the server.
        :param pulumi.Input[str] discovered_asset_endpoint_profile_ref: Reference to a discovered asset endpoint profile. Populated only if the asset endpoint profile has been created from discovery flow. Discovered asset endpoint profile name must be provided.
        :param pulumi.Input[str] location: The geo-location where the resource lives
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags.
        """
        pulumi.set(__self__, "endpoint_profile_type", endpoint_profile_type)
        pulumi.set(__self__, "extended_location", extended_location)
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        pulumi.set(__self__, "target_address", target_address)
        if additional_configuration is not None:
            pulumi.set(__self__, "additional_configuration", additional_configuration)
        if asset_endpoint_profile_name is not None:
            pulumi.set(__self__, "asset_endpoint_profile_name", asset_endpoint_profile_name)
        if authentication is not None:
            pulumi.set(__self__, "authentication", authentication)
        if discovered_asset_endpoint_profile_ref is not None:
            pulumi.set(__self__, "discovered_asset_endpoint_profile_ref", discovered_asset_endpoint_profile_ref)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="endpointProfileType")
    def endpoint_profile_type(self) -> pulumi.Input[str]:
        """
        Defines the configuration for the connector type that is being used with the endpoint profile.
        """
        return pulumi.get(self, "endpoint_profile_type")

    @endpoint_profile_type.setter
    def endpoint_profile_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "endpoint_profile_type", value)

    @property
    @pulumi.getter(name="extendedLocation")
    def extended_location(self) -> pulumi.Input['ExtendedLocationArgs']:
        """
        The extended location.
        """
        return pulumi.get(self, "extended_location")

    @extended_location.setter
    def extended_location(self, value: pulumi.Input['ExtendedLocationArgs']):
        pulumi.set(self, "extended_location", value)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[str]:
        """
        The name of the resource group. The name is case insensitive.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter(name="targetAddress")
    def target_address(self) -> pulumi.Input[str]:
        """
        The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
        """
        return pulumi.get(self, "target_address")

    @target_address.setter
    def target_address(self, value: pulumi.Input[str]):
        pulumi.set(self, "target_address", value)

    @property
    @pulumi.getter(name="additionalConfiguration")
    def additional_configuration(self) -> Optional[pulumi.Input[str]]:
        """
        Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
        """
        return pulumi.get(self, "additional_configuration")

    @additional_configuration.setter
    def additional_configuration(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "additional_configuration", value)

    @property
    @pulumi.getter(name="assetEndpointProfileName")
    def asset_endpoint_profile_name(self) -> Optional[pulumi.Input[str]]:
        """
        Asset Endpoint Profile name parameter.
        """
        return pulumi.get(self, "asset_endpoint_profile_name")

    @asset_endpoint_profile_name.setter
    def asset_endpoint_profile_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "asset_endpoint_profile_name", value)

    @property
    @pulumi.getter
    def authentication(self) -> Optional[pulumi.Input['AuthenticationArgs']]:
        """
        Defines the client authentication mechanism to the server.
        """
        return pulumi.get(self, "authentication")

    @authentication.setter
    def authentication(self, value: Optional[pulumi.Input['AuthenticationArgs']]):
        pulumi.set(self, "authentication", value)

    @property
    @pulumi.getter(name="discoveredAssetEndpointProfileRef")
    def discovered_asset_endpoint_profile_ref(self) -> Optional[pulumi.Input[str]]:
        """
        Reference to a discovered asset endpoint profile. Populated only if the asset endpoint profile has been created from discovery flow. Discovered asset endpoint profile name must be provided.
        """
        return pulumi.get(self, "discovered_asset_endpoint_profile_ref")

    @discovered_asset_endpoint_profile_ref.setter
    def discovered_asset_endpoint_profile_ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "discovered_asset_endpoint_profile_ref", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)


class AssetEndpointProfile(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 additional_configuration: Optional[pulumi.Input[str]] = None,
                 asset_endpoint_profile_name: Optional[pulumi.Input[str]] = None,
                 authentication: Optional[pulumi.Input[Union['AuthenticationArgs', 'AuthenticationArgsDict']]] = None,
                 discovered_asset_endpoint_profile_ref: Optional[pulumi.Input[str]] = None,
                 endpoint_profile_type: Optional[pulumi.Input[str]] = None,
                 extended_location: Optional[pulumi.Input[Union['ExtendedLocationArgs', 'ExtendedLocationArgsDict']]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 target_address: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Asset Endpoint Profile definition.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] additional_configuration: Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
        :param pulumi.Input[str] asset_endpoint_profile_name: Asset Endpoint Profile name parameter.
        :param pulumi.Input[Union['AuthenticationArgs', 'AuthenticationArgsDict']] authentication: Defines the client authentication mechanism to the server.
        :param pulumi.Input[str] discovered_asset_endpoint_profile_ref: Reference to a discovered asset endpoint profile. Populated only if the asset endpoint profile has been created from discovery flow. Discovered asset endpoint profile name must be provided.
        :param pulumi.Input[str] endpoint_profile_type: Defines the configuration for the connector type that is being used with the endpoint profile.
        :param pulumi.Input[Union['ExtendedLocationArgs', 'ExtendedLocationArgsDict']] extended_location: The extended location.
        :param pulumi.Input[str] location: The geo-location where the resource lives
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags.
        :param pulumi.Input[str] target_address: The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AssetEndpointProfileArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Asset Endpoint Profile definition.

        :param str resource_name: The name of the resource.
        :param AssetEndpointProfileArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AssetEndpointProfileArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 additional_configuration: Optional[pulumi.Input[str]] = None,
                 asset_endpoint_profile_name: Optional[pulumi.Input[str]] = None,
                 authentication: Optional[pulumi.Input[Union['AuthenticationArgs', 'AuthenticationArgsDict']]] = None,
                 discovered_asset_endpoint_profile_ref: Optional[pulumi.Input[str]] = None,
                 endpoint_profile_type: Optional[pulumi.Input[str]] = None,
                 extended_location: Optional[pulumi.Input[Union['ExtendedLocationArgs', 'ExtendedLocationArgsDict']]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 target_address: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AssetEndpointProfileArgs.__new__(AssetEndpointProfileArgs)

            __props__.__dict__["additional_configuration"] = additional_configuration
            __props__.__dict__["asset_endpoint_profile_name"] = asset_endpoint_profile_name
            __props__.__dict__["authentication"] = authentication
            __props__.__dict__["discovered_asset_endpoint_profile_ref"] = discovered_asset_endpoint_profile_ref
            if endpoint_profile_type is None and not opts.urn:
                raise TypeError("Missing required property 'endpoint_profile_type'")
            __props__.__dict__["endpoint_profile_type"] = endpoint_profile_type
            if extended_location is None and not opts.urn:
                raise TypeError("Missing required property 'extended_location'")
            __props__.__dict__["extended_location"] = extended_location
            __props__.__dict__["location"] = location
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            __props__.__dict__["tags"] = tags
            if target_address is None and not opts.urn:
                raise TypeError("Missing required property 'target_address'")
            __props__.__dict__["target_address"] = target_address
            __props__.__dict__["name"] = None
            __props__.__dict__["provisioning_state"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
            __props__.__dict__["uuid"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:deviceregistry:AssetEndpointProfile"), pulumi.Alias(type_="azure-native:deviceregistry/v20231101preview:AssetEndpointProfile"), pulumi.Alias(type_="azure-native:deviceregistry/v20241101:AssetEndpointProfile")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(AssetEndpointProfile, __self__).__init__(
            'azure-native:deviceregistry/v20240901preview:AssetEndpointProfile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'AssetEndpointProfile':
        """
        Get an existing AssetEndpointProfile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = AssetEndpointProfileArgs.__new__(AssetEndpointProfileArgs)

        __props__.__dict__["additional_configuration"] = None
        __props__.__dict__["authentication"] = None
        __props__.__dict__["discovered_asset_endpoint_profile_ref"] = None
        __props__.__dict__["endpoint_profile_type"] = None
        __props__.__dict__["extended_location"] = None
        __props__.__dict__["location"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["provisioning_state"] = None
        __props__.__dict__["status"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["target_address"] = None
        __props__.__dict__["type"] = None
        __props__.__dict__["uuid"] = None
        return AssetEndpointProfile(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="additionalConfiguration")
    def additional_configuration(self) -> pulumi.Output[Optional[str]]:
        """
        Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
        """
        return pulumi.get(self, "additional_configuration")

    @property
    @pulumi.getter
    def authentication(self) -> pulumi.Output[Optional['outputs.AuthenticationResponse']]:
        """
        Defines the client authentication mechanism to the server.
        """
        return pulumi.get(self, "authentication")

    @property
    @pulumi.getter(name="discoveredAssetEndpointProfileRef")
    def discovered_asset_endpoint_profile_ref(self) -> pulumi.Output[Optional[str]]:
        """
        Reference to a discovered asset endpoint profile. Populated only if the asset endpoint profile has been created from discovery flow. Discovered asset endpoint profile name must be provided.
        """
        return pulumi.get(self, "discovered_asset_endpoint_profile_ref")

    @property
    @pulumi.getter(name="endpointProfileType")
    def endpoint_profile_type(self) -> pulumi.Output[str]:
        """
        Defines the configuration for the connector type that is being used with the endpoint profile.
        """
        return pulumi.get(self, "endpoint_profile_type")

    @property
    @pulumi.getter(name="extendedLocation")
    def extended_location(self) -> pulumi.Output['outputs.ExtendedLocationResponse']:
        """
        The extended location.
        """
        return pulumi.get(self, "extended_location")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[str]:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="provisioningState")
    def provisioning_state(self) -> pulumi.Output[str]:
        """
        Provisioning state of the resource.
        """
        return pulumi.get(self, "provisioning_state")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output['outputs.AssetEndpointProfileStatusResponse']:
        """
        Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="targetAddress")
    def target_address(self) -> pulumi.Output[str]:
        """
        The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
        """
        return pulumi.get(self, "target_address")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[str]:
        """
        Globally unique, immutable, non-reusable id.
        """
        return pulumi.get(self, "uuid")

