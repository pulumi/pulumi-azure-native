# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AdministratorType',
    'AutoExecuteStatus',
    'BackupStorageRedundancy',
    'BlobAuditingPolicyState',
    'CatalogCollationType',
    'CreateMode',
    'DataMaskingState',
    'DatabaseIdentityType',
    'DatabaseLicenseType',
    'DatabaseReadScale',
    'DayOfWeek',
    'ElasticPoolLicenseType',
    'GeoBackupPolicyState',
    'IdentityType',
    'InstancePoolLicenseType',
    'JobScheduleType',
    'JobStepActionSource',
    'JobStepActionType',
    'JobStepOutputType',
    'JobTargetGroupMembershipType',
    'JobTargetType',
    'ManagedDatabaseCreateMode',
    'ManagedInstanceAdministratorType',
    'ManagedInstanceLicenseType',
    'ManagedInstanceProxyOverride',
    'ManagedServerCreateMode',
    'PrincipalType',
    'PrivateLinkServiceConnectionStateStatus',
    'ReadOnlyEndpointFailoverPolicy',
    'ReadWriteEndpointFailoverPolicy',
    'ReplicationMode',
    'SampleName',
    'SecondaryType',
    'SecurityAlertPolicyEmailAccountAdmins',
    'SecurityAlertPolicyState',
    'SecurityAlertPolicyUseServerDefault',
    'SecurityAlertsPolicyState',
    'SensitivityLabelRank',
    'ServerKeyType',
    'ServerNetworkAccessFlag',
    'ServicePrincipalType',
    'SqlVulnerabilityAssessmentState',
    'SyncConflictResolutionPolicy',
    'SyncDirection',
    'SyncMemberDbType',
    'TransparentDataEncryptionState',
]


class AdministratorType(str, Enum):
    ACTIVE_DIRECTORY = "ActiveDirectory"


class AutoExecuteStatus(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"
    DEFAULT = "Default"


class BackupStorageRedundancy(str, Enum):
    GEO = "Geo"
    LOCAL = "Local"
    ZONE = "Zone"
    GEO_ZONE = "GeoZone"


class BlobAuditingPolicyState(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class CatalogCollationType(str, Enum):
    DATABAS_E_DEFAULT = "DATABASE_DEFAULT"
    SQ_L_LATIN1_GENERAL_CP1_C_I_AS = "SQL_Latin1_General_CP1_CI_AS"


class CreateMode(str, Enum):
    DEFAULT = "Default"
    COPY = "Copy"
    SECONDARY = "Secondary"
    POINT_IN_TIME_RESTORE = "PointInTimeRestore"
    RESTORE = "Restore"
    RECOVERY = "Recovery"
    RESTORE_EXTERNAL_BACKUP = "RestoreExternalBackup"
    RESTORE_EXTERNAL_BACKUP_SECONDARY = "RestoreExternalBackupSecondary"
    RESTORE_LONG_TERM_RETENTION_BACKUP = "RestoreLongTermRetentionBackup"
    ONLINE_SECONDARY = "OnlineSecondary"


class DataMaskingState(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class DatabaseIdentityType(str, Enum):
    NONE = "None"
    USER_ASSIGNED = "UserAssigned"


class DatabaseLicenseType(str, Enum):
    LICENSE_INCLUDED = "LicenseIncluded"
    BASE_PRICE = "BasePrice"


class DatabaseReadScale(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class DayOfWeek(str, Enum):
    SUNDAY = "Sunday"
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"


class ElasticPoolLicenseType(str, Enum):
    LICENSE_INCLUDED = "LicenseIncluded"
    BASE_PRICE = "BasePrice"


class GeoBackupPolicyState(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class IdentityType(str, Enum):
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class InstancePoolLicenseType(str, Enum):
    LICENSE_INCLUDED = "LicenseIncluded"
    BASE_PRICE = "BasePrice"


class JobScheduleType(str, Enum):
    ONCE = "Once"
    RECURRING = "Recurring"


class JobStepActionSource(str, Enum):
    INLINE = "Inline"


class JobStepActionType(str, Enum):
    T_SQL = "TSql"


class JobStepOutputType(str, Enum):
    SQL_DATABASE = "SqlDatabase"


class JobTargetGroupMembershipType(str, Enum):
    INCLUDE = "Include"
    EXCLUDE = "Exclude"


class JobTargetType(str, Enum):
    TARGET_GROUP = "TargetGroup"
    SQL_DATABASE = "SqlDatabase"
    SQL_ELASTIC_POOL = "SqlElasticPool"
    SQL_SHARD_MAP = "SqlShardMap"
    SQL_SERVER = "SqlServer"


class ManagedDatabaseCreateMode(str, Enum):
    DEFAULT = "Default"
    RESTORE_EXTERNAL_BACKUP = "RestoreExternalBackup"
    POINT_IN_TIME_RESTORE = "PointInTimeRestore"
    RECOVERY = "Recovery"
    RESTORE_LONG_TERM_RETENTION_BACKUP = "RestoreLongTermRetentionBackup"


class ManagedInstanceAdministratorType(str, Enum):
    ACTIVE_DIRECTORY = "ActiveDirectory"


class ManagedInstanceLicenseType(str, Enum):
    LICENSE_INCLUDED = "LicenseIncluded"
    BASE_PRICE = "BasePrice"


class ManagedInstanceProxyOverride(str, Enum):
    PROXY = "Proxy"
    REDIRECT = "Redirect"
    DEFAULT = "Default"


class ManagedServerCreateMode(str, Enum):
    DEFAULT = "Default"
    POINT_IN_TIME_RESTORE = "PointInTimeRestore"


class PrincipalType(str, Enum):
    USER = "User"
    GROUP = "Group"
    APPLICATION = "Application"


class PrivateLinkServiceConnectionStateStatus(str, Enum):
    APPROVED = "Approved"
    PENDING = "Pending"
    REJECTED = "Rejected"
    DISCONNECTED = "Disconnected"


class ReadOnlyEndpointFailoverPolicy(str, Enum):
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class ReadWriteEndpointFailoverPolicy(str, Enum):
    MANUAL = "Manual"
    AUTOMATIC = "Automatic"


class ReplicationMode(str, Enum):
    ASYNC_ = "Async"
    SYNC = "Sync"


class SampleName(str, Enum):
    ADVENTURE_WORKS_LT = "AdventureWorksLT"
    WIDE_WORLD_IMPORTERS_STD = "WideWorldImportersStd"
    WIDE_WORLD_IMPORTERS_FULL = "WideWorldImportersFull"


class SecondaryType(str, Enum):
    GEO = "Geo"
    NAMED = "Named"


class SecurityAlertPolicyEmailAccountAdmins(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class SecurityAlertPolicyState(str, Enum):
    NEW = "New"
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class SecurityAlertPolicyUseServerDefault(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class SecurityAlertsPolicyState(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class SensitivityLabelRank(str, Enum):
    NONE = "None"
    LOW = "Low"
    MEDIUM = "Medium"
    HIGH = "High"
    CRITICAL = "Critical"


class ServerKeyType(str, Enum):
    SERVICE_MANAGED = "ServiceManaged"
    AZURE_KEY_VAULT = "AzureKeyVault"


class ServerNetworkAccessFlag(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class ServicePrincipalType(str, Enum):
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"


class SqlVulnerabilityAssessmentState(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class SyncConflictResolutionPolicy(str, Enum):
    HUB_WIN = "HubWin"
    MEMBER_WIN = "MemberWin"


class SyncDirection(str, Enum):
    BIDIRECTIONAL = "Bidirectional"
    ONE_WAY_MEMBER_TO_HUB = "OneWayMemberToHub"
    ONE_WAY_HUB_TO_MEMBER = "OneWayHubToMember"


class SyncMemberDbType(str, Enum):
    AZURE_SQL_DATABASE = "AzureSqlDatabase"
    SQL_SERVER_DATABASE = "SqlServerDatabase"


class TransparentDataEncryptionState(str, Enum):
    ENABLED = "Enabled"
    DISABLED = "Disabled"
