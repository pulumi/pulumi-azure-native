# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import pulumi
from enum import Enum

__all__ = [
    'AdministratorType',
    'AlwaysEncryptedEnclaveType',
    'AuthMetadataLookupModes',
    'AutoExecuteStatus',
    'AvailabilityZoneType',
    'BackupStorageAccessTier',
    'BackupStorageRedundancy',
    'BlobAuditingPolicyState',
    'CatalogCollationType',
    'ClientClassificationSource',
    'CreateMode',
    'DataMaskingState',
    'DatabaseIdentityType',
    'DatabaseLicenseType',
    'DatabaseReadScale',
    'DayOfWeek',
    'ElasticPoolLicenseType',
    'FailoverGroupDatabasesSecondaryType',
    'FailoverModeType',
    'FreeLimitExhaustionBehavior',
    'GeoBackupPolicyState',
    'HybridSecondaryUsage',
    'IdentityType',
    'InstancePoolLicenseType',
    'JobAgentIdentityType',
    'JobScheduleType',
    'JobStepActionSource',
    'JobStepActionType',
    'JobStepOutputType',
    'JobTargetGroupMembershipType',
    'JobTargetType',
    'LinkRole',
    'ManagedDatabaseCreateMode',
    'ManagedInstanceAdministratorType',
    'ManagedInstanceDatabaseFormat',
    'ManagedInstanceLicenseType',
    'ManagedInstanceProxyOverride',
    'ManagedServerCreateMode',
    'MinimalTlsVersion',
    'PricingModel',
    'PrincipalType',
    'PrivateLinkServiceConnectionStateStatus',
    'ReadOnlyEndpointFailoverPolicy',
    'ReadWriteEndpointFailoverPolicy',
    'ReplicationLinkType',
    'ReplicationModeType',
    'SampleName',
    'SecondaryInstanceType',
    'SecondaryType',
    'SecurityAlertPolicyEmailAccountAdmins',
    'SecurityAlertPolicyState',
    'SecurityAlertPolicyUseServerDefault',
    'SecurityAlertsPolicyState',
    'SeedingModeType',
    'SensitivityLabelRank',
    'ServerKeyType',
    'ServerNetworkAccessFlag',
    'ServerPublicNetworkAccessFlag',
    'ServicePrincipalType',
    'SqlVulnerabilityAssessmentState',
    'SyncConflictResolutionPolicy',
    'SyncDirection',
    'SyncMemberDbType',
    'TransparentDataEncryptionState',
    'TrustScope',
]


@pulumi.type_token("azure-native:sql:AdministratorType")
class AdministratorType(builtins.str, Enum):
    """
    Type of the sever administrator.
    """
    ACTIVE_DIRECTORY = "ActiveDirectory"


@pulumi.type_token("azure-native:sql:AlwaysEncryptedEnclaveType")
class AlwaysEncryptedEnclaveType(builtins.str, Enum):
    """
    Type of enclave requested on the elastic pool.
    """
    DEFAULT = "Default"
    VBS = "VBS"


@pulumi.type_token("azure-native:sql:AuthMetadataLookupModes")
class AuthMetadataLookupModes(builtins.str, Enum):
    """
    The managed instance's authentication metadata lookup mode.
    """
    AZURE_AD = "AzureAD"
    PAIRED = "Paired"
    WINDOWS = "Windows"


@pulumi.type_token("azure-native:sql:AutoExecuteStatus")
class AutoExecuteStatus(builtins.str, Enum):
    """
    Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"
    DEFAULT = "Default"


@pulumi.type_token("azure-native:sql:AvailabilityZoneType")
class AvailabilityZoneType(builtins.str, Enum):
    """
    Specifies the availability zone the pool's primary replica is pinned to.
    """
    NO_PREFERENCE = "NoPreference"
    ONE = "1"
    TWO = "2"
    THREE = "3"


@pulumi.type_token("azure-native:sql:BackupStorageAccessTier")
class BackupStorageAccessTier(builtins.str, Enum):
    """
    The BackupStorageAccessTier for the LTR backups
    """
    HOT = "Hot"
    ARCHIVE = "Archive"


@pulumi.type_token("azure-native:sql:BackupStorageRedundancy")
class BackupStorageRedundancy(builtins.str, Enum):
    """
    The storage account type to be used to store backups for this instance. The options are Local (LocallyRedundantStorage), Zone (ZoneRedundantStorage), Geo (GeoRedundantStorage) and GeoZone(GeoZoneRedundantStorage)
    """
    GEO = "Geo"
    LOCAL = "Local"
    ZONE = "Zone"
    GEO_ZONE = "GeoZone"


@pulumi.type_token("azure-native:sql:BlobAuditingPolicyState")
class BlobAuditingPolicyState(builtins.str, Enum):
    """
    Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:CatalogCollationType")
class CatalogCollationType(builtins.str, Enum):
    """
    Collation of the metadata catalog.
    """
    DATABAS_E_DEFAULT = "DATABASE_DEFAULT"
    SQ_L_LATIN1_GENERAL_CP1_C_I_AS = "SQL_Latin1_General_CP1_CI_AS"


@pulumi.type_token("azure-native:sql:ClientClassificationSource")
class ClientClassificationSource(builtins.str, Enum):
    NONE = "None"
    NATIVE = "Native"
    RECOMMENDED = "Recommended"
    MIP = "MIP"


@pulumi.type_token("azure-native:sql:CreateMode")
class CreateMode(builtins.str, Enum):
    """
    Specifies the mode of database creation.
    
    Default: regular database creation.
    
    Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.
    
    Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.
    
    PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.
    
    Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.
    
    Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.
    
    RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.
    
    Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.
    """
    DEFAULT = "Default"
    COPY = "Copy"
    SECONDARY = "Secondary"
    POINT_IN_TIME_RESTORE = "PointInTimeRestore"
    RESTORE = "Restore"
    RECOVERY = "Recovery"
    RESTORE_EXTERNAL_BACKUP = "RestoreExternalBackup"
    RESTORE_EXTERNAL_BACKUP_SECONDARY = "RestoreExternalBackupSecondary"
    RESTORE_LONG_TERM_RETENTION_BACKUP = "RestoreLongTermRetentionBackup"
    ONLINE_SECONDARY = "OnlineSecondary"


@pulumi.type_token("azure-native:sql:DataMaskingState")
class DataMaskingState(builtins.str, Enum):
    """
    The state of the data masking policy.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:DatabaseIdentityType")
class DatabaseIdentityType(builtins.str, Enum):
    """
    The identity type
    """
    NONE = "None"
    USER_ASSIGNED = "UserAssigned"


@pulumi.type_token("azure-native:sql:DatabaseLicenseType")
class DatabaseLicenseType(builtins.str, Enum):
    """
    The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.
    """
    LICENSE_INCLUDED = "LicenseIncluded"
    BASE_PRICE = "BasePrice"


@pulumi.type_token("azure-native:sql:DatabaseReadScale")
class DatabaseReadScale(builtins.str, Enum):
    """
    The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:DayOfWeek")
class DayOfWeek(builtins.str, Enum):
    """
    Stop day.
    """
    SUNDAY = "Sunday"
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"


@pulumi.type_token("azure-native:sql:ElasticPoolLicenseType")
class ElasticPoolLicenseType(builtins.str, Enum):
    """
    The license type to apply for this elastic pool.
    """
    LICENSE_INCLUDED = "LicenseIncluded"
    BASE_PRICE = "BasePrice"


@pulumi.type_token("azure-native:sql:FailoverGroupDatabasesSecondaryType")
class FailoverGroupDatabasesSecondaryType(builtins.str, Enum):
    """
    Databases secondary type on partner server.
    """
    GEO = "Geo"
    STANDBY = "Standby"


@pulumi.type_token("azure-native:sql:FailoverModeType")
class FailoverModeType(builtins.str, Enum):
    """
    The link failover mode - can be Manual if intended to be used for two-way failover with a supported SQL Server, or None for one-way failover to Azure.
    """
    NONE = "None"
    MANUAL = "Manual"


@pulumi.type_token("azure-native:sql:FreeLimitExhaustionBehavior")
class FreeLimitExhaustionBehavior(builtins.str, Enum):
    """
    Specifies the behavior when monthly free limits are exhausted for the free database.
    
    AutoPause: The database will be auto paused upon exhaustion of free limits for remainder of the month.
    
    BillForUsage: The database will continue to be online upon exhaustion of free limits and any overage will be billed.
    """
    AUTO_PAUSE = "AutoPause"
    BILL_OVER_USAGE = "BillOverUsage"


@pulumi.type_token("azure-native:sql:GeoBackupPolicyState")
class GeoBackupPolicyState(builtins.str, Enum):
    """
    The state of the geo backup policy.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:HybridSecondaryUsage")
class HybridSecondaryUsage(builtins.str, Enum):
    """
    Hybrid secondary usage. Possible values are 'Active' (default value) and 'Passive' (customer uses the secondary as Passive DR).
    """
    ACTIVE = "Active"
    PASSIVE = "Passive"


@pulumi.type_token("azure-native:sql:IdentityType")
class IdentityType(builtins.str, Enum):
    """
    The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


@pulumi.type_token("azure-native:sql:InstancePoolLicenseType")
class InstancePoolLicenseType(builtins.str, Enum):
    """
    The license type. Possible values are 'LicenseIncluded' (price for SQL license is included) and 'BasePrice' (without SQL license price).
    """
    LICENSE_INCLUDED = "LicenseIncluded"
    BASE_PRICE = "BasePrice"


@pulumi.type_token("azure-native:sql:JobAgentIdentityType")
class JobAgentIdentityType(builtins.str, Enum):
    """
    The job agent identity type
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssignedUserAssigned"


@pulumi.type_token("azure-native:sql:JobScheduleType")
class JobScheduleType(builtins.str, Enum):
    """
    Schedule interval type
    """
    ONCE = "Once"
    RECURRING = "Recurring"


@pulumi.type_token("azure-native:sql:JobStepActionSource")
class JobStepActionSource(builtins.str, Enum):
    """
    The source of the action to execute.
    """
    INLINE = "Inline"


@pulumi.type_token("azure-native:sql:JobStepActionType")
class JobStepActionType(builtins.str, Enum):
    """
    Type of action being executed by the job step.
    """
    T_SQL = "TSql"


@pulumi.type_token("azure-native:sql:JobStepOutputType")
class JobStepOutputType(builtins.str, Enum):
    """
    The output destination type.
    """
    SQL_DATABASE = "SqlDatabase"


@pulumi.type_token("azure-native:sql:JobTargetGroupMembershipType")
class JobTargetGroupMembershipType(builtins.str, Enum):
    """
    Whether the target is included or excluded from the group.
    """
    INCLUDE = "Include"
    EXCLUDE = "Exclude"


@pulumi.type_token("azure-native:sql:JobTargetType")
class JobTargetType(builtins.str, Enum):
    """
    The target type.
    """
    TARGET_GROUP = "TargetGroup"
    SQL_DATABASE = "SqlDatabase"
    SQL_ELASTIC_POOL = "SqlElasticPool"
    SQL_SHARD_MAP = "SqlShardMap"
    SQL_SERVER = "SqlServer"


@pulumi.type_token("azure-native:sql:LinkRole")
class LinkRole(builtins.str, Enum):
    """
    Managed instance side link role
    """
    PRIMARY = "Primary"
    SECONDARY = "Secondary"


@pulumi.type_token("azure-native:sql:ManagedDatabaseCreateMode")
class ManagedDatabaseCreateMode(builtins.str, Enum):
    """
    Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore. RestoreLongTermRetentionBackup: Create a database by restoring from a long term retention backup (longTermRetentionBackupResourceId required).
    """
    DEFAULT = "Default"
    RESTORE_EXTERNAL_BACKUP = "RestoreExternalBackup"
    POINT_IN_TIME_RESTORE = "PointInTimeRestore"
    RECOVERY = "Recovery"
    RESTORE_LONG_TERM_RETENTION_BACKUP = "RestoreLongTermRetentionBackup"


@pulumi.type_token("azure-native:sql:ManagedInstanceAdministratorType")
class ManagedInstanceAdministratorType(builtins.str, Enum):
    """
    Type of the managed instance administrator.
    """
    ACTIVE_DIRECTORY = "ActiveDirectory"


@pulumi.type_token("azure-native:sql:ManagedInstanceDatabaseFormat")
class ManagedInstanceDatabaseFormat(builtins.str, Enum):
    """
    Specifies the internal format of instance databases specific to the SQL engine version.
    """
    ALWAYS_UP_TO_DATE = "AlwaysUpToDate"
    SQL_SERVER2022 = "SQLServer2022"


@pulumi.type_token("azure-native:sql:ManagedInstanceLicenseType")
class ManagedInstanceLicenseType(builtins.str, Enum):
    """
    The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses).
    """
    LICENSE_INCLUDED = "LicenseIncluded"
    BASE_PRICE = "BasePrice"


@pulumi.type_token("azure-native:sql:ManagedInstanceProxyOverride")
class ManagedInstanceProxyOverride(builtins.str, Enum):
    """
    Connection type used for connecting to the instance.
    """
    PROXY = "Proxy"
    REDIRECT = "Redirect"
    DEFAULT = "Default"


@pulumi.type_token("azure-native:sql:ManagedServerCreateMode")
class ManagedServerCreateMode(builtins.str, Enum):
    """
    Specifies the mode of database creation.
    
    Default: Regular instance creation.
    
    Restore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and SourceManagedInstanceId must be specified.
    """
    DEFAULT = "Default"
    POINT_IN_TIME_RESTORE = "PointInTimeRestore"


@pulumi.type_token("azure-native:sql:MinimalTlsVersion")
class MinimalTlsVersion(builtins.str, Enum):
    """
    Minimal TLS version. Allowed values: 'None', 1.0', '1.1', '1.2', '1.3'
    """
    NONE = "None"
    MINIMAL_TLS_VERSION_1_0 = "1.0"
    MINIMAL_TLS_VERSION_1_1 = "1.1"
    MINIMAL_TLS_VERSION_1_2 = "1.2"
    MINIMAL_TLS_VERSION_1_3 = "1.3"


@pulumi.type_token("azure-native:sql:PricingModel")
class PricingModel(builtins.str, Enum):
    """
    Pricing model of Managed Instance.
    """
    REGULAR = "Regular"
    FREEMIUM = "Freemium"


@pulumi.type_token("azure-native:sql:PrincipalType")
class PrincipalType(builtins.str, Enum):
    """
    Principal Type of the sever administrator.
    """
    USER = "User"
    GROUP = "Group"
    APPLICATION = "Application"


@pulumi.type_token("azure-native:sql:PrivateLinkServiceConnectionStateStatus")
class PrivateLinkServiceConnectionStateStatus(builtins.str, Enum):
    """
    The private link service connection status.
    """
    APPROVED = "Approved"
    PENDING = "Pending"
    REJECTED = "Rejected"
    DISCONNECTED = "Disconnected"


@pulumi.type_token("azure-native:sql:ReadOnlyEndpointFailoverPolicy")
class ReadOnlyEndpointFailoverPolicy(builtins.str, Enum):
    """
    Failover policy of the read-only endpoint for the failover group.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


@pulumi.type_token("azure-native:sql:ReadWriteEndpointFailoverPolicy")
class ReadWriteEndpointFailoverPolicy(builtins.str, Enum):
    """
    Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
    """
    MANUAL = "Manual"
    AUTOMATIC = "Automatic"


@pulumi.type_token("azure-native:sql:ReplicationLinkType")
class ReplicationLinkType(builtins.str, Enum):
    """
    Link type (GEO, NAMED, STANDBY). Update operation does not support NAMED.
    """
    GEO = "GEO"
    NAMED = "NAMED"
    STANDBY = "STANDBY"


@pulumi.type_token("azure-native:sql:ReplicationModeType")
class ReplicationModeType(builtins.str, Enum):
    """
    Replication mode of the link
    """
    ASYNC_ = "Async"
    SYNC = "Sync"


@pulumi.type_token("azure-native:sql:SampleName")
class SampleName(builtins.str, Enum):
    """
    The name of the sample schema to apply when creating this database.
    """
    ADVENTURE_WORKS_LT = "AdventureWorksLT"
    WIDE_WORLD_IMPORTERS_STD = "WideWorldImportersStd"
    WIDE_WORLD_IMPORTERS_FULL = "WideWorldImportersFull"


@pulumi.type_token("azure-native:sql:SecondaryInstanceType")
class SecondaryInstanceType(builtins.str, Enum):
    """
    Type of the geo-secondary instance. Set 'Standby' if the instance is used as a DR option only.
    """
    GEO = "Geo"
    STANDBY = "Standby"


@pulumi.type_token("azure-native:sql:SecondaryType")
class SecondaryType(builtins.str, Enum):
    """
    The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.
    """
    GEO = "Geo"
    NAMED = "Named"
    STANDBY = "Standby"


@pulumi.type_token("azure-native:sql:SecurityAlertPolicyEmailAccountAdmins")
class SecurityAlertPolicyEmailAccountAdmins(builtins.str, Enum):
    """
    Specifies that the alert is sent to the account administrators.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:SecurityAlertPolicyState")
class SecurityAlertPolicyState(builtins.str, Enum):
    """
    Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.
    """
    NEW = "New"
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:SecurityAlertPolicyUseServerDefault")
class SecurityAlertPolicyUseServerDefault(builtins.str, Enum):
    """
    Specifies whether to use the default server policy.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:SecurityAlertsPolicyState")
class SecurityAlertsPolicyState(builtins.str, Enum):
    """
    Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:SeedingModeType")
class SeedingModeType(builtins.str, Enum):
    """
    Database seeding mode – can be Automatic (default), or Manual for supported scenarios.
    """
    AUTOMATIC = "Automatic"
    MANUAL = "Manual"


@pulumi.type_token("azure-native:sql:SensitivityLabelRank")
class SensitivityLabelRank(builtins.str, Enum):
    NONE = "None"
    LOW = "Low"
    MEDIUM = "Medium"
    HIGH = "High"
    CRITICAL = "Critical"


@pulumi.type_token("azure-native:sql:ServerKeyType")
class ServerKeyType(builtins.str, Enum):
    """
    The server key type like 'ServiceManaged', 'AzureKeyVault'.
    """
    SERVICE_MANAGED = "ServiceManaged"
    AZURE_KEY_VAULT = "AzureKeyVault"


@pulumi.type_token("azure-native:sql:ServerNetworkAccessFlag")
class ServerNetworkAccessFlag(builtins.str, Enum):
    """
    Whether or not to restrict outbound network access for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:ServerPublicNetworkAccessFlag")
class ServerPublicNetworkAccessFlag(builtins.str, Enum):
    """
    Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' or 'SecuredByPerimeter'
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"
    SECURED_BY_PERIMETER = "SecuredByPerimeter"


@pulumi.type_token("azure-native:sql:ServicePrincipalType")
class ServicePrincipalType(builtins.str, Enum):
    """
    Service principal type.
    """
    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"


@pulumi.type_token("azure-native:sql:SqlVulnerabilityAssessmentState")
class SqlVulnerabilityAssessmentState(builtins.str, Enum):
    """
    Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:SyncConflictResolutionPolicy")
class SyncConflictResolutionPolicy(builtins.str, Enum):
    """
    Conflict resolution policy of the sync group.
    """
    HUB_WIN = "HubWin"
    MEMBER_WIN = "MemberWin"


@pulumi.type_token("azure-native:sql:SyncDirection")
class SyncDirection(builtins.str, Enum):
    """
    Sync direction of the sync member.
    """
    BIDIRECTIONAL = "Bidirectional"
    ONE_WAY_MEMBER_TO_HUB = "OneWayMemberToHub"
    ONE_WAY_HUB_TO_MEMBER = "OneWayHubToMember"


@pulumi.type_token("azure-native:sql:SyncMemberDbType")
class SyncMemberDbType(builtins.str, Enum):
    """
    Database type of the sync member.
    """
    AZURE_SQL_DATABASE = "AzureSqlDatabase"
    SQL_SERVER_DATABASE = "SqlServerDatabase"


@pulumi.type_token("azure-native:sql:TransparentDataEncryptionState")
class TransparentDataEncryptionState(builtins.str, Enum):
    """
    Specifies the state of the transparent data encryption.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


@pulumi.type_token("azure-native:sql:TrustScope")
class TrustScope(builtins.str, Enum):
    GLOBAL_TRANSACTIONS = "GlobalTransactions"
    SERVICE_BROKER = "ServiceBroker"
