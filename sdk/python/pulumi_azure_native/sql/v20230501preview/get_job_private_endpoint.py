# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'GetJobPrivateEndpointResult',
    'AwaitableGetJobPrivateEndpointResult',
    'get_job_private_endpoint',
    'get_job_private_endpoint_output',
]

@pulumi.output_type
class GetJobPrivateEndpointResult:
    """
    A job agent private endpoint.
    """
    def __init__(__self__, id=None, name=None, private_endpoint_id=None, target_server_azure_resource_id=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if private_endpoint_id and not isinstance(private_endpoint_id, str):
            raise TypeError("Expected argument 'private_endpoint_id' to be a str")
        pulumi.set(__self__, "private_endpoint_id", private_endpoint_id)
        if target_server_azure_resource_id and not isinstance(target_server_azure_resource_id, str):
            raise TypeError("Expected argument 'target_server_azure_resource_id' to be a str")
        pulumi.set(__self__, "target_server_azure_resource_id", target_server_azure_resource_id)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Resource ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Resource name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="privateEndpointId")
    def private_endpoint_id(self) -> str:
        """
        Private endpoint id of the private endpoint.
        """
        return pulumi.get(self, "private_endpoint_id")

    @property
    @pulumi.getter(name="targetServerAzureResourceId")
    def target_server_azure_resource_id(self) -> str:
        """
        ARM resource id of the server the private endpoint will target.
        """
        return pulumi.get(self, "target_server_azure_resource_id")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Resource type.
        """
        return pulumi.get(self, "type")


class AwaitableGetJobPrivateEndpointResult(GetJobPrivateEndpointResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetJobPrivateEndpointResult(
            id=self.id,
            name=self.name,
            private_endpoint_id=self.private_endpoint_id,
            target_server_azure_resource_id=self.target_server_azure_resource_id,
            type=self.type)


def get_job_private_endpoint(job_agent_name: Optional[str] = None,
                             private_endpoint_name: Optional[str] = None,
                             resource_group_name: Optional[str] = None,
                             server_name: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetJobPrivateEndpointResult:
    """
    Gets a private endpoint.


    :param str job_agent_name: The name of the job agent.
    :param str private_endpoint_name: The name of the private endpoint to get.
    :param str resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
    :param str server_name: The name of the server.
    """
    __args__ = dict()
    __args__['jobAgentName'] = job_agent_name
    __args__['privateEndpointName'] = private_endpoint_name
    __args__['resourceGroupName'] = resource_group_name
    __args__['serverName'] = server_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure-native:sql/v20230501preview:getJobPrivateEndpoint', __args__, opts=opts, typ=GetJobPrivateEndpointResult).value

    return AwaitableGetJobPrivateEndpointResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        private_endpoint_id=pulumi.get(__ret__, 'private_endpoint_id'),
        target_server_azure_resource_id=pulumi.get(__ret__, 'target_server_azure_resource_id'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_job_private_endpoint)
def get_job_private_endpoint_output(job_agent_name: Optional[pulumi.Input[str]] = None,
                                    private_endpoint_name: Optional[pulumi.Input[str]] = None,
                                    resource_group_name: Optional[pulumi.Input[str]] = None,
                                    server_name: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetJobPrivateEndpointResult]:
    """
    Gets a private endpoint.


    :param str job_agent_name: The name of the job agent.
    :param str private_endpoint_name: The name of the private endpoint to get.
    :param str resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
    :param str server_name: The name of the server.
    """
    ...
