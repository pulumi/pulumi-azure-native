# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AccumulatedType',
    'ChartType',
    'DaysOfWeek',
    'ExportType',
    'FileFormat',
    'FormatType',
    'FunctionType',
    'GranularityType',
    'KpiTypeType',
    'MetricType',
    'OperatorType',
    'PivotTypeType',
    'QueryColumnType',
    'RecurrenceType',
    'ReportConfigSortingType',
    'ReportGranularityType',
    'ReportTimeframeType',
    'ReportType',
    'ScheduleFrequency',
    'ScheduledActionKind',
    'ScheduledActionStatus',
    'StatusType',
    'TimeframeType',
    'WeeksOfMonth',
]


class AccumulatedType(str, Enum):
    TRUE = "true"
    FALSE = "false"


class ChartType(str, Enum):
    AREA = "Area"
    LINE = "Line"
    STACKED_COLUMN = "StackedColumn"
    GROUPED_COLUMN = "GroupedColumn"
    TABLE = "Table"


class DaysOfWeek(str, Enum):
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"
    SUNDAY = "Sunday"


class ExportType(str, Enum):
    USAGE = "Usage"
    ACTUAL_COST = "ActualCost"
    AMORTIZED_COST = "AmortizedCost"


class FileFormat(str, Enum):
    CSV = "Csv"


class FormatType(str, Enum):
    CSV = "Csv"


class FunctionType(str, Enum):
    SUM = "Sum"


class GranularityType(str, Enum):
    DAILY = "Daily"


class KpiTypeType(str, Enum):
    FORECAST = "Forecast"
    BUDGET = "Budget"


class MetricType(str, Enum):
    ACTUAL_COST = "ActualCost"
    AMORTIZED_COST = "AmortizedCost"
    AHUB = "AHUB"


class OperatorType(str, Enum):
    IN_ = "In"
    CONTAINS = "Contains"


class PivotTypeType(str, Enum):
    DIMENSION = "Dimension"
    TAG_KEY = "TagKey"


class QueryColumnType(str, Enum):
    TAG_KEY = "TagKey"
    """
    The tag associated with the cost data.
    """
    DIMENSION = "Dimension"
    """
    The dimension of cost data.
    """


class RecurrenceType(str, Enum):
    DAILY = "Daily"
    WEEKLY = "Weekly"
    MONTHLY = "Monthly"
    ANNUALLY = "Annually"


class ReportConfigSortingType(str, Enum):
    ASCENDING = "Ascending"
    DESCENDING = "Descending"


class ReportGranularityType(str, Enum):
    DAILY = "Daily"
    MONTHLY = "Monthly"


class ReportTimeframeType(str, Enum):
    WEEK_TO_DATE = "WeekToDate"
    MONTH_TO_DATE = "MonthToDate"
    YEAR_TO_DATE = "YearToDate"
    CUSTOM = "Custom"


class ReportType(str, Enum):
    USAGE = "Usage"


class ScheduleFrequency(str, Enum):
    DAILY = "Daily"
    """
    Cost analysis data will be emailed every day.
    """
    WEEKLY = "Weekly"
    """
    Cost analysis data will be emailed every week.
    """
    MONTHLY = "Monthly"
    """
    Cost analysis data will be emailed every month.
    """


class ScheduledActionKind(str, Enum):
    EMAIL = "Email"
    """
    Cost analysis data will be emailed.
    """
    INSIGHT_ALERT = "InsightAlert"
    """
    Cost anomaly information will be emailed. Available only on subscription scope at daily frequency. If no anomaly is detected on the resource, an email won't be sent.
    """


class ScheduledActionStatus(str, Enum):
    DISABLED = "Disabled"
    """
    Scheduled action is saved but will not be run.
    """
    ENABLED = "Enabled"
    """
    Scheduled action is saved and will be run.
    """
    EXPIRED = "Expired"
    """
    Scheduled action is expired.
    """


class StatusType(str, Enum):
    ACTIVE = "Active"
    INACTIVE = "Inactive"


class TimeframeType(str, Enum):
    MONTH_TO_DATE = "MonthToDate"
    BILLING_MONTH_TO_DATE = "BillingMonthToDate"
    THE_LAST_MONTH = "TheLastMonth"
    THE_LAST_BILLING_MONTH = "TheLastBillingMonth"
    WEEK_TO_DATE = "WeekToDate"
    CUSTOM = "Custom"


class WeeksOfMonth(str, Enum):
    FIRST = "First"
    SECOND = "Second"
    THIRD = "Third"
    FOURTH = "Fourth"
    LAST = "Last"
