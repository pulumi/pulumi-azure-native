// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

export function getSerialPort(args: GetSerialPortArgs, opts?: pulumi.InvokeOptions): Promise<GetSerialPortResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:serialconsole:getSerialPort", {
        "parentResource": args.parentResource,
        "parentResourceType": args.parentResourceType,
        "resourceGroupName": args.resourceGroupName,
        "resourceProviderNamespace": args.resourceProviderNamespace,
        "serialPort": args.serialPort,
    }, opts);
}

export interface GetSerialPortArgs {
    /**
     * The resource name, or subordinate path, for the parent of the serial port. For example: the name of the virtual machine.
     */
    readonly parentResource: string;
    /**
     * The resource type of the parent resource.  For example: 'virtualMachines' or 'virtualMachineScaleSets'
     */
    readonly parentResourceType: string;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: string;
    /**
     * The namespace of the resource provider.
     */
    readonly resourceProviderNamespace: string;
    /**
     * The name of the serial port to connect to.
     */
    readonly serialPort: string;
}

/**
 * Represents the serial port of the parent resource.
 */
export interface GetSerialPortResult {
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Specifies whether the port is enabled for a serial console connection.
     */
    readonly state?: string;
    /**
     * Resource type
     */
    readonly type: string;
}
