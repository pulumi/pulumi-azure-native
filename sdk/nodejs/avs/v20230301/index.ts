// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AddonArgs } from "./addon";
export type Addon = import("./addon").Addon;
export const Addon: typeof import("./addon").Addon = null as any;
utilities.lazyLoad(exports, ["Addon"], () => require("./addon"));

export { GetAddonArgs, GetAddonResult, GetAddonOutputArgs } from "./getAddon";
export const getAddon: typeof import("./getAddon").getAddon = null as any;
export const getAddonOutput: typeof import("./getAddon").getAddonOutput = null as any;
utilities.lazyLoad(exports, ["getAddon","getAddonOutput"], () => require("./getAddon"));

export { GetPlacementPolicyArgs, GetPlacementPolicyResult, GetPlacementPolicyOutputArgs } from "./getPlacementPolicy";
export const getPlacementPolicy: typeof import("./getPlacementPolicy").getPlacementPolicy = null as any;
export const getPlacementPolicyOutput: typeof import("./getPlacementPolicy").getPlacementPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getPlacementPolicy","getPlacementPolicyOutput"], () => require("./getPlacementPolicy"));

export { GetPrivateCloudArgs, GetPrivateCloudResult, GetPrivateCloudOutputArgs } from "./getPrivateCloud";
export const getPrivateCloud: typeof import("./getPrivateCloud").getPrivateCloud = null as any;
export const getPrivateCloudOutput: typeof import("./getPrivateCloud").getPrivateCloudOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateCloud","getPrivateCloudOutput"], () => require("./getPrivateCloud"));

export { GetWorkloadNetworkDhcpArgs, GetWorkloadNetworkDhcpResult, GetWorkloadNetworkDhcpOutputArgs } from "./getWorkloadNetworkDhcp";
export const getWorkloadNetworkDhcp: typeof import("./getWorkloadNetworkDhcp").getWorkloadNetworkDhcp = null as any;
export const getWorkloadNetworkDhcpOutput: typeof import("./getWorkloadNetworkDhcp").getWorkloadNetworkDhcpOutput = null as any;
utilities.lazyLoad(exports, ["getWorkloadNetworkDhcp","getWorkloadNetworkDhcpOutput"], () => require("./getWorkloadNetworkDhcp"));

export { ListPrivateCloudAdminCredentialsArgs, ListPrivateCloudAdminCredentialsResult, ListPrivateCloudAdminCredentialsOutputArgs } from "./listPrivateCloudAdminCredentials";
export const listPrivateCloudAdminCredentials: typeof import("./listPrivateCloudAdminCredentials").listPrivateCloudAdminCredentials = null as any;
export const listPrivateCloudAdminCredentialsOutput: typeof import("./listPrivateCloudAdminCredentials").listPrivateCloudAdminCredentialsOutput = null as any;
utilities.lazyLoad(exports, ["listPrivateCloudAdminCredentials","listPrivateCloudAdminCredentialsOutput"], () => require("./listPrivateCloudAdminCredentials"));

export { PlacementPolicyArgs } from "./placementPolicy";
export type PlacementPolicy = import("./placementPolicy").PlacementPolicy;
export const PlacementPolicy: typeof import("./placementPolicy").PlacementPolicy = null as any;
utilities.lazyLoad(exports, ["PlacementPolicy"], () => require("./placementPolicy"));

export { PrivateCloudArgs } from "./privateCloud";
export type PrivateCloud = import("./privateCloud").PrivateCloud;
export const PrivateCloud: typeof import("./privateCloud").PrivateCloud = null as any;
utilities.lazyLoad(exports, ["PrivateCloud"], () => require("./privateCloud"));

export { WorkloadNetworkDhcpArgs } from "./workloadNetworkDhcp";
export type WorkloadNetworkDhcp = import("./workloadNetworkDhcp").WorkloadNetworkDhcp;
export const WorkloadNetworkDhcp: typeof import("./workloadNetworkDhcp").WorkloadNetworkDhcp = null as any;
utilities.lazyLoad(exports, ["WorkloadNetworkDhcp"], () => require("./workloadNetworkDhcp"));


// Export enums:
export * from "../../types/enums/avs/v20230301";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:avs/v20230301:Addon":
                return new Addon(name, <any>undefined, { urn })
            case "azure-native:avs/v20230301:PlacementPolicy":
                return new PlacementPolicy(name, <any>undefined, { urn })
            case "azure-native:avs/v20230301:PrivateCloud":
                return new PrivateCloud(name, <any>undefined, { urn })
            case "azure-native:avs/v20230301:WorkloadNetworkDhcp":
                return new WorkloadNetworkDhcp(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "avs/v20230301", _module)
