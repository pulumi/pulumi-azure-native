// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetPlacementPolicyArgs, GetPlacementPolicyResult, GetPlacementPolicyOutputArgs } from "./getPlacementPolicy";
export const getPlacementPolicy: typeof import("./getPlacementPolicy").getPlacementPolicy = null as any;
export const getPlacementPolicyOutput: typeof import("./getPlacementPolicy").getPlacementPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getPlacementPolicy","getPlacementPolicyOutput"], () => require("./getPlacementPolicy"));

export { PlacementPolicyArgs } from "./placementPolicy";
export type PlacementPolicy = import("./placementPolicy").PlacementPolicy;
export const PlacementPolicy: typeof import("./placementPolicy").PlacementPolicy = null as any;
utilities.lazyLoad(exports, ["PlacementPolicy"], () => require("./placementPolicy"));


// Export enums:
export * from "../../types/enums/avs/v20211201";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:avs/v20211201:PlacementPolicy":
                return new PlacementPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "avs/v20211201", _module)
