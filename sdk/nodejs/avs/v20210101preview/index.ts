// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./addon";
export * from "./authorization";
export * from "./cluster";
export * from "./datastore";
export * from "./getAddon";
export * from "./getAuthorization";
export * from "./getCluster";
export * from "./getDatastore";
export * from "./getGlobalReachConnection";
export * from "./getHcxEnterpriseSite";
export * from "./getPrivateCloud";
export * from "./getWorkloadNetworkDhcp";
export * from "./getWorkloadNetworkDnsService";
export * from "./getWorkloadNetworkDnsZone";
export * from "./getWorkloadNetworkPortMirroring";
export * from "./getWorkloadNetworkSegment";
export * from "./getWorkloadNetworkVMGroup";
export * from "./globalReachConnection";
export * from "./hcxEnterpriseSite";
export * from "./listPrivateCloudAdminCredentials";
export * from "./privateCloud";
export * from "./workloadNetworkDhcp";
export * from "./workloadNetworkDnsService";
export * from "./workloadNetworkDnsZone";
export * from "./workloadNetworkPortMirroring";
export * from "./workloadNetworkSegment";
export * from "./workloadNetworkVMGroup";

// Export enums:
export * from "../../types/enums/avs/v20210101preview";

// Import resources to register:
import { Addon } from "./addon";
import { Authorization } from "./authorization";
import { Cluster } from "./cluster";
import { Datastore } from "./datastore";
import { GlobalReachConnection } from "./globalReachConnection";
import { HcxEnterpriseSite } from "./hcxEnterpriseSite";
import { PrivateCloud } from "./privateCloud";
import { WorkloadNetworkDhcp } from "./workloadNetworkDhcp";
import { WorkloadNetworkDnsService } from "./workloadNetworkDnsService";
import { WorkloadNetworkDnsZone } from "./workloadNetworkDnsZone";
import { WorkloadNetworkPortMirroring } from "./workloadNetworkPortMirroring";
import { WorkloadNetworkSegment } from "./workloadNetworkSegment";
import { WorkloadNetworkVMGroup } from "./workloadNetworkVMGroup";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:avs/v20210101preview:Addon":
                return new Addon(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:Authorization":
                return new Authorization(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:Datastore":
                return new Datastore(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:GlobalReachConnection":
                return new GlobalReachConnection(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:HcxEnterpriseSite":
                return new HcxEnterpriseSite(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:PrivateCloud":
                return new PrivateCloud(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:WorkloadNetworkDhcp":
                return new WorkloadNetworkDhcp(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:WorkloadNetworkDnsService":
                return new WorkloadNetworkDnsService(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:WorkloadNetworkDnsZone":
                return new WorkloadNetworkDnsZone(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:WorkloadNetworkPortMirroring":
                return new WorkloadNetworkPortMirroring(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:WorkloadNetworkSegment":
                return new WorkloadNetworkSegment(name, <any>undefined, { urn })
            case "azure-nextgen:avs/v20210101preview:WorkloadNetworkVMGroup":
                return new WorkloadNetworkVMGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "avs/v20210101preview", _module)
