// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Class representing a Kusto cluster.
 *
 * Uses Azure REST API version 2024-04-13. In version 2.x of the Azure Native provider, it used API version 2022-12-29.
 *
 * Other available API versions: 2018-09-07-preview, 2019-01-21, 2019-05-15, 2019-09-07, 2019-11-09, 2020-02-15, 2020-06-14, 2020-09-18, 2021-01-01, 2021-08-27, 2022-02-01, 2022-07-07, 2022-11-11, 2022-12-29, 2023-05-02, 2023-08-15. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native kusto [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:kusto:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * The cluster's accepted audiences.
     */
    declare public readonly acceptedAudiences: pulumi.Output<outputs.kusto.AcceptedAudiencesResponse[] | undefined>;
    /**
     * List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.
     */
    declare public readonly allowedFqdnList: pulumi.Output<string[] | undefined>;
    /**
     * The list of ips in the format of CIDR allowed to connect to the cluster.
     */
    declare public readonly allowedIpRangeList: pulumi.Output<string[] | undefined>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * List of callout policies for egress from Cluster.
     */
    declare public readonly calloutPolicies: pulumi.Output<outputs.kusto.CalloutPolicyResponse[] | undefined>;
    /**
     * The cluster data ingestion URI.
     */
    declare public /*out*/ readonly dataIngestionUri: pulumi.Output<string>;
    /**
     * A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).
     */
    declare public readonly enableAutoStop: pulumi.Output<boolean | undefined>;
    /**
     * A boolean value that indicates if the cluster's disks are encrypted.
     */
    declare public readonly enableDiskEncryption: pulumi.Output<boolean | undefined>;
    /**
     * A boolean value that indicates if double encryption is enabled.
     */
    declare public readonly enableDoubleEncryption: pulumi.Output<boolean | undefined>;
    /**
     * A boolean value that indicates if the purge operations are enabled.
     */
    declare public readonly enablePurge: pulumi.Output<boolean | undefined>;
    /**
     * A boolean value that indicates if the streaming ingest is enabled.
     */
    declare public readonly enableStreamingIngest: pulumi.Output<boolean | undefined>;
    /**
     * The engine type
     */
    declare public readonly engineType: pulumi.Output<string | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    declare public /*out*/ readonly etag: pulumi.Output<string>;
    /**
     * The identity of the cluster, if configured.
     */
    declare public readonly identity: pulumi.Output<outputs.kusto.IdentityResponse | undefined>;
    /**
     * KeyVault properties for the cluster encryption.
     */
    declare public readonly keyVaultProperties: pulumi.Output<outputs.kusto.KeyVaultPropertiesResponse | undefined>;
    /**
     * List of the cluster's language extensions.
     */
    declare public readonly languageExtensions: pulumi.Output<outputs.kusto.LanguageExtensionsListResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Properties of the peer cluster involved in a migration to/from this cluster.
     */
    declare public /*out*/ readonly migrationCluster: pulumi.Output<outputs.kusto.MigrationClusterPropertiesResponse>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Optimized auto scale definition.
     */
    declare public readonly optimizedAutoscale: pulumi.Output<outputs.kusto.OptimizedAutoscaleResponse | undefined>;
    /**
     * A list of private endpoint connections.
     */
    declare public /*out*/ readonly privateEndpointConnections: pulumi.Output<outputs.kusto.PrivateEndpointConnectionResponse[]>;
    /**
     * The provisioned state of the resource.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)
     */
    declare public readonly publicIPType: pulumi.Output<string | undefined>;
    /**
     * Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed
     */
    declare public readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
     */
    declare public readonly restrictOutboundNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * The SKU of the cluster.
     */
    declare public readonly sku: pulumi.Output<outputs.kusto.AzureSkuResponse>;
    /**
     * The state of the resource.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The reason for the cluster's current state.
     */
    declare public /*out*/ readonly stateReason: pulumi.Output<string>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.kusto.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The cluster's external tenants.
     */
    declare public readonly trustedExternalTenants: pulumi.Output<outputs.kusto.TrustedExternalTenantResponse[] | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * The cluster URI.
     */
    declare public /*out*/ readonly uri: pulumi.Output<string>;
    /**
     * Virtual network definition.
     */
    declare public readonly virtualNetworkConfiguration: pulumi.Output<outputs.kusto.VirtualNetworkConfigurationResponse | undefined>;
    /**
     * Indicates whether the cluster is zonal or non-zonal.
     */
    declare public /*out*/ readonly zoneStatus: pulumi.Output<string>;
    /**
     * The availability zones of the cluster.
     */
    declare public readonly zones: pulumi.Output<string[] | undefined>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.sku === undefined && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["acceptedAudiences"] = args?.acceptedAudiences;
            resourceInputs["allowedFqdnList"] = args?.allowedFqdnList;
            resourceInputs["allowedIpRangeList"] = args?.allowedIpRangeList;
            resourceInputs["calloutPolicies"] = args?.calloutPolicies;
            resourceInputs["clusterName"] = args?.clusterName;
            resourceInputs["enableAutoStop"] = (args?.enableAutoStop) ?? true;
            resourceInputs["enableDiskEncryption"] = (args?.enableDiskEncryption) ?? false;
            resourceInputs["enableDoubleEncryption"] = (args?.enableDoubleEncryption) ?? false;
            resourceInputs["enablePurge"] = (args?.enablePurge) ?? false;
            resourceInputs["enableStreamingIngest"] = (args?.enableStreamingIngest) ?? false;
            resourceInputs["engineType"] = (args?.engineType) ?? "V3";
            resourceInputs["identity"] = args?.identity;
            resourceInputs["keyVaultProperties"] = args?.keyVaultProperties;
            resourceInputs["languageExtensions"] = args?.languageExtensions;
            resourceInputs["location"] = args?.location;
            resourceInputs["optimizedAutoscale"] = args?.optimizedAutoscale;
            resourceInputs["publicIPType"] = (args?.publicIPType) ?? "IPv4";
            resourceInputs["publicNetworkAccess"] = (args?.publicNetworkAccess) ?? "Enabled";
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["restrictOutboundNetworkAccess"] = (args?.restrictOutboundNetworkAccess) ?? "Disabled";
            resourceInputs["sku"] = args?.sku;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["trustedExternalTenants"] = args?.trustedExternalTenants;
            resourceInputs["virtualClusterGraduationProperties"] = args?.virtualClusterGraduationProperties;
            resourceInputs["virtualNetworkConfiguration"] = args ? (args.virtualNetworkConfiguration ? pulumi.output(args.virtualNetworkConfiguration).apply(inputs.kusto.virtualNetworkConfigurationArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["zones"] = args?.zones;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["dataIngestionUri"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["migrationCluster"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["privateEndpointConnections"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateReason"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uri"] = undefined /*out*/;
            resourceInputs["zoneStatus"] = undefined /*out*/;
        } else {
            resourceInputs["acceptedAudiences"] = undefined /*out*/;
            resourceInputs["allowedFqdnList"] = undefined /*out*/;
            resourceInputs["allowedIpRangeList"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["calloutPolicies"] = undefined /*out*/;
            resourceInputs["dataIngestionUri"] = undefined /*out*/;
            resourceInputs["enableAutoStop"] = undefined /*out*/;
            resourceInputs["enableDiskEncryption"] = undefined /*out*/;
            resourceInputs["enableDoubleEncryption"] = undefined /*out*/;
            resourceInputs["enablePurge"] = undefined /*out*/;
            resourceInputs["enableStreamingIngest"] = undefined /*out*/;
            resourceInputs["engineType"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["keyVaultProperties"] = undefined /*out*/;
            resourceInputs["languageExtensions"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["migrationCluster"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["optimizedAutoscale"] = undefined /*out*/;
            resourceInputs["privateEndpointConnections"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["publicIPType"] = undefined /*out*/;
            resourceInputs["publicNetworkAccess"] = undefined /*out*/;
            resourceInputs["restrictOutboundNetworkAccess"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateReason"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["trustedExternalTenants"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uri"] = undefined /*out*/;
            resourceInputs["virtualNetworkConfiguration"] = undefined /*out*/;
            resourceInputs["zoneStatus"] = undefined /*out*/;
            resourceInputs["zones"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:kusto/v20170907privatepreview:Cluster" }, { type: "azure-native:kusto/v20180907preview:Cluster" }, { type: "azure-native:kusto/v20190121:Cluster" }, { type: "azure-native:kusto/v20190515:Cluster" }, { type: "azure-native:kusto/v20190907:Cluster" }, { type: "azure-native:kusto/v20191109:Cluster" }, { type: "azure-native:kusto/v20200215:Cluster" }, { type: "azure-native:kusto/v20200614:Cluster" }, { type: "azure-native:kusto/v20200918:Cluster" }, { type: "azure-native:kusto/v20210101:Cluster" }, { type: "azure-native:kusto/v20210827:Cluster" }, { type: "azure-native:kusto/v20220201:Cluster" }, { type: "azure-native:kusto/v20220707:Cluster" }, { type: "azure-native:kusto/v20221111:Cluster" }, { type: "azure-native:kusto/v20221229:Cluster" }, { type: "azure-native:kusto/v20230502:Cluster" }, { type: "azure-native:kusto/v20230815:Cluster" }, { type: "azure-native:kusto/v20240413:Cluster" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * The cluster's accepted audiences.
     */
    acceptedAudiences?: pulumi.Input<pulumi.Input<inputs.kusto.AcceptedAudiencesArgs>[]>;
    /**
     * List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.
     */
    allowedFqdnList?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of ips in the format of CIDR allowed to connect to the cluster.
     */
    allowedIpRangeList?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of callout policies for egress from Cluster.
     */
    calloutPolicies?: pulumi.Input<pulumi.Input<inputs.kusto.CalloutPolicyArgs>[]>;
    /**
     * The name of the Kusto cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).
     */
    enableAutoStop?: pulumi.Input<boolean>;
    /**
     * A boolean value that indicates if the cluster's disks are encrypted.
     */
    enableDiskEncryption?: pulumi.Input<boolean>;
    /**
     * A boolean value that indicates if double encryption is enabled.
     */
    enableDoubleEncryption?: pulumi.Input<boolean>;
    /**
     * A boolean value that indicates if the purge operations are enabled.
     */
    enablePurge?: pulumi.Input<boolean>;
    /**
     * A boolean value that indicates if the streaming ingest is enabled.
     */
    enableStreamingIngest?: pulumi.Input<boolean>;
    /**
     * The engine type
     */
    engineType?: pulumi.Input<string | enums.kusto.EngineType>;
    /**
     * The identity of the cluster, if configured.
     */
    identity?: pulumi.Input<inputs.kusto.IdentityArgs>;
    /**
     * KeyVault properties for the cluster encryption.
     */
    keyVaultProperties?: pulumi.Input<inputs.kusto.KeyVaultPropertiesArgs>;
    /**
     * List of the cluster's language extensions.
     */
    languageExtensions?: pulumi.Input<inputs.kusto.LanguageExtensionsListArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Optimized auto scale definition.
     */
    optimizedAutoscale?: pulumi.Input<inputs.kusto.OptimizedAutoscaleArgs>;
    /**
     * Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)
     */
    publicIPType?: pulumi.Input<string | enums.kusto.PublicIPType>;
    /**
     * Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed
     */
    publicNetworkAccess?: pulumi.Input<string | enums.kusto.PublicNetworkAccess>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
     */
    restrictOutboundNetworkAccess?: pulumi.Input<string | enums.kusto.ClusterNetworkAccessFlag>;
    /**
     * The SKU of the cluster.
     */
    sku: pulumi.Input<inputs.kusto.AzureSkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The cluster's external tenants.
     */
    trustedExternalTenants?: pulumi.Input<pulumi.Input<inputs.kusto.TrustedExternalTenantArgs>[]>;
    /**
     * Virtual Cluster graduation properties
     */
    virtualClusterGraduationProperties?: pulumi.Input<string>;
    /**
     * Virtual network definition.
     */
    virtualNetworkConfiguration?: pulumi.Input<inputs.kusto.VirtualNetworkConfigurationArgs>;
    /**
     * The availability zones of the cluster.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
