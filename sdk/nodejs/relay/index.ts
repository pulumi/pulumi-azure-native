// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getHybridConnection";
export * from "./getHybridConnectionAuthorizationRule";
export * from "./getNamespace";
export * from "./getNamespaceAuthorizationRule";
export * from "./getPrivateEndpointConnection";
export * from "./getWCFRelay";
export * from "./getWCFRelayAuthorizationRule";
export * from "./hybridConnection";
export * from "./hybridConnectionAuthorizationRule";
export * from "./listHybridConnectionKeys";
export * from "./listNamespaceKeys";
export * from "./listWCFRelayKeys";
export * from "./namespace";
export * from "./namespaceAuthorizationRule";
export * from "./privateEndpointConnection";
export * from "./wcfrelay";
export * from "./wcfrelayAuthorizationRule";

// Export enums:
export * from "../types/enums/relay";

// Export sub-modules:
import * as latest from "./latest";
import * as v20160701 from "./v20160701";
import * as v20170401 from "./v20170401";
import * as v20180101preview from "./v20180101preview";

export {
    latest,
    v20160701,
    v20170401,
    v20180101preview,
};

// Import resources to register:
import { HybridConnection } from "./hybridConnection";
import { HybridConnectionAuthorizationRule } from "./hybridConnectionAuthorizationRule";
import { Namespace } from "./namespace";
import { NamespaceAuthorizationRule } from "./namespaceAuthorizationRule";
import { PrivateEndpointConnection } from "./privateEndpointConnection";
import { WCFRelay } from "./wcfrelay";
import { WCFRelayAuthorizationRule } from "./wcfrelayAuthorizationRule";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:relay:HybridConnection":
                return new HybridConnection(name, <any>undefined, { urn })
            case "azure-nextgen:relay:HybridConnectionAuthorizationRule":
                return new HybridConnectionAuthorizationRule(name, <any>undefined, { urn })
            case "azure-nextgen:relay:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            case "azure-nextgen:relay:NamespaceAuthorizationRule":
                return new NamespaceAuthorizationRule(name, <any>undefined, { urn })
            case "azure-nextgen:relay:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-nextgen:relay:WCFRelay":
                return new WCFRelay(name, <any>undefined, { urn })
            case "azure-nextgen:relay:WCFRelayAuthorizationRule":
                return new WCFRelayAuthorizationRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "relay", _module)
