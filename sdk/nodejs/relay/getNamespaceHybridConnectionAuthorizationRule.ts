// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getNamespaceHybridConnectionAuthorizationRule(args: GetNamespaceHybridConnectionAuthorizationRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceHybridConnectionAuthorizationRuleResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azurerm:relay:getNamespaceHybridConnectionAuthorizationRule", {
        "hybridConnectionName": args.hybridConnectionName,
        "name": args.name,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetNamespaceHybridConnectionAuthorizationRuleArgs {
    /**
     * The hybrid connection name.
     */
    readonly hybridConnectionName: string;
    /**
     * The authorization rule name.
     */
    readonly name: string;
    /**
     * The namespace name
     */
    readonly namespaceName: string;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    readonly resourceGroupName: string;
}

/**
 * Description of a namespace authorization rule.
 */
export interface GetNamespaceHybridConnectionAuthorizationRuleResult {
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Authorization rule properties.
     */
    readonly properties: outputs.relay.AuthorizationRuleResponseProperties;
    /**
     * Resource type.
     */
    readonly type: string;
}
