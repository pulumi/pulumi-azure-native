// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Description of HybridConnection Resource.
 */
/** @deprecated Version v20160701 will be removed in the next major version of the provider. Upgrade to version v20211101 or later. */
export function getHybridConnection(args: GetHybridConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetHybridConnectionResult> {
    pulumi.log.warn("getHybridConnection is deprecated: Version v20160701 will be removed in the next major version of the provider. Upgrade to version v20211101 or later.")
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:relay/v20160701:getHybridConnection", {
        "hybridConnectionName": args.hybridConnectionName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetHybridConnectionArgs {
    /**
     * The hybrid connection name.
     */
    hybridConnectionName: string;
    /**
     * The Namespace Name
     */
    namespaceName: string;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: string;
}

/**
 * Description of HybridConnection Resource.
 */
export interface GetHybridConnectionResult {
    /**
     * The time the HybridConnection was created.
     */
    readonly createdAt: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * The number of listeners for this HybridConnection. min : 1 and max:25 supported
     */
    readonly listenerCount: number;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * true if client authorization is needed for this HybridConnection; otherwise, false.
     */
    readonly requiresClientAuthorization?: boolean;
    /**
     * Resource type
     */
    readonly type: string;
    /**
     * The time the namespace was updated.
     */
    readonly updatedAt: string;
    /**
     * usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
     */
    readonly userMetadata?: string;
}

export function getHybridConnectionOutput(args: GetHybridConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHybridConnectionResult> {
    return pulumi.output(args).apply(a => getHybridConnection(a, opts))
}

export interface GetHybridConnectionOutputArgs {
    /**
     * The hybrid connection name.
     */
    hybridConnectionName: pulumi.Input<string>;
    /**
     * The Namespace Name
     */
    namespaceName: pulumi.Input<string>;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
}
