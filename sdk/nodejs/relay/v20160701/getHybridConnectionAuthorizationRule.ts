// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * HybridConnection authorizationRule for a HybridConnection by name.
 */
/** @deprecated Version 2016-07-01 will be removed in v2 of the provider. */
export function getHybridConnectionAuthorizationRule(args: GetHybridConnectionAuthorizationRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetHybridConnectionAuthorizationRuleResult> {
    pulumi.log.warn("getHybridConnectionAuthorizationRule is deprecated: Version 2016-07-01 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:relay/v20160701:getHybridConnectionAuthorizationRule", {
        "authorizationRuleName": args.authorizationRuleName,
        "hybridConnectionName": args.hybridConnectionName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetHybridConnectionAuthorizationRuleArgs {
    /**
     * The authorizationRule name.
     */
    authorizationRuleName: string;
    /**
     * The hybrid connection name.
     */
    hybridConnectionName: string;
    /**
     * The Namespace Name
     */
    namespaceName: string;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: string;
}

/**
 * Description of a Namespace AuthorizationRules.
 */
export interface GetHybridConnectionAuthorizationRuleResult {
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * The rights associated with the rule.
     */
    readonly rights: string[];
    /**
     * Resource type
     */
    readonly type: string;
}
/**
 * HybridConnection authorizationRule for a HybridConnection by name.
 */
/** @deprecated Version 2016-07-01 will be removed in v2 of the provider. */
export function getHybridConnectionAuthorizationRuleOutput(args: GetHybridConnectionAuthorizationRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHybridConnectionAuthorizationRuleResult> {
    return pulumi.output(args).apply((a: any) => getHybridConnectionAuthorizationRule(a, opts))
}

export interface GetHybridConnectionAuthorizationRuleOutputArgs {
    /**
     * The authorizationRule name.
     */
    authorizationRuleName: pulumi.Input<string>;
    /**
     * The hybrid connection name.
     */
    hybridConnectionName: pulumi.Input<string>;
    /**
     * The Namespace Name
     */
    namespaceName: pulumi.Input<string>;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
}
