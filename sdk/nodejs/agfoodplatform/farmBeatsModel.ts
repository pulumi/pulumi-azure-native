// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * FarmBeats ARM Resource.
 * Azure REST API version: 2021-09-01-preview. Prior API version in Azure Native 1.x: 2020-05-12-preview
 */
export class FarmBeatsModel extends pulumi.CustomResource {
    /**
     * Get an existing FarmBeatsModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FarmBeatsModel {
        return new FarmBeatsModel(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:agfoodplatform:FarmBeatsModel';

    /**
     * Returns true if the given object is an instance of FarmBeatsModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FarmBeatsModel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FarmBeatsModel.__pulumiType;
    }

    /**
     * Identity for the resource.
     */
    public readonly identity!: pulumi.Output<outputs.agfoodplatform.IdentityResponse | undefined>;
    /**
     * Uri of the FarmBeats instance.
     */
    public /*out*/ readonly instanceUri!: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The private endpoint connection resource.
     */
    public /*out*/ readonly privateEndpointConnections!: pulumi.Output<outputs.agfoodplatform.PrivateEndpointConnectionResponse>;
    /**
     * FarmBeats instance provisioning state.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Property to allow or block public traffic for an Azure FarmBeats resource.
     */
    public readonly publicNetworkAccess!: pulumi.Output<string | undefined>;
    /**
     * Sensor integration request model.
     */
    public readonly sensorIntegration!: pulumi.Output<outputs.agfoodplatform.SensorIntegrationResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.agfoodplatform.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a FarmBeatsModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FarmBeatsModelArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["farmBeatsResourceName"] = args ? args.farmBeatsResourceName : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["publicNetworkAccess"] = args ? args.publicNetworkAccess : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sensorIntegration"] = args ? args.sensorIntegration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["instanceUri"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["privateEndpointConnections"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["instanceUri"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["privateEndpointConnections"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["publicNetworkAccess"] = undefined /*out*/;
            resourceInputs["sensorIntegration"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:agfoodplatform/v20200512preview:FarmBeatsModel" }, { type: "azure-native:agfoodplatform/v20210901preview:FarmBeatsModel" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(FarmBeatsModel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a FarmBeatsModel resource.
 */
export interface FarmBeatsModelArgs {
    /**
     * FarmBeats resource name.
     */
    farmBeatsResourceName?: pulumi.Input<string>;
    /**
     * Identity for the resource.
     */
    identity?: pulumi.Input<inputs.agfoodplatform.IdentityArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Property to allow or block public traffic for an Azure FarmBeats resource.
     */
    publicNetworkAccess?: pulumi.Input<string | enums.agfoodplatform.PublicNetworkAccess>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Sensor integration request model.
     */
    sensorIntegration?: pulumi.Input<inputs.agfoodplatform.SensorIntegrationArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
