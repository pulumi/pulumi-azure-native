// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Contains information about an Azure Batch account.
 *
 * @deprecated Version 2017-05-01 will be removed in v2 of the provider.
 */
export class BatchAccount extends pulumi.CustomResource {
    /**
     * Get an existing BatchAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BatchAccount {
        pulumi.log.warn("BatchAccount is deprecated: Version 2017-05-01 will be removed in v2 of the provider.")
        return new BatchAccount(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:batch/v20170501:BatchAccount';

    /**
     * Returns true if the given object is an instance of BatchAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BatchAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BatchAccount.__pulumiType;
    }

    /**
     * The account endpoint used to interact with the Batch service.
     */
    public /*out*/ readonly accountEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly activeJobAndJobScheduleQuota!: pulumi.Output<number>;
    /**
     * Contains information about the auto-storage account associated with a Batch account.
     */
    public readonly autoStorage!: pulumi.Output<outputs.batch.v20170501.AutoStoragePropertiesResponse>;
    public /*out*/ readonly dedicatedCoreQuota!: pulumi.Output<number>;
    /**
     * Identifies the Azure key vault associated with a Batch account.
     */
    public readonly keyVaultReference!: pulumi.Output<outputs.batch.v20170501.KeyVaultReferenceResponse>;
    /**
     * The location of the resource.
     */
    public readonly location!: pulumi.Output<string>;
    public /*out*/ readonly lowPriorityCoreQuota!: pulumi.Output<number>;
    /**
     * The name of the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The allocation mode for creating pools in the Batch account.
     */
    public readonly poolAllocationMode!: pulumi.Output<string>;
    public /*out*/ readonly poolQuota!: pulumi.Output<number>;
    /**
     * The provisioned state of the resource
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The tags of the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The type of the resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a BatchAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2017-05-01 will be removed in v2 of the provider. */
    constructor(name: string, args: BatchAccountArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("BatchAccount is deprecated: Version 2017-05-01 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["autoStorage"] = args ? args.autoStorage : undefined;
            resourceInputs["keyVaultReference"] = args ? args.keyVaultReference : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["poolAllocationMode"] = args ? args.poolAllocationMode : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["accountEndpoint"] = undefined /*out*/;
            resourceInputs["activeJobAndJobScheduleQuota"] = undefined /*out*/;
            resourceInputs["dedicatedCoreQuota"] = undefined /*out*/;
            resourceInputs["lowPriorityCoreQuota"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["poolQuota"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["accountEndpoint"] = undefined /*out*/;
            resourceInputs["activeJobAndJobScheduleQuota"] = undefined /*out*/;
            resourceInputs["autoStorage"] = undefined /*out*/;
            resourceInputs["dedicatedCoreQuota"] = undefined /*out*/;
            resourceInputs["keyVaultReference"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["lowPriorityCoreQuota"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["poolAllocationMode"] = undefined /*out*/;
            resourceInputs["poolQuota"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:batch:BatchAccount" }, { type: "azure-native:batch/v20151201:BatchAccount" }, { type: "azure-native:batch/v20170101:BatchAccount" }, { type: "azure-native:batch/v20170901:BatchAccount" }, { type: "azure-native:batch/v20181201:BatchAccount" }, { type: "azure-native:batch/v20190401:BatchAccount" }, { type: "azure-native:batch/v20190801:BatchAccount" }, { type: "azure-native:batch/v20200301:BatchAccount" }, { type: "azure-native:batch/v20200501:BatchAccount" }, { type: "azure-native:batch/v20200901:BatchAccount" }, { type: "azure-native:batch/v20210101:BatchAccount" }, { type: "azure-native:batch/v20210601:BatchAccount" }, { type: "azure-native:batch/v20220101:BatchAccount" }, { type: "azure-native:batch/v20220601:BatchAccount" }, { type: "azure-native:batch/v20221001:BatchAccount" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(BatchAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a BatchAccount resource.
 */
export interface BatchAccountArgs {
    /**
     * A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The properties related to the auto-storage account.
     */
    autoStorage?: pulumi.Input<inputs.batch.v20170501.AutoStorageBasePropertiesArgs>;
    /**
     * A reference to the Azure key vault associated with the Batch account.
     */
    keyVaultReference?: pulumi.Input<inputs.batch.v20170501.KeyVaultReferenceArgs>;
    /**
     * The region in which to create the account.
     */
    location?: pulumi.Input<string>;
    /**
     * The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
     */
    poolAllocationMode?: pulumi.Input<enums.batch.v20170501.PoolAllocationMode>;
    /**
     * The name of the resource group that contains the Batch account.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The user-specified tags associated with the account.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
