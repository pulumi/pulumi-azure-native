// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The job definition resource.
 * API Version: 2022-07-01-preview.
 */
export function getJobDefinition(args: GetJobDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetJobDefinitionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:storagemover:getJobDefinition", {
        "jobDefinitionName": args.jobDefinitionName,
        "projectName": args.projectName,
        "resourceGroupName": args.resourceGroupName,
        "storageMoverName": args.storageMoverName,
    }, opts);
}

export interface GetJobDefinitionArgs {
    /**
     * The name of the job definition resource.
     */
    jobDefinitionName: string;
    /**
     * The name of the project resource.
     */
    projectName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the Storage Mover resource.
     */
    storageMoverName: string;
}

/**
 * The job definition resource.
 */
export interface GetJobDefinitionResult {
    /**
     * Name of the agent to assign for new job runs of this definition.
     */
    readonly agentName?: string;
    /**
     * Fully qualified resource id of the agent to assign for new job runs of this definition.
     */
    readonly agentResourceId: string;
    /**
     * Strategy to use for copy.
     */
    readonly copyMode?: string;
    /**
     * A description for the job definition.
     */
    readonly description?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the job run in a non-terminal state, if exists.
     */
    readonly latestJobRunName: string;
    /**
     * The fully qualified resource ID of the job run in a non-terminal state, if exists.
     */
    readonly latestJobRunResourceId: string;
    /**
     * The current status of the job run in a non-terminal state, if exists.
     */
    readonly latestJobRunStatus: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The provisioning state of this resource.
     */
    readonly provisioningState: string;
    /**
     * The name of the source endpoint.
     */
    readonly sourceName: string;
    /**
     * Fully qualified resource ID of the source endpoint.
     */
    readonly sourceResourceId: string;
    /**
     * The subpath to use when reading from the source Endpoint.
     */
    readonly sourceSubpath?: string;
    /**
     * Resource system metadata.
     */
    readonly systemData: outputs.storagemover.SystemDataResponse;
    /**
     * The name of the target endpoint.
     */
    readonly targetName: string;
    /**
     * Fully qualified resource ID of the target endpoint.
     */
    readonly targetResourceId: string;
    /**
     * The subpath to use when writing to the target Endpoint.
     */
    readonly targetSubpath?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}

export function getJobDefinitionOutput(args: GetJobDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJobDefinitionResult> {
    return pulumi.output(args).apply(a => getJobDefinition(a, opts))
}

export interface GetJobDefinitionOutputArgs {
    /**
     * The name of the job definition resource.
     */
    jobDefinitionName: pulumi.Input<string>;
    /**
     * The name of the project resource.
     */
    projectName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Storage Mover resource.
     */
    storageMoverName: pulumi.Input<string>;
}
