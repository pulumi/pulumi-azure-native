// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The Agent resource.
 *
 * Uses Azure REST API version 2024-07-01. In version 2.x of the Azure Native provider, it used API version 2023-03-01.
 *
 * Other available API versions: 2023-03-01, 2023-07-01-preview, 2023-10-01, 2025-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native storagemover [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Agent extends pulumi.CustomResource {
    /**
     * Get an existing Agent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Agent {
        return new Agent(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:storagemover:Agent';

    /**
     * Returns true if the given object is an instance of Agent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Agent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Agent.__pulumiType;
    }

    /**
     * The Agent status.
     */
    declare public /*out*/ readonly agentStatus: pulumi.Output<string>;
    /**
     * The Agent version.
     */
    declare public /*out*/ readonly agentVersion: pulumi.Output<string>;
    /**
     * The fully qualified resource ID of the Hybrid Compute resource for the Agent.
     */
    declare public readonly arcResourceId: pulumi.Output<string>;
    /**
     * The VM UUID of the Hybrid Compute resource for the Agent.
     */
    declare public readonly arcVmUuid: pulumi.Output<string>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * A description for the Agent.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly errorDetails: pulumi.Output<outputs.storagemover.AgentPropertiesErrorDetailsResponse>;
    /**
     * The last updated time of the Agent status.
     */
    declare public /*out*/ readonly lastStatusUpdate: pulumi.Output<string>;
    /**
     * Local IP address reported by the Agent.
     */
    declare public /*out*/ readonly localIPAddress: pulumi.Output<string>;
    /**
     * Available memory reported by the Agent, in MB.
     */
    declare public /*out*/ readonly memoryInMB: pulumi.Output<number>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Available compute cores reported by the Agent.
     */
    declare public /*out*/ readonly numberOfCores: pulumi.Output<number>;
    /**
     * The provisioning state of this resource.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.storagemover.SystemDataResponse>;
    /**
     * The agent's local time zone represented in Windows format.
     */
    declare public /*out*/ readonly timeZone: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * The WAN-link upload limit schedule that applies to any Job Run the agent executes. Data plane operations (migrating files) are affected. Control plane operations ensure seamless migration functionality and are not limited by this schedule. The schedule is interpreted with the agent's local time.
     */
    declare public readonly uploadLimitSchedule: pulumi.Output<outputs.storagemover.UploadLimitScheduleResponse | undefined>;
    /**
     * Uptime of the Agent in seconds.
     */
    declare public /*out*/ readonly uptimeInSeconds: pulumi.Output<number>;

    /**
     * Create a Agent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.arcResourceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'arcResourceId'");
            }
            if (args?.arcVmUuid === undefined && !opts.urn) {
                throw new Error("Missing required property 'arcVmUuid'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.storageMoverName === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageMoverName'");
            }
            resourceInputs["agentName"] = args?.agentName;
            resourceInputs["arcResourceId"] = args?.arcResourceId;
            resourceInputs["arcVmUuid"] = args?.arcVmUuid;
            resourceInputs["description"] = args?.description;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["storageMoverName"] = args?.storageMoverName;
            resourceInputs["uploadLimitSchedule"] = args?.uploadLimitSchedule;
            resourceInputs["agentStatus"] = undefined /*out*/;
            resourceInputs["agentVersion"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["errorDetails"] = undefined /*out*/;
            resourceInputs["lastStatusUpdate"] = undefined /*out*/;
            resourceInputs["localIPAddress"] = undefined /*out*/;
            resourceInputs["memoryInMB"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["numberOfCores"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["timeZone"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uptimeInSeconds"] = undefined /*out*/;
        } else {
            resourceInputs["agentStatus"] = undefined /*out*/;
            resourceInputs["agentVersion"] = undefined /*out*/;
            resourceInputs["arcResourceId"] = undefined /*out*/;
            resourceInputs["arcVmUuid"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["errorDetails"] = undefined /*out*/;
            resourceInputs["lastStatusUpdate"] = undefined /*out*/;
            resourceInputs["localIPAddress"] = undefined /*out*/;
            resourceInputs["memoryInMB"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["numberOfCores"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["timeZone"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uploadLimitSchedule"] = undefined /*out*/;
            resourceInputs["uptimeInSeconds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:storagemover/v20220701preview:Agent" }, { type: "azure-native:storagemover/v20230301:Agent" }, { type: "azure-native:storagemover/v20230701preview:Agent" }, { type: "azure-native:storagemover/v20231001:Agent" }, { type: "azure-native:storagemover/v20240701:Agent" }, { type: "azure-native:storagemover/v20250701:Agent" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Agent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Agent resource.
 */
export interface AgentArgs {
    /**
     * The name of the Agent resource.
     */
    agentName?: pulumi.Input<string>;
    /**
     * The fully qualified resource ID of the Hybrid Compute resource for the Agent.
     */
    arcResourceId: pulumi.Input<string>;
    /**
     * The VM UUID of the Hybrid Compute resource for the Agent.
     */
    arcVmUuid: pulumi.Input<string>;
    /**
     * A description for the Agent.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Storage Mover resource.
     */
    storageMoverName: pulumi.Input<string>;
    /**
     * The WAN-link upload limit schedule that applies to any Job Run the agent executes. Data plane operations (migrating files) are affected. Control plane operations ensure seamless migration functionality and are not limited by this schedule. The schedule is interpreted with the agent's local time.
     */
    uploadLimitSchedule?: pulumi.Input<inputs.storagemover.UploadLimitScheduleArgs>;
}
