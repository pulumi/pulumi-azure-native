// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getGraphQuery(args: GetGraphQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetGraphQueryResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:resourcegraph/v20180901preview:getGraphQuery", {
        "resourceGroupName": args.resourceGroupName,
        "resourceName": args.resourceName,
    }, opts);
}

export interface GetGraphQueryArgs {
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: string;
    /**
     * The name of the Graph Query resource.
     */
    readonly resourceName: string;
}

/**
 * Graph Query entity definition.
 */
export interface GetGraphQueryResult {
    /**
     * The description of a graph query.
     */
    readonly description?: string;
    /**
     * This will be used to handle Optimistic Concurrency. If not present, it will always overwrite the existing resource without checking conflict.
     */
    readonly eTag?: string;
    /**
     * The location of the resource
     */
    readonly location?: string;
    /**
     * Azure resource name. This is GUID value. The display name should be assigned within properties field.
     */
    readonly name: string;
    /**
     * KQL query that will be graph.
     */
    readonly query: string;
    /**
     * Enum indicating a type of graph query.
     */
    readonly resultKind: string;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Date and time in UTC of the last modification that was made to this graph query definition.
     */
    readonly timeModified: string;
    /**
     * Azure resource type
     */
    readonly type: string;
}
