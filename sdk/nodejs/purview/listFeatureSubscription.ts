// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Gets details from a list of feature names.
 * Azure REST API version: 2021-12-01.
 */
export function listFeatureSubscription(args: ListFeatureSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<ListFeatureSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:purview:listFeatureSubscription", {
        "features": args.features,
        "locations": args.locations,
    }, opts);
}

export interface ListFeatureSubscriptionArgs {
    /**
     * Set of features
     */
    features?: string[];
    /**
     * Location of feature.
     */
    locations: string;
}

/**
 * List of features with enabled status
 */
export interface ListFeatureSubscriptionResult {
    /**
     * Features with enabled status
     */
    readonly features?: {[key: string]: boolean};
}
/**
 * Gets details from a list of feature names.
 * Azure REST API version: 2021-12-01.
 */
export function listFeatureSubscriptionOutput(args: ListFeatureSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListFeatureSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => listFeatureSubscription(a, opts))
}

export interface ListFeatureSubscriptionOutputArgs {
    /**
     * Set of features
     */
    features?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Location of feature.
     */
    locations: pulumi.Input<string>;
}
