// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CopilotSettingArgs } from "./copilotSetting";
export type CopilotSetting = import("./copilotSetting").CopilotSetting;
export const CopilotSetting: typeof import("./copilotSetting").CopilotSetting = null as any;
utilities.lazyLoad(exports, ["CopilotSetting"], () => require("./copilotSetting"));

export { GetCopilotSettingArgs, GetCopilotSettingResult } from "./getCopilotSetting";
export const getCopilotSetting: typeof import("./getCopilotSetting").getCopilotSetting = null as any;
export const getCopilotSettingOutput: typeof import("./getCopilotSetting").getCopilotSettingOutput = null as any;
utilities.lazyLoad(exports, ["getCopilotSetting","getCopilotSettingOutput"], () => require("./getCopilotSetting"));


// Export sub-modules:
import * as v20240401preview from "./v20240401preview";

export {
    v20240401preview,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:portalservices:CopilotSetting":
                return new CopilotSetting(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "portalservices", _module)
