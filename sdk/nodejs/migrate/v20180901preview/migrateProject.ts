// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Migrate Project REST Resource.
 */
export class MigrateProject extends pulumi.CustomResource {
    /**
     * Get an existing MigrateProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MigrateProject {
        return new MigrateProject(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:migrate/v20180901preview:MigrateProject';

    /**
     * Returns true if the given object is an instance of MigrateProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MigrateProject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MigrateProject.__pulumiType;
    }

    /**
     * Gets or sets the eTag for concurrency control.
     */
    public readonly eTag!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the Azure location in which migrate project is created.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Gets the name of the migrate project.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Gets or sets the nested properties.
     */
    public readonly properties!: pulumi.Output<outputs.migrate.v20180901preview.MigrateProjectPropertiesResponse>;
    /**
     * Gets or sets the tags.
     */
    public readonly tags!: pulumi.Output<outputs.migrate.v20180901preview.MigrateProjectResponseTags | undefined>;
    /**
     * Handled by resource provider. Type = Microsoft.Migrate/MigrateProject.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a MigrateProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MigrateProjectArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.migrateProjectName === undefined) {
                throw new Error("Missing required property 'migrateProjectName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["eTag"] = args ? args.eTag : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["migrateProjectName"] = args ? args.migrateProjectName : undefined;
            inputs["properties"] = args ? args.properties : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["eTag"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["properties"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(MigrateProject.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a MigrateProject resource.
 */
export interface MigrateProjectArgs {
    /**
     * Gets or sets the eTag for concurrency control.
     */
    readonly eTag?: pulumi.Input<string>;
    /**
     * Gets or sets the Azure location in which migrate project is created.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * Name of the Azure Migrate project.
     */
    readonly migrateProjectName: pulumi.Input<string>;
    /**
     * Gets or sets the nested properties.
     */
    readonly properties?: pulumi.Input<inputs.migrate.v20180901preview.MigrateProjectProperties>;
    /**
     * Name of the Azure Resource Group that migrate project is part of.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Gets or sets the tags.
     */
    readonly tags?: pulumi.Input<inputs.migrate.v20180901preview.MigrateProjectTags>;
}
