// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getSolution(args: GetSolutionArgs, opts?: pulumi.InvokeOptions): Promise<GetSolutionResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:migrate/v20180901preview:getSolution", {
        "migrateProjectName": args.migrateProjectName,
        "resourceGroupName": args.resourceGroupName,
        "solutionName": args.solutionName,
    }, opts);
}

export interface GetSolutionArgs {
    /**
     * Name of the Azure Migrate project.
     */
    readonly migrateProjectName: string;
    /**
     * Name of the Azure Resource Group that migrate project is part of.
     */
    readonly resourceGroupName: string;
    /**
     * Unique name of a migration solution within a migrate project.
     */
    readonly solutionName: string;
}

/**
 * Solution REST Resource.
 */
export interface GetSolutionResult {
    /**
     * Gets or sets the ETAG for optimistic concurrency control.
     */
    readonly etag?: string;
    /**
     * Gets the name of this REST resource.
     */
    readonly name: string;
    /**
     * Gets or sets the properties of the solution.
     */
    readonly properties: outputs.migrate.v20180901preview.SolutionPropertiesResponse;
    /**
     * Gets the type of this REST resource.
     */
    readonly type: string;
}
