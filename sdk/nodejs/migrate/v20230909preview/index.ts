// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AksAssessmentOperationArgs } from "./aksAssessmentOperation";
export type AksAssessmentOperation = import("./aksAssessmentOperation").AksAssessmentOperation;
export const AksAssessmentOperation: typeof import("./aksAssessmentOperation").AksAssessmentOperation = null as any;
utilities.lazyLoad(exports, ["AksAssessmentOperation"], () => require("./aksAssessmentOperation"));

export { AssessmentProjectsOperationArgs } from "./assessmentProjectsOperation";
export type AssessmentProjectsOperation = import("./assessmentProjectsOperation").AssessmentProjectsOperation;
export const AssessmentProjectsOperation: typeof import("./assessmentProjectsOperation").AssessmentProjectsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsOperation"], () => require("./assessmentProjectsOperation"));

export { AssessmentsOperationArgs } from "./assessmentsOperation";
export type AssessmentsOperation = import("./assessmentsOperation").AssessmentsOperation;
export const AssessmentsOperation: typeof import("./assessmentsOperation").AssessmentsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentsOperation"], () => require("./assessmentsOperation"));

export { AvsAssessmentsOperationArgs } from "./avsAssessmentsOperation";
export type AvsAssessmentsOperation = import("./avsAssessmentsOperation").AvsAssessmentsOperation;
export const AvsAssessmentsOperation: typeof import("./avsAssessmentsOperation").AvsAssessmentsOperation = null as any;
utilities.lazyLoad(exports, ["AvsAssessmentsOperation"], () => require("./avsAssessmentsOperation"));

export { BusinessCaseOperationArgs } from "./businessCaseOperation";
export type BusinessCaseOperation = import("./businessCaseOperation").BusinessCaseOperation;
export const BusinessCaseOperation: typeof import("./businessCaseOperation").BusinessCaseOperation = null as any;
utilities.lazyLoad(exports, ["BusinessCaseOperation"], () => require("./businessCaseOperation"));

export { GetAksAssessmentOperationArgs, GetAksAssessmentOperationResult, GetAksAssessmentOperationOutputArgs } from "./getAksAssessmentOperation";
export const getAksAssessmentOperation: typeof import("./getAksAssessmentOperation").getAksAssessmentOperation = null as any;
export const getAksAssessmentOperationOutput: typeof import("./getAksAssessmentOperation").getAksAssessmentOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAksAssessmentOperation","getAksAssessmentOperationOutput"], () => require("./getAksAssessmentOperation"));

export { GetAssessmentProjectsOperationArgs, GetAssessmentProjectsOperationResult, GetAssessmentProjectsOperationOutputArgs } from "./getAssessmentProjectsOperation";
export const getAssessmentProjectsOperation: typeof import("./getAssessmentProjectsOperation").getAssessmentProjectsOperation = null as any;
export const getAssessmentProjectsOperationOutput: typeof import("./getAssessmentProjectsOperation").getAssessmentProjectsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsOperation","getAssessmentProjectsOperationOutput"], () => require("./getAssessmentProjectsOperation"));

export { GetAssessmentsOperationArgs, GetAssessmentsOperationResult, GetAssessmentsOperationOutputArgs } from "./getAssessmentsOperation";
export const getAssessmentsOperation: typeof import("./getAssessmentsOperation").getAssessmentsOperation = null as any;
export const getAssessmentsOperationOutput: typeof import("./getAssessmentsOperation").getAssessmentsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentsOperation","getAssessmentsOperationOutput"], () => require("./getAssessmentsOperation"));

export { GetAvsAssessmentsOperationArgs, GetAvsAssessmentsOperationResult, GetAvsAssessmentsOperationOutputArgs } from "./getAvsAssessmentsOperation";
export const getAvsAssessmentsOperation: typeof import("./getAvsAssessmentsOperation").getAvsAssessmentsOperation = null as any;
export const getAvsAssessmentsOperationOutput: typeof import("./getAvsAssessmentsOperation").getAvsAssessmentsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAvsAssessmentsOperation","getAvsAssessmentsOperationOutput"], () => require("./getAvsAssessmentsOperation"));

export { GetBusinessCaseOperationArgs, GetBusinessCaseOperationResult, GetBusinessCaseOperationOutputArgs } from "./getBusinessCaseOperation";
export const getBusinessCaseOperation: typeof import("./getBusinessCaseOperation").getBusinessCaseOperation = null as any;
export const getBusinessCaseOperationOutput: typeof import("./getBusinessCaseOperation").getBusinessCaseOperationOutput = null as any;
utilities.lazyLoad(exports, ["getBusinessCaseOperation","getBusinessCaseOperationOutput"], () => require("./getBusinessCaseOperation"));

export { GetBusinessCaseOperationReportDownloadUrlArgs, GetBusinessCaseOperationReportDownloadUrlResult, GetBusinessCaseOperationReportDownloadUrlOutputArgs } from "./getBusinessCaseOperationReportDownloadUrl";
export const getBusinessCaseOperationReportDownloadUrl: typeof import("./getBusinessCaseOperationReportDownloadUrl").getBusinessCaseOperationReportDownloadUrl = null as any;
export const getBusinessCaseOperationReportDownloadUrlOutput: typeof import("./getBusinessCaseOperationReportDownloadUrl").getBusinessCaseOperationReportDownloadUrlOutput = null as any;
utilities.lazyLoad(exports, ["getBusinessCaseOperationReportDownloadUrl","getBusinessCaseOperationReportDownloadUrlOutput"], () => require("./getBusinessCaseOperationReportDownloadUrl"));

export { GetGroupsOperationArgs, GetGroupsOperationResult, GetGroupsOperationOutputArgs } from "./getGroupsOperation";
export const getGroupsOperation: typeof import("./getGroupsOperation").getGroupsOperation = null as any;
export const getGroupsOperationOutput: typeof import("./getGroupsOperation").getGroupsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getGroupsOperation","getGroupsOperationOutput"], () => require("./getGroupsOperation"));

export { GetHypervCollectorsOperationArgs, GetHypervCollectorsOperationResult, GetHypervCollectorsOperationOutputArgs } from "./getHypervCollectorsOperation";
export const getHypervCollectorsOperation: typeof import("./getHypervCollectorsOperation").getHypervCollectorsOperation = null as any;
export const getHypervCollectorsOperationOutput: typeof import("./getHypervCollectorsOperation").getHypervCollectorsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getHypervCollectorsOperation","getHypervCollectorsOperationOutput"], () => require("./getHypervCollectorsOperation"));

export { GetImportCollectorsOperationArgs, GetImportCollectorsOperationResult, GetImportCollectorsOperationOutputArgs } from "./getImportCollectorsOperation";
export const getImportCollectorsOperation: typeof import("./getImportCollectorsOperation").getImportCollectorsOperation = null as any;
export const getImportCollectorsOperationOutput: typeof import("./getImportCollectorsOperation").getImportCollectorsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getImportCollectorsOperation","getImportCollectorsOperationOutput"], () => require("./getImportCollectorsOperation"));

export { GetPrivateEndpointConnectionOperationArgs, GetPrivateEndpointConnectionOperationResult, GetPrivateEndpointConnectionOperationOutputArgs } from "./getPrivateEndpointConnectionOperation";
export const getPrivateEndpointConnectionOperation: typeof import("./getPrivateEndpointConnectionOperation").getPrivateEndpointConnectionOperation = null as any;
export const getPrivateEndpointConnectionOperationOutput: typeof import("./getPrivateEndpointConnectionOperation").getPrivateEndpointConnectionOperationOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateEndpointConnectionOperation","getPrivateEndpointConnectionOperationOutput"], () => require("./getPrivateEndpointConnectionOperation"));

export { GetServerCollectorsOperationArgs, GetServerCollectorsOperationResult, GetServerCollectorsOperationOutputArgs } from "./getServerCollectorsOperation";
export const getServerCollectorsOperation: typeof import("./getServerCollectorsOperation").getServerCollectorsOperation = null as any;
export const getServerCollectorsOperationOutput: typeof import("./getServerCollectorsOperation").getServerCollectorsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getServerCollectorsOperation","getServerCollectorsOperationOutput"], () => require("./getServerCollectorsOperation"));

export { GetSqlAssessmentV2OperationArgs, GetSqlAssessmentV2OperationResult, GetSqlAssessmentV2OperationOutputArgs } from "./getSqlAssessmentV2Operation";
export const getSqlAssessmentV2Operation: typeof import("./getSqlAssessmentV2Operation").getSqlAssessmentV2Operation = null as any;
export const getSqlAssessmentV2OperationOutput: typeof import("./getSqlAssessmentV2Operation").getSqlAssessmentV2OperationOutput = null as any;
utilities.lazyLoad(exports, ["getSqlAssessmentV2Operation","getSqlAssessmentV2OperationOutput"], () => require("./getSqlAssessmentV2Operation"));

export { GetSqlCollectorOperationArgs, GetSqlCollectorOperationResult, GetSqlCollectorOperationOutputArgs } from "./getSqlCollectorOperation";
export const getSqlCollectorOperation: typeof import("./getSqlCollectorOperation").getSqlCollectorOperation = null as any;
export const getSqlCollectorOperationOutput: typeof import("./getSqlCollectorOperation").getSqlCollectorOperationOutput = null as any;
utilities.lazyLoad(exports, ["getSqlCollectorOperation","getSqlCollectorOperationOutput"], () => require("./getSqlCollectorOperation"));

export { GetVmwareCollectorsOperationArgs, GetVmwareCollectorsOperationResult, GetVmwareCollectorsOperationOutputArgs } from "./getVmwareCollectorsOperation";
export const getVmwareCollectorsOperation: typeof import("./getVmwareCollectorsOperation").getVmwareCollectorsOperation = null as any;
export const getVmwareCollectorsOperationOutput: typeof import("./getVmwareCollectorsOperation").getVmwareCollectorsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getVmwareCollectorsOperation","getVmwareCollectorsOperationOutput"], () => require("./getVmwareCollectorsOperation"));

export { GetWebAppAssessmentV2OperationArgs, GetWebAppAssessmentV2OperationResult, GetWebAppAssessmentV2OperationOutputArgs } from "./getWebAppAssessmentV2Operation";
export const getWebAppAssessmentV2Operation: typeof import("./getWebAppAssessmentV2Operation").getWebAppAssessmentV2Operation = null as any;
export const getWebAppAssessmentV2OperationOutput: typeof import("./getWebAppAssessmentV2Operation").getWebAppAssessmentV2OperationOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppAssessmentV2Operation","getWebAppAssessmentV2OperationOutput"], () => require("./getWebAppAssessmentV2Operation"));

export { GetWebAppCollectorOperationArgs, GetWebAppCollectorOperationResult, GetWebAppCollectorOperationOutputArgs } from "./getWebAppCollectorOperation";
export const getWebAppCollectorOperation: typeof import("./getWebAppCollectorOperation").getWebAppCollectorOperation = null as any;
export const getWebAppCollectorOperationOutput: typeof import("./getWebAppCollectorOperation").getWebAppCollectorOperationOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppCollectorOperation","getWebAppCollectorOperationOutput"], () => require("./getWebAppCollectorOperation"));

export { GroupsOperationArgs } from "./groupsOperation";
export type GroupsOperation = import("./groupsOperation").GroupsOperation;
export const GroupsOperation: typeof import("./groupsOperation").GroupsOperation = null as any;
utilities.lazyLoad(exports, ["GroupsOperation"], () => require("./groupsOperation"));

export { HypervCollectorsOperationArgs } from "./hypervCollectorsOperation";
export type HypervCollectorsOperation = import("./hypervCollectorsOperation").HypervCollectorsOperation;
export const HypervCollectorsOperation: typeof import("./hypervCollectorsOperation").HypervCollectorsOperation = null as any;
utilities.lazyLoad(exports, ["HypervCollectorsOperation"], () => require("./hypervCollectorsOperation"));

export { ImportCollectorsOperationArgs } from "./importCollectorsOperation";
export type ImportCollectorsOperation = import("./importCollectorsOperation").ImportCollectorsOperation;
export const ImportCollectorsOperation: typeof import("./importCollectorsOperation").ImportCollectorsOperation = null as any;
utilities.lazyLoad(exports, ["ImportCollectorsOperation"], () => require("./importCollectorsOperation"));

export { PrivateEndpointConnectionOperationArgs } from "./privateEndpointConnectionOperation";
export type PrivateEndpointConnectionOperation = import("./privateEndpointConnectionOperation").PrivateEndpointConnectionOperation;
export const PrivateEndpointConnectionOperation: typeof import("./privateEndpointConnectionOperation").PrivateEndpointConnectionOperation = null as any;
utilities.lazyLoad(exports, ["PrivateEndpointConnectionOperation"], () => require("./privateEndpointConnectionOperation"));

export { ServerCollectorsOperationArgs } from "./serverCollectorsOperation";
export type ServerCollectorsOperation = import("./serverCollectorsOperation").ServerCollectorsOperation;
export const ServerCollectorsOperation: typeof import("./serverCollectorsOperation").ServerCollectorsOperation = null as any;
utilities.lazyLoad(exports, ["ServerCollectorsOperation"], () => require("./serverCollectorsOperation"));

export { SqlAssessmentV2OperationArgs } from "./sqlAssessmentV2Operation";
export type SqlAssessmentV2Operation = import("./sqlAssessmentV2Operation").SqlAssessmentV2Operation;
export const SqlAssessmentV2Operation: typeof import("./sqlAssessmentV2Operation").SqlAssessmentV2Operation = null as any;
utilities.lazyLoad(exports, ["SqlAssessmentV2Operation"], () => require("./sqlAssessmentV2Operation"));

export { SqlCollectorOperationArgs } from "./sqlCollectorOperation";
export type SqlCollectorOperation = import("./sqlCollectorOperation").SqlCollectorOperation;
export const SqlCollectorOperation: typeof import("./sqlCollectorOperation").SqlCollectorOperation = null as any;
utilities.lazyLoad(exports, ["SqlCollectorOperation"], () => require("./sqlCollectorOperation"));

export { VmwareCollectorsOperationArgs } from "./vmwareCollectorsOperation";
export type VmwareCollectorsOperation = import("./vmwareCollectorsOperation").VmwareCollectorsOperation;
export const VmwareCollectorsOperation: typeof import("./vmwareCollectorsOperation").VmwareCollectorsOperation = null as any;
utilities.lazyLoad(exports, ["VmwareCollectorsOperation"], () => require("./vmwareCollectorsOperation"));

export { WebAppAssessmentV2OperationArgs } from "./webAppAssessmentV2Operation";
export type WebAppAssessmentV2Operation = import("./webAppAssessmentV2Operation").WebAppAssessmentV2Operation;
export const WebAppAssessmentV2Operation: typeof import("./webAppAssessmentV2Operation").WebAppAssessmentV2Operation = null as any;
utilities.lazyLoad(exports, ["WebAppAssessmentV2Operation"], () => require("./webAppAssessmentV2Operation"));

export { WebAppCollectorOperationArgs } from "./webAppCollectorOperation";
export type WebAppCollectorOperation = import("./webAppCollectorOperation").WebAppCollectorOperation;
export const WebAppCollectorOperation: typeof import("./webAppCollectorOperation").WebAppCollectorOperation = null as any;
utilities.lazyLoad(exports, ["WebAppCollectorOperation"], () => require("./webAppCollectorOperation"));


// Export enums:
export * from "../../types/enums/migrate/v20230909preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:migrate/v20230909preview:AksAssessmentOperation":
                return new AksAssessmentOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:AssessmentProjectsOperation":
                return new AssessmentProjectsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:AssessmentsOperation":
                return new AssessmentsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:AvsAssessmentsOperation":
                return new AvsAssessmentsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:BusinessCaseOperation":
                return new BusinessCaseOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:GroupsOperation":
                return new GroupsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:HypervCollectorsOperation":
                return new HypervCollectorsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:ImportCollectorsOperation":
                return new ImportCollectorsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:PrivateEndpointConnectionOperation":
                return new PrivateEndpointConnectionOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:ServerCollectorsOperation":
                return new ServerCollectorsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:SqlAssessmentV2Operation":
                return new SqlAssessmentV2Operation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:SqlCollectorOperation":
                return new SqlCollectorOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:VmwareCollectorsOperation":
                return new VmwareCollectorsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:WebAppAssessmentV2Operation":
                return new WebAppAssessmentV2Operation(name, <any>undefined, { urn })
            case "azure-native:migrate/v20230909preview:WebAppCollectorOperation":
                return new WebAppCollectorOperation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "migrate/v20230909preview", _module)
