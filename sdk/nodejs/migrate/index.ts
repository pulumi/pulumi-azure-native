// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AssessmentProjectsAksAssessmentOperationArgs } from "./assessmentProjectsAksAssessmentOperation";
export type AssessmentProjectsAksAssessmentOperation = import("./assessmentProjectsAksAssessmentOperation").AssessmentProjectsAksAssessmentOperation;
export const AssessmentProjectsAksAssessmentOperation: typeof import("./assessmentProjectsAksAssessmentOperation").AssessmentProjectsAksAssessmentOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsAksAssessmentOperation"], () => require("./assessmentProjectsAksAssessmentOperation"));

export { AssessmentProjectsAssessmentArgs } from "./assessmentProjectsAssessment";
export type AssessmentProjectsAssessment = import("./assessmentProjectsAssessment").AssessmentProjectsAssessment;
export const AssessmentProjectsAssessment: typeof import("./assessmentProjectsAssessment").AssessmentProjectsAssessment = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsAssessment"], () => require("./assessmentProjectsAssessment"));

export { AssessmentProjectsAssessmentsOperationArgs } from "./assessmentProjectsAssessmentsOperation";
export type AssessmentProjectsAssessmentsOperation = import("./assessmentProjectsAssessmentsOperation").AssessmentProjectsAssessmentsOperation;
export const AssessmentProjectsAssessmentsOperation: typeof import("./assessmentProjectsAssessmentsOperation").AssessmentProjectsAssessmentsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsAssessmentsOperation"], () => require("./assessmentProjectsAssessmentsOperation"));

export { AssessmentProjectsAvsAssessmentsOperationArgs } from "./assessmentProjectsAvsAssessmentsOperation";
export type AssessmentProjectsAvsAssessmentsOperation = import("./assessmentProjectsAvsAssessmentsOperation").AssessmentProjectsAvsAssessmentsOperation;
export const AssessmentProjectsAvsAssessmentsOperation: typeof import("./assessmentProjectsAvsAssessmentsOperation").AssessmentProjectsAvsAssessmentsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsAvsAssessmentsOperation"], () => require("./assessmentProjectsAvsAssessmentsOperation"));

export { AssessmentProjectsBusinessCaseOperationArgs } from "./assessmentProjectsBusinessCaseOperation";
export type AssessmentProjectsBusinessCaseOperation = import("./assessmentProjectsBusinessCaseOperation").AssessmentProjectsBusinessCaseOperation;
export const AssessmentProjectsBusinessCaseOperation: typeof import("./assessmentProjectsBusinessCaseOperation").AssessmentProjectsBusinessCaseOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsBusinessCaseOperation"], () => require("./assessmentProjectsBusinessCaseOperation"));

export { AssessmentProjectsGroupArgs } from "./assessmentProjectsGroup";
export type AssessmentProjectsGroup = import("./assessmentProjectsGroup").AssessmentProjectsGroup;
export const AssessmentProjectsGroup: typeof import("./assessmentProjectsGroup").AssessmentProjectsGroup = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsGroup"], () => require("./assessmentProjectsGroup"));

export { AssessmentProjectsGroupsOperationArgs } from "./assessmentProjectsGroupsOperation";
export type AssessmentProjectsGroupsOperation = import("./assessmentProjectsGroupsOperation").AssessmentProjectsGroupsOperation;
export const AssessmentProjectsGroupsOperation: typeof import("./assessmentProjectsGroupsOperation").AssessmentProjectsGroupsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsGroupsOperation"], () => require("./assessmentProjectsGroupsOperation"));

export { AssessmentProjectsHyperVCollectorArgs } from "./assessmentProjectsHyperVCollector";
export type AssessmentProjectsHyperVCollector = import("./assessmentProjectsHyperVCollector").AssessmentProjectsHyperVCollector;
export const AssessmentProjectsHyperVCollector: typeof import("./assessmentProjectsHyperVCollector").AssessmentProjectsHyperVCollector = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsHyperVCollector"], () => require("./assessmentProjectsHyperVCollector"));

export { AssessmentProjectsHypervCollectorsOperationArgs } from "./assessmentProjectsHypervCollectorsOperation";
export type AssessmentProjectsHypervCollectorsOperation = import("./assessmentProjectsHypervCollectorsOperation").AssessmentProjectsHypervCollectorsOperation;
export const AssessmentProjectsHypervCollectorsOperation: typeof import("./assessmentProjectsHypervCollectorsOperation").AssessmentProjectsHypervCollectorsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsHypervCollectorsOperation"], () => require("./assessmentProjectsHypervCollectorsOperation"));

export { AssessmentProjectsImportCollectorArgs } from "./assessmentProjectsImportCollector";
export type AssessmentProjectsImportCollector = import("./assessmentProjectsImportCollector").AssessmentProjectsImportCollector;
export const AssessmentProjectsImportCollector: typeof import("./assessmentProjectsImportCollector").AssessmentProjectsImportCollector = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsImportCollector"], () => require("./assessmentProjectsImportCollector"));

export { AssessmentProjectsImportCollectorsOperationArgs } from "./assessmentProjectsImportCollectorsOperation";
export type AssessmentProjectsImportCollectorsOperation = import("./assessmentProjectsImportCollectorsOperation").AssessmentProjectsImportCollectorsOperation;
export const AssessmentProjectsImportCollectorsOperation: typeof import("./assessmentProjectsImportCollectorsOperation").AssessmentProjectsImportCollectorsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsImportCollectorsOperation"], () => require("./assessmentProjectsImportCollectorsOperation"));

export { AssessmentProjectsOperationArgs } from "./assessmentProjectsOperation";
export type AssessmentProjectsOperation = import("./assessmentProjectsOperation").AssessmentProjectsOperation;
export const AssessmentProjectsOperation: typeof import("./assessmentProjectsOperation").AssessmentProjectsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsOperation"], () => require("./assessmentProjectsOperation"));

export { AssessmentProjectsPrivateEndpointConnectionArgs } from "./assessmentProjectsPrivateEndpointConnection";
export type AssessmentProjectsPrivateEndpointConnection = import("./assessmentProjectsPrivateEndpointConnection").AssessmentProjectsPrivateEndpointConnection;
export const AssessmentProjectsPrivateEndpointConnection: typeof import("./assessmentProjectsPrivateEndpointConnection").AssessmentProjectsPrivateEndpointConnection = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsPrivateEndpointConnection"], () => require("./assessmentProjectsPrivateEndpointConnection"));

export { AssessmentProjectsPrivateEndpointConnectionOperationArgs } from "./assessmentProjectsPrivateEndpointConnectionOperation";
export type AssessmentProjectsPrivateEndpointConnectionOperation = import("./assessmentProjectsPrivateEndpointConnectionOperation").AssessmentProjectsPrivateEndpointConnectionOperation;
export const AssessmentProjectsPrivateEndpointConnectionOperation: typeof import("./assessmentProjectsPrivateEndpointConnectionOperation").AssessmentProjectsPrivateEndpointConnectionOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsPrivateEndpointConnectionOperation"], () => require("./assessmentProjectsPrivateEndpointConnectionOperation"));

export { AssessmentProjectsProjectArgs } from "./assessmentProjectsProject";
export type AssessmentProjectsProject = import("./assessmentProjectsProject").AssessmentProjectsProject;
export const AssessmentProjectsProject: typeof import("./assessmentProjectsProject").AssessmentProjectsProject = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsProject"], () => require("./assessmentProjectsProject"));

export { AssessmentProjectsServerCollectorArgs } from "./assessmentProjectsServerCollector";
export type AssessmentProjectsServerCollector = import("./assessmentProjectsServerCollector").AssessmentProjectsServerCollector;
export const AssessmentProjectsServerCollector: typeof import("./assessmentProjectsServerCollector").AssessmentProjectsServerCollector = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsServerCollector"], () => require("./assessmentProjectsServerCollector"));

export { AssessmentProjectsServerCollectorsOperationArgs } from "./assessmentProjectsServerCollectorsOperation";
export type AssessmentProjectsServerCollectorsOperation = import("./assessmentProjectsServerCollectorsOperation").AssessmentProjectsServerCollectorsOperation;
export const AssessmentProjectsServerCollectorsOperation: typeof import("./assessmentProjectsServerCollectorsOperation").AssessmentProjectsServerCollectorsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsServerCollectorsOperation"], () => require("./assessmentProjectsServerCollectorsOperation"));

export { AssessmentProjectsSqlAssessmentV2OperationArgs } from "./assessmentProjectsSqlAssessmentV2Operation";
export type AssessmentProjectsSqlAssessmentV2Operation = import("./assessmentProjectsSqlAssessmentV2Operation").AssessmentProjectsSqlAssessmentV2Operation;
export const AssessmentProjectsSqlAssessmentV2Operation: typeof import("./assessmentProjectsSqlAssessmentV2Operation").AssessmentProjectsSqlAssessmentV2Operation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsSqlAssessmentV2Operation"], () => require("./assessmentProjectsSqlAssessmentV2Operation"));

export { AssessmentProjectsSqlCollectorOperationArgs } from "./assessmentProjectsSqlCollectorOperation";
export type AssessmentProjectsSqlCollectorOperation = import("./assessmentProjectsSqlCollectorOperation").AssessmentProjectsSqlCollectorOperation;
export const AssessmentProjectsSqlCollectorOperation: typeof import("./assessmentProjectsSqlCollectorOperation").AssessmentProjectsSqlCollectorOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsSqlCollectorOperation"], () => require("./assessmentProjectsSqlCollectorOperation"));

export { AssessmentProjectsVMwareCollectorArgs } from "./assessmentProjectsVMwareCollector";
export type AssessmentProjectsVMwareCollector = import("./assessmentProjectsVMwareCollector").AssessmentProjectsVMwareCollector;
export const AssessmentProjectsVMwareCollector: typeof import("./assessmentProjectsVMwareCollector").AssessmentProjectsVMwareCollector = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsVMwareCollector"], () => require("./assessmentProjectsVMwareCollector"));

export { AssessmentProjectsVmwareCollectorsOperationArgs } from "./assessmentProjectsVmwareCollectorsOperation";
export type AssessmentProjectsVmwareCollectorsOperation = import("./assessmentProjectsVmwareCollectorsOperation").AssessmentProjectsVmwareCollectorsOperation;
export const AssessmentProjectsVmwareCollectorsOperation: typeof import("./assessmentProjectsVmwareCollectorsOperation").AssessmentProjectsVmwareCollectorsOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsVmwareCollectorsOperation"], () => require("./assessmentProjectsVmwareCollectorsOperation"));

export { AssessmentProjectsWebAppAssessmentV2OperationArgs } from "./assessmentProjectsWebAppAssessmentV2Operation";
export type AssessmentProjectsWebAppAssessmentV2Operation = import("./assessmentProjectsWebAppAssessmentV2Operation").AssessmentProjectsWebAppAssessmentV2Operation;
export const AssessmentProjectsWebAppAssessmentV2Operation: typeof import("./assessmentProjectsWebAppAssessmentV2Operation").AssessmentProjectsWebAppAssessmentV2Operation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsWebAppAssessmentV2Operation"], () => require("./assessmentProjectsWebAppAssessmentV2Operation"));

export { AssessmentProjectsWebAppCollectorOperationArgs } from "./assessmentProjectsWebAppCollectorOperation";
export type AssessmentProjectsWebAppCollectorOperation = import("./assessmentProjectsWebAppCollectorOperation").AssessmentProjectsWebAppCollectorOperation;
export const AssessmentProjectsWebAppCollectorOperation: typeof import("./assessmentProjectsWebAppCollectorOperation").AssessmentProjectsWebAppCollectorOperation = null as any;
utilities.lazyLoad(exports, ["AssessmentProjectsWebAppCollectorOperation"], () => require("./assessmentProjectsWebAppCollectorOperation"));

export { GetAssessmentProjectsAksAssessmentOperationArgs, GetAssessmentProjectsAksAssessmentOperationResult, GetAssessmentProjectsAksAssessmentOperationOutputArgs } from "./getAssessmentProjectsAksAssessmentOperation";
export const getAssessmentProjectsAksAssessmentOperation: typeof import("./getAssessmentProjectsAksAssessmentOperation").getAssessmentProjectsAksAssessmentOperation = null as any;
export const getAssessmentProjectsAksAssessmentOperationOutput: typeof import("./getAssessmentProjectsAksAssessmentOperation").getAssessmentProjectsAksAssessmentOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsAksAssessmentOperation","getAssessmentProjectsAksAssessmentOperationOutput"], () => require("./getAssessmentProjectsAksAssessmentOperation"));

export { GetAssessmentProjectsAssessmentArgs, GetAssessmentProjectsAssessmentResult, GetAssessmentProjectsAssessmentOutputArgs } from "./getAssessmentProjectsAssessment";
export const getAssessmentProjectsAssessment: typeof import("./getAssessmentProjectsAssessment").getAssessmentProjectsAssessment = null as any;
export const getAssessmentProjectsAssessmentOutput: typeof import("./getAssessmentProjectsAssessment").getAssessmentProjectsAssessmentOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsAssessment","getAssessmentProjectsAssessmentOutput"], () => require("./getAssessmentProjectsAssessment"));

export { GetAssessmentProjectsAssessmentsOperationArgs, GetAssessmentProjectsAssessmentsOperationResult, GetAssessmentProjectsAssessmentsOperationOutputArgs } from "./getAssessmentProjectsAssessmentsOperation";
export const getAssessmentProjectsAssessmentsOperation: typeof import("./getAssessmentProjectsAssessmentsOperation").getAssessmentProjectsAssessmentsOperation = null as any;
export const getAssessmentProjectsAssessmentsOperationOutput: typeof import("./getAssessmentProjectsAssessmentsOperation").getAssessmentProjectsAssessmentsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsAssessmentsOperation","getAssessmentProjectsAssessmentsOperationOutput"], () => require("./getAssessmentProjectsAssessmentsOperation"));

export { GetAssessmentProjectsAvsAssessmentsOperationArgs, GetAssessmentProjectsAvsAssessmentsOperationResult, GetAssessmentProjectsAvsAssessmentsOperationOutputArgs } from "./getAssessmentProjectsAvsAssessmentsOperation";
export const getAssessmentProjectsAvsAssessmentsOperation: typeof import("./getAssessmentProjectsAvsAssessmentsOperation").getAssessmentProjectsAvsAssessmentsOperation = null as any;
export const getAssessmentProjectsAvsAssessmentsOperationOutput: typeof import("./getAssessmentProjectsAvsAssessmentsOperation").getAssessmentProjectsAvsAssessmentsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsAvsAssessmentsOperation","getAssessmentProjectsAvsAssessmentsOperationOutput"], () => require("./getAssessmentProjectsAvsAssessmentsOperation"));

export { GetAssessmentProjectsBusinessCaseOperationArgs, GetAssessmentProjectsBusinessCaseOperationResult, GetAssessmentProjectsBusinessCaseOperationOutputArgs } from "./getAssessmentProjectsBusinessCaseOperation";
export const getAssessmentProjectsBusinessCaseOperation: typeof import("./getAssessmentProjectsBusinessCaseOperation").getAssessmentProjectsBusinessCaseOperation = null as any;
export const getAssessmentProjectsBusinessCaseOperationOutput: typeof import("./getAssessmentProjectsBusinessCaseOperation").getAssessmentProjectsBusinessCaseOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsBusinessCaseOperation","getAssessmentProjectsBusinessCaseOperationOutput"], () => require("./getAssessmentProjectsBusinessCaseOperation"));

export { GetAssessmentProjectsBusinessCaseOperationReportDownloadUrlArgs, GetAssessmentProjectsBusinessCaseOperationReportDownloadUrlResult, GetAssessmentProjectsBusinessCaseOperationReportDownloadUrlOutputArgs } from "./getAssessmentProjectsBusinessCaseOperationReportDownloadUrl";
export const getAssessmentProjectsBusinessCaseOperationReportDownloadUrl: typeof import("./getAssessmentProjectsBusinessCaseOperationReportDownloadUrl").getAssessmentProjectsBusinessCaseOperationReportDownloadUrl = null as any;
export const getAssessmentProjectsBusinessCaseOperationReportDownloadUrlOutput: typeof import("./getAssessmentProjectsBusinessCaseOperationReportDownloadUrl").getAssessmentProjectsBusinessCaseOperationReportDownloadUrlOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsBusinessCaseOperationReportDownloadUrl","getAssessmentProjectsBusinessCaseOperationReportDownloadUrlOutput"], () => require("./getAssessmentProjectsBusinessCaseOperationReportDownloadUrl"));

export { GetAssessmentProjectsGroupArgs, GetAssessmentProjectsGroupResult, GetAssessmentProjectsGroupOutputArgs } from "./getAssessmentProjectsGroup";
export const getAssessmentProjectsGroup: typeof import("./getAssessmentProjectsGroup").getAssessmentProjectsGroup = null as any;
export const getAssessmentProjectsGroupOutput: typeof import("./getAssessmentProjectsGroup").getAssessmentProjectsGroupOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsGroup","getAssessmentProjectsGroupOutput"], () => require("./getAssessmentProjectsGroup"));

export { GetAssessmentProjectsGroupsOperationArgs, GetAssessmentProjectsGroupsOperationResult, GetAssessmentProjectsGroupsOperationOutputArgs } from "./getAssessmentProjectsGroupsOperation";
export const getAssessmentProjectsGroupsOperation: typeof import("./getAssessmentProjectsGroupsOperation").getAssessmentProjectsGroupsOperation = null as any;
export const getAssessmentProjectsGroupsOperationOutput: typeof import("./getAssessmentProjectsGroupsOperation").getAssessmentProjectsGroupsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsGroupsOperation","getAssessmentProjectsGroupsOperationOutput"], () => require("./getAssessmentProjectsGroupsOperation"));

export { GetAssessmentProjectsHyperVCollectorArgs, GetAssessmentProjectsHyperVCollectorResult, GetAssessmentProjectsHyperVCollectorOutputArgs } from "./getAssessmentProjectsHyperVCollector";
export const getAssessmentProjectsHyperVCollector: typeof import("./getAssessmentProjectsHyperVCollector").getAssessmentProjectsHyperVCollector = null as any;
export const getAssessmentProjectsHyperVCollectorOutput: typeof import("./getAssessmentProjectsHyperVCollector").getAssessmentProjectsHyperVCollectorOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsHyperVCollector","getAssessmentProjectsHyperVCollectorOutput"], () => require("./getAssessmentProjectsHyperVCollector"));

export { GetAssessmentProjectsHypervCollectorsOperationArgs, GetAssessmentProjectsHypervCollectorsOperationResult, GetAssessmentProjectsHypervCollectorsOperationOutputArgs } from "./getAssessmentProjectsHypervCollectorsOperation";
export const getAssessmentProjectsHypervCollectorsOperation: typeof import("./getAssessmentProjectsHypervCollectorsOperation").getAssessmentProjectsHypervCollectorsOperation = null as any;
export const getAssessmentProjectsHypervCollectorsOperationOutput: typeof import("./getAssessmentProjectsHypervCollectorsOperation").getAssessmentProjectsHypervCollectorsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsHypervCollectorsOperation","getAssessmentProjectsHypervCollectorsOperationOutput"], () => require("./getAssessmentProjectsHypervCollectorsOperation"));

export { GetAssessmentProjectsImportCollectorArgs, GetAssessmentProjectsImportCollectorResult, GetAssessmentProjectsImportCollectorOutputArgs } from "./getAssessmentProjectsImportCollector";
export const getAssessmentProjectsImportCollector: typeof import("./getAssessmentProjectsImportCollector").getAssessmentProjectsImportCollector = null as any;
export const getAssessmentProjectsImportCollectorOutput: typeof import("./getAssessmentProjectsImportCollector").getAssessmentProjectsImportCollectorOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsImportCollector","getAssessmentProjectsImportCollectorOutput"], () => require("./getAssessmentProjectsImportCollector"));

export { GetAssessmentProjectsImportCollectorsOperationArgs, GetAssessmentProjectsImportCollectorsOperationResult, GetAssessmentProjectsImportCollectorsOperationOutputArgs } from "./getAssessmentProjectsImportCollectorsOperation";
export const getAssessmentProjectsImportCollectorsOperation: typeof import("./getAssessmentProjectsImportCollectorsOperation").getAssessmentProjectsImportCollectorsOperation = null as any;
export const getAssessmentProjectsImportCollectorsOperationOutput: typeof import("./getAssessmentProjectsImportCollectorsOperation").getAssessmentProjectsImportCollectorsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsImportCollectorsOperation","getAssessmentProjectsImportCollectorsOperationOutput"], () => require("./getAssessmentProjectsImportCollectorsOperation"));

export { GetAssessmentProjectsOperationArgs, GetAssessmentProjectsOperationResult, GetAssessmentProjectsOperationOutputArgs } from "./getAssessmentProjectsOperation";
export const getAssessmentProjectsOperation: typeof import("./getAssessmentProjectsOperation").getAssessmentProjectsOperation = null as any;
export const getAssessmentProjectsOperationOutput: typeof import("./getAssessmentProjectsOperation").getAssessmentProjectsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsOperation","getAssessmentProjectsOperationOutput"], () => require("./getAssessmentProjectsOperation"));

export { GetAssessmentProjectsPrivateEndpointConnectionArgs, GetAssessmentProjectsPrivateEndpointConnectionResult, GetAssessmentProjectsPrivateEndpointConnectionOutputArgs } from "./getAssessmentProjectsPrivateEndpointConnection";
export const getAssessmentProjectsPrivateEndpointConnection: typeof import("./getAssessmentProjectsPrivateEndpointConnection").getAssessmentProjectsPrivateEndpointConnection = null as any;
export const getAssessmentProjectsPrivateEndpointConnectionOutput: typeof import("./getAssessmentProjectsPrivateEndpointConnection").getAssessmentProjectsPrivateEndpointConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsPrivateEndpointConnection","getAssessmentProjectsPrivateEndpointConnectionOutput"], () => require("./getAssessmentProjectsPrivateEndpointConnection"));

export { GetAssessmentProjectsPrivateEndpointConnectionOperationArgs, GetAssessmentProjectsPrivateEndpointConnectionOperationResult, GetAssessmentProjectsPrivateEndpointConnectionOperationOutputArgs } from "./getAssessmentProjectsPrivateEndpointConnectionOperation";
export const getAssessmentProjectsPrivateEndpointConnectionOperation: typeof import("./getAssessmentProjectsPrivateEndpointConnectionOperation").getAssessmentProjectsPrivateEndpointConnectionOperation = null as any;
export const getAssessmentProjectsPrivateEndpointConnectionOperationOutput: typeof import("./getAssessmentProjectsPrivateEndpointConnectionOperation").getAssessmentProjectsPrivateEndpointConnectionOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsPrivateEndpointConnectionOperation","getAssessmentProjectsPrivateEndpointConnectionOperationOutput"], () => require("./getAssessmentProjectsPrivateEndpointConnectionOperation"));

export { GetAssessmentProjectsProjectArgs, GetAssessmentProjectsProjectResult, GetAssessmentProjectsProjectOutputArgs } from "./getAssessmentProjectsProject";
export const getAssessmentProjectsProject: typeof import("./getAssessmentProjectsProject").getAssessmentProjectsProject = null as any;
export const getAssessmentProjectsProjectOutput: typeof import("./getAssessmentProjectsProject").getAssessmentProjectsProjectOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsProject","getAssessmentProjectsProjectOutput"], () => require("./getAssessmentProjectsProject"));

export { GetAssessmentProjectsServerCollectorArgs, GetAssessmentProjectsServerCollectorResult, GetAssessmentProjectsServerCollectorOutputArgs } from "./getAssessmentProjectsServerCollector";
export const getAssessmentProjectsServerCollector: typeof import("./getAssessmentProjectsServerCollector").getAssessmentProjectsServerCollector = null as any;
export const getAssessmentProjectsServerCollectorOutput: typeof import("./getAssessmentProjectsServerCollector").getAssessmentProjectsServerCollectorOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsServerCollector","getAssessmentProjectsServerCollectorOutput"], () => require("./getAssessmentProjectsServerCollector"));

export { GetAssessmentProjectsServerCollectorsOperationArgs, GetAssessmentProjectsServerCollectorsOperationResult, GetAssessmentProjectsServerCollectorsOperationOutputArgs } from "./getAssessmentProjectsServerCollectorsOperation";
export const getAssessmentProjectsServerCollectorsOperation: typeof import("./getAssessmentProjectsServerCollectorsOperation").getAssessmentProjectsServerCollectorsOperation = null as any;
export const getAssessmentProjectsServerCollectorsOperationOutput: typeof import("./getAssessmentProjectsServerCollectorsOperation").getAssessmentProjectsServerCollectorsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsServerCollectorsOperation","getAssessmentProjectsServerCollectorsOperationOutput"], () => require("./getAssessmentProjectsServerCollectorsOperation"));

export { GetAssessmentProjectsSqlAssessmentV2OperationArgs, GetAssessmentProjectsSqlAssessmentV2OperationResult, GetAssessmentProjectsSqlAssessmentV2OperationOutputArgs } from "./getAssessmentProjectsSqlAssessmentV2Operation";
export const getAssessmentProjectsSqlAssessmentV2Operation: typeof import("./getAssessmentProjectsSqlAssessmentV2Operation").getAssessmentProjectsSqlAssessmentV2Operation = null as any;
export const getAssessmentProjectsSqlAssessmentV2OperationOutput: typeof import("./getAssessmentProjectsSqlAssessmentV2Operation").getAssessmentProjectsSqlAssessmentV2OperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsSqlAssessmentV2Operation","getAssessmentProjectsSqlAssessmentV2OperationOutput"], () => require("./getAssessmentProjectsSqlAssessmentV2Operation"));

export { GetAssessmentProjectsSqlCollectorOperationArgs, GetAssessmentProjectsSqlCollectorOperationResult, GetAssessmentProjectsSqlCollectorOperationOutputArgs } from "./getAssessmentProjectsSqlCollectorOperation";
export const getAssessmentProjectsSqlCollectorOperation: typeof import("./getAssessmentProjectsSqlCollectorOperation").getAssessmentProjectsSqlCollectorOperation = null as any;
export const getAssessmentProjectsSqlCollectorOperationOutput: typeof import("./getAssessmentProjectsSqlCollectorOperation").getAssessmentProjectsSqlCollectorOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsSqlCollectorOperation","getAssessmentProjectsSqlCollectorOperationOutput"], () => require("./getAssessmentProjectsSqlCollectorOperation"));

export { GetAssessmentProjectsVMwareCollectorArgs, GetAssessmentProjectsVMwareCollectorResult, GetAssessmentProjectsVMwareCollectorOutputArgs } from "./getAssessmentProjectsVMwareCollector";
export const getAssessmentProjectsVMwareCollector: typeof import("./getAssessmentProjectsVMwareCollector").getAssessmentProjectsVMwareCollector = null as any;
export const getAssessmentProjectsVMwareCollectorOutput: typeof import("./getAssessmentProjectsVMwareCollector").getAssessmentProjectsVMwareCollectorOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsVMwareCollector","getAssessmentProjectsVMwareCollectorOutput"], () => require("./getAssessmentProjectsVMwareCollector"));

export { GetAssessmentProjectsVmwareCollectorsOperationArgs, GetAssessmentProjectsVmwareCollectorsOperationResult, GetAssessmentProjectsVmwareCollectorsOperationOutputArgs } from "./getAssessmentProjectsVmwareCollectorsOperation";
export const getAssessmentProjectsVmwareCollectorsOperation: typeof import("./getAssessmentProjectsVmwareCollectorsOperation").getAssessmentProjectsVmwareCollectorsOperation = null as any;
export const getAssessmentProjectsVmwareCollectorsOperationOutput: typeof import("./getAssessmentProjectsVmwareCollectorsOperation").getAssessmentProjectsVmwareCollectorsOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsVmwareCollectorsOperation","getAssessmentProjectsVmwareCollectorsOperationOutput"], () => require("./getAssessmentProjectsVmwareCollectorsOperation"));

export { GetAssessmentProjectsWebAppAssessmentV2OperationArgs, GetAssessmentProjectsWebAppAssessmentV2OperationResult, GetAssessmentProjectsWebAppAssessmentV2OperationOutputArgs } from "./getAssessmentProjectsWebAppAssessmentV2Operation";
export const getAssessmentProjectsWebAppAssessmentV2Operation: typeof import("./getAssessmentProjectsWebAppAssessmentV2Operation").getAssessmentProjectsWebAppAssessmentV2Operation = null as any;
export const getAssessmentProjectsWebAppAssessmentV2OperationOutput: typeof import("./getAssessmentProjectsWebAppAssessmentV2Operation").getAssessmentProjectsWebAppAssessmentV2OperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsWebAppAssessmentV2Operation","getAssessmentProjectsWebAppAssessmentV2OperationOutput"], () => require("./getAssessmentProjectsWebAppAssessmentV2Operation"));

export { GetAssessmentProjectsWebAppCollectorOperationArgs, GetAssessmentProjectsWebAppCollectorOperationResult, GetAssessmentProjectsWebAppCollectorOperationOutputArgs } from "./getAssessmentProjectsWebAppCollectorOperation";
export const getAssessmentProjectsWebAppCollectorOperation: typeof import("./getAssessmentProjectsWebAppCollectorOperation").getAssessmentProjectsWebAppCollectorOperation = null as any;
export const getAssessmentProjectsWebAppCollectorOperationOutput: typeof import("./getAssessmentProjectsWebAppCollectorOperation").getAssessmentProjectsWebAppCollectorOperationOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentProjectsWebAppCollectorOperation","getAssessmentProjectsWebAppCollectorOperationOutput"], () => require("./getAssessmentProjectsWebAppCollectorOperation"));

export { GetMigrateAgentArgs, GetMigrateAgentResult, GetMigrateAgentOutputArgs } from "./getMigrateAgent";
export const getMigrateAgent: typeof import("./getMigrateAgent").getMigrateAgent = null as any;
export const getMigrateAgentOutput: typeof import("./getMigrateAgent").getMigrateAgentOutput = null as any;
utilities.lazyLoad(exports, ["getMigrateAgent","getMigrateAgentOutput"], () => require("./getMigrateAgent"));

export { GetMigrateProjectArgs, GetMigrateProjectResult, GetMigrateProjectOutputArgs } from "./getMigrateProject";
export const getMigrateProject: typeof import("./getMigrateProject").getMigrateProject = null as any;
export const getMigrateProjectOutput: typeof import("./getMigrateProject").getMigrateProjectOutput = null as any;
utilities.lazyLoad(exports, ["getMigrateProject","getMigrateProjectOutput"], () => require("./getMigrateProject"));

export { GetMigrateProjectsControllerMigrateProjectArgs, GetMigrateProjectsControllerMigrateProjectResult, GetMigrateProjectsControllerMigrateProjectOutputArgs } from "./getMigrateProjectsControllerMigrateProject";
export const getMigrateProjectsControllerMigrateProject: typeof import("./getMigrateProjectsControllerMigrateProject").getMigrateProjectsControllerMigrateProject = null as any;
export const getMigrateProjectsControllerMigrateProjectOutput: typeof import("./getMigrateProjectsControllerMigrateProject").getMigrateProjectsControllerMigrateProjectOutput = null as any;
utilities.lazyLoad(exports, ["getMigrateProjectsControllerMigrateProject","getMigrateProjectsControllerMigrateProjectOutput"], () => require("./getMigrateProjectsControllerMigrateProject"));

export { GetModernizeProjectArgs, GetModernizeProjectResult, GetModernizeProjectOutputArgs } from "./getModernizeProject";
export const getModernizeProject: typeof import("./getModernizeProject").getModernizeProject = null as any;
export const getModernizeProjectOutput: typeof import("./getModernizeProject").getModernizeProjectOutput = null as any;
utilities.lazyLoad(exports, ["getModernizeProject","getModernizeProjectOutput"], () => require("./getModernizeProject"));

export { GetMoveCollectionArgs, GetMoveCollectionResult, GetMoveCollectionOutputArgs } from "./getMoveCollection";
export const getMoveCollection: typeof import("./getMoveCollection").getMoveCollection = null as any;
export const getMoveCollectionOutput: typeof import("./getMoveCollection").getMoveCollectionOutput = null as any;
utilities.lazyLoad(exports, ["getMoveCollection","getMoveCollectionOutput"], () => require("./getMoveCollection"));

export { GetMoveResourceArgs, GetMoveResourceResult, GetMoveResourceOutputArgs } from "./getMoveResource";
export const getMoveResource: typeof import("./getMoveResource").getMoveResource = null as any;
export const getMoveResourceOutput: typeof import("./getMoveResource").getMoveResourceOutput = null as any;
utilities.lazyLoad(exports, ["getMoveResource","getMoveResourceOutput"], () => require("./getMoveResource"));

export { GetPrivateEndpointConnectionControllerPrivateEndpointConnectionArgs, GetPrivateEndpointConnectionControllerPrivateEndpointConnectionResult, GetPrivateEndpointConnectionControllerPrivateEndpointConnectionOutputArgs } from "./getPrivateEndpointConnectionControllerPrivateEndpointConnection";
export const getPrivateEndpointConnectionControllerPrivateEndpointConnection: typeof import("./getPrivateEndpointConnectionControllerPrivateEndpointConnection").getPrivateEndpointConnectionControllerPrivateEndpointConnection = null as any;
export const getPrivateEndpointConnectionControllerPrivateEndpointConnectionOutput: typeof import("./getPrivateEndpointConnectionControllerPrivateEndpointConnection").getPrivateEndpointConnectionControllerPrivateEndpointConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateEndpointConnectionControllerPrivateEndpointConnection","getPrivateEndpointConnectionControllerPrivateEndpointConnectionOutput"], () => require("./getPrivateEndpointConnectionControllerPrivateEndpointConnection"));

export { GetSolutionArgs, GetSolutionResult, GetSolutionOutputArgs } from "./getSolution";
export const getSolution: typeof import("./getSolution").getSolution = null as any;
export const getSolutionOutput: typeof import("./getSolution").getSolutionOutput = null as any;
utilities.lazyLoad(exports, ["getSolution","getSolutionOutput"], () => require("./getSolution"));

export { GetSolutionConfigArgs, GetSolutionConfigResult, GetSolutionConfigOutputArgs } from "./getSolutionConfig";
export const getSolutionConfig: typeof import("./getSolutionConfig").getSolutionConfig = null as any;
export const getSolutionConfigOutput: typeof import("./getSolutionConfig").getSolutionConfigOutput = null as any;
utilities.lazyLoad(exports, ["getSolutionConfig","getSolutionConfigOutput"], () => require("./getSolutionConfig"));

export { GetWorkloadDeploymentArgs, GetWorkloadDeploymentResult, GetWorkloadDeploymentOutputArgs } from "./getWorkloadDeployment";
export const getWorkloadDeployment: typeof import("./getWorkloadDeployment").getWorkloadDeployment = null as any;
export const getWorkloadDeploymentOutput: typeof import("./getWorkloadDeployment").getWorkloadDeploymentOutput = null as any;
utilities.lazyLoad(exports, ["getWorkloadDeployment","getWorkloadDeploymentOutput"], () => require("./getWorkloadDeployment"));

export { GetWorkloadDeploymentSecretConfigurationsArgs, GetWorkloadDeploymentSecretConfigurationsResult, GetWorkloadDeploymentSecretConfigurationsOutputArgs } from "./getWorkloadDeploymentSecretConfigurations";
export const getWorkloadDeploymentSecretConfigurations: typeof import("./getWorkloadDeploymentSecretConfigurations").getWorkloadDeploymentSecretConfigurations = null as any;
export const getWorkloadDeploymentSecretConfigurationsOutput: typeof import("./getWorkloadDeploymentSecretConfigurations").getWorkloadDeploymentSecretConfigurationsOutput = null as any;
utilities.lazyLoad(exports, ["getWorkloadDeploymentSecretConfigurations","getWorkloadDeploymentSecretConfigurationsOutput"], () => require("./getWorkloadDeploymentSecretConfigurations"));

export { GetWorkloadInstanceArgs, GetWorkloadInstanceResult, GetWorkloadInstanceOutputArgs } from "./getWorkloadInstance";
export const getWorkloadInstance: typeof import("./getWorkloadInstance").getWorkloadInstance = null as any;
export const getWorkloadInstanceOutput: typeof import("./getWorkloadInstance").getWorkloadInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getWorkloadInstance","getWorkloadInstanceOutput"], () => require("./getWorkloadInstance"));

export { MigrateAgentArgs } from "./migrateAgent";
export type MigrateAgent = import("./migrateAgent").MigrateAgent;
export const MigrateAgent: typeof import("./migrateAgent").MigrateAgent = null as any;
utilities.lazyLoad(exports, ["MigrateAgent"], () => require("./migrateAgent"));

export { MigrateProjectArgs } from "./migrateProject";
export type MigrateProject = import("./migrateProject").MigrateProject;
export const MigrateProject: typeof import("./migrateProject").MigrateProject = null as any;
utilities.lazyLoad(exports, ["MigrateProject"], () => require("./migrateProject"));

export { MigrateProjectsControllerMigrateProjectArgs } from "./migrateProjectsControllerMigrateProject";
export type MigrateProjectsControllerMigrateProject = import("./migrateProjectsControllerMigrateProject").MigrateProjectsControllerMigrateProject;
export const MigrateProjectsControllerMigrateProject: typeof import("./migrateProjectsControllerMigrateProject").MigrateProjectsControllerMigrateProject = null as any;
utilities.lazyLoad(exports, ["MigrateProjectsControllerMigrateProject"], () => require("./migrateProjectsControllerMigrateProject"));

export { ModernizeProjectArgs } from "./modernizeProject";
export type ModernizeProject = import("./modernizeProject").ModernizeProject;
export const ModernizeProject: typeof import("./modernizeProject").ModernizeProject = null as any;
utilities.lazyLoad(exports, ["ModernizeProject"], () => require("./modernizeProject"));

export { MoveCollectionArgs } from "./moveCollection";
export type MoveCollection = import("./moveCollection").MoveCollection;
export const MoveCollection: typeof import("./moveCollection").MoveCollection = null as any;
utilities.lazyLoad(exports, ["MoveCollection"], () => require("./moveCollection"));

export { MoveResourceArgs } from "./moveResource";
export type MoveResource = import("./moveResource").MoveResource;
export const MoveResource: typeof import("./moveResource").MoveResource = null as any;
utilities.lazyLoad(exports, ["MoveResource"], () => require("./moveResource"));

export { PrivateEndpointConnectionControllerPrivateEndpointConnectionArgs } from "./privateEndpointConnectionControllerPrivateEndpointConnection";
export type PrivateEndpointConnectionControllerPrivateEndpointConnection = import("./privateEndpointConnectionControllerPrivateEndpointConnection").PrivateEndpointConnectionControllerPrivateEndpointConnection;
export const PrivateEndpointConnectionControllerPrivateEndpointConnection: typeof import("./privateEndpointConnectionControllerPrivateEndpointConnection").PrivateEndpointConnectionControllerPrivateEndpointConnection = null as any;
utilities.lazyLoad(exports, ["PrivateEndpointConnectionControllerPrivateEndpointConnection"], () => require("./privateEndpointConnectionControllerPrivateEndpointConnection"));

export { SolutionArgs } from "./solution";
export type Solution = import("./solution").Solution;
export const Solution: typeof import("./solution").Solution = null as any;
utilities.lazyLoad(exports, ["Solution"], () => require("./solution"));

export { WorkloadDeploymentArgs } from "./workloadDeployment";
export type WorkloadDeployment = import("./workloadDeployment").WorkloadDeployment;
export const WorkloadDeployment: typeof import("./workloadDeployment").WorkloadDeployment = null as any;
utilities.lazyLoad(exports, ["WorkloadDeployment"], () => require("./workloadDeployment"));

export { WorkloadInstanceArgs } from "./workloadInstance";
export type WorkloadInstance = import("./workloadInstance").WorkloadInstance;
export const WorkloadInstance: typeof import("./workloadInstance").WorkloadInstance = null as any;
utilities.lazyLoad(exports, ["WorkloadInstance"], () => require("./workloadInstance"));


// Export enums:
export * from "../types/enums/migrate";

// Export sub-modules:
import * as v20180202 from "./v20180202";
import * as v20180901preview from "./v20180901preview";
import * as v20191001 from "./v20191001";
import * as v20200501 from "./v20200501";
import * as v20220501preview from "./v20220501preview";
import * as v20220801 from "./v20220801";
import * as v20230101 from "./v20230101";
import * as v20230315 from "./v20230315";
import * as v20230801 from "./v20230801";
import * as v20230909preview from "./v20230909preview";

export {
    v20180202,
    v20180901preview,
    v20191001,
    v20200501,
    v20220501preview,
    v20220801,
    v20230101,
    v20230315,
    v20230801,
    v20230909preview,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:migrate:AssessmentProjectsAksAssessmentOperation":
                return new AssessmentProjectsAksAssessmentOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsAssessment":
                return new AssessmentProjectsAssessment(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsAssessmentsOperation":
                return new AssessmentProjectsAssessmentsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsAvsAssessmentsOperation":
                return new AssessmentProjectsAvsAssessmentsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsBusinessCaseOperation":
                return new AssessmentProjectsBusinessCaseOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsGroup":
                return new AssessmentProjectsGroup(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsGroupsOperation":
                return new AssessmentProjectsGroupsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsHyperVCollector":
                return new AssessmentProjectsHyperVCollector(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsHypervCollectorsOperation":
                return new AssessmentProjectsHypervCollectorsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsImportCollector":
                return new AssessmentProjectsImportCollector(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsImportCollectorsOperation":
                return new AssessmentProjectsImportCollectorsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsOperation":
                return new AssessmentProjectsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsPrivateEndpointConnection":
                return new AssessmentProjectsPrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsPrivateEndpointConnectionOperation":
                return new AssessmentProjectsPrivateEndpointConnectionOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsProject":
                return new AssessmentProjectsProject(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsServerCollector":
                return new AssessmentProjectsServerCollector(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsServerCollectorsOperation":
                return new AssessmentProjectsServerCollectorsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsSqlAssessmentV2Operation":
                return new AssessmentProjectsSqlAssessmentV2Operation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsSqlCollectorOperation":
                return new AssessmentProjectsSqlCollectorOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsVMwareCollector":
                return new AssessmentProjectsVMwareCollector(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsVmwareCollectorsOperation":
                return new AssessmentProjectsVmwareCollectorsOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsWebAppAssessmentV2Operation":
                return new AssessmentProjectsWebAppAssessmentV2Operation(name, <any>undefined, { urn })
            case "azure-native:migrate:AssessmentProjectsWebAppCollectorOperation":
                return new AssessmentProjectsWebAppCollectorOperation(name, <any>undefined, { urn })
            case "azure-native:migrate:MigrateAgent":
                return new MigrateAgent(name, <any>undefined, { urn })
            case "azure-native:migrate:MigrateProject":
                return new MigrateProject(name, <any>undefined, { urn })
            case "azure-native:migrate:MigrateProjectsControllerMigrateProject":
                return new MigrateProjectsControllerMigrateProject(name, <any>undefined, { urn })
            case "azure-native:migrate:ModernizeProject":
                return new ModernizeProject(name, <any>undefined, { urn })
            case "azure-native:migrate:MoveCollection":
                return new MoveCollection(name, <any>undefined, { urn })
            case "azure-native:migrate:MoveResource":
                return new MoveResource(name, <any>undefined, { urn })
            case "azure-native:migrate:PrivateEndpointConnectionControllerPrivateEndpointConnection":
                return new PrivateEndpointConnectionControllerPrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:migrate:Solution":
                return new Solution(name, <any>undefined, { urn })
            case "azure-native:migrate:WorkloadDeployment":
                return new WorkloadDeployment(name, <any>undefined, { urn })
            case "azure-native:migrate:WorkloadInstance":
                return new WorkloadInstance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "migrate", _module)
