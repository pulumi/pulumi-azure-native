// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./assessment";
export * from "./getAssessment";
export * from "./getGroup";
export * from "./getHyperVCollector";
export * from "./getImportCollector";
export * from "./getMigrateProject";
export * from "./getMoveCollection";
export * from "./getMoveResource";
export * from "./getPrivateEndpointConnection";
export * from "./getProject";
export * from "./getServerCollector";
export * from "./getSolution";
export * from "./getSolutionConfig";
export * from "./getVMwareCollector";
export * from "./group";
export * from "./hyperVCollector";
export * from "./importCollector";
export * from "./migrateProject";
export * from "./moveCollection";
export * from "./moveResource";
export * from "./privateEndpointConnection";
export * from "./project";
export * from "./serverCollector";
export * from "./solution";
export * from "./vmwareCollector";

// Export enums:
export * from "../types/enums/migrate";

// Export sub-modules:
import * as v20171111preview from "./v20171111preview";
import * as v20180202 from "./v20180202";
import * as v20180901preview from "./v20180901preview";
import * as v20191001 from "./v20191001";
import * as v20191001preview from "./v20191001preview";
import * as v20210101 from "./v20210101";

export {
    v20171111preview,
    v20180202,
    v20180901preview,
    v20191001,
    v20191001preview,
    v20210101,
};

// Import resources to register:
import { Assessment } from "./assessment";
import { Group } from "./group";
import { HyperVCollector } from "./hyperVCollector";
import { ImportCollector } from "./importCollector";
import { MigrateProject } from "./migrateProject";
import { MoveCollection } from "./moveCollection";
import { MoveResource } from "./moveResource";
import { PrivateEndpointConnection } from "./privateEndpointConnection";
import { Project } from "./project";
import { ServerCollector } from "./serverCollector";
import { Solution } from "./solution";
import { VMwareCollector } from "./vmwareCollector";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:migrate:Assessment":
                return new Assessment(name, <any>undefined, { urn })
            case "azure-native:migrate:Group":
                return new Group(name, <any>undefined, { urn })
            case "azure-native:migrate:HyperVCollector":
                return new HyperVCollector(name, <any>undefined, { urn })
            case "azure-native:migrate:ImportCollector":
                return new ImportCollector(name, <any>undefined, { urn })
            case "azure-native:migrate:MigrateProject":
                return new MigrateProject(name, <any>undefined, { urn })
            case "azure-native:migrate:MoveCollection":
                return new MoveCollection(name, <any>undefined, { urn })
            case "azure-native:migrate:MoveResource":
                return new MoveResource(name, <any>undefined, { urn })
            case "azure-native:migrate:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:migrate:Project":
                return new Project(name, <any>undefined, { urn })
            case "azure-native:migrate:ServerCollector":
                return new ServerCollector(name, <any>undefined, { urn })
            case "azure-native:migrate:Solution":
                return new Solution(name, <any>undefined, { urn })
            case "azure-native:migrate:VMwareCollector":
                return new VMwareCollector(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "migrate", _module)
