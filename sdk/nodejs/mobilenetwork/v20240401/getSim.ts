// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets information about the specified SIM.
 */
export function getSim(args: GetSimArgs, opts?: pulumi.InvokeOptions): Promise<GetSimResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:mobilenetwork/v20240401:getSim", {
        "resourceGroupName": args.resourceGroupName,
        "simGroupName": args.simGroupName,
        "simName": args.simName,
    }, opts);
}

export interface GetSimArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the SIM Group.
     */
    simGroupName: string;
    /**
     * The name of the SIM.
     */
    simName: string;
}

/**
 * SIM resource.
 */
export interface GetSimResult {
    /**
     * An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.
     */
    readonly deviceType?: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The integrated circuit card ID (ICCID) for the SIM.
     */
    readonly integratedCircuitCardIdentifier?: string;
    /**
     * The international mobile subscriber identity (IMSI) for the SIM.
     */
    readonly internationalMobileSubscriberIdentity: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The provisioning state of the SIM resource.
     */
    readonly provisioningState: string;
    /**
     * The SIM policy used by this SIM. The SIM policy must be in the same location as the SIM.
     */
    readonly simPolicy?: outputs.mobilenetwork.v20240401.SimPolicyResourceIdResponse;
    /**
     * The state of the SIM resource.
     */
    readonly simState: string;
    /**
     * A dictionary of sites to the provisioning state of this SIM on that site.
     */
    readonly siteProvisioningState: {[key: string]: string};
    /**
     * A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
     */
    readonly staticIpConfiguration?: outputs.mobilenetwork.v20240401.SimStaticIpPropertiesResponse[];
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.mobilenetwork.v20240401.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * The public key fingerprint of the SIM vendor who provided this SIM, if any.
     */
    readonly vendorKeyFingerprint: string;
    /**
     * The name of the SIM vendor who provided this SIM, if any.
     */
    readonly vendorName: string;
}
/**
 * Gets information about the specified SIM.
 */
export function getSimOutput(args: GetSimOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSimResult> {
    return pulumi.output(args).apply((a: any) => getSim(a, opts))
}

export interface GetSimOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the SIM Group.
     */
    simGroupName: pulumi.Input<string>;
    /**
     * The name of the SIM.
     */
    simName: pulumi.Input<string>;
}
