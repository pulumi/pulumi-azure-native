// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * The status of the Canonical support plan.
 */
export function getSupportPlanType(args: GetSupportPlanTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetSupportPlanTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:addons/v20180301:getSupportPlanType", {
        "planTypeName": args.planTypeName,
        "providerName": args.providerName,
    }, opts);
}

export interface GetSupportPlanTypeArgs {
    /**
     * The Canonical support plan type.
     */
    planTypeName: string;
    /**
     * The support plan type. For now the only valid type is "canonical".
     */
    providerName: string;
}

/**
 * The status of the Canonical support plan.
 */
export interface GetSupportPlanTypeResult {
    /**
     * The id of the ARM resource, e.g. "/subscriptions/{id}/providers/Microsoft.Addons/supportProvider/{supportProviderName}/supportPlanTypes/{planTypeName}".
     */
    readonly id: string;
    /**
     * The name of the Canonical support plan, i.e. "essential", "standard" or "advanced".
     */
    readonly name: string;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState?: string;
    /**
     * Microsoft.Addons/supportProvider
     */
    readonly type: string;
}

export function getSupportPlanTypeOutput(args: GetSupportPlanTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSupportPlanTypeResult> {
    return pulumi.output(args).apply(a => getSupportPlanType(a, opts))
}

export interface GetSupportPlanTypeOutputArgs {
    /**
     * The Canonical support plan type.
     */
    planTypeName: pulumi.Input<string>;
    /**
     * The support plan type. For now the only valid type is "canonical".
     */
    providerName: pulumi.Input<string>;
}
