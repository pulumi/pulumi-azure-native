// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Server Endpoint object.
 *
 * @deprecated Version 2017-06-05-preview will be removed in v2 of the provider.
 */
export class ServerEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ServerEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServerEndpoint {
        pulumi.log.warn("ServerEndpoint is deprecated: Version 2017-06-05-preview will be removed in v2 of the provider.")
        return new ServerEndpoint(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:storagesync/v20170605preview:ServerEndpoint';

    /**
     * Returns true if the given object is an instance of ServerEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerEndpoint.__pulumiType;
    }

    /**
     * Bytes in progress
     */
    public readonly byteProgress!: pulumi.Output<number | undefined>;
    /**
     * Bytes total
     */
    public readonly byteTotal!: pulumi.Output<number | undefined>;
    /**
     * Cloud Tiering.
     */
    public readonly cloudTiering!: pulumi.Output<string | undefined>;
    /**
     * current progress type.
     */
    public readonly currentProgressType!: pulumi.Output<string | undefined>;
    /**
     * Friendly Name
     */
    public readonly friendlyName!: pulumi.Output<string | undefined>;
    /**
     * Item download error count.
     */
    public readonly itemDownloadErrorCount!: pulumi.Output<number | undefined>;
    /**
     * Item Progress Count
     */
    public readonly itemProgressCount!: pulumi.Output<number | undefined>;
    /**
     * Item Total Count
     */
    public readonly itemTotalCount!: pulumi.Output<number | undefined>;
    /**
     * Item Upload Error Count.
     */
    public readonly itemUploadErrorCount!: pulumi.Output<number | undefined>;
    /**
     * Last Sync Success
     */
    public readonly lastSyncSuccess!: pulumi.Output<string | undefined>;
    /**
     * ServerEndpoint lastWorkflowId
     */
    public readonly lastWorkflowId!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * ServerEndpoint Provisioning State
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * Server Local path.
     */
    public readonly serverLocalPath!: pulumi.Output<string | undefined>;
    /**
     * Server Resource Id.
     */
    public readonly serverResourceId!: pulumi.Output<string | undefined>;
    /**
     * sync error context.
     */
    public readonly syncErrorContext!: pulumi.Output<string | undefined>;
    /**
     * Sync Error Direction.
     */
    public readonly syncErrorDirection!: pulumi.Output<string | undefined>;
    /**
     * Sync Error State
     */
    public readonly syncErrorState!: pulumi.Output<string | undefined>;
    /**
     * Sync Error State Timestamp
     */
    public readonly syncErrorStateTimestamp!: pulumi.Output<string | undefined>;
    /**
     * Total progress
     */
    public readonly totalProgress!: pulumi.Output<number | undefined>;
    /**
     * The type of the resource
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Level of free space to be maintained by Cloud Tiering if it is enabled.
     */
    public readonly volumeFreeSpacePercent!: pulumi.Output<number | undefined>;

    /**
     * Create a ServerEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2017-06-05-preview will be removed in v2 of the provider. */
    constructor(name: string, args: ServerEndpointArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("ServerEndpoint is deprecated: Version 2017-06-05-preview will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.storageSyncServiceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSyncServiceName'");
            }
            if ((!args || args.syncGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'syncGroupName'");
            }
            resourceInputs["byteProgress"] = args ? args.byteProgress : undefined;
            resourceInputs["byteTotal"] = args ? args.byteTotal : undefined;
            resourceInputs["cloudTiering"] = args ? args.cloudTiering : undefined;
            resourceInputs["currentProgressType"] = args ? args.currentProgressType : undefined;
            resourceInputs["friendlyName"] = args ? args.friendlyName : undefined;
            resourceInputs["itemDownloadErrorCount"] = args ? args.itemDownloadErrorCount : undefined;
            resourceInputs["itemProgressCount"] = args ? args.itemProgressCount : undefined;
            resourceInputs["itemTotalCount"] = args ? args.itemTotalCount : undefined;
            resourceInputs["itemUploadErrorCount"] = args ? args.itemUploadErrorCount : undefined;
            resourceInputs["lastSyncSuccess"] = args ? args.lastSyncSuccess : undefined;
            resourceInputs["lastWorkflowId"] = args ? args.lastWorkflowId : undefined;
            resourceInputs["provisioningState"] = args ? args.provisioningState : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["serverEndpointName"] = args ? args.serverEndpointName : undefined;
            resourceInputs["serverLocalPath"] = args ? args.serverLocalPath : undefined;
            resourceInputs["serverResourceId"] = args ? args.serverResourceId : undefined;
            resourceInputs["storageSyncServiceName"] = args ? args.storageSyncServiceName : undefined;
            resourceInputs["syncErrorContext"] = args ? args.syncErrorContext : undefined;
            resourceInputs["syncErrorDirection"] = args ? args.syncErrorDirection : undefined;
            resourceInputs["syncErrorState"] = args ? args.syncErrorState : undefined;
            resourceInputs["syncErrorStateTimestamp"] = args ? args.syncErrorStateTimestamp : undefined;
            resourceInputs["syncGroupName"] = args ? args.syncGroupName : undefined;
            resourceInputs["totalProgress"] = args ? args.totalProgress : undefined;
            resourceInputs["volumeFreeSpacePercent"] = args ? args.volumeFreeSpacePercent : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["byteProgress"] = undefined /*out*/;
            resourceInputs["byteTotal"] = undefined /*out*/;
            resourceInputs["cloudTiering"] = undefined /*out*/;
            resourceInputs["currentProgressType"] = undefined /*out*/;
            resourceInputs["friendlyName"] = undefined /*out*/;
            resourceInputs["itemDownloadErrorCount"] = undefined /*out*/;
            resourceInputs["itemProgressCount"] = undefined /*out*/;
            resourceInputs["itemTotalCount"] = undefined /*out*/;
            resourceInputs["itemUploadErrorCount"] = undefined /*out*/;
            resourceInputs["lastSyncSuccess"] = undefined /*out*/;
            resourceInputs["lastWorkflowId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["serverLocalPath"] = undefined /*out*/;
            resourceInputs["serverResourceId"] = undefined /*out*/;
            resourceInputs["syncErrorContext"] = undefined /*out*/;
            resourceInputs["syncErrorDirection"] = undefined /*out*/;
            resourceInputs["syncErrorState"] = undefined /*out*/;
            resourceInputs["syncErrorStateTimestamp"] = undefined /*out*/;
            resourceInputs["totalProgress"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["volumeFreeSpacePercent"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:storagesync:ServerEndpoint" }, { type: "azure-native:storagesync/v20180402:ServerEndpoint" }, { type: "azure-native:storagesync/v20180701:ServerEndpoint" }, { type: "azure-native:storagesync/v20181001:ServerEndpoint" }, { type: "azure-native:storagesync/v20190201:ServerEndpoint" }, { type: "azure-native:storagesync/v20190301:ServerEndpoint" }, { type: "azure-native:storagesync/v20190601:ServerEndpoint" }, { type: "azure-native:storagesync/v20191001:ServerEndpoint" }, { type: "azure-native:storagesync/v20200301:ServerEndpoint" }, { type: "azure-native:storagesync/v20200901:ServerEndpoint" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ServerEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServerEndpoint resource.
 */
export interface ServerEndpointArgs {
    /**
     * Bytes in progress
     */
    byteProgress?: pulumi.Input<number>;
    /**
     * Bytes total
     */
    byteTotal?: pulumi.Input<number>;
    /**
     * Cloud Tiering.
     */
    cloudTiering?: pulumi.Input<string>;
    /**
     * current progress type.
     */
    currentProgressType?: pulumi.Input<string>;
    /**
     * Friendly Name
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Item download error count.
     */
    itemDownloadErrorCount?: pulumi.Input<number>;
    /**
     * Item Progress Count
     */
    itemProgressCount?: pulumi.Input<number>;
    /**
     * Item Total Count
     */
    itemTotalCount?: pulumi.Input<number>;
    /**
     * Item Upload Error Count.
     */
    itemUploadErrorCount?: pulumi.Input<number>;
    /**
     * Last Sync Success
     */
    lastSyncSuccess?: pulumi.Input<string>;
    /**
     * ServerEndpoint lastWorkflowId
     */
    lastWorkflowId?: pulumi.Input<string>;
    /**
     * ServerEndpoint Provisioning State
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of Server Endpoint object.
     */
    serverEndpointName?: pulumi.Input<string>;
    /**
     * Server Local path.
     */
    serverLocalPath?: pulumi.Input<string>;
    /**
     * Server Resource Id.
     */
    serverResourceId?: pulumi.Input<string>;
    /**
     * Name of Storage Sync Service resource.
     */
    storageSyncServiceName: pulumi.Input<string>;
    /**
     * sync error context.
     */
    syncErrorContext?: pulumi.Input<string>;
    /**
     * Sync Error Direction.
     */
    syncErrorDirection?: pulumi.Input<string>;
    /**
     * Sync Error State
     */
    syncErrorState?: pulumi.Input<string>;
    /**
     * Sync Error State Timestamp
     */
    syncErrorStateTimestamp?: pulumi.Input<string>;
    /**
     * Name of Sync Group resource.
     */
    syncGroupName: pulumi.Input<string>;
    /**
     * Total progress
     */
    totalProgress?: pulumi.Input<number>;
    /**
     * Level of free space to be maintained by Cloud Tiering if it is enabled.
     */
    volumeFreeSpacePercent?: pulumi.Input<number>;
}
