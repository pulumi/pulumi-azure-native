// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get Database Migration resource.
 */
export function getDatabaseMigrationsMongoToCosmosDbRUMongo(args: GetDatabaseMigrationsMongoToCosmosDbRUMongoArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseMigrationsMongoToCosmosDbRUMongoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:datamigration/v20230715preview:getDatabaseMigrationsMongoToCosmosDbRUMongo", {
        "migrationName": args.migrationName,
        "resourceGroupName": args.resourceGroupName,
        "targetResourceName": args.targetResourceName,
    }, opts);
}

export interface GetDatabaseMigrationsMongoToCosmosDbRUMongoArgs {
    /**
     * Name of the migration.
     */
    migrationName: string;
    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: string;
    /**
     * The name of the target resource/account.
     */
    targetResourceName: string;
}

/**
 * Database Migration Resource for Mongo to CosmosDb.
 */
export interface GetDatabaseMigrationsMongoToCosmosDbRUMongoResult {
    /**
     * List of Mongo Collections to be migrated.
     */
    readonly collectionList?: outputs.datamigration.v20230715preview.MongoMigrationCollectionResponse[];
    /**
     * Database migration end time.
     */
    readonly endedOn: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     *
     * Expected value is 'MongoToCosmosDbMongo'.
     */
    readonly kind: "MongoToCosmosDbMongo";
    /**
     * Error details in case of migration failure.
     */
    readonly migrationFailureError: outputs.datamigration.v20230715preview.ErrorInfoResponse;
    /**
     * ID for current migration operation.
     */
    readonly migrationOperationId?: string;
    /**
     * Resource Id of the Migration Service.
     */
    readonly migrationService?: string;
    /**
     * Migration status.
     */
    readonly migrationStatus: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Error message for migration provisioning failure, if any.
     */
    readonly provisioningError?: string;
    /**
     * Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.
     */
    readonly provisioningState: string;
    /**
     * Resource Id of the target resource.
     */
    readonly scope?: string;
    /**
     * Source Mongo connection details.
     */
    readonly sourceMongoConnection?: outputs.datamigration.v20230715preview.MongoConnectionInformationResponse;
    /**
     * Database migration start time.
     */
    readonly startedOn: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.datamigration.v20230715preview.SystemDataResponse;
    /**
     * Target Cosmos DB Mongo connection details.
     */
    readonly targetMongoConnection?: outputs.datamigration.v20230715preview.MongoConnectionInformationResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get Database Migration resource.
 */
export function getDatabaseMigrationsMongoToCosmosDbRUMongoOutput(args: GetDatabaseMigrationsMongoToCosmosDbRUMongoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseMigrationsMongoToCosmosDbRUMongoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:datamigration/v20230715preview:getDatabaseMigrationsMongoToCosmosDbRUMongo", {
        "migrationName": args.migrationName,
        "resourceGroupName": args.resourceGroupName,
        "targetResourceName": args.targetResourceName,
    }, opts);
}

export interface GetDatabaseMigrationsMongoToCosmosDbRUMongoOutputArgs {
    /**
     * Name of the migration.
     */
    migrationName: pulumi.Input<string>;
    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the target resource/account.
     */
    targetResourceName: pulumi.Input<string>;
}
