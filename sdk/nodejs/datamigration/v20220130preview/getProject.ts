// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * A project resource
 */
export function getProject(args: GetProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:datamigration/v20220130preview:getProject", {
        "groupName": args.groupName,
        "projectName": args.projectName,
        "serviceName": args.serviceName,
    }, opts);
}

export interface GetProjectArgs {
    /**
     * Name of the resource group
     */
    groupName: string;
    /**
     * Name of the project
     */
    projectName: string;
    /**
     * Name of the service
     */
    serviceName: string;
}

/**
 * A project resource
 */
export interface GetProjectResult {
    /**
     * Field that defines the Azure active directory application info, used to connect to the target Azure resource
     */
    readonly azureAuthenticationInfo?: outputs.datamigration.v20220130preview.AzureActiveDirectoryAppResponse;
    /**
     * UTC Date and time when project was created
     */
    readonly creationTime: string;
    /**
     * List of DatabaseInfo
     */
    readonly databasesInfo?: outputs.datamigration.v20220130preview.DatabaseInfoResponse[];
    /**
     * HTTP strong entity tag value. This is ignored if submitted.
     */
    readonly etag?: string;
    readonly id: string;
    readonly location?: string;
    readonly name: string;
    /**
     * The project's provisioning state
     */
    readonly provisioningState: string;
    /**
     * Information for connecting to source
     */
    readonly sourceConnectionInfo?: outputs.datamigration.v20220130preview.MiSqlConnectionInfoResponse | outputs.datamigration.v20220130preview.MongoDbConnectionInfoResponse | outputs.datamigration.v20220130preview.MySqlConnectionInfoResponse | outputs.datamigration.v20220130preview.OracleConnectionInfoResponse | outputs.datamigration.v20220130preview.PostgreSqlConnectionInfoResponse | outputs.datamigration.v20220130preview.SqlConnectionInfoResponse;
    /**
     * Source platform for the project
     */
    readonly sourcePlatform: string;
    readonly systemData: outputs.datamigration.v20220130preview.SystemDataResponse;
    readonly tags?: {[key: string]: string};
    /**
     * Information for connecting to target
     */
    readonly targetConnectionInfo?: outputs.datamigration.v20220130preview.MiSqlConnectionInfoResponse | outputs.datamigration.v20220130preview.MongoDbConnectionInfoResponse | outputs.datamigration.v20220130preview.MySqlConnectionInfoResponse | outputs.datamigration.v20220130preview.OracleConnectionInfoResponse | outputs.datamigration.v20220130preview.PostgreSqlConnectionInfoResponse | outputs.datamigration.v20220130preview.SqlConnectionInfoResponse;
    /**
     * Target platform for the project
     */
    readonly targetPlatform: string;
    readonly type: string;
}

export function getProjectOutput(args: GetProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectResult> {
    return pulumi.output(args).apply(a => getProject(a, opts))
}

export interface GetProjectOutputArgs {
    /**
     * Name of the resource group
     */
    groupName: pulumi.Input<string>;
    /**
     * Name of the project
     */
    projectName: pulumi.Input<string>;
    /**
     * Name of the service
     */
    serviceName: pulumi.Input<string>;
}
