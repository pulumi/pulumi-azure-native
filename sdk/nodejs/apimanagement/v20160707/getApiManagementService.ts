// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getApiManagementService(args: GetApiManagementServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetApiManagementServiceResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azurerm:apimanagement/v20160707:getApiManagementService", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetApiManagementServiceArgs {
    /**
     * The name of the API Management service.
     */
    readonly name: string;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: string;
}

/**
 * Description of an API Management service resource.
 */
export interface GetApiManagementServiceResult {
    /**
     * ETag of the resource.
     */
    readonly etag?: string;
    /**
     * Datacenter location of the API Management service.
     */
    readonly location: string;
    /**
     * Name of the API Management service.
     */
    readonly name: string;
    /**
     * Properties of the API Management service.
     */
    readonly properties: outputs.apimanagement.v20160707.ApiManagementServicePropertiesResponse;
    /**
     * SKU properties of the API Management service.
     */
    readonly sku: outputs.apimanagement.v20160707.ApiManagementServiceSkuPropertiesResponse;
    /**
     * API Management service tags. A maximum of 10 tags can be provided for a resource, and each tag must have a key no greater than 128 characters (and a value no greater than 256 characters).
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type of the API Management service.
     */
    readonly type: string;
}
