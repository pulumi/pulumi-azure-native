// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Gets the details of the client application specified by its identifier.
 *
 * Uses Azure REST API version 2024-10-01-preview.
 */
export function getClientApplication(args: GetClientApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetClientApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:apimanagement:getClientApplication", {
        "clientApplicationId": args.clientApplicationId,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
    }, opts);
}

export interface GetClientApplicationArgs {
    /**
     * Client Application identifier. Must be unique in the current API Management service instance.
     */
    clientApplicationId: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the API Management service.
     */
    serviceName: string;
}

/**
 * Client application details.
 */
export interface GetClientApplicationResult {
    /**
     * The Azure API version of the resource.
     */
    readonly azureApiVersion: string;
    /**
     * Client application description.
     */
    readonly description?: string;
    /**
     * Client application name.
     */
    readonly displayName: string;
    /**
     * Microsoft EntraID Application ID (Client ID). This is the value that is used to identify the application when it is requesting access tokens from Microsoft EntraID. This property is read-only and will be set by the system when the application is created.
     */
    readonly entraApplicationId: string;
    /**
     * Tenant ID is a unique identifier (a GUID) for an organization directory in Microsoft’s cloud. It’s used to identify tenants across Microsoft services.
     */
    readonly entraTenantId: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * A resource identifier for the user who owns the application.
     */
    readonly ownerId: string;
    /**
     * Client application state. The value derives the state of an application based on the statuses of its associated ClientApplicationProductLinks.
     */
    readonly state: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets the details of the client application specified by its identifier.
 *
 * Uses Azure REST API version 2024-10-01-preview.
 */
export function getClientApplicationOutput(args: GetClientApplicationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClientApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:apimanagement:getClientApplication", {
        "clientApplicationId": args.clientApplicationId,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
    }, opts);
}

export interface GetClientApplicationOutputArgs {
    /**
     * Client Application identifier. Must be unique in the current API Management service instance.
     */
    clientApplicationId: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the API Management service.
     */
    serviceName: pulumi.Input<string>;
}
