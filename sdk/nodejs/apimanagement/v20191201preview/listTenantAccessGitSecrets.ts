// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets the Git access configuration for the tenant.
 */
export function listTenantAccessGitSecrets(args: ListTenantAccessGitSecretsArgs, opts?: pulumi.InvokeOptions): Promise<ListTenantAccessGitSecretsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:apimanagement/v20191201preview:listTenantAccessGitSecrets", {
        "accessName": args.accessName,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
    }, opts);
}

export interface ListTenantAccessGitSecretsArgs {
    /**
     * The identifier of the Access configuration.
     */
    accessName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the API Management service.
     */
    serviceName: string;
}

/**
 * Tenant access information contract of the API Management service.
 */
export interface ListTenantAccessGitSecretsResult {
    /**
     * Determines whether direct access is enabled.
     */
    readonly enabled?: boolean;
    /**
     * Identifier.
     */
    readonly id?: string;
    /**
     * Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
     */
    readonly primaryKey?: string;
    /**
     * Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
     */
    readonly secondaryKey?: string;
}
/**
 * Gets the Git access configuration for the tenant.
 */
export function listTenantAccessGitSecretsOutput(args: ListTenantAccessGitSecretsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListTenantAccessGitSecretsResult> {
    return pulumi.output(args).apply((a: any) => listTenantAccessGitSecrets(a, opts))
}

export interface ListTenantAccessGitSecretsOutputArgs {
    /**
     * The identifier of the Access configuration.
     */
    accessName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the API Management service.
     */
    serviceName: pulumi.Input<string>;
}
