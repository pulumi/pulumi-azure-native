// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ApprovalArgs } from "./approval";
export type Approval = import("./approval").Approval;
export const Approval: typeof import("./approval").Approval = null as any;
utilities.lazyLoad(exports, ["Approval"], () => require("./approval"));

export { CommunityArgs } from "./community";
export type Community = import("./community").Community;
export const Community: typeof import("./community").Community = null as any;
utilities.lazyLoad(exports, ["Community"], () => require("./community"));

export { CommunityEndpointArgs } from "./communityEndpoint";
export type CommunityEndpoint = import("./communityEndpoint").CommunityEndpoint;
export const CommunityEndpoint: typeof import("./communityEndpoint").CommunityEndpoint = null as any;
utilities.lazyLoad(exports, ["CommunityEndpoint"], () => require("./communityEndpoint"));

export { EnclaveConnectionArgs } from "./enclaveConnection";
export type EnclaveConnection = import("./enclaveConnection").EnclaveConnection;
export const EnclaveConnection: typeof import("./enclaveConnection").EnclaveConnection = null as any;
utilities.lazyLoad(exports, ["EnclaveConnection"], () => require("./enclaveConnection"));

export { EnclaveEndpointArgs } from "./enclaveEndpoint";
export type EnclaveEndpoint = import("./enclaveEndpoint").EnclaveEndpoint;
export const EnclaveEndpoint: typeof import("./enclaveEndpoint").EnclaveEndpoint = null as any;
utilities.lazyLoad(exports, ["EnclaveEndpoint"], () => require("./enclaveEndpoint"));

export { GetApprovalArgs, GetApprovalResult, GetApprovalOutputArgs } from "./getApproval";
export const getApproval: typeof import("./getApproval").getApproval = null as any;
export const getApprovalOutput: typeof import("./getApproval").getApprovalOutput = null as any;
utilities.lazyLoad(exports, ["getApproval","getApprovalOutput"], () => require("./getApproval"));

export { GetCommunityArgs, GetCommunityResult, GetCommunityOutputArgs } from "./getCommunity";
export const getCommunity: typeof import("./getCommunity").getCommunity = null as any;
export const getCommunityOutput: typeof import("./getCommunity").getCommunityOutput = null as any;
utilities.lazyLoad(exports, ["getCommunity","getCommunityOutput"], () => require("./getCommunity"));

export { GetCommunityEndpointArgs, GetCommunityEndpointResult, GetCommunityEndpointOutputArgs } from "./getCommunityEndpoint";
export const getCommunityEndpoint: typeof import("./getCommunityEndpoint").getCommunityEndpoint = null as any;
export const getCommunityEndpointOutput: typeof import("./getCommunityEndpoint").getCommunityEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getCommunityEndpoint","getCommunityEndpointOutput"], () => require("./getCommunityEndpoint"));

export { GetEnclaveConnectionArgs, GetEnclaveConnectionResult, GetEnclaveConnectionOutputArgs } from "./getEnclaveConnection";
export const getEnclaveConnection: typeof import("./getEnclaveConnection").getEnclaveConnection = null as any;
export const getEnclaveConnectionOutput: typeof import("./getEnclaveConnection").getEnclaveConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getEnclaveConnection","getEnclaveConnectionOutput"], () => require("./getEnclaveConnection"));

export { GetEnclaveEndpointArgs, GetEnclaveEndpointResult, GetEnclaveEndpointOutputArgs } from "./getEnclaveEndpoint";
export const getEnclaveEndpoint: typeof import("./getEnclaveEndpoint").getEnclaveEndpoint = null as any;
export const getEnclaveEndpointOutput: typeof import("./getEnclaveEndpoint").getEnclaveEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getEnclaveEndpoint","getEnclaveEndpointOutput"], () => require("./getEnclaveEndpoint"));

export { GetTransitHubArgs, GetTransitHubResult, GetTransitHubOutputArgs } from "./getTransitHub";
export const getTransitHub: typeof import("./getTransitHub").getTransitHub = null as any;
export const getTransitHubOutput: typeof import("./getTransitHub").getTransitHubOutput = null as any;
utilities.lazyLoad(exports, ["getTransitHub","getTransitHubOutput"], () => require("./getTransitHub"));

export { GetVirtualEnclaveArgs, GetVirtualEnclaveResult, GetVirtualEnclaveOutputArgs } from "./getVirtualEnclave";
export const getVirtualEnclave: typeof import("./getVirtualEnclave").getVirtualEnclave = null as any;
export const getVirtualEnclaveOutput: typeof import("./getVirtualEnclave").getVirtualEnclaveOutput = null as any;
utilities.lazyLoad(exports, ["getVirtualEnclave","getVirtualEnclaveOutput"], () => require("./getVirtualEnclave"));

export { GetWorkloadArgs, GetWorkloadResult, GetWorkloadOutputArgs } from "./getWorkload";
export const getWorkload: typeof import("./getWorkload").getWorkload = null as any;
export const getWorkloadOutput: typeof import("./getWorkload").getWorkloadOutput = null as any;
utilities.lazyLoad(exports, ["getWorkload","getWorkloadOutput"], () => require("./getWorkload"));

export { TransitHubArgs } from "./transitHub";
export type TransitHub = import("./transitHub").TransitHub;
export const TransitHub: typeof import("./transitHub").TransitHub = null as any;
utilities.lazyLoad(exports, ["TransitHub"], () => require("./transitHub"));

export { VirtualEnclaveArgs } from "./virtualEnclave";
export type VirtualEnclave = import("./virtualEnclave").VirtualEnclave;
export const VirtualEnclave: typeof import("./virtualEnclave").VirtualEnclave = null as any;
utilities.lazyLoad(exports, ["VirtualEnclave"], () => require("./virtualEnclave"));

export { WorkloadArgs } from "./workload";
export type Workload = import("./workload").Workload;
export const Workload: typeof import("./workload").Workload = null as any;
utilities.lazyLoad(exports, ["Workload"], () => require("./workload"));


// Export enums:
export * from "../types/enums/mission";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:mission:Approval":
                return new Approval(name, <any>undefined, { urn })
            case "azure-native:mission:Community":
                return new Community(name, <any>undefined, { urn })
            case "azure-native:mission:CommunityEndpoint":
                return new CommunityEndpoint(name, <any>undefined, { urn })
            case "azure-native:mission:EnclaveConnection":
                return new EnclaveConnection(name, <any>undefined, { urn })
            case "azure-native:mission:EnclaveEndpoint":
                return new EnclaveEndpoint(name, <any>undefined, { urn })
            case "azure-native:mission:TransitHub":
                return new TransitHub(name, <any>undefined, { urn })
            case "azure-native:mission:VirtualEnclave":
                return new VirtualEnclave(name, <any>undefined, { urn })
            case "azure-native:mission:Workload":
                return new Workload(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "mission", _module)
