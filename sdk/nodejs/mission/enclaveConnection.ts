// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * EnclaveConnection Model Resource
 *
 * Uses Azure REST API version 2025-05-01-preview.
 *
 * Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class EnclaveConnection extends pulumi.CustomResource {
    /**
     * Get an existing EnclaveConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EnclaveConnection {
        return new EnclaveConnection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:mission:EnclaveConnection';

    /**
     * Returns true if the given object is an instance of EnclaveConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnclaveConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnclaveConnection.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * Community Resource Id.
     */
    declare public readonly communityResourceId: pulumi.Output<string>;
    /**
     * Destination Endpoint Resource Id.
     */
    declare public readonly destinationEndpointId: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Provisioning State.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * List of resource ids modified by enclave Connections.
     */
    declare public /*out*/ readonly resourceCollection: pulumi.Output<string[]>;
    /**
     * Source CIDR.
     */
    declare public readonly sourceCidr: pulumi.Output<string | undefined>;
    /**
     * Source Resource Id.
     */
    declare public readonly sourceResourceId: pulumi.Output<string>;
    /**
     * The state of the enclaveConnection.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.mission.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a EnclaveConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnclaveConnectionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.communityResourceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'communityResourceId'");
            }
            if (args?.destinationEndpointId === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationEndpointId'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.sourceResourceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceResourceId'");
            }
            resourceInputs["communityResourceId"] = args?.communityResourceId;
            resourceInputs["destinationEndpointId"] = args?.destinationEndpointId;
            resourceInputs["enclaveConnectionName"] = args?.enclaveConnectionName;
            resourceInputs["location"] = args?.location;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["sourceCidr"] = args?.sourceCidr;
            resourceInputs["sourceResourceId"] = args?.sourceResourceId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["resourceCollection"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["communityResourceId"] = undefined /*out*/;
            resourceInputs["destinationEndpointId"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["resourceCollection"] = undefined /*out*/;
            resourceInputs["sourceCidr"] = undefined /*out*/;
            resourceInputs["sourceResourceId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:mission/v20240601preview:EnclaveConnection" }, { type: "azure-native:mission/v20241201preview:EnclaveConnection" }, { type: "azure-native:mission/v20250501preview:EnclaveConnection" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(EnclaveConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EnclaveConnection resource.
 */
export interface EnclaveConnectionArgs {
    /**
     * Community Resource Id.
     */
    communityResourceId: pulumi.Input<string>;
    /**
     * Destination Endpoint Resource Id.
     */
    destinationEndpointId: pulumi.Input<string>;
    /**
     * The name of the Enclave Connection Resource
     */
    enclaveConnectionName?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Source CIDR.
     */
    sourceCidr?: pulumi.Input<string>;
    /**
     * Source Resource Id.
     */
    sourceResourceId: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
