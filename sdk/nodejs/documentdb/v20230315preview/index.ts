// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { CassandraResourceCassandraViewArgs } from "./cassandraResourceCassandraView";
export type CassandraResourceCassandraView = import("./cassandraResourceCassandraView").CassandraResourceCassandraView;
export const CassandraResourceCassandraView: typeof import("./cassandraResourceCassandraView").CassandraResourceCassandraView = null as any;
utilities.lazyLoad(exports, ["CassandraResourceCassandraView"], () => require("./cassandraResourceCassandraView"));

export { GetCassandraResourceCassandraViewArgs, GetCassandraResourceCassandraViewResult, GetCassandraResourceCassandraViewOutputArgs } from "./getCassandraResourceCassandraView";
export const getCassandraResourceCassandraView: typeof import("./getCassandraResourceCassandraView").getCassandraResourceCassandraView = null as any;
export const getCassandraResourceCassandraViewOutput: typeof import("./getCassandraResourceCassandraView").getCassandraResourceCassandraViewOutput = null as any;
utilities.lazyLoad(exports, ["getCassandraResourceCassandraView","getCassandraResourceCassandraViewOutput"], () => require("./getCassandraResourceCassandraView"));

export { GetGraphResourceGraphArgs, GetGraphResourceGraphResult, GetGraphResourceGraphOutputArgs } from "./getGraphResourceGraph";
export const getGraphResourceGraph: typeof import("./getGraphResourceGraph").getGraphResourceGraph = null as any;
export const getGraphResourceGraphOutput: typeof import("./getGraphResourceGraph").getGraphResourceGraphOutput = null as any;
utilities.lazyLoad(exports, ["getGraphResourceGraph","getGraphResourceGraphOutput"], () => require("./getGraphResourceGraph"));

export { GetMongoClusterArgs, GetMongoClusterResult, GetMongoClusterOutputArgs } from "./getMongoCluster";
export const getMongoCluster: typeof import("./getMongoCluster").getMongoCluster = null as any;
export const getMongoClusterOutput: typeof import("./getMongoCluster").getMongoClusterOutput = null as any;
utilities.lazyLoad(exports, ["getMongoCluster","getMongoClusterOutput"], () => require("./getMongoCluster"));

export { GetMongoClusterFirewallRuleArgs, GetMongoClusterFirewallRuleResult, GetMongoClusterFirewallRuleOutputArgs } from "./getMongoClusterFirewallRule";
export const getMongoClusterFirewallRule: typeof import("./getMongoClusterFirewallRule").getMongoClusterFirewallRule = null as any;
export const getMongoClusterFirewallRuleOutput: typeof import("./getMongoClusterFirewallRule").getMongoClusterFirewallRuleOutput = null as any;
utilities.lazyLoad(exports, ["getMongoClusterFirewallRule","getMongoClusterFirewallRuleOutput"], () => require("./getMongoClusterFirewallRule"));

export { GraphResourceGraphArgs } from "./graphResourceGraph";
export type GraphResourceGraph = import("./graphResourceGraph").GraphResourceGraph;
export const GraphResourceGraph: typeof import("./graphResourceGraph").GraphResourceGraph = null as any;
utilities.lazyLoad(exports, ["GraphResourceGraph"], () => require("./graphResourceGraph"));

export { ListMongoClusterConnectionStringsArgs, ListMongoClusterConnectionStringsResult, ListMongoClusterConnectionStringsOutputArgs } from "./listMongoClusterConnectionStrings";
export const listMongoClusterConnectionStrings: typeof import("./listMongoClusterConnectionStrings").listMongoClusterConnectionStrings = null as any;
export const listMongoClusterConnectionStringsOutput: typeof import("./listMongoClusterConnectionStrings").listMongoClusterConnectionStringsOutput = null as any;
utilities.lazyLoad(exports, ["listMongoClusterConnectionStrings","listMongoClusterConnectionStringsOutput"], () => require("./listMongoClusterConnectionStrings"));

export { MongoClusterArgs } from "./mongoCluster";
export type MongoCluster = import("./mongoCluster").MongoCluster;
export const MongoCluster: typeof import("./mongoCluster").MongoCluster = null as any;
utilities.lazyLoad(exports, ["MongoCluster"], () => require("./mongoCluster"));

export { MongoClusterFirewallRuleArgs } from "./mongoClusterFirewallRule";
export type MongoClusterFirewallRule = import("./mongoClusterFirewallRule").MongoClusterFirewallRule;
export const MongoClusterFirewallRule: typeof import("./mongoClusterFirewallRule").MongoClusterFirewallRule = null as any;
utilities.lazyLoad(exports, ["MongoClusterFirewallRule"], () => require("./mongoClusterFirewallRule"));


// Export enums:
export * from "../../types/enums/documentdb/v20230315preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:documentdb/v20230315preview:CassandraResourceCassandraView":
                return new CassandraResourceCassandraView(name, <any>undefined, { urn })
            case "azure-native:documentdb/v20230315preview:GraphResourceGraph":
                return new GraphResourceGraph(name, <any>undefined, { urn })
            case "azure-native:documentdb/v20230315preview:MongoCluster":
                return new MongoCluster(name, <any>undefined, { urn })
            case "azure-native:documentdb/v20230315preview:MongoClusterFirewallRule":
                return new MongoClusterFirewallRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "documentdb/v20230315preview", _module)
