// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * An Azure Cosmos DB userDefinedFunction.
 */
export class DatabaseAccountSqlDatabaseContainerUserDefinedFunction extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseAccountSqlDatabaseContainerUserDefinedFunction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseAccountSqlDatabaseContainerUserDefinedFunctionState, opts?: pulumi.CustomResourceOptions): DatabaseAccountSqlDatabaseContainerUserDefinedFunction {
        return new DatabaseAccountSqlDatabaseContainerUserDefinedFunction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:documentdb:DatabaseAccountSqlDatabaseContainerUserDefinedFunction';

    /**
     * Returns true if the given object is an instance of DatabaseAccountSqlDatabaseContainerUserDefinedFunction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseAccountSqlDatabaseContainerUserDefinedFunction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseAccountSqlDatabaseContainerUserDefinedFunction.__pulumiType;
    }

    /**
     * The location of the resource group to which the resource belongs.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The name of the ARM resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The properties of an Azure Cosmos DB userDefinedFunction
     */
    public readonly properties!: pulumi.Output<outputs.documentdb.SqlUserDefinedFunctionGetPropertiesResponse>;
    /**
     * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
     */
    public readonly tags!: pulumi.Output<outputs.documentdb.TagsResponse | undefined>;
    /**
     * The type of Azure resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DatabaseAccountSqlDatabaseContainerUserDefinedFunction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseAccountSqlDatabaseContainerUserDefinedFunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseAccountSqlDatabaseContainerUserDefinedFunctionArgs | DatabaseAccountSqlDatabaseContainerUserDefinedFunctionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as DatabaseAccountSqlDatabaseContainerUserDefinedFunctionState | undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["properties"] = state ? state.properties : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DatabaseAccountSqlDatabaseContainerUserDefinedFunctionArgs | undefined;
            if (!args || args.accountName === undefined) {
                throw new Error("Missing required property 'accountName'");
            }
            if (!args || args.containerName === undefined) {
                throw new Error("Missing required property 'containerName'");
            }
            if (!args || args.databaseName === undefined) {
                throw new Error("Missing required property 'databaseName'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.properties === undefined) {
                throw new Error("Missing required property 'properties'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["containerName"] = args ? args.containerName : undefined;
            inputs["databaseName"] = args ? args.databaseName : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["properties"] = args ? args.properties : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(DatabaseAccountSqlDatabaseContainerUserDefinedFunction.__pulumiType, name, inputs, opts);
    }
}

/**
 * An Azure Cosmos DB userDefinedFunction.
 */
export interface DatabaseAccountSqlDatabaseContainerUserDefinedFunctionState {
    /**
     * The location of the resource group to which the resource belongs.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The name of the ARM resource.
     */
    readonly name: pulumi.Input<string>;
    /**
     * The properties of an Azure Cosmos DB userDefinedFunction
     */
    readonly properties: pulumi.Input<inputs.documentdb.SqlUserDefinedFunctionGetPropertiesResponse>;
    /**
     * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
     */
    readonly tags?: pulumi.Input<inputs.documentdb.TagsResponse>;
    /**
     * The type of Azure resource.
     */
    readonly type: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatabaseAccountSqlDatabaseContainerUserDefinedFunction resource.
 */
export interface DatabaseAccountSqlDatabaseContainerUserDefinedFunctionArgs {
    /**
     * Cosmos DB database account name.
     */
    readonly accountName: pulumi.Input<string>;
    /**
     * Cosmos DB container name.
     */
    readonly containerName: pulumi.Input<string>;
    /**
     * Cosmos DB database name.
     */
    readonly databaseName: pulumi.Input<string>;
    /**
     * The location of the resource group to which the resource belongs.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * Cosmos DB userDefinedFunction name.
     */
    readonly name: pulumi.Input<string>;
    /**
     * Properties to create and update Azure Cosmos DB userDefinedFunction.
     */
    readonly properties: pulumi.Input<inputs.documentdb.SqlUserDefinedFunctionCreateUpdateProperties>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
     */
    readonly tags?: pulumi.Input<inputs.documentdb.Tags>;
}
