// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./cassandraCluster";
export * from "./cassandraDataCenter";
export * from "./cassandraResourceCassandraKeyspace";
export * from "./cassandraResourceCassandraTable";
export * from "./databaseAccount";
export * from "./getCassandraCluster";
export * from "./getCassandraDataCenter";
export * from "./getCassandraResourceCassandraKeyspace";
export * from "./getCassandraResourceCassandraTable";
export * from "./getDatabaseAccount";
export * from "./getGremlinResourceGremlinDatabase";
export * from "./getGremlinResourceGremlinGraph";
export * from "./getMongoDBResourceMongoDBCollection";
export * from "./getMongoDBResourceMongoDBDatabase";
export * from "./getNotebookWorkspace";
export * from "./getPrivateEndpointConnection";
export * from "./getSqlResourceSqlContainer";
export * from "./getSqlResourceSqlDatabase";
export * from "./getSqlResourceSqlRoleAssignment";
export * from "./getSqlResourceSqlRoleDefinition";
export * from "./getSqlResourceSqlStoredProcedure";
export * from "./getSqlResourceSqlTrigger";
export * from "./getSqlResourceSqlUserDefinedFunction";
export * from "./getTableResourceTable";
export * from "./gremlinResourceGremlinDatabase";
export * from "./gremlinResourceGremlinGraph";
export * from "./listDatabaseAccountConnectionStrings";
export * from "./listDatabaseAccountKeys";
export * from "./listNotebookWorkspaceConnectionInfo";
export * from "./mongoDBResourceMongoDBCollection";
export * from "./mongoDBResourceMongoDBDatabase";
export * from "./notebookWorkspace";
export * from "./privateEndpointConnection";
export * from "./sqlResourceSqlContainer";
export * from "./sqlResourceSqlDatabase";
export * from "./sqlResourceSqlRoleAssignment";
export * from "./sqlResourceSqlRoleDefinition";
export * from "./sqlResourceSqlStoredProcedure";
export * from "./sqlResourceSqlTrigger";
export * from "./sqlResourceSqlUserDefinedFunction";
export * from "./tableResourceTable";

// Export enums:
export * from "../types/enums/documentdb";

// Export sub-modules:
import * as v20150401 from "./v20150401";
import * as v20150408 from "./v20150408";
import * as v20151106 from "./v20151106";
import * as v20160319 from "./v20160319";
import * as v20160331 from "./v20160331";
import * as v20190801 from "./v20190801";
import * as v20190801preview from "./v20190801preview";
import * as v20191212 from "./v20191212";
import * as v20200301 from "./v20200301";
import * as v20200401 from "./v20200401";
import * as v20200601preview from "./v20200601preview";
import * as v20200901 from "./v20200901";
import * as v20210115 from "./v20210115";
import * as v20210301preview from "./v20210301preview";
import * as v20210315 from "./v20210315";
import * as v20210401preview from "./v20210401preview";
import * as v20210415 from "./v20210415";

export {
    v20150401,
    v20150408,
    v20151106,
    v20160319,
    v20160331,
    v20190801,
    v20190801preview,
    v20191212,
    v20200301,
    v20200401,
    v20200601preview,
    v20200901,
    v20210115,
    v20210301preview,
    v20210315,
    v20210401preview,
    v20210415,
};

// Import resources to register:
import { CassandraCluster } from "./cassandraCluster";
import { CassandraDataCenter } from "./cassandraDataCenter";
import { CassandraResourceCassandraKeyspace } from "./cassandraResourceCassandraKeyspace";
import { CassandraResourceCassandraTable } from "./cassandraResourceCassandraTable";
import { DatabaseAccount } from "./databaseAccount";
import { GremlinResourceGremlinDatabase } from "./gremlinResourceGremlinDatabase";
import { GremlinResourceGremlinGraph } from "./gremlinResourceGremlinGraph";
import { MongoDBResourceMongoDBCollection } from "./mongoDBResourceMongoDBCollection";
import { MongoDBResourceMongoDBDatabase } from "./mongoDBResourceMongoDBDatabase";
import { NotebookWorkspace } from "./notebookWorkspace";
import { PrivateEndpointConnection } from "./privateEndpointConnection";
import { SqlResourceSqlContainer } from "./sqlResourceSqlContainer";
import { SqlResourceSqlDatabase } from "./sqlResourceSqlDatabase";
import { SqlResourceSqlRoleAssignment } from "./sqlResourceSqlRoleAssignment";
import { SqlResourceSqlRoleDefinition } from "./sqlResourceSqlRoleDefinition";
import { SqlResourceSqlStoredProcedure } from "./sqlResourceSqlStoredProcedure";
import { SqlResourceSqlTrigger } from "./sqlResourceSqlTrigger";
import { SqlResourceSqlUserDefinedFunction } from "./sqlResourceSqlUserDefinedFunction";
import { TableResourceTable } from "./tableResourceTable";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:documentdb:CassandraCluster":
                return new CassandraCluster(name, <any>undefined, { urn })
            case "azure-native:documentdb:CassandraDataCenter":
                return new CassandraDataCenter(name, <any>undefined, { urn })
            case "azure-native:documentdb:CassandraResourceCassandraKeyspace":
                return new CassandraResourceCassandraKeyspace(name, <any>undefined, { urn })
            case "azure-native:documentdb:CassandraResourceCassandraTable":
                return new CassandraResourceCassandraTable(name, <any>undefined, { urn })
            case "azure-native:documentdb:DatabaseAccount":
                return new DatabaseAccount(name, <any>undefined, { urn })
            case "azure-native:documentdb:GremlinResourceGremlinDatabase":
                return new GremlinResourceGremlinDatabase(name, <any>undefined, { urn })
            case "azure-native:documentdb:GremlinResourceGremlinGraph":
                return new GremlinResourceGremlinGraph(name, <any>undefined, { urn })
            case "azure-native:documentdb:MongoDBResourceMongoDBCollection":
                return new MongoDBResourceMongoDBCollection(name, <any>undefined, { urn })
            case "azure-native:documentdb:MongoDBResourceMongoDBDatabase":
                return new MongoDBResourceMongoDBDatabase(name, <any>undefined, { urn })
            case "azure-native:documentdb:NotebookWorkspace":
                return new NotebookWorkspace(name, <any>undefined, { urn })
            case "azure-native:documentdb:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:documentdb:SqlResourceSqlContainer":
                return new SqlResourceSqlContainer(name, <any>undefined, { urn })
            case "azure-native:documentdb:SqlResourceSqlDatabase":
                return new SqlResourceSqlDatabase(name, <any>undefined, { urn })
            case "azure-native:documentdb:SqlResourceSqlRoleAssignment":
                return new SqlResourceSqlRoleAssignment(name, <any>undefined, { urn })
            case "azure-native:documentdb:SqlResourceSqlRoleDefinition":
                return new SqlResourceSqlRoleDefinition(name, <any>undefined, { urn })
            case "azure-native:documentdb:SqlResourceSqlStoredProcedure":
                return new SqlResourceSqlStoredProcedure(name, <any>undefined, { urn })
            case "azure-native:documentdb:SqlResourceSqlTrigger":
                return new SqlResourceSqlTrigger(name, <any>undefined, { urn })
            case "azure-native:documentdb:SqlResourceSqlUserDefinedFunction":
                return new SqlResourceSqlUserDefinedFunction(name, <any>undefined, { urn })
            case "azure-native:documentdb:TableResourceTable":
                return new TableResourceTable(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "documentdb", _module)
