// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { CustomLocationArgs } from "./customLocation";
export type CustomLocation = import("./customLocation").CustomLocation;
export const CustomLocation: typeof import("./customLocation").CustomLocation = null as any;
utilities.lazyLoad(exports, ["CustomLocation"], () => require("./customLocation"));

export { GetCustomLocationArgs, GetCustomLocationResult, GetCustomLocationOutputArgs } from "./getCustomLocation";
export const getCustomLocation: typeof import("./getCustomLocation").getCustomLocation = null as any;
export const getCustomLocationOutput: typeof import("./getCustomLocation").getCustomLocationOutput = null as any;
utilities.lazyLoad(exports, ["getCustomLocation","getCustomLocationOutput"], () => require("./getCustomLocation"));


// Export enums:
export * from "../../types/enums/extendedlocation/v20210315preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:extendedlocation/v20210315preview:CustomLocation":
                return new CustomLocation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "extendedlocation/v20210315preview", _module)
