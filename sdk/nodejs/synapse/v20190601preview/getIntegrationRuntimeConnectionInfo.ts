// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Get connection info for an integration runtime
 */
export function getIntegrationRuntimeConnectionInfo(args: GetIntegrationRuntimeConnectionInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetIntegrationRuntimeConnectionInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:synapse/v20190601preview:getIntegrationRuntimeConnectionInfo", {
        "integrationRuntimeName": args.integrationRuntimeName,
        "resourceGroupName": args.resourceGroupName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetIntegrationRuntimeConnectionInfoArgs {
    /**
     * Integration runtime name
     */
    integrationRuntimeName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}

/**
 * Connection information for encrypting the on-premises data source credentials.
 */
export interface GetIntegrationRuntimeConnectionInfoResult {
    /**
     * The on-premises integration runtime host URL.
     */
    readonly hostServiceUri: string;
    /**
     * The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.
     */
    readonly identityCertThumbprint: string;
    /**
     * Whether the identity certificate is expired.
     */
    readonly isIdentityCertExprired: boolean;
    /**
     * The public key for encrypting a credential when transferring the credential to the integration runtime.
     */
    readonly publicKey: string;
    /**
     * The token generated in service. Callers use this token to authenticate to integration runtime.
     */
    readonly serviceToken: string;
    /**
     * The integration runtime version.
     */
    readonly version: string;
}
/**
 * Get connection info for an integration runtime
 */
export function getIntegrationRuntimeConnectionInfoOutput(args: GetIntegrationRuntimeConnectionInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIntegrationRuntimeConnectionInfoResult> {
    return pulumi.output(args).apply((a: any) => getIntegrationRuntimeConnectionInfo(a, opts))
}

export interface GetIntegrationRuntimeConnectionInfoOutputArgs {
    /**
     * Integration runtime name
     */
    integrationRuntimeName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
