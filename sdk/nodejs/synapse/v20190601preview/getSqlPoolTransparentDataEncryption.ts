// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getSqlPoolTransparentDataEncryption(args: GetSqlPoolTransparentDataEncryptionArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlPoolTransparentDataEncryptionResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:synapse/v20190601preview:getSqlPoolTransparentDataEncryption", {
        "resourceGroupName": args.resourceGroupName,
        "sqlPoolName": args.sqlPoolName,
        "transparentDataEncryptionName": args.transparentDataEncryptionName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetSqlPoolTransparentDataEncryptionArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    readonly resourceGroupName: string;
    /**
     * SQL pool name
     */
    readonly sqlPoolName: string;
    /**
     * The name of the transparent data encryption configuration.
     */
    readonly transparentDataEncryptionName: string;
    /**
     * The name of the workspace
     */
    readonly workspaceName: string;
}

/**
 * Represents a Sql pool transparent data encryption configuration.
 */
export interface GetSqlPoolTransparentDataEncryptionResult {
    /**
     * Resource location.
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The status of the database transparent data encryption.
     */
    readonly status?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
