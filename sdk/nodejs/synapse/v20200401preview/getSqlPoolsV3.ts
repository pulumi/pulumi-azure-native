// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a SqlPool.
 */
/** @deprecated Version 2020-04-01-preview will be removed in v2 of the provider. */
export function getSqlPoolsV3(args: GetSqlPoolsV3Args, opts?: pulumi.InvokeOptions): Promise<GetSqlPoolsV3Result> {
    pulumi.log.warn("getSqlPoolsV3 is deprecated: Version 2020-04-01-preview will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:synapse/v20200401preview:getSqlPoolsV3", {
        "resourceGroupName": args.resourceGroupName,
        "sqlPoolName": args.sqlPoolName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetSqlPoolsV3Args {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the sql pool.
     */
    sqlPoolName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}

/**
 * A sql pool resource.
 */
export interface GetSqlPoolsV3Result {
    /**
     * The period of inactivity in minutes before automatically pausing the sql pool.
     */
    readonly autoPauseTimer?: number;
    /**
     * Indicates whether the sql pool can automatically resume when connection attempts are made.
     */
    readonly autoResume?: boolean;
    /**
     * The current service level objective name of the sql pool.
     */
    readonly currentServiceObjectiveName: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Kind of SqlPool.
     */
    readonly kind: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The max service level objective name of the sql pool.
     */
    readonly maxServiceObjectiveName?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The requested service level objective name of the sql pool.
     */
    readonly requestedServiceObjectiveName: string;
    /**
     * The sql pool SKU. The list of SKUs may vary by region and support offer.
     */
    readonly sku?: outputs.synapse.v20200401preview.SkuV3Response;
    /**
     * The Guid of the sql pool.
     */
    readonly sqlPoolGuid: string;
    /**
     * The status of the sql pool.
     */
    readonly status: string;
    /**
     * SystemData of SqlPool.
     */
    readonly systemData: outputs.synapse.v20200401preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets a SqlPool.
 */
/** @deprecated Version 2020-04-01-preview will be removed in v2 of the provider. */
export function getSqlPoolsV3Output(args: GetSqlPoolsV3OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlPoolsV3Result> {
    return pulumi.output(args).apply((a: any) => getSqlPoolsV3(a, opts))
}

export interface GetSqlPoolsV3OutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the sql pool.
     */
    sqlPoolName: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
