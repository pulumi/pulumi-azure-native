// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./bigDataPool";
export * from "./getBigDataPool";
export * from "./getIntegrationRuntime";
export * from "./getIntegrationRuntimeConnectionInfo";
export * from "./getIntegrationRuntimeObjectMetadatum";
export * from "./getIntegrationRuntimeStatus";
export * from "./getIpFirewallRule";
export * from "./getKey";
export * from "./getPrivateEndpointConnection";
export * from "./getPrivateLinkHub";
export * from "./getSqlPool";
export * from "./getSqlPoolSensitivityLabel";
export * from "./getSqlPoolTransparentDataEncryption";
export * from "./getSqlPoolVulnerabilityAssessment";
export * from "./getSqlPoolVulnerabilityAssessmentRuleBaseline";
export * from "./getSqlPoolWorkloadClassifier";
export * from "./getSqlPoolWorkloadGroup";
export * from "./getWorkspace";
export * from "./getWorkspaceAadAdmin";
export * from "./getWorkspaceManagedSqlServerVulnerabilityAssessment";
export * from "./getWorkspaceSqlAadAdmin";
export * from "./integrationRuntime";
export * from "./ipFirewallRule";
export * from "./key";
export * from "./listIntegrationRuntimeAuthKey";
export * from "./privateEndpointConnection";
export * from "./privateLinkHub";
export * from "./sqlPool";
export * from "./sqlPoolSensitivityLabel";
export * from "./sqlPoolTransparentDataEncryption";
export * from "./sqlPoolVulnerabilityAssessment";
export * from "./sqlPoolVulnerabilityAssessmentRuleBaseline";
export * from "./sqlPoolWorkloadClassifier";
export * from "./sqlPoolWorkloadGroup";
export * from "./workspace";
export * from "./workspaceAadAdmin";
export * from "./workspaceManagedSqlServerVulnerabilityAssessment";
export * from "./workspaceSqlAadAdmin";

// Export enums:
export * from "../types/enums/synapse";

// Export sub-modules:
import * as latest from "./latest";
import * as v20190601preview from "./v20190601preview";
import * as v20200401preview from "./v20200401preview";
import * as v20201201 from "./v20201201";

export {
    latest,
    v20190601preview,
    v20200401preview,
    v20201201,
};

// Import resources to register:
import { BigDataPool } from "./bigDataPool";
import { IntegrationRuntime } from "./integrationRuntime";
import { IpFirewallRule } from "./ipFirewallRule";
import { Key } from "./key";
import { PrivateEndpointConnection } from "./privateEndpointConnection";
import { PrivateLinkHub } from "./privateLinkHub";
import { SqlPool } from "./sqlPool";
import { SqlPoolSensitivityLabel } from "./sqlPoolSensitivityLabel";
import { SqlPoolTransparentDataEncryption } from "./sqlPoolTransparentDataEncryption";
import { SqlPoolVulnerabilityAssessment } from "./sqlPoolVulnerabilityAssessment";
import { SqlPoolVulnerabilityAssessmentRuleBaseline } from "./sqlPoolVulnerabilityAssessmentRuleBaseline";
import { SqlPoolWorkloadClassifier } from "./sqlPoolWorkloadClassifier";
import { SqlPoolWorkloadGroup } from "./sqlPoolWorkloadGroup";
import { Workspace } from "./workspace";
import { WorkspaceAadAdmin } from "./workspaceAadAdmin";
import { WorkspaceManagedSqlServerVulnerabilityAssessment } from "./workspaceManagedSqlServerVulnerabilityAssessment";
import { WorkspaceSqlAadAdmin } from "./workspaceSqlAadAdmin";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:synapse:BigDataPool":
                return new BigDataPool(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:IntegrationRuntime":
                return new IntegrationRuntime(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:IpFirewallRule":
                return new IpFirewallRule(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:Key":
                return new Key(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:PrivateLinkHub":
                return new PrivateLinkHub(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:SqlPool":
                return new SqlPool(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:SqlPoolSensitivityLabel":
                return new SqlPoolSensitivityLabel(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:SqlPoolTransparentDataEncryption":
                return new SqlPoolTransparentDataEncryption(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:SqlPoolVulnerabilityAssessment":
                return new SqlPoolVulnerabilityAssessment(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:SqlPoolVulnerabilityAssessmentRuleBaseline":
                return new SqlPoolVulnerabilityAssessmentRuleBaseline(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:SqlPoolWorkloadClassifier":
                return new SqlPoolWorkloadClassifier(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:SqlPoolWorkloadGroup":
                return new SqlPoolWorkloadGroup(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:Workspace":
                return new Workspace(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:WorkspaceAadAdmin":
                return new WorkspaceAadAdmin(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:WorkspaceManagedSqlServerVulnerabilityAssessment":
                return new WorkspaceManagedSqlServerVulnerabilityAssessment(name, <any>undefined, { urn })
            case "azure-nextgen:synapse:WorkspaceSqlAadAdmin":
                return new WorkspaceSqlAadAdmin(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "synapse", _module)
