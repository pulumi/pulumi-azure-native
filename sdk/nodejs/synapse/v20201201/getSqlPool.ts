// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get SQL pool properties
 */
/** @deprecated Version 2020-12-01 will be removed in v2 of the provider. */
export function getSqlPool(args: GetSqlPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlPoolResult> {
    pulumi.log.warn("getSqlPool is deprecated: Version 2020-12-01 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:synapse/v20201201:getSqlPool", {
        "resourceGroupName": args.resourceGroupName,
        "sqlPoolName": args.sqlPoolName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetSqlPoolArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * SQL pool name
     */
    sqlPoolName: string;
    /**
     * The name of the workspace
     */
    workspaceName: string;
}

/**
 * A SQL Analytics pool
 */
export interface GetSqlPoolResult {
    /**
     * Collation mode
     */
    readonly collation?: string;
    /**
     * Specifies the mode of sql pool creation.
     *
     * Default: regular sql pool creation.
     *
     * PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.
     *
     * Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.
     *
     * Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.
     */
    readonly createMode?: string;
    /**
     * Date the SQL pool was created
     */
    readonly creationDate?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Maximum size in bytes
     */
    readonly maxSizeBytes?: number;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Resource state
     */
    readonly provisioningState?: string;
    /**
     * Backup database to restore from
     */
    readonly recoverableDatabaseId?: string;
    /**
     * Snapshot time to restore
     */
    readonly restorePointInTime?: string;
    /**
     * SQL pool SKU
     */
    readonly sku?: outputs.synapse.v20201201.SkuResponse;
    /**
     * Source database to create from
     */
    readonly sourceDatabaseId?: string;
    /**
     * Resource status
     */
    readonly status?: string;
    /**
     * The storage account type used to store backups for this sql pool.
     */
    readonly storageAccountType?: string;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get SQL pool properties
 */
/** @deprecated Version 2020-12-01 will be removed in v2 of the provider. */
export function getSqlPoolOutput(args: GetSqlPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlPoolResult> {
    return pulumi.output(args).apply((a: any) => getSqlPool(a, opts))
}

export interface GetSqlPoolOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * SQL pool name
     */
    sqlPoolName: pulumi.Input<string>;
    /**
     * The name of the workspace
     */
    workspaceName: pulumi.Input<string>;
}
