// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get a StorageClassResource
 */
export function getStorageClass(args: GetStorageClassArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageClassResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:kubernetesruntime/v20240301:getStorageClass", {
        "resourceUri": args.resourceUri,
        "storageClassName": args.storageClassName,
    }, opts);
}

export interface GetStorageClassArgs {
    /**
     * The fully qualified Azure Resource manager identifier of the resource.
     */
    resourceUri: string;
    /**
     * The name of the the storage class
     */
    storageClassName: string;
}

/**
 * A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)
 */
export interface GetStorageClassResult {
    /**
     * The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]
     */
    readonly accessModes?: string[];
    /**
     * Volume can be expanded or not
     */
    readonly allowVolumeExpansion?: string;
    /**
     * Allow single data node failure
     */
    readonly dataResilience?: string;
    /**
     * Failover speed: NA, Slow, Fast
     */
    readonly failoverSpeed?: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * Limitations of the storage class
     */
    readonly limitations?: string[];
    /**
     * Additional mount options
     */
    readonly mountOptions?: string[];
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Performance tier
     */
    readonly performance?: string;
    /**
     * Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use
     */
    readonly priority?: number;
    /**
     * Provisioner name
     */
    readonly provisioner?: string;
    /**
     * Resource provision state
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.kubernetesruntime.v20240301.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Properties of the StorageClass
     */
    readonly typeProperties: outputs.kubernetesruntime.v20240301.BlobStorageClassTypePropertiesResponse | outputs.kubernetesruntime.v20240301.NativeStorageClassTypePropertiesResponse | outputs.kubernetesruntime.v20240301.NfsStorageClassTypePropertiesResponse | outputs.kubernetesruntime.v20240301.RwxStorageClassTypePropertiesResponse | outputs.kubernetesruntime.v20240301.SmbStorageClassTypePropertiesResponse;
    /**
     * Binding mode of volumes: Immediate, WaitForFirstConsumer
     */
    readonly volumeBindingMode?: string;
}
/**
 * Get a StorageClassResource
 */
export function getStorageClassOutput(args: GetStorageClassOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageClassResult> {
    return pulumi.output(args).apply((a: any) => getStorageClass(a, opts))
}

export interface GetStorageClassOutputArgs {
    /**
     * The fully qualified Azure Resource manager identifier of the resource.
     */
    resourceUri: pulumi.Input<string>;
    /**
     * The name of the the storage class
     */
    storageClassName: pulumi.Input<string>;
}
