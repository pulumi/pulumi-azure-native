// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Get a NamespaceAsset
 *
 * Uses Azure REST API version 2025-07-01-preview.
 *
 * Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export function getNamespaceAsset(args: GetNamespaceAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceAssetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:deviceregistry:getNamespaceAsset", {
        "assetName": args.assetName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetNamespaceAssetArgs {
    /**
     * The name of the asset.
     */
    assetName: string;
    /**
     * The name of the namespace.
     */
    namespaceName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Asset definition.
 */
export interface GetNamespaceAssetResult {
    /**
     * URIs or type definition IDs.
     */
    readonly assetTypeRefs?: string[];
    /**
     * A set of key-value pairs that contain custom attributes set by the customer.
     */
    readonly attributes?: any;
    /**
     * The Azure API version of the resource.
     */
    readonly azureApiVersion: string;
    /**
     * Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
     */
    readonly datasets?: outputs.deviceregistry.NamespaceDatasetResponse[];
    /**
     * Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
     */
    readonly defaultDatasetsConfiguration?: string;
    /**
     * Default destinations for a dataset.
     */
    readonly defaultDatasetsDestinations?: (outputs.deviceregistry.DatasetBrokerStateStoreDestinationResponse | outputs.deviceregistry.DatasetMqttDestinationResponse | outputs.deviceregistry.DatasetStorageDestinationResponse)[];
    /**
     * Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
     */
    readonly defaultEventsConfiguration?: string;
    /**
     * Default destinations for an event.
     */
    readonly defaultEventsDestinations?: (outputs.deviceregistry.EventMqttDestinationResponse | outputs.deviceregistry.EventStorageDestinationResponse)[];
    /**
     * Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.
     */
    readonly defaultManagementGroupsConfiguration?: string;
    /**
     * Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.
     */
    readonly defaultStreamsConfiguration?: string;
    /**
     * Default destinations for a stream.
     */
    readonly defaultStreamsDestinations?: (outputs.deviceregistry.StreamMqttDestinationResponse | outputs.deviceregistry.StreamStorageDestinationResponse)[];
    /**
     * Human-readable description of the asset.
     */
    readonly description?: string;
    /**
     * Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.
     */
    readonly deviceRef: outputs.deviceregistry.DeviceRefResponse;
    /**
     * Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.
     */
    readonly discoveredAssetRefs?: string[];
    /**
     * Human-readable display name.
     */
    readonly displayName?: string;
    /**
     * Asset documentation reference.
     */
    readonly documentationUri?: string;
    /**
     * Enabled/disabled status of the asset.
     */
    readonly enabled?: boolean;
    /**
     * Array of events that are part of the asset. Each event can have per-event configuration.
     */
    readonly events?: outputs.deviceregistry.NamespaceEventResponse[];
    /**
     * The extended location.
     */
    readonly extendedLocation: outputs.deviceregistry.ExtendedLocationResponse;
    /**
     * Asset ID provided by the customer.
     */
    readonly externalAssetId?: string;
    /**
     * Asset hardware revision number.
     */
    readonly hardwareRevision?: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * A timestamp (in UTC) that is updated each time the resource is modified.
     */
    readonly lastTransitionTime: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Array of management groups that are part of the asset. Each management group can have a per-group configuration.
     */
    readonly managementGroups?: outputs.deviceregistry.ManagementGroupResponse[];
    /**
     * Asset manufacturer.
     */
    readonly manufacturer?: string;
    /**
     * Asset manufacturer URI.
     */
    readonly manufacturerUri?: string;
    /**
     * Asset model.
     */
    readonly model?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Asset product code.
     */
    readonly productCode?: string;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * Asset serial number.
     */
    readonly serialNumber?: string;
    /**
     * Asset software revision number.
     */
    readonly softwareRevision?: string;
    /**
     * Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.
     */
    readonly status: outputs.deviceregistry.NamespaceAssetStatusResponse;
    /**
     * Array of streams that are part of the asset. Each stream can have a per-stream configuration.
     */
    readonly streams?: outputs.deviceregistry.NamespaceStreamResponse[];
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.deviceregistry.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Globally unique, immutable, non-reusable ID.
     */
    readonly uuid: string;
    /**
     * An integer that is incremented each time the resource is modified.
     */
    readonly version: number;
}
/**
 * Get a NamespaceAsset
 *
 * Uses Azure REST API version 2025-07-01-preview.
 *
 * Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export function getNamespaceAssetOutput(args: GetNamespaceAssetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNamespaceAssetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:deviceregistry:getNamespaceAsset", {
        "assetName": args.assetName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetNamespaceAssetOutputArgs {
    /**
     * The name of the asset.
     */
    assetName: pulumi.Input<string>;
    /**
     * The name of the namespace.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
