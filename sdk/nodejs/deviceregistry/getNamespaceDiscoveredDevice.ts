// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Get a NamespaceDiscoveredDevice
 *
 * Uses Azure REST API version 2025-07-01-preview.
 *
 * Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export function getNamespaceDiscoveredDevice(args: GetNamespaceDiscoveredDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceDiscoveredDeviceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:deviceregistry:getNamespaceDiscoveredDevice", {
        "discoveredDeviceName": args.discoveredDeviceName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetNamespaceDiscoveredDeviceArgs {
    /**
     * The name of the discovered device.
     */
    discoveredDeviceName: string;
    /**
     * The name of the namespace.
     */
    namespaceName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Discovered device definition.
 */
export interface GetNamespaceDiscoveredDeviceResult {
    /**
     * A set of key-value pairs that contain custom attributes.
     */
    readonly attributes?: any;
    /**
     * The Azure API version of the resource.
     */
    readonly azureApiVersion: string;
    /**
     * Identifier used to detect changes in the discovered device.
     */
    readonly discoveryId: string;
    /**
     * Endpoints for discovered devices.
     */
    readonly endpoints?: outputs.deviceregistry.DiscoveredMessagingEndpointsResponse;
    /**
     * The extended location.
     */
    readonly extendedLocation: outputs.deviceregistry.ExtendedLocationResponse;
    /**
     * A device ID that represents the device in a system external to Azure. Unique within scope of an Azure tenant.
     */
    readonly externalDeviceId?: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Device manufacturer.
     */
    readonly manufacturer?: string;
    /**
     * Device model.
     */
    readonly model?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Device operating system name.
     */
    readonly operatingSystem?: string;
    /**
     * Device operating system version.
     */
    readonly operatingSystemVersion?: string;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.deviceregistry.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * An integer that is incremented each time the resource is modified.
     */
    readonly version: number;
}
/**
 * Get a NamespaceDiscoveredDevice
 *
 * Uses Azure REST API version 2025-07-01-preview.
 *
 * Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export function getNamespaceDiscoveredDeviceOutput(args: GetNamespaceDiscoveredDeviceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNamespaceDiscoveredDeviceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:deviceregistry:getNamespaceDiscoveredDevice", {
        "discoveredDeviceName": args.discoveredDeviceName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetNamespaceDiscoveredDeviceOutputArgs {
    /**
     * The name of the discovered device.
     */
    discoveredDeviceName: pulumi.Input<string>;
    /**
     * The name of the namespace.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
