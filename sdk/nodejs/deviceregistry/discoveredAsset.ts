// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Discovered Asset definition.
 *
 * Uses Azure REST API version 2024-09-01-preview. In version 2.x of the Azure Native provider, it used API version 2024-09-01-preview.
 */
export class DiscoveredAsset extends pulumi.CustomResource {
    /**
     * Get an existing DiscoveredAsset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DiscoveredAsset {
        return new DiscoveredAsset(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:deviceregistry:DiscoveredAsset';

    /**
     * Returns true if the given object is an instance of DiscoveredAsset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DiscoveredAsset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DiscoveredAsset.__pulumiType;
    }

    /**
     * A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.
     */
    declare public readonly assetEndpointProfileRef: pulumi.Output<string>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.
     */
    declare public readonly datasets: pulumi.Output<outputs.deviceregistry.DiscoveredDatasetResponse[] | undefined>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
     */
    declare public readonly defaultDatasetsConfiguration: pulumi.Output<string | undefined>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
     */
    declare public readonly defaultEventsConfiguration: pulumi.Output<string | undefined>;
    /**
     * Object that describes the default topic information for the asset.
     */
    declare public readonly defaultTopic: pulumi.Output<outputs.deviceregistry.TopicResponse | undefined>;
    /**
     * Identifier used to detect changes in the asset.
     */
    declare public readonly discoveryId: pulumi.Output<string>;
    /**
     * Reference to the documentation.
     */
    declare public readonly documentationUri: pulumi.Output<string | undefined>;
    /**
     * Array of events that are part of the asset. Each event can have per-event configuration.
     */
    declare public readonly events: pulumi.Output<outputs.deviceregistry.DiscoveredEventResponse[] | undefined>;
    /**
     * The extended location.
     */
    declare public readonly extendedLocation: pulumi.Output<outputs.deviceregistry.ExtendedLocationResponse>;
    /**
     * Revision number of the hardware.
     */
    declare public readonly hardwareRevision: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Asset manufacturer name.
     */
    declare public readonly manufacturer: pulumi.Output<string | undefined>;
    /**
     * Asset manufacturer URI.
     */
    declare public readonly manufacturerUri: pulumi.Output<string | undefined>;
    /**
     * Asset model name.
     */
    declare public readonly model: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Asset product code.
     */
    declare public readonly productCode: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the resource.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * Asset serial number.
     */
    declare public readonly serialNumber: pulumi.Output<string | undefined>;
    /**
     * Revision number of the software.
     */
    declare public readonly softwareRevision: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.deviceregistry.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * An integer that is incremented each time the resource is modified.
     */
    declare public readonly version: pulumi.Output<number>;

    /**
     * Create a DiscoveredAsset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiscoveredAssetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.assetEndpointProfileRef === undefined && !opts.urn) {
                throw new Error("Missing required property 'assetEndpointProfileRef'");
            }
            if (args?.discoveryId === undefined && !opts.urn) {
                throw new Error("Missing required property 'discoveryId'");
            }
            if (args?.extendedLocation === undefined && !opts.urn) {
                throw new Error("Missing required property 'extendedLocation'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["assetEndpointProfileRef"] = args?.assetEndpointProfileRef;
            resourceInputs["datasets"] = args?.datasets;
            resourceInputs["defaultDatasetsConfiguration"] = args?.defaultDatasetsConfiguration;
            resourceInputs["defaultEventsConfiguration"] = args?.defaultEventsConfiguration;
            resourceInputs["defaultTopic"] = args ? (args.defaultTopic ? pulumi.output(args.defaultTopic).apply(inputs.deviceregistry.topicArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["discoveredAssetName"] = args?.discoveredAssetName;
            resourceInputs["discoveryId"] = args?.discoveryId;
            resourceInputs["documentationUri"] = args?.documentationUri;
            resourceInputs["events"] = args?.events;
            resourceInputs["extendedLocation"] = args?.extendedLocation;
            resourceInputs["hardwareRevision"] = args?.hardwareRevision;
            resourceInputs["location"] = args?.location;
            resourceInputs["manufacturer"] = args?.manufacturer;
            resourceInputs["manufacturerUri"] = args?.manufacturerUri;
            resourceInputs["model"] = args?.model;
            resourceInputs["productCode"] = args?.productCode;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["serialNumber"] = args?.serialNumber;
            resourceInputs["softwareRevision"] = args?.softwareRevision;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["version"] = args?.version;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["assetEndpointProfileRef"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["datasets"] = undefined /*out*/;
            resourceInputs["defaultDatasetsConfiguration"] = undefined /*out*/;
            resourceInputs["defaultEventsConfiguration"] = undefined /*out*/;
            resourceInputs["defaultTopic"] = undefined /*out*/;
            resourceInputs["discoveryId"] = undefined /*out*/;
            resourceInputs["documentationUri"] = undefined /*out*/;
            resourceInputs["events"] = undefined /*out*/;
            resourceInputs["extendedLocation"] = undefined /*out*/;
            resourceInputs["hardwareRevision"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["manufacturer"] = undefined /*out*/;
            resourceInputs["manufacturerUri"] = undefined /*out*/;
            resourceInputs["model"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["productCode"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["serialNumber"] = undefined /*out*/;
            resourceInputs["softwareRevision"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:deviceregistry/v20240901preview:DiscoveredAsset" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DiscoveredAsset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DiscoveredAsset resource.
 */
export interface DiscoveredAssetArgs {
    /**
     * A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.
     */
    assetEndpointProfileRef: pulumi.Input<string>;
    /**
     * Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.
     */
    datasets?: pulumi.Input<pulumi.Input<inputs.deviceregistry.DiscoveredDatasetArgs>[]>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
     */
    defaultDatasetsConfiguration?: pulumi.Input<string>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
     */
    defaultEventsConfiguration?: pulumi.Input<string>;
    /**
     * Object that describes the default topic information for the asset.
     */
    defaultTopic?: pulumi.Input<inputs.deviceregistry.TopicArgs>;
    /**
     * Discovered Asset name parameter.
     */
    discoveredAssetName?: pulumi.Input<string>;
    /**
     * Identifier used to detect changes in the asset.
     */
    discoveryId: pulumi.Input<string>;
    /**
     * Reference to the documentation.
     */
    documentationUri?: pulumi.Input<string>;
    /**
     * Array of events that are part of the asset. Each event can have per-event configuration.
     */
    events?: pulumi.Input<pulumi.Input<inputs.deviceregistry.DiscoveredEventArgs>[]>;
    /**
     * The extended location.
     */
    extendedLocation: pulumi.Input<inputs.deviceregistry.ExtendedLocationArgs>;
    /**
     * Revision number of the hardware.
     */
    hardwareRevision?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Asset manufacturer name.
     */
    manufacturer?: pulumi.Input<string>;
    /**
     * Asset manufacturer URI.
     */
    manufacturerUri?: pulumi.Input<string>;
    /**
     * Asset model name.
     */
    model?: pulumi.Input<string>;
    /**
     * Asset product code.
     */
    productCode?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Asset serial number.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * Revision number of the software.
     */
    softwareRevision?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * An integer that is incremented each time the resource is modified.
     */
    version: pulumi.Input<number>;
}
