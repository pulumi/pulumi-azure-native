// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Asset definition.
 *
 * Uses Azure REST API version 2025-07-01-preview.
 */
export class NamespaceAsset extends pulumi.CustomResource {
    /**
     * Get an existing NamespaceAsset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NamespaceAsset {
        return new NamespaceAsset(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:deviceregistry:NamespaceAsset';

    /**
     * Returns true if the given object is an instance of NamespaceAsset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NamespaceAsset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NamespaceAsset.__pulumiType;
    }

    /**
     * URIs or type definition IDs.
     */
    public readonly assetTypeRefs!: pulumi.Output<string[] | undefined>;
    /**
     * A set of key-value pairs that contain custom attributes set by the customer.
     */
    public readonly attributes!: pulumi.Output<any | undefined>;
    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
     */
    public readonly datasets!: pulumi.Output<outputs.deviceregistry.NamespaceDatasetResponse[] | undefined>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
     */
    public readonly defaultDatasetsConfiguration!: pulumi.Output<string | undefined>;
    /**
     * Default destinations for a dataset.
     */
    public readonly defaultDatasetsDestinations!: pulumi.Output<(outputs.deviceregistry.DatasetBrokerStateStoreDestinationResponse | outputs.deviceregistry.DatasetMqttDestinationResponse | outputs.deviceregistry.DatasetStorageDestinationResponse)[] | undefined>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
     */
    public readonly defaultEventsConfiguration!: pulumi.Output<string | undefined>;
    /**
     * Default destinations for an event.
     */
    public readonly defaultEventsDestinations!: pulumi.Output<(outputs.deviceregistry.EventMqttDestinationResponse | outputs.deviceregistry.EventStorageDestinationResponse)[] | undefined>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.
     */
    public readonly defaultManagementGroupsConfiguration!: pulumi.Output<string | undefined>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.
     */
    public readonly defaultStreamsConfiguration!: pulumi.Output<string | undefined>;
    /**
     * Default destinations for a stream.
     */
    public readonly defaultStreamsDestinations!: pulumi.Output<(outputs.deviceregistry.StreamMqttDestinationResponse | outputs.deviceregistry.StreamStorageDestinationResponse)[] | undefined>;
    /**
     * Human-readable description of the asset.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.
     */
    public readonly deviceRef!: pulumi.Output<outputs.deviceregistry.DeviceRefResponse>;
    /**
     * Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.
     */
    public readonly discoveredAssetRefs!: pulumi.Output<string[] | undefined>;
    /**
     * Human-readable display name.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Asset documentation reference.
     */
    public readonly documentationUri!: pulumi.Output<string | undefined>;
    /**
     * Enabled/disabled status of the asset.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Array of events that are part of the asset. Each event can have per-event configuration.
     */
    public readonly events!: pulumi.Output<outputs.deviceregistry.NamespaceEventResponse[] | undefined>;
    /**
     * The extended location.
     */
    public readonly extendedLocation!: pulumi.Output<outputs.deviceregistry.ExtendedLocationResponse>;
    /**
     * Asset ID provided by the customer.
     */
    public readonly externalAssetId!: pulumi.Output<string | undefined>;
    /**
     * Asset hardware revision number.
     */
    public readonly hardwareRevision!: pulumi.Output<string | undefined>;
    /**
     * A timestamp (in UTC) that is updated each time the resource is modified.
     */
    public /*out*/ readonly lastTransitionTime!: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Array of management groups that are part of the asset. Each management group can have a per-group configuration.
     */
    public readonly managementGroups!: pulumi.Output<outputs.deviceregistry.ManagementGroupResponse[] | undefined>;
    /**
     * Asset manufacturer.
     */
    public readonly manufacturer!: pulumi.Output<string | undefined>;
    /**
     * Asset manufacturer URI.
     */
    public readonly manufacturerUri!: pulumi.Output<string | undefined>;
    /**
     * Asset model.
     */
    public readonly model!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Asset product code.
     */
    public readonly productCode!: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Asset serial number.
     */
    public readonly serialNumber!: pulumi.Output<string | undefined>;
    /**
     * Asset software revision number.
     */
    public readonly softwareRevision!: pulumi.Output<string | undefined>;
    /**
     * Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.
     */
    public /*out*/ readonly status!: pulumi.Output<outputs.deviceregistry.NamespaceAssetStatusResponse>;
    /**
     * Array of streams that are part of the asset. Each stream can have a per-stream configuration.
     */
    public readonly streams!: pulumi.Output<outputs.deviceregistry.NamespaceStreamResponse[] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.deviceregistry.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Globally unique, immutable, non-reusable ID.
     */
    public /*out*/ readonly uuid!: pulumi.Output<string>;
    /**
     * An integer that is incremented each time the resource is modified.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a NamespaceAsset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceAssetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.deviceRef === undefined && !opts.urn) {
                throw new Error("Missing required property 'deviceRef'");
            }
            if (args?.extendedLocation === undefined && !opts.urn) {
                throw new Error("Missing required property 'extendedLocation'");
            }
            if (args?.namespaceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespaceName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["assetName"] = args?.assetName;
            resourceInputs["assetTypeRefs"] = args?.assetTypeRefs;
            resourceInputs["attributes"] = args?.attributes;
            resourceInputs["datasets"] = args?.datasets;
            resourceInputs["defaultDatasetsConfiguration"] = args?.defaultDatasetsConfiguration;
            resourceInputs["defaultDatasetsDestinations"] = args?.defaultDatasetsDestinations;
            resourceInputs["defaultEventsConfiguration"] = args?.defaultEventsConfiguration;
            resourceInputs["defaultEventsDestinations"] = args?.defaultEventsDestinations;
            resourceInputs["defaultManagementGroupsConfiguration"] = args?.defaultManagementGroupsConfiguration;
            resourceInputs["defaultStreamsConfiguration"] = args?.defaultStreamsConfiguration;
            resourceInputs["defaultStreamsDestinations"] = args?.defaultStreamsDestinations;
            resourceInputs["description"] = args?.description;
            resourceInputs["deviceRef"] = args?.deviceRef;
            resourceInputs["discoveredAssetRefs"] = args?.discoveredAssetRefs;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["documentationUri"] = args?.documentationUri;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["events"] = args?.events;
            resourceInputs["extendedLocation"] = args?.extendedLocation;
            resourceInputs["externalAssetId"] = args?.externalAssetId;
            resourceInputs["hardwareRevision"] = args?.hardwareRevision;
            resourceInputs["location"] = args?.location;
            resourceInputs["managementGroups"] = args?.managementGroups;
            resourceInputs["manufacturer"] = args?.manufacturer;
            resourceInputs["manufacturerUri"] = args?.manufacturerUri;
            resourceInputs["model"] = args?.model;
            resourceInputs["namespaceName"] = args?.namespaceName;
            resourceInputs["productCode"] = args?.productCode;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["serialNumber"] = args?.serialNumber;
            resourceInputs["softwareRevision"] = args?.softwareRevision;
            resourceInputs["streams"] = args?.streams;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["lastTransitionTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        } else {
            resourceInputs["assetTypeRefs"] = undefined /*out*/;
            resourceInputs["attributes"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["datasets"] = undefined /*out*/;
            resourceInputs["defaultDatasetsConfiguration"] = undefined /*out*/;
            resourceInputs["defaultDatasetsDestinations"] = undefined /*out*/;
            resourceInputs["defaultEventsConfiguration"] = undefined /*out*/;
            resourceInputs["defaultEventsDestinations"] = undefined /*out*/;
            resourceInputs["defaultManagementGroupsConfiguration"] = undefined /*out*/;
            resourceInputs["defaultStreamsConfiguration"] = undefined /*out*/;
            resourceInputs["defaultStreamsDestinations"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["deviceRef"] = undefined /*out*/;
            resourceInputs["discoveredAssetRefs"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["documentationUri"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["events"] = undefined /*out*/;
            resourceInputs["extendedLocation"] = undefined /*out*/;
            resourceInputs["externalAssetId"] = undefined /*out*/;
            resourceInputs["hardwareRevision"] = undefined /*out*/;
            resourceInputs["lastTransitionTime"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["managementGroups"] = undefined /*out*/;
            resourceInputs["manufacturer"] = undefined /*out*/;
            resourceInputs["manufacturerUri"] = undefined /*out*/;
            resourceInputs["model"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["productCode"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["serialNumber"] = undefined /*out*/;
            resourceInputs["softwareRevision"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["streams"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:deviceregistry/v20250701preview:NamespaceAsset" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(NamespaceAsset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a NamespaceAsset resource.
 */
export interface NamespaceAssetArgs {
    /**
     * The name of the asset.
     */
    assetName?: pulumi.Input<string>;
    /**
     * URIs or type definition IDs.
     */
    assetTypeRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of key-value pairs that contain custom attributes set by the customer.
     */
    attributes?: any;
    /**
     * Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
     */
    datasets?: pulumi.Input<pulumi.Input<inputs.deviceregistry.NamespaceDatasetArgs>[]>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
     */
    defaultDatasetsConfiguration?: pulumi.Input<string>;
    /**
     * Default destinations for a dataset.
     */
    defaultDatasetsDestinations?: pulumi.Input<pulumi.Input<inputs.deviceregistry.DatasetBrokerStateStoreDestinationArgs | inputs.deviceregistry.DatasetMqttDestinationArgs | inputs.deviceregistry.DatasetStorageDestinationArgs>[]>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
     */
    defaultEventsConfiguration?: pulumi.Input<string>;
    /**
     * Default destinations for an event.
     */
    defaultEventsDestinations?: pulumi.Input<pulumi.Input<inputs.deviceregistry.EventMqttDestinationArgs | inputs.deviceregistry.EventStorageDestinationArgs>[]>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.
     */
    defaultManagementGroupsConfiguration?: pulumi.Input<string>;
    /**
     * Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.
     */
    defaultStreamsConfiguration?: pulumi.Input<string>;
    /**
     * Default destinations for a stream.
     */
    defaultStreamsDestinations?: pulumi.Input<pulumi.Input<inputs.deviceregistry.StreamMqttDestinationArgs | inputs.deviceregistry.StreamStorageDestinationArgs>[]>;
    /**
     * Human-readable description of the asset.
     */
    description?: pulumi.Input<string>;
    /**
     * Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.
     */
    deviceRef: pulumi.Input<inputs.deviceregistry.DeviceRefArgs>;
    /**
     * Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.
     */
    discoveredAssetRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Human-readable display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Asset documentation reference.
     */
    documentationUri?: pulumi.Input<string>;
    /**
     * Enabled/disabled status of the asset.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Array of events that are part of the asset. Each event can have per-event configuration.
     */
    events?: pulumi.Input<pulumi.Input<inputs.deviceregistry.NamespaceEventArgs>[]>;
    /**
     * The extended location.
     */
    extendedLocation: pulumi.Input<inputs.deviceregistry.ExtendedLocationArgs>;
    /**
     * Asset ID provided by the customer.
     */
    externalAssetId?: pulumi.Input<string>;
    /**
     * Asset hardware revision number.
     */
    hardwareRevision?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Array of management groups that are part of the asset. Each management group can have a per-group configuration.
     */
    managementGroups?: pulumi.Input<pulumi.Input<inputs.deviceregistry.ManagementGroupArgs>[]>;
    /**
     * Asset manufacturer.
     */
    manufacturer?: pulumi.Input<string>;
    /**
     * Asset manufacturer URI.
     */
    manufacturerUri?: pulumi.Input<string>;
    /**
     * Asset model.
     */
    model?: pulumi.Input<string>;
    /**
     * The name of the namespace.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * Asset product code.
     */
    productCode?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Asset serial number.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * Asset software revision number.
     */
    softwareRevision?: pulumi.Input<string>;
    /**
     * Array of streams that are part of the asset. Each stream can have a per-stream configuration.
     */
    streams?: pulumi.Input<pulumi.Input<inputs.deviceregistry.NamespaceStreamArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
