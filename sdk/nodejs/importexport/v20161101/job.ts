// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Contains the job information.
 *
 * @deprecated Version 2016-11-01 will be removed in v2 of the provider.
 */
export class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Job {
        pulumi.log.warn("Job is deprecated: Version 2016-11-01 will be removed in v2 of the provider.")
        return new Job(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:importexport/v20161101:Job';

    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Job {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }

    /**
     * Specifies the job identity details
     */
    public /*out*/ readonly identity!: pulumi.Output<outputs.importexport.v20161101.IdentityDetailsResponse | undefined>;
    /**
     * Specifies the Azure location where the job is created.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the job.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Specifies the job properties
     */
    public readonly properties!: pulumi.Output<outputs.importexport.v20161101.JobDetailsResponse>;
    /**
     * SystemData of ImportExport Jobs.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.importexport.v20161101.SystemDataResponse>;
    /**
     * Specifies the tags that are assigned to the job.
     */
    public readonly tags!: pulumi.Output<any | undefined>;
    /**
     * Specifies the type of the job resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Job resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2016-11-01 will be removed in v2 of the provider. */
    constructor(name: string, args: JobArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Job is deprecated: Version 2016-11-01 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["jobName"] = args ? args.jobName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["properties"] = args ? (args.properties ? pulumi.output(args.properties).apply(inputs.importexport.v20161101.jobDetailsArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:importexport:Job" }, { type: "azure-native:importexport/v20200801:Job" }, { type: "azure-native:importexport/v20210101:Job" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Job.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Job resource.
 */
export interface JobArgs {
    /**
     * The name of the import/export job.
     */
    jobName?: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the job should be created
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the job properties
     */
    properties?: pulumi.Input<inputs.importexport.v20161101.JobDetailsArgs>;
    /**
     * The resource group name uniquely identifies the resource group within the user subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the tags that will be assigned to the job.
     */
    tags?: any;
}
