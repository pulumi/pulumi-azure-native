// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetRedisArgs, GetRedisResult, GetRedisOutputArgs } from "./getRedis";
export const getRedis: typeof import("./getRedis").getRedis = null as any;
export const getRedisOutput: typeof import("./getRedis").getRedisOutput = null as any;
utilities.lazyLoad(exports, ["getRedis","getRedisOutput"], () => require("./getRedis"));

export { GetRedisLinkedServerArgs, GetRedisLinkedServerResult, GetRedisLinkedServerOutputArgs } from "./getRedisLinkedServer";
export const getRedisLinkedServer: typeof import("./getRedisLinkedServer").getRedisLinkedServer = null as any;
export const getRedisLinkedServerOutput: typeof import("./getRedisLinkedServer").getRedisLinkedServerOutput = null as any;
utilities.lazyLoad(exports, ["getRedisLinkedServer","getRedisLinkedServerOutput"], () => require("./getRedisLinkedServer"));

export { ListRedisKeysArgs, ListRedisKeysResult, ListRedisKeysOutputArgs } from "./listRedisKeys";
export const listRedisKeys: typeof import("./listRedisKeys").listRedisKeys = null as any;
export const listRedisKeysOutput: typeof import("./listRedisKeys").listRedisKeysOutput = null as any;
utilities.lazyLoad(exports, ["listRedisKeys","listRedisKeysOutput"], () => require("./listRedisKeys"));

export { RedisArgs } from "./redis";
export type Redis = import("./redis").Redis;
export const Redis: typeof import("./redis").Redis = null as any;
utilities.lazyLoad(exports, ["Redis"], () => require("./redis"));

export { RedisLinkedServerArgs } from "./redisLinkedServer";
export type RedisLinkedServer = import("./redisLinkedServer").RedisLinkedServer;
export const RedisLinkedServer: typeof import("./redisLinkedServer").RedisLinkedServer = null as any;
utilities.lazyLoad(exports, ["RedisLinkedServer"], () => require("./redisLinkedServer"));


// Export enums:
export * from "../../types/enums/redis/v20170201";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:redis/v20170201:Redis":
                return new Redis(name, <any>undefined, { urn })
            case "azure-native:redis/v20170201:RedisLinkedServer":
                return new RedisLinkedServer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "redis/v20170201", _module)
