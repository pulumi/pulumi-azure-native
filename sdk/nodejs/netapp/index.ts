// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccountArgs } from "./account";
export type Account = import("./account").Account;
export const Account: typeof import("./account").Account = null as any;

export { BackupArgs } from "./backup";
export type Backup = import("./backup").Backup;
export const Backup: typeof import("./backup").Backup = null as any;

export { BackupPolicyArgs } from "./backupPolicy";
export type BackupPolicy = import("./backupPolicy").BackupPolicy;
export const BackupPolicy: typeof import("./backupPolicy").BackupPolicy = null as any;

export { GetAccountArgs, GetAccountResult, GetAccountOutputArgs } from "./getAccount";
export const getAccount: typeof import("./getAccount").getAccount = null as any;
export const getAccountOutput: typeof import("./getAccount").getAccountOutput = null as any;

export { GetBackupArgs, GetBackupResult, GetBackupOutputArgs } from "./getBackup";
export const getBackup: typeof import("./getBackup").getBackup = null as any;
export const getBackupOutput: typeof import("./getBackup").getBackupOutput = null as any;

export { GetBackupPolicyArgs, GetBackupPolicyResult, GetBackupPolicyOutputArgs } from "./getBackupPolicy";
export const getBackupPolicy: typeof import("./getBackupPolicy").getBackupPolicy = null as any;
export const getBackupPolicyOutput: typeof import("./getBackupPolicy").getBackupPolicyOutput = null as any;

export { GetPoolArgs, GetPoolResult, GetPoolOutputArgs } from "./getPool";
export const getPool: typeof import("./getPool").getPool = null as any;
export const getPoolOutput: typeof import("./getPool").getPoolOutput = null as any;

export { GetSnapshotArgs, GetSnapshotResult, GetSnapshotOutputArgs } from "./getSnapshot";
export const getSnapshot: typeof import("./getSnapshot").getSnapshot = null as any;
export const getSnapshotOutput: typeof import("./getSnapshot").getSnapshotOutput = null as any;

export { GetSnapshotPolicyArgs, GetSnapshotPolicyResult, GetSnapshotPolicyOutputArgs } from "./getSnapshotPolicy";
export const getSnapshotPolicy: typeof import("./getSnapshotPolicy").getSnapshotPolicy = null as any;
export const getSnapshotPolicyOutput: typeof import("./getSnapshotPolicy").getSnapshotPolicyOutput = null as any;

export { GetSubvolumeArgs, GetSubvolumeResult, GetSubvolumeOutputArgs } from "./getSubvolume";
export const getSubvolume: typeof import("./getSubvolume").getSubvolume = null as any;
export const getSubvolumeOutput: typeof import("./getSubvolume").getSubvolumeOutput = null as any;

export { GetSubvolumeMetadataArgs, GetSubvolumeMetadataResult, GetSubvolumeMetadataOutputArgs } from "./getSubvolumeMetadata";
export const getSubvolumeMetadata: typeof import("./getSubvolumeMetadata").getSubvolumeMetadata = null as any;
export const getSubvolumeMetadataOutput: typeof import("./getSubvolumeMetadata").getSubvolumeMetadataOutput = null as any;

export { GetVolumeArgs, GetVolumeResult, GetVolumeOutputArgs } from "./getVolume";
export const getVolume: typeof import("./getVolume").getVolume = null as any;
export const getVolumeOutput: typeof import("./getVolume").getVolumeOutput = null as any;

export { GetVolumeGroupArgs, GetVolumeGroupResult, GetVolumeGroupOutputArgs } from "./getVolumeGroup";
export const getVolumeGroup: typeof import("./getVolumeGroup").getVolumeGroup = null as any;
export const getVolumeGroupOutput: typeof import("./getVolumeGroup").getVolumeGroupOutput = null as any;

export { GetVolumeQuotaRuleArgs, GetVolumeQuotaRuleResult, GetVolumeQuotaRuleOutputArgs } from "./getVolumeQuotaRule";
export const getVolumeQuotaRule: typeof import("./getVolumeQuotaRule").getVolumeQuotaRule = null as any;
export const getVolumeQuotaRuleOutput: typeof import("./getVolumeQuotaRule").getVolumeQuotaRuleOutput = null as any;

export { ListVolumeReplicationsArgs, ListVolumeReplicationsResult, ListVolumeReplicationsOutputArgs } from "./listVolumeReplications";
export const listVolumeReplications: typeof import("./listVolumeReplications").listVolumeReplications = null as any;
export const listVolumeReplicationsOutput: typeof import("./listVolumeReplications").listVolumeReplicationsOutput = null as any;

export { PoolArgs } from "./pool";
export type Pool = import("./pool").Pool;
export const Pool: typeof import("./pool").Pool = null as any;

export { SnapshotArgs } from "./snapshot";
export type Snapshot = import("./snapshot").Snapshot;
export const Snapshot: typeof import("./snapshot").Snapshot = null as any;

export { SnapshotPolicyArgs } from "./snapshotPolicy";
export type SnapshotPolicy = import("./snapshotPolicy").SnapshotPolicy;
export const SnapshotPolicy: typeof import("./snapshotPolicy").SnapshotPolicy = null as any;

export { SubvolumeArgs } from "./subvolume";
export type Subvolume = import("./subvolume").Subvolume;
export const Subvolume: typeof import("./subvolume").Subvolume = null as any;

export { VolumeArgs } from "./volume";
export type Volume = import("./volume").Volume;
export const Volume: typeof import("./volume").Volume = null as any;

export { VolumeGroupArgs } from "./volumeGroup";
export type VolumeGroup = import("./volumeGroup").VolumeGroup;
export const VolumeGroup: typeof import("./volumeGroup").VolumeGroup = null as any;

export { VolumeQuotaRuleArgs } from "./volumeQuotaRule";
export type VolumeQuotaRule = import("./volumeQuotaRule").VolumeQuotaRule;
export const VolumeQuotaRule: typeof import("./volumeQuotaRule").VolumeQuotaRule = null as any;

utilities.lazyLoad(exports, ["Account"], () => require("./account"));
utilities.lazyLoad(exports, ["Backup"], () => require("./backup"));
utilities.lazyLoad(exports, ["BackupPolicy"], () => require("./backupPolicy"));
utilities.lazyLoad(exports, ["getAccount","getAccountOutput"], () => require("./getAccount"));
utilities.lazyLoad(exports, ["getBackup","getBackupOutput"], () => require("./getBackup"));
utilities.lazyLoad(exports, ["getBackupPolicy","getBackupPolicyOutput"], () => require("./getBackupPolicy"));
utilities.lazyLoad(exports, ["getPool","getPoolOutput"], () => require("./getPool"));
utilities.lazyLoad(exports, ["getSnapshot","getSnapshotOutput"], () => require("./getSnapshot"));
utilities.lazyLoad(exports, ["getSnapshotPolicy","getSnapshotPolicyOutput"], () => require("./getSnapshotPolicy"));
utilities.lazyLoad(exports, ["getSubvolume","getSubvolumeOutput"], () => require("./getSubvolume"));
utilities.lazyLoad(exports, ["getSubvolumeMetadata","getSubvolumeMetadataOutput"], () => require("./getSubvolumeMetadata"));
utilities.lazyLoad(exports, ["getVolume","getVolumeOutput"], () => require("./getVolume"));
utilities.lazyLoad(exports, ["getVolumeGroup","getVolumeGroupOutput"], () => require("./getVolumeGroup"));
utilities.lazyLoad(exports, ["getVolumeQuotaRule","getVolumeQuotaRuleOutput"], () => require("./getVolumeQuotaRule"));
utilities.lazyLoad(exports, ["listVolumeReplications","listVolumeReplicationsOutput"], () => require("./listVolumeReplications"));
utilities.lazyLoad(exports, ["Pool"], () => require("./pool"));
utilities.lazyLoad(exports, ["Snapshot"], () => require("./snapshot"));
utilities.lazyLoad(exports, ["SnapshotPolicy"], () => require("./snapshotPolicy"));
utilities.lazyLoad(exports, ["Subvolume"], () => require("./subvolume"));
utilities.lazyLoad(exports, ["Volume"], () => require("./volume"));
utilities.lazyLoad(exports, ["VolumeGroup"], () => require("./volumeGroup"));
utilities.lazyLoad(exports, ["VolumeQuotaRule"], () => require("./volumeQuotaRule"));

// Export enums:
export * from "../types/enums/netapp";

// Export sub-modules:
import * as v20170815 from "./v20170815";
import * as v20190501 from "./v20190501";
import * as v20190601 from "./v20190601";
import * as v20190701 from "./v20190701";
import * as v20190801 from "./v20190801";
import * as v20191001 from "./v20191001";
import * as v20191101 from "./v20191101";
import * as v20200201 from "./v20200201";
import * as v20200301 from "./v20200301";
import * as v20200501 from "./v20200501";
import * as v20200601 from "./v20200601";
import * as v20200701 from "./v20200701";
import * as v20200801 from "./v20200801";
import * as v20200901 from "./v20200901";
import * as v20201101 from "./v20201101";
import * as v20201201 from "./v20201201";
import * as v20210201 from "./v20210201";
import * as v20210401 from "./v20210401";
import * as v20210401preview from "./v20210401preview";
import * as v20210601 from "./v20210601";
import * as v20210801 from "./v20210801";
import * as v20211001 from "./v20211001";
import * as v20220101 from "./v20220101";
import * as v20220301 from "./v20220301";

export {
    v20170815,
    v20190501,
    v20190601,
    v20190701,
    v20190801,
    v20191001,
    v20191101,
    v20200201,
    v20200301,
    v20200501,
    v20200601,
    v20200701,
    v20200801,
    v20200901,
    v20201101,
    v20201201,
    v20210201,
    v20210401,
    v20210401preview,
    v20210601,
    v20210801,
    v20211001,
    v20220101,
    v20220301,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:netapp:Account":
                return new Account(name, <any>undefined, { urn })
            case "azure-native:netapp:Backup":
                return new Backup(name, <any>undefined, { urn })
            case "azure-native:netapp:BackupPolicy":
                return new BackupPolicy(name, <any>undefined, { urn })
            case "azure-native:netapp:Pool":
                return new Pool(name, <any>undefined, { urn })
            case "azure-native:netapp:Snapshot":
                return new Snapshot(name, <any>undefined, { urn })
            case "azure-native:netapp:SnapshotPolicy":
                return new SnapshotPolicy(name, <any>undefined, { urn })
            case "azure-native:netapp:Subvolume":
                return new Subvolume(name, <any>undefined, { urn })
            case "azure-native:netapp:Volume":
                return new Volume(name, <any>undefined, { urn })
            case "azure-native:netapp:VolumeGroup":
                return new VolumeGroup(name, <any>undefined, { urn })
            case "azure-native:netapp:VolumeQuotaRule":
                return new VolumeQuotaRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "netapp", _module)
