// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get the details of the specified volume
 */
export function getVolume(args: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:netapp/v20240701preview:getVolume", {
        "accountName": args.accountName,
        "poolName": args.poolName,
        "resourceGroupName": args.resourceGroupName,
        "volumeName": args.volumeName,
    }, opts);
}

export interface GetVolumeArgs {
    /**
     * The name of the NetApp account
     */
    accountName: string;
    /**
     * The name of the capacity pool
     */
    poolName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the volume
     */
    volumeName: string;
}

/**
 * Volume resource
 */
export interface GetVolumeResult {
    /**
     * While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.
     */
    readonly acceptGrowCapacityPoolForShortTermCloneSplit?: string;
    /**
     * Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel
     */
    readonly actualThroughputMibps: number;
    /**
     * Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose
     */
    readonly avsDataStore?: string;
    /**
     * Resource identifier used to identify the Backup.
     */
    readonly backupId?: string;
    /**
     * Unique Baremetal Tenant Identifier.
     */
    readonly baremetalTenantId: string;
    /**
     * Pool Resource Id used in case of creating a volume through volume group
     */
    readonly capacityPoolResourceId?: string;
    /**
     * When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.
     */
    readonly cloneProgress: number;
    /**
     * Specifies whether Cool Access(tiering) is enabled for the volume.
     */
    readonly coolAccess?: boolean;
    /**
     * coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: 
     *  Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.
     *  OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.
     *  Never - No client-driven data is pulled from cool tier to standard storage.
     */
    readonly coolAccessRetrievalPolicy?: string;
    /**
     * Specifies the number of days after which data that is not accessed by clients will be tiered.
     */
    readonly coolnessPeriod?: number;
    /**
     * A unique file path for the volume. Used when creating mount targets
     */
    readonly creationToken: string;
    /**
     * DataProtection type volumes include an object containing details of the replication
     */
    readonly dataProtection?: outputs.netapp.v20240701preview.VolumePropertiesResponseDataProtection;
    /**
     * Data store resource unique identifier
     */
    readonly dataStoreResourceId: string[];
    /**
     * Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.
     */
    readonly defaultGroupQuotaInKiBs?: number;
    /**
     * Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .
     */
    readonly defaultUserQuotaInKiBs?: number;
    /**
     * If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false
     */
    readonly deleteBaseSnapshot?: boolean;
    /**
     * The effective value of the network features type available to the volume, or current effective state of update.
     */
    readonly effectiveNetworkFeatures: string;
    /**
     * Flag indicating whether subvolume operations are enabled on the volume
     */
    readonly enableSubvolumes?: string;
    /**
     * Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.
     */
    readonly encrypted: boolean;
    /**
     * Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'
     */
    readonly encryptionKeySource?: string;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Set of export policy rules
     */
    readonly exportPolicy?: outputs.netapp.v20240701preview.VolumePropertiesResponseExportPolicy;
    /**
     * Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.
     */
    readonly fileAccessLogs: string;
    /**
     * Unique FileSystem Identifier.
     */
    readonly fileSystemId: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * Space shared by short term clone volume with parent volume in bytes.
     */
    readonly inheritedSizeInBytes: number;
    /**
     * Specifies if default quota is enabled for the volume.
     */
    readonly isDefaultQuotaEnabled?: boolean;
    /**
     * Specifies whether volume is a Large Volume or Regular Volume.
     */
    readonly isLargeVolume?: boolean;
    /**
     * Restoring
     */
    readonly isRestoring?: boolean;
    /**
     * Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later
     */
    readonly kerberosEnabled?: boolean;
    /**
     * The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'.
     */
    readonly keyVaultPrivateEndpointResourceId?: string;
    /**
     * Language supported for volume.
     */
    readonly language?: string;
    /**
     * Specifies whether LDAP is enabled or not for a given NFS volume.
     */
    readonly ldapEnabled?: boolean;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.
     */
    readonly maximumNumberOfFiles: number;
    /**
     * List of mount targets
     */
    readonly mountTargets: outputs.netapp.v20240701preview.MountTargetPropertiesResponse[];
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The original value of the network features type available to the volume at the time it was created.
     */
    readonly networkFeatures?: string;
    /**
     * Network Sibling Set ID for the the group of volumes sharing networking resources.
     */
    readonly networkSiblingSetId: string;
    /**
     * Id of the snapshot or backup that the volume is restored from.
     */
    readonly originatingResourceId: string;
    /**
     * Application specific placement rules for the particular volume
     */
    readonly placementRules?: outputs.netapp.v20240701preview.PlacementKeyValuePairsResponse[];
    /**
     * Set of protocol types, default NFSv3, CIFS for SMB protocol
     */
    readonly protocolTypes?: string[];
    /**
     * The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.
     */
    readonly provisionedAvailabilityZone: string;
    /**
     * Azure lifecycle management
     */
    readonly provisioningState: string;
    /**
     * Proximity placement group associated with the volume
     */
    readonly proximityPlacementGroup?: string;
    /**
     * The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol
     */
    readonly securityStyle?: string;
    /**
     * The service level of the file system
     */
    readonly serviceLevel?: string;
    /**
     * Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume
     */
    readonly smbAccessBasedEnumeration?: string;
    /**
     * Enables continuously available share property for smb volume. Only applicable for SMB volume
     */
    readonly smbContinuouslyAvailable?: boolean;
    /**
     * Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later
     */
    readonly smbEncryption?: boolean;
    /**
     * Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume
     */
    readonly smbNonBrowsable?: string;
    /**
     * If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true).
     */
    readonly snapshotDirectoryVisible?: boolean;
    /**
     * Resource identifier used to identify the Snapshot.
     */
    readonly snapshotId?: string;
    /**
     * Provides storage to network proximity information for the volume.
     */
    readonly storageToNetworkProximity: string;
    /**
     * The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
     */
    readonly subnetId: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.netapp.v20240701preview.SystemDataResponse;
    /**
     * T2 network information
     */
    readonly t2Network: string;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    readonly throughputMibps?: number;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.  Avoid passing null value for unixPermissions in volume update operation, As per the behavior, If Null value is passed then user-visible unixPermissions value will became null, and user will not be able to get unixPermissions value. On safer side, actual unixPermissions value on volume will remain as its last saved value only.
     */
    readonly unixPermissions?: string;
    /**
     * Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 1PiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.
     */
    readonly usageThreshold: number;
    /**
     * Volume Group Name
     */
    readonly volumeGroupName: string;
    /**
     * Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log
     */
    readonly volumeSpecName?: string;
    /**
     * What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone
     */
    readonly volumeType?: string;
    /**
     * Availability Zone
     */
    readonly zones?: string[];
}
/**
 * Get the details of the specified volume
 */
export function getVolumeOutput(args: GetVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:netapp/v20240701preview:getVolume", {
        "accountName": args.accountName,
        "poolName": args.poolName,
        "resourceGroupName": args.resourceGroupName,
        "volumeName": args.volumeName,
    }, opts);
}

export interface GetVolumeOutputArgs {
    /**
     * The name of the NetApp account
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the capacity pool
     */
    poolName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the volume
     */
    volumeName: pulumi.Input<string>;
}
