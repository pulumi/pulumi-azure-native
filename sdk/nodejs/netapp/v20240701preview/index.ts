// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AccountArgs } from "./account";
export type Account = import("./account").Account;
export const Account: typeof import("./account").Account = null as any;
utilities.lazyLoad(exports, ["Account"], () => require("./account"));

export { BackupArgs } from "./backup";
export type Backup = import("./backup").Backup;
export const Backup: typeof import("./backup").Backup = null as any;
utilities.lazyLoad(exports, ["Backup"], () => require("./backup"));

export { CapacityPoolPoolArgs } from "./capacityPoolPool";
export type CapacityPoolPool = import("./capacityPoolPool").CapacityPoolPool;
export const CapacityPoolPool: typeof import("./capacityPoolPool").CapacityPoolPool = null as any;
utilities.lazyLoad(exports, ["CapacityPoolPool"], () => require("./capacityPoolPool"));

export { CapacityPoolVolumeArgs } from "./capacityPoolVolume";
export type CapacityPoolVolume = import("./capacityPoolVolume").CapacityPoolVolume;
export const CapacityPoolVolume: typeof import("./capacityPoolVolume").CapacityPoolVolume = null as any;
utilities.lazyLoad(exports, ["CapacityPoolVolume"], () => require("./capacityPoolVolume"));

export { GetAccountArgs, GetAccountResult, GetAccountOutputArgs } from "./getAccount";
export const getAccount: typeof import("./getAccount").getAccount = null as any;
export const getAccountOutput: typeof import("./getAccount").getAccountOutput = null as any;
utilities.lazyLoad(exports, ["getAccount","getAccountOutput"], () => require("./getAccount"));

export { GetBackupArgs, GetBackupResult, GetBackupOutputArgs } from "./getBackup";
export const getBackup: typeof import("./getBackup").getBackup = null as any;
export const getBackupOutput: typeof import("./getBackup").getBackupOutput = null as any;
utilities.lazyLoad(exports, ["getBackup","getBackupOutput"], () => require("./getBackup"));

export { GetCapacityPoolPoolArgs, GetCapacityPoolPoolResult, GetCapacityPoolPoolOutputArgs } from "./getCapacityPoolPool";
export const getCapacityPoolPool: typeof import("./getCapacityPoolPool").getCapacityPoolPool = null as any;
export const getCapacityPoolPoolOutput: typeof import("./getCapacityPoolPool").getCapacityPoolPoolOutput = null as any;
utilities.lazyLoad(exports, ["getCapacityPoolPool","getCapacityPoolPoolOutput"], () => require("./getCapacityPoolPool"));

export { GetCapacityPoolVolumeArgs, GetCapacityPoolVolumeResult, GetCapacityPoolVolumeOutputArgs } from "./getCapacityPoolVolume";
export const getCapacityPoolVolume: typeof import("./getCapacityPoolVolume").getCapacityPoolVolume = null as any;
export const getCapacityPoolVolumeOutput: typeof import("./getCapacityPoolVolume").getCapacityPoolVolumeOutput = null as any;
utilities.lazyLoad(exports, ["getCapacityPoolVolume","getCapacityPoolVolumeOutput"], () => require("./getCapacityPoolVolume"));

export { GetCapacityPoolVolumeGroupIdForLdapUserArgs, GetCapacityPoolVolumeGroupIdForLdapUserResult, GetCapacityPoolVolumeGroupIdForLdapUserOutputArgs } from "./getCapacityPoolVolumeGroupIdForLdapUser";
export const getCapacityPoolVolumeGroupIdForLdapUser: typeof import("./getCapacityPoolVolumeGroupIdForLdapUser").getCapacityPoolVolumeGroupIdForLdapUser = null as any;
export const getCapacityPoolVolumeGroupIdForLdapUserOutput: typeof import("./getCapacityPoolVolumeGroupIdForLdapUser").getCapacityPoolVolumeGroupIdForLdapUserOutput = null as any;
utilities.lazyLoad(exports, ["getCapacityPoolVolumeGroupIdForLdapUser","getCapacityPoolVolumeGroupIdForLdapUserOutput"], () => require("./getCapacityPoolVolumeGroupIdForLdapUser"));

export { ListCapacityPoolVolumeQuotaReportArgs, ListCapacityPoolVolumeQuotaReportResult, ListCapacityPoolVolumeQuotaReportOutputArgs } from "./listCapacityPoolVolumeQuotaReport";
export const listCapacityPoolVolumeQuotaReport: typeof import("./listCapacityPoolVolumeQuotaReport").listCapacityPoolVolumeQuotaReport = null as any;
export const listCapacityPoolVolumeQuotaReportOutput: typeof import("./listCapacityPoolVolumeQuotaReport").listCapacityPoolVolumeQuotaReportOutput = null as any;
utilities.lazyLoad(exports, ["listCapacityPoolVolumeQuotaReport","listCapacityPoolVolumeQuotaReportOutput"], () => require("./listCapacityPoolVolumeQuotaReport"));

export { ListCapacityPoolVolumeReplicationsArgs, ListCapacityPoolVolumeReplicationsResult, ListCapacityPoolVolumeReplicationsOutputArgs } from "./listCapacityPoolVolumeReplications";
export const listCapacityPoolVolumeReplications: typeof import("./listCapacityPoolVolumeReplications").listCapacityPoolVolumeReplications = null as any;
export const listCapacityPoolVolumeReplicationsOutput: typeof import("./listCapacityPoolVolumeReplications").listCapacityPoolVolumeReplicationsOutput = null as any;
utilities.lazyLoad(exports, ["listCapacityPoolVolumeReplications","listCapacityPoolVolumeReplicationsOutput"], () => require("./listCapacityPoolVolumeReplications"));


// Export enums:
export * from "../../types/enums/netapp/v20240701preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:netapp/v20240701preview:Account":
                return new Account(name, <any>undefined, { urn })
            case "azure-native:netapp/v20240701preview:Backup":
                return new Backup(name, <any>undefined, { urn })
            case "azure-native:netapp/v20240701preview:CapacityPoolPool":
                return new CapacityPoolPool(name, <any>undefined, { urn })
            case "azure-native:netapp/v20240701preview:CapacityPoolVolume":
                return new CapacityPoolVolume(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "netapp/v20240701preview", _module)
