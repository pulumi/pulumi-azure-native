// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Get details of the specified subvolume
 */
export function getSubvolumeMetadata(args: GetSubvolumeMetadataArgs, opts?: pulumi.InvokeOptions): Promise<GetSubvolumeMetadataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:netapp/v20240501preview:getSubvolumeMetadata", {
        "accountName": args.accountName,
        "poolName": args.poolName,
        "resourceGroupName": args.resourceGroupName,
        "subvolumeName": args.subvolumeName,
        "volumeName": args.volumeName,
    }, opts);
}

export interface GetSubvolumeMetadataArgs {
    /**
     * The name of the NetApp account
     */
    accountName: string;
    /**
     * The name of the capacity pool
     */
    poolName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the subvolume.
     */
    subvolumeName: string;
    /**
     * The name of the volume
     */
    volumeName: string;
}

/**
 * Result of the post subvolume and action is to get metadata of the subvolume.
 */
export interface GetSubvolumeMetadataResult {
    /**
     * Most recent access time and date
     */
    readonly accessedTimeStamp?: string;
    /**
     * Bytes used
     */
    readonly bytesUsed?: number;
    /**
     * Most recent change time and date
     */
    readonly changedTimeStamp?: string;
    /**
     * Creation time and date
     */
    readonly creationTimeStamp?: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Most recent modification time and date
     */
    readonly modifiedTimeStamp?: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Path to the parent subvolume
     */
    readonly parentPath?: string;
    /**
     * Path to the subvolume
     */
    readonly path?: string;
    /**
     * Permissions of the subvolume
     */
    readonly permissions?: string;
    /**
     * Azure lifecycle management
     */
    readonly provisioningState?: string;
    /**
     * Size of subvolume
     */
    readonly size?: number;
    /**
     * Resource type
     */
    readonly type: string;
}
/**
 * Get details of the specified subvolume
 */
export function getSubvolumeMetadataOutput(args: GetSubvolumeMetadataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubvolumeMetadataResult> {
    return pulumi.output(args).apply((a: any) => getSubvolumeMetadata(a, opts))
}

export interface GetSubvolumeMetadataOutputArgs {
    /**
     * The name of the NetApp account
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the capacity pool
     */
    poolName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the subvolume.
     */
    subvolumeName: pulumi.Input<string>;
    /**
     * The name of the volume
     */
    volumeName: pulumi.Input<string>;
}
