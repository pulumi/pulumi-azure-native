// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Bucket resource
 *
 * Uses Azure REST API version 2025-01-01-preview.
 *
 * Other available API versions: 2025-03-01-preview, 2025-07-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native netapp [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class CapacityPoolBucket extends pulumi.CustomResource {
    /**
     * Get an existing CapacityPoolBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CapacityPoolBucket {
        return new CapacityPoolBucket(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:netapp:CapacityPoolBucket';

    /**
     * Returns true if the given object is an instance of CapacityPoolBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CapacityPoolBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CapacityPoolBucket.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * File System user having access to volume data. For Unix, this is the user's uid and gid. For Windows, this is the user's username. Note that the Unix and Windows user details are mutually exclusive, meaning one or other must be supplied, but not both.
     */
    declare public readonly fileSystemUser: pulumi.Output<outputs.netapp.FileSystemUserResponse | undefined>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The volume path mounted inside the bucket. The default is the root path '/' if no value is provided when the bucket is created.
     */
    declare public readonly path: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the resource
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * Properties of the server managing the lifecycle of volume buckets
     */
    declare public readonly server: pulumi.Output<outputs.netapp.BucketServerPropertiesResponse | undefined>;
    /**
     * The bucket credentials status. There states:
     *
     * "NoCredentialsSet": Access and Secret key pair have not been generated.
     * "CredentialsExpired": Access and Secret key pair have expired.
     * "Active": The certificate has been installed and credentials are unexpired.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.netapp.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a CapacityPoolBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CapacityPoolBucketArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.accountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if (args?.poolName === undefined && !opts.urn) {
                throw new Error("Missing required property 'poolName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.volumeName === undefined && !opts.urn) {
                throw new Error("Missing required property 'volumeName'");
            }
            resourceInputs["accountName"] = args?.accountName;
            resourceInputs["bucketName"] = args?.bucketName;
            resourceInputs["fileSystemUser"] = args?.fileSystemUser;
            resourceInputs["path"] = (args?.path) ?? "/";
            resourceInputs["poolName"] = args?.poolName;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["server"] = args?.server;
            resourceInputs["volumeName"] = args?.volumeName;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["fileSystemUser"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["path"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["server"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:netapp/v20250101preview:CapacityPoolBucket" }, { type: "azure-native:netapp/v20250301preview:CapacityPoolBucket" }, { type: "azure-native:netapp/v20250701preview:CapacityPoolBucket" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(CapacityPoolBucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CapacityPoolBucket resource.
 */
export interface CapacityPoolBucketArgs {
    /**
     * The name of the NetApp account
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the bucket
     */
    bucketName?: pulumi.Input<string>;
    /**
     * File System user having access to volume data. For Unix, this is the user's uid and gid. For Windows, this is the user's username. Note that the Unix and Windows user details are mutually exclusive, meaning one or other must be supplied, but not both.
     */
    fileSystemUser?: pulumi.Input<inputs.netapp.FileSystemUserArgs>;
    /**
     * The volume path mounted inside the bucket. The default is the root path '/' if no value is provided when the bucket is created.
     */
    path?: pulumi.Input<string>;
    /**
     * The name of the capacity pool
     */
    poolName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Properties of the server managing the lifecycle of volume buckets
     */
    server?: pulumi.Input<inputs.netapp.BucketServerPropertiesArgs>;
    /**
     * The name of the volume
     */
    volumeName: pulumi.Input<string>;
}
