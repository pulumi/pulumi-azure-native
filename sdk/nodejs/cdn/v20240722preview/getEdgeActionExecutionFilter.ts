// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get EdgeActionExecutionFilter resource
 */
export function getEdgeActionExecutionFilter(args: GetEdgeActionExecutionFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetEdgeActionExecutionFilterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:cdn/v20240722preview:getEdgeActionExecutionFilter", {
        "edgeActionName": args.edgeActionName,
        "executionFilter": args.executionFilter,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetEdgeActionExecutionFilterArgs {
    /**
     * The name of the Edge Action
     */
    edgeActionName: string;
    /**
     * The name of the execution filter
     */
    executionFilter: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Concrete tracked resource types can be created by aliasing this type using a specific property type.
 */
export interface GetEdgeActionExecutionFilterResult {
    /**
     * Custom Header Key associated with the execution filter
     */
    readonly executionFilterIdentifierHeaderName: string;
    /**
     * Custom Header Value associated with the execution filter
     */
    readonly executionFilterIdentifierHeaderValue: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The last update time in UTC for the execution filter
     */
    readonly lastUpdateTime: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The provisioning state
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.cdn.v20240722preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * The referenced versionId of the edgeAction version
     */
    readonly versionId: string;
}
/**
 * Get EdgeActionExecutionFilter resource
 */
export function getEdgeActionExecutionFilterOutput(args: GetEdgeActionExecutionFilterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEdgeActionExecutionFilterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:cdn/v20240722preview:getEdgeActionExecutionFilter", {
        "edgeActionName": args.edgeActionName,
        "executionFilter": args.executionFilter,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetEdgeActionExecutionFilterOutputArgs {
    /**
     * The name of the Edge Action
     */
    edgeActionName: pulumi.Input<string>;
    /**
     * The name of the execution filter
     */
    executionFilter: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
