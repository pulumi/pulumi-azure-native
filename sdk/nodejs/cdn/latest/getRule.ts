// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

export function getRule(args: GetRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetRuleResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:cdn/latest:getRule", {
        "profileName": args.profileName,
        "resourceGroupName": args.resourceGroupName,
        "ruleName": args.ruleName,
        "ruleSetName": args.ruleSetName,
    }, opts);
}

export interface GetRuleArgs {
    /**
     * Name of the CDN profile which is unique within the resource group.
     */
    readonly profileName: string;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    readonly resourceGroupName: string;
    /**
     * Name of the delivery rule which is unique within the endpoint.
     */
    readonly ruleName: string;
    /**
     * Name of the rule set under the profile.
     */
    readonly ruleSetName: string;
}

/**
 * Friendly Rules name mapping to the any Rules or secret related information.
 */
export interface GetRuleResult {
    /**
     * A list of actions that are executed when all the conditions of a rule are satisfied.
     */
    readonly actions: outputs.cdn.latest.DeliveryRuleCacheExpirationActionInvokeResponse | outputs.cdn.latest.DeliveryRuleCacheKeyQueryStringActionInvokeResponse | outputs.cdn.latest.DeliveryRuleRequestHeaderActionInvokeResponse | outputs.cdn.latest.DeliveryRuleResponseHeaderActionInvokeResponse | outputs.cdn.latest.OriginGroupOverrideActionInvokeResponse | outputs.cdn.latest.UrlRedirectActionInvokeResponse | outputs.cdn.latest.UrlRewriteActionInvokeResponse | outputs.cdn.latest.UrlSigningActionInvokeResponse[];
    /**
     * A list of conditions that must be matched for the actions to be executed
     */
    readonly conditions?: outputs.cdn.latest.DeliveryRuleCookiesConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleHttpVersionConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleIsDeviceConditionInvokeResponse | outputs.cdn.latest.DeliveryRulePostArgsConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleQueryStringConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleRemoteAddressConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleRequestBodyConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleRequestHeaderConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleRequestMethodConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleRequestSchemeConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleRequestUriConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleUrlFileExtensionConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleUrlFileNameConditionInvokeResponse | outputs.cdn.latest.DeliveryRuleUrlPathConditionInvokeResponse[];
    readonly deploymentStatus: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
     */
    readonly matchProcessingBehavior?: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
     */
    readonly order: number;
    /**
     * Provisioning status
     */
    readonly provisioningState: string;
    /**
     * Read only system data
     */
    readonly systemData: outputs.cdn.latest.SystemDataInvokeResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}
