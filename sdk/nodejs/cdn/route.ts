// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Friendly Routes name mapping to the any Routes or secret related information.
 *
 * Uses Azure REST API version 2025-06-01. In version 2.x of the Azure Native provider, it used API version 2023-05-01.
 *
 * Other available API versions: 2023-05-01, 2023-07-01-preview, 2024-02-01, 2024-05-01-preview, 2024-06-01-preview, 2024-09-01, 2025-01-01-preview, 2025-04-15. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cdn [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Route extends pulumi.CustomResource {
    /**
     * Get an existing Route resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Route {
        return new Route(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:cdn:Route';

    /**
     * Returns true if the given object is an instance of Route.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object.
     */
    declare public readonly cacheConfiguration: pulumi.Output<outputs.cdn.AfdRouteCacheConfigurationResponse | undefined>;
    /**
     * Domains referenced by this endpoint.
     */
    declare public readonly customDomains: pulumi.Output<outputs.cdn.ActivatedResourceReferenceResponse[] | undefined>;
    declare public /*out*/ readonly deploymentStatus: pulumi.Output<string>;
    /**
     * Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
     */
    declare public readonly enabledState: pulumi.Output<string | undefined>;
    /**
     * The name of the endpoint which holds the route.
     */
    declare public readonly endpointName: pulumi.Output<string>;
    /**
     * Protocol this rule will use when forwarding traffic to backends.
     */
    declare public readonly forwardingProtocol: pulumi.Output<string | undefined>;
    /**
     * Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed.
     */
    declare public readonly httpsRedirect: pulumi.Output<string | undefined>;
    /**
     * whether this route will be linked to the default endpoint domain.
     */
    declare public readonly linkToDefaultDomain: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * A reference to the origin group.
     */
    declare public readonly originGroup: pulumi.Output<outputs.cdn.ResourceReferenceResponse | undefined>;
    /**
     * A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
     */
    declare public readonly originPath: pulumi.Output<string | undefined>;
    /**
     * The route patterns of the rule.
     */
    declare public readonly patternsToMatch: pulumi.Output<string[] | undefined>;
    /**
     * Provisioning status
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * rule sets referenced by this endpoint.
     */
    declare public readonly ruleSets: pulumi.Output<outputs.cdn.ResourceReferenceResponse[] | undefined>;
    /**
     * List of supported protocols for this route.
     */
    declare public readonly supportedProtocols: pulumi.Output<string[] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.cdn.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a Route resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.endpointName === undefined && !opts.urn) {
                throw new Error("Missing required property 'endpointName'");
            }
            if (args?.profileName === undefined && !opts.urn) {
                throw new Error("Missing required property 'profileName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["cacheConfiguration"] = args?.cacheConfiguration;
            resourceInputs["customDomains"] = args?.customDomains;
            resourceInputs["enabledState"] = args?.enabledState;
            resourceInputs["endpointName"] = args?.endpointName;
            resourceInputs["forwardingProtocol"] = (args?.forwardingProtocol) ?? "MatchRequest";
            resourceInputs["httpsRedirect"] = (args?.httpsRedirect) ?? "Disabled";
            resourceInputs["linkToDefaultDomain"] = (args?.linkToDefaultDomain) ?? "Disabled";
            resourceInputs["originGroup"] = args?.originGroup;
            resourceInputs["originPath"] = args?.originPath;
            resourceInputs["patternsToMatch"] = args?.patternsToMatch;
            resourceInputs["profileName"] = args?.profileName;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["routeName"] = args?.routeName;
            resourceInputs["ruleSets"] = args?.ruleSets;
            resourceInputs["supportedProtocols"] = args?.supportedProtocols;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["deploymentStatus"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["cacheConfiguration"] = undefined /*out*/;
            resourceInputs["customDomains"] = undefined /*out*/;
            resourceInputs["deploymentStatus"] = undefined /*out*/;
            resourceInputs["enabledState"] = undefined /*out*/;
            resourceInputs["endpointName"] = undefined /*out*/;
            resourceInputs["forwardingProtocol"] = undefined /*out*/;
            resourceInputs["httpsRedirect"] = undefined /*out*/;
            resourceInputs["linkToDefaultDomain"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["originGroup"] = undefined /*out*/;
            resourceInputs["originPath"] = undefined /*out*/;
            resourceInputs["patternsToMatch"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["ruleSets"] = undefined /*out*/;
            resourceInputs["supportedProtocols"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:cdn/v20200901:Route" }, { type: "azure-native:cdn/v20210601:Route" }, { type: "azure-native:cdn/v20220501preview:Route" }, { type: "azure-native:cdn/v20221101preview:Route" }, { type: "azure-native:cdn/v20230501:Route" }, { type: "azure-native:cdn/v20230701preview:Route" }, { type: "azure-native:cdn/v20240201:Route" }, { type: "azure-native:cdn/v20240501preview:Route" }, { type: "azure-native:cdn/v20240601preview:Route" }, { type: "azure-native:cdn/v20240901:Route" }, { type: "azure-native:cdn/v20250101preview:Route" }, { type: "azure-native:cdn/v20250415:Route" }, { type: "azure-native:cdn/v20250601:Route" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Route.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Route resource.
 */
export interface RouteArgs {
    /**
     * The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object.
     */
    cacheConfiguration?: pulumi.Input<inputs.cdn.AfdRouteCacheConfigurationArgs>;
    /**
     * Domains referenced by this endpoint.
     */
    customDomains?: pulumi.Input<pulumi.Input<inputs.cdn.ActivatedResourceReferenceArgs>[]>;
    /**
     * Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
     */
    enabledState?: pulumi.Input<string | enums.cdn.EnabledState>;
    /**
     * Name of the endpoint under the profile which is unique globally.
     */
    endpointName: pulumi.Input<string>;
    /**
     * Protocol this rule will use when forwarding traffic to backends.
     */
    forwardingProtocol?: pulumi.Input<string | enums.cdn.ForwardingProtocol>;
    /**
     * Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed.
     */
    httpsRedirect?: pulumi.Input<string | enums.cdn.HttpsRedirect>;
    /**
     * whether this route will be linked to the default endpoint domain.
     */
    linkToDefaultDomain?: pulumi.Input<string | enums.cdn.LinkToDefaultDomain>;
    /**
     * A reference to the origin group.
     */
    originGroup?: pulumi.Input<inputs.cdn.ResourceReferenceArgs>;
    /**
     * A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
     */
    originPath?: pulumi.Input<string>;
    /**
     * The route patterns of the rule.
     */
    patternsToMatch?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
     */
    profileName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the routing rule.
     */
    routeName?: pulumi.Input<string>;
    /**
     * rule sets referenced by this endpoint.
     */
    ruleSets?: pulumi.Input<pulumi.Input<inputs.cdn.ResourceReferenceArgs>[]>;
    /**
     * List of supported protocols for this route.
     */
    supportedProtocols?: pulumi.Input<pulumi.Input<string | enums.cdn.AFDEndpointProtocols>[]>;
}
