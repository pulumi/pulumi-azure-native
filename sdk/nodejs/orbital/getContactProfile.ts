// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Customer creates a Contact Profile Resource, which will contain all of the configurations required for scheduling a contact.
 * API Version: 2022-03-01.
 */
export function getContactProfile(args: GetContactProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetContactProfileResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:orbital:getContactProfile", {
        "contactProfileName": args.contactProfileName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetContactProfileArgs {
    /**
     * Contact Profile Name
     */
    contactProfileName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Customer creates a Contact Profile Resource, which will contain all of the configurations required for scheduling a contact.
 */
export interface GetContactProfileResult {
    /**
     * Auto track configuration.
     */
    readonly autoTrackingConfiguration?: string;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * The URI of the Event Hub used for telemetry
     */
    readonly eventHubUri?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Links of the Contact Profile
     */
    readonly links: outputs.orbital.ContactProfileLinkResponse[];
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Minimum viable elevation for the contact in decimal degrees.
     */
    readonly minimumElevationDegrees?: number;
    /**
     * Minimum viable contact duration in ISO 8601 format.
     */
    readonly minimumViableContactDuration?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Network configuration of customer virtual network.
     */
    readonly networkConfiguration: outputs.orbital.ContactProfilesPropertiesResponseNetworkConfiguration;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.orbital.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}

export function getContactProfileOutput(args: GetContactProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContactProfileResult> {
    return pulumi.output(args).apply(a => getContactProfile(a, opts))
}

export interface GetContactProfileOutputArgs {
    /**
     * Contact Profile Name
     */
    contactProfileName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
