// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Customer creates a contact resource for a spacecraft resource.
 * API Version: 2021-04-04-preview.
 */
export class Contact extends pulumi.CustomResource {
    /**
     * Get an existing Contact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Contact {
        return new Contact(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:orbital:Contact';

    /**
     * Returns true if the given object is an instance of Contact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Contact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Contact.__pulumiType;
    }

    /**
     * The reference to the contact profile resource.
     */
    public readonly contactProfile!: pulumi.Output<outputs.orbital.ResourceReferenceResponse>;
    /**
     * Azimuth of the antenna at the end of the contact in decimal degrees.
     */
    public /*out*/ readonly endAzimuthDegrees!: pulumi.Output<number>;
    /**
     * Spacecraft elevation above the horizon at contact end.
     */
    public /*out*/ readonly endElevationDegrees!: pulumi.Output<number>;
    /**
     * Any error message while scheduling a contact.
     */
    public /*out*/ readonly errorMessage!: pulumi.Output<string>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Azure Ground Station name.
     */
    public readonly groundStationName!: pulumi.Output<string>;
    /**
     * Maximum elevation of the antenna during the contact in decimal degrees.
     */
    public /*out*/ readonly maximumElevationDegrees!: pulumi.Output<number>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Reservation end time of a contact.
     */
    public readonly reservationEndTime!: pulumi.Output<string>;
    /**
     * Reservation start time of a contact.
     */
    public readonly reservationStartTime!: pulumi.Output<string>;
    /**
     * Receive end time of a contact.
     */
    public /*out*/ readonly rxEndTime!: pulumi.Output<string>;
    /**
     * Receive start time of a contact.
     */
    public /*out*/ readonly rxStartTime!: pulumi.Output<string>;
    /**
     * Azimuth of the antenna at the start of the contact in decimal degrees.
     */
    public /*out*/ readonly startAzimuthDegrees!: pulumi.Output<number>;
    /**
     * Spacecraft elevation above the horizon at contact start.
     */
    public /*out*/ readonly startElevationDegrees!: pulumi.Output<number>;
    /**
     * Status of a contact.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.orbital.SystemDataResponse>;
    /**
     * Transmit end time of a contact.
     */
    public /*out*/ readonly txEndTime!: pulumi.Output<string>;
    /**
     * Transmit start time of a contact.
     */
    public /*out*/ readonly txStartTime!: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Contact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContactArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.contactProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contactProfile'");
            }
            if ((!args || args.groundStationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groundStationName'");
            }
            if ((!args || args.reservationEndTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reservationEndTime'");
            }
            if ((!args || args.reservationStartTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reservationStartTime'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.spacecraftName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spacecraftName'");
            }
            inputs["contactName"] = args ? args.contactName : undefined;
            inputs["contactProfile"] = args ? args.contactProfile : undefined;
            inputs["groundStationName"] = args ? args.groundStationName : undefined;
            inputs["reservationEndTime"] = args ? args.reservationEndTime : undefined;
            inputs["reservationStartTime"] = args ? args.reservationStartTime : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["spacecraftName"] = args ? args.spacecraftName : undefined;
            inputs["endAzimuthDegrees"] = undefined /*out*/;
            inputs["endElevationDegrees"] = undefined /*out*/;
            inputs["errorMessage"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["maximumElevationDegrees"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["rxEndTime"] = undefined /*out*/;
            inputs["rxStartTime"] = undefined /*out*/;
            inputs["startAzimuthDegrees"] = undefined /*out*/;
            inputs["startElevationDegrees"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["txEndTime"] = undefined /*out*/;
            inputs["txStartTime"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["contactProfile"] = undefined /*out*/;
            inputs["endAzimuthDegrees"] = undefined /*out*/;
            inputs["endElevationDegrees"] = undefined /*out*/;
            inputs["errorMessage"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["groundStationName"] = undefined /*out*/;
            inputs["maximumElevationDegrees"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["reservationEndTime"] = undefined /*out*/;
            inputs["reservationStartTime"] = undefined /*out*/;
            inputs["rxEndTime"] = undefined /*out*/;
            inputs["rxStartTime"] = undefined /*out*/;
            inputs["startAzimuthDegrees"] = undefined /*out*/;
            inputs["startElevationDegrees"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["txEndTime"] = undefined /*out*/;
            inputs["txStartTime"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-native:orbital/v20210404preview:Contact" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Contact.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Contact resource.
 */
export interface ContactArgs {
    /**
     * Contact Name
     */
    contactName?: pulumi.Input<string>;
    /**
     * The reference to the contact profile resource.
     */
    contactProfile: pulumi.Input<inputs.orbital.ResourceReferenceArgs>;
    /**
     * Azure Ground Station name.
     */
    groundStationName: pulumi.Input<string>;
    /**
     * Reservation end time of a contact.
     */
    reservationEndTime: pulumi.Input<string>;
    /**
     * Reservation start time of a contact.
     */
    reservationStartTime: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Spacecraft ID
     */
    spacecraftName: pulumi.Input<string>;
}
