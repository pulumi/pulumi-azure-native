// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Represents an environment instance
 */
export class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Environment {
        return new Environment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:labservices/v20181015:Environment';

    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Environment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Environment.__pulumiType;
    }

    /**
     * The name or email address of the user who has claimed the environment
     */
    public /*out*/ readonly claimedByUserName!: pulumi.Output<string>;
    /**
     * The AAD object Id of the user who has claimed the environment
     */
    public /*out*/ readonly claimedByUserObjectId!: pulumi.Output<string>;
    /**
     * The user principal Id of the user who has claimed the environment
     */
    public /*out*/ readonly claimedByUserPrincipalId!: pulumi.Output<string>;
    /**
     * Is the environment claimed or not
     */
    public /*out*/ readonly isClaimed!: pulumi.Output<boolean>;
    /**
     * Last known power state of the environment
     */
    public /*out*/ readonly lastKnownPowerState!: pulumi.Output<string>;
    /**
     * The details of the latest operation. ex: status, error
     */
    public /*out*/ readonly latestOperationResult!: pulumi.Output<outputs.labservices.v20181015.LatestOperationResultResponse>;
    /**
     * The location of the resource.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Network details of the environment
     */
    public /*out*/ readonly networkInterface!: pulumi.Output<outputs.labservices.v20181015.NetworkInterfaceResponse>;
    /**
     * When the password was last reset on the environment.
     */
    public /*out*/ readonly passwordLastReset!: pulumi.Output<string>;
    /**
     * The provisioning status of the resource.
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * The set of a VM and the setting id it was created for
     */
    public readonly resourceSets!: pulumi.Output<outputs.labservices.v20181015.ResourceSetResponse | undefined>;
    /**
     * The tags of the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * How long the environment has been used by a lab user
     */
    public /*out*/ readonly totalUsage!: pulumi.Output<string>;
    /**
     * The type of the resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The unique immutable identifier of a resource (Guid).
     */
    public readonly uniqueIdentifier!: pulumi.Output<string | undefined>;

    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.environmentName === undefined) {
                throw new Error("Missing required property 'environmentName'");
            }
            if (!args || args.environmentSettingName === undefined) {
                throw new Error("Missing required property 'environmentSettingName'");
            }
            if (!args || args.labAccountName === undefined) {
                throw new Error("Missing required property 'labAccountName'");
            }
            if (!args || args.labName === undefined) {
                throw new Error("Missing required property 'labName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["environmentName"] = args ? args.environmentName : undefined;
            inputs["environmentSettingName"] = args ? args.environmentSettingName : undefined;
            inputs["labAccountName"] = args ? args.labAccountName : undefined;
            inputs["labName"] = args ? args.labName : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["provisioningState"] = args ? args.provisioningState : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["resourceSets"] = args ? args.resourceSets : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["uniqueIdentifier"] = args ? args.uniqueIdentifier : undefined;
            inputs["claimedByUserName"] = undefined /*out*/;
            inputs["claimedByUserObjectId"] = undefined /*out*/;
            inputs["claimedByUserPrincipalId"] = undefined /*out*/;
            inputs["isClaimed"] = undefined /*out*/;
            inputs["lastKnownPowerState"] = undefined /*out*/;
            inputs["latestOperationResult"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["networkInterface"] = undefined /*out*/;
            inputs["passwordLastReset"] = undefined /*out*/;
            inputs["totalUsage"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["claimedByUserName"] = undefined /*out*/;
            inputs["claimedByUserObjectId"] = undefined /*out*/;
            inputs["claimedByUserPrincipalId"] = undefined /*out*/;
            inputs["isClaimed"] = undefined /*out*/;
            inputs["lastKnownPowerState"] = undefined /*out*/;
            inputs["latestOperationResult"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["networkInterface"] = undefined /*out*/;
            inputs["passwordLastReset"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["resourceSets"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["totalUsage"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["uniqueIdentifier"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:labservices/latest:Environment" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(Environment.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * The name of the environment.
     */
    readonly environmentName: pulumi.Input<string>;
    /**
     * The name of the environment Setting.
     */
    readonly environmentSettingName: pulumi.Input<string>;
    /**
     * The name of the lab Account.
     */
    readonly labAccountName: pulumi.Input<string>;
    /**
     * The name of the lab.
     */
    readonly labName: pulumi.Input<string>;
    /**
     * The location of the resource.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The provisioning status of the resource.
     */
    readonly provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The set of a VM and the setting id it was created for
     */
    readonly resourceSets?: pulumi.Input<inputs.labservices.v20181015.ResourceSet>;
    /**
     * The tags of the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The unique immutable identifier of a resource (Guid).
     */
    readonly uniqueIdentifier?: pulumi.Input<string>;
}
