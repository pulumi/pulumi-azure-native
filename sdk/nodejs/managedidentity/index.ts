// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FederatedIdentityCredentialArgs } from "./federatedIdentityCredential";
export type FederatedIdentityCredential = import("./federatedIdentityCredential").FederatedIdentityCredential;
export const FederatedIdentityCredential: typeof import("./federatedIdentityCredential").FederatedIdentityCredential = null as any;
utilities.lazyLoad(exports, ["FederatedIdentityCredential"], () => require("./federatedIdentityCredential"));

export { GetFederatedIdentityCredentialArgs, GetFederatedIdentityCredentialResult, GetFederatedIdentityCredentialOutputArgs } from "./getFederatedIdentityCredential";
export const getFederatedIdentityCredential: typeof import("./getFederatedIdentityCredential").getFederatedIdentityCredential = null as any;
export const getFederatedIdentityCredentialOutput: typeof import("./getFederatedIdentityCredential").getFederatedIdentityCredentialOutput = null as any;
utilities.lazyLoad(exports, ["getFederatedIdentityCredential","getFederatedIdentityCredentialOutput"], () => require("./getFederatedIdentityCredential"));

export { GetUserAssignedIdentityArgs, GetUserAssignedIdentityResult, GetUserAssignedIdentityOutputArgs } from "./getUserAssignedIdentity";
export const getUserAssignedIdentity: typeof import("./getUserAssignedIdentity").getUserAssignedIdentity = null as any;
export const getUserAssignedIdentityOutput: typeof import("./getUserAssignedIdentity").getUserAssignedIdentityOutput = null as any;
utilities.lazyLoad(exports, ["getUserAssignedIdentity","getUserAssignedIdentityOutput"], () => require("./getUserAssignedIdentity"));

export { ListUserAssignedIdentityAssociatedResourcesArgs, ListUserAssignedIdentityAssociatedResourcesResult, ListUserAssignedIdentityAssociatedResourcesOutputArgs } from "./listUserAssignedIdentityAssociatedResources";
export const listUserAssignedIdentityAssociatedResources: typeof import("./listUserAssignedIdentityAssociatedResources").listUserAssignedIdentityAssociatedResources = null as any;
export const listUserAssignedIdentityAssociatedResourcesOutput: typeof import("./listUserAssignedIdentityAssociatedResources").listUserAssignedIdentityAssociatedResourcesOutput = null as any;
utilities.lazyLoad(exports, ["listUserAssignedIdentityAssociatedResources","listUserAssignedIdentityAssociatedResourcesOutput"], () => require("./listUserAssignedIdentityAssociatedResources"));

export { UserAssignedIdentityArgs } from "./userAssignedIdentity";
export type UserAssignedIdentity = import("./userAssignedIdentity").UserAssignedIdentity;
export const UserAssignedIdentity: typeof import("./userAssignedIdentity").UserAssignedIdentity = null as any;
utilities.lazyLoad(exports, ["UserAssignedIdentity"], () => require("./userAssignedIdentity"));


// Export sub-modules:
import * as v20220131preview from "./v20220131preview";
import * as v20230131 from "./v20230131";

export {
    v20220131preview,
    v20230131,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:managedidentity:FederatedIdentityCredential":
                return new FederatedIdentityCredential(name, <any>undefined, { urn })
            case "azure-native:managedidentity:UserAssignedIdentity":
                return new UserAssignedIdentity(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "managedidentity", _module)
