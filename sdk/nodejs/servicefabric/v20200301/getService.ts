// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:servicefabric/v20200301:getService", {
        "applicationName": args.applicationName,
        "clusterName": args.clusterName,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
    }, opts);
}

export interface GetServiceArgs {
    /**
     * The name of the application resource.
     */
    readonly applicationName: string;
    /**
     * The name of the cluster resource.
     */
    readonly clusterName: string;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: string;
    /**
     * The name of the service resource in the format of {applicationName}~{serviceName}.
     */
    readonly serviceName: string;
}

/**
 * The service resource.
 */
export interface GetServiceResult {
    /**
     * A list that describes the correlation of the service with other services.
     */
    readonly correlationScheme?: outputs.servicefabric.v20200301.ServiceCorrelationDescriptionResponse[];
    /**
     * Specifies the move cost for the service.
     */
    readonly defaultMoveCost?: string;
    /**
     * Azure resource etag.
     */
    readonly etag: string;
    /**
     * It will be deprecated in New API, resource location depends on the parent resource.
     */
    readonly location?: string;
    /**
     * Azure resource name.
     */
    readonly name: string;
    /**
     * Describes how the service is partitioned.
     */
    readonly partitionDescription?: outputs.servicefabric.v20200301.NamedPartitionSchemeDescriptionResponse | outputs.servicefabric.v20200301.SingletonPartitionSchemeDescriptionResponse | outputs.servicefabric.v20200301.UniformInt64RangePartitionSchemeDescriptionResponse;
    /**
     * The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".
     */
    readonly placementConstraints?: string;
    /**
     * The current deployment or provisioning state, which only appears in the response
     */
    readonly provisioningState: string;
    /**
     * Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.
     */
    readonly serviceDnsName?: string;
    /**
     * The kind of service (Stateless or Stateful).
     */
    readonly serviceKind: string;
    /**
     * The service load metrics is given as an array of ServiceLoadMetricDescription objects.
     */
    readonly serviceLoadMetrics?: outputs.servicefabric.v20200301.ServiceLoadMetricDescriptionResponse[];
    /**
     * The activation Mode of the service package
     */
    readonly servicePackageActivationMode?: string;
    /**
     * A list that describes the correlation of the service with other services.
     */
    readonly servicePlacementPolicies?: outputs.servicefabric.v20200301.ServicePlacementPolicyDescriptionResponse[];
    /**
     * The name of the service type
     */
    readonly serviceTypeName?: string;
    /**
     * Azure resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Azure resource type.
     */
    readonly type: string;
}
