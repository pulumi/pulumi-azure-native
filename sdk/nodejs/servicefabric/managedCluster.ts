// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The managed cluster resource
 *
 * Uses Azure REST API version 2024-04-01. In version 2.x of the Azure Native provider, it used API version 2023-03-01-preview.
 *
 * Other available API versions: 2023-03-01-preview, 2023-07-01-preview, 2023-09-01-preview, 2023-11-01-preview, 2023-12-01-preview, 2024-02-01-preview, 2024-06-01-preview, 2024-09-01-preview, 2024-11-01-preview, 2025-03-01-preview, 2025-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native servicefabric [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class ManagedCluster extends pulumi.CustomResource {
    /**
     * Get an existing ManagedCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ManagedCluster {
        return new ManagedCluster(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:servicefabric:ManagedCluster';

    /**
     * Returns true if the given object is an instance of ManagedCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedCluster.__pulumiType;
    }

    /**
     * List of add-on features to enable on the cluster.
     */
    declare public readonly addonFeatures: pulumi.Output<string[] | undefined>;
    /**
     * VM admin user password.
     */
    declare public readonly adminPassword: pulumi.Output<string | undefined>;
    /**
     * VM admin user name.
     */
    declare public readonly adminUserName: pulumi.Output<string>;
    /**
     * Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false.
     */
    declare public readonly allowRdpAccess: pulumi.Output<boolean | undefined>;
    /**
     * The policy used to clean up unused versions.
     */
    declare public readonly applicationTypeVersionsCleanupPolicy: pulumi.Output<outputs.servicefabric.ApplicationTypeVersionsCleanupPolicyResponse | undefined>;
    /**
     * Auxiliary subnets for the cluster.
     */
    declare public readonly auxiliarySubnets: pulumi.Output<outputs.servicefabric.SubnetResponse[] | undefined>;
    /**
     * The AAD authentication settings of the cluster.
     */
    declare public readonly azureActiveDirectory: pulumi.Output<outputs.servicefabric.AzureActiveDirectoryResponse | undefined>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The port used for client connections to the cluster.
     */
    declare public readonly clientConnectionPort: pulumi.Output<number | undefined>;
    /**
     * Client certificates that are allowed to manage the cluster.
     */
    declare public readonly clients: pulumi.Output<outputs.servicefabric.ClientCertificateResponse[] | undefined>;
    /**
     * List of thumbprints of the cluster certificates.
     */
    declare public /*out*/ readonly clusterCertificateThumbprints: pulumi.Output<string[]>;
    /**
     * The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     */
    declare public readonly clusterCodeVersion: pulumi.Output<string | undefined>;
    /**
     * A service generated unique identifier for the cluster resource.
     */
    declare public /*out*/ readonly clusterId: pulumi.Output<string>;
    /**
     * The current state of the cluster.
     */
    declare public /*out*/ readonly clusterState: pulumi.Output<string>;
    /**
     * Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.
     */
    declare public readonly clusterUpgradeCadence: pulumi.Output<string | undefined>;
    /**
     * The upgrade mode of the cluster when new Service Fabric runtime version is available.
     */
    declare public readonly clusterUpgradeMode: pulumi.Output<string | undefined>;
    /**
     * Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster.
     */
    declare public readonly ddosProtectionPlanId: pulumi.Output<string | undefined>;
    /**
     * The cluster dns name.
     */
    declare public readonly dnsName: pulumi.Output<string>;
    /**
     * Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.
     */
    declare public readonly enableAutoOSUpgrade: pulumi.Output<boolean | undefined>;
    /**
     * If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined.
     */
    declare public readonly enableHttpGatewayExclusiveAuthMode: pulumi.Output<boolean | undefined>;
    /**
     * Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false.
     */
    declare public readonly enableIpv6: pulumi.Output<boolean | undefined>;
    /**
     * Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster.
     */
    declare public readonly enableServicePublicIP: pulumi.Output<boolean | undefined>;
    /**
     * Azure resource etag.
     */
    declare public /*out*/ readonly etag: pulumi.Output<string>;
    /**
     * The list of custom fabric settings to configure the cluster.
     */
    declare public readonly fabricSettings: pulumi.Output<outputs.servicefabric.SettingsSectionDescriptionResponse[] | undefined>;
    /**
     * The fully qualified domain name associated with the public load balancer of the cluster.
     */
    declare public /*out*/ readonly fqdn: pulumi.Output<string>;
    /**
     * The port used for HTTP connections to the cluster.
     */
    declare public readonly httpGatewayConnectionPort: pulumi.Output<number | undefined>;
    /**
     * The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint.
     */
    declare public readonly httpGatewayTokenAuthConnectionPort: pulumi.Output<number | undefined>;
    /**
     * The list of IP tags associated with the default public IP address of the cluster.
     */
    declare public readonly ipTags: pulumi.Output<outputs.servicefabric.IpTagResponse[] | undefined>;
    /**
     * The IPv4 address associated with the public load balancer of the cluster.
     */
    declare public /*out*/ readonly ipv4Address: pulumi.Output<string>;
    /**
     * IPv6 address for the cluster if IPv6 is enabled.
     */
    declare public /*out*/ readonly ipv6Address: pulumi.Output<string>;
    /**
     * Load balancing rules that are applied to the public load balancer of the cluster.
     */
    declare public readonly loadBalancingRules: pulumi.Output<outputs.servicefabric.LoadBalancingRuleResponse[] | undefined>;
    /**
     * Azure resource location.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Azure resource name.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Custom Network Security Rules that are applied to the Virtual Network of the cluster.
     */
    declare public readonly networkSecurityRules: pulumi.Output<outputs.servicefabric.NetworkSecurityRuleResponse[] | undefined>;
    /**
     * The provisioning state of the managed cluster resource.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created.
     */
    declare public readonly publicIPPrefixId: pulumi.Output<string | undefined>;
    /**
     * Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created.
     */
    declare public readonly publicIPv6PrefixId: pulumi.Output<string | undefined>;
    /**
     * Service endpoints for subnets in the cluster.
     */
    declare public readonly serviceEndpoints: pulumi.Output<outputs.servicefabric.ServiceEndpointResponse[] | undefined>;
    /**
     * The sku of the managed cluster
     */
    declare public readonly sku: pulumi.Output<outputs.servicefabric.SkuResponse>;
    /**
     * If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created.
     */
    declare public readonly subnetId: pulumi.Output<string | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.servicefabric.SystemDataResponse>;
    /**
     * Azure resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Azure resource type.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * The policy to use when upgrading the cluster.
     */
    declare public readonly upgradeDescription: pulumi.Output<outputs.servicefabric.ClusterUpgradePolicyResponse | undefined>;
    /**
     * For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types.
     */
    declare public readonly useCustomVnet: pulumi.Output<boolean | undefined>;
    /**
     * Indicates if the cluster has zone resiliency.
     */
    declare public readonly zonalResiliency: pulumi.Output<boolean | undefined>;
    /**
     * Indicates the update mode for Cross Az clusters.
     */
    declare public readonly zonalUpdateMode: pulumi.Output<string | undefined>;

    /**
     * Create a ManagedCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedClusterArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.adminUserName === undefined && !opts.urn) {
                throw new Error("Missing required property 'adminUserName'");
            }
            if (args?.dnsName === undefined && !opts.urn) {
                throw new Error("Missing required property 'dnsName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.sku === undefined && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["addonFeatures"] = args?.addonFeatures;
            resourceInputs["adminPassword"] = args?.adminPassword;
            resourceInputs["adminUserName"] = args?.adminUserName;
            resourceInputs["allowRdpAccess"] = args?.allowRdpAccess;
            resourceInputs["applicationTypeVersionsCleanupPolicy"] = args?.applicationTypeVersionsCleanupPolicy;
            resourceInputs["auxiliarySubnets"] = args?.auxiliarySubnets;
            resourceInputs["azureActiveDirectory"] = args?.azureActiveDirectory;
            resourceInputs["clientConnectionPort"] = (args?.clientConnectionPort) ?? 19000;
            resourceInputs["clients"] = args?.clients;
            resourceInputs["clusterCodeVersion"] = args?.clusterCodeVersion;
            resourceInputs["clusterName"] = args?.clusterName;
            resourceInputs["clusterUpgradeCadence"] = args?.clusterUpgradeCadence;
            resourceInputs["clusterUpgradeMode"] = args?.clusterUpgradeMode;
            resourceInputs["ddosProtectionPlanId"] = args?.ddosProtectionPlanId;
            resourceInputs["dnsName"] = args?.dnsName;
            resourceInputs["enableAutoOSUpgrade"] = args?.enableAutoOSUpgrade;
            resourceInputs["enableHttpGatewayExclusiveAuthMode"] = args?.enableHttpGatewayExclusiveAuthMode;
            resourceInputs["enableIpv6"] = args?.enableIpv6;
            resourceInputs["enableServicePublicIP"] = args?.enableServicePublicIP;
            resourceInputs["fabricSettings"] = args?.fabricSettings;
            resourceInputs["httpGatewayConnectionPort"] = (args?.httpGatewayConnectionPort) ?? 19080;
            resourceInputs["httpGatewayTokenAuthConnectionPort"] = args?.httpGatewayTokenAuthConnectionPort;
            resourceInputs["ipTags"] = args?.ipTags;
            resourceInputs["loadBalancingRules"] = args?.loadBalancingRules;
            resourceInputs["location"] = args?.location;
            resourceInputs["networkSecurityRules"] = args?.networkSecurityRules;
            resourceInputs["publicIPPrefixId"] = args?.publicIPPrefixId;
            resourceInputs["publicIPv6PrefixId"] = args?.publicIPv6PrefixId;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["serviceEndpoints"] = args?.serviceEndpoints;
            resourceInputs["sku"] = args?.sku;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["upgradeDescription"] = args ? (args.upgradeDescription ? pulumi.output(args.upgradeDescription).apply(inputs.servicefabric.clusterUpgradePolicyArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["useCustomVnet"] = args?.useCustomVnet;
            resourceInputs["zonalResiliency"] = (args?.zonalResiliency) ?? false;
            resourceInputs["zonalUpdateMode"] = args?.zonalUpdateMode;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["clusterCertificateThumbprints"] = undefined /*out*/;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["clusterState"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["fqdn"] = undefined /*out*/;
            resourceInputs["ipv4Address"] = undefined /*out*/;
            resourceInputs["ipv6Address"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["addonFeatures"] = undefined /*out*/;
            resourceInputs["adminPassword"] = undefined /*out*/;
            resourceInputs["adminUserName"] = undefined /*out*/;
            resourceInputs["allowRdpAccess"] = undefined /*out*/;
            resourceInputs["applicationTypeVersionsCleanupPolicy"] = undefined /*out*/;
            resourceInputs["auxiliarySubnets"] = undefined /*out*/;
            resourceInputs["azureActiveDirectory"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["clientConnectionPort"] = undefined /*out*/;
            resourceInputs["clients"] = undefined /*out*/;
            resourceInputs["clusterCertificateThumbprints"] = undefined /*out*/;
            resourceInputs["clusterCodeVersion"] = undefined /*out*/;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["clusterState"] = undefined /*out*/;
            resourceInputs["clusterUpgradeCadence"] = undefined /*out*/;
            resourceInputs["clusterUpgradeMode"] = undefined /*out*/;
            resourceInputs["ddosProtectionPlanId"] = undefined /*out*/;
            resourceInputs["dnsName"] = undefined /*out*/;
            resourceInputs["enableAutoOSUpgrade"] = undefined /*out*/;
            resourceInputs["enableHttpGatewayExclusiveAuthMode"] = undefined /*out*/;
            resourceInputs["enableIpv6"] = undefined /*out*/;
            resourceInputs["enableServicePublicIP"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["fabricSettings"] = undefined /*out*/;
            resourceInputs["fqdn"] = undefined /*out*/;
            resourceInputs["httpGatewayConnectionPort"] = undefined /*out*/;
            resourceInputs["httpGatewayTokenAuthConnectionPort"] = undefined /*out*/;
            resourceInputs["ipTags"] = undefined /*out*/;
            resourceInputs["ipv4Address"] = undefined /*out*/;
            resourceInputs["ipv6Address"] = undefined /*out*/;
            resourceInputs["loadBalancingRules"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkSecurityRules"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["publicIPPrefixId"] = undefined /*out*/;
            resourceInputs["publicIPv6PrefixId"] = undefined /*out*/;
            resourceInputs["serviceEndpoints"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["subnetId"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["upgradeDescription"] = undefined /*out*/;
            resourceInputs["useCustomVnet"] = undefined /*out*/;
            resourceInputs["zonalResiliency"] = undefined /*out*/;
            resourceInputs["zonalUpdateMode"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:servicefabric/v20200101preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20210101preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20210501:ManagedCluster" }, { type: "azure-native:servicefabric/v20210701preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20210901privatepreview:ManagedCluster" }, { type: "azure-native:servicefabric/v20211101preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20220101:ManagedCluster" }, { type: "azure-native:servicefabric/v20220201preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20220601preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20220801preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20221001preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20230201preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20230301preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20230701preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20230901preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20231101preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20231201preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20240201preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20240401:ManagedCluster" }, { type: "azure-native:servicefabric/v20240601preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20240901preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20241101preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20250301preview:ManagedCluster" }, { type: "azure-native:servicefabric/v20250601preview:ManagedCluster" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ManagedCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ManagedCluster resource.
 */
export interface ManagedClusterArgs {
    /**
     * List of add-on features to enable on the cluster.
     */
    addonFeatures?: pulumi.Input<pulumi.Input<string | enums.servicefabric.ManagedClusterAddOnFeature>[]>;
    /**
     * VM admin user password.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * VM admin user name.
     */
    adminUserName: pulumi.Input<string>;
    /**
     * Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false.
     */
    allowRdpAccess?: pulumi.Input<boolean>;
    /**
     * The policy used to clean up unused versions.
     */
    applicationTypeVersionsCleanupPolicy?: pulumi.Input<inputs.servicefabric.ApplicationTypeVersionsCleanupPolicyArgs>;
    /**
     * Auxiliary subnets for the cluster.
     */
    auxiliarySubnets?: pulumi.Input<pulumi.Input<inputs.servicefabric.SubnetArgs>[]>;
    /**
     * The AAD authentication settings of the cluster.
     */
    azureActiveDirectory?: pulumi.Input<inputs.servicefabric.AzureActiveDirectoryArgs>;
    /**
     * The port used for client connections to the cluster.
     */
    clientConnectionPort?: pulumi.Input<number>;
    /**
     * Client certificates that are allowed to manage the cluster.
     */
    clients?: pulumi.Input<pulumi.Input<inputs.servicefabric.ClientCertificateArgs>[]>;
    /**
     * The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     */
    clusterCodeVersion?: pulumi.Input<string>;
    /**
     * The name of the cluster resource.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.
     */
    clusterUpgradeCadence?: pulumi.Input<string | enums.servicefabric.ClusterUpgradeCadence>;
    /**
     * The upgrade mode of the cluster when new Service Fabric runtime version is available.
     */
    clusterUpgradeMode?: pulumi.Input<string | enums.servicefabric.ClusterUpgradeMode>;
    /**
     * Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster.
     */
    ddosProtectionPlanId?: pulumi.Input<string>;
    /**
     * The cluster dns name.
     */
    dnsName: pulumi.Input<string>;
    /**
     * Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.
     */
    enableAutoOSUpgrade?: pulumi.Input<boolean>;
    /**
     * If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined.
     */
    enableHttpGatewayExclusiveAuthMode?: pulumi.Input<boolean>;
    /**
     * Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false.
     */
    enableIpv6?: pulumi.Input<boolean>;
    /**
     * Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster.
     */
    enableServicePublicIP?: pulumi.Input<boolean>;
    /**
     * The list of custom fabric settings to configure the cluster.
     */
    fabricSettings?: pulumi.Input<pulumi.Input<inputs.servicefabric.SettingsSectionDescriptionArgs>[]>;
    /**
     * The port used for HTTP connections to the cluster.
     */
    httpGatewayConnectionPort?: pulumi.Input<number>;
    /**
     * The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint.
     */
    httpGatewayTokenAuthConnectionPort?: pulumi.Input<number>;
    /**
     * The list of IP tags associated with the default public IP address of the cluster.
     */
    ipTags?: pulumi.Input<pulumi.Input<inputs.servicefabric.IpTagArgs>[]>;
    /**
     * Load balancing rules that are applied to the public load balancer of the cluster.
     */
    loadBalancingRules?: pulumi.Input<pulumi.Input<inputs.servicefabric.LoadBalancingRuleArgs>[]>;
    /**
     * Azure resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Custom Network Security Rules that are applied to the Virtual Network of the cluster.
     */
    networkSecurityRules?: pulumi.Input<pulumi.Input<inputs.servicefabric.NetworkSecurityRuleArgs>[]>;
    /**
     * Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created.
     */
    publicIPPrefixId?: pulumi.Input<string>;
    /**
     * Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created.
     */
    publicIPv6PrefixId?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Service endpoints for subnets in the cluster.
     */
    serviceEndpoints?: pulumi.Input<pulumi.Input<inputs.servicefabric.ServiceEndpointArgs>[]>;
    /**
     * The sku of the managed cluster
     */
    sku: pulumi.Input<inputs.servicefabric.SkuArgs>;
    /**
     * If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Azure resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The policy to use when upgrading the cluster.
     */
    upgradeDescription?: pulumi.Input<inputs.servicefabric.ClusterUpgradePolicyArgs>;
    /**
     * For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types.
     */
    useCustomVnet?: pulumi.Input<boolean>;
    /**
     * Indicates if the cluster has zone resiliency.
     */
    zonalResiliency?: pulumi.Input<boolean>;
    /**
     * Indicates the update mode for Cross Az clusters.
     */
    zonalUpdateMode?: pulumi.Input<string | enums.servicefabric.ZonalUpdateMode>;
}
