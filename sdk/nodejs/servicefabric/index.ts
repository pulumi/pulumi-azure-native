// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./application";
export * from "./applicationType";
export * from "./applicationTypeVersion";
export * from "./cluster";
export * from "./getApplication";
export * from "./getApplicationType";
export * from "./getApplicationTypeVersion";
export * from "./getCluster";
export * from "./getManagedCluster";
export * from "./getNodeType";
export * from "./getService";
export * from "./managedCluster";
export * from "./nodeType";
export * from "./service";

// Export enums:
export * from "../types/enums/servicefabric";

// Export sub-modules:
import * as latest from "./latest";
import * as v20160901 from "./v20160901";
import * as v20170701preview from "./v20170701preview";
import * as v20180201 from "./v20180201";
import * as v20190301 from "./v20190301";
import * as v20190301preview from "./v20190301preview";
import * as v20190601preview from "./v20190601preview";
import * as v20191101preview from "./v20191101preview";
import * as v20200101preview from "./v20200101preview";
import * as v20200301 from "./v20200301";

export {
    latest,
    v20160901,
    v20170701preview,
    v20180201,
    v20190301,
    v20190301preview,
    v20190601preview,
    v20191101preview,
    v20200101preview,
    v20200301,
};

// Import resources to register:
import { Application } from "./application";
import { ApplicationType } from "./applicationType";
import { ApplicationTypeVersion } from "./applicationTypeVersion";
import { Cluster } from "./cluster";
import { ManagedCluster } from "./managedCluster";
import { NodeType } from "./nodeType";
import { Service } from "./service";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:servicefabric:Application":
                return new Application(name, <any>undefined, { urn })
            case "azure-nextgen:servicefabric:ApplicationType":
                return new ApplicationType(name, <any>undefined, { urn })
            case "azure-nextgen:servicefabric:ApplicationTypeVersion":
                return new ApplicationTypeVersion(name, <any>undefined, { urn })
            case "azure-nextgen:servicefabric:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "azure-nextgen:servicefabric:ManagedCluster":
                return new ManagedCluster(name, <any>undefined, { urn })
            case "azure-nextgen:servicefabric:NodeType":
                return new NodeType(name, <any>undefined, { urn })
            case "azure-nextgen:servicefabric:Service":
                return new Service(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "servicefabric", _module)
