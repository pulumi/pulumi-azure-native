// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

export function getManagedCluster(args: GetManagedClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedClusterResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:servicefabric:getManagedCluster", {
        "clusterName": args.clusterName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetManagedClusterArgs {
    /**
     * The name of the cluster resource.
     */
    readonly clusterName: string;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: string;
}

/**
 * The manged cluster resource
 */
export interface GetManagedClusterResult {
    /**
     * client certificates for the cluster.
     */
    readonly addonFeatures?: string[];
    /**
     * vm admin user password.
     */
    readonly adminPassword?: string;
    /**
     * vm admin user name.
     */
    readonly adminUserName: string;
    /**
     * Azure active directory.
     */
    readonly azureActiveDirectory?: outputs.servicefabric.AzureActiveDirectoryResponse;
    /**
     * The port used for client connections to the cluster.
     */
    readonly clientConnectionPort?: number;
    /**
     * client certificates for the cluster.
     */
    readonly clients?: outputs.servicefabric.ClientCertificateResponse[];
    /**
     * The cluster certificate thumbprint used node to node communication.
     */
    readonly clusterCertificateThumbprint: string;
    /**
     * The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     */
    readonly clusterCodeVersion?: string;
    /**
     * A service generated unique identifier for the cluster resource.
     */
    readonly clusterId: string;
    /**
     * The current state of the cluster.
     */
    readonly clusterState: string;
    /**
     * The cluster dns name.
     */
    readonly dnsName: string;
    /**
     * Azure resource etag.
     */
    readonly etag: string;
    /**
     * The list of custom fabric settings to configure the cluster.
     */
    readonly fabricSettings?: outputs.servicefabric.SettingsSectionDescriptionResponse[];
    /**
     * the cluster Fully qualified domain name.
     */
    readonly fqdn: string;
    /**
     * The port used for http connections to the cluster.
     */
    readonly httpGatewayConnectionPort?: number;
    /**
     * Azure resource identifier.
     */
    readonly id: string;
    /**
     * Describes load balancing rules.
     */
    readonly loadBalancingRules?: outputs.servicefabric.LoadBalancingRuleResponse[];
    /**
     * Azure resource location.
     */
    readonly location: string;
    /**
     * Azure resource name.
     */
    readonly name: string;
    /**
     * The provisioning state of the managed cluster resource.
     */
    readonly provisioningState: string;
    /**
     * The sku of the managed cluster
     */
    readonly sku?: outputs.servicefabric.SkuResponse;
    /**
     * Azure resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Azure resource type.
     */
    readonly type: string;
}
