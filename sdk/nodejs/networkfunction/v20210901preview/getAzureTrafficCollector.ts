// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Azure Traffic Collector resource.
 */
/** @deprecated Version v20210901preview will be removed in the next major version of the provider. Upgrade to version v20220501 or later. */
export function getAzureTrafficCollector(args: GetAzureTrafficCollectorArgs, opts?: pulumi.InvokeOptions): Promise<GetAzureTrafficCollectorResult> {
    pulumi.log.warn("getAzureTrafficCollector is deprecated: Version v20210901preview will be removed in the next major version of the provider. Upgrade to version v20220501 or later.")
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:networkfunction/v20210901preview:getAzureTrafficCollector", {
        "azureTrafficCollectorName": args.azureTrafficCollectorName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetAzureTrafficCollectorArgs {
    /**
     * Azure Traffic Collector name
     */
    azureTrafficCollectorName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}

/**
 * Azure Traffic Collector resource.
 */
export interface GetAzureTrafficCollectorResult {
    /**
     * Collector Policies for Azure Traffic Collector.
     */
    readonly collectorPolicies?: outputs.networkfunction.v20210901preview.CollectorPolicyResponse[];
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource location.
     */
    readonly location?: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * The provisioning state of the application rule collection resource.
     */
    readonly provisioningState: string;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.networkfunction.v20210901preview.TrackedResourceResponseSystemData;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type.
     */
    readonly type: string;
    /**
     * The virtualHub to which the Azure Traffic Collector belongs.
     */
    readonly virtualHub?: outputs.networkfunction.v20210901preview.ResourceReferenceResponse;
}

export function getAzureTrafficCollectorOutput(args: GetAzureTrafficCollectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAzureTrafficCollectorResult> {
    return pulumi.output(args).apply(a => getAzureTrafficCollector(a, opts))
}

export interface GetAzureTrafficCollectorOutputArgs {
    /**
     * Azure Traffic Collector name
     */
    azureTrafficCollectorName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
