// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Represents a Blueprint definition.
 */
/** @deprecated Version v20171111preview will be removed in the next major version of the provider. Upgrade to version v20181101preview or later. */
export function getBlueprint(args: GetBlueprintArgs, opts?: pulumi.InvokeOptions): Promise<GetBlueprintResult> {
    pulumi.log.warn("getBlueprint is deprecated: Version v20171111preview will be removed in the next major version of the provider. Upgrade to version v20181101preview or later.")
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:blueprint/v20171111preview:getBlueprint", {
        "blueprintName": args.blueprintName,
        "managementGroupName": args.managementGroupName,
    }, opts);
}

export interface GetBlueprintArgs {
    /**
     * name of the blueprint.
     */
    blueprintName: string;
    /**
     * ManagementGroup where blueprint stores.
     */
    managementGroupName: string;
}

/**
 * Represents a Blueprint definition.
 */
export interface GetBlueprintResult {
    /**
     * Multi-line explain this resource.
     */
    readonly description?: string;
    /**
     * One-liner string explain this resource.
     */
    readonly displayName?: string;
    /**
     * String Id used to locate any resource on Azure.
     */
    readonly id: string;
    /**
     * Layout view of the blueprint, for UI reference.
     */
    readonly layout?: any;
    /**
     * Name of this resource.
     */
    readonly name: string;
    /**
     * Parameters required by this Blueprint definition.
     */
    readonly parameters?: {[key: string]: outputs.blueprint.v20171111preview.ParameterDefinitionResponse};
    /**
     * Resource group placeholders defined by this Blueprint definition.
     */
    readonly resourceGroups?: {[key: string]: outputs.blueprint.v20171111preview.ResourceGroupDefinitionResponse};
    /**
     * Status of the Blueprint. This field is readonly.
     */
    readonly status: outputs.blueprint.v20171111preview.BlueprintStatusResponse;
    /**
     * The scope where this Blueprint can be applied.
     */
    readonly targetScope: string;
    /**
     * Type of this resource.
     */
    readonly type: string;
    /**
     * Published versions of this blueprint.
     */
    readonly versions?: any;
}

export function getBlueprintOutput(args: GetBlueprintOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlueprintResult> {
    return pulumi.output(args).apply(a => getBlueprint(a, opts))
}

export interface GetBlueprintOutputArgs {
    /**
     * name of the blueprint.
     */
    blueprintName: pulumi.Input<string>;
    /**
     * ManagementGroup where blueprint stores.
     */
    managementGroupName: pulumi.Input<string>;
}
