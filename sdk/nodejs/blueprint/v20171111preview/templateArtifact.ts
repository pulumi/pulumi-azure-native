// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Blueprint artifact deploys Azure resource manager template.
 */
export class TemplateArtifact extends pulumi.CustomResource {
    /**
     * Get an existing TemplateArtifact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TemplateArtifact {
        return new TemplateArtifact(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:blueprint/v20171111preview:TemplateArtifact';

    /**
     * Returns true if the given object is an instance of TemplateArtifact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TemplateArtifact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TemplateArtifact.__pulumiType;
    }

    /**
     * Artifacts which need to be deployed before the specified artifact.
     */
    public readonly dependsOn!: pulumi.Output<string[] | undefined>;
    /**
     * Multi-line explain this resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * One-liner string explain this resource.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Specifies the kind of Blueprint artifact.
     * Expected value is 'template'.
     */
    public readonly kind!: pulumi.Output<"template">;
    /**
     * Name of this resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Template parameter values.
     */
    public readonly parameters!: pulumi.Output<{[key: string]: outputs.blueprint.v20171111preview.ParameterValueBaseResponse}>;
    /**
     * If applicable, the name of the resource group placeholder to which the template will be deployed.
     */
    public readonly resourceGroup!: pulumi.Output<string | undefined>;
    /**
     * The Azure Resource Manager template body.
     */
    public readonly template!: pulumi.Output<any>;
    /**
     * Type of this resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a TemplateArtifact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TemplateArtifactArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.blueprintName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'blueprintName'");
            }
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.managementGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managementGroupName'");
            }
            if ((!args || args.parameters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parameters'");
            }
            if ((!args || args.template === undefined) && !opts.urn) {
                throw new Error("Missing required property 'template'");
            }
            inputs["artifactName"] = args ? args.artifactName : undefined;
            inputs["blueprintName"] = args ? args.blueprintName : undefined;
            inputs["dependsOn"] = args ? args.dependsOn : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["kind"] = "template";
            inputs["managementGroupName"] = args ? args.managementGroupName : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["resourceGroup"] = args ? args.resourceGroup : undefined;
            inputs["template"] = args ? args.template : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["dependsOn"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["parameters"] = undefined /*out*/;
            inputs["resourceGroup"] = undefined /*out*/;
            inputs["template"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:blueprint/v20171111preview:TemplateArtifact" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(TemplateArtifact.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a TemplateArtifact resource.
 */
export interface TemplateArtifactArgs {
    /**
     * name of the artifact.
     */
    artifactName?: pulumi.Input<string>;
    /**
     * name of the blueprint.
     */
    blueprintName: pulumi.Input<string>;
    /**
     * Artifacts which need to be deployed before the specified artifact.
     */
    dependsOn?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Multi-line explain this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * One-liner string explain this resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Specifies the kind of Blueprint artifact.
     * Expected value is 'template'.
     */
    kind: pulumi.Input<"template">;
    /**
     * ManagementGroup where blueprint stores.
     */
    managementGroupName: pulumi.Input<string>;
    /**
     * Template parameter values.
     */
    parameters: pulumi.Input<{[key: string]: pulumi.Input<inputs.blueprint.v20171111preview.ParameterValueBaseArgs>}>;
    /**
     * If applicable, the name of the resource group placeholder to which the template will be deployed.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * The Azure Resource Manager template body.
     */
    template: any;
}
