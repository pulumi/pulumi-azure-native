// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get a Blueprint artifact.
 */
export function getTemplateArtifact(args: GetTemplateArtifactArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplateArtifactResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:blueprint/v20171111preview:getTemplateArtifact", {
        "artifactName": args.artifactName,
        "blueprintName": args.blueprintName,
        "managementGroupName": args.managementGroupName,
    }, opts);
}

export interface GetTemplateArtifactArgs {
    /**
     * name of the artifact.
     */
    artifactName: string;
    /**
     * name of the blueprint.
     */
    blueprintName: string;
    /**
     * ManagementGroup where blueprint stores.
     */
    managementGroupName: string;
}

/**
 * Blueprint artifact deploys Azure resource manager template.
 */
export interface GetTemplateArtifactResult {
    /**
     * String Id used to locate any resource on Azure.
     */
    readonly id: string;
    /**
     * Specifies the kind of Blueprint artifact.
     * Expected value is 'template'.
     */
    readonly kind: "template";
    /**
     * Name of this resource.
     */
    readonly name: string;
    /**
     * Properties for template artifact
     */
    readonly properties: outputs.blueprint.v20171111preview.TemplateArtifactPropertiesResponse;
    /**
     * Type of this resource.
     */
    readonly type: string;
}
/**
 * Get a Blueprint artifact.
 */
export function getTemplateArtifactOutput(args: GetTemplateArtifactOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplateArtifactResult> {
    return pulumi.output(args).apply((a: any) => getTemplateArtifact(a, opts))
}

export interface GetTemplateArtifactOutputArgs {
    /**
     * name of the artifact.
     */
    artifactName: pulumi.Input<string>;
    /**
     * name of the blueprint.
     */
    blueprintName: pulumi.Input<string>;
    /**
     * ManagementGroup where blueprint stores.
     */
    managementGroupName: pulumi.Input<string>;
}
