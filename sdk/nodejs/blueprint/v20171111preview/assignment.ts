// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Represents a Blueprint assignment.
 *
 * @deprecated Version 2017-11-11-preview will be removed in v2 of the provider.
 */
export class Assignment extends pulumi.CustomResource {
    /**
     * Get an existing Assignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Assignment {
        pulumi.log.warn("Assignment is deprecated: Version 2017-11-11-preview will be removed in v2 of the provider.")
        return new Assignment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:blueprint/v20171111preview:Assignment';

    /**
     * Returns true if the given object is an instance of Assignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Assignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Assignment.__pulumiType;
    }

    /**
     * Managed Service Identity for this Blueprint assignment
     */
    public readonly identity!: pulumi.Output<outputs.blueprint.v20171111preview.ManagedServiceIdentityResponse>;
    /**
     * The location of this Blueprint assignment.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Name of this resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Properties for Assignment object.
     */
    public readonly properties!: pulumi.Output<outputs.blueprint.v20171111preview.AssignmentPropertiesResponse>;
    /**
     * Type of this resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Assignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2017-11-11-preview will be removed in v2 of the provider. */
    constructor(name: string, args: AssignmentArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Assignment is deprecated: Version 2017-11-11-preview will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.identity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identity'");
            }
            if ((!args || args.properties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'properties'");
            }
            resourceInputs["assignmentName"] = args ? args.assignmentName : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Assignment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Assignment resource.
 */
export interface AssignmentArgs {
    /**
     * name of the assignment.
     */
    assignmentName?: pulumi.Input<string>;
    /**
     * Managed Service Identity for this Blueprint assignment
     */
    identity: pulumi.Input<inputs.blueprint.v20171111preview.ManagedServiceIdentityArgs>;
    /**
     * The location of this Blueprint assignment.
     */
    location?: pulumi.Input<string>;
    /**
     * Properties for Assignment object.
     */
    properties: pulumi.Input<inputs.blueprint.v20171111preview.AssignmentPropertiesArgs>;
    /**
     * azure subscriptionId, which we assign the blueprint to.
     */
    subscriptionId?: pulumi.Input<string>;
}
