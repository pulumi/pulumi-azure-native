// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * IoT site model
 * API Version: 2021-09-01-preview.
 */
export class LocationSite extends pulumi.CustomResource {
    /**
     * Get an existing LocationSite resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocationSite {
        return new LocationSite(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:iotsecurity:LocationSite';

    /**
     * Returns true if the given object is an instance of LocationSite.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocationSite {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocationSite.__pulumiType;
    }

    /**
     * Display name of the IoT site
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.iotsecurity.SystemDataResponse>;
    /**
     * Tags of the IoT site
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a LocationSite resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationSiteArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.iotDefenderLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iotDefenderLocation'");
            }
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["iotDefenderLocation"] = args ? args.iotDefenderLocation : undefined;
            inputs["siteName"] = args ? args.siteName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["displayName"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:iotsecurity:LocationSite" }, { type: "azure-native:iotsecurity/v20210901preview:LocationSite" }, { type: "azure-nextgen:iotsecurity/v20210901preview:LocationSite" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(LocationSite.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a LocationSite resource.
 */
export interface LocationSiteArgs {
    /**
     * Display name of the IoT site
     */
    displayName: pulumi.Input<string>;
    /**
     * Defender for IoT location
     */
    iotDefenderLocation: pulumi.Input<string>;
    /**
     * Site Name
     */
    siteName?: pulumi.Input<string>;
    /**
     * Tags of the IoT site
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
