// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get on-premise IoT sensor
 */
export function getOnPremiseSensor(args: GetOnPremiseSensorArgs, opts?: pulumi.InvokeOptions): Promise<GetOnPremiseSensorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:iotsecurity/v20210201preview:getOnPremiseSensor", {
        "onPremiseSensorName": args.onPremiseSensorName,
    }, opts);
}

export interface GetOnPremiseSensorArgs {
    /**
     * Name of the on-premise IoT sensor
     */
    onPremiseSensorName: string;
}

/**
 * On-premise IoT sensor
 */
export interface GetOnPremiseSensorResult {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.iotsecurity.v20210201preview.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get on-premise IoT sensor
 */
export function getOnPremiseSensorOutput(args: GetOnPremiseSensorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOnPremiseSensorResult> {
    return pulumi.output(args).apply((a: any) => getOnPremiseSensor(a, opts))
}

export interface GetOnPremiseSensorOutputArgs {
    /**
     * Name of the on-premise IoT sensor
     */
    onPremiseSensorName: pulumi.Input<string>;
}
