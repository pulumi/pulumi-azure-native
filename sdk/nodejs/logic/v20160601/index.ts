// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./agreement";
export * from "./certificate";
export * from "./getAgreement";
export * from "./getCertificate";
export * from "./getIntegrationAccount";
export * from "./getIntegrationAccountAssembly";
export * from "./getIntegrationAccountBatchConfiguration";
export * from "./getMap";
export * from "./getPartner";
export * from "./getRosettaNetProcessConfiguration";
export * from "./getSchema";
export * from "./getSession";
export * from "./getWorkflow";
export * from "./integrationAccount";
export * from "./integrationAccountAssembly";
export * from "./integrationAccountBatchConfiguration";
export * from "./listAgreementContentCallbackUrl";
export * from "./listIntegrationAccountAssemblyContentCallbackUrl";
export * from "./listIntegrationAccountCallbackUrl";
export * from "./listIntegrationAccountKeyVaultKeys";
export * from "./listMapContentCallbackUrl";
export * from "./listPartnerContentCallbackUrl";
export * from "./listSchemaContentCallbackUrl";
export * from "./listWorkflowCallbackUrl";
export * from "./listWorkflowRunActionExpressionTraces";
export * from "./listWorkflowRunActionRepetitionExpressionTraces";
export * from "./listWorkflowTriggerCallbackUrl";
export * from "./listWorkflowVersionCallbackUrl";
export * from "./map";
export * from "./partner";
export * from "./rosettaNetProcessConfiguration";
export * from "./schema";
export * from "./session";
export * from "./workflow";

// Export enums:
export * from "../../types/enums/logic/v20160601";

// Import resources to register:
import { Agreement } from "./agreement";
import { Certificate } from "./certificate";
import { IntegrationAccount } from "./integrationAccount";
import { IntegrationAccountAssembly } from "./integrationAccountAssembly";
import { IntegrationAccountBatchConfiguration } from "./integrationAccountBatchConfiguration";
import { Map } from "./map";
import { Partner } from "./partner";
import { RosettaNetProcessConfiguration } from "./rosettaNetProcessConfiguration";
import { Schema } from "./schema";
import { Session } from "./session";
import { Workflow } from "./workflow";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:logic/v20160601:Agreement":
                return new Agreement(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:IntegrationAccount":
                return new IntegrationAccount(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:IntegrationAccountAssembly":
                return new IntegrationAccountAssembly(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:IntegrationAccountBatchConfiguration":
                return new IntegrationAccountBatchConfiguration(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:Map":
                return new Map(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:Partner":
                return new Partner(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:RosettaNetProcessConfiguration":
                return new RosettaNetProcessConfiguration(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:Schema":
                return new Schema(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:Session":
                return new Session(name, <any>undefined, { urn })
            case "azure-nextgen:logic/v20160601:Workflow":
                return new Workflow(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "logic/v20160601", _module)
