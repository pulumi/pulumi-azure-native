// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The marketplace gallery image resource definition.
 *
 * Uses Azure REST API version 2025-02-01-preview. In version 2.x of the Azure Native provider, it used API version 2022-12-15-preview.
 *
 * Other available API versions: 2022-12-15-preview, 2023-07-01-preview, 2023-09-01-preview, 2024-01-01, 2024-02-01-preview, 2024-05-01-preview, 2024-07-15-preview, 2024-08-01-preview, 2024-10-01-preview, 2025-04-01-preview, 2025-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native azurestackhci [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class MarketplaceGalleryImage extends pulumi.CustomResource {
    /**
     * Get an existing MarketplaceGalleryImage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MarketplaceGalleryImage {
        return new MarketplaceGalleryImage(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:azurestackhci:MarketplaceGalleryImage';

    /**
     * Returns true if the given object is an instance of MarketplaceGalleryImage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MarketplaceGalleryImage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MarketplaceGalleryImage.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * Datasource for the gallery image when provisioning with cloud-init [NoCloud, Azure]
     */
    declare public readonly cloudInitDataSource: pulumi.Output<string | undefined>;
    /**
     * Storage ContainerID of the storage container to be used for marketplace gallery image
     */
    declare public readonly containerId: pulumi.Output<string | undefined>;
    /**
     * The extendedLocation of the resource.
     */
    declare public readonly extendedLocation: pulumi.Output<outputs.azurestackhci.ExtendedLocationResponse | undefined>;
    /**
     * The hypervisor generation of the Virtual Machine [V1, V2]
     */
    declare public readonly hyperVGeneration: pulumi.Output<string | undefined>;
    /**
     * This is the gallery image definition identifier.
     */
    declare public readonly identifier: pulumi.Output<outputs.azurestackhci.GalleryImageIdentifierResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Operating system type that the gallery image uses [Windows, Linux]
     */
    declare public readonly osType: pulumi.Output<string>;
    /**
     * Provisioning state of the marketplace gallery image.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * The observed state of marketplace gallery images
     */
    declare public /*out*/ readonly status: pulumi.Output<outputs.azurestackhci.MarketplaceGalleryImageStatusResponse>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.azurestackhci.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * Specifies information about the gallery image version that you want to create or update.
     */
    declare public readonly version: pulumi.Output<outputs.azurestackhci.GalleryImageVersionResponse | undefined>;

    /**
     * Create a MarketplaceGalleryImage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MarketplaceGalleryImageArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.osType === undefined && !opts.urn) {
                throw new Error("Missing required property 'osType'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["cloudInitDataSource"] = args?.cloudInitDataSource;
            resourceInputs["containerId"] = args?.containerId;
            resourceInputs["extendedLocation"] = args?.extendedLocation;
            resourceInputs["hyperVGeneration"] = args?.hyperVGeneration;
            resourceInputs["identifier"] = args?.identifier;
            resourceInputs["location"] = args?.location;
            resourceInputs["marketplaceGalleryImageName"] = args?.marketplaceGalleryImageName;
            resourceInputs["osType"] = args?.osType;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["version"] = args?.version;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["cloudInitDataSource"] = undefined /*out*/;
            resourceInputs["containerId"] = undefined /*out*/;
            resourceInputs["extendedLocation"] = undefined /*out*/;
            resourceInputs["hyperVGeneration"] = undefined /*out*/;
            resourceInputs["identifier"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["osType"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:azurestackhci/v20210901preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20210901preview:Marketplacegalleryimage" }, { type: "azure-native:azurestackhci/v20221215preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20230701preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20230901preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20240101:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20240201preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20240501preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20240715preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20240801preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20241001preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20250201preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20250401preview:MarketplaceGalleryImage" }, { type: "azure-native:azurestackhci/v20250601preview:MarketplaceGalleryImage" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(MarketplaceGalleryImage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a MarketplaceGalleryImage resource.
 */
export interface MarketplaceGalleryImageArgs {
    /**
     * Datasource for the gallery image when provisioning with cloud-init [NoCloud, Azure]
     */
    cloudInitDataSource?: pulumi.Input<string | enums.azurestackhci.CloudInitDataSource>;
    /**
     * Storage ContainerID of the storage container to be used for marketplace gallery image
     */
    containerId?: pulumi.Input<string>;
    /**
     * The extendedLocation of the resource.
     */
    extendedLocation?: pulumi.Input<inputs.azurestackhci.ExtendedLocationArgs>;
    /**
     * The hypervisor generation of the Virtual Machine [V1, V2]
     */
    hyperVGeneration?: pulumi.Input<string | enums.azurestackhci.HyperVGeneration>;
    /**
     * This is the gallery image definition identifier.
     */
    identifier?: pulumi.Input<inputs.azurestackhci.GalleryImageIdentifierArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the marketplace gallery image
     */
    marketplaceGalleryImageName?: pulumi.Input<string>;
    /**
     * Operating system type that the gallery image uses [Windows, Linux]
     */
    osType: pulumi.Input<string | enums.azurestackhci.OperatingSystemTypes>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies information about the gallery image version that you want to create or update.
     */
    version?: pulumi.Input<inputs.azurestackhci.GalleryImageVersionArgs>;
}
