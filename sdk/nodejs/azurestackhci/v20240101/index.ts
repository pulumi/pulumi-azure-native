// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { DeploymentSettingArgs } from "./deploymentSetting";
export type DeploymentSetting = import("./deploymentSetting").DeploymentSetting;
export const DeploymentSetting: typeof import("./deploymentSetting").DeploymentSetting = null as any;
utilities.lazyLoad(exports, ["DeploymentSetting"], () => require("./deploymentSetting"));

export { EdgeDeviceArgs } from "./edgeDevice";
export type EdgeDevice = import("./edgeDevice").EdgeDevice;
export const EdgeDevice: typeof import("./edgeDevice").EdgeDevice = null as any;
utilities.lazyLoad(exports, ["EdgeDevice"], () => require("./edgeDevice"));

export { GalleryImageArgs } from "./galleryImage";
export type GalleryImage = import("./galleryImage").GalleryImage;
export const GalleryImage: typeof import("./galleryImage").GalleryImage = null as any;
utilities.lazyLoad(exports, ["GalleryImage"], () => require("./galleryImage"));

export { GetDeploymentSettingArgs, GetDeploymentSettingResult, GetDeploymentSettingOutputArgs } from "./getDeploymentSetting";
export const getDeploymentSetting: typeof import("./getDeploymentSetting").getDeploymentSetting = null as any;
export const getDeploymentSettingOutput: typeof import("./getDeploymentSetting").getDeploymentSettingOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentSetting","getDeploymentSettingOutput"], () => require("./getDeploymentSetting"));

export { GetEdgeDeviceArgs, GetEdgeDeviceResult, GetEdgeDeviceOutputArgs } from "./getEdgeDevice";
export const getEdgeDevice: typeof import("./getEdgeDevice").getEdgeDevice = null as any;
export const getEdgeDeviceOutput: typeof import("./getEdgeDevice").getEdgeDeviceOutput = null as any;
utilities.lazyLoad(exports, ["getEdgeDevice","getEdgeDeviceOutput"], () => require("./getEdgeDevice"));

export { GetGalleryImageArgs, GetGalleryImageResult, GetGalleryImageOutputArgs } from "./getGalleryImage";
export const getGalleryImage: typeof import("./getGalleryImage").getGalleryImage = null as any;
export const getGalleryImageOutput: typeof import("./getGalleryImage").getGalleryImageOutput = null as any;
utilities.lazyLoad(exports, ["getGalleryImage","getGalleryImageOutput"], () => require("./getGalleryImage"));

export { GetLogicalNetworkArgs, GetLogicalNetworkResult, GetLogicalNetworkOutputArgs } from "./getLogicalNetwork";
export const getLogicalNetwork: typeof import("./getLogicalNetwork").getLogicalNetwork = null as any;
export const getLogicalNetworkOutput: typeof import("./getLogicalNetwork").getLogicalNetworkOutput = null as any;
utilities.lazyLoad(exports, ["getLogicalNetwork","getLogicalNetworkOutput"], () => require("./getLogicalNetwork"));

export { GetMarketplaceGalleryImageArgs, GetMarketplaceGalleryImageResult, GetMarketplaceGalleryImageOutputArgs } from "./getMarketplaceGalleryImage";
export const getMarketplaceGalleryImage: typeof import("./getMarketplaceGalleryImage").getMarketplaceGalleryImage = null as any;
export const getMarketplaceGalleryImageOutput: typeof import("./getMarketplaceGalleryImage").getMarketplaceGalleryImageOutput = null as any;
utilities.lazyLoad(exports, ["getMarketplaceGalleryImage","getMarketplaceGalleryImageOutput"], () => require("./getMarketplaceGalleryImage"));

export { GetVirtualMachineInstanceArgs, GetVirtualMachineInstanceResult, GetVirtualMachineInstanceOutputArgs } from "./getVirtualMachineInstance";
export const getVirtualMachineInstance: typeof import("./getVirtualMachineInstance").getVirtualMachineInstance = null as any;
export const getVirtualMachineInstanceOutput: typeof import("./getVirtualMachineInstance").getVirtualMachineInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getVirtualMachineInstance","getVirtualMachineInstanceOutput"], () => require("./getVirtualMachineInstance"));

export { LogicalNetworkArgs } from "./logicalNetwork";
export type LogicalNetwork = import("./logicalNetwork").LogicalNetwork;
export const LogicalNetwork: typeof import("./logicalNetwork").LogicalNetwork = null as any;
utilities.lazyLoad(exports, ["LogicalNetwork"], () => require("./logicalNetwork"));

export { MarketplaceGalleryImageArgs } from "./marketplaceGalleryImage";
export type MarketplaceGalleryImage = import("./marketplaceGalleryImage").MarketplaceGalleryImage;
export const MarketplaceGalleryImage: typeof import("./marketplaceGalleryImage").MarketplaceGalleryImage = null as any;
utilities.lazyLoad(exports, ["MarketplaceGalleryImage"], () => require("./marketplaceGalleryImage"));

export { VirtualMachineInstanceArgs } from "./virtualMachineInstance";
export type VirtualMachineInstance = import("./virtualMachineInstance").VirtualMachineInstance;
export const VirtualMachineInstance: typeof import("./virtualMachineInstance").VirtualMachineInstance = null as any;
utilities.lazyLoad(exports, ["VirtualMachineInstance"], () => require("./virtualMachineInstance"));


// Export enums:
export * from "../../types/enums/azurestackhci/v20240101";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:azurestackhci/v20240101:DeploymentSetting":
                return new DeploymentSetting(name, <any>undefined, { urn })
            case "azure-native:azurestackhci/v20240101:EdgeDevice":
                return new EdgeDevice(name, <any>undefined, { urn })
            case "azure-native:azurestackhci/v20240101:GalleryImage":
                return new GalleryImage(name, <any>undefined, { urn })
            case "azure-native:azurestackhci/v20240101:LogicalNetwork":
                return new LogicalNetwork(name, <any>undefined, { urn })
            case "azure-native:azurestackhci/v20240101:MarketplaceGalleryImage":
                return new MarketplaceGalleryImage(name, <any>undefined, { urn })
            case "azure-native:azurestackhci/v20240101:VirtualMachineInstance":
                return new VirtualMachineInstance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "azurestackhci/v20240101", _module)
