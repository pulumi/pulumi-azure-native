// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GalleryimageRetrieveArgs } from "./galleryimageRetrieve";
export type GalleryimageRetrieve = import("./galleryimageRetrieve").GalleryimageRetrieve;
export const GalleryimageRetrieve: typeof import("./galleryimageRetrieve").GalleryimageRetrieve = null as any;
utilities.lazyLoad(exports, ["GalleryimageRetrieve"], () => require("./galleryimageRetrieve"));

export { GetgalleryimageRetrieveArgs, GetgalleryimageRetrieveResult, GetgalleryimageRetrieveOutputArgs } from "./getgalleryimageRetrieve";
export const getgalleryimageRetrieve: typeof import("./getgalleryimageRetrieve").getgalleryimageRetrieve = null as any;
export const getgalleryimageRetrieveOutput: typeof import("./getgalleryimageRetrieve").getgalleryimageRetrieveOutput = null as any;
utilities.lazyLoad(exports, ["getgalleryimageRetrieve","getgalleryimageRetrieveOutput"], () => require("./getgalleryimageRetrieve"));

export { GetnetworkinterfaceRetrieveArgs, GetnetworkinterfaceRetrieveResult, GetnetworkinterfaceRetrieveOutputArgs } from "./getnetworkinterfaceRetrieve";
export const getnetworkinterfaceRetrieve: typeof import("./getnetworkinterfaceRetrieve").getnetworkinterfaceRetrieve = null as any;
export const getnetworkinterfaceRetrieveOutput: typeof import("./getnetworkinterfaceRetrieve").getnetworkinterfaceRetrieveOutput = null as any;
utilities.lazyLoad(exports, ["getnetworkinterfaceRetrieve","getnetworkinterfaceRetrieveOutput"], () => require("./getnetworkinterfaceRetrieve"));

export { GetvirtualharddiskRetrieveArgs, GetvirtualharddiskRetrieveResult, GetvirtualharddiskRetrieveOutputArgs } from "./getvirtualharddiskRetrieve";
export const getvirtualharddiskRetrieve: typeof import("./getvirtualharddiskRetrieve").getvirtualharddiskRetrieve = null as any;
export const getvirtualharddiskRetrieveOutput: typeof import("./getvirtualharddiskRetrieve").getvirtualharddiskRetrieveOutput = null as any;
utilities.lazyLoad(exports, ["getvirtualharddiskRetrieve","getvirtualharddiskRetrieveOutput"], () => require("./getvirtualharddiskRetrieve"));

export { GetvirtualmachineRetrieveArgs, GetvirtualmachineRetrieveResult, GetvirtualmachineRetrieveOutputArgs } from "./getvirtualmachineRetrieve";
export const getvirtualmachineRetrieve: typeof import("./getvirtualmachineRetrieve").getvirtualmachineRetrieve = null as any;
export const getvirtualmachineRetrieveOutput: typeof import("./getvirtualmachineRetrieve").getvirtualmachineRetrieveOutput = null as any;
utilities.lazyLoad(exports, ["getvirtualmachineRetrieve","getvirtualmachineRetrieveOutput"], () => require("./getvirtualmachineRetrieve"));

export { GetvirtualnetworkRetrieveArgs, GetvirtualnetworkRetrieveResult, GetvirtualnetworkRetrieveOutputArgs } from "./getvirtualnetworkRetrieve";
export const getvirtualnetworkRetrieve: typeof import("./getvirtualnetworkRetrieve").getvirtualnetworkRetrieve = null as any;
export const getvirtualnetworkRetrieveOutput: typeof import("./getvirtualnetworkRetrieve").getvirtualnetworkRetrieveOutput = null as any;
utilities.lazyLoad(exports, ["getvirtualnetworkRetrieve","getvirtualnetworkRetrieveOutput"], () => require("./getvirtualnetworkRetrieve"));

export { NetworkinterfaceRetrieveArgs } from "./networkinterfaceRetrieve";
export type NetworkinterfaceRetrieve = import("./networkinterfaceRetrieve").NetworkinterfaceRetrieve;
export const NetworkinterfaceRetrieve: typeof import("./networkinterfaceRetrieve").NetworkinterfaceRetrieve = null as any;
utilities.lazyLoad(exports, ["NetworkinterfaceRetrieve"], () => require("./networkinterfaceRetrieve"));

export { VirtualharddiskRetrieveArgs } from "./virtualharddiskRetrieve";
export type VirtualharddiskRetrieve = import("./virtualharddiskRetrieve").VirtualharddiskRetrieve;
export const VirtualharddiskRetrieve: typeof import("./virtualharddiskRetrieve").VirtualharddiskRetrieve = null as any;
utilities.lazyLoad(exports, ["VirtualharddiskRetrieve"], () => require("./virtualharddiskRetrieve"));

export { VirtualmachineRetrieveArgs } from "./virtualmachineRetrieve";
export type VirtualmachineRetrieve = import("./virtualmachineRetrieve").VirtualmachineRetrieve;
export const VirtualmachineRetrieve: typeof import("./virtualmachineRetrieve").VirtualmachineRetrieve = null as any;
utilities.lazyLoad(exports, ["VirtualmachineRetrieve"], () => require("./virtualmachineRetrieve"));

export { VirtualnetworkRetrieveArgs } from "./virtualnetworkRetrieve";
export type VirtualnetworkRetrieve = import("./virtualnetworkRetrieve").VirtualnetworkRetrieve;
export const VirtualnetworkRetrieve: typeof import("./virtualnetworkRetrieve").VirtualnetworkRetrieve = null as any;
utilities.lazyLoad(exports, ["VirtualnetworkRetrieve"], () => require("./virtualnetworkRetrieve"));


// Export enums:
export * from "../../types/enums/azurestackhci/v20210701preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:azurestackhci/v20210701preview:galleryimageRetrieve":
                return new GalleryimageRetrieve(name, <any>undefined, { urn })
            case "azure-native:azurestackhci/v20210701preview:networkinterfaceRetrieve":
                return new NetworkinterfaceRetrieve(name, <any>undefined, { urn })
            case "azure-native:azurestackhci/v20210701preview:virtualharddiskRetrieve":
                return new VirtualharddiskRetrieve(name, <any>undefined, { urn })
            case "azure-native:azurestackhci/v20210701preview:virtualmachineRetrieve":
                return new VirtualmachineRetrieve(name, <any>undefined, { urn })
            case "azure-native:azurestackhci/v20210701preview:virtualnetworkRetrieve":
                return new VirtualnetworkRetrieve(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "azurestackhci/v20210701preview", _module)
