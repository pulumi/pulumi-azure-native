// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the workspace vNet Peering.
 */
export function getvNetPeering(args: GetvNetPeeringArgs, opts?: pulumi.InvokeOptions): Promise<GetvNetPeeringResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:databricks/v20210401preview:getvNetPeering", {
        "peeringName": args.peeringName,
        "resourceGroupName": args.resourceGroupName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetvNetPeeringArgs {
    /**
     * The name of the workspace vNet peering.
     */
    peeringName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}

/**
 * Peerings in a VirtualNetwork resource
 */
export interface GetvNetPeeringResult {
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Name of the virtual network peering resource
     */
    readonly name: string;
    /**
     * List of properties for vNet Peering
     */
    readonly properties: outputs.databricks.v20210401preview.VirtualNetworkPeeringPropertiesFormatResponse;
    /**
     * type of the virtual network peering resource
     */
    readonly type: string;
}
/**
 * Gets the workspace vNet Peering.
 */
export function getvNetPeeringOutput(args: GetvNetPeeringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetvNetPeeringResult> {
    return pulumi.output(args).apply((a: any) => getvNetPeering(a, opts))
}

export interface GetvNetPeeringOutputArgs {
    /**
     * The name of the workspace vNet peering.
     */
    peeringName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
