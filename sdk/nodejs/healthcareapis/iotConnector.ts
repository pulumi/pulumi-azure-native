// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * IoT Connector definition.
 *
 * Uses Azure REST API version 2024-03-31. In version 2.x of the Azure Native provider, it used API version 2023-02-28.
 *
 * Other available API versions: 2022-10-01-preview, 2022-12-01, 2023-02-28, 2023-09-06, 2023-11-01, 2023-12-01, 2024-03-01, 2025-03-01-preview, 2025-04-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native healthcareapis [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class IotConnector extends pulumi.CustomResource {
    /**
     * Get an existing IotConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IotConnector {
        return new IotConnector(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:healthcareapis:IotConnector';

    /**
     * Returns true if the given object is an instance of IotConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotConnector.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * Device Mappings.
     */
    declare public readonly deviceMapping: pulumi.Output<outputs.healthcareapis.IotMappingPropertiesResponse | undefined>;
    /**
     * An etag associated with the resource, used for optimistic concurrency when editing it.
     */
    declare public /*out*/ readonly etag: pulumi.Output<string | undefined>;
    /**
     * Setting indicating whether the service has a managed identity associated with it.
     */
    declare public readonly identity: pulumi.Output<outputs.healthcareapis.ServiceManagedIdentityResponseIdentity | undefined>;
    /**
     * Source configuration.
     */
    declare public readonly ingestionEndpointConfiguration: pulumi.Output<outputs.healthcareapis.IotEventHubIngestionEndpointConfigurationResponse | undefined>;
    /**
     * The resource location.
     */
    declare public readonly location: pulumi.Output<string | undefined>;
    /**
     * The resource name.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The provisioning state.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.healthcareapis.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The resource type.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a IotConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IotConnectorArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.workspaceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["deviceMapping"] = args?.deviceMapping;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["ingestionEndpointConfiguration"] = args?.ingestionEndpointConfiguration;
            resourceInputs["iotConnectorName"] = args?.iotConnectorName;
            resourceInputs["location"] = args?.location;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["workspaceName"] = args?.workspaceName;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["deviceMapping"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["ingestionEndpointConfiguration"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:healthcareapis/v20210601preview:IotConnector" }, { type: "azure-native:healthcareapis/v20211101:IotConnector" }, { type: "azure-native:healthcareapis/v20220131preview:IotConnector" }, { type: "azure-native:healthcareapis/v20220515:IotConnector" }, { type: "azure-native:healthcareapis/v20220601:IotConnector" }, { type: "azure-native:healthcareapis/v20221001preview:IotConnector" }, { type: "azure-native:healthcareapis/v20221201:IotConnector" }, { type: "azure-native:healthcareapis/v20230228:IotConnector" }, { type: "azure-native:healthcareapis/v20230906:IotConnector" }, { type: "azure-native:healthcareapis/v20231101:IotConnector" }, { type: "azure-native:healthcareapis/v20231201:IotConnector" }, { type: "azure-native:healthcareapis/v20240301:IotConnector" }, { type: "azure-native:healthcareapis/v20240331:IotConnector" }, { type: "azure-native:healthcareapis/v20250301preview:IotConnector" }, { type: "azure-native:healthcareapis/v20250401preview:IotConnector" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(IotConnector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a IotConnector resource.
 */
export interface IotConnectorArgs {
    /**
     * Device Mappings.
     */
    deviceMapping?: pulumi.Input<inputs.healthcareapis.IotMappingPropertiesArgs>;
    /**
     * Setting indicating whether the service has a managed identity associated with it.
     */
    identity?: pulumi.Input<inputs.healthcareapis.ServiceManagedIdentityIdentityArgs>;
    /**
     * Source configuration.
     */
    ingestionEndpointConfiguration?: pulumi.Input<inputs.healthcareapis.IotEventHubIngestionEndpointConfigurationArgs>;
    /**
     * The name of IoT Connector resource.
     */
    iotConnectorName?: pulumi.Input<string>;
    /**
     * The resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the service instance.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of workspace resource.
     */
    workspaceName: pulumi.Input<string>;
}
