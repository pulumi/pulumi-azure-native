// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./dicomService";
export * from "./fhirService";
export * from "./getDicomService";
export * from "./getFhirService";
export * from "./getIotConnector";
export * from "./getIotConnectorFhirDestination";
export * from "./getPrivateEndpointConnection";
export * from "./getService";
export * from "./getWorkspace";
export * from "./getWorkspacePrivateEndpointConnection";
export * from "./iotConnector";
export * from "./iotConnectorFhirDestination";
export * from "./privateEndpointConnection";
export * from "./service";
export * from "./workspace";
export * from "./workspacePrivateEndpointConnection";

// Export enums:
export * from "../types/enums/healthcareapis";

// Export sub-modules:
import * as v20180820preview from "./v20180820preview";
import * as v20190916 from "./v20190916";
import * as v20200315 from "./v20200315";
import * as v20200330 from "./v20200330";
import * as v20210111 from "./v20210111";
import * as v20210601preview from "./v20210601preview";
import * as v20211101 from "./v20211101";
import * as v20220131preview from "./v20220131preview";
import * as v20220515 from "./v20220515";

export {
    v20180820preview,
    v20190916,
    v20200315,
    v20200330,
    v20210111,
    v20210601preview,
    v20211101,
    v20220131preview,
    v20220515,
};

// Import resources to register:
import { DicomService } from "./dicomService";
import { FhirService } from "./fhirService";
import { IotConnector } from "./iotConnector";
import { IotConnectorFhirDestination } from "./iotConnectorFhirDestination";
import { PrivateEndpointConnection } from "./privateEndpointConnection";
import { Service } from "./service";
import { Workspace } from "./workspace";
import { WorkspacePrivateEndpointConnection } from "./workspacePrivateEndpointConnection";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:healthcareapis:DicomService":
                return new DicomService(name, <any>undefined, { urn })
            case "azure-native:healthcareapis:FhirService":
                return new FhirService(name, <any>undefined, { urn })
            case "azure-native:healthcareapis:IotConnector":
                return new IotConnector(name, <any>undefined, { urn })
            case "azure-native:healthcareapis:IotConnectorFhirDestination":
                return new IotConnectorFhirDestination(name, <any>undefined, { urn })
            case "azure-native:healthcareapis:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:healthcareapis:Service":
                return new Service(name, <any>undefined, { urn })
            case "azure-native:healthcareapis:Workspace":
                return new Workspace(name, <any>undefined, { urn })
            case "azure-native:healthcareapis:WorkspacePrivateEndpointConnection":
                return new WorkspacePrivateEndpointConnection(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "healthcareapis", _module)
