// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets an associated project catalog.
 */
export function getProjectCatalog(args: GetProjectCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectCatalogResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:devcenter/v20241001preview:getProjectCatalog", {
        "catalogName": args.catalogName,
        "projectName": args.projectName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetProjectCatalogArgs {
    /**
     * The name of the Catalog.
     */
    catalogName: string;
    /**
     * The name of the project.
     */
    projectName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Represents a catalog.
 */
export interface GetProjectCatalogResult {
    /**
     * Properties for an Azure DevOps catalog type.
     */
    readonly adoGit?: outputs.devcenter.v20241001preview.GitCatalogResponse;
    /**
     * The connection state of the catalog.
     */
    readonly connectionState: string;
    /**
     * Properties for a GitHub catalog type.
     */
    readonly gitHub?: outputs.devcenter.v20241001preview.GitCatalogResponse;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * When the catalog was last connected.
     */
    readonly lastConnectionTime: string;
    /**
     * Stats of the latest synchronization.
     */
    readonly lastSyncStats: outputs.devcenter.v20241001preview.SyncStatsResponse;
    /**
     * When the catalog was last synced.
     */
    readonly lastSyncTime: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * The synchronization state of the catalog.
     */
    readonly syncState: string;
    /**
     * Indicates the type of sync that is configured for the catalog.
     */
    readonly syncType?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.devcenter.v20241001preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets an associated project catalog.
 */
export function getProjectCatalogOutput(args: GetProjectCatalogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectCatalogResult> {
    return pulumi.output(args).apply((a: any) => getProjectCatalog(a, opts))
}

export interface GetProjectCatalogOutputArgs {
    /**
     * The name of the Catalog.
     */
    catalogName: pulumi.Input<string>;
    /**
     * The name of the project.
     */
    projectName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
