// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a specific curation profile.
 */
export function getCurationProfile(args: GetCurationProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCurationProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:devcenter/v20240801preview:getCurationProfile", {
        "curationProfileName": args.curationProfileName,
        "devCenterName": args.devCenterName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetCurationProfileArgs {
    /**
     * The name of the curation profile.
     */
    curationProfileName: string;
    /**
     * The name of the devcenter.
     */
    devCenterName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Represents an curation profile resource.
 */
export interface GetCurationProfileResult {
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * Resource policies that are a part of this curation profile.
     */
    readonly resourcePolicies?: outputs.devcenter.v20240801preview.ResourcePolicyResponse[];
    /**
     * Resources that have access to the shared resources that are a part of this curation profile.
     */
    readonly scopes?: string[];
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.devcenter.v20240801preview.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets a specific curation profile.
 */
export function getCurationProfileOutput(args: GetCurationProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCurationProfileResult> {
    return pulumi.output(args).apply((a: any) => getCurationProfile(a, opts))
}

export interface GetCurationProfileOutputArgs {
    /**
     * The name of the curation profile.
     */
    curationProfileName: pulumi.Input<string>;
    /**
     * The name of the devcenter.
     */
    devCenterName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
