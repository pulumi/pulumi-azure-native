// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { BackupInstanceArgs } from "./backupInstance";
export type BackupInstance = import("./backupInstance").BackupInstance;
export const BackupInstance: typeof import("./backupInstance").BackupInstance = null as any;
utilities.lazyLoad(exports, ["BackupInstance"], () => require("./backupInstance"));

export { BackupPolicyArgs } from "./backupPolicy";
export type BackupPolicy = import("./backupPolicy").BackupPolicy;
export const BackupPolicy: typeof import("./backupPolicy").BackupPolicy = null as any;
utilities.lazyLoad(exports, ["BackupPolicy"], () => require("./backupPolicy"));

export { BackupVaultArgs } from "./backupVault";
export type BackupVault = import("./backupVault").BackupVault;
export const BackupVault: typeof import("./backupVault").BackupVault = null as any;
utilities.lazyLoad(exports, ["BackupVault"], () => require("./backupVault"));

export { GetBackupInstanceArgs, GetBackupInstanceResult, GetBackupInstanceOutputArgs } from "./getBackupInstance";
export const getBackupInstance: typeof import("./getBackupInstance").getBackupInstance = null as any;
export const getBackupInstanceOutput: typeof import("./getBackupInstance").getBackupInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getBackupInstance","getBackupInstanceOutput"], () => require("./getBackupInstance"));

export { GetBackupPolicyArgs, GetBackupPolicyResult, GetBackupPolicyOutputArgs } from "./getBackupPolicy";
export const getBackupPolicy: typeof import("./getBackupPolicy").getBackupPolicy = null as any;
export const getBackupPolicyOutput: typeof import("./getBackupPolicy").getBackupPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getBackupPolicy","getBackupPolicyOutput"], () => require("./getBackupPolicy"));

export { GetBackupVaultArgs, GetBackupVaultResult, GetBackupVaultOutputArgs } from "./getBackupVault";
export const getBackupVault: typeof import("./getBackupVault").getBackupVault = null as any;
export const getBackupVaultOutput: typeof import("./getBackupVault").getBackupVaultOutput = null as any;
utilities.lazyLoad(exports, ["getBackupVault","getBackupVaultOutput"], () => require("./getBackupVault"));


// Export enums:
export * from "../../types/enums/dataprotection/v20210201preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:dataprotection/v20210201preview:BackupInstance":
                return new BackupInstance(name, <any>undefined, { urn })
            case "azure-native:dataprotection/v20210201preview:BackupPolicy":
                return new BackupPolicy(name, <any>undefined, { urn })
            case "azure-native:dataprotection/v20210201preview:BackupVault":
                return new BackupVault(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "dataprotection/v20210201preview", _module)
