// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * An attestation resource.
 */
export class AttestationAtSubscription extends pulumi.CustomResource {
    /**
     * Get an existing AttestationAtSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AttestationAtSubscription {
        return new AttestationAtSubscription(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:policyinsights/v20210101:AttestationAtSubscription';

    /**
     * Returns true if the given object is an instance of AttestationAtSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AttestationAtSubscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AttestationAtSubscription.__pulumiType;
    }

    /**
     * Comments describing why this attestation was created.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * The compliance state that should be set on the resource.
     */
    public readonly complianceState!: pulumi.Output<string | undefined>;
    /**
     * The evidence supporting the compliance state set in this attestation.
     */
    public readonly evidence!: pulumi.Output<outputs.policyinsights.v20210101.AttestationEvidenceResponse[] | undefined>;
    /**
     * The time the compliance state should expire.
     */
    public readonly expiresOn!: pulumi.Output<string | undefined>;
    /**
     * The time the compliance state was last changed in this attestation.
     */
    public /*out*/ readonly lastComplianceStateChangeAt!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
     */
    public readonly owner!: pulumi.Output<string | undefined>;
    /**
     * The resource ID of the policy assignment that the attestation is setting the state for.
     */
    public readonly policyAssignmentId!: pulumi.Output<string>;
    /**
     * The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
     */
    public readonly policyDefinitionReferenceId!: pulumi.Output<string | undefined>;
    /**
     * The status of the attestation.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.policyinsights.v20210101.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a AttestationAtSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AttestationAtSubscriptionArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if ((!args || args.policyAssignmentId === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'policyAssignmentId'");
            }
            inputs["attestationName"] = args ? args.attestationName : undefined;
            inputs["comments"] = args ? args.comments : undefined;
            inputs["complianceState"] = args ? args.complianceState : undefined;
            inputs["evidence"] = args ? args.evidence : undefined;
            inputs["expiresOn"] = args ? args.expiresOn : undefined;
            inputs["owner"] = args ? args.owner : undefined;
            inputs["policyAssignmentId"] = args ? args.policyAssignmentId : undefined;
            inputs["policyDefinitionReferenceId"] = args ? args.policyDefinitionReferenceId : undefined;
            inputs["lastComplianceStateChangeAt"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["comments"] = undefined /*out*/;
            inputs["complianceState"] = undefined /*out*/;
            inputs["evidence"] = undefined /*out*/;
            inputs["expiresOn"] = undefined /*out*/;
            inputs["lastComplianceStateChangeAt"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["owner"] = undefined /*out*/;
            inputs["policyAssignmentId"] = undefined /*out*/;
            inputs["policyDefinitionReferenceId"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(AttestationAtSubscription.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a AttestationAtSubscription resource.
 */
export interface AttestationAtSubscriptionArgs {
    /**
     * The name of the attestation.
     */
    readonly attestationName?: pulumi.Input<string>;
    /**
     * Comments describing why this attestation was created.
     */
    readonly comments?: pulumi.Input<string>;
    /**
     * The compliance state that should be set on the resource.
     */
    readonly complianceState?: pulumi.Input<string | enums.policyinsights.v20210101.ComplianceState>;
    /**
     * The evidence supporting the compliance state set in this attestation.
     */
    readonly evidence?: pulumi.Input<pulumi.Input<inputs.policyinsights.v20210101.AttestationEvidence>[]>;
    /**
     * The time the compliance state should expire.
     */
    readonly expiresOn?: pulumi.Input<string>;
    /**
     * The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
     */
    readonly owner?: pulumi.Input<string>;
    /**
     * The resource ID of the policy assignment that the attestation is setting the state for.
     */
    readonly policyAssignmentId: pulumi.Input<string>;
    /**
     * The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
     */
    readonly policyDefinitionReferenceId?: pulumi.Input<string>;
}
