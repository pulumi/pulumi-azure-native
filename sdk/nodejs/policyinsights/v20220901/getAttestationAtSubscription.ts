// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets an existing attestation at subscription scope.
 */
export function getAttestationAtSubscription(args: GetAttestationAtSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetAttestationAtSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:policyinsights/v20220901:getAttestationAtSubscription", {
        "attestationName": args.attestationName,
    }, opts);
}

export interface GetAttestationAtSubscriptionArgs {
    /**
     * The name of the attestation.
     */
    attestationName: string;
}

/**
 * An attestation resource.
 */
export interface GetAttestationAtSubscriptionResult {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Properties for the attestation.
     */
    readonly properties: outputs.policyinsights.v20220901.AttestationPropertiesResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.policyinsights.v20220901.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets an existing attestation at subscription scope.
 */
export function getAttestationAtSubscriptionOutput(args: GetAttestationAtSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAttestationAtSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getAttestationAtSubscription(a, opts))
}

export interface GetAttestationAtSubscriptionOutputArgs {
    /**
     * The name of the attestation.
     */
    attestationName: pulumi.Input<string>;
}
