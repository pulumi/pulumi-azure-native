// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The relationship link resource format.
 *
 * Uses Azure REST API version 2017-04-26. In version 2.x of the Azure Native provider, it used API version 2017-04-26.
 */
export class RelationshipLink extends pulumi.CustomResource {
    /**
     * Get an existing RelationshipLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RelationshipLink {
        return new RelationshipLink(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:customerinsights:RelationshipLink';

    /**
     * Returns true if the given object is an instance of RelationshipLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RelationshipLink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RelationshipLink.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * Localized descriptions for the Relationship Link.
     */
    declare public readonly description: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Localized display name for the Relationship Link.
     */
    declare public readonly displayName: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The InteractionType associated with the Relationship Link.
     */
    declare public readonly interactionType: pulumi.Output<string>;
    /**
     * The name of the Relationship Link.
     */
    declare public /*out*/ readonly linkName: pulumi.Output<string>;
    /**
     * The mappings between Interaction and Relationship fields.
     */
    declare public readonly mappings: pulumi.Output<outputs.customerinsights.RelationshipLinkFieldMappingResponse[] | undefined>;
    /**
     * Resource name.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The property references for the Profile of the Relationship.
     */
    declare public readonly profilePropertyReferences: pulumi.Output<outputs.customerinsights.ParticipantProfilePropertyReferenceResponse[]>;
    /**
     * Provisioning state.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * The property references for the Related Profile of the Relationship.
     */
    declare public readonly relatedProfilePropertyReferences: pulumi.Output<outputs.customerinsights.ParticipantProfilePropertyReferenceResponse[]>;
    /**
     * The relationship guid id.
     */
    declare public /*out*/ readonly relationshipGuidId: pulumi.Output<string>;
    /**
     * The Relationship associated with the Link.
     */
    declare public readonly relationshipName: pulumi.Output<string>;
    /**
     * The hub name.
     */
    declare public /*out*/ readonly tenantId: pulumi.Output<string>;
    /**
     * Resource type.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a RelationshipLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RelationshipLinkArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.hubName === undefined && !opts.urn) {
                throw new Error("Missing required property 'hubName'");
            }
            if (args?.interactionType === undefined && !opts.urn) {
                throw new Error("Missing required property 'interactionType'");
            }
            if (args?.profilePropertyReferences === undefined && !opts.urn) {
                throw new Error("Missing required property 'profilePropertyReferences'");
            }
            if (args?.relatedProfilePropertyReferences === undefined && !opts.urn) {
                throw new Error("Missing required property 'relatedProfilePropertyReferences'");
            }
            if (args?.relationshipName === undefined && !opts.urn) {
                throw new Error("Missing required property 'relationshipName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["hubName"] = args?.hubName;
            resourceInputs["interactionType"] = args?.interactionType;
            resourceInputs["mappings"] = args?.mappings;
            resourceInputs["profilePropertyReferences"] = args?.profilePropertyReferences;
            resourceInputs["relatedProfilePropertyReferences"] = args?.relatedProfilePropertyReferences;
            resourceInputs["relationshipLinkName"] = args?.relationshipLinkName;
            resourceInputs["relationshipName"] = args?.relationshipName;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["linkName"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["relationshipGuidId"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["interactionType"] = undefined /*out*/;
            resourceInputs["linkName"] = undefined /*out*/;
            resourceInputs["mappings"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["profilePropertyReferences"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["relatedProfilePropertyReferences"] = undefined /*out*/;
            resourceInputs["relationshipGuidId"] = undefined /*out*/;
            resourceInputs["relationshipName"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:customerinsights/v20170101:RelationshipLink" }, { type: "azure-native:customerinsights/v20170426:RelationshipLink" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(RelationshipLink.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RelationshipLink resource.
 */
export interface RelationshipLinkArgs {
    /**
     * Localized descriptions for the Relationship Link.
     */
    description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Localized display name for the Relationship Link.
     */
    displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the hub.
     */
    hubName: pulumi.Input<string>;
    /**
     * The InteractionType associated with the Relationship Link.
     */
    interactionType: pulumi.Input<string>;
    /**
     * The mappings between Interaction and Relationship fields.
     */
    mappings?: pulumi.Input<pulumi.Input<inputs.customerinsights.RelationshipLinkFieldMappingArgs>[]>;
    /**
     * The property references for the Profile of the Relationship.
     */
    profilePropertyReferences: pulumi.Input<pulumi.Input<inputs.customerinsights.ParticipantProfilePropertyReferenceArgs>[]>;
    /**
     * The property references for the Related Profile of the Relationship.
     */
    relatedProfilePropertyReferences: pulumi.Input<pulumi.Input<inputs.customerinsights.ParticipantProfilePropertyReferenceArgs>[]>;
    /**
     * The name of the relationship link.
     */
    relationshipLinkName?: pulumi.Input<string>;
    /**
     * The Relationship associated with the Link.
     */
    relationshipName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
