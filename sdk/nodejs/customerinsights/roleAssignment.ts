// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The Role Assignment resource format.
 *
 * Uses Azure REST API version 2017-04-26. In version 2.x of the Azure Native provider, it used API version 2017-04-26.
 */
export class RoleAssignment extends pulumi.CustomResource {
    /**
     * Get an existing RoleAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleAssignment {
        return new RoleAssignment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:customerinsights:RoleAssignment';

    /**
     * Returns true if the given object is an instance of RoleAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoleAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoleAssignment.__pulumiType;
    }

    /**
     * The name of the metadata object.
     */
    declare public readonly assignmentName: pulumi.Output<string>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * Widget types set for the assignment.
     */
    declare public readonly conflationPolicies: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * Connectors set for the assignment.
     */
    declare public readonly connectors: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * Localized description for the metadata.
     */
    declare public readonly description: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Localized display names for the metadata.
     */
    declare public readonly displayName: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Interactions set for the assignment.
     */
    declare public readonly interactions: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * Kpis set for the assignment.
     */
    declare public readonly kpis: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * Links set for the assignment.
     */
    declare public readonly links: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * Resource name.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The principals being assigned to.
     */
    declare public readonly principals: pulumi.Output<outputs.customerinsights.AssignmentPrincipalResponse[]>;
    /**
     * Profiles set for the assignment.
     */
    declare public readonly profiles: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * Provisioning state.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * The Role assignments set for the relationship links.
     */
    declare public readonly relationshipLinks: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * The Role assignments set for the relationships.
     */
    declare public readonly relationships: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * Type of roles.
     */
    declare public readonly role: pulumi.Output<string>;
    /**
     * The Role assignments set for the assignment.
     */
    declare public readonly roleAssignments: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * Sas Policies set for the assignment.
     */
    declare public readonly sasPolicies: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * The Role assignments set for the assignment.
     */
    declare public readonly segments: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * The hub name.
     */
    declare public /*out*/ readonly tenantId: pulumi.Output<string>;
    /**
     * Resource type.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * Views set for the assignment.
     */
    declare public readonly views: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;
    /**
     * Widget types set for the assignment.
     */
    declare public readonly widgetTypes: pulumi.Output<outputs.customerinsights.ResourceSetDescriptionResponse | undefined>;

    /**
     * Create a RoleAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleAssignmentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.hubName === undefined && !opts.urn) {
                throw new Error("Missing required property 'hubName'");
            }
            if (args?.principals === undefined && !opts.urn) {
                throw new Error("Missing required property 'principals'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.role === undefined && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["assignmentName"] = args?.assignmentName;
            resourceInputs["conflationPolicies"] = args?.conflationPolicies;
            resourceInputs["connectors"] = args?.connectors;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["hubName"] = args?.hubName;
            resourceInputs["interactions"] = args?.interactions;
            resourceInputs["kpis"] = args?.kpis;
            resourceInputs["links"] = args?.links;
            resourceInputs["principals"] = args?.principals;
            resourceInputs["profiles"] = args?.profiles;
            resourceInputs["relationshipLinks"] = args?.relationshipLinks;
            resourceInputs["relationships"] = args?.relationships;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["role"] = args?.role;
            resourceInputs["roleAssignments"] = args?.roleAssignments;
            resourceInputs["sasPolicies"] = args?.sasPolicies;
            resourceInputs["segments"] = args?.segments;
            resourceInputs["views"] = args?.views;
            resourceInputs["widgetTypes"] = args?.widgetTypes;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["assignmentName"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["conflationPolicies"] = undefined /*out*/;
            resourceInputs["connectors"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["interactions"] = undefined /*out*/;
            resourceInputs["kpis"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["principals"] = undefined /*out*/;
            resourceInputs["profiles"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["relationshipLinks"] = undefined /*out*/;
            resourceInputs["relationships"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["roleAssignments"] = undefined /*out*/;
            resourceInputs["sasPolicies"] = undefined /*out*/;
            resourceInputs["segments"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["views"] = undefined /*out*/;
            resourceInputs["widgetTypes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:customerinsights/v20170101:RoleAssignment" }, { type: "azure-native:customerinsights/v20170426:RoleAssignment" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(RoleAssignment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RoleAssignment resource.
 */
export interface RoleAssignmentArgs {
    /**
     * The assignment name
     */
    assignmentName?: pulumi.Input<string>;
    /**
     * Widget types set for the assignment.
     */
    conflationPolicies?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * Connectors set for the assignment.
     */
    connectors?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * Localized description for the metadata.
     */
    description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Localized display names for the metadata.
     */
    displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the hub.
     */
    hubName: pulumi.Input<string>;
    /**
     * Interactions set for the assignment.
     */
    interactions?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * Kpis set for the assignment.
     */
    kpis?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * Links set for the assignment.
     */
    links?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * The principals being assigned to.
     */
    principals: pulumi.Input<pulumi.Input<inputs.customerinsights.AssignmentPrincipalArgs>[]>;
    /**
     * Profiles set for the assignment.
     */
    profiles?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * The Role assignments set for the relationship links.
     */
    relationshipLinks?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * The Role assignments set for the relationships.
     */
    relationships?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Type of roles.
     */
    role: pulumi.Input<enums.customerinsights.RoleTypes>;
    /**
     * The Role assignments set for the assignment.
     */
    roleAssignments?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * Sas Policies set for the assignment.
     */
    sasPolicies?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * The Role assignments set for the assignment.
     */
    segments?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * Views set for the assignment.
     */
    views?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
    /**
     * Widget types set for the assignment.
     */
    widgetTypes?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionArgs>;
}
