// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * The KPI resource format.
 */
export class Kpi extends pulumi.CustomResource {
    /**
     * Get an existing Kpi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Kpi {
        return new Kpi(name, undefined, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:customerinsights/v20170426:Kpi';

    /**
     * Returns true if the given object is an instance of Kpi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Kpi {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Kpi.__pulumiType;
    }

    /**
     * Resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Defines the KPI Threshold limits.
     */
    public /*out*/ readonly properties!: pulumi.Output<outputs.customerinsights.v20170426.KpiDefinitionResponse>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Kpi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KpiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, state: undefined, opts: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KpiArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState as KpiArgs | undefined;
            if (!args || args.calculationWindow === undefined) {
                throw new Error("Missing required property 'calculationWindow'");
            }
            if (!args || args.entityType === undefined) {
                throw new Error("Missing required property 'entityType'");
            }
            if (!args || args.entityTypeName === undefined) {
                throw new Error("Missing required property 'entityTypeName'");
            }
            if (!args || args.expression === undefined) {
                throw new Error("Missing required property 'expression'");
            }
            if (!args || args.function === undefined) {
                throw new Error("Missing required property 'function'");
            }
            if (!args || args.hubName === undefined) {
                throw new Error("Missing required property 'hubName'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["aliases"] = args ? args.aliases : undefined;
            inputs["calculationWindow"] = args ? args.calculationWindow : undefined;
            inputs["calculationWindowFieldName"] = args ? args.calculationWindowFieldName : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["entityType"] = args ? args.entityType : undefined;
            inputs["entityTypeName"] = args ? args.entityTypeName : undefined;
            inputs["expression"] = args ? args.expression : undefined;
            inputs["extracts"] = args ? args.extracts : undefined;
            inputs["filter"] = args ? args.filter : undefined;
            inputs["function"] = args ? args.function : undefined;
            inputs["groupBy"] = args ? args.groupBy : undefined;
            inputs["hubName"] = args ? args.hubName : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["thresHolds"] = args ? args.thresHolds : undefined;
            inputs["unit"] = args ? args.unit : undefined;
            inputs["properties"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Kpi.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Kpi resource.
 */
export interface KpiArgs {
    /**
     * The aliases.
     */
    readonly aliases?: pulumi.Input<pulumi.Input<inputs.customerinsights.v20170426.KpiAlias>[]>;
    /**
     * The calculation window.
     */
    readonly calculationWindow: pulumi.Input<string>;
    /**
     * Name of calculation window field.
     */
    readonly calculationWindowFieldName?: pulumi.Input<string>;
    /**
     * Localized description for the KPI.
     */
    readonly description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Localized display name for the KPI.
     */
    readonly displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The mapping entity type.
     */
    readonly entityType: pulumi.Input<string>;
    /**
     * The mapping entity name.
     */
    readonly entityTypeName: pulumi.Input<string>;
    /**
     * The computation expression for the KPI.
     */
    readonly expression: pulumi.Input<string>;
    /**
     * The KPI extracts.
     */
    readonly extracts?: pulumi.Input<pulumi.Input<inputs.customerinsights.v20170426.KpiExtract>[]>;
    /**
     * The filter expression for the KPI.
     */
    readonly filter?: pulumi.Input<string>;
    /**
     * The computation function for the KPI.
     */
    readonly function: pulumi.Input<string>;
    /**
     * the group by properties for the KPI.
     */
    readonly groupBy?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the hub.
     */
    readonly hubName: pulumi.Input<string>;
    /**
     * The name of the KPI.
     */
    readonly name: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The KPI thresholds.
     */
    readonly thresHolds?: pulumi.Input<inputs.customerinsights.v20170426.KpiThresholds>;
    /**
     * The unit of measurement for the KPI.
     */
    readonly unit?: pulumi.Input<string>;
}
