// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ChannelArgs } from "./channel";
export type Channel = import("./channel").Channel;
export const Channel: typeof import("./channel").Channel = null as any;
utilities.lazyLoad(exports, ["Channel"], () => require("./channel"));

export { DomainEventSubscriptionArgs } from "./domainEventSubscription";
export type DomainEventSubscription = import("./domainEventSubscription").DomainEventSubscription;
export const DomainEventSubscription: typeof import("./domainEventSubscription").DomainEventSubscription = null as any;
utilities.lazyLoad(exports, ["DomainEventSubscription"], () => require("./domainEventSubscription"));

export { DomainTopicEventSubscriptionArgs } from "./domainTopicEventSubscription";
export type DomainTopicEventSubscription = import("./domainTopicEventSubscription").DomainTopicEventSubscription;
export const DomainTopicEventSubscription: typeof import("./domainTopicEventSubscription").DomainTopicEventSubscription = null as any;
utilities.lazyLoad(exports, ["DomainTopicEventSubscription"], () => require("./domainTopicEventSubscription"));

export { EventChannelArgs } from "./eventChannel";
export type EventChannel = import("./eventChannel").EventChannel;
export const EventChannel: typeof import("./eventChannel").EventChannel = null as any;
utilities.lazyLoad(exports, ["EventChannel"], () => require("./eventChannel"));

export { GetChannelArgs, GetChannelResult, GetChannelOutputArgs } from "./getChannel";
export const getChannel: typeof import("./getChannel").getChannel = null as any;
export const getChannelOutput: typeof import("./getChannel").getChannelOutput = null as any;
utilities.lazyLoad(exports, ["getChannel","getChannelOutput"], () => require("./getChannel"));

export { GetChannelFullUrlArgs, GetChannelFullUrlResult, GetChannelFullUrlOutputArgs } from "./getChannelFullUrl";
export const getChannelFullUrl: typeof import("./getChannelFullUrl").getChannelFullUrl = null as any;
export const getChannelFullUrlOutput: typeof import("./getChannelFullUrl").getChannelFullUrlOutput = null as any;
utilities.lazyLoad(exports, ["getChannelFullUrl","getChannelFullUrlOutput"], () => require("./getChannelFullUrl"));

export { GetDomainEventSubscriptionArgs, GetDomainEventSubscriptionResult, GetDomainEventSubscriptionOutputArgs } from "./getDomainEventSubscription";
export const getDomainEventSubscription: typeof import("./getDomainEventSubscription").getDomainEventSubscription = null as any;
export const getDomainEventSubscriptionOutput: typeof import("./getDomainEventSubscription").getDomainEventSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getDomainEventSubscription","getDomainEventSubscriptionOutput"], () => require("./getDomainEventSubscription"));

export { GetDomainEventSubscriptionDeliveryAttributesArgs, GetDomainEventSubscriptionDeliveryAttributesResult, GetDomainEventSubscriptionDeliveryAttributesOutputArgs } from "./getDomainEventSubscriptionDeliveryAttributes";
export const getDomainEventSubscriptionDeliveryAttributes: typeof import("./getDomainEventSubscriptionDeliveryAttributes").getDomainEventSubscriptionDeliveryAttributes = null as any;
export const getDomainEventSubscriptionDeliveryAttributesOutput: typeof import("./getDomainEventSubscriptionDeliveryAttributes").getDomainEventSubscriptionDeliveryAttributesOutput = null as any;
utilities.lazyLoad(exports, ["getDomainEventSubscriptionDeliveryAttributes","getDomainEventSubscriptionDeliveryAttributesOutput"], () => require("./getDomainEventSubscriptionDeliveryAttributes"));

export { GetDomainEventSubscriptionFullUrlArgs, GetDomainEventSubscriptionFullUrlResult, GetDomainEventSubscriptionFullUrlOutputArgs } from "./getDomainEventSubscriptionFullUrl";
export const getDomainEventSubscriptionFullUrl: typeof import("./getDomainEventSubscriptionFullUrl").getDomainEventSubscriptionFullUrl = null as any;
export const getDomainEventSubscriptionFullUrlOutput: typeof import("./getDomainEventSubscriptionFullUrl").getDomainEventSubscriptionFullUrlOutput = null as any;
utilities.lazyLoad(exports, ["getDomainEventSubscriptionFullUrl","getDomainEventSubscriptionFullUrlOutput"], () => require("./getDomainEventSubscriptionFullUrl"));

export { GetDomainTopicEventSubscriptionArgs, GetDomainTopicEventSubscriptionResult, GetDomainTopicEventSubscriptionOutputArgs } from "./getDomainTopicEventSubscription";
export const getDomainTopicEventSubscription: typeof import("./getDomainTopicEventSubscription").getDomainTopicEventSubscription = null as any;
export const getDomainTopicEventSubscriptionOutput: typeof import("./getDomainTopicEventSubscription").getDomainTopicEventSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getDomainTopicEventSubscription","getDomainTopicEventSubscriptionOutput"], () => require("./getDomainTopicEventSubscription"));

export { GetDomainTopicEventSubscriptionDeliveryAttributesArgs, GetDomainTopicEventSubscriptionDeliveryAttributesResult, GetDomainTopicEventSubscriptionDeliveryAttributesOutputArgs } from "./getDomainTopicEventSubscriptionDeliveryAttributes";
export const getDomainTopicEventSubscriptionDeliveryAttributes: typeof import("./getDomainTopicEventSubscriptionDeliveryAttributes").getDomainTopicEventSubscriptionDeliveryAttributes = null as any;
export const getDomainTopicEventSubscriptionDeliveryAttributesOutput: typeof import("./getDomainTopicEventSubscriptionDeliveryAttributes").getDomainTopicEventSubscriptionDeliveryAttributesOutput = null as any;
utilities.lazyLoad(exports, ["getDomainTopicEventSubscriptionDeliveryAttributes","getDomainTopicEventSubscriptionDeliveryAttributesOutput"], () => require("./getDomainTopicEventSubscriptionDeliveryAttributes"));

export { GetDomainTopicEventSubscriptionFullUrlArgs, GetDomainTopicEventSubscriptionFullUrlResult, GetDomainTopicEventSubscriptionFullUrlOutputArgs } from "./getDomainTopicEventSubscriptionFullUrl";
export const getDomainTopicEventSubscriptionFullUrl: typeof import("./getDomainTopicEventSubscriptionFullUrl").getDomainTopicEventSubscriptionFullUrl = null as any;
export const getDomainTopicEventSubscriptionFullUrlOutput: typeof import("./getDomainTopicEventSubscriptionFullUrl").getDomainTopicEventSubscriptionFullUrlOutput = null as any;
utilities.lazyLoad(exports, ["getDomainTopicEventSubscriptionFullUrl","getDomainTopicEventSubscriptionFullUrlOutput"], () => require("./getDomainTopicEventSubscriptionFullUrl"));

export { GetEventChannelArgs, GetEventChannelResult, GetEventChannelOutputArgs } from "./getEventChannel";
export const getEventChannel: typeof import("./getEventChannel").getEventChannel = null as any;
export const getEventChannelOutput: typeof import("./getEventChannel").getEventChannelOutput = null as any;
utilities.lazyLoad(exports, ["getEventChannel","getEventChannelOutput"], () => require("./getEventChannel"));

export { GetPartnerConfigurationArgs, GetPartnerConfigurationResult, GetPartnerConfigurationOutputArgs } from "./getPartnerConfiguration";
export const getPartnerConfiguration: typeof import("./getPartnerConfiguration").getPartnerConfiguration = null as any;
export const getPartnerConfigurationOutput: typeof import("./getPartnerConfiguration").getPartnerConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getPartnerConfiguration","getPartnerConfigurationOutput"], () => require("./getPartnerConfiguration"));

export { GetPartnerDestinationArgs, GetPartnerDestinationResult, GetPartnerDestinationOutputArgs } from "./getPartnerDestination";
export const getPartnerDestination: typeof import("./getPartnerDestination").getPartnerDestination = null as any;
export const getPartnerDestinationOutput: typeof import("./getPartnerDestination").getPartnerDestinationOutput = null as any;
utilities.lazyLoad(exports, ["getPartnerDestination","getPartnerDestinationOutput"], () => require("./getPartnerDestination"));

export { GetPartnerRegistrationArgs, GetPartnerRegistrationResult, GetPartnerRegistrationOutputArgs } from "./getPartnerRegistration";
export const getPartnerRegistration: typeof import("./getPartnerRegistration").getPartnerRegistration = null as any;
export const getPartnerRegistrationOutput: typeof import("./getPartnerRegistration").getPartnerRegistrationOutput = null as any;
utilities.lazyLoad(exports, ["getPartnerRegistration","getPartnerRegistrationOutput"], () => require("./getPartnerRegistration"));

export { GetPartnerTopicArgs, GetPartnerTopicResult, GetPartnerTopicOutputArgs } from "./getPartnerTopic";
export const getPartnerTopic: typeof import("./getPartnerTopic").getPartnerTopic = null as any;
export const getPartnerTopicOutput: typeof import("./getPartnerTopic").getPartnerTopicOutput = null as any;
utilities.lazyLoad(exports, ["getPartnerTopic","getPartnerTopicOutput"], () => require("./getPartnerTopic"));

export { GetTopicEventSubscriptionArgs, GetTopicEventSubscriptionResult, GetTopicEventSubscriptionOutputArgs } from "./getTopicEventSubscription";
export const getTopicEventSubscription: typeof import("./getTopicEventSubscription").getTopicEventSubscription = null as any;
export const getTopicEventSubscriptionOutput: typeof import("./getTopicEventSubscription").getTopicEventSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getTopicEventSubscription","getTopicEventSubscriptionOutput"], () => require("./getTopicEventSubscription"));

export { GetTopicEventSubscriptionDeliveryAttributesArgs, GetTopicEventSubscriptionDeliveryAttributesResult, GetTopicEventSubscriptionDeliveryAttributesOutputArgs } from "./getTopicEventSubscriptionDeliveryAttributes";
export const getTopicEventSubscriptionDeliveryAttributes: typeof import("./getTopicEventSubscriptionDeliveryAttributes").getTopicEventSubscriptionDeliveryAttributes = null as any;
export const getTopicEventSubscriptionDeliveryAttributesOutput: typeof import("./getTopicEventSubscriptionDeliveryAttributes").getTopicEventSubscriptionDeliveryAttributesOutput = null as any;
utilities.lazyLoad(exports, ["getTopicEventSubscriptionDeliveryAttributes","getTopicEventSubscriptionDeliveryAttributesOutput"], () => require("./getTopicEventSubscriptionDeliveryAttributes"));

export { GetTopicEventSubscriptionFullUrlArgs, GetTopicEventSubscriptionFullUrlResult, GetTopicEventSubscriptionFullUrlOutputArgs } from "./getTopicEventSubscriptionFullUrl";
export const getTopicEventSubscriptionFullUrl: typeof import("./getTopicEventSubscriptionFullUrl").getTopicEventSubscriptionFullUrl = null as any;
export const getTopicEventSubscriptionFullUrlOutput: typeof import("./getTopicEventSubscriptionFullUrl").getTopicEventSubscriptionFullUrlOutput = null as any;
utilities.lazyLoad(exports, ["getTopicEventSubscriptionFullUrl","getTopicEventSubscriptionFullUrlOutput"], () => require("./getTopicEventSubscriptionFullUrl"));

export { PartnerConfigurationArgs } from "./partnerConfiguration";
export type PartnerConfiguration = import("./partnerConfiguration").PartnerConfiguration;
export const PartnerConfiguration: typeof import("./partnerConfiguration").PartnerConfiguration = null as any;
utilities.lazyLoad(exports, ["PartnerConfiguration"], () => require("./partnerConfiguration"));

export { PartnerDestinationArgs } from "./partnerDestination";
export type PartnerDestination = import("./partnerDestination").PartnerDestination;
export const PartnerDestination: typeof import("./partnerDestination").PartnerDestination = null as any;
utilities.lazyLoad(exports, ["PartnerDestination"], () => require("./partnerDestination"));

export { PartnerRegistrationArgs } from "./partnerRegistration";
export type PartnerRegistration = import("./partnerRegistration").PartnerRegistration;
export const PartnerRegistration: typeof import("./partnerRegistration").PartnerRegistration = null as any;
utilities.lazyLoad(exports, ["PartnerRegistration"], () => require("./partnerRegistration"));

export { PartnerTopicArgs } from "./partnerTopic";
export type PartnerTopic = import("./partnerTopic").PartnerTopic;
export const PartnerTopic: typeof import("./partnerTopic").PartnerTopic = null as any;
utilities.lazyLoad(exports, ["PartnerTopic"], () => require("./partnerTopic"));

export { TopicEventSubscriptionArgs } from "./topicEventSubscription";
export type TopicEventSubscription = import("./topicEventSubscription").TopicEventSubscription;
export const TopicEventSubscription: typeof import("./topicEventSubscription").TopicEventSubscription = null as any;
utilities.lazyLoad(exports, ["TopicEventSubscription"], () => require("./topicEventSubscription"));


// Export enums:
export * from "../../types/enums/eventgrid/v20211015preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:eventgrid/v20211015preview:Channel":
                return new Channel(name, <any>undefined, { urn })
            case "azure-native:eventgrid/v20211015preview:DomainEventSubscription":
                return new DomainEventSubscription(name, <any>undefined, { urn })
            case "azure-native:eventgrid/v20211015preview:DomainTopicEventSubscription":
                return new DomainTopicEventSubscription(name, <any>undefined, { urn })
            case "azure-native:eventgrid/v20211015preview:EventChannel":
                return new EventChannel(name, <any>undefined, { urn })
            case "azure-native:eventgrid/v20211015preview:PartnerConfiguration":
                return new PartnerConfiguration(name, <any>undefined, { urn })
            case "azure-native:eventgrid/v20211015preview:PartnerDestination":
                return new PartnerDestination(name, <any>undefined, { urn })
            case "azure-native:eventgrid/v20211015preview:PartnerRegistration":
                return new PartnerRegistration(name, <any>undefined, { urn })
            case "azure-native:eventgrid/v20211015preview:PartnerTopic":
                return new PartnerTopic(name, <any>undefined, { urn })
            case "azure-native:eventgrid/v20211015preview:TopicEventSubscription":
                return new TopicEventSubscription(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "eventgrid/v20211015preview", _module)
