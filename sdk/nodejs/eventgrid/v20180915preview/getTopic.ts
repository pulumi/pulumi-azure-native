// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get properties of a topic
 */
/** @deprecated Version 2018-09-15-preview will be removed in v2 of the provider. */
export function getTopic(args: GetTopicArgs, opts?: pulumi.InvokeOptions): Promise<GetTopicResult> {
    pulumi.log.warn("getTopic is deprecated: Version 2018-09-15-preview will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:eventgrid/v20180915preview:getTopic", {
        "resourceGroupName": args.resourceGroupName,
        "topicName": args.topicName,
    }, opts);
}

export interface GetTopicArgs {
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: string;
    /**
     * Name of the topic
     */
    topicName: string;
}

/**
 * EventGrid Topic
 */
export interface GetTopicResult {
    /**
     * Endpoint for the topic.
     */
    readonly endpoint: string;
    /**
     * Fully qualified identifier of the resource
     */
    readonly id: string;
    /**
     * This determines the format that Event Grid should expect for incoming events published to the topic.
     */
    readonly inputSchema?: string;
    /**
     * This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
     */
    readonly inputSchemaMapping?: outputs.eventgrid.v20180915preview.JsonInputSchemaMappingResponse;
    /**
     * Location of the resource
     */
    readonly location: string;
    /**
     * Name of the resource
     */
    readonly name: string;
    /**
     * Provisioning state of the topic.
     */
    readonly provisioningState: string;
    /**
     * Tags of the resource
     */
    readonly tags?: {[key: string]: string};
    /**
     * Type of the resource
     */
    readonly type: string;
}
/**
 * Get properties of a topic
 */
/** @deprecated Version 2018-09-15-preview will be removed in v2 of the provider. */
export function getTopicOutput(args: GetTopicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTopicResult> {
    return pulumi.output(args).apply((a: any) => getTopic(a, opts))
}

export interface GetTopicOutputArgs {
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the topic
     */
    topicName: pulumi.Input<string>;
}
