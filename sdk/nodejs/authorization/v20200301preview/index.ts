// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./denyAssignment";
export * from "./getDenyAssignment";
export * from "./getRoleAssignment";
export * from "./getRoleDefinition";
export * from "./roleAssignment";
export * from "./roleDefinition";

// Export enums:
export * from "../../types/enums/authorization/v20200301preview";

// Import resources to register:
import { DenyAssignment } from "./denyAssignment";
import { RoleAssignment } from "./roleAssignment";
import { RoleDefinition } from "./roleDefinition";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:authorization/v20200301preview:DenyAssignment":
                return new DenyAssignment(name, <any>undefined, { urn })
            case "azure-nextgen:authorization/v20200301preview:RoleAssignment":
                return new RoleAssignment(name, <any>undefined, { urn })
            case "azure-nextgen:authorization/v20200301preview:RoleDefinition":
                return new RoleDefinition(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "authorization/v20200301preview", _module)
