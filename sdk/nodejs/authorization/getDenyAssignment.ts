// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Deny Assignment
 * API Version: 2020-03-01-preview.
 */
export function getDenyAssignment(args: GetDenyAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetDenyAssignmentResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:authorization:getDenyAssignment", {
        "denyAssignmentName": args.denyAssignmentName,
        "scope": args.scope,
    }, opts);
}

export interface GetDenyAssignmentArgs {
    /**
     * The name of the deny assignment. It can be any valid GUID.
     */
    readonly denyAssignmentName: string;
    /**
     * The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
     */
    readonly scope: string;
}

/**
 * Deny Assignment
 */
export interface GetDenyAssignmentResult {
    /**
     * The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'
     */
    readonly condition?: string;
    /**
     * Version of the condition. Currently accepted value is '2.0'
     */
    readonly conditionVersion?: string;
    /**
     * Id of the user who created the assignment
     */
    readonly createdBy: string;
    /**
     * Time it was created
     */
    readonly createdOn: string;
    /**
     * The display name of the deny assignment.
     */
    readonly denyAssignmentName?: string;
    /**
     * The description of the deny assignment.
     */
    readonly description?: string;
    /**
     * Determines if the deny assignment applies to child scopes. Default value is false.
     */
    readonly doNotApplyToChildScopes?: boolean;
    /**
     * Array of principals to which the deny assignment does not apply.
     */
    readonly excludePrincipals?: outputs.authorization.PrincipalResponse[];
    /**
     * The deny assignment ID.
     */
    readonly id: string;
    /**
     * Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
     */
    readonly isSystemProtected?: boolean;
    /**
     * The deny assignment name.
     */
    readonly name: string;
    /**
     * An array of permissions that are denied by the deny assignment.
     */
    readonly permissions: outputs.authorization.PermissionResponse[];
    /**
     * Array of principals to which the deny assignment applies.
     */
    readonly principals: outputs.authorization.PrincipalResponse[];
    /**
     * The deny assignment scope.
     */
    readonly scope?: string;
    /**
     * The deny assignment type.
     */
    readonly type: string;
    /**
     * Id of the user who updated the assignment
     */
    readonly updatedBy: string;
    /**
     * Time it was updated
     */
    readonly updatedOn: string;
}
