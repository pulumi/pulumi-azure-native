// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Role management policy
 * API Version: 2020-10-01-preview.
 */
export function getRoleManagementPolicyAssignment(args: GetRoleManagementPolicyAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleManagementPolicyAssignmentResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:authorization:getRoleManagementPolicyAssignment", {
        "roleManagementPolicyAssignmentName": args.roleManagementPolicyAssignmentName,
        "scope": args.scope,
    }, opts);
}

export interface GetRoleManagementPolicyAssignmentArgs {
    /**
     * The name of format {guid_guid} the role management policy assignment to get.
     */
    roleManagementPolicyAssignmentName: string;
    /**
     * The scope of the role management policy.
     */
    scope: string;
}

/**
 * Role management policy
 */
export interface GetRoleManagementPolicyAssignmentResult {
    /**
     * The role management policy Id.
     */
    readonly id: string;
    /**
     * The role management policy name.
     */
    readonly name: string;
    /**
     * Additional properties of scope, role definition and policy
     */
    readonly policyAssignmentProperties: outputs.authorization.PolicyAssignmentPropertiesResponse;
    /**
     * The policy id role management policy assignment.
     */
    readonly policyId?: string;
    /**
     * The role definition of management policy assignment.
     */
    readonly roleDefinitionId?: string;
    /**
     * The role management policy scope.
     */
    readonly scope?: string;
    /**
     * The role management policy type.
     */
    readonly type: string;
}
