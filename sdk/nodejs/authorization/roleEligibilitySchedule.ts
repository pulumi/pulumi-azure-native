// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class RoleEligibilitySchedule extends pulumi.CustomResource {
    /**
     * Get an existing RoleEligibilitySchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleEligibilitySchedule {
        return new RoleEligibilitySchedule(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:authorization:RoleEligibilitySchedule';

    /**
     * Returns true if the given object is an instance of RoleEligibilitySchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoleEligibilitySchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoleEligibilitySchedule.__pulumiType;
    }

    /**
     * The end date time of the role eligibility schedule
     */
    public /*out*/ readonly endDateTime!: pulumi.Output<string | undefined>;
    /**
     * Justification for the role eligibility schedule request
     */
    public readonly justification!: pulumi.Output<string | undefined>;
    /**
     * The principal ID
     */
    public readonly principalId!: pulumi.Output<string>;
    /**
     * The role definition ID
     */
    public readonly roleDefinitionId!: pulumi.Output<string>;
    /**
     * The schedule information for the role eligibility schedule
     */
    public readonly scheduleInfo!: pulumi.Output<outputs.authorization.RoleEligibilityScheduleRequestPropertiesScheduleInfo | undefined>;
    /**
     * The scope of the role eligibility schedule to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
     */
    public readonly scope!: pulumi.Output<string>;
    /**
     * The end date time of the role eligibility schedule
     */
    public /*out*/ readonly startDateTime!: pulumi.Output<string | undefined>;
    /**
     * The status of the role eligibility schedule request
     */
    public /*out*/ readonly status!: pulumi.Output<string | undefined>;

    /**
     * Create a RoleEligibilitySchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleEligibilityScheduleArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.principalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalId'");
            }
            if ((!args || args.roleDefinitionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleDefinitionId'");
            }
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            resourceInputs["justification"] = args ? args.justification : undefined;
            resourceInputs["principalId"] = args ? args.principalId : undefined;
            resourceInputs["roleDefinitionId"] = args ? args.roleDefinitionId : undefined;
            resourceInputs["scheduleInfo"] = args ? args.scheduleInfo : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["endDateTime"] = undefined /*out*/;
            resourceInputs["startDateTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["endDateTime"] = undefined /*out*/;
            resourceInputs["justification"] = undefined /*out*/;
            resourceInputs["principalId"] = undefined /*out*/;
            resourceInputs["roleDefinitionId"] = undefined /*out*/;
            resourceInputs["scheduleInfo"] = undefined /*out*/;
            resourceInputs["scope"] = undefined /*out*/;
            resourceInputs["startDateTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["justification", "principalId", "roleDefinitionId", "scheduleInfo", "scope"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(RoleEligibilitySchedule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RoleEligibilitySchedule resource.
 */
export interface RoleEligibilityScheduleArgs {
    /**
     * Justification for the role eligibility schedule request
     */
    justification?: pulumi.Input<string>;
    /**
     * The principal ID
     */
    principalId: pulumi.Input<string>;
    /**
     * The role definition ID
     */
    roleDefinitionId: pulumi.Input<string>;
    /**
     * The schedule information for the role eligibility schedule
     */
    scheduleInfo?: pulumi.Input<inputs.authorization.RoleEligibilityScheduleRequestPropertiesScheduleInfoArgs>;
    /**
     * The scope of the role eligibility schedule request to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
     */
    scope: pulumi.Input<string>;
}
