// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The policy pricing.
 * API Version: 2021-07-01.
 */
export function getPolicyPricing(args: GetPolicyPricingArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyPricingResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:authorization:getPolicyPricing", {
        "policyPricingName": args.policyPricingName,
        "scope": args.scope,
    }, opts);
}

export interface GetPolicyPricingArgs {
    /**
     * The name of the policy pricing.
     */
    policyPricingName: string;
    /**
     * The scope of the policy pricing. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}') or subscription (format: '/subscriptions/{subscriptionId}')
     */
    scope: string;
}

/**
 * The policy pricing.
 */
export interface GetPolicyPricingResult {
    /**
     * The ID of the policy pricing.
     */
    readonly id: string;
    /**
     * The name of the policy pricing.
     */
    readonly name: string;
    /**
     * The policy pricing tier. Possible values are Advanced and Defender.
     */
    readonly pricingTier: string;
    /**
     * The provisioning state of the policy pricing resource.
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.authorization.SystemDataResponse;
    /**
     * The type of the resource (Microsoft.Authorization/policyPricings).
     */
    readonly type: string;
}

export function getPolicyPricingOutput(args: GetPolicyPricingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyPricingResult> {
    return pulumi.output(args).apply(a => getPolicyPricing(a, opts))
}

export interface GetPolicyPricingOutputArgs {
    /**
     * The name of the policy pricing.
     */
    policyPricingName: pulumi.Input<string>;
    /**
     * The scope of the policy pricing. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}') or subscription (format: '/subscriptions/{subscriptionId}')
     */
    scope: pulumi.Input<string>;
}
