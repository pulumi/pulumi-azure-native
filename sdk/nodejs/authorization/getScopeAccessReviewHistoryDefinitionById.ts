// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Get access review history definition by definition Id
 * Azure REST API version: 2021-12-01-preview.
 */
export function getScopeAccessReviewHistoryDefinitionById(args: GetScopeAccessReviewHistoryDefinitionByIdArgs, opts?: pulumi.InvokeOptions): Promise<GetScopeAccessReviewHistoryDefinitionByIdResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:authorization:getScopeAccessReviewHistoryDefinitionById", {
        "historyDefinitionId": args.historyDefinitionId,
        "scope": args.scope,
    }, opts);
}

export interface GetScopeAccessReviewHistoryDefinitionByIdArgs {
    /**
     * The id of the access review history definition.
     */
    historyDefinitionId: string;
    /**
     * The scope of the resource.
     */
    scope: string;
}

/**
 * Access Review History Definition.
 */
export interface GetScopeAccessReviewHistoryDefinitionByIdResult {
    /**
     * The Azure API version of the resource.
     */
    readonly azureApiVersion: string;
    /**
     * Date time when history definition was created
     */
    readonly createdDateTime: string;
    /**
     * Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied the data will only contain review results in which the decision maker approved or denied a review request.
     */
    readonly decisions?: string[];
    /**
     * The display name for the history definition.
     */
    readonly displayName?: string;
    /**
     * The access review history definition id.
     */
    readonly id: string;
    /**
     * Set of access review history instances for this history definition.
     */
    readonly instances?: outputs.authorization.AccessReviewHistoryInstanceResponse[];
    /**
     * The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
     */
    readonly interval?: number;
    /**
     * The access review history definition unique id.
     */
    readonly name: string;
    /**
     * The identity id
     */
    readonly principalId: string;
    /**
     * The identity display name
     */
    readonly principalName: string;
    /**
     * The identity type : user/servicePrincipal
     */
    readonly principalType: string;
    /**
     * Access Review History Definition recurrence settings.
     */
    readonly range?: outputs.authorization.AccessReviewRecurrenceRangeResponse;
    /**
     * Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.
     */
    readonly reviewHistoryPeriodEndDateTime: string;
    /**
     * Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.
     */
    readonly reviewHistoryPeriodStartDateTime: string;
    /**
     * A collection of scopes used when selecting review history data
     */
    readonly scopes?: outputs.authorization.AccessReviewScopeResponse[];
    /**
     * This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or error.
     */
    readonly status: string;
    /**
     * The resource type.
     */
    readonly type: string;
    /**
     * The user principal name(if valid)
     */
    readonly userPrincipalName: string;
}
/**
 * Get access review history definition by definition Id
 * Azure REST API version: 2021-12-01-preview.
 */
export function getScopeAccessReviewHistoryDefinitionByIdOutput(args: GetScopeAccessReviewHistoryDefinitionByIdOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetScopeAccessReviewHistoryDefinitionByIdResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:authorization:getScopeAccessReviewHistoryDefinitionById", {
        "historyDefinitionId": args.historyDefinitionId,
        "scope": args.scope,
    }, opts);
}

export interface GetScopeAccessReviewHistoryDefinitionByIdOutputArgs {
    /**
     * The id of the access review history definition.
     */
    historyDefinitionId: pulumi.Input<string>;
    /**
     * The scope of the resource.
     */
    scope: pulumi.Input<string>;
}
