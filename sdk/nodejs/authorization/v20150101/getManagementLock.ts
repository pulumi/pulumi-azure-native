// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets the management lock of a scope.
 */
/** @deprecated Version 2015-01-01 will be removed in v2 of the provider. */
export function getManagementLock(args: GetManagementLockArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementLockResult> {
    pulumi.log.warn("getManagementLock is deprecated: Version 2015-01-01 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:authorization/v20150101:getManagementLock", {
        "lockName": args.lockName,
    }, opts);
}

export interface GetManagementLockArgs {
    /**
     * Name of the management lock.
     */
    lockName: string;
}

/**
 * Management lock information.
 */
export interface GetManagementLockResult {
    /**
     * The Id of the lock.
     */
    readonly id: string;
    /**
     * The lock level of the management lock.
     */
    readonly level?: string;
    /**
     * The name of the lock.
     */
    readonly name?: string;
    /**
     * The notes of the management lock.
     */
    readonly notes?: string;
    /**
     * The type of the lock.
     */
    readonly type: string;
}
/**
 * Gets the management lock of a scope.
 */
/** @deprecated Version 2015-01-01 will be removed in v2 of the provider. */
export function getManagementLockOutput(args: GetManagementLockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementLockResult> {
    return pulumi.output(args).apply((a: any) => getManagementLock(a, opts))
}

export interface GetManagementLockOutputArgs {
    /**
     * Name of the management lock.
     */
    lockName: pulumi.Input<string>;
}
