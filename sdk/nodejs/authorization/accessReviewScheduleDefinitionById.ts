// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Access Review Schedule Definition.
 * API Version: 2018-05-01-preview.
 */
export class AccessReviewScheduleDefinitionById extends pulumi.CustomResource {
    /**
     * Get an existing AccessReviewScheduleDefinitionById resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AccessReviewScheduleDefinitionById {
        return new AccessReviewScheduleDefinitionById(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:authorization:AccessReviewScheduleDefinitionById';

    /**
     * Returns true if the given object is an instance of AccessReviewScheduleDefinitionById.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessReviewScheduleDefinitionById {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessReviewScheduleDefinitionById.__pulumiType;
    }

    /**
     * Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled. If not enabled, a user must, after the review completes, apply the access review.
     */
    public readonly autoApplyDecisionsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * This specifies the behavior for the autoReview feature when an access review completes.
     */
    public readonly defaultDecision!: pulumi.Output<string | undefined>;
    /**
     * Flag to indicate whether reviewers are required to provide a justification when reviewing access.
     */
    public readonly defaultDecisionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The description provided by the access review creator and visible to admins.
     */
    public readonly descriptionForAdmins!: pulumi.Output<string | undefined>;
    /**
     * The description provided by the access review creator to be shown to reviewers.
     */
    public readonly descriptionForReviewers!: pulumi.Output<string | undefined>;
    /**
     * The display name for the schedule definition.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The DateTime when the review is scheduled to end. Required if type is endDate
     */
    public readonly endDate!: pulumi.Output<string | undefined>;
    /**
     * The duration in days for an instance.
     */
    public readonly instanceDurationInDays!: pulumi.Output<number | undefined>;
    /**
     * This is the collection of instances returned when one does an expand on it.
     */
    public readonly instances!: pulumi.Output<outputs.authorization.AccessReviewInstanceResponse[] | undefined>;
    /**
     * The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
     */
    public readonly interval!: pulumi.Output<number | undefined>;
    /**
     * Flag to indicate whether the reviewer is required to pass justification when recording a decision.
     */
    public readonly justificationRequiredOnApproval!: pulumi.Output<boolean | undefined>;
    /**
     * Flag to indicate whether sending mails to reviewers and the review creator is enabled.
     */
    public readonly mailNotificationsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The access review schedule definition unique id.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The number of times to repeat the access review. Required and must be positive if type is numbered.
     */
    public readonly numberOfOccurrences!: pulumi.Output<number | undefined>;
    /**
     * The identity id
     */
    public /*out*/ readonly principalId!: pulumi.Output<string>;
    /**
     * The identity display name
     */
    public /*out*/ readonly principalName!: pulumi.Output<string>;
    /**
     * The identity type user/servicePrincipal to review
     */
    public /*out*/ readonly principalType!: pulumi.Output<string>;
    /**
     * Flag to indicate whether showing recommendations to reviewers is enabled.
     */
    public readonly recommendationsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Flag to indicate whether sending reminder emails to reviewers are enabled.
     */
    public readonly reminderNotificationsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * ResourceId in which this review is getting created
     */
    public /*out*/ readonly resourceId!: pulumi.Output<string>;
    /**
     * This is the collection of reviewers.
     */
    public readonly reviewers!: pulumi.Output<outputs.authorization.AccessReviewReviewerResponse[] | undefined>;
    /**
     * This field specifies the type of reviewers for a review. Usually for a review, reviewers are explicitly assigned. However, in some cases, the reviewers may not be assigned and instead be chosen dynamically. For example managers review or self review.
     */
    public /*out*/ readonly reviewersType!: pulumi.Output<string>;
    /**
     * This is used to indicate the role being reviewed
     */
    public /*out*/ readonly roleDefinitionId!: pulumi.Output<string>;
    /**
     * The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
     */
    public readonly startDate!: pulumi.Output<string | undefined>;
    /**
     * This read-only field specifies the status of an accessReview.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The resource type.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The user principal name(if valid)
     */
    public /*out*/ readonly userPrincipalName!: pulumi.Output<string>;

    /**
     * Create a AccessReviewScheduleDefinitionById resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccessReviewScheduleDefinitionByIdArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            inputs["autoApplyDecisionsEnabled"] = args ? args.autoApplyDecisionsEnabled : undefined;
            inputs["defaultDecision"] = args ? args.defaultDecision : undefined;
            inputs["defaultDecisionEnabled"] = args ? args.defaultDecisionEnabled : undefined;
            inputs["descriptionForAdmins"] = args ? args.descriptionForAdmins : undefined;
            inputs["descriptionForReviewers"] = args ? args.descriptionForReviewers : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["endDate"] = args ? args.endDate : undefined;
            inputs["instanceDurationInDays"] = args ? args.instanceDurationInDays : undefined;
            inputs["instances"] = args ? args.instances : undefined;
            inputs["interval"] = args ? args.interval : undefined;
            inputs["justificationRequiredOnApproval"] = args ? args.justificationRequiredOnApproval : undefined;
            inputs["mailNotificationsEnabled"] = args ? args.mailNotificationsEnabled : undefined;
            inputs["numberOfOccurrences"] = args ? args.numberOfOccurrences : undefined;
            inputs["recommendationsEnabled"] = args ? args.recommendationsEnabled : undefined;
            inputs["reminderNotificationsEnabled"] = args ? args.reminderNotificationsEnabled : undefined;
            inputs["reviewers"] = args ? args.reviewers : undefined;
            inputs["scheduleDefinitionId"] = args ? args.scheduleDefinitionId : undefined;
            inputs["startDate"] = args ? args.startDate : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["principalId"] = undefined /*out*/;
            inputs["principalName"] = undefined /*out*/;
            inputs["principalType"] = undefined /*out*/;
            inputs["resourceId"] = undefined /*out*/;
            inputs["reviewersType"] = undefined /*out*/;
            inputs["roleDefinitionId"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["userPrincipalName"] = undefined /*out*/;
        } else {
            inputs["autoApplyDecisionsEnabled"] = undefined /*out*/;
            inputs["defaultDecision"] = undefined /*out*/;
            inputs["defaultDecisionEnabled"] = undefined /*out*/;
            inputs["descriptionForAdmins"] = undefined /*out*/;
            inputs["descriptionForReviewers"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["endDate"] = undefined /*out*/;
            inputs["instanceDurationInDays"] = undefined /*out*/;
            inputs["instances"] = undefined /*out*/;
            inputs["interval"] = undefined /*out*/;
            inputs["justificationRequiredOnApproval"] = undefined /*out*/;
            inputs["mailNotificationsEnabled"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["numberOfOccurrences"] = undefined /*out*/;
            inputs["principalId"] = undefined /*out*/;
            inputs["principalName"] = undefined /*out*/;
            inputs["principalType"] = undefined /*out*/;
            inputs["recommendationsEnabled"] = undefined /*out*/;
            inputs["reminderNotificationsEnabled"] = undefined /*out*/;
            inputs["resourceId"] = undefined /*out*/;
            inputs["reviewers"] = undefined /*out*/;
            inputs["reviewersType"] = undefined /*out*/;
            inputs["roleDefinitionId"] = undefined /*out*/;
            inputs["startDate"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["userPrincipalName"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:authorization/v20180501preview:AccessReviewScheduleDefinitionById" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(AccessReviewScheduleDefinitionById.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a AccessReviewScheduleDefinitionById resource.
 */
export interface AccessReviewScheduleDefinitionByIdArgs {
    /**
     * Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled. If not enabled, a user must, after the review completes, apply the access review.
     */
    readonly autoApplyDecisionsEnabled?: pulumi.Input<boolean>;
    /**
     * This specifies the behavior for the autoReview feature when an access review completes.
     */
    readonly defaultDecision?: pulumi.Input<string | enums.authorization.DefaultDecisionType>;
    /**
     * Flag to indicate whether reviewers are required to provide a justification when reviewing access.
     */
    readonly defaultDecisionEnabled?: pulumi.Input<boolean>;
    /**
     * The description provided by the access review creator and visible to admins.
     */
    readonly descriptionForAdmins?: pulumi.Input<string>;
    /**
     * The description provided by the access review creator to be shown to reviewers.
     */
    readonly descriptionForReviewers?: pulumi.Input<string>;
    /**
     * The display name for the schedule definition.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The DateTime when the review is scheduled to end. Required if type is endDate
     */
    readonly endDate?: pulumi.Input<string>;
    /**
     * The duration in days for an instance.
     */
    readonly instanceDurationInDays?: pulumi.Input<number>;
    /**
     * This is the collection of instances returned when one does an expand on it.
     */
    readonly instances?: pulumi.Input<pulumi.Input<inputs.authorization.AccessReviewInstance>[]>;
    /**
     * The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
     */
    readonly interval?: pulumi.Input<number>;
    /**
     * Flag to indicate whether the reviewer is required to pass justification when recording a decision.
     */
    readonly justificationRequiredOnApproval?: pulumi.Input<boolean>;
    /**
     * Flag to indicate whether sending mails to reviewers and the review creator is enabled.
     */
    readonly mailNotificationsEnabled?: pulumi.Input<boolean>;
    /**
     * The number of times to repeat the access review. Required and must be positive if type is numbered.
     */
    readonly numberOfOccurrences?: pulumi.Input<number>;
    /**
     * Flag to indicate whether showing recommendations to reviewers is enabled.
     */
    readonly recommendationsEnabled?: pulumi.Input<boolean>;
    /**
     * Flag to indicate whether sending reminder emails to reviewers are enabled.
     */
    readonly reminderNotificationsEnabled?: pulumi.Input<boolean>;
    /**
     * This is the collection of reviewers.
     */
    readonly reviewers?: pulumi.Input<pulumi.Input<inputs.authorization.AccessReviewReviewer>[]>;
    /**
     * The id of the access review schedule definition.
     */
    readonly scheduleDefinitionId?: pulumi.Input<string>;
    /**
     * The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
     */
    readonly startDate?: pulumi.Input<string>;
    /**
     * The recurrence range type. The possible values are: endDate, noEnd, numbered.
     */
    readonly type?: pulumi.Input<string | enums.authorization.AccessReviewRecurrenceRangeType>;
}
