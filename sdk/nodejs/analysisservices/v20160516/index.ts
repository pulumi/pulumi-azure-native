// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetServerDetailsArgs, GetServerDetailsResult, GetServerDetailsOutputArgs } from "./getServerDetails";
export const getServerDetails: typeof import("./getServerDetails").getServerDetails = null as any;
export const getServerDetailsOutput: typeof import("./getServerDetails").getServerDetailsOutput = null as any;
utilities.lazyLoad(exports, ["getServerDetails","getServerDetailsOutput"], () => require("./getServerDetails"));

export { ServerDetailsArgs } from "./serverDetails";
export type ServerDetails = import("./serverDetails").ServerDetails;
export const ServerDetails: typeof import("./serverDetails").ServerDetails = null as any;
utilities.lazyLoad(exports, ["ServerDetails"], () => require("./serverDetails"));


// Export enums:
export * from "../../types/enums/analysisservices/v20160516";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:analysisservices/v20160516:ServerDetails":
                return new ServerDetails(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "analysisservices/v20160516", _module)
