// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
 */
/** @deprecated Version 2019-07-01 will be removed in v2 of the provider. */
export function getLinkedServer(args: GetLinkedServerArgs, opts?: pulumi.InvokeOptions): Promise<GetLinkedServerResult> {
    pulumi.log.warn("getLinkedServer is deprecated: Version 2019-07-01 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:cache/v20190701:getLinkedServer", {
        "linkedServerName": args.linkedServerName,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetLinkedServerArgs {
    /**
     * The name of the linked server.
     */
    linkedServerName: string;
    /**
     * The name of the redis cache.
     */
    name: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}

/**
 * Response to put/get linked server (with properties) for Redis cache.
 */
export interface GetLinkedServerResult {
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Fully qualified resourceId of the linked redis cache.
     */
    readonly linkedRedisCacheId: string;
    /**
     * Location of the linked redis cache.
     */
    readonly linkedRedisCacheLocation: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Terminal state of the link between primary and secondary redis cache.
     */
    readonly provisioningState: string;
    /**
     * Role of the linked server.
     */
    readonly serverRole: string;
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
 */
/** @deprecated Version 2019-07-01 will be removed in v2 of the provider. */
export function getLinkedServerOutput(args: GetLinkedServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLinkedServerResult> {
    return pulumi.output(args).apply((a: any) => getLinkedServer(a, opts))
}

export interface GetLinkedServerOutputArgs {
    /**
     * The name of the linked server.
     */
    linkedServerName: pulumi.Input<string>;
    /**
     * The name of the redis cache.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
