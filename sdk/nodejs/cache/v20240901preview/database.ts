// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Describes a database on the Redis Enterprise cluster
 */
export class Database extends pulumi.CustomResource {
    /**
     * Get an existing Database resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Database {
        return new Database(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:cache/v20240901preview:Database';

    /**
     * Returns true if the given object is an instance of Database.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Database {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Database.__pulumiType;
    }

    /**
     * This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created.
     */
    public readonly accessKeysAuthentication!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
     */
    public readonly clientProtocol!: pulumi.Output<string | undefined>;
    /**
     * Clustering policy - default is OSSCluster. This property must be chosen at create time, and cannot be changed without deleting the database.
     */
    public readonly clusteringPolicy!: pulumi.Output<string | undefined>;
    /**
     * Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade
     */
    public readonly deferUpgrade!: pulumi.Output<string | undefined>;
    /**
     * Redis eviction policy - default is VolatileLRU
     */
    public readonly evictionPolicy!: pulumi.Output<string | undefined>;
    /**
     * Optional set of properties to configure geo replication for this database.
     */
    public readonly geoReplication!: pulumi.Output<outputs.cache.v20240901preview.DatabasePropertiesResponseGeoReplication | undefined>;
    /**
     * Optional set of redis modules to enable in this database - modules can only be added at creation time.
     */
    public readonly modules!: pulumi.Output<outputs.cache.v20240901preview.ModuleResponse[] | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Persistence settings
     */
    public readonly persistence!: pulumi.Output<outputs.cache.v20240901preview.PersistenceResponse | undefined>;
    /**
     * TCP port of the database endpoint. Specified at create time. Defaults to an available port.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * Current provisioning status of the database
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Version of Redis the database is running on, e.g. '6.0'
     */
    public /*out*/ readonly redisVersion!: pulumi.Output<string>;
    /**
     * Current resource status of the database
     */
    public /*out*/ readonly resourceState!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.cache.v20240901preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Database resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["accessKeysAuthentication"] = args ? args.accessKeysAuthentication : undefined;
            resourceInputs["clientProtocol"] = args ? args.clientProtocol : undefined;
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["clusteringPolicy"] = args ? args.clusteringPolicy : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["deferUpgrade"] = args ? args.deferUpgrade : undefined;
            resourceInputs["evictionPolicy"] = args ? args.evictionPolicy : undefined;
            resourceInputs["geoReplication"] = args ? args.geoReplication : undefined;
            resourceInputs["modules"] = args ? args.modules : undefined;
            resourceInputs["persistence"] = args ? args.persistence : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["redisVersion"] = undefined /*out*/;
            resourceInputs["resourceState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["accessKeysAuthentication"] = undefined /*out*/;
            resourceInputs["clientProtocol"] = undefined /*out*/;
            resourceInputs["clusteringPolicy"] = undefined /*out*/;
            resourceInputs["deferUpgrade"] = undefined /*out*/;
            resourceInputs["evictionPolicy"] = undefined /*out*/;
            resourceInputs["geoReplication"] = undefined /*out*/;
            resourceInputs["modules"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["persistence"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["redisVersion"] = undefined /*out*/;
            resourceInputs["resourceState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:cache:Database" }, { type: "azure-native:cache/v20201001preview:Database" }, { type: "azure-native:cache/v20210201preview:Database" }, { type: "azure-native:cache/v20210301:Database" }, { type: "azure-native:cache/v20210801:Database" }, { type: "azure-native:cache/v20220101:Database" }, { type: "azure-native:cache/v20221101preview:Database" }, { type: "azure-native:cache/v20230301preview:Database" }, { type: "azure-native:cache/v20230701:Database" }, { type: "azure-native:cache/v20230801preview:Database" }, { type: "azure-native:cache/v20231001preview:Database" }, { type: "azure-native:cache/v20231101:Database" }, { type: "azure-native:cache/v20240201:Database" }, { type: "azure-native:cache/v20240301preview:Database" }, { type: "azure-native:cache/v20240601preview:Database" }, { type: "azure-native:cache/v20241001:Database" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Database.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Database resource.
 */
export interface DatabaseArgs {
    /**
     * This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created.
     */
    accessKeysAuthentication?: pulumi.Input<string | enums.cache.v20240901preview.AccessKeysAuthentication>;
    /**
     * Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
     */
    clientProtocol?: pulumi.Input<string | enums.cache.v20240901preview.Protocol>;
    /**
     * The name of the Redis Enterprise cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Clustering policy - default is OSSCluster. This property must be chosen at create time, and cannot be changed without deleting the database.
     */
    clusteringPolicy?: pulumi.Input<string | enums.cache.v20240901preview.ClusteringPolicy>;
    /**
     * The name of the Redis Enterprise database.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade
     */
    deferUpgrade?: pulumi.Input<string | enums.cache.v20240901preview.DeferUpgradeSetting>;
    /**
     * Redis eviction policy - default is VolatileLRU
     */
    evictionPolicy?: pulumi.Input<string | enums.cache.v20240901preview.EvictionPolicy>;
    /**
     * Optional set of properties to configure geo replication for this database.
     */
    geoReplication?: pulumi.Input<inputs.cache.v20240901preview.DatabasePropertiesGeoReplicationArgs>;
    /**
     * Optional set of redis modules to enable in this database - modules can only be added at creation time.
     */
    modules?: pulumi.Input<pulumi.Input<inputs.cache.v20240901preview.ModuleArgs>[]>;
    /**
     * Persistence settings
     */
    persistence?: pulumi.Input<inputs.cache.v20240901preview.PersistenceArgs>;
    /**
     * TCP port of the database endpoint. Specified at create time. Defaults to an available port.
     */
    port?: pulumi.Input<number>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
