// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets information about access policy assignment for database.
 */
export function getAccessPolicyAssignment(args: GetAccessPolicyAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPolicyAssignmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:cache/v20240901preview:getAccessPolicyAssignment", {
        "accessPolicyAssignmentName": args.accessPolicyAssignmentName,
        "clusterName": args.clusterName,
        "databaseName": args.databaseName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetAccessPolicyAssignmentArgs {
    /**
     * The name of the Redis Enterprise database access policy assignment.
     */
    accessPolicyAssignmentName: string;
    /**
     * The name of the Redis Enterprise cluster.
     */
    clusterName: string;
    /**
     * The name of the Redis Enterprise database.
     */
    databaseName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Describes the access policy assignment of Redis Enterprise database
 */
export interface GetAccessPolicyAssignmentResult {
    /**
     * Name of access policy under specific access policy assignment. Only "default" policy is supported for now.
     */
    readonly accessPolicyName: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Current provisioning status of the access policy assignment.
     */
    readonly provisioningState: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * The user associated with the access policy.
     */
    readonly user: outputs.cache.v20240901preview.AccessPolicyAssignmentPropertiesResponseUser;
}
/**
 * Gets information about access policy assignment for database.
 */
export function getAccessPolicyAssignmentOutput(args: GetAccessPolicyAssignmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessPolicyAssignmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:cache/v20240901preview:getAccessPolicyAssignment", {
        "accessPolicyAssignmentName": args.accessPolicyAssignmentName,
        "clusterName": args.clusterName,
        "databaseName": args.databaseName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetAccessPolicyAssignmentOutputArgs {
    /**
     * The name of the Redis Enterprise database access policy assignment.
     */
    accessPolicyAssignmentName: pulumi.Input<string>;
    /**
     * The name of the Redis Enterprise cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The name of the Redis Enterprise database.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
