// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetRedisFirewallRuleArgs, GetRedisFirewallRuleResult, GetRedisFirewallRuleOutputArgs } from "./getRedisFirewallRule";
export const getRedisFirewallRule: typeof import("./getRedisFirewallRule").getRedisFirewallRule = null as any;
export const getRedisFirewallRuleOutput: typeof import("./getRedisFirewallRule").getRedisFirewallRuleOutput = null as any;
utilities.lazyLoad(exports, ["getRedisFirewallRule","getRedisFirewallRuleOutput"], () => require("./getRedisFirewallRule"));

export { RedisFirewallRuleArgs } from "./redisFirewallRule";
export type RedisFirewallRule = import("./redisFirewallRule").RedisFirewallRule;
export const RedisFirewallRule: typeof import("./redisFirewallRule").RedisFirewallRule = null as any;
utilities.lazyLoad(exports, ["RedisFirewallRule"], () => require("./redisFirewallRule"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:cache/v20160401:RedisFirewallRule":
                return new RedisFirewallRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "cache/v20160401", _module)
