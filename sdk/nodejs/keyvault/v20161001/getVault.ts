// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the specified Azure key vault.
 */
/** @deprecated Version 2016-10-01 will be removed in v2 of the provider. */
export function getVault(args: GetVaultArgs, opts?: pulumi.InvokeOptions): Promise<GetVaultResult> {
    pulumi.log.warn("getVault is deprecated: Version 2016-10-01 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:keyvault/v20161001:getVault", {
        "resourceGroupName": args.resourceGroupName,
        "vaultName": args.vaultName,
    }, opts);
}

export interface GetVaultArgs {
    /**
     * The name of the Resource Group to which the vault belongs.
     */
    resourceGroupName: string;
    /**
     * The name of the vault.
     */
    vaultName: string;
}

/**
 * Resource information with extended details.
 */
export interface GetVaultResult {
    /**
     * The Azure Resource Manager resource ID for the key vault.
     */
    readonly id: string;
    /**
     * The supported Azure location where the key vault should be created.
     */
    readonly location: string;
    /**
     * The name of the key vault.
     */
    readonly name: string;
    /**
     * Properties of the vault
     */
    readonly properties: outputs.keyvault.v20161001.VaultPropertiesResponse;
    /**
     * The tags that will be assigned to the key vault. 
     */
    readonly tags?: {[key: string]: string};
    /**
     * The resource type of the key vault.
     */
    readonly type: string;
}
/**
 * Gets the specified Azure key vault.
 */
/** @deprecated Version 2016-10-01 will be removed in v2 of the provider. */
export function getVaultOutput(args: GetVaultOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVaultResult> {
    return pulumi.output(args).apply((a: any) => getVault(a, opts))
}

export interface GetVaultOutputArgs {
    /**
     * The name of the Resource Group to which the vault belongs.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the vault.
     */
    vaultName: pulumi.Input<string>;
}
