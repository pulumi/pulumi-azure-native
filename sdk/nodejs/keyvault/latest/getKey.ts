// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

export function getKey(args: GetKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:keyvault/latest:getKey", {
        "keyName": args.keyName,
        "resourceGroupName": args.resourceGroupName,
        "vaultName": args.vaultName,
    }, opts);
}

export interface GetKeyArgs {
    /**
     * The name of the key to be retrieved.
     */
    readonly keyName: string;
    /**
     * The name of the resource group which contains the specified key vault.
     */
    readonly resourceGroupName: string;
    /**
     * The name of the vault which contains the key to be retrieved.
     */
    readonly vaultName: string;
}

/**
 * The key resource.
 */
export interface GetKeyResult {
    /**
     * The attributes of the key.
     */
    readonly attributes?: outputs.keyvault.latest.KeyAttributesResponse;
    /**
     * The elliptic curve name. For valid values, see JsonWebKeyCurveName.
     */
    readonly curveName?: string;
    /**
     * Fully qualified identifier of the key vault resource.
     */
    readonly id: string;
    readonly keyOps?: string[];
    /**
     * The key size in bits. For example: 2048, 3072, or 4096 for RSA.
     */
    readonly keySize?: number;
    /**
     * The URI to retrieve the current version of the key.
     */
    readonly keyUri: string;
    /**
     * The URI to retrieve the specific version of the key.
     */
    readonly keyUriWithVersion: string;
    /**
     * The type of the key. For valid values, see JsonWebKeyType.
     */
    readonly kty?: string;
    /**
     * Azure location of the key vault resource.
     */
    readonly location: string;
    /**
     * Name of the key vault resource.
     */
    readonly name: string;
    /**
     * Tags assigned to the key vault resource.
     */
    readonly tags: {[key: string]: string};
    /**
     * Resource type of the key vault resource.
     */
    readonly type: string;
}
