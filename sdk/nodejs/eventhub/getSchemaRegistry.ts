// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Gets the details of an EventHub schema group.
 * API Version: 2022-01-01-preview.
 */
export function getSchemaRegistry(args: GetSchemaRegistryArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaRegistryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:eventhub:getSchemaRegistry", {
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
        "schemaGroupName": args.schemaGroupName,
    }, opts);
}

export interface GetSchemaRegistryArgs {
    /**
     * The Namespace name
     */
    namespaceName: string;
    /**
     * Name of the resource group within the azure subscription.
     */
    resourceGroupName: string;
    /**
     * The Schema Group name 
     */
    schemaGroupName: string;
}

/**
 * Single item in List or Get Schema Group operation
 */
export interface GetSchemaRegistryResult {
    /**
     * Exact time the Schema Group was created.
     */
    readonly createdAtUtc: string;
    /**
     * The ETag value.
     */
    readonly eTag: string;
    /**
     * dictionary object for SchemaGroup group properties
     */
    readonly groupProperties?: {[key: string]: string};
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    readonly schemaCompatibility?: string;
    readonly schemaType?: string;
    /**
     * The system meta data relating to this resource.
     */
    readonly systemData: outputs.eventhub.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
     */
    readonly type: string;
    /**
     * Exact time the Schema Group was updated
     */
    readonly updatedAtUtc: string;
}
/**
 * Gets the details of an EventHub schema group.
 * API Version: 2022-01-01-preview.
 */
export function getSchemaRegistryOutput(args: GetSchemaRegistryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaRegistryResult> {
    return pulumi.output(args).apply((a: any) => getSchemaRegistry(a, opts))
}

export interface GetSchemaRegistryOutputArgs {
    /**
     * The Namespace name
     */
    namespaceName: pulumi.Input<string>;
    /**
     * Name of the resource group within the azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Schema Group name 
     */
    schemaGroupName: pulumi.Input<string>;
}
