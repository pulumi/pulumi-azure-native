// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./cluster";
export * from "./consumerGroup";
export * from "./disasterRecoveryConfig";
export * from "./eventHub";
export * from "./eventHubAuthorizationRule";
export * from "./getCluster";
export * from "./getConsumerGroup";
export * from "./getDisasterRecoveryConfig";
export * from "./getEventHub";
export * from "./getEventHubAuthorizationRule";
export * from "./getNamespace";
export * from "./getNamespaceAuthorizationRule";
export * from "./getNamespaceIpFilterRule";
export * from "./getNamespaceNetworkRuleSet";
export * from "./getNamespaceVirtualNetworkRule";
export * from "./getPrivateEndpointConnection";
export * from "./listDisasterRecoveryConfigKeys";
export * from "./listEventHubKeys";
export * from "./listNamespaceKeys";
export * from "./namespace";
export * from "./namespaceAuthorizationRule";
export * from "./namespaceIpFilterRule";
export * from "./namespaceNetworkRuleSet";
export * from "./namespaceVirtualNetworkRule";
export * from "./privateEndpointConnection";

// Export enums:
export * from "../types/enums/eventhub";

// Export sub-modules:
import * as latest from "./latest";
import * as v20140901 from "./v20140901";
import * as v20150801 from "./v20150801";
import * as v20170401 from "./v20170401";
import * as v20180101preview from "./v20180101preview";

export {
    latest,
    v20140901,
    v20150801,
    v20170401,
    v20180101preview,
};

// Import resources to register:
import { Cluster } from "./cluster";
import { ConsumerGroup } from "./consumerGroup";
import { DisasterRecoveryConfig } from "./disasterRecoveryConfig";
import { EventHub } from "./eventHub";
import { EventHubAuthorizationRule } from "./eventHubAuthorizationRule";
import { Namespace } from "./namespace";
import { NamespaceAuthorizationRule } from "./namespaceAuthorizationRule";
import { NamespaceIpFilterRule } from "./namespaceIpFilterRule";
import { NamespaceNetworkRuleSet } from "./namespaceNetworkRuleSet";
import { NamespaceVirtualNetworkRule } from "./namespaceVirtualNetworkRule";
import { PrivateEndpointConnection } from "./privateEndpointConnection";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:eventhub:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:ConsumerGroup":
                return new ConsumerGroup(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:DisasterRecoveryConfig":
                return new DisasterRecoveryConfig(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:EventHub":
                return new EventHub(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:EventHubAuthorizationRule":
                return new EventHubAuthorizationRule(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:NamespaceAuthorizationRule":
                return new NamespaceAuthorizationRule(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:NamespaceIpFilterRule":
                return new NamespaceIpFilterRule(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:NamespaceNetworkRuleSet":
                return new NamespaceNetworkRuleSet(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:NamespaceVirtualNetworkRule":
                return new NamespaceVirtualNetworkRule(name, <any>undefined, { urn })
            case "azure-nextgen:eventhub:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "eventhub", _module)
