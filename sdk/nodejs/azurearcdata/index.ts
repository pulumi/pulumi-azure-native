// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./activeDirectoryConnector";
export * from "./dataController";
export * from "./getActiveDirectoryConnector";
export * from "./getDataController";
export * from "./getPostgresInstance";
export * from "./getSqlManagedInstance";
export * from "./getSqlServerInstance";
export * from "./postgresInstance";
export * from "./sqlManagedInstance";
export * from "./sqlServerInstance";

// Export enums:
export * from "../types/enums/azurearcdata";

// Export sub-modules:
import * as v20210601preview from "./v20210601preview";
import * as v20210701preview from "./v20210701preview";
import * as v20210801 from "./v20210801";
import * as v20211101 from "./v20211101";
import * as v20220301preview from "./v20220301preview";

export {
    v20210601preview,
    v20210701preview,
    v20210801,
    v20211101,
    v20220301preview,
};

// Import resources to register:
import { ActiveDirectoryConnector } from "./activeDirectoryConnector";
import { DataController } from "./dataController";
import { PostgresInstance } from "./postgresInstance";
import { SqlManagedInstance } from "./sqlManagedInstance";
import { SqlServerInstance } from "./sqlServerInstance";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:azurearcdata:ActiveDirectoryConnector":
                return new ActiveDirectoryConnector(name, <any>undefined, { urn })
            case "azure-native:azurearcdata:DataController":
                return new DataController(name, <any>undefined, { urn })
            case "azure-native:azurearcdata:PostgresInstance":
                return new PostgresInstance(name, <any>undefined, { urn })
            case "azure-native:azurearcdata:SqlManagedInstance":
                return new SqlManagedInstance(name, <any>undefined, { urn })
            case "azure-native:azurearcdata:SqlServerInstance":
                return new SqlServerInstance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "azurearcdata", _module)
