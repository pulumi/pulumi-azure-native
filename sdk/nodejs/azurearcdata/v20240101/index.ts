// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetSqlServerAvailabilityGroupArgs, GetSqlServerAvailabilityGroupResult, GetSqlServerAvailabilityGroupOutputArgs } from "./getSqlServerAvailabilityGroup";
export const getSqlServerAvailabilityGroup: typeof import("./getSqlServerAvailabilityGroup").getSqlServerAvailabilityGroup = null as any;
export const getSqlServerAvailabilityGroupOutput: typeof import("./getSqlServerAvailabilityGroup").getSqlServerAvailabilityGroupOutput = null as any;
utilities.lazyLoad(exports, ["getSqlServerAvailabilityGroup","getSqlServerAvailabilityGroupOutput"], () => require("./getSqlServerAvailabilityGroup"));

export { GetSqlServerAvailabilityGroupDetailViewArgs, GetSqlServerAvailabilityGroupDetailViewResult, GetSqlServerAvailabilityGroupDetailViewOutputArgs } from "./getSqlServerAvailabilityGroupDetailView";
export const getSqlServerAvailabilityGroupDetailView: typeof import("./getSqlServerAvailabilityGroupDetailView").getSqlServerAvailabilityGroupDetailView = null as any;
export const getSqlServerAvailabilityGroupDetailViewOutput: typeof import("./getSqlServerAvailabilityGroupDetailView").getSqlServerAvailabilityGroupDetailViewOutput = null as any;
utilities.lazyLoad(exports, ["getSqlServerAvailabilityGroupDetailView","getSqlServerAvailabilityGroupDetailViewOutput"], () => require("./getSqlServerAvailabilityGroupDetailView"));

export { GetSqlServerInstanceTelemetryArgs, GetSqlServerInstanceTelemetryResult, GetSqlServerInstanceTelemetryOutputArgs } from "./getSqlServerInstanceTelemetry";
export const getSqlServerInstanceTelemetry: typeof import("./getSqlServerInstanceTelemetry").getSqlServerInstanceTelemetry = null as any;
export const getSqlServerInstanceTelemetryOutput: typeof import("./getSqlServerInstanceTelemetry").getSqlServerInstanceTelemetryOutput = null as any;
utilities.lazyLoad(exports, ["getSqlServerInstanceTelemetry","getSqlServerInstanceTelemetryOutput"], () => require("./getSqlServerInstanceTelemetry"));

export { SqlServerAvailabilityGroupArgs } from "./sqlServerAvailabilityGroup";
export type SqlServerAvailabilityGroup = import("./sqlServerAvailabilityGroup").SqlServerAvailabilityGroup;
export const SqlServerAvailabilityGroup: typeof import("./sqlServerAvailabilityGroup").SqlServerAvailabilityGroup = null as any;
utilities.lazyLoad(exports, ["SqlServerAvailabilityGroup"], () => require("./sqlServerAvailabilityGroup"));


// Export enums:
export * from "../../types/enums/azurearcdata/v20240101";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:azurearcdata/v20240101:SqlServerAvailabilityGroup":
                return new SqlServerAvailabilityGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "azurearcdata/v20240101", _module)
