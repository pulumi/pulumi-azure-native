// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Returns the Workspace resource associated with the given name.
 * Azure REST API version: 2022-01-10-preview.
 */
export function getWorkspace(args: GetWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:quantum:getWorkspace", {
        "resourceGroupName": args.resourceGroupName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetWorkspaceArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the quantum workspace resource.
     */
    workspaceName: string;
}

/**
 * The resource proxy definition object for quantum workspace.
 */
export interface GetWorkspaceResult {
    /**
     * The URI of the workspace endpoint.
     */
    readonly endpointUri: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Managed Identity information.
     */
    readonly identity?: outputs.quantum.QuantumWorkspaceResponseIdentity;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * List of Providers selected for this Workspace
     */
    readonly providers?: outputs.quantum.ProviderResponse[];
    /**
     * Provisioning status field
     */
    readonly provisioningState: string;
    /**
     * ARM Resource Id of the storage account associated with this workspace.
     */
    readonly storageAccount?: string;
    /**
     * System metadata
     */
    readonly systemData: outputs.quantum.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Whether the current workspace is ready to accept Jobs.
     */
    readonly usable: string;
}
/**
 * Returns the Workspace resource associated with the given name.
 * Azure REST API version: 2022-01-10-preview.
 */
export function getWorkspaceOutput(args: GetWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getWorkspace(a, opts))
}

export interface GetWorkspaceOutputArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the quantum workspace resource.
     */
    workspaceName: pulumi.Input<string>;
}
