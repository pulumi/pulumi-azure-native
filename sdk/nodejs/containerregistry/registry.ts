// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * An object that represents a container registry.
 *
 * Uses Azure REST API version 2023-01-01-preview. In version 2.x of the Azure Native provider, it used API version 2022-12-01.
 *
 * Other available API versions: 2019-12-01-preview, 2020-11-01-preview, 2021-06-01-preview, 2021-08-01-preview, 2021-09-01, 2021-12-01-preview, 2022-02-01-preview, 2022-12-01, 2023-06-01-preview, 2023-07-01, 2023-08-01-preview, 2023-11-01-preview, 2024-11-01-preview, 2025-03-01-preview, 2025-04-01, 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Registry extends pulumi.CustomResource {
    /**
     * Get an existing Registry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Registry {
        return new Registry(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:containerregistry:Registry';

    /**
     * Returns true if the given object is an instance of Registry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Registry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Registry.__pulumiType;
    }

    /**
     * The value that indicates whether the admin user is enabled.
     */
    declare public readonly adminUserEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Enables registry-wide pull from unauthenticated clients.
     */
    declare public readonly anonymousPullEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The creation date of the container registry in ISO8601 format.
     */
    declare public /*out*/ readonly creationDate: pulumi.Output<string>;
    /**
     * Enable a single data endpoint per region for serving data.
     */
    declare public readonly dataEndpointEnabled: pulumi.Output<boolean | undefined>;
    /**
     * List of host names that will serve data when dataEndpointEnabled is true.
     */
    declare public /*out*/ readonly dataEndpointHostNames: pulumi.Output<string[]>;
    /**
     * The encryption settings of container registry.
     */
    declare public readonly encryption: pulumi.Output<outputs.containerregistry.EncryptionPropertyResponse | undefined>;
    /**
     * The identity of the container registry.
     */
    declare public readonly identity: pulumi.Output<outputs.containerregistry.IdentityPropertiesResponse | undefined>;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The URL that can be used to log into the container registry.
     */
    declare public /*out*/ readonly loginServer: pulumi.Output<string>;
    /**
     * The name of the resource.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Whether to allow trusted Azure services to access a network restricted registry.
     */
    declare public readonly networkRuleBypassOptions: pulumi.Output<string | undefined>;
    /**
     * The network rule set for a container registry.
     */
    declare public readonly networkRuleSet: pulumi.Output<outputs.containerregistry.NetworkRuleSetResponse | undefined>;
    /**
     * The policies for a container registry.
     */
    declare public readonly policies: pulumi.Output<outputs.containerregistry.PoliciesResponse | undefined>;
    /**
     * List of private endpoint connections for a container registry.
     */
    declare public /*out*/ readonly privateEndpointConnections: pulumi.Output<outputs.containerregistry.PrivateEndpointConnectionResponse[]>;
    /**
     * The provisioning state of the container registry at the time the operation was called.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * Whether or not public network access is allowed for the container registry.
     */
    declare public readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * The SKU of the container registry.
     */
    declare public readonly sku: pulumi.Output<outputs.containerregistry.SkuResponse>;
    /**
     * The status of the container registry at the time the operation was called.
     */
    declare public /*out*/ readonly status: pulumi.Output<outputs.containerregistry.StatusResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.containerregistry.SystemDataResponse>;
    /**
     * The tags of the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * Whether or not zone redundancy is enabled for this container registry
     */
    declare public readonly zoneRedundancy: pulumi.Output<string | undefined>;

    /**
     * Create a Registry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistryArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.sku === undefined && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["adminUserEnabled"] = (args?.adminUserEnabled) ?? false;
            resourceInputs["anonymousPullEnabled"] = (args?.anonymousPullEnabled) ?? false;
            resourceInputs["dataEndpointEnabled"] = args?.dataEndpointEnabled;
            resourceInputs["encryption"] = args?.encryption;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["location"] = args?.location;
            resourceInputs["networkRuleBypassOptions"] = (args?.networkRuleBypassOptions) ?? "AzureServices";
            resourceInputs["networkRuleSet"] = args ? (args.networkRuleSet ? pulumi.output(args.networkRuleSet).apply(inputs.containerregistry.networkRuleSetArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["policies"] = args ? (args.policies ? pulumi.output(args.policies).apply(inputs.containerregistry.policiesArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["publicNetworkAccess"] = (args?.publicNetworkAccess) ?? "Enabled";
            resourceInputs["registryName"] = args?.registryName;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["sku"] = args?.sku;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["zoneRedundancy"] = (args?.zoneRedundancy) ?? "Disabled";
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["dataEndpointHostNames"] = undefined /*out*/;
            resourceInputs["loginServer"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["privateEndpointConnections"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["adminUserEnabled"] = undefined /*out*/;
            resourceInputs["anonymousPullEnabled"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["dataEndpointEnabled"] = undefined /*out*/;
            resourceInputs["dataEndpointHostNames"] = undefined /*out*/;
            resourceInputs["encryption"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["loginServer"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkRuleBypassOptions"] = undefined /*out*/;
            resourceInputs["networkRuleSet"] = undefined /*out*/;
            resourceInputs["policies"] = undefined /*out*/;
            resourceInputs["privateEndpointConnections"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["publicNetworkAccess"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["zoneRedundancy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:containerregistry/v20170301:Registry" }, { type: "azure-native:containerregistry/v20171001:Registry" }, { type: "azure-native:containerregistry/v20190501:Registry" }, { type: "azure-native:containerregistry/v20191201preview:Registry" }, { type: "azure-native:containerregistry/v20201101preview:Registry" }, { type: "azure-native:containerregistry/v20210601preview:Registry" }, { type: "azure-native:containerregistry/v20210801preview:Registry" }, { type: "azure-native:containerregistry/v20210901:Registry" }, { type: "azure-native:containerregistry/v20211201preview:Registry" }, { type: "azure-native:containerregistry/v20220201preview:Registry" }, { type: "azure-native:containerregistry/v20221201:Registry" }, { type: "azure-native:containerregistry/v20230101preview:Registry" }, { type: "azure-native:containerregistry/v20230601preview:Registry" }, { type: "azure-native:containerregistry/v20230701:Registry" }, { type: "azure-native:containerregistry/v20230801preview:Registry" }, { type: "azure-native:containerregistry/v20231101preview:Registry" }, { type: "azure-native:containerregistry/v20241101preview:Registry" }, { type: "azure-native:containerregistry/v20250301preview:Registry" }, { type: "azure-native:containerregistry/v20250401:Registry" }, { type: "azure-native:containerregistry/v20250501preview:Registry" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Registry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Registry resource.
 */
export interface RegistryArgs {
    /**
     * The value that indicates whether the admin user is enabled.
     */
    adminUserEnabled?: pulumi.Input<boolean>;
    /**
     * Enables registry-wide pull from unauthenticated clients.
     */
    anonymousPullEnabled?: pulumi.Input<boolean>;
    /**
     * Enable a single data endpoint per region for serving data.
     */
    dataEndpointEnabled?: pulumi.Input<boolean>;
    /**
     * The encryption settings of container registry.
     */
    encryption?: pulumi.Input<inputs.containerregistry.EncryptionPropertyArgs>;
    /**
     * The identity of the container registry.
     */
    identity?: pulumi.Input<inputs.containerregistry.IdentityPropertiesArgs>;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    location?: pulumi.Input<string>;
    /**
     * Whether to allow trusted Azure services to access a network restricted registry.
     */
    networkRuleBypassOptions?: pulumi.Input<string | enums.containerregistry.NetworkRuleBypassOptions>;
    /**
     * The network rule set for a container registry.
     */
    networkRuleSet?: pulumi.Input<inputs.containerregistry.NetworkRuleSetArgs>;
    /**
     * The policies for a container registry.
     */
    policies?: pulumi.Input<inputs.containerregistry.PoliciesArgs>;
    /**
     * Whether or not public network access is allowed for the container registry.
     */
    publicNetworkAccess?: pulumi.Input<string | enums.containerregistry.PublicNetworkAccess>;
    /**
     * The name of the container registry.
     */
    registryName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the container registry.
     */
    sku: pulumi.Input<inputs.containerregistry.SkuArgs>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether or not zone redundancy is enabled for this container registry
     */
    zoneRedundancy?: pulumi.Input<string | enums.containerregistry.ZoneRedundancy>;
}
