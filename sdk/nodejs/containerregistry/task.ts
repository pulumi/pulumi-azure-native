// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The task that has the ARM resource and task properties.
 * The task will have all information to schedule a run against it.
 *
 * Uses Azure REST API version 2019-06-01-preview. In version 2.x of the Azure Native provider, it used API version 2019-06-01-preview.
 *
 * Other available API versions: 2025-03-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Task extends pulumi.CustomResource {
    /**
     * Get an existing Task resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Task {
        return new Task(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:containerregistry:Task';

    /**
     * Returns true if the given object is an instance of Task.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Task {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Task.__pulumiType;
    }

    /**
     * The machine configuration of the run agent.
     */
    declare public readonly agentConfiguration: pulumi.Output<outputs.containerregistry.AgentPropertiesResponse | undefined>;
    /**
     * The dedicated agent pool for the task.
     */
    declare public readonly agentPoolName: pulumi.Output<string | undefined>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The creation date of task.
     */
    declare public /*out*/ readonly creationDate: pulumi.Output<string>;
    /**
     * The properties that describes a set of credentials that will be used when this run is invoked.
     */
    declare public readonly credentials: pulumi.Output<outputs.containerregistry.CredentialsResponse | undefined>;
    /**
     * Identity for the resource.
     */
    declare public readonly identity: pulumi.Output<outputs.containerregistry.IdentityPropertiesResponse | undefined>;
    /**
     * The value of this property indicates whether the task resource is system task or not.
     */
    declare public readonly isSystemTask: pulumi.Output<boolean | undefined>;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The template that describes the repository and tag information for run log artifact.
     */
    declare public readonly logTemplate: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The platform properties against which the run has to happen.
     */
    declare public readonly platform: pulumi.Output<outputs.containerregistry.PlatformPropertiesResponse | undefined>;
    /**
     * The provisioning state of the task.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * The current status of task.
     */
    declare public readonly status: pulumi.Output<string | undefined>;
    /**
     * The properties of a task step.
     */
    declare public readonly step: pulumi.Output<outputs.containerregistry.DockerBuildStepResponse | outputs.containerregistry.EncodedTaskStepResponse | outputs.containerregistry.FileTaskStepResponse | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.containerregistry.SystemDataResponse>;
    /**
     * The tags of the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Run timeout in seconds.
     */
    declare public readonly timeout: pulumi.Output<number | undefined>;
    /**
     * The properties that describe all triggers for the task.
     */
    declare public readonly trigger: pulumi.Output<outputs.containerregistry.TriggerPropertiesResponse | undefined>;
    /**
     * The type of the resource.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a Task resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TaskArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.registryName === undefined && !opts.urn) {
                throw new Error("Missing required property 'registryName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["agentConfiguration"] = args?.agentConfiguration;
            resourceInputs["agentPoolName"] = args?.agentPoolName;
            resourceInputs["credentials"] = args?.credentials;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["isSystemTask"] = (args?.isSystemTask) ?? false;
            resourceInputs["location"] = args?.location;
            resourceInputs["logTemplate"] = args?.logTemplate;
            resourceInputs["platform"] = args?.platform;
            resourceInputs["registryName"] = args?.registryName;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["status"] = args?.status;
            resourceInputs["step"] = args?.step;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["taskName"] = args?.taskName;
            resourceInputs["timeout"] = (args?.timeout) ?? 3600;
            resourceInputs["trigger"] = args ? (args.trigger ? pulumi.output(args.trigger).apply(inputs.containerregistry.triggerPropertiesArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["agentConfiguration"] = undefined /*out*/;
            resourceInputs["agentPoolName"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["credentials"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["isSystemTask"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["logTemplate"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["platform"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["step"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["timeout"] = undefined /*out*/;
            resourceInputs["trigger"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:containerregistry/v20180901:Task" }, { type: "azure-native:containerregistry/v20190401:Task" }, { type: "azure-native:containerregistry/v20190601preview:Task" }, { type: "azure-native:containerregistry/v20250301preview:Task" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Task.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Task resource.
 */
export interface TaskArgs {
    /**
     * The machine configuration of the run agent.
     */
    agentConfiguration?: pulumi.Input<inputs.containerregistry.AgentPropertiesArgs>;
    /**
     * The dedicated agent pool for the task.
     */
    agentPoolName?: pulumi.Input<string>;
    /**
     * The properties that describes a set of credentials that will be used when this run is invoked.
     */
    credentials?: pulumi.Input<inputs.containerregistry.CredentialsArgs>;
    /**
     * Identity for the resource.
     */
    identity?: pulumi.Input<inputs.containerregistry.IdentityPropertiesArgs>;
    /**
     * The value of this property indicates whether the task resource is system task or not.
     */
    isSystemTask?: pulumi.Input<boolean>;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    location?: pulumi.Input<string>;
    /**
     * The template that describes the repository and tag information for run log artifact.
     */
    logTemplate?: pulumi.Input<string>;
    /**
     * The platform properties against which the run has to happen.
     */
    platform?: pulumi.Input<inputs.containerregistry.PlatformPropertiesArgs>;
    /**
     * The name of the container registry.
     */
    registryName: pulumi.Input<string>;
    /**
     * The name of the resource group to which the container registry belongs.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The current status of task.
     */
    status?: pulumi.Input<string | enums.containerregistry.TaskStatus>;
    /**
     * The properties of a task step.
     */
    step?: pulumi.Input<inputs.containerregistry.DockerBuildStepArgs | inputs.containerregistry.EncodedTaskStepArgs | inputs.containerregistry.FileTaskStepArgs>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the container registry task.
     */
    taskName?: pulumi.Input<string>;
    /**
     * Run timeout in seconds.
     */
    timeout?: pulumi.Input<number>;
    /**
     * The properties that describe all triggers for the task.
     */
    trigger?: pulumi.Input<inputs.containerregistry.TriggerPropertiesArgs>;
}
