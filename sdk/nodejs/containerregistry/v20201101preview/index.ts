// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ConnectedRegistryArgs } from "./connectedRegistry";
export type ConnectedRegistry = import("./connectedRegistry").ConnectedRegistry;
export const ConnectedRegistry: typeof import("./connectedRegistry").ConnectedRegistry = null as any;
utilities.lazyLoad(exports, ["ConnectedRegistry"], () => require("./connectedRegistry"));

export { ExportPipelineArgs } from "./exportPipeline";
export type ExportPipeline = import("./exportPipeline").ExportPipeline;
export const ExportPipeline: typeof import("./exportPipeline").ExportPipeline = null as any;
utilities.lazyLoad(exports, ["ExportPipeline"], () => require("./exportPipeline"));

export { GetConnectedRegistryArgs, GetConnectedRegistryResult, GetConnectedRegistryOutputArgs } from "./getConnectedRegistry";
export const getConnectedRegistry: typeof import("./getConnectedRegistry").getConnectedRegistry = null as any;
export const getConnectedRegistryOutput: typeof import("./getConnectedRegistry").getConnectedRegistryOutput = null as any;
utilities.lazyLoad(exports, ["getConnectedRegistry","getConnectedRegistryOutput"], () => require("./getConnectedRegistry"));

export { GetExportPipelineArgs, GetExportPipelineResult, GetExportPipelineOutputArgs } from "./getExportPipeline";
export const getExportPipeline: typeof import("./getExportPipeline").getExportPipeline = null as any;
export const getExportPipelineOutput: typeof import("./getExportPipeline").getExportPipelineOutput = null as any;
utilities.lazyLoad(exports, ["getExportPipeline","getExportPipelineOutput"], () => require("./getExportPipeline"));

export { GetImportPipelineArgs, GetImportPipelineResult, GetImportPipelineOutputArgs } from "./getImportPipeline";
export const getImportPipeline: typeof import("./getImportPipeline").getImportPipeline = null as any;
export const getImportPipelineOutput: typeof import("./getImportPipeline").getImportPipelineOutput = null as any;
utilities.lazyLoad(exports, ["getImportPipeline","getImportPipelineOutput"], () => require("./getImportPipeline"));

export { GetPipelineRunArgs, GetPipelineRunResult, GetPipelineRunOutputArgs } from "./getPipelineRun";
export const getPipelineRun: typeof import("./getPipelineRun").getPipelineRun = null as any;
export const getPipelineRunOutput: typeof import("./getPipelineRun").getPipelineRunOutput = null as any;
utilities.lazyLoad(exports, ["getPipelineRun","getPipelineRunOutput"], () => require("./getPipelineRun"));

export { GetPrivateEndpointConnectionArgs, GetPrivateEndpointConnectionResult, GetPrivateEndpointConnectionOutputArgs } from "./getPrivateEndpointConnection";
export const getPrivateEndpointConnection: typeof import("./getPrivateEndpointConnection").getPrivateEndpointConnection = null as any;
export const getPrivateEndpointConnectionOutput: typeof import("./getPrivateEndpointConnection").getPrivateEndpointConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateEndpointConnection","getPrivateEndpointConnectionOutput"], () => require("./getPrivateEndpointConnection"));

export { GetScopeMapArgs, GetScopeMapResult, GetScopeMapOutputArgs } from "./getScopeMap";
export const getScopeMap: typeof import("./getScopeMap").getScopeMap = null as any;
export const getScopeMapOutput: typeof import("./getScopeMap").getScopeMapOutput = null as any;
utilities.lazyLoad(exports, ["getScopeMap","getScopeMapOutput"], () => require("./getScopeMap"));

export { GetTokenArgs, GetTokenResult, GetTokenOutputArgs } from "./getToken";
export const getToken: typeof import("./getToken").getToken = null as any;
export const getTokenOutput: typeof import("./getToken").getTokenOutput = null as any;
utilities.lazyLoad(exports, ["getToken","getTokenOutput"], () => require("./getToken"));

export { ImportPipelineArgs } from "./importPipeline";
export type ImportPipeline = import("./importPipeline").ImportPipeline;
export const ImportPipeline: typeof import("./importPipeline").ImportPipeline = null as any;
utilities.lazyLoad(exports, ["ImportPipeline"], () => require("./importPipeline"));

export { PipelineRunArgs } from "./pipelineRun";
export type PipelineRun = import("./pipelineRun").PipelineRun;
export const PipelineRun: typeof import("./pipelineRun").PipelineRun = null as any;
utilities.lazyLoad(exports, ["PipelineRun"], () => require("./pipelineRun"));

export { PrivateEndpointConnectionArgs } from "./privateEndpointConnection";
export type PrivateEndpointConnection = import("./privateEndpointConnection").PrivateEndpointConnection;
export const PrivateEndpointConnection: typeof import("./privateEndpointConnection").PrivateEndpointConnection = null as any;
utilities.lazyLoad(exports, ["PrivateEndpointConnection"], () => require("./privateEndpointConnection"));

export { ScopeMapArgs } from "./scopeMap";
export type ScopeMap = import("./scopeMap").ScopeMap;
export const ScopeMap: typeof import("./scopeMap").ScopeMap = null as any;
utilities.lazyLoad(exports, ["ScopeMap"], () => require("./scopeMap"));

export { TokenArgs } from "./token";
export type Token = import("./token").Token;
export const Token: typeof import("./token").Token = null as any;
utilities.lazyLoad(exports, ["Token"], () => require("./token"));


// Export enums:
export * from "../../types/enums/containerregistry/v20201101preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:containerregistry/v20201101preview:ConnectedRegistry":
                return new ConnectedRegistry(name, <any>undefined, { urn })
            case "azure-native:containerregistry/v20201101preview:ExportPipeline":
                return new ExportPipeline(name, <any>undefined, { urn })
            case "azure-native:containerregistry/v20201101preview:ImportPipeline":
                return new ImportPipeline(name, <any>undefined, { urn })
            case "azure-native:containerregistry/v20201101preview:PipelineRun":
                return new PipelineRun(name, <any>undefined, { urn })
            case "azure-native:containerregistry/v20201101preview:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:containerregistry/v20201101preview:ScopeMap":
                return new ScopeMap(name, <any>undefined, { urn })
            case "azure-native:containerregistry/v20201101preview:Token":
                return new Token(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "containerregistry/v20201101preview", _module)
