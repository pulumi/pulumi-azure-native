// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets all linked storage account of a specific data source type associated with the specified workspace.
 */
export function getLinkedStorageAccount(args: GetLinkedStorageAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetLinkedStorageAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:operationalinsights/v20190801preview:getLinkedStorageAccount", {
        "dataSourceType": args.dataSourceType,
        "resourceGroupName": args.resourceGroupName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetLinkedStorageAccountArgs {
    /**
     * Linked storage accounts type.
     */
    dataSourceType: string;
    /**
     * The name of the resource group to get. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Name of the Log Analytics Workspace that will contain the resource.
     */
    workspaceName: string;
}

/**
 * Linked storage accounts top level resource container.
 */
export interface GetLinkedStorageAccountResult {
    /**
     * Linked storage accounts type.
     */
    readonly dataSourceType: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Linked storage accounts resources ids.
     */
    readonly storageAccountIds?: string[];
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Gets all linked storage account of a specific data source type associated with the specified workspace.
 */
export function getLinkedStorageAccountOutput(args: GetLinkedStorageAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLinkedStorageAccountResult> {
    return pulumi.output(args).apply((a: any) => getLinkedStorageAccount(a, opts))
}

export interface GetLinkedStorageAccountOutputArgs {
    /**
     * Linked storage accounts type.
     */
    dataSourceType: pulumi.Input<string>;
    /**
     * The name of the resource group to get. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the Log Analytics Workspace that will contain the resource.
     */
    workspaceName: pulumi.Input<string>;
}
