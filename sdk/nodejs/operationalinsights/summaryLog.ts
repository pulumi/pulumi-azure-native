// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Workspace data summary rules definition.
 *
 * Uses Azure REST API version 2025-07-01.
 */
export class SummaryLog extends pulumi.CustomResource {
    /**
     * Get an existing SummaryLog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SummaryLog {
        return new SummaryLog(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:operationalinsights:SummaryLog';

    /**
     * Returns true if the given object is an instance of SummaryLog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SummaryLog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SummaryLog.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * The description of the Summary rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the Summary rule.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Indicates if Summary rule is active. If not, Summary rule execution stops.
     */
    public /*out*/ readonly isActive!: pulumi.Output<boolean>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Summary rule is in provisioning state. If set to 'updating' or 'deleting', indicates a resource lock due to an ongoing operation, preventing any update to the Summary rule until the operation is complete.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Rule definition parameters.
     */
    public readonly ruleDefinition!: pulumi.Output<outputs.operationalinsights.RuleDefinitionResponse | undefined>;
    /**
     * SummaryRules rule type: User.
     */
    public readonly ruleType!: pulumi.Output<string | undefined>;
    /**
     * Indicates the reason for rule deactivation.
     */
    public /*out*/ readonly statusCode!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.operationalinsights.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a SummaryLog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SummaryLogArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["ruleDefinition"] = args ? args.ruleDefinition : undefined;
            resourceInputs["ruleType"] = args ? args.ruleType : undefined;
            resourceInputs["summaryLogsName"] = args ? args.summaryLogsName : undefined;
            resourceInputs["workspaceName"] = args ? args.workspaceName : undefined;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["isActive"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["statusCode"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["isActive"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["ruleDefinition"] = undefined /*out*/;
            resourceInputs["ruleType"] = undefined /*out*/;
            resourceInputs["statusCode"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:operationalinsights/v20250701:SummaryLog" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(SummaryLog.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SummaryLog resource.
 */
export interface SummaryLogArgs {
    /**
     * The description of the Summary rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Summary rule.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Rule definition parameters.
     */
    ruleDefinition?: pulumi.Input<inputs.operationalinsights.RuleDefinitionArgs>;
    /**
     * SummaryRules rule type: User.
     */
    ruleType?: pulumi.Input<string | enums.operationalinsights.RuleTypeEnum>;
    /**
     * The name of the summary logs. Must not contain '/'.
     */
    summaryLogsName?: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
