// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./cluster";
export * from "./dataExport";
export * from "./dataSource";
export * from "./getCluster";
export * from "./getDataExport";
export * from "./getDataSource";
export * from "./getLinkedService";
export * from "./getLinkedStorageAccount";
export * from "./getMachineGroup";
export * from "./getSavedSearch";
export * from "./getStorageInsightConfig";
export * from "./getWorkspace";
export * from "./linkedService";
export * from "./linkedStorageAccount";
export * from "./listWorkspaceKeys";
export * from "./machineGroup";
export * from "./savedSearch";
export * from "./storageInsightConfig";
export * from "./workspace";

// Export enums:
export * from "../types/enums/operationalinsights";

// Export sub-modules:
import * as latest from "./latest";
import * as v20150320 from "./v20150320";
import * as v20151101preview from "./v20151101preview";
import * as v20190801preview from "./v20190801preview";
import * as v20190901preview from "./v20190901preview";
import * as v20200301preview from "./v20200301preview";
import * as v20200801 from "./v20200801";
import * as v20201001 from "./v20201001";

export {
    latest,
    v20150320,
    v20151101preview,
    v20190801preview,
    v20190901preview,
    v20200301preview,
    v20200801,
    v20201001,
};

// Import resources to register:
import { Cluster } from "./cluster";
import { DataExport } from "./dataExport";
import { DataSource } from "./dataSource";
import { LinkedService } from "./linkedService";
import { LinkedStorageAccount } from "./linkedStorageAccount";
import { MachineGroup } from "./machineGroup";
import { SavedSearch } from "./savedSearch";
import { StorageInsightConfig } from "./storageInsightConfig";
import { Workspace } from "./workspace";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:operationalinsights:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "azure-nextgen:operationalinsights:DataExport":
                return new DataExport(name, <any>undefined, { urn })
            case "azure-nextgen:operationalinsights:DataSource":
                return new DataSource(name, <any>undefined, { urn })
            case "azure-nextgen:operationalinsights:LinkedService":
                return new LinkedService(name, <any>undefined, { urn })
            case "azure-nextgen:operationalinsights:LinkedStorageAccount":
                return new LinkedStorageAccount(name, <any>undefined, { urn })
            case "azure-nextgen:operationalinsights:MachineGroup":
                return new MachineGroup(name, <any>undefined, { urn })
            case "azure-nextgen:operationalinsights:SavedSearch":
                return new SavedSearch(name, <any>undefined, { urn })
            case "azure-nextgen:operationalinsights:StorageInsightConfig":
                return new StorageInsightConfig(name, <any>undefined, { urn })
            case "azure-nextgen:operationalinsights:Workspace":
                return new Workspace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "operationalinsights", _module)
