// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Gets a storage insight instance.
 * Azure REST API version: 2020-08-01.
 */
export function getStorageInsightConfig(args: GetStorageInsightConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageInsightConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:operationalinsights:getStorageInsightConfig", {
        "resourceGroupName": args.resourceGroupName,
        "storageInsightName": args.storageInsightName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetStorageInsightConfigArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Name of the storageInsightsConfigs resource
     */
    storageInsightName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}

/**
 * The top level storage insight resource container.
 */
export interface GetStorageInsightConfigResult {
    /**
     * The names of the blob containers that the workspace should read
     */
    readonly containers?: string[];
    /**
     * The ETag of the storage insight.
     */
    readonly eTag?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The status of the storage insight
     */
    readonly status: outputs.operationalinsights.StorageInsightStatusResponse;
    /**
     * The storage account connection details
     */
    readonly storageAccount: outputs.operationalinsights.StorageAccountResponse;
    /**
     * The names of the Azure tables that the workspace should read
     */
    readonly tables?: string[];
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets a storage insight instance.
 * Azure REST API version: 2020-08-01.
 */
export function getStorageInsightConfigOutput(args: GetStorageInsightConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageInsightConfigResult> {
    return pulumi.output(args).apply((a: any) => getStorageInsightConfig(a, opts))
}

export interface GetStorageInsightConfigOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the storageInsightsConfigs resource
     */
    storageInsightName: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
