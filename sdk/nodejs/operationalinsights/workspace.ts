// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The top level Workspace resource container.
 * API Version: 2020-10-01.
 */
export class Workspace extends pulumi.CustomResource {
    /**
     * Get an existing Workspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Workspace {
        return new Workspace(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:operationalinsights:Workspace';

    /**
     * Returns true if the given object is an instance of Workspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workspace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workspace.__pulumiType;
    }

    /**
     * Workspace creation date.
     */
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    /**
     * This is a read-only property. Represents the ID associated with the workspace.
     */
    public /*out*/ readonly customerId!: pulumi.Output<string>;
    /**
     * The ETag of the workspace.
     */
    public readonly eTag!: pulumi.Output<string | undefined>;
    /**
     * Workspace features.
     */
    public readonly features!: pulumi.Output<outputs.operationalinsights.WorkspaceFeaturesResponse | undefined>;
    /**
     * Indicates whether customer managed storage is mandatory for query management.
     */
    public readonly forceCmkForQuery!: pulumi.Output<boolean | undefined>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Workspace modification date.
     */
    public /*out*/ readonly modifiedDate!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * List of linked private link scope resources.
     */
    public /*out*/ readonly privateLinkScopedResources!: pulumi.Output<outputs.operationalinsights.PrivateLinkScopedResourceResponse[]>;
    /**
     * The provisioning state of the workspace.
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * The network access type for accessing Log Analytics ingestion.
     */
    public readonly publicNetworkAccessForIngestion!: pulumi.Output<string | undefined>;
    /**
     * The network access type for accessing Log Analytics query.
     */
    public readonly publicNetworkAccessForQuery!: pulumi.Output<string | undefined>;
    /**
     * The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.
     */
    public readonly retentionInDays!: pulumi.Output<number | undefined>;
    /**
     * The SKU of the workspace.
     */
    public readonly sku!: pulumi.Output<outputs.operationalinsights.WorkspaceSkuResponse | undefined>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The daily volume cap for ingestion.
     */
    public readonly workspaceCapping!: pulumi.Output<outputs.operationalinsights.WorkspaceCappingResponse | undefined>;

    /**
     * Create a Workspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["eTag"] = args ? args.eTag : undefined;
            inputs["features"] = args ? args.features : undefined;
            inputs["forceCmkForQuery"] = args ? args.forceCmkForQuery : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["provisioningState"] = args ? args.provisioningState : undefined;
            inputs["publicNetworkAccessForIngestion"] = args ? args.publicNetworkAccessForIngestion : undefined;
            inputs["publicNetworkAccessForQuery"] = args ? args.publicNetworkAccessForQuery : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["retentionInDays"] = args ? args.retentionInDays : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["workspaceCapping"] = args ? args.workspaceCapping : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["createdDate"] = undefined /*out*/;
            inputs["customerId"] = undefined /*out*/;
            inputs["modifiedDate"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["privateLinkScopedResources"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["createdDate"] = undefined /*out*/;
            inputs["customerId"] = undefined /*out*/;
            inputs["eTag"] = undefined /*out*/;
            inputs["features"] = undefined /*out*/;
            inputs["forceCmkForQuery"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["modifiedDate"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["privateLinkScopedResources"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["publicNetworkAccessForIngestion"] = undefined /*out*/;
            inputs["publicNetworkAccessForQuery"] = undefined /*out*/;
            inputs["retentionInDays"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["workspaceCapping"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:operationalinsights:Workspace" }, { type: "azure-native:operationalinsights/v20151101preview:Workspace" }, { type: "azure-nextgen:operationalinsights/v20151101preview:Workspace" }, { type: "azure-native:operationalinsights/v20200301preview:Workspace" }, { type: "azure-nextgen:operationalinsights/v20200301preview:Workspace" }, { type: "azure-native:operationalinsights/v20200801:Workspace" }, { type: "azure-nextgen:operationalinsights/v20200801:Workspace" }, { type: "azure-native:operationalinsights/v20201001:Workspace" }, { type: "azure-nextgen:operationalinsights/v20201001:Workspace" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Workspace.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Workspace resource.
 */
export interface WorkspaceArgs {
    /**
     * The ETag of the workspace.
     */
    eTag?: pulumi.Input<string>;
    /**
     * Workspace features.
     */
    features?: pulumi.Input<inputs.operationalinsights.WorkspaceFeaturesArgs>;
    /**
     * Indicates whether customer managed storage is mandatory for query management.
     */
    forceCmkForQuery?: pulumi.Input<boolean>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The provisioning state of the workspace.
     */
    provisioningState?: pulumi.Input<string | enums.operationalinsights.WorkspaceEntityStatus>;
    /**
     * The network access type for accessing Log Analytics ingestion.
     */
    publicNetworkAccessForIngestion?: pulumi.Input<string | enums.operationalinsights.PublicNetworkAccessType>;
    /**
     * The network access type for accessing Log Analytics query.
     */
    publicNetworkAccessForQuery?: pulumi.Input<string | enums.operationalinsights.PublicNetworkAccessType>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * The SKU of the workspace.
     */
    sku?: pulumi.Input<inputs.operationalinsights.WorkspaceSkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The daily volume cap for ingestion.
     */
    workspaceCapping?: pulumi.Input<inputs.operationalinsights.WorkspaceCappingArgs>;
    /**
     * The name of the workspace.
     */
    workspaceName?: pulumi.Input<string>;
}
