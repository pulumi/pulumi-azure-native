// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetSingleServerArgs, GetSingleServerResult, GetSingleServerOutputArgs } from "./getSingleServer";
export const getSingleServer: typeof import("./getSingleServer").getSingleServer = null as any;
export const getSingleServerOutput: typeof import("./getSingleServer").getSingleServerOutput = null as any;
utilities.lazyLoad(exports, ["getSingleServer","getSingleServerOutput"], () => require("./getSingleServer"));

export { SingleServerArgs } from "./singleServer";
export type SingleServer = import("./singleServer").SingleServer;
export const SingleServer: typeof import("./singleServer").SingleServer = null as any;
utilities.lazyLoad(exports, ["SingleServer"], () => require("./singleServer"));


// Export enums:
export * from "../../types/enums/dbformysql/v20171201";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:dbformysql/v20171201:SingleServer":
                return new SingleServer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "dbformysql/v20171201", _module)
