// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetIntegrationFabricArgs, GetIntegrationFabricResult, GetIntegrationFabricOutputArgs } from "./getIntegrationFabric";
export const getIntegrationFabric: typeof import("./getIntegrationFabric").getIntegrationFabric = null as any;
export const getIntegrationFabricOutput: typeof import("./getIntegrationFabric").getIntegrationFabricOutput = null as any;
utilities.lazyLoad(exports, ["getIntegrationFabric","getIntegrationFabricOutput"], () => require("./getIntegrationFabric"));

export { IntegrationFabricArgs } from "./integrationFabric";
export type IntegrationFabric = import("./integrationFabric").IntegrationFabric;
export const IntegrationFabric: typeof import("./integrationFabric").IntegrationFabric = null as any;
utilities.lazyLoad(exports, ["IntegrationFabric"], () => require("./integrationFabric"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:dashboard/v20231001preview:IntegrationFabric":
                return new IntegrationFabric(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "dashboard/v20231001preview", _module)
