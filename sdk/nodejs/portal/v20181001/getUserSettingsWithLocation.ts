// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get current user settings for current signed in user. This operation returns settings for the user's cloud shell preferences including preferred location, storage profile, shell type, font and size settings.
 */
export function getUserSettingsWithLocation(args: GetUserSettingsWithLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetUserSettingsWithLocationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:portal/v20181001:getUserSettingsWithLocation", {
        "location": args.location,
        "userSettingsName": args.userSettingsName,
    }, opts);
}

export interface GetUserSettingsWithLocationArgs {
    /**
     * The provider location
     */
    location: string;
    /**
     * The name of the user settings
     */
    userSettingsName: string;
}

/**
 * Response to get user settings
 */
export interface GetUserSettingsWithLocationResult {
    /**
     * The cloud shell user settings properties.
     */
    readonly properties: outputs.portal.v20181001.UserPropertiesResponse;
}
/**
 * Get current user settings for current signed in user. This operation returns settings for the user's cloud shell preferences including preferred location, storage profile, shell type, font and size settings.
 */
export function getUserSettingsWithLocationOutput(args: GetUserSettingsWithLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserSettingsWithLocationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:portal/v20181001:getUserSettingsWithLocation", {
        "location": args.location,
        "userSettingsName": args.userSettingsName,
    }, opts);
}

export interface GetUserSettingsWithLocationOutputArgs {
    /**
     * The provider location
     */
    location: pulumi.Input<string>;
    /**
     * The name of the user settings
     */
    userSettingsName: pulumi.Input<string>;
}
