// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetResourceGuardProxyArgs, GetResourceGuardProxyResult, GetResourceGuardProxyOutputArgs } from "./getResourceGuardProxy";
export const getResourceGuardProxy: typeof import("./getResourceGuardProxy").getResourceGuardProxy = null as any;
export const getResourceGuardProxyOutput: typeof import("./getResourceGuardProxy").getResourceGuardProxyOutput = null as any;
utilities.lazyLoad(exports, ["getResourceGuardProxy","getResourceGuardProxyOutput"], () => require("./getResourceGuardProxy"));

export { ResourceGuardProxyArgs } from "./resourceGuardProxy";
export type ResourceGuardProxy = import("./resourceGuardProxy").ResourceGuardProxy;
export const ResourceGuardProxy: typeof import("./resourceGuardProxy").ResourceGuardProxy = null as any;
utilities.lazyLoad(exports, ["ResourceGuardProxy"], () => require("./resourceGuardProxy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:recoveryservices/v20210201preview:ResourceGuardProxy":
                return new ResourceGuardProxy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "recoveryservices/v20210201preview", _module)
