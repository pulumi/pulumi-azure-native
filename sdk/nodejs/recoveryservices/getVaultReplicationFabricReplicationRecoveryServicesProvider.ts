// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getVaultReplicationFabricReplicationRecoveryServicesProvider(args: GetVaultReplicationFabricReplicationRecoveryServicesProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetVaultReplicationFabricReplicationRecoveryServicesProviderResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azurerm:recoveryservices:getVaultReplicationFabricReplicationRecoveryServicesProvider", {
        "fabricName": args.fabricName,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "resourceName": args.resourceName,
    }, opts);
}

export interface GetVaultReplicationFabricReplicationRecoveryServicesProviderArgs {
    /**
     * Fabric name.
     */
    readonly fabricName: string;
    /**
     * Recovery services provider name
     */
    readonly name: string;
    /**
     * The name of the resource group where the recovery services vault is present.
     */
    readonly resourceGroupName: string;
    /**
     * The name of the recovery services vault.
     */
    readonly resourceName: string;
}

/**
 * Provider details.
 */
export interface GetVaultReplicationFabricReplicationRecoveryServicesProviderResult {
    /**
     * Resource Location
     */
    readonly location?: string;
    /**
     * Resource Name
     */
    readonly name: string;
    /**
     * Provider properties.
     */
    readonly properties: outputs.recoveryservices.RecoveryServicesProviderPropertiesResponse;
    /**
     * Resource Type
     */
    readonly type: string;
}
