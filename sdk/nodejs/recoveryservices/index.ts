// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getPrivateEndpointConnection";
export * from "./getProtectedItem";
export * from "./getProtectionContainer";
export * from "./getProtectionIntent";
export * from "./getProtectionPolicy";
export * from "./getReplicationFabric";
export * from "./getReplicationMigrationItem";
export * from "./getReplicationNetworkMapping";
export * from "./getReplicationPolicy";
export * from "./getReplicationProtectedItem";
export * from "./getReplicationProtectionContainerMapping";
export * from "./getReplicationRecoveryPlan";
export * from "./getReplicationRecoveryServicesProvider";
export * from "./getReplicationStorageClassificationMapping";
export * from "./getReplicationvCenter";
export * from "./getResourceGuardProxy";
export * from "./getVault";
export * from "./privateEndpointConnection";
export * from "./protectedItem";
export * from "./protectionContainer";
export * from "./protectionIntent";
export * from "./protectionPolicy";
export * from "./replicationFabric";
export * from "./replicationMigrationItem";
export * from "./replicationNetworkMapping";
export * from "./replicationPolicy";
export * from "./replicationProtectedItem";
export * from "./replicationProtectionContainerMapping";
export * from "./replicationRecoveryPlan";
export * from "./replicationRecoveryServicesProvider";
export * from "./replicationStorageClassificationMapping";
export * from "./replicationvCenter";
export * from "./resourceGuardProxy";
export * from "./vault";

// Export enums:
export * from "../types/enums/recoveryservices";

// Export sub-modules:
import * as v20160601 from "./v20160601";
import * as v20160810 from "./v20160810";
import * as v20161201 from "./v20161201";
import * as v20170701 from "./v20170701";
import * as v20180110 from "./v20180110";
import * as v20180710 from "./v20180710";
import * as v20190513 from "./v20190513";
import * as v20190615 from "./v20190615";
import * as v20200202 from "./v20200202";
import * as v20201001 from "./v20201001";
import * as v20201201 from "./v20201201";
import * as v20210101 from "./v20210101";
import * as v20210201 from "./v20210201";
import * as v20210201preview from "./v20210201preview";
import * as v20210210 from "./v20210210";
import * as v20210301 from "./v20210301";

export {
    v20160601,
    v20160810,
    v20161201,
    v20170701,
    v20180110,
    v20180710,
    v20190513,
    v20190615,
    v20200202,
    v20201001,
    v20201201,
    v20210101,
    v20210201,
    v20210201preview,
    v20210210,
    v20210301,
};

// Import resources to register:
import { PrivateEndpointConnection } from "./privateEndpointConnection";
import { ProtectedItem } from "./protectedItem";
import { ProtectionContainer } from "./protectionContainer";
import { ProtectionIntent } from "./protectionIntent";
import { ProtectionPolicy } from "./protectionPolicy";
import { ReplicationFabric } from "./replicationFabric";
import { ReplicationMigrationItem } from "./replicationMigrationItem";
import { ReplicationNetworkMapping } from "./replicationNetworkMapping";
import { ReplicationPolicy } from "./replicationPolicy";
import { ReplicationProtectedItem } from "./replicationProtectedItem";
import { ReplicationProtectionContainerMapping } from "./replicationProtectionContainerMapping";
import { ReplicationRecoveryPlan } from "./replicationRecoveryPlan";
import { ReplicationRecoveryServicesProvider } from "./replicationRecoveryServicesProvider";
import { ReplicationStorageClassificationMapping } from "./replicationStorageClassificationMapping";
import { ReplicationvCenter } from "./replicationvCenter";
import { ResourceGuardProxy } from "./resourceGuardProxy";
import { Vault } from "./vault";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:recoveryservices:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ProtectedItem":
                return new ProtectedItem(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ProtectionContainer":
                return new ProtectionContainer(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ProtectionIntent":
                return new ProtectionIntent(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ProtectionPolicy":
                return new ProtectionPolicy(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationFabric":
                return new ReplicationFabric(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationMigrationItem":
                return new ReplicationMigrationItem(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationNetworkMapping":
                return new ReplicationNetworkMapping(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationPolicy":
                return new ReplicationPolicy(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationProtectedItem":
                return new ReplicationProtectedItem(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationProtectionContainerMapping":
                return new ReplicationProtectionContainerMapping(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationRecoveryPlan":
                return new ReplicationRecoveryPlan(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationRecoveryServicesProvider":
                return new ReplicationRecoveryServicesProvider(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationStorageClassificationMapping":
                return new ReplicationStorageClassificationMapping(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ReplicationvCenter":
                return new ReplicationvCenter(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:ResourceGuardProxy":
                return new ResourceGuardProxy(name, <any>undefined, { urn })
            case "azure-native:recoveryservices:Vault":
                return new Vault(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "recoveryservices", _module)
