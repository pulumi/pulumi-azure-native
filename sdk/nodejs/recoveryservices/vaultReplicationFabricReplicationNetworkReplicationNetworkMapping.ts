// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Network Mapping model. Ideally it should have been possible to inherit this class from prev version in InheritedModels as long as there is no difference in structure or method signature. Since there were no base Models for certain fields and methods viz NetworkMappingProperties and Load with required return type, the class has been introduced in its entirety with references to base models to facilitate extensions in subsequent versions.
 */
export class VaultReplicationFabricReplicationNetworkReplicationNetworkMapping extends pulumi.CustomResource {
    /**
     * Get an existing VaultReplicationFabricReplicationNetworkReplicationNetworkMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VaultReplicationFabricReplicationNetworkReplicationNetworkMappingState, opts?: pulumi.CustomResourceOptions): VaultReplicationFabricReplicationNetworkReplicationNetworkMapping {
        return new VaultReplicationFabricReplicationNetworkReplicationNetworkMapping(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:recoveryservices:VaultReplicationFabricReplicationNetworkReplicationNetworkMapping';

    /**
     * Returns true if the given object is an instance of VaultReplicationFabricReplicationNetworkReplicationNetworkMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VaultReplicationFabricReplicationNetworkReplicationNetworkMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VaultReplicationFabricReplicationNetworkReplicationNetworkMapping.__pulumiType;
    }

    /**
     * Resource Location
     */
    public /*out*/ readonly location!: pulumi.Output<string | undefined>;
    /**
     * Resource Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Network Mapping Properties.
     */
    public readonly properties!: pulumi.Output<outputs.recoveryservices.NetworkMappingPropertiesResponse>;
    /**
     * Resource Type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a VaultReplicationFabricReplicationNetworkReplicationNetworkMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VaultReplicationFabricReplicationNetworkReplicationNetworkMappingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VaultReplicationFabricReplicationNetworkReplicationNetworkMappingArgs | VaultReplicationFabricReplicationNetworkReplicationNetworkMappingState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as VaultReplicationFabricReplicationNetworkReplicationNetworkMappingState | undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["properties"] = state ? state.properties : undefined;
            inputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as VaultReplicationFabricReplicationNetworkReplicationNetworkMappingArgs | undefined;
            if (!args || args.fabricName === undefined) {
                throw new Error("Missing required property 'fabricName'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.networkName === undefined) {
                throw new Error("Missing required property 'networkName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.resourceName === undefined) {
                throw new Error("Missing required property 'resourceName'");
            }
            inputs["fabricName"] = args ? args.fabricName : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkName"] = args ? args.networkName : undefined;
            inputs["properties"] = args ? args.properties : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["resourceName"] = args ? args.resourceName : undefined;
            inputs["location"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(VaultReplicationFabricReplicationNetworkReplicationNetworkMapping.__pulumiType, name, inputs, opts);
    }
}

/**
 * Network Mapping model. Ideally it should have been possible to inherit this class from prev version in InheritedModels as long as there is no difference in structure or method signature. Since there were no base Models for certain fields and methods viz NetworkMappingProperties and Load with required return type, the class has been introduced in its entirety with references to base models to facilitate extensions in subsequent versions.
 */
export interface VaultReplicationFabricReplicationNetworkReplicationNetworkMappingState {
    /**
     * Resource Location
     */
    readonly location?: pulumi.Input<string>;
    /**
     * Resource Name
     */
    readonly name: pulumi.Input<string>;
    /**
     * The Network Mapping Properties.
     */
    readonly properties: pulumi.Input<inputs.recoveryservices.NetworkMappingPropertiesResponse>;
    /**
     * Resource Type
     */
    readonly type: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VaultReplicationFabricReplicationNetworkReplicationNetworkMapping resource.
 */
export interface VaultReplicationFabricReplicationNetworkReplicationNetworkMappingArgs {
    /**
     * Primary fabric name.
     */
    readonly fabricName: pulumi.Input<string>;
    /**
     * Network mapping name.
     */
    readonly name: pulumi.Input<string>;
    /**
     * Primary network name.
     */
    readonly networkName: pulumi.Input<string>;
    /**
     * Input properties for creating network mapping.
     */
    readonly properties?: pulumi.Input<inputs.recoveryservices.CreateNetworkMappingInputProperties>;
    /**
     * The name of the resource group where the recovery services vault is present.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the recovery services vault.
     */
    readonly resourceName: pulumi.Input<string>;
}
