// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Protection container mapping object.
 */
export class ReplicationProtectionContainerMapping extends pulumi.CustomResource {
    /**
     * Get an existing ReplicationProtectionContainerMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicationProtectionContainerMapping {
        return new ReplicationProtectionContainerMapping(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:recoveryservices/v20230601:ReplicationProtectionContainerMapping';

    /**
     * Returns true if the given object is an instance of ReplicationProtectionContainerMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReplicationProtectionContainerMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicationProtectionContainerMapping.__pulumiType;
    }

    /**
     * Resource Location
     */
    public /*out*/ readonly location!: pulumi.Output<string | undefined>;
    /**
     * Resource Name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The custom data.
     */
    public readonly properties!: pulumi.Output<outputs.recoveryservices.v20230601.ProtectionContainerMappingPropertiesResponse>;
    /**
     * Resource Type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ReplicationProtectionContainerMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicationProtectionContainerMappingArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.fabricName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fabricName'");
            }
            if ((!args || args.protectionContainerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protectionContainerName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.resourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceName'");
            }
            resourceInputs["fabricName"] = args ? args.fabricName : undefined;
            resourceInputs["mappingName"] = args ? args.mappingName : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["protectionContainerName"] = args ? args.protectionContainerName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["resourceName"] = args ? args.resourceName : undefined;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:recoveryservices:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20160810:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20180110:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20180710:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20210210:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20210301:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20210401:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20210601:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20210701:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20210801:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20211001:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20211101:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20211201:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20220101:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20220201:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20220301:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20220401:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20220501:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20220801:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20220910:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20221001:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20230101:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20230201:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20230401:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20230801:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20240101:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20240201:ReplicationProtectionContainerMapping" }, { type: "azure-native:recoveryservices/v20240401:ReplicationProtectionContainerMapping" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ReplicationProtectionContainerMapping.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ReplicationProtectionContainerMapping resource.
 */
export interface ReplicationProtectionContainerMappingArgs {
    /**
     * Fabric name.
     */
    fabricName: pulumi.Input<string>;
    /**
     * Protection container mapping name.
     */
    mappingName?: pulumi.Input<string>;
    /**
     * Configure protection input properties.
     */
    properties?: pulumi.Input<inputs.recoveryservices.v20230601.CreateProtectionContainerMappingInputPropertiesArgs>;
    /**
     * Protection container name.
     */
    protectionContainerName: pulumi.Input<string>;
    /**
     * The name of the resource group where the recovery services vault is present.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the recovery services vault.
     */
    resourceName: pulumi.Input<string>;
}
