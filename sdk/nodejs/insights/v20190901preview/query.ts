// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * A Log Analytics QueryPack-Query definition.
 */
export class Query extends pulumi.CustomResource {
    /**
     * Get an existing Query resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Query {
        return new Query(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:insights/v20190901preview:Query';

    /**
     * Returns true if the given object is an instance of Query.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Query {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Query.__pulumiType;
    }

    /**
     * Object Id of user creating the query.
     */
    public /*out*/ readonly author!: pulumi.Output<string>;
    /**
     * Body of the query.
     */
    public readonly body!: pulumi.Output<string>;
    /**
     * Description of the query.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Unique display name for your query within the Query Pack.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Azure resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Additional properties that can be set for the query.
     */
    public readonly properties!: pulumi.Output<any>;
    /**
     * The related metadata items for the function.
     */
    public readonly related!: pulumi.Output<outputs.insights.v20190901preview.LogAnalyticsQueryPackQueryPropertiesResponseRelated | undefined>;
    /**
     * Read only system data
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.insights.v20190901preview.SystemDataResponse>;
    /**
     * Tags associated with the query.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string[]} | undefined>;
    /**
     * Creation Date for the Log Analytics Query, in ISO 8601 format.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * Last modified date of the Log Analytics Query, in ISO 8601 format.
     */
    public /*out*/ readonly timeModified!: pulumi.Output<string>;
    /**
     * Azure resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Query resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QueryArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.body === undefined) {
                throw new Error("Missing required property 'body'");
            }
            if (!args || args.displayName === undefined) {
                throw new Error("Missing required property 'displayName'");
            }
            if (!args || args.id === undefined) {
                throw new Error("Missing required property 'id'");
            }
            if (!args || args.queryPackName === undefined) {
                throw new Error("Missing required property 'queryPackName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["body"] = args ? args.body : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["properties"] = args ? args.properties : undefined;
            inputs["queryPackName"] = args ? args.queryPackName : undefined;
            inputs["related"] = args ? args.related : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["author"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeModified"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["author"] = undefined /*out*/;
            inputs["body"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["properties"] = undefined /*out*/;
            inputs["related"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeModified"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Query.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Query resource.
 */
export interface QueryArgs {
    /**
     * Body of the query.
     */
    readonly body: pulumi.Input<string>;
    /**
     * Description of the query.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Unique display name for your query within the Query Pack.
     */
    readonly displayName: pulumi.Input<string>;
    /**
     * The id of a specific query defined in the Log Analytics QueryPack
     */
    readonly id: pulumi.Input<string>;
    /**
     * Additional properties that can be set for the query.
     */
    readonly properties?: any;
    /**
     * The name of the Log Analytics QueryPack resource.
     */
    readonly queryPackName: pulumi.Input<string>;
    /**
     * The related metadata items for the function.
     */
    readonly related?: pulumi.Input<inputs.insights.v20190901preview.LogAnalyticsQueryPackQueryPropertiesRelated>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Tags associated with the query.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<pulumi.Input<string>[]>}>;
}
