// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Properties that define a ProactiveDetection configuration.
 * API Version: 2015-05-01.
 */
export function getProactiveDetectionConfiguration(args: GetProactiveDetectionConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetProactiveDetectionConfigurationResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:insights:getProactiveDetectionConfiguration", {
        "configurationId": args.configurationId,
        "resourceGroupName": args.resourceGroupName,
        "resourceName": args.resourceName,
    }, opts);
}

export interface GetProactiveDetectionConfigurationArgs {
    /**
     * The ProactiveDetection configuration ID. This is unique within a Application Insights component.
     */
    configurationId: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the Application Insights component resource.
     */
    resourceName: string;
}

/**
 * Properties that define a ProactiveDetection configuration.
 */
export interface GetProactiveDetectionConfigurationResult {
    /**
     * Custom email addresses for this rule notifications
     */
    readonly customEmails?: string[];
    /**
     * A flag that indicates whether this rule is enabled by the user
     */
    readonly enabled?: boolean;
    /**
     * The last time this rule was updated
     */
    readonly lastUpdatedTime?: string;
    /**
     * The rule name
     */
    readonly name?: string;
    /**
     * Static definitions of the ProactiveDetection configuration rule (same values for all components).
     */
    readonly ruleDefinitions?: outputs.insights.ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions;
    /**
     * A flag that indicated whether notifications on this rule should be sent to subscription owners
     */
    readonly sendEmailsToSubscriptionOwners?: boolean;
}
