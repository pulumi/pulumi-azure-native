// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets guest diagnostics settings.
 */
export function getguestDiagnosticsSetting(args: GetguestDiagnosticsSettingArgs, opts?: pulumi.InvokeOptions): Promise<GetguestDiagnosticsSettingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:insights/v20180601preview:getguestDiagnosticsSetting", {
        "diagnosticSettingsName": args.diagnosticSettingsName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetguestDiagnosticsSettingArgs {
    /**
     * The name of the diagnostic setting.
     */
    diagnosticSettingsName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Virtual machine guest diagnostics settings resource.
 */
export interface GetguestDiagnosticsSettingResult {
    /**
     * the array of data source object which are configured to collect and send data
     */
    readonly dataSources?: outputs.insights.v20180601preview.DataSourceResponse[];
    /**
     * Azure resource Id
     */
    readonly id: string;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Azure resource name
     */
    readonly name: string;
    /**
     * Operating system type for the configuration
     */
    readonly osType?: string;
    readonly proxySetting?: string;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Azure resource type
     */
    readonly type: string;
}
/**
 * Gets guest diagnostics settings.
 */
export function getguestDiagnosticsSettingOutput(args: GetguestDiagnosticsSettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetguestDiagnosticsSettingResult> {
    return pulumi.output(args).apply((a: any) => getguestDiagnosticsSetting(a, opts))
}

export interface GetguestDiagnosticsSettingOutputArgs {
    /**
     * The name of the diagnostic setting.
     */
    diagnosticSettingsName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
