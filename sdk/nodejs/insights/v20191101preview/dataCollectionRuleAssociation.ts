// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Definition of generic ARM proxy resource.
 */
export class DataCollectionRuleAssociation extends pulumi.CustomResource {
    /**
     * Get an existing DataCollectionRuleAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataCollectionRuleAssociation {
        return new DataCollectionRuleAssociation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:insights/v20191101preview:DataCollectionRuleAssociation';

    /**
     * Returns true if the given object is an instance of DataCollectionRuleAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataCollectionRuleAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataCollectionRuleAssociation.__pulumiType;
    }

    /**
     * The resource ID of the data collection rule that is to be associated.
     */
    public readonly dataCollectionRuleId!: pulumi.Output<string>;
    /**
     * Description of the association.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Resource entity tag (ETag).
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The name of the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The resource provisioning state.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The type of the resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DataCollectionRuleAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataCollectionRuleAssociationArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.associationName === undefined) {
                throw new Error("Missing required property 'associationName'");
            }
            if (!args || args.dataCollectionRuleId === undefined) {
                throw new Error("Missing required property 'dataCollectionRuleId'");
            }
            if (!args || args.resourceUri === undefined) {
                throw new Error("Missing required property 'resourceUri'");
            }
            inputs["associationName"] = args ? args.associationName : undefined;
            inputs["dataCollectionRuleId"] = args ? args.dataCollectionRuleId : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["resourceUri"] = args ? args.resourceUri : undefined;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["dataCollectionRuleId"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(DataCollectionRuleAssociation.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a DataCollectionRuleAssociation resource.
 */
export interface DataCollectionRuleAssociationArgs {
    /**
     * The name of the association.
     */
    readonly associationName: pulumi.Input<string>;
    /**
     * The resource ID of the data collection rule that is to be associated.
     */
    readonly dataCollectionRuleId: pulumi.Input<string>;
    /**
     * Description of the association.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The identifier of the resource.
     */
    readonly resourceUri: pulumi.Input<string>;
}
