// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * An Application Insights web test definition.
 */
export class WebTest extends pulumi.CustomResource {
    /**
     * Get an existing WebTest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WebTest {
        return new WebTest(name, undefined, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:insights/v20150501:WebTest';

    /**
     * Returns true if the given object is an instance of WebTest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebTest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebTest.__pulumiType;
    }

    /**
     * The kind of web test that this web test watches. Choices are ping and multistep.
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Resource location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Azure resource name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Metadata describing a web test for an Azure resource.
     */
    public /*out*/ readonly properties!: pulumi.Output<outputs.insights.v20150501.WebTestPropertiesResponse>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Azure resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a WebTest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebTestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, state: undefined, opts: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebTestArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState as WebTestArgs | undefined;
            if (!args || args.Locations === undefined) {
                throw new Error("Missing required property 'Locations'");
            }
            if (!args || args.SyntheticMonitorId === undefined) {
                throw new Error("Missing required property 'SyntheticMonitorId'");
            }
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.webTestKind === undefined) {
                throw new Error("Missing required property 'webTestKind'");
            }
            inputs["Configuration"] = args ? args.Configuration : undefined;
            inputs["Description"] = args ? args.Description : undefined;
            inputs["Enabled"] = args ? args.Enabled : undefined;
            inputs["Frequency"] = args ? args.Frequency : undefined;
            inputs["Locations"] = args ? args.Locations : undefined;
            inputs["RetryEnabled"] = args ? args.RetryEnabled : undefined;
            inputs["SyntheticMonitorId"] = args ? args.SyntheticMonitorId : undefined;
            inputs["Timeout"] = args ? args.Timeout : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["webTestKind"] = args ? args.webTestKind : undefined;
            inputs["properties"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(WebTest.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a WebTest resource.
 */
export interface WebTestArgs {
    /**
     * An XML configuration specification for a WebTest.
     */
    readonly Configuration?: pulumi.Input<inputs.insights.v20150501.WebTestPropertiesConfiguration>;
    /**
     * Purpose/user defined descriptive test for this WebTest.
     */
    readonly Description?: pulumi.Input<string>;
    /**
     * Is the test actively being monitored.
     */
    readonly Enabled?: pulumi.Input<boolean>;
    /**
     * Interval in seconds between test runs for this WebTest. Default value is 300.
     */
    readonly Frequency?: pulumi.Input<number>;
    /**
     * A list of where to physically run the tests from to give global coverage for accessibility of your application.
     */
    readonly Locations: pulumi.Input<pulumi.Input<inputs.insights.v20150501.WebTestGeolocation>[]>;
    /**
     * Allow for retries should this WebTest fail.
     */
    readonly RetryEnabled?: pulumi.Input<boolean>;
    /**
     * Unique ID of this WebTest. This is typically the same value as the Name field.
     */
    readonly SyntheticMonitorId: pulumi.Input<string>;
    /**
     * Seconds until this WebTest will timeout and fail. Default value is 30.
     */
    readonly Timeout?: pulumi.Input<number>;
    /**
     * The kind of web test that this web test watches. Choices are ping and multistep.
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * Resource location
     */
    readonly location: pulumi.Input<string>;
    /**
     * User defined name if this WebTest.
     */
    readonly name: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The kind of web test this is, valid choices are ping and multistep.
     */
    readonly webTestKind: pulumi.Input<string>;
}
