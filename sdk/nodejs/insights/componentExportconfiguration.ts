// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Properties that define a Continuous Export configuration.
 */
export class ComponentExportconfiguration extends pulumi.CustomResource {
    /**
     * Get an existing ComponentExportconfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComponentExportconfigurationState, opts?: pulumi.CustomResourceOptions): ComponentExportconfiguration {
        return new ComponentExportconfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:insights:ComponentExportconfiguration';

    /**
     * Returns true if the given object is an instance of ComponentExportconfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComponentExportconfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComponentExportconfiguration.__pulumiType;
    }

    /**
     * The name of the Application Insights component.
     */
    public /*out*/ readonly ApplicationName!: pulumi.Output<string>;
    /**
     * The name of the destination storage container.
     */
    public /*out*/ readonly ContainerName!: pulumi.Output<string>;
    /**
     * The name of destination account.
     */
    public readonly DestinationAccountId!: pulumi.Output<string>;
    /**
     * The destination account location ID.
     */
    public readonly DestinationStorageLocationId!: pulumi.Output<string>;
    /**
     * The destination storage account subscription ID.
     */
    public readonly DestinationStorageSubscriptionId!: pulumi.Output<string>;
    /**
     * The destination type.
     */
    public readonly DestinationType!: pulumi.Output<string>;
    /**
     * The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous Export configuration is created.
     */
    public /*out*/ readonly ExportId!: pulumi.Output<string>;
    /**
     * This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
     */
    public /*out*/ readonly ExportStatus!: pulumi.Output<string>;
    /**
     * The instrumentation key of the Application Insights component.
     */
    public /*out*/ readonly InstrumentationKey!: pulumi.Output<string>;
    /**
     * This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
     */
    public /*out*/ readonly IsUserEnabled!: pulumi.Output<string>;
    /**
     * The last time the Continuous Export configuration started failing.
     */
    public /*out*/ readonly LastGapTime!: pulumi.Output<string>;
    /**
     * The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
     */
    public /*out*/ readonly LastSuccessTime!: pulumi.Output<string>;
    /**
     * Last time the Continuous Export configuration was updated.
     */
    public /*out*/ readonly LastUserUpdate!: pulumi.Output<string>;
    /**
     * Deprecated
     */
    public readonly NotificationQueueEnabled!: pulumi.Output<string | undefined>;
    /**
     * This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
     */
    public /*out*/ readonly PermanentErrorReason!: pulumi.Output<string>;
    /**
     * This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
     */
    public readonly RecordTypes!: pulumi.Output<string | undefined>;
    /**
     * The resource group of the Application Insights component.
     */
    public /*out*/ readonly ResourceGroup!: pulumi.Output<string>;
    /**
     * The name of the destination storage account.
     */
    public /*out*/ readonly StorageName!: pulumi.Output<string>;
    /**
     * The subscription of the Application Insights component.
     */
    public /*out*/ readonly SubscriptionId!: pulumi.Output<string>;

    /**
     * Create a ComponentExportconfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComponentExportconfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComponentExportconfigurationArgs | ComponentExportconfigurationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ComponentExportconfigurationState | undefined;
            inputs["ApplicationName"] = state ? state.ApplicationName : undefined;
            inputs["ContainerName"] = state ? state.ContainerName : undefined;
            inputs["DestinationAccountId"] = state ? state.DestinationAccountId : undefined;
            inputs["DestinationStorageLocationId"] = state ? state.DestinationStorageLocationId : undefined;
            inputs["DestinationStorageSubscriptionId"] = state ? state.DestinationStorageSubscriptionId : undefined;
            inputs["DestinationType"] = state ? state.DestinationType : undefined;
            inputs["ExportId"] = state ? state.ExportId : undefined;
            inputs["ExportStatus"] = state ? state.ExportStatus : undefined;
            inputs["InstrumentationKey"] = state ? state.InstrumentationKey : undefined;
            inputs["IsUserEnabled"] = state ? state.IsUserEnabled : undefined;
            inputs["LastGapTime"] = state ? state.LastGapTime : undefined;
            inputs["LastSuccessTime"] = state ? state.LastSuccessTime : undefined;
            inputs["LastUserUpdate"] = state ? state.LastUserUpdate : undefined;
            inputs["NotificationQueueEnabled"] = state ? state.NotificationQueueEnabled : undefined;
            inputs["PermanentErrorReason"] = state ? state.PermanentErrorReason : undefined;
            inputs["RecordTypes"] = state ? state.RecordTypes : undefined;
            inputs["ResourceGroup"] = state ? state.ResourceGroup : undefined;
            inputs["StorageName"] = state ? state.StorageName : undefined;
            inputs["SubscriptionId"] = state ? state.SubscriptionId : undefined;
        } else {
            const args = argsOrState as ComponentExportconfigurationArgs | undefined;
            if (!args || args.exportId === undefined) {
                throw new Error("Missing required property 'exportId'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.resourceName === undefined) {
                throw new Error("Missing required property 'resourceName'");
            }
            inputs["DestinationAccountId"] = args ? args.DestinationAccountId : undefined;
            inputs["DestinationAddress"] = args ? args.DestinationAddress : undefined;
            inputs["DestinationStorageLocationId"] = args ? args.DestinationStorageLocationId : undefined;
            inputs["DestinationStorageSubscriptionId"] = args ? args.DestinationStorageSubscriptionId : undefined;
            inputs["DestinationType"] = args ? args.DestinationType : undefined;
            inputs["IsEnabled"] = args ? args.IsEnabled : undefined;
            inputs["NotificationQueueEnabled"] = args ? args.NotificationQueueEnabled : undefined;
            inputs["NotificationQueueUri"] = args ? args.NotificationQueueUri : undefined;
            inputs["RecordTypes"] = args ? args.RecordTypes : undefined;
            inputs["exportId"] = args ? args.exportId : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["resourceName"] = args ? args.resourceName : undefined;
            inputs["ApplicationName"] = undefined /*out*/;
            inputs["ContainerName"] = undefined /*out*/;
            inputs["ExportId"] = undefined /*out*/;
            inputs["ExportStatus"] = undefined /*out*/;
            inputs["InstrumentationKey"] = undefined /*out*/;
            inputs["IsUserEnabled"] = undefined /*out*/;
            inputs["LastGapTime"] = undefined /*out*/;
            inputs["LastSuccessTime"] = undefined /*out*/;
            inputs["LastUserUpdate"] = undefined /*out*/;
            inputs["PermanentErrorReason"] = undefined /*out*/;
            inputs["ResourceGroup"] = undefined /*out*/;
            inputs["StorageName"] = undefined /*out*/;
            inputs["SubscriptionId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ComponentExportconfiguration.__pulumiType, name, inputs, opts);
    }
}

/**
 * Properties that define a Continuous Export configuration.
 */
export interface ComponentExportconfigurationState {
    /**
     * The name of the Application Insights component.
     */
    readonly ApplicationName: pulumi.Input<string>;
    /**
     * The name of the destination storage container.
     */
    readonly ContainerName: pulumi.Input<string>;
    /**
     * The name of destination account.
     */
    readonly DestinationAccountId: pulumi.Input<string>;
    /**
     * The destination account location ID.
     */
    readonly DestinationStorageLocationId: pulumi.Input<string>;
    /**
     * The destination storage account subscription ID.
     */
    readonly DestinationStorageSubscriptionId: pulumi.Input<string>;
    /**
     * The destination type.
     */
    readonly DestinationType: pulumi.Input<string>;
    /**
     * The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous Export configuration is created.
     */
    readonly ExportId: pulumi.Input<string>;
    /**
     * This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
     */
    readonly ExportStatus: pulumi.Input<string>;
    /**
     * The instrumentation key of the Application Insights component.
     */
    readonly InstrumentationKey: pulumi.Input<string>;
    /**
     * This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
     */
    readonly IsUserEnabled: pulumi.Input<string>;
    /**
     * The last time the Continuous Export configuration started failing.
     */
    readonly LastGapTime: pulumi.Input<string>;
    /**
     * The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
     */
    readonly LastSuccessTime: pulumi.Input<string>;
    /**
     * Last time the Continuous Export configuration was updated.
     */
    readonly LastUserUpdate: pulumi.Input<string>;
    /**
     * Deprecated
     */
    readonly NotificationQueueEnabled?: pulumi.Input<string>;
    /**
     * This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
     */
    readonly PermanentErrorReason: pulumi.Input<string>;
    /**
     * This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
     */
    readonly RecordTypes?: pulumi.Input<string>;
    /**
     * The resource group of the Application Insights component.
     */
    readonly ResourceGroup: pulumi.Input<string>;
    /**
     * The name of the destination storage account.
     */
    readonly StorageName: pulumi.Input<string>;
    /**
     * The subscription of the Application Insights component.
     */
    readonly SubscriptionId: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ComponentExportconfiguration resource.
 */
export interface ComponentExportconfigurationArgs {
    /**
     * The name of destination storage account.
     */
    readonly DestinationAccountId?: pulumi.Input<string>;
    /**
     * The SAS URL for the destination storage container. It must grant write permission.
     */
    readonly DestinationAddress?: pulumi.Input<string>;
    /**
     * The location ID of the destination storage container.
     */
    readonly DestinationStorageLocationId?: pulumi.Input<string>;
    /**
     * The subscription ID of the destination storage container.
     */
    readonly DestinationStorageSubscriptionId?: pulumi.Input<string>;
    /**
     * The Continuous Export destination type. This has to be 'Blob'.
     */
    readonly DestinationType?: pulumi.Input<string>;
    /**
     * Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to 'false'.
     */
    readonly IsEnabled?: pulumi.Input<string>;
    /**
     * Deprecated
     */
    readonly NotificationQueueEnabled?: pulumi.Input<string>;
    /**
     * Deprecated
     */
    readonly NotificationQueueUri?: pulumi.Input<string>;
    /**
     * The document types to be exported, as comma separated values. Allowed values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
     */
    readonly RecordTypes?: pulumi.Input<string>;
    /**
     * The Continuous Export configuration ID. This is unique within a Application Insights component.
     */
    readonly exportId: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Application Insights component resource.
     */
    readonly resourceName: pulumi.Input<string>;
}
