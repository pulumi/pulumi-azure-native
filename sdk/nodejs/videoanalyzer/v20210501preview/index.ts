// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AccessPolicyArgs } from "./accessPolicy";
export type AccessPolicy = import("./accessPolicy").AccessPolicy;
export const AccessPolicy: typeof import("./accessPolicy").AccessPolicy = null as any;
utilities.lazyLoad(exports, ["AccessPolicy"], () => require("./accessPolicy"));

export { EdgeModuleArgs } from "./edgeModule";
export type EdgeModule = import("./edgeModule").EdgeModule;
export const EdgeModule: typeof import("./edgeModule").EdgeModule = null as any;
utilities.lazyLoad(exports, ["EdgeModule"], () => require("./edgeModule"));

export { GetAccessPolicyArgs, GetAccessPolicyResult, GetAccessPolicyOutputArgs } from "./getAccessPolicy";
export const getAccessPolicy: typeof import("./getAccessPolicy").getAccessPolicy = null as any;
export const getAccessPolicyOutput: typeof import("./getAccessPolicy").getAccessPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getAccessPolicy","getAccessPolicyOutput"], () => require("./getAccessPolicy"));

export { GetEdgeModuleArgs, GetEdgeModuleResult, GetEdgeModuleOutputArgs } from "./getEdgeModule";
export const getEdgeModule: typeof import("./getEdgeModule").getEdgeModule = null as any;
export const getEdgeModuleOutput: typeof import("./getEdgeModule").getEdgeModuleOutput = null as any;
utilities.lazyLoad(exports, ["getEdgeModule","getEdgeModuleOutput"], () => require("./getEdgeModule"));

export { GetVideoArgs, GetVideoResult, GetVideoOutputArgs } from "./getVideo";
export const getVideo: typeof import("./getVideo").getVideo = null as any;
export const getVideoOutput: typeof import("./getVideo").getVideoOutput = null as any;
utilities.lazyLoad(exports, ["getVideo","getVideoOutput"], () => require("./getVideo"));

export { GetVideoAnalyzerArgs, GetVideoAnalyzerResult, GetVideoAnalyzerOutputArgs } from "./getVideoAnalyzer";
export const getVideoAnalyzer: typeof import("./getVideoAnalyzer").getVideoAnalyzer = null as any;
export const getVideoAnalyzerOutput: typeof import("./getVideoAnalyzer").getVideoAnalyzerOutput = null as any;
utilities.lazyLoad(exports, ["getVideoAnalyzer","getVideoAnalyzerOutput"], () => require("./getVideoAnalyzer"));

export { ListEdgeModuleProvisioningTokenArgs, ListEdgeModuleProvisioningTokenResult, ListEdgeModuleProvisioningTokenOutputArgs } from "./listEdgeModuleProvisioningToken";
export const listEdgeModuleProvisioningToken: typeof import("./listEdgeModuleProvisioningToken").listEdgeModuleProvisioningToken = null as any;
export const listEdgeModuleProvisioningTokenOutput: typeof import("./listEdgeModuleProvisioningToken").listEdgeModuleProvisioningTokenOutput = null as any;
utilities.lazyLoad(exports, ["listEdgeModuleProvisioningToken","listEdgeModuleProvisioningTokenOutput"], () => require("./listEdgeModuleProvisioningToken"));

export { ListVideoStreamingTokenArgs, ListVideoStreamingTokenResult, ListVideoStreamingTokenOutputArgs } from "./listVideoStreamingToken";
export const listVideoStreamingToken: typeof import("./listVideoStreamingToken").listVideoStreamingToken = null as any;
export const listVideoStreamingTokenOutput: typeof import("./listVideoStreamingToken").listVideoStreamingTokenOutput = null as any;
utilities.lazyLoad(exports, ["listVideoStreamingToken","listVideoStreamingTokenOutput"], () => require("./listVideoStreamingToken"));

export { VideoArgs } from "./video";
export type Video = import("./video").Video;
export const Video: typeof import("./video").Video = null as any;
utilities.lazyLoad(exports, ["Video"], () => require("./video"));

export { VideoAnalyzerArgs } from "./videoAnalyzer";
export type VideoAnalyzer = import("./videoAnalyzer").VideoAnalyzer;
export const VideoAnalyzer: typeof import("./videoAnalyzer").VideoAnalyzer = null as any;
utilities.lazyLoad(exports, ["VideoAnalyzer"], () => require("./videoAnalyzer"));


// Export enums:
export * from "../../types/enums/videoanalyzer/v20210501preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:videoanalyzer/v20210501preview:AccessPolicy":
                return new AccessPolicy(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20210501preview:EdgeModule":
                return new EdgeModule(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20210501preview:Video":
                return new Video(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20210501preview:VideoAnalyzer":
                return new VideoAnalyzer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "videoanalyzer/v20210501preview", _module)
