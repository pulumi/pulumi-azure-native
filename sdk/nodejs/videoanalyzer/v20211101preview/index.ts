// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AccessPolicyArgs } from "./accessPolicy";
export type AccessPolicy = import("./accessPolicy").AccessPolicy;
export const AccessPolicy: typeof import("./accessPolicy").AccessPolicy = null as any;

export { EdgeModuleArgs } from "./edgeModule";
export type EdgeModule = import("./edgeModule").EdgeModule;
export const EdgeModule: typeof import("./edgeModule").EdgeModule = null as any;

export { GetAccessPolicyArgs, GetAccessPolicyResult, GetAccessPolicyOutputArgs } from "./getAccessPolicy";
export const getAccessPolicy: typeof import("./getAccessPolicy").getAccessPolicy = null as any;
export const getAccessPolicyOutput: typeof import("./getAccessPolicy").getAccessPolicyOutput = null as any;

export { GetEdgeModuleArgs, GetEdgeModuleResult, GetEdgeModuleOutputArgs } from "./getEdgeModule";
export const getEdgeModule: typeof import("./getEdgeModule").getEdgeModule = null as any;
export const getEdgeModuleOutput: typeof import("./getEdgeModule").getEdgeModuleOutput = null as any;

export { GetLivePipelineArgs, GetLivePipelineResult, GetLivePipelineOutputArgs } from "./getLivePipeline";
export const getLivePipeline: typeof import("./getLivePipeline").getLivePipeline = null as any;
export const getLivePipelineOutput: typeof import("./getLivePipeline").getLivePipelineOutput = null as any;

export { GetPipelineJobArgs, GetPipelineJobResult, GetPipelineJobOutputArgs } from "./getPipelineJob";
export const getPipelineJob: typeof import("./getPipelineJob").getPipelineJob = null as any;
export const getPipelineJobOutput: typeof import("./getPipelineJob").getPipelineJobOutput = null as any;

export { GetPipelineTopologyArgs, GetPipelineTopologyResult, GetPipelineTopologyOutputArgs } from "./getPipelineTopology";
export const getPipelineTopology: typeof import("./getPipelineTopology").getPipelineTopology = null as any;
export const getPipelineTopologyOutput: typeof import("./getPipelineTopology").getPipelineTopologyOutput = null as any;

export { GetPrivateEndpointConnectionArgs, GetPrivateEndpointConnectionResult, GetPrivateEndpointConnectionOutputArgs } from "./getPrivateEndpointConnection";
export const getPrivateEndpointConnection: typeof import("./getPrivateEndpointConnection").getPrivateEndpointConnection = null as any;
export const getPrivateEndpointConnectionOutput: typeof import("./getPrivateEndpointConnection").getPrivateEndpointConnectionOutput = null as any;

export { GetVideoArgs, GetVideoResult, GetVideoOutputArgs } from "./getVideo";
export const getVideo: typeof import("./getVideo").getVideo = null as any;
export const getVideoOutput: typeof import("./getVideo").getVideoOutput = null as any;

export { GetVideoAnalyzerArgs, GetVideoAnalyzerResult, GetVideoAnalyzerOutputArgs } from "./getVideoAnalyzer";
export const getVideoAnalyzer: typeof import("./getVideoAnalyzer").getVideoAnalyzer = null as any;
export const getVideoAnalyzerOutput: typeof import("./getVideoAnalyzer").getVideoAnalyzerOutput = null as any;

export { ListEdgeModuleProvisioningTokenArgs, ListEdgeModuleProvisioningTokenResult, ListEdgeModuleProvisioningTokenOutputArgs } from "./listEdgeModuleProvisioningToken";
export const listEdgeModuleProvisioningToken: typeof import("./listEdgeModuleProvisioningToken").listEdgeModuleProvisioningToken = null as any;
export const listEdgeModuleProvisioningTokenOutput: typeof import("./listEdgeModuleProvisioningToken").listEdgeModuleProvisioningTokenOutput = null as any;

export { ListVideoContentTokenArgs, ListVideoContentTokenResult, ListVideoContentTokenOutputArgs } from "./listVideoContentToken";
export const listVideoContentToken: typeof import("./listVideoContentToken").listVideoContentToken = null as any;
export const listVideoContentTokenOutput: typeof import("./listVideoContentToken").listVideoContentTokenOutput = null as any;

export { LivePipelineArgs } from "./livePipeline";
export type LivePipeline = import("./livePipeline").LivePipeline;
export const LivePipeline: typeof import("./livePipeline").LivePipeline = null as any;

export { PipelineJobArgs } from "./pipelineJob";
export type PipelineJob = import("./pipelineJob").PipelineJob;
export const PipelineJob: typeof import("./pipelineJob").PipelineJob = null as any;

export { PipelineTopologyArgs } from "./pipelineTopology";
export type PipelineTopology = import("./pipelineTopology").PipelineTopology;
export const PipelineTopology: typeof import("./pipelineTopology").PipelineTopology = null as any;

export { PrivateEndpointConnectionArgs } from "./privateEndpointConnection";
export type PrivateEndpointConnection = import("./privateEndpointConnection").PrivateEndpointConnection;
export const PrivateEndpointConnection: typeof import("./privateEndpointConnection").PrivateEndpointConnection = null as any;

export { VideoArgs } from "./video";
export type Video = import("./video").Video;
export const Video: typeof import("./video").Video = null as any;

export { VideoAnalyzerArgs } from "./videoAnalyzer";
export type VideoAnalyzer = import("./videoAnalyzer").VideoAnalyzer;
export const VideoAnalyzer: typeof import("./videoAnalyzer").VideoAnalyzer = null as any;

utilities.lazyLoad(exports, ["AccessPolicy"], () => require("./accessPolicy"));
utilities.lazyLoad(exports, ["EdgeModule"], () => require("./edgeModule"));
utilities.lazyLoad(exports, ["getAccessPolicy","getAccessPolicyOutput"], () => require("./getAccessPolicy"));
utilities.lazyLoad(exports, ["getEdgeModule","getEdgeModuleOutput"], () => require("./getEdgeModule"));
utilities.lazyLoad(exports, ["getLivePipeline","getLivePipelineOutput"], () => require("./getLivePipeline"));
utilities.lazyLoad(exports, ["getPipelineJob","getPipelineJobOutput"], () => require("./getPipelineJob"));
utilities.lazyLoad(exports, ["getPipelineTopology","getPipelineTopologyOutput"], () => require("./getPipelineTopology"));
utilities.lazyLoad(exports, ["getPrivateEndpointConnection","getPrivateEndpointConnectionOutput"], () => require("./getPrivateEndpointConnection"));
utilities.lazyLoad(exports, ["getVideo","getVideoOutput"], () => require("./getVideo"));
utilities.lazyLoad(exports, ["getVideoAnalyzer","getVideoAnalyzerOutput"], () => require("./getVideoAnalyzer"));
utilities.lazyLoad(exports, ["listEdgeModuleProvisioningToken","listEdgeModuleProvisioningTokenOutput"], () => require("./listEdgeModuleProvisioningToken"));
utilities.lazyLoad(exports, ["listVideoContentToken","listVideoContentTokenOutput"], () => require("./listVideoContentToken"));
utilities.lazyLoad(exports, ["LivePipeline"], () => require("./livePipeline"));
utilities.lazyLoad(exports, ["PipelineJob"], () => require("./pipelineJob"));
utilities.lazyLoad(exports, ["PipelineTopology"], () => require("./pipelineTopology"));
utilities.lazyLoad(exports, ["PrivateEndpointConnection"], () => require("./privateEndpointConnection"));
utilities.lazyLoad(exports, ["Video"], () => require("./video"));
utilities.lazyLoad(exports, ["VideoAnalyzer"], () => require("./videoAnalyzer"));

// Export enums:
export * from "../../types/enums/videoanalyzer/v20211101preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:videoanalyzer/v20211101preview:AccessPolicy":
                return new AccessPolicy(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20211101preview:EdgeModule":
                return new EdgeModule(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20211101preview:LivePipeline":
                return new LivePipeline(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20211101preview:PipelineJob":
                return new PipelineJob(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20211101preview:PipelineTopology":
                return new PipelineTopology(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20211101preview:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20211101preview:Video":
                return new Video(name, <any>undefined, { urn })
            case "azure-native:videoanalyzer/v20211101preview:VideoAnalyzer":
                return new VideoAnalyzer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "videoanalyzer/v20211101preview", _module)
