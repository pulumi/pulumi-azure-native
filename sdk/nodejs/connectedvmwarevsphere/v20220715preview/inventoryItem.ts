// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Defines the inventory item.
 */
export class InventoryItem extends pulumi.CustomResource {
    /**
     * Get an existing InventoryItem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InventoryItem {
        return new InventoryItem(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:connectedvmwarevsphere/v20220715preview:InventoryItem';

    /**
     * Returns true if the given object is an instance of InventoryItem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InventoryItem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InventoryItem.__pulumiType;
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Resource properties.
     */
    public readonly properties!: pulumi.Output<outputs.connectedvmwarevsphere.v20220715preview.ClusterInventoryItemResponse | outputs.connectedvmwarevsphere.v20220715preview.DatastoreInventoryItemResponse | outputs.connectedvmwarevsphere.v20220715preview.HostInventoryItemResponse | outputs.connectedvmwarevsphere.v20220715preview.ResourcePoolInventoryItemResponse | outputs.connectedvmwarevsphere.v20220715preview.VirtualMachineInventoryItemResponse | outputs.connectedvmwarevsphere.v20220715preview.VirtualMachineTemplateInventoryItemResponse | outputs.connectedvmwarevsphere.v20220715preview.VirtualNetworkInventoryItemResponse>;
    /**
     * The system data.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.connectedvmwarevsphere.v20220715preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a InventoryItem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InventoryItemArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.properties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'properties'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.vcenterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vcenterName'");
            }
            resourceInputs["inventoryItemName"] = args ? args.inventoryItemName : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["vcenterName"] = args ? args.vcenterName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:connectedvmwarevsphere:InventoryItem" }, { type: "azure-native:connectedvmwarevsphere/v20201001preview:InventoryItem" }, { type: "azure-native:connectedvmwarevsphere/v20220110preview:InventoryItem" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(InventoryItem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a InventoryItem resource.
 */
export interface InventoryItemArgs {
    /**
     * Name of the inventoryItem.
     */
    inventoryItemName?: pulumi.Input<string>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource properties.
     */
    properties: pulumi.Input<inputs.connectedvmwarevsphere.v20220715preview.ClusterInventoryItemArgs | inputs.connectedvmwarevsphere.v20220715preview.DatastoreInventoryItemArgs | inputs.connectedvmwarevsphere.v20220715preview.HostInventoryItemArgs | inputs.connectedvmwarevsphere.v20220715preview.ResourcePoolInventoryItemArgs | inputs.connectedvmwarevsphere.v20220715preview.VirtualMachineInventoryItemArgs | inputs.connectedvmwarevsphere.v20220715preview.VirtualMachineTemplateInventoryItemArgs | inputs.connectedvmwarevsphere.v20220715preview.VirtualNetworkInventoryItemArgs>;
    /**
     * The Resource Group Name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the vCenter.
     */
    vcenterName: pulumi.Input<string>;
}
