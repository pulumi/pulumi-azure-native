// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AvailabilitySetArgs } from "./availabilitySet";
export type AvailabilitySet = import("./availabilitySet").AvailabilitySet;
export const AvailabilitySet: typeof import("./availabilitySet").AvailabilitySet = null as any;

export { CapacityReservationArgs } from "./capacityReservation";
export type CapacityReservation = import("./capacityReservation").CapacityReservation;
export const CapacityReservation: typeof import("./capacityReservation").CapacityReservation = null as any;

export { CapacityReservationGroupArgs } from "./capacityReservationGroup";
export type CapacityReservationGroup = import("./capacityReservationGroup").CapacityReservationGroup;
export const CapacityReservationGroup: typeof import("./capacityReservationGroup").CapacityReservationGroup = null as any;

export { CloudServiceArgs } from "./cloudService";
export type CloudService = import("./cloudService").CloudService;
export const CloudService: typeof import("./cloudService").CloudService = null as any;

export { DedicatedHostArgs } from "./dedicatedHost";
export type DedicatedHost = import("./dedicatedHost").DedicatedHost;
export const DedicatedHost: typeof import("./dedicatedHost").DedicatedHost = null as any;

export { DedicatedHostGroupArgs } from "./dedicatedHostGroup";
export type DedicatedHostGroup = import("./dedicatedHostGroup").DedicatedHostGroup;
export const DedicatedHostGroup: typeof import("./dedicatedHostGroup").DedicatedHostGroup = null as any;

export { DiskArgs } from "./disk";
export type Disk = import("./disk").Disk;
export const Disk: typeof import("./disk").Disk = null as any;

export { DiskAccessArgs } from "./diskAccess";
export type DiskAccess = import("./diskAccess").DiskAccess;
export const DiskAccess: typeof import("./diskAccess").DiskAccess = null as any;

export { DiskAccessAPrivateEndpointConnectionArgs } from "./diskAccessAPrivateEndpointConnection";
export type DiskAccessAPrivateEndpointConnection = import("./diskAccessAPrivateEndpointConnection").DiskAccessAPrivateEndpointConnection;
export const DiskAccessAPrivateEndpointConnection: typeof import("./diskAccessAPrivateEndpointConnection").DiskAccessAPrivateEndpointConnection = null as any;

export { DiskEncryptionSetArgs } from "./diskEncryptionSet";
export type DiskEncryptionSet = import("./diskEncryptionSet").DiskEncryptionSet;
export const DiskEncryptionSet: typeof import("./diskEncryptionSet").DiskEncryptionSet = null as any;

export { GalleryArgs } from "./gallery";
export type Gallery = import("./gallery").Gallery;
export const Gallery: typeof import("./gallery").Gallery = null as any;

export { GalleryApplicationArgs } from "./galleryApplication";
export type GalleryApplication = import("./galleryApplication").GalleryApplication;
export const GalleryApplication: typeof import("./galleryApplication").GalleryApplication = null as any;

export { GalleryApplicationVersionArgs } from "./galleryApplicationVersion";
export type GalleryApplicationVersion = import("./galleryApplicationVersion").GalleryApplicationVersion;
export const GalleryApplicationVersion: typeof import("./galleryApplicationVersion").GalleryApplicationVersion = null as any;

export { GalleryImageArgs } from "./galleryImage";
export type GalleryImage = import("./galleryImage").GalleryImage;
export const GalleryImage: typeof import("./galleryImage").GalleryImage = null as any;

export { GalleryImageVersionArgs } from "./galleryImageVersion";
export type GalleryImageVersion = import("./galleryImageVersion").GalleryImageVersion;
export const GalleryImageVersion: typeof import("./galleryImageVersion").GalleryImageVersion = null as any;

export { GetAvailabilitySetArgs, GetAvailabilitySetResult, GetAvailabilitySetOutputArgs } from "./getAvailabilitySet";
export const getAvailabilitySet: typeof import("./getAvailabilitySet").getAvailabilitySet = null as any;
export const getAvailabilitySetOutput: typeof import("./getAvailabilitySet").getAvailabilitySetOutput = null as any;

export { GetCapacityReservationArgs, GetCapacityReservationResult, GetCapacityReservationOutputArgs } from "./getCapacityReservation";
export const getCapacityReservation: typeof import("./getCapacityReservation").getCapacityReservation = null as any;
export const getCapacityReservationOutput: typeof import("./getCapacityReservation").getCapacityReservationOutput = null as any;

export { GetCapacityReservationGroupArgs, GetCapacityReservationGroupResult, GetCapacityReservationGroupOutputArgs } from "./getCapacityReservationGroup";
export const getCapacityReservationGroup: typeof import("./getCapacityReservationGroup").getCapacityReservationGroup = null as any;
export const getCapacityReservationGroupOutput: typeof import("./getCapacityReservationGroup").getCapacityReservationGroupOutput = null as any;

export { GetCloudServiceArgs, GetCloudServiceResult, GetCloudServiceOutputArgs } from "./getCloudService";
export const getCloudService: typeof import("./getCloudService").getCloudService = null as any;
export const getCloudServiceOutput: typeof import("./getCloudService").getCloudServiceOutput = null as any;

export { GetDedicatedHostArgs, GetDedicatedHostResult, GetDedicatedHostOutputArgs } from "./getDedicatedHost";
export const getDedicatedHost: typeof import("./getDedicatedHost").getDedicatedHost = null as any;
export const getDedicatedHostOutput: typeof import("./getDedicatedHost").getDedicatedHostOutput = null as any;

export { GetDedicatedHostGroupArgs, GetDedicatedHostGroupResult, GetDedicatedHostGroupOutputArgs } from "./getDedicatedHostGroup";
export const getDedicatedHostGroup: typeof import("./getDedicatedHostGroup").getDedicatedHostGroup = null as any;
export const getDedicatedHostGroupOutput: typeof import("./getDedicatedHostGroup").getDedicatedHostGroupOutput = null as any;

export { GetDiskArgs, GetDiskResult, GetDiskOutputArgs } from "./getDisk";
export const getDisk: typeof import("./getDisk").getDisk = null as any;
export const getDiskOutput: typeof import("./getDisk").getDiskOutput = null as any;

export { GetDiskAccessArgs, GetDiskAccessResult, GetDiskAccessOutputArgs } from "./getDiskAccess";
export const getDiskAccess: typeof import("./getDiskAccess").getDiskAccess = null as any;
export const getDiskAccessOutput: typeof import("./getDiskAccess").getDiskAccessOutput = null as any;

export { GetDiskAccessAPrivateEndpointConnectionArgs, GetDiskAccessAPrivateEndpointConnectionResult, GetDiskAccessAPrivateEndpointConnectionOutputArgs } from "./getDiskAccessAPrivateEndpointConnection";
export const getDiskAccessAPrivateEndpointConnection: typeof import("./getDiskAccessAPrivateEndpointConnection").getDiskAccessAPrivateEndpointConnection = null as any;
export const getDiskAccessAPrivateEndpointConnectionOutput: typeof import("./getDiskAccessAPrivateEndpointConnection").getDiskAccessAPrivateEndpointConnectionOutput = null as any;

export { GetDiskEncryptionSetArgs, GetDiskEncryptionSetResult, GetDiskEncryptionSetOutputArgs } from "./getDiskEncryptionSet";
export const getDiskEncryptionSet: typeof import("./getDiskEncryptionSet").getDiskEncryptionSet = null as any;
export const getDiskEncryptionSetOutput: typeof import("./getDiskEncryptionSet").getDiskEncryptionSetOutput = null as any;

export { GetGalleryArgs, GetGalleryResult, GetGalleryOutputArgs } from "./getGallery";
export const getGallery: typeof import("./getGallery").getGallery = null as any;
export const getGalleryOutput: typeof import("./getGallery").getGalleryOutput = null as any;

export { GetGalleryApplicationArgs, GetGalleryApplicationResult, GetGalleryApplicationOutputArgs } from "./getGalleryApplication";
export const getGalleryApplication: typeof import("./getGalleryApplication").getGalleryApplication = null as any;
export const getGalleryApplicationOutput: typeof import("./getGalleryApplication").getGalleryApplicationOutput = null as any;

export { GetGalleryApplicationVersionArgs, GetGalleryApplicationVersionResult, GetGalleryApplicationVersionOutputArgs } from "./getGalleryApplicationVersion";
export const getGalleryApplicationVersion: typeof import("./getGalleryApplicationVersion").getGalleryApplicationVersion = null as any;
export const getGalleryApplicationVersionOutput: typeof import("./getGalleryApplicationVersion").getGalleryApplicationVersionOutput = null as any;

export { GetGalleryImageArgs, GetGalleryImageResult, GetGalleryImageOutputArgs } from "./getGalleryImage";
export const getGalleryImage: typeof import("./getGalleryImage").getGalleryImage = null as any;
export const getGalleryImageOutput: typeof import("./getGalleryImage").getGalleryImageOutput = null as any;

export { GetGalleryImageVersionArgs, GetGalleryImageVersionResult, GetGalleryImageVersionOutputArgs } from "./getGalleryImageVersion";
export const getGalleryImageVersion: typeof import("./getGalleryImageVersion").getGalleryImageVersion = null as any;
export const getGalleryImageVersionOutput: typeof import("./getGalleryImageVersion").getGalleryImageVersionOutput = null as any;

export { GetImageArgs, GetImageResult, GetImageOutputArgs } from "./getImage";
export const getImage: typeof import("./getImage").getImage = null as any;
export const getImageOutput: typeof import("./getImage").getImageOutput = null as any;

export { GetLogAnalyticExportRequestRateByIntervalArgs, GetLogAnalyticExportRequestRateByIntervalResult, GetLogAnalyticExportRequestRateByIntervalOutputArgs } from "./getLogAnalyticExportRequestRateByInterval";
export const getLogAnalyticExportRequestRateByInterval: typeof import("./getLogAnalyticExportRequestRateByInterval").getLogAnalyticExportRequestRateByInterval = null as any;
export const getLogAnalyticExportRequestRateByIntervalOutput: typeof import("./getLogAnalyticExportRequestRateByInterval").getLogAnalyticExportRequestRateByIntervalOutput = null as any;

export { GetLogAnalyticExportThrottledRequestsArgs, GetLogAnalyticExportThrottledRequestsResult, GetLogAnalyticExportThrottledRequestsOutputArgs } from "./getLogAnalyticExportThrottledRequests";
export const getLogAnalyticExportThrottledRequests: typeof import("./getLogAnalyticExportThrottledRequests").getLogAnalyticExportThrottledRequests = null as any;
export const getLogAnalyticExportThrottledRequestsOutput: typeof import("./getLogAnalyticExportThrottledRequests").getLogAnalyticExportThrottledRequestsOutput = null as any;

export { GetProximityPlacementGroupArgs, GetProximityPlacementGroupResult, GetProximityPlacementGroupOutputArgs } from "./getProximityPlacementGroup";
export const getProximityPlacementGroup: typeof import("./getProximityPlacementGroup").getProximityPlacementGroup = null as any;
export const getProximityPlacementGroupOutput: typeof import("./getProximityPlacementGroup").getProximityPlacementGroupOutput = null as any;

export { GetRestorePointArgs, GetRestorePointResult, GetRestorePointOutputArgs } from "./getRestorePoint";
export const getRestorePoint: typeof import("./getRestorePoint").getRestorePoint = null as any;
export const getRestorePointOutput: typeof import("./getRestorePoint").getRestorePointOutput = null as any;

export { GetRestorePointCollectionArgs, GetRestorePointCollectionResult, GetRestorePointCollectionOutputArgs } from "./getRestorePointCollection";
export const getRestorePointCollection: typeof import("./getRestorePointCollection").getRestorePointCollection = null as any;
export const getRestorePointCollectionOutput: typeof import("./getRestorePointCollection").getRestorePointCollectionOutput = null as any;

export { GetSnapshotArgs, GetSnapshotResult, GetSnapshotOutputArgs } from "./getSnapshot";
export const getSnapshot: typeof import("./getSnapshot").getSnapshot = null as any;
export const getSnapshotOutput: typeof import("./getSnapshot").getSnapshotOutput = null as any;

export { GetSshPublicKeyArgs, GetSshPublicKeyResult, GetSshPublicKeyOutputArgs } from "./getSshPublicKey";
export const getSshPublicKey: typeof import("./getSshPublicKey").getSshPublicKey = null as any;
export const getSshPublicKeyOutput: typeof import("./getSshPublicKey").getSshPublicKeyOutput = null as any;

export { GetVirtualMachineArgs, GetVirtualMachineResult, GetVirtualMachineOutputArgs } from "./getVirtualMachine";
export const getVirtualMachine: typeof import("./getVirtualMachine").getVirtualMachine = null as any;
export const getVirtualMachineOutput: typeof import("./getVirtualMachine").getVirtualMachineOutput = null as any;

export { GetVirtualMachineExtensionArgs, GetVirtualMachineExtensionResult, GetVirtualMachineExtensionOutputArgs } from "./getVirtualMachineExtension";
export const getVirtualMachineExtension: typeof import("./getVirtualMachineExtension").getVirtualMachineExtension = null as any;
export const getVirtualMachineExtensionOutput: typeof import("./getVirtualMachineExtension").getVirtualMachineExtensionOutput = null as any;

export { GetVirtualMachineRunCommandByVirtualMachineArgs, GetVirtualMachineRunCommandByVirtualMachineResult, GetVirtualMachineRunCommandByVirtualMachineOutputArgs } from "./getVirtualMachineRunCommandByVirtualMachine";
export const getVirtualMachineRunCommandByVirtualMachine: typeof import("./getVirtualMachineRunCommandByVirtualMachine").getVirtualMachineRunCommandByVirtualMachine = null as any;
export const getVirtualMachineRunCommandByVirtualMachineOutput: typeof import("./getVirtualMachineRunCommandByVirtualMachine").getVirtualMachineRunCommandByVirtualMachineOutput = null as any;

export { GetVirtualMachineScaleSetArgs, GetVirtualMachineScaleSetResult, GetVirtualMachineScaleSetOutputArgs } from "./getVirtualMachineScaleSet";
export const getVirtualMachineScaleSet: typeof import("./getVirtualMachineScaleSet").getVirtualMachineScaleSet = null as any;
export const getVirtualMachineScaleSetOutput: typeof import("./getVirtualMachineScaleSet").getVirtualMachineScaleSetOutput = null as any;

export { GetVirtualMachineScaleSetExtensionArgs, GetVirtualMachineScaleSetExtensionResult, GetVirtualMachineScaleSetExtensionOutputArgs } from "./getVirtualMachineScaleSetExtension";
export const getVirtualMachineScaleSetExtension: typeof import("./getVirtualMachineScaleSetExtension").getVirtualMachineScaleSetExtension = null as any;
export const getVirtualMachineScaleSetExtensionOutput: typeof import("./getVirtualMachineScaleSetExtension").getVirtualMachineScaleSetExtensionOutput = null as any;

export { GetVirtualMachineScaleSetVMArgs, GetVirtualMachineScaleSetVMResult, GetVirtualMachineScaleSetVMOutputArgs } from "./getVirtualMachineScaleSetVM";
export const getVirtualMachineScaleSetVM: typeof import("./getVirtualMachineScaleSetVM").getVirtualMachineScaleSetVM = null as any;
export const getVirtualMachineScaleSetVMOutput: typeof import("./getVirtualMachineScaleSetVM").getVirtualMachineScaleSetVMOutput = null as any;

export { GetVirtualMachineScaleSetVMExtensionArgs, GetVirtualMachineScaleSetVMExtensionResult, GetVirtualMachineScaleSetVMExtensionOutputArgs } from "./getVirtualMachineScaleSetVMExtension";
export const getVirtualMachineScaleSetVMExtension: typeof import("./getVirtualMachineScaleSetVMExtension").getVirtualMachineScaleSetVMExtension = null as any;
export const getVirtualMachineScaleSetVMExtensionOutput: typeof import("./getVirtualMachineScaleSetVMExtension").getVirtualMachineScaleSetVMExtensionOutput = null as any;

export { GetVirtualMachineScaleSetVMRunCommandArgs, GetVirtualMachineScaleSetVMRunCommandResult, GetVirtualMachineScaleSetVMRunCommandOutputArgs } from "./getVirtualMachineScaleSetVMRunCommand";
export const getVirtualMachineScaleSetVMRunCommand: typeof import("./getVirtualMachineScaleSetVMRunCommand").getVirtualMachineScaleSetVMRunCommand = null as any;
export const getVirtualMachineScaleSetVMRunCommandOutput: typeof import("./getVirtualMachineScaleSetVMRunCommand").getVirtualMachineScaleSetVMRunCommandOutput = null as any;

export { ImageArgs } from "./image";
export type Image = import("./image").Image;
export const Image: typeof import("./image").Image = null as any;

export { ProximityPlacementGroupArgs } from "./proximityPlacementGroup";
export type ProximityPlacementGroup = import("./proximityPlacementGroup").ProximityPlacementGroup;
export const ProximityPlacementGroup: typeof import("./proximityPlacementGroup").ProximityPlacementGroup = null as any;

export { RestorePointArgs } from "./restorePoint";
export type RestorePoint = import("./restorePoint").RestorePoint;
export const RestorePoint: typeof import("./restorePoint").RestorePoint = null as any;

export { RestorePointCollectionArgs } from "./restorePointCollection";
export type RestorePointCollection = import("./restorePointCollection").RestorePointCollection;
export const RestorePointCollection: typeof import("./restorePointCollection").RestorePointCollection = null as any;

export { SnapshotArgs } from "./snapshot";
export type Snapshot = import("./snapshot").Snapshot;
export const Snapshot: typeof import("./snapshot").Snapshot = null as any;

export { SshPublicKeyArgs } from "./sshPublicKey";
export type SshPublicKey = import("./sshPublicKey").SshPublicKey;
export const SshPublicKey: typeof import("./sshPublicKey").SshPublicKey = null as any;

export { VirtualMachineArgs } from "./virtualMachine";
export type VirtualMachine = import("./virtualMachine").VirtualMachine;
export const VirtualMachine: typeof import("./virtualMachine").VirtualMachine = null as any;

export { VirtualMachineExtensionArgs } from "./virtualMachineExtension";
export type VirtualMachineExtension = import("./virtualMachineExtension").VirtualMachineExtension;
export const VirtualMachineExtension: typeof import("./virtualMachineExtension").VirtualMachineExtension = null as any;

export { VirtualMachineRunCommandByVirtualMachineArgs } from "./virtualMachineRunCommandByVirtualMachine";
export type VirtualMachineRunCommandByVirtualMachine = import("./virtualMachineRunCommandByVirtualMachine").VirtualMachineRunCommandByVirtualMachine;
export const VirtualMachineRunCommandByVirtualMachine: typeof import("./virtualMachineRunCommandByVirtualMachine").VirtualMachineRunCommandByVirtualMachine = null as any;

export { VirtualMachineScaleSetArgs } from "./virtualMachineScaleSet";
export type VirtualMachineScaleSet = import("./virtualMachineScaleSet").VirtualMachineScaleSet;
export const VirtualMachineScaleSet: typeof import("./virtualMachineScaleSet").VirtualMachineScaleSet = null as any;

export { VirtualMachineScaleSetExtensionArgs } from "./virtualMachineScaleSetExtension";
export type VirtualMachineScaleSetExtension = import("./virtualMachineScaleSetExtension").VirtualMachineScaleSetExtension;
export const VirtualMachineScaleSetExtension: typeof import("./virtualMachineScaleSetExtension").VirtualMachineScaleSetExtension = null as any;

export { VirtualMachineScaleSetVMArgs } from "./virtualMachineScaleSetVM";
export type VirtualMachineScaleSetVM = import("./virtualMachineScaleSetVM").VirtualMachineScaleSetVM;
export const VirtualMachineScaleSetVM: typeof import("./virtualMachineScaleSetVM").VirtualMachineScaleSetVM = null as any;

export { VirtualMachineScaleSetVMExtensionArgs } from "./virtualMachineScaleSetVMExtension";
export type VirtualMachineScaleSetVMExtension = import("./virtualMachineScaleSetVMExtension").VirtualMachineScaleSetVMExtension;
export const VirtualMachineScaleSetVMExtension: typeof import("./virtualMachineScaleSetVMExtension").VirtualMachineScaleSetVMExtension = null as any;

export { VirtualMachineScaleSetVMRunCommandArgs } from "./virtualMachineScaleSetVMRunCommand";
export type VirtualMachineScaleSetVMRunCommand = import("./virtualMachineScaleSetVMRunCommand").VirtualMachineScaleSetVMRunCommand;
export const VirtualMachineScaleSetVMRunCommand: typeof import("./virtualMachineScaleSetVMRunCommand").VirtualMachineScaleSetVMRunCommand = null as any;

utilities.lazyLoad(exports, ["AvailabilitySet"], () => require("./availabilitySet"));
utilities.lazyLoad(exports, ["CapacityReservation"], () => require("./capacityReservation"));
utilities.lazyLoad(exports, ["CapacityReservationGroup"], () => require("./capacityReservationGroup"));
utilities.lazyLoad(exports, ["CloudService"], () => require("./cloudService"));
utilities.lazyLoad(exports, ["DedicatedHost"], () => require("./dedicatedHost"));
utilities.lazyLoad(exports, ["DedicatedHostGroup"], () => require("./dedicatedHostGroup"));
utilities.lazyLoad(exports, ["Disk"], () => require("./disk"));
utilities.lazyLoad(exports, ["DiskAccess"], () => require("./diskAccess"));
utilities.lazyLoad(exports, ["DiskAccessAPrivateEndpointConnection"], () => require("./diskAccessAPrivateEndpointConnection"));
utilities.lazyLoad(exports, ["DiskEncryptionSet"], () => require("./diskEncryptionSet"));
utilities.lazyLoad(exports, ["Gallery"], () => require("./gallery"));
utilities.lazyLoad(exports, ["GalleryApplication"], () => require("./galleryApplication"));
utilities.lazyLoad(exports, ["GalleryApplicationVersion"], () => require("./galleryApplicationVersion"));
utilities.lazyLoad(exports, ["GalleryImage"], () => require("./galleryImage"));
utilities.lazyLoad(exports, ["GalleryImageVersion"], () => require("./galleryImageVersion"));
utilities.lazyLoad(exports, ["getAvailabilitySet","getAvailabilitySetOutput"], () => require("./getAvailabilitySet"));
utilities.lazyLoad(exports, ["getCapacityReservation","getCapacityReservationOutput"], () => require("./getCapacityReservation"));
utilities.lazyLoad(exports, ["getCapacityReservationGroup","getCapacityReservationGroupOutput"], () => require("./getCapacityReservationGroup"));
utilities.lazyLoad(exports, ["getCloudService","getCloudServiceOutput"], () => require("./getCloudService"));
utilities.lazyLoad(exports, ["getDedicatedHost","getDedicatedHostOutput"], () => require("./getDedicatedHost"));
utilities.lazyLoad(exports, ["getDedicatedHostGroup","getDedicatedHostGroupOutput"], () => require("./getDedicatedHostGroup"));
utilities.lazyLoad(exports, ["getDisk","getDiskOutput"], () => require("./getDisk"));
utilities.lazyLoad(exports, ["getDiskAccess","getDiskAccessOutput"], () => require("./getDiskAccess"));
utilities.lazyLoad(exports, ["getDiskAccessAPrivateEndpointConnection","getDiskAccessAPrivateEndpointConnectionOutput"], () => require("./getDiskAccessAPrivateEndpointConnection"));
utilities.lazyLoad(exports, ["getDiskEncryptionSet","getDiskEncryptionSetOutput"], () => require("./getDiskEncryptionSet"));
utilities.lazyLoad(exports, ["getGallery","getGalleryOutput"], () => require("./getGallery"));
utilities.lazyLoad(exports, ["getGalleryApplication","getGalleryApplicationOutput"], () => require("./getGalleryApplication"));
utilities.lazyLoad(exports, ["getGalleryApplicationVersion","getGalleryApplicationVersionOutput"], () => require("./getGalleryApplicationVersion"));
utilities.lazyLoad(exports, ["getGalleryImage","getGalleryImageOutput"], () => require("./getGalleryImage"));
utilities.lazyLoad(exports, ["getGalleryImageVersion","getGalleryImageVersionOutput"], () => require("./getGalleryImageVersion"));
utilities.lazyLoad(exports, ["getImage","getImageOutput"], () => require("./getImage"));
utilities.lazyLoad(exports, ["getLogAnalyticExportRequestRateByInterval","getLogAnalyticExportRequestRateByIntervalOutput"], () => require("./getLogAnalyticExportRequestRateByInterval"));
utilities.lazyLoad(exports, ["getLogAnalyticExportThrottledRequests","getLogAnalyticExportThrottledRequestsOutput"], () => require("./getLogAnalyticExportThrottledRequests"));
utilities.lazyLoad(exports, ["getProximityPlacementGroup","getProximityPlacementGroupOutput"], () => require("./getProximityPlacementGroup"));
utilities.lazyLoad(exports, ["getRestorePoint","getRestorePointOutput"], () => require("./getRestorePoint"));
utilities.lazyLoad(exports, ["getRestorePointCollection","getRestorePointCollectionOutput"], () => require("./getRestorePointCollection"));
utilities.lazyLoad(exports, ["getSnapshot","getSnapshotOutput"], () => require("./getSnapshot"));
utilities.lazyLoad(exports, ["getSshPublicKey","getSshPublicKeyOutput"], () => require("./getSshPublicKey"));
utilities.lazyLoad(exports, ["getVirtualMachine","getVirtualMachineOutput"], () => require("./getVirtualMachine"));
utilities.lazyLoad(exports, ["getVirtualMachineExtension","getVirtualMachineExtensionOutput"], () => require("./getVirtualMachineExtension"));
utilities.lazyLoad(exports, ["getVirtualMachineRunCommandByVirtualMachine","getVirtualMachineRunCommandByVirtualMachineOutput"], () => require("./getVirtualMachineRunCommandByVirtualMachine"));
utilities.lazyLoad(exports, ["getVirtualMachineScaleSet","getVirtualMachineScaleSetOutput"], () => require("./getVirtualMachineScaleSet"));
utilities.lazyLoad(exports, ["getVirtualMachineScaleSetExtension","getVirtualMachineScaleSetExtensionOutput"], () => require("./getVirtualMachineScaleSetExtension"));
utilities.lazyLoad(exports, ["getVirtualMachineScaleSetVM","getVirtualMachineScaleSetVMOutput"], () => require("./getVirtualMachineScaleSetVM"));
utilities.lazyLoad(exports, ["getVirtualMachineScaleSetVMExtension","getVirtualMachineScaleSetVMExtensionOutput"], () => require("./getVirtualMachineScaleSetVMExtension"));
utilities.lazyLoad(exports, ["getVirtualMachineScaleSetVMRunCommand","getVirtualMachineScaleSetVMRunCommandOutput"], () => require("./getVirtualMachineScaleSetVMRunCommand"));
utilities.lazyLoad(exports, ["Image"], () => require("./image"));
utilities.lazyLoad(exports, ["ProximityPlacementGroup"], () => require("./proximityPlacementGroup"));
utilities.lazyLoad(exports, ["RestorePoint"], () => require("./restorePoint"));
utilities.lazyLoad(exports, ["RestorePointCollection"], () => require("./restorePointCollection"));
utilities.lazyLoad(exports, ["Snapshot"], () => require("./snapshot"));
utilities.lazyLoad(exports, ["SshPublicKey"], () => require("./sshPublicKey"));
utilities.lazyLoad(exports, ["VirtualMachine"], () => require("./virtualMachine"));
utilities.lazyLoad(exports, ["VirtualMachineExtension"], () => require("./virtualMachineExtension"));
utilities.lazyLoad(exports, ["VirtualMachineRunCommandByVirtualMachine"], () => require("./virtualMachineRunCommandByVirtualMachine"));
utilities.lazyLoad(exports, ["VirtualMachineScaleSet"], () => require("./virtualMachineScaleSet"));
utilities.lazyLoad(exports, ["VirtualMachineScaleSetExtension"], () => require("./virtualMachineScaleSetExtension"));
utilities.lazyLoad(exports, ["VirtualMachineScaleSetVM"], () => require("./virtualMachineScaleSetVM"));
utilities.lazyLoad(exports, ["VirtualMachineScaleSetVMExtension"], () => require("./virtualMachineScaleSetVMExtension"));
utilities.lazyLoad(exports, ["VirtualMachineScaleSetVMRunCommand"], () => require("./virtualMachineScaleSetVMRunCommand"));

// Export enums:
export * from "../types/enums/compute";

// Export sub-modules:
import * as v20150615 from "./v20150615";
import * as v20160330 from "./v20160330";
import * as v20160430preview from "./v20160430preview";
import * as v20170330 from "./v20170330";
import * as v20171201 from "./v20171201";
import * as v20180401 from "./v20180401";
import * as v20180601 from "./v20180601";
import * as v20180930 from "./v20180930";
import * as v20181001 from "./v20181001";
import * as v20190301 from "./v20190301";
import * as v20190701 from "./v20190701";
import * as v20191101 from "./v20191101";
import * as v20191201 from "./v20191201";
import * as v20200501 from "./v20200501";
import * as v20200601 from "./v20200601";
import * as v20200630 from "./v20200630";
import * as v20200930 from "./v20200930";
import * as v20201001preview from "./v20201001preview";
import * as v20201201 from "./v20201201";
import * as v20210301 from "./v20210301";
import * as v20210401 from "./v20210401";
import * as v20210701 from "./v20210701";
import * as v20210801 from "./v20210801";
import * as v20211001 from "./v20211001";
import * as v20211101 from "./v20211101";
import * as v20211201 from "./v20211201";
import * as v20220103 from "./v20220103";
import * as v20220301 from "./v20220301";
import * as v20220302 from "./v20220302";
import * as v20220404 from "./v20220404";

export {
    v20150615,
    v20160330,
    v20160430preview,
    v20170330,
    v20171201,
    v20180401,
    v20180601,
    v20180930,
    v20181001,
    v20190301,
    v20190701,
    v20191101,
    v20191201,
    v20200501,
    v20200601,
    v20200630,
    v20200930,
    v20201001preview,
    v20201201,
    v20210301,
    v20210401,
    v20210701,
    v20210801,
    v20211001,
    v20211101,
    v20211201,
    v20220103,
    v20220301,
    v20220302,
    v20220404,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:compute:AvailabilitySet":
                return new AvailabilitySet(name, <any>undefined, { urn })
            case "azure-native:compute:CapacityReservation":
                return new CapacityReservation(name, <any>undefined, { urn })
            case "azure-native:compute:CapacityReservationGroup":
                return new CapacityReservationGroup(name, <any>undefined, { urn })
            case "azure-native:compute:CloudService":
                return new CloudService(name, <any>undefined, { urn })
            case "azure-native:compute:DedicatedHost":
                return new DedicatedHost(name, <any>undefined, { urn })
            case "azure-native:compute:DedicatedHostGroup":
                return new DedicatedHostGroup(name, <any>undefined, { urn })
            case "azure-native:compute:Disk":
                return new Disk(name, <any>undefined, { urn })
            case "azure-native:compute:DiskAccess":
                return new DiskAccess(name, <any>undefined, { urn })
            case "azure-native:compute:DiskAccessAPrivateEndpointConnection":
                return new DiskAccessAPrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:compute:DiskEncryptionSet":
                return new DiskEncryptionSet(name, <any>undefined, { urn })
            case "azure-native:compute:Gallery":
                return new Gallery(name, <any>undefined, { urn })
            case "azure-native:compute:GalleryApplication":
                return new GalleryApplication(name, <any>undefined, { urn })
            case "azure-native:compute:GalleryApplicationVersion":
                return new GalleryApplicationVersion(name, <any>undefined, { urn })
            case "azure-native:compute:GalleryImage":
                return new GalleryImage(name, <any>undefined, { urn })
            case "azure-native:compute:GalleryImageVersion":
                return new GalleryImageVersion(name, <any>undefined, { urn })
            case "azure-native:compute:Image":
                return new Image(name, <any>undefined, { urn })
            case "azure-native:compute:ProximityPlacementGroup":
                return new ProximityPlacementGroup(name, <any>undefined, { urn })
            case "azure-native:compute:RestorePoint":
                return new RestorePoint(name, <any>undefined, { urn })
            case "azure-native:compute:RestorePointCollection":
                return new RestorePointCollection(name, <any>undefined, { urn })
            case "azure-native:compute:Snapshot":
                return new Snapshot(name, <any>undefined, { urn })
            case "azure-native:compute:SshPublicKey":
                return new SshPublicKey(name, <any>undefined, { urn })
            case "azure-native:compute:VirtualMachine":
                return new VirtualMachine(name, <any>undefined, { urn })
            case "azure-native:compute:VirtualMachineExtension":
                return new VirtualMachineExtension(name, <any>undefined, { urn })
            case "azure-native:compute:VirtualMachineRunCommandByVirtualMachine":
                return new VirtualMachineRunCommandByVirtualMachine(name, <any>undefined, { urn })
            case "azure-native:compute:VirtualMachineScaleSet":
                return new VirtualMachineScaleSet(name, <any>undefined, { urn })
            case "azure-native:compute:VirtualMachineScaleSetExtension":
                return new VirtualMachineScaleSetExtension(name, <any>undefined, { urn })
            case "azure-native:compute:VirtualMachineScaleSetVM":
                return new VirtualMachineScaleSetVM(name, <any>undefined, { urn })
            case "azure-native:compute:VirtualMachineScaleSetVMExtension":
                return new VirtualMachineScaleSetVMExtension(name, <any>undefined, { urn })
            case "azure-native:compute:VirtualMachineScaleSetVMRunCommand":
                return new VirtualMachineScaleSetVMRunCommand(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "compute", _module)
