// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * The operation to get the extension.
 */
/** @deprecated Version 2017-12-01 will be removed in v2 of the provider. */
export function getVirtualMachineExtension(args: GetVirtualMachineExtensionArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualMachineExtensionResult> {
    pulumi.log.warn("getVirtualMachineExtension is deprecated: Version 2017-12-01 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:compute/v20171201:getVirtualMachineExtension", {
        "expand": args.expand,
        "resourceGroupName": args.resourceGroupName,
        "vmExtensionName": args.vmExtensionName,
        "vmName": args.vmName,
    }, opts);
}

export interface GetVirtualMachineExtensionArgs {
    /**
     * The expand expression to apply on the operation.
     */
    expand?: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the virtual machine extension.
     */
    vmExtensionName: string;
    /**
     * The name of the virtual machine containing the extension.
     */
    vmName: string;
}

/**
 * Describes a Virtual Machine Extension.
 */
export interface GetVirtualMachineExtensionResult {
    /**
     * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
     */
    readonly autoUpgradeMinorVersion?: boolean;
    /**
     * How the extension handler should be forced to update even if the extension configuration has not changed.
     */
    readonly forceUpdateTag?: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * The virtual machine extension instance view.
     */
    readonly instanceView?: outputs.compute.v20171201.VirtualMachineExtensionInstanceViewResponse;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
     */
    readonly protectedSettings?: any;
    /**
     * The provisioning state, which only appears in the response.
     */
    readonly provisioningState: string;
    /**
     * The name of the extension handler publisher.
     */
    readonly publisher?: string;
    /**
     * Json formatted public settings for the extension.
     */
    readonly settings?: any;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type: string;
    /**
     * Specifies the version of the script handler.
     */
    readonly typeHandlerVersion?: string;
}
/**
 * The operation to get the extension.
 */
/** @deprecated Version 2017-12-01 will be removed in v2 of the provider. */
export function getVirtualMachineExtensionOutput(args: GetVirtualMachineExtensionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVirtualMachineExtensionResult> {
    return pulumi.output(args).apply((a: any) => getVirtualMachineExtension(a, opts))
}

export interface GetVirtualMachineExtensionOutputArgs {
    /**
     * The expand expression to apply on the operation.
     */
    expand?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the virtual machine extension.
     */
    vmExtensionName: pulumi.Input<string>;
    /**
     * The name of the virtual machine containing the extension.
     */
    vmName: pulumi.Input<string>;
}
