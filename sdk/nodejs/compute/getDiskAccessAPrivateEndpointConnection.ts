// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The Private Endpoint Connection resource.
 * API Version: 2020-09-30.
 */
export function getDiskAccessAPrivateEndpointConnection(args: GetDiskAccessAPrivateEndpointConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetDiskAccessAPrivateEndpointConnectionResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:compute:getDiskAccessAPrivateEndpointConnection", {
        "diskAccessName": args.diskAccessName,
        "privateEndpointConnectionName": args.privateEndpointConnectionName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetDiskAccessAPrivateEndpointConnectionArgs {
    /**
     * The name of the disk access resource that is being created. The name can't be changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     */
    readonly diskAccessName: string;
    /**
     * The name of the private endpoint connection
     */
    readonly privateEndpointConnectionName: string;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: string;
}

/**
 * The Private Endpoint Connection resource.
 */
export interface GetDiskAccessAPrivateEndpointConnectionResult {
    /**
     * private endpoint connection Id
     */
    readonly id: string;
    /**
     * private endpoint connection name
     */
    readonly name: string;
    /**
     * The resource of private end point.
     */
    readonly privateEndpoint?: outputs.compute.PrivateEndpointResponse;
    /**
     * A collection of information about the state of the connection between DiskAccess and Virtual Network.
     */
    readonly privateLinkServiceConnectionState: outputs.compute.PrivateLinkServiceConnectionStateResponse;
    /**
     * The provisioning state of the private endpoint connection resource.
     */
    readonly provisioningState: string;
    /**
     * private endpoint connection type
     */
    readonly type: string;
}
