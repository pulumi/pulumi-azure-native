// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Retrieves information about a gallery Image Definition.
 */
/** @deprecated Version 2019-03-01 will be removed in v2 of the provider. */
export function getGalleryImage(args: GetGalleryImageArgs, opts?: pulumi.InvokeOptions): Promise<GetGalleryImageResult> {
    pulumi.log.warn("getGalleryImage is deprecated: Version 2019-03-01 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:compute/v20190301:getGalleryImage", {
        "galleryImageName": args.galleryImageName,
        "galleryName": args.galleryName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetGalleryImageArgs {
    /**
     * The name of the gallery Image Definition to be retrieved.
     */
    galleryImageName: string;
    /**
     * The name of the Shared Image Gallery from which the Image Definitions are to be retrieved.
     */
    galleryName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}

/**
 * Specifies information about the gallery Image Definition that you want to create or update.
 */
export interface GetGalleryImageResult {
    /**
     * The description of this gallery Image Definition resource. This property is updatable.
     */
    readonly description?: string;
    /**
     * Describes the disallowed disk types.
     */
    readonly disallowed?: outputs.compute.v20190301.DisallowedResponse;
    /**
     * The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable.
     */
    readonly endOfLifeDate?: string;
    /**
     * The Eula agreement for the gallery Image Definition.
     */
    readonly eula?: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * This is the gallery Image Definition identifier.
     */
    readonly identifier: outputs.compute.v20190301.GalleryImageIdentifierResponse;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
     */
    readonly osState: string;
    /**
     * This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
     */
    readonly osType: string;
    /**
     * The privacy statement uri.
     */
    readonly privacyStatementUri?: string;
    /**
     * The provisioning state, which only appears in the response.
     */
    readonly provisioningState: string;
    /**
     * Describes the gallery Image Definition purchase plan. This is used by marketplace images.
     */
    readonly purchasePlan?: outputs.compute.v20190301.ImagePurchasePlanResponse;
    /**
     * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     */
    readonly recommended?: outputs.compute.v20190301.RecommendedMachineConfigurationResponse;
    /**
     * The release note uri.
     */
    readonly releaseNoteUri?: string;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type: string;
}
/**
 * Retrieves information about a gallery Image Definition.
 */
/** @deprecated Version 2019-03-01 will be removed in v2 of the provider. */
export function getGalleryImageOutput(args: GetGalleryImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGalleryImageResult> {
    return pulumi.output(args).apply((a: any) => getGalleryImage(a, opts))
}

export interface GetGalleryImageOutputArgs {
    /**
     * The name of the gallery Image Definition to be retrieved.
     */
    galleryImageName: pulumi.Input<string>;
    /**
     * The name of the Shared Image Gallery from which the Image Definitions are to be retrieved.
     */
    galleryName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
