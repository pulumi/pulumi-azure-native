// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Restore Point details.
 */
export class RestorePoint extends pulumi.CustomResource {
    /**
     * Get an existing RestorePoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RestorePoint {
        return new RestorePoint(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:compute/v20240301:RestorePoint';

    /**
     * Returns true if the given object is an instance of RestorePoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RestorePoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RestorePoint.__pulumiType;
    }

    /**
     * ConsistencyMode of the RestorePoint. Can be specified in the input while creating a restore point. For now, only CrashConsistent is accepted as a valid input. Please refer to https://aka.ms/RestorePoints for more details.
     */
    public readonly consistencyMode!: pulumi.Output<string | undefined>;
    /**
     * List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
     */
    public readonly excludeDisks!: pulumi.Output<outputs.compute.v20240301.ApiEntityReferenceResponse[] | undefined>;
    /**
     * The restore point instance view.
     */
    public /*out*/ readonly instanceView!: pulumi.Output<outputs.compute.v20240301.RestorePointInstanceViewResponse>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Gets the provisioning state of the restore point.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Gets the details of the VM captured at the time of the restore point creation.
     */
    public readonly sourceMetadata!: pulumi.Output<outputs.compute.v20240301.RestorePointSourceMetadataResponse | undefined>;
    /**
     * Resource Id of the source restore point from which a copy needs to be created.
     */
    public readonly sourceRestorePoint!: pulumi.Output<outputs.compute.v20240301.ApiEntityReferenceResponse | undefined>;
    /**
     * Gets the creation time of the restore point.
     */
    public readonly timeCreated!: pulumi.Output<string | undefined>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a RestorePoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RestorePointArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.restorePointCollectionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restorePointCollectionName'");
            }
            resourceInputs["consistencyMode"] = args ? args.consistencyMode : undefined;
            resourceInputs["excludeDisks"] = args ? args.excludeDisks : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["restorePointCollectionName"] = args ? args.restorePointCollectionName : undefined;
            resourceInputs["restorePointName"] = args ? args.restorePointName : undefined;
            resourceInputs["sourceMetadata"] = args ? args.sourceMetadata : undefined;
            resourceInputs["sourceRestorePoint"] = args ? args.sourceRestorePoint : undefined;
            resourceInputs["timeCreated"] = args ? args.timeCreated : undefined;
            resourceInputs["instanceView"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["consistencyMode"] = undefined /*out*/;
            resourceInputs["excludeDisks"] = undefined /*out*/;
            resourceInputs["instanceView"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["sourceMetadata"] = undefined /*out*/;
            resourceInputs["sourceRestorePoint"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:compute:RestorePoint" }, { type: "azure-native:compute/v20210301:RestorePoint" }, { type: "azure-native:compute/v20210401:RestorePoint" }, { type: "azure-native:compute/v20210701:RestorePoint" }, { type: "azure-native:compute/v20211101:RestorePoint" }, { type: "azure-native:compute/v20220301:RestorePoint" }, { type: "azure-native:compute/v20220801:RestorePoint" }, { type: "azure-native:compute/v20221101:RestorePoint" }, { type: "azure-native:compute/v20230301:RestorePoint" }, { type: "azure-native:compute/v20230701:RestorePoint" }, { type: "azure-native:compute/v20230901:RestorePoint" }, { type: "azure-native:compute/v20240701:RestorePoint" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(RestorePoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RestorePoint resource.
 */
export interface RestorePointArgs {
    /**
     * ConsistencyMode of the RestorePoint. Can be specified in the input while creating a restore point. For now, only CrashConsistent is accepted as a valid input. Please refer to https://aka.ms/RestorePoints for more details.
     */
    consistencyMode?: pulumi.Input<string | enums.compute.v20240301.ConsistencyModeTypes>;
    /**
     * List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
     */
    excludeDisks?: pulumi.Input<pulumi.Input<inputs.compute.v20240301.ApiEntityReferenceArgs>[]>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the restore point collection.
     */
    restorePointCollectionName: pulumi.Input<string>;
    /**
     * The name of the restore point.
     */
    restorePointName?: pulumi.Input<string>;
    /**
     * Gets the details of the VM captured at the time of the restore point creation.
     */
    sourceMetadata?: pulumi.Input<inputs.compute.v20240301.RestorePointSourceMetadataArgs>;
    /**
     * Resource Id of the source restore point from which a copy needs to be created.
     */
    sourceRestorePoint?: pulumi.Input<inputs.compute.v20240301.ApiEntityReferenceArgs>;
    /**
     * Gets the creation time of the restore point.
     */
    timeCreated?: pulumi.Input<string>;
}
