// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getRegistrationAssignment";
export * from "./getRegistrationDefinition";
export * from "./registrationAssignment";
export * from "./registrationDefinition";

// Export sub-modules:
import * as latest from "./latest";
import * as v20180601preview from "./v20180601preview";
import * as v20190401preview from "./v20190401preview";
import * as v20190601 from "./v20190601";
import * as v20190901 from "./v20190901";
import * as v20200201preview from "./v20200201preview";

export {
    latest,
    v20180601preview,
    v20190401preview,
    v20190601,
    v20190901,
    v20200201preview,
};

// Import resources to register:
import { RegistrationAssignment } from "./registrationAssignment";
import { RegistrationDefinition } from "./registrationDefinition";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:managedservices:RegistrationAssignment":
                return new RegistrationAssignment(name, <any>undefined, { urn })
            case "azure-nextgen:managedservices:RegistrationDefinition":
                return new RegistrationDefinition(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "managedservices", _module)
