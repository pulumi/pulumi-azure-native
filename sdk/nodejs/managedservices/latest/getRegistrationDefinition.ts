// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Registration definition.
 * Latest API Version: 2019-09-01.
 */
/** @deprecated The 'latest' version is deprecated. Please migrate to the function in the top-level module: 'azure-nextgen:managedservices:getRegistrationDefinition'. */
export function getRegistrationDefinition(args: GetRegistrationDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistrationDefinitionResult> {
    pulumi.log.warn("getRegistrationDefinition is deprecated: The 'latest' version is deprecated. Please migrate to the function in the top-level module: 'azure-nextgen:managedservices:getRegistrationDefinition'.")
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:managedservices/latest:getRegistrationDefinition", {
        "registrationDefinitionId": args.registrationDefinitionId,
        "scope": args.scope,
    }, opts);
}

export interface GetRegistrationDefinitionArgs {
    /**
     * Guid of the registration definition.
     */
    readonly registrationDefinitionId: string;
    /**
     * Scope of the resource.
     */
    readonly scope: string;
}

/**
 * Registration definition.
 */
export interface GetRegistrationDefinitionResult {
    /**
     * Fully qualified path of the registration definition.
     */
    readonly id: string;
    /**
     * Name of the registration definition.
     */
    readonly name: string;
    /**
     * Plan details for the managed services.
     */
    readonly plan?: outputs.managedservices.latest.PlanResponse;
    /**
     * Properties of a registration definition.
     */
    readonly properties: outputs.managedservices.latest.RegistrationDefinitionPropertiesResponse;
    /**
     * Type of the resource.
     */
    readonly type: string;
}
