// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Pipeline resource type.
 * API Version: 2018-06-01.
 */
export function getPipeline(args: GetPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:datafactory:getPipeline", {
        "factoryName": args.factoryName,
        "pipelineName": args.pipelineName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetPipelineArgs {
    /**
     * The factory name.
     */
    readonly factoryName: string;
    /**
     * The pipeline name.
     */
    readonly pipelineName: string;
    /**
     * The resource group name.
     */
    readonly resourceGroupName: string;
}

/**
 * Pipeline resource type.
 */
export interface GetPipelineResult {
    /**
     * List of activities in pipeline.
     */
    readonly activities?: outputs.datafactory.AppendVariableActivityResponse | outputs.datafactory.AzureDataExplorerCommandActivityResponse | outputs.datafactory.AzureFunctionActivityResponse | outputs.datafactory.AzureMLBatchExecutionActivityResponse | outputs.datafactory.AzureMLExecutePipelineActivityResponse | outputs.datafactory.AzureMLUpdateResourceActivityResponse | outputs.datafactory.ControlActivityResponse | outputs.datafactory.CopyActivityResponse | outputs.datafactory.CustomActivityResponse | outputs.datafactory.DataLakeAnalyticsUSQLActivityResponse | outputs.datafactory.DatabricksNotebookActivityResponse | outputs.datafactory.DatabricksSparkJarActivityResponse | outputs.datafactory.DatabricksSparkPythonActivityResponse | outputs.datafactory.DeleteActivityResponse | outputs.datafactory.ExecuteDataFlowActivityResponse | outputs.datafactory.ExecutePipelineActivityResponse | outputs.datafactory.ExecuteSSISPackageActivityResponse | outputs.datafactory.ExecutionActivityResponse | outputs.datafactory.FilterActivityResponse | outputs.datafactory.ForEachActivityResponse | outputs.datafactory.GetMetadataActivityResponse | outputs.datafactory.HDInsightHiveActivityResponse | outputs.datafactory.HDInsightMapReduceActivityResponse | outputs.datafactory.HDInsightPigActivityResponse | outputs.datafactory.HDInsightSparkActivityResponse | outputs.datafactory.HDInsightStreamingActivityResponse | outputs.datafactory.IfConditionActivityResponse | outputs.datafactory.LookupActivityResponse | outputs.datafactory.SetVariableActivityResponse | outputs.datafactory.SqlServerStoredProcedureActivityResponse | outputs.datafactory.SwitchActivityResponse | outputs.datafactory.UntilActivityResponse | outputs.datafactory.ValidationActivityResponse | outputs.datafactory.WaitActivityResponse | outputs.datafactory.WebActivityResponse | outputs.datafactory.WebHookActivityResponse[];
    /**
     * List of tags that can be used for describing the Pipeline.
     */
    readonly annotations?: any[];
    /**
     * The max number of concurrent runs for the pipeline.
     */
    readonly concurrency?: number;
    /**
     * The description of the pipeline.
     */
    readonly description?: string;
    /**
     * Etag identifies change in the resource.
     */
    readonly etag: string;
    /**
     * The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
     */
    readonly folder?: outputs.datafactory.PipelineResponseFolder;
    /**
     * The resource identifier.
     */
    readonly id: string;
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * List of parameters for pipeline.
     */
    readonly parameters?: {[key: string]: outputs.datafactory.ParameterSpecificationResponse};
    /**
     * Pipeline Policy.
     */
    readonly policy?: outputs.datafactory.PipelinePolicyResponse;
    /**
     * Dimensions emitted by Pipeline.
     */
    readonly runDimensions?: {[key: string]: any};
    /**
     * The resource type.
     */
    readonly type: string;
    /**
     * List of variables for pipeline.
     */
    readonly variables?: {[key: string]: outputs.datafactory.VariableSpecificationResponse};
}
