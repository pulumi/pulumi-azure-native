// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { FactoryArgs } from "./factory";
export type Factory = import("./factory").Factory;
export const Factory: typeof import("./factory").Factory = null as any;
utilities.lazyLoad(exports, ["Factory"], () => require("./factory"));

export { GetFactoryArgs, GetFactoryResult, GetFactoryOutputArgs } from "./getFactory";
export const getFactory: typeof import("./getFactory").getFactory = null as any;
export const getFactoryOutput: typeof import("./getFactory").getFactoryOutput = null as any;
utilities.lazyLoad(exports, ["getFactory","getFactoryOutput"], () => require("./getFactory"));


// Export enums:
export * from "../../types/enums/datafactory/v20170901preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:datafactory/v20170901preview:Factory":
                return new Factory(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "datafactory/v20170901preview", _module)
