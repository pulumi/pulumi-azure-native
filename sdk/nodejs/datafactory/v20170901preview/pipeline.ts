// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Pipeline resource type.
 */
export class Pipeline extends pulumi.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Pipeline {
        return new Pipeline(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:datafactory/v20170901preview:Pipeline';

    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Pipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Pipeline.__pulumiType;
    }

    /**
     * List of activities in pipeline.
     */
    public readonly activities!: pulumi.Output<outputs.datafactory.v20170901preview.ControlActivityResponse | outputs.datafactory.v20170901preview.ExecutionActivityResponse[] | undefined>;
    /**
     * List of tags that can be used for describing the Pipeline.
     */
    public readonly annotations!: pulumi.Output<any[] | undefined>;
    /**
     * The max number of concurrent runs for the pipeline.
     */
    public readonly concurrency!: pulumi.Output<number | undefined>;
    /**
     * The description of the pipeline.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Etag identifies change in the resource.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * List of parameters for pipeline.
     */
    public readonly parameters!: pulumi.Output<{[key: string]: outputs.datafactory.v20170901preview.ParameterSpecificationResponse} | undefined>;
    /**
     * The resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PipelineArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.factoryName === undefined) {
                throw new Error("Missing required property 'factoryName'");
            }
            if (!args || args.pipelineName === undefined) {
                throw new Error("Missing required property 'pipelineName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["activities"] = args ? args.activities : undefined;
            inputs["annotations"] = args ? args.annotations : undefined;
            inputs["concurrency"] = args ? args.concurrency : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["factoryName"] = args ? args.factoryName : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["pipelineName"] = args ? args.pipelineName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["activities"] = undefined /*out*/;
            inputs["annotations"] = undefined /*out*/;
            inputs["concurrency"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["parameters"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:datafactory/latest:Pipeline" }, { type: "azure-nextgen:datafactory/v20180601:Pipeline" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(Pipeline.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Pipeline resource.
 */
export interface PipelineArgs {
    /**
     * List of activities in pipeline.
     */
    readonly activities?: pulumi.Input<pulumi.Input<inputs.datafactory.v20170901preview.ControlActivity | inputs.datafactory.v20170901preview.ExecutionActivity>[]>;
    /**
     * List of tags that can be used for describing the Pipeline.
     */
    readonly annotations?: pulumi.Input<any[]>;
    /**
     * The max number of concurrent runs for the pipeline.
     */
    readonly concurrency?: pulumi.Input<number>;
    /**
     * The description of the pipeline.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The factory name.
     */
    readonly factoryName: pulumi.Input<string>;
    /**
     * List of parameters for pipeline.
     */
    readonly parameters?: pulumi.Input<{[key: string]: pulumi.Input<inputs.datafactory.v20170901preview.ParameterSpecification>}>;
    /**
     * The pipeline name.
     */
    readonly pipelineName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    readonly resourceGroupName: pulumi.Input<string>;
}
