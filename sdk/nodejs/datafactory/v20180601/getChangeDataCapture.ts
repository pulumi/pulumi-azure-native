// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a change data capture.
 */
export function getChangeDataCapture(args: GetChangeDataCaptureArgs, opts?: pulumi.InvokeOptions): Promise<GetChangeDataCaptureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:datafactory/v20180601:getChangeDataCapture", {
        "changeDataCaptureName": args.changeDataCaptureName,
        "factoryName": args.factoryName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetChangeDataCaptureArgs {
    /**
     * The change data capture name.
     */
    changeDataCaptureName: string;
    /**
     * The factory name.
     */
    factoryName: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
}

/**
 * Change data capture resource type.
 */
export interface GetChangeDataCaptureResult {
    /**
     * A boolean to determine if the vnet configuration needs to be overwritten.
     */
    readonly allowVNetOverride?: boolean;
    /**
     * The description of the change data capture.
     */
    readonly description?: string;
    /**
     * Etag identifies change in the resource.
     */
    readonly etag: string;
    /**
     * The folder that this CDC is in. If not specified, CDC will appear at the root level.
     */
    readonly folder?: outputs.datafactory.v20180601.ChangeDataCaptureResponseFolder;
    /**
     * The resource identifier.
     */
    readonly id: string;
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * CDC policy
     */
    readonly policy: outputs.datafactory.v20180601.MapperPolicyResponse;
    /**
     * List of sources connections that can be used as sources in the CDC.
     */
    readonly sourceConnectionsInfo: outputs.datafactory.v20180601.MapperSourceConnectionsInfoResponse[];
    /**
     * Status of the CDC as to if it is running or stopped.
     */
    readonly status?: string;
    /**
     * List of target connections that can be used as sources in the CDC.
     */
    readonly targetConnectionsInfo: outputs.datafactory.v20180601.MapperTargetConnectionsInfoResponse[];
    /**
     * The resource type.
     */
    readonly type: string;
}
/**
 * Gets a change data capture.
 */
export function getChangeDataCaptureOutput(args: GetChangeDataCaptureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetChangeDataCaptureResult> {
    return pulumi.output(args).apply((a: any) => getChangeDataCapture(a, opts))
}

export interface GetChangeDataCaptureOutputArgs {
    /**
     * The change data capture name.
     */
    changeDataCaptureName: pulumi.Input<string>;
    /**
     * The factory name.
     */
    factoryName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
}
