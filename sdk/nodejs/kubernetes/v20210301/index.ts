// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ConnectedClusterArgs } from "./connectedCluster";
export type ConnectedCluster = import("./connectedCluster").ConnectedCluster;
export const ConnectedCluster: typeof import("./connectedCluster").ConnectedCluster = null as any;
utilities.lazyLoad(exports, ["ConnectedCluster"], () => require("./connectedCluster"));

export { GetConnectedClusterArgs, GetConnectedClusterResult, GetConnectedClusterOutputArgs } from "./getConnectedCluster";
export const getConnectedCluster: typeof import("./getConnectedCluster").getConnectedCluster = null as any;
export const getConnectedClusterOutput: typeof import("./getConnectedCluster").getConnectedClusterOutput = null as any;
utilities.lazyLoad(exports, ["getConnectedCluster","getConnectedClusterOutput"], () => require("./getConnectedCluster"));


// Export enums:
export * from "../../types/enums/kubernetes/v20210301";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:kubernetes/v20210301:ConnectedCluster":
                return new ConnectedCluster(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "kubernetes/v20210301", _module)
