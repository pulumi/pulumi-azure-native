// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConnectedClusterArgs } from "./connectedCluster";
export type ConnectedCluster = import("./connectedCluster").ConnectedCluster;
export const ConnectedCluster: typeof import("./connectedCluster").ConnectedCluster = null as any;
utilities.lazyLoad(exports, ["ConnectedCluster"], () => require("./connectedCluster"));

export { GetConnectedClusterArgs, GetConnectedClusterResult, GetConnectedClusterOutputArgs } from "./getConnectedCluster";
export const getConnectedCluster: typeof import("./getConnectedCluster").getConnectedCluster = null as any;
export const getConnectedClusterOutput: typeof import("./getConnectedCluster").getConnectedClusterOutput = null as any;
utilities.lazyLoad(exports, ["getConnectedCluster","getConnectedClusterOutput"], () => require("./getConnectedCluster"));

export { ListConnectedClusterUserCredentialArgs, ListConnectedClusterUserCredentialResult, ListConnectedClusterUserCredentialOutputArgs } from "./listConnectedClusterUserCredential";
export const listConnectedClusterUserCredential: typeof import("./listConnectedClusterUserCredential").listConnectedClusterUserCredential = null as any;
export const listConnectedClusterUserCredentialOutput: typeof import("./listConnectedClusterUserCredential").listConnectedClusterUserCredentialOutput = null as any;
utilities.lazyLoad(exports, ["listConnectedClusterUserCredential","listConnectedClusterUserCredentialOutput"], () => require("./listConnectedClusterUserCredential"));

export { ListConnectedClusterUserCredentialsArgs, ListConnectedClusterUserCredentialsResult, ListConnectedClusterUserCredentialsOutputArgs } from "./listConnectedClusterUserCredentials";
export const listConnectedClusterUserCredentials: typeof import("./listConnectedClusterUserCredentials").listConnectedClusterUserCredentials = null as any;
export const listConnectedClusterUserCredentialsOutput: typeof import("./listConnectedClusterUserCredentials").listConnectedClusterUserCredentialsOutput = null as any;
utilities.lazyLoad(exports, ["listConnectedClusterUserCredentials","listConnectedClusterUserCredentialsOutput"], () => require("./listConnectedClusterUserCredentials"));


// Export enums:
export * from "../types/enums/kubernetes";

// Export sub-modules:
import * as v20210401preview from "./v20210401preview";
import * as v20220501preview from "./v20220501preview";
import * as v20221001preview from "./v20221001preview";
import * as v20231101preview from "./v20231101preview";
import * as v20240101 from "./v20240101";
import * as v20240201preview from "./v20240201preview";
import * as v20240601preview from "./v20240601preview";
import * as v20240701preview from "./v20240701preview";
import * as v20240715preview from "./v20240715preview";

export {
    v20210401preview,
    v20220501preview,
    v20221001preview,
    v20231101preview,
    v20240101,
    v20240201preview,
    v20240601preview,
    v20240701preview,
    v20240715preview,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:kubernetes:ConnectedCluster":
                return new ConnectedCluster(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "kubernetes", _module)
