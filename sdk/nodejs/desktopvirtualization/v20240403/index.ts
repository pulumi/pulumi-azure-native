// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ApplicationGroupArgs } from "./applicationGroup";
export type ApplicationGroup = import("./applicationGroup").ApplicationGroup;
export const ApplicationGroup: typeof import("./applicationGroup").ApplicationGroup = null as any;
utilities.lazyLoad(exports, ["ApplicationGroup"], () => require("./applicationGroup"));

export { GetApplicationGroupArgs, GetApplicationGroupResult, GetApplicationGroupOutputArgs } from "./getApplicationGroup";
export const getApplicationGroup: typeof import("./getApplicationGroup").getApplicationGroup = null as any;
export const getApplicationGroupOutput: typeof import("./getApplicationGroup").getApplicationGroupOutput = null as any;
utilities.lazyLoad(exports, ["getApplicationGroup","getApplicationGroupOutput"], () => require("./getApplicationGroup"));

export { GetHostPoolArgs, GetHostPoolResult, GetHostPoolOutputArgs } from "./getHostPool";
export const getHostPool: typeof import("./getHostPool").getHostPool = null as any;
export const getHostPoolOutput: typeof import("./getHostPool").getHostPoolOutput = null as any;
utilities.lazyLoad(exports, ["getHostPool","getHostPoolOutput"], () => require("./getHostPool"));

export { GetHostPoolRegistrationTokenArgs, GetHostPoolRegistrationTokenResult, GetHostPoolRegistrationTokenOutputArgs } from "./getHostPoolRegistrationToken";
export const getHostPoolRegistrationToken: typeof import("./getHostPoolRegistrationToken").getHostPoolRegistrationToken = null as any;
export const getHostPoolRegistrationTokenOutput: typeof import("./getHostPoolRegistrationToken").getHostPoolRegistrationTokenOutput = null as any;
utilities.lazyLoad(exports, ["getHostPoolRegistrationToken","getHostPoolRegistrationTokenOutput"], () => require("./getHostPoolRegistrationToken"));

export { GetScalingPlanArgs, GetScalingPlanResult, GetScalingPlanOutputArgs } from "./getScalingPlan";
export const getScalingPlan: typeof import("./getScalingPlan").getScalingPlan = null as any;
export const getScalingPlanOutput: typeof import("./getScalingPlan").getScalingPlanOutput = null as any;
utilities.lazyLoad(exports, ["getScalingPlan","getScalingPlanOutput"], () => require("./getScalingPlan"));

export { GetWorkspaceArgs, GetWorkspaceResult, GetWorkspaceOutputArgs } from "./getWorkspace";
export const getWorkspace: typeof import("./getWorkspace").getWorkspace = null as any;
export const getWorkspaceOutput: typeof import("./getWorkspace").getWorkspaceOutput = null as any;
utilities.lazyLoad(exports, ["getWorkspace","getWorkspaceOutput"], () => require("./getWorkspace"));

export { HostPoolArgs } from "./hostPool";
export type HostPool = import("./hostPool").HostPool;
export const HostPool: typeof import("./hostPool").HostPool = null as any;
utilities.lazyLoad(exports, ["HostPool"], () => require("./hostPool"));

export { ListHostPoolRegistrationTokensArgs, ListHostPoolRegistrationTokensResult, ListHostPoolRegistrationTokensOutputArgs } from "./listHostPoolRegistrationTokens";
export const listHostPoolRegistrationTokens: typeof import("./listHostPoolRegistrationTokens").listHostPoolRegistrationTokens = null as any;
export const listHostPoolRegistrationTokensOutput: typeof import("./listHostPoolRegistrationTokens").listHostPoolRegistrationTokensOutput = null as any;
utilities.lazyLoad(exports, ["listHostPoolRegistrationTokens","listHostPoolRegistrationTokensOutput"], () => require("./listHostPoolRegistrationTokens"));

export { ScalingPlanArgs } from "./scalingPlan";
export type ScalingPlan = import("./scalingPlan").ScalingPlan;
export const ScalingPlan: typeof import("./scalingPlan").ScalingPlan = null as any;
utilities.lazyLoad(exports, ["ScalingPlan"], () => require("./scalingPlan"));

export { WorkspaceArgs } from "./workspace";
export type Workspace = import("./workspace").Workspace;
export const Workspace: typeof import("./workspace").Workspace = null as any;
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));


// Export enums:
export * from "../../types/enums/desktopvirtualization/v20240403";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:desktopvirtualization/v20240403:ApplicationGroup":
                return new ApplicationGroup(name, <any>undefined, { urn })
            case "azure-native:desktopvirtualization/v20240403:HostPool":
                return new HostPool(name, <any>undefined, { urn })
            case "azure-native:desktopvirtualization/v20240403:ScalingPlan":
                return new ScalingPlan(name, <any>undefined, { urn })
            case "azure-native:desktopvirtualization/v20240403:Workspace":
                return new Workspace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "desktopvirtualization/v20240403", _module)
