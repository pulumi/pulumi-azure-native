// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Represents a scaling plan definition.
 */
export class ScalingPlan extends pulumi.CustomResource {
    /**
     * Get an existing ScalingPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScalingPlan {
        return new ScalingPlan(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:desktopvirtualization/v20210114preview:ScalingPlan';

    /**
     * Returns true if the given object is an instance of ScalingPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalingPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalingPlan.__pulumiType;
    }

    /**
     * Description of scaling plan.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Exclusion tag for scaling plan.
     */
    public readonly exclusionTag!: pulumi.Output<string | undefined>;
    /**
     * User friendly name of scaling plan.
     */
    public readonly friendlyName!: pulumi.Output<string | undefined>;
    /**
     * List of ScalingHostPoolReference definitions.
     */
    public readonly hostPoolReferences!: pulumi.Output<outputs.desktopvirtualization.v20210114preview.ScalingHostPoolReferenceResponse[] | undefined>;
    /**
     * HostPool type for scaling plan.
     */
    public readonly hostPoolType!: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * List of ScalingSchedule definitions.
     */
    public readonly schedules!: pulumi.Output<outputs.desktopvirtualization.v20210114preview.ScalingScheduleResponse[] | undefined>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Timezone of the scaling plan.
     */
    public readonly timeZone!: pulumi.Output<string | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ScalingPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalingPlanArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if ((!args || args.resourceGroupName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["exclusionTag"] = args ? args.exclusionTag : undefined;
            inputs["friendlyName"] = args ? args.friendlyName : undefined;
            inputs["hostPoolReferences"] = args ? args.hostPoolReferences : undefined;
            inputs["hostPoolType"] = args ? args.hostPoolType : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["scalingPlanName"] = args ? args.scalingPlanName : undefined;
            inputs["schedules"] = args ? args.schedules : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["timeZone"] = args ? args.timeZone : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["description"] = undefined /*out*/;
            inputs["exclusionTag"] = undefined /*out*/;
            inputs["friendlyName"] = undefined /*out*/;
            inputs["hostPoolReferences"] = undefined /*out*/;
            inputs["hostPoolType"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["schedules"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["timeZone"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:desktopvirtualization:ScalingPlan" }, { type: "azure-nextgen:desktopvirtualization/v20201110preview:ScalingPlan" }, { type: "azure-nextgen:desktopvirtualization/v20210201preview:ScalingPlan" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(ScalingPlan.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ScalingPlan resource.
 */
export interface ScalingPlanArgs {
    /**
     * Description of scaling plan.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Exclusion tag for scaling plan.
     */
    readonly exclusionTag?: pulumi.Input<string>;
    /**
     * User friendly name of scaling plan.
     */
    readonly friendlyName?: pulumi.Input<string>;
    /**
     * List of ScalingHostPoolReference definitions.
     */
    readonly hostPoolReferences?: pulumi.Input<pulumi.Input<inputs.desktopvirtualization.v20210114preview.ScalingHostPoolReference>[]>;
    /**
     * HostPool type for scaling plan.
     */
    readonly hostPoolType?: pulumi.Input<string | enums.desktopvirtualization.v20210114preview.HostPoolType>;
    /**
     * The geo-location where the resource lives
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the scaling plan.
     */
    readonly scalingPlanName?: pulumi.Input<string>;
    /**
     * List of ScalingSchedule definitions.
     */
    readonly schedules?: pulumi.Input<pulumi.Input<inputs.desktopvirtualization.v20210114preview.ScalingSchedule>[]>;
    /**
     * Resource tags.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Timezone of the scaling plan.
     */
    readonly timeZone?: pulumi.Input<string>;
}
