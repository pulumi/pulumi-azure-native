// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Represents a scaling plan definition.
 * API Version: 2021-02-01-preview.
 */
export class ScalingPlan extends pulumi.CustomResource {
    /**
     * Get an existing ScalingPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScalingPlan {
        return new ScalingPlan(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:desktopvirtualization:ScalingPlan';

    /**
     * Returns true if the given object is an instance of ScalingPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalingPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalingPlan.__pulumiType;
    }

    /**
     * Description of scaling plan.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. 
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Exclusion tag for scaling plan.
     */
    public readonly exclusionTag!: pulumi.Output<string | undefined>;
    /**
     * User friendly name of scaling plan.
     */
    public readonly friendlyName!: pulumi.Output<string | undefined>;
    /**
     * List of ScalingHostPoolReference definitions.
     */
    public readonly hostPoolReferences!: pulumi.Output<outputs.desktopvirtualization.ScalingHostPoolReferenceResponse[] | undefined>;
    /**
     * HostPool type for desktop.
     */
    public readonly hostPoolType!: pulumi.Output<string | undefined>;
    public readonly identity!: pulumi.Output<outputs.desktopvirtualization.ResourceModelWithAllowedPropertySetResponseIdentity | undefined>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     */
    public readonly managedBy!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * ObjectId of scaling plan. (internal use)
     */
    public /*out*/ readonly objectId!: pulumi.Output<string>;
    public readonly plan!: pulumi.Output<outputs.desktopvirtualization.ResourceModelWithAllowedPropertySetResponsePlan | undefined>;
    /**
     * The ring number of scaling plan.
     */
    public readonly ring!: pulumi.Output<number | undefined>;
    /**
     * List of ScalingSchedule definitions.
     */
    public readonly schedules!: pulumi.Output<outputs.desktopvirtualization.ScalingScheduleResponse[] | undefined>;
    public readonly sku!: pulumi.Output<outputs.desktopvirtualization.ResourceModelWithAllowedPropertySetResponseSku | undefined>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Timezone of the scaling plan.
     */
    public readonly timeZone!: pulumi.Output<string | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ScalingPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalingPlanArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["exclusionTag"] = args ? args.exclusionTag : undefined;
            inputs["friendlyName"] = args ? args.friendlyName : undefined;
            inputs["hostPoolReferences"] = args ? args.hostPoolReferences : undefined;
            inputs["hostPoolType"] = args ? args.hostPoolType : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["managedBy"] = args ? args.managedBy : undefined;
            inputs["plan"] = args ? args.plan : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["ring"] = args ? args.ring : undefined;
            inputs["scalingPlanName"] = args ? args.scalingPlanName : undefined;
            inputs["schedules"] = args ? args.schedules : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["timeZone"] = args ? args.timeZone : undefined;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["objectId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["description"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["exclusionTag"] = undefined /*out*/;
            inputs["friendlyName"] = undefined /*out*/;
            inputs["hostPoolReferences"] = undefined /*out*/;
            inputs["hostPoolType"] = undefined /*out*/;
            inputs["identity"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["managedBy"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["objectId"] = undefined /*out*/;
            inputs["plan"] = undefined /*out*/;
            inputs["ring"] = undefined /*out*/;
            inputs["schedules"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["timeZone"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:desktopvirtualization:ScalingPlan" }, { type: "azure-native:desktopvirtualization/v20201110preview:ScalingPlan" }, { type: "azure-nextgen:desktopvirtualization/v20201110preview:ScalingPlan" }, { type: "azure-native:desktopvirtualization/v20210114preview:ScalingPlan" }, { type: "azure-nextgen:desktopvirtualization/v20210114preview:ScalingPlan" }, { type: "azure-native:desktopvirtualization/v20210201preview:ScalingPlan" }, { type: "azure-nextgen:desktopvirtualization/v20210201preview:ScalingPlan" }, { type: "azure-native:desktopvirtualization/v20210309preview:ScalingPlan" }, { type: "azure-nextgen:desktopvirtualization/v20210309preview:ScalingPlan" }, { type: "azure-native:desktopvirtualization/v20210401preview:ScalingPlan" }, { type: "azure-nextgen:desktopvirtualization/v20210401preview:ScalingPlan" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ScalingPlan.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ScalingPlan resource.
 */
export interface ScalingPlanArgs {
    /**
     * Description of scaling plan.
     */
    description?: pulumi.Input<string>;
    /**
     * Exclusion tag for scaling plan.
     */
    exclusionTag?: pulumi.Input<string>;
    /**
     * User friendly name of scaling plan.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * List of ScalingHostPoolReference definitions.
     */
    hostPoolReferences?: pulumi.Input<pulumi.Input<inputs.desktopvirtualization.ScalingHostPoolReferenceArgs>[]>;
    /**
     * HostPool type for desktop.
     */
    hostPoolType?: pulumi.Input<string | enums.desktopvirtualization.HostPoolType>;
    identity?: pulumi.Input<inputs.desktopvirtualization.ResourceModelWithAllowedPropertySetIdentityArgs>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    kind?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     */
    managedBy?: pulumi.Input<string>;
    plan?: pulumi.Input<inputs.desktopvirtualization.ResourceModelWithAllowedPropertySetPlanArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The ring number of scaling plan.
     */
    ring?: pulumi.Input<number>;
    /**
     * The name of the scaling plan.
     */
    scalingPlanName?: pulumi.Input<string>;
    /**
     * List of ScalingSchedule definitions.
     */
    schedules?: pulumi.Input<pulumi.Input<inputs.desktopvirtualization.ScalingScheduleArgs>[]>;
    sku?: pulumi.Input<inputs.desktopvirtualization.ResourceModelWithAllowedPropertySetSkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Timezone of the scaling plan.
     */
    timeZone?: pulumi.Input<string>;
}
