// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Schema for MSIX Package properties.
 *
 * Uses Azure REST API version 2024-04-03. In version 2.x of the Azure Native provider, it used API version 2022-09-09.
 *
 * Other available API versions: 2022-09-09, 2022-10-14-preview, 2023-09-05, 2023-10-04-preview, 2023-11-01-preview, 2024-01-16-preview, 2024-03-06-preview, 2024-04-08-preview, 2024-08-08-preview, 2024-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native desktopvirtualization [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class MSIXPackage extends pulumi.CustomResource {
    /**
     * Get an existing MSIXPackage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MSIXPackage {
        return new MSIXPackage(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:desktopvirtualization:MSIXPackage';

    /**
     * Returns true if the given object is an instance of MSIXPackage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MSIXPackage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MSIXPackage.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * User friendly Name to be displayed in the portal. 
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * VHD/CIM image path on Network Share.
     */
    public readonly imagePath!: pulumi.Output<string | undefined>;
    /**
     * Make this version of the package the active one across the hostpool. 
     */
    public readonly isActive!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies how to register Package in feed.
     */
    public readonly isRegularRegistration!: pulumi.Output<boolean | undefined>;
    /**
     * Date Package was last updated, found in the appxmanifest.xml. 
     */
    public readonly lastUpdated!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * List of package applications. 
     */
    public readonly packageApplications!: pulumi.Output<outputs.desktopvirtualization.MsixPackageApplicationsResponse[] | undefined>;
    /**
     * List of package dependencies. 
     */
    public readonly packageDependencies!: pulumi.Output<outputs.desktopvirtualization.MsixPackageDependenciesResponse[] | undefined>;
    /**
     * Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. 
     */
    public readonly packageFamilyName!: pulumi.Output<string | undefined>;
    /**
     * Package Name from appxmanifest.xml. 
     */
    public readonly packageName!: pulumi.Output<string | undefined>;
    /**
     * Relative Path to the package inside the image. 
     */
    public readonly packageRelativePath!: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.desktopvirtualization.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Package version found in the appxmanifest.xml. 
     */
    public readonly version!: pulumi.Output<string | undefined>;

    /**
     * Create a MSIXPackage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MSIXPackageArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.hostPoolName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostPoolName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["hostPoolName"] = args ? args.hostPoolName : undefined;
            resourceInputs["imagePath"] = args ? args.imagePath : undefined;
            resourceInputs["isActive"] = args ? args.isActive : undefined;
            resourceInputs["isRegularRegistration"] = args ? args.isRegularRegistration : undefined;
            resourceInputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            resourceInputs["msixPackageFullName"] = args ? args.msixPackageFullName : undefined;
            resourceInputs["packageApplications"] = args ? args.packageApplications : undefined;
            resourceInputs["packageDependencies"] = args ? args.packageDependencies : undefined;
            resourceInputs["packageFamilyName"] = args ? args.packageFamilyName : undefined;
            resourceInputs["packageName"] = args ? args.packageName : undefined;
            resourceInputs["packageRelativePath"] = args ? args.packageRelativePath : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["imagePath"] = undefined /*out*/;
            resourceInputs["isActive"] = undefined /*out*/;
            resourceInputs["isRegularRegistration"] = undefined /*out*/;
            resourceInputs["lastUpdated"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["packageApplications"] = undefined /*out*/;
            resourceInputs["packageDependencies"] = undefined /*out*/;
            resourceInputs["packageFamilyName"] = undefined /*out*/;
            resourceInputs["packageName"] = undefined /*out*/;
            resourceInputs["packageRelativePath"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:desktopvirtualization/v20220909:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20221014preview:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20230707preview:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20230905:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20231004preview:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20231101preview:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20240116preview:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20240306preview:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20240403:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20240408preview:MSIXPackage" }, { type: "azure-native:desktopvirtualization/v20240808preview:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20200921preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20201019preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20201102preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20201110preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20210114preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20210201preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20210309preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20210401preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20210712:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20210903preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20220210preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20220401preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20220909:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20221014preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20230905:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20231004preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20231101preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20240116preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20240306preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20240403:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20240408preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20240808preview:desktopvirtualization:MSIXPackage" }, { type: "azure-native_desktopvirtualization_v20241101preview:desktopvirtualization:MSIXPackage" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(MSIXPackage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a MSIXPackage resource.
 */
export interface MSIXPackageArgs {
    /**
     * User friendly Name to be displayed in the portal. 
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the host pool within the specified resource group
     */
    hostPoolName: pulumi.Input<string>;
    /**
     * VHD/CIM image path on Network Share.
     */
    imagePath?: pulumi.Input<string>;
    /**
     * Make this version of the package the active one across the hostpool. 
     */
    isActive?: pulumi.Input<boolean>;
    /**
     * Specifies how to register Package in feed.
     */
    isRegularRegistration?: pulumi.Input<boolean>;
    /**
     * Date Package was last updated, found in the appxmanifest.xml. 
     */
    lastUpdated?: pulumi.Input<string>;
    /**
     * The version specific package full name of the MSIX package within specified hostpool
     */
    msixPackageFullName?: pulumi.Input<string>;
    /**
     * List of package applications. 
     */
    packageApplications?: pulumi.Input<pulumi.Input<inputs.desktopvirtualization.MsixPackageApplicationsArgs>[]>;
    /**
     * List of package dependencies. 
     */
    packageDependencies?: pulumi.Input<pulumi.Input<inputs.desktopvirtualization.MsixPackageDependenciesArgs>[]>;
    /**
     * Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. 
     */
    packageFamilyName?: pulumi.Input<string>;
    /**
     * Package Name from appxmanifest.xml. 
     */
    packageName?: pulumi.Input<string>;
    /**
     * Relative Path to the package inside the image. 
     */
    packageRelativePath?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Package version found in the appxmanifest.xml. 
     */
    version?: pulumi.Input<string>;
}
