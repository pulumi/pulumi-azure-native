// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Information about a domain.
 */
export class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Domain {
        return new Domain(name, undefined, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:domainregistration/v20180201:Domain';

    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Domain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }

    /**
     * Kind of resource.
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Resource Location.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Domain resource specific properties
     */
    public /*out*/ readonly properties!: pulumi.Output<outputs.domainregistration.v20180201.DomainResponseProperties>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, state: undefined, opts: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState as DomainArgs | undefined;
            if (!args || args.consent === undefined) {
                throw new Error("Missing required property 'consent'");
            }
            if (!args || args.contactAdmin === undefined) {
                throw new Error("Missing required property 'contactAdmin'");
            }
            if (!args || args.contactBilling === undefined) {
                throw new Error("Missing required property 'contactBilling'");
            }
            if (!args || args.contactRegistrant === undefined) {
                throw new Error("Missing required property 'contactRegistrant'");
            }
            if (!args || args.contactTech === undefined) {
                throw new Error("Missing required property 'contactTech'");
            }
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["authCode"] = args ? args.authCode : undefined;
            inputs["autoRenew"] = args ? args.autoRenew : undefined;
            inputs["consent"] = args ? args.consent : undefined;
            inputs["contactAdmin"] = args ? args.contactAdmin : undefined;
            inputs["contactBilling"] = args ? args.contactBilling : undefined;
            inputs["contactRegistrant"] = args ? args.contactRegistrant : undefined;
            inputs["contactTech"] = args ? args.contactTech : undefined;
            inputs["dnsType"] = args ? args.dnsType : undefined;
            inputs["dnsZoneId"] = args ? args.dnsZoneId : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["privacy"] = args ? args.privacy : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["targetDnsType"] = args ? args.targetDnsType : undefined;
            inputs["properties"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Domain.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    readonly authCode?: pulumi.Input<string>;
    /**
     * <code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.
     */
    readonly autoRenew?: pulumi.Input<boolean>;
    /**
     * Legal agreement consent.
     */
    readonly consent: pulumi.Input<inputs.domainregistration.v20180201.DomainPurchaseConsent>;
    /**
     * Administrative contact.
     */
    readonly contactAdmin: pulumi.Input<inputs.domainregistration.v20180201.Contact>;
    /**
     * Billing contact.
     */
    readonly contactBilling: pulumi.Input<inputs.domainregistration.v20180201.Contact>;
    /**
     * Registrant contact.
     */
    readonly contactRegistrant: pulumi.Input<inputs.domainregistration.v20180201.Contact>;
    /**
     * Technical contact.
     */
    readonly contactTech: pulumi.Input<inputs.domainregistration.v20180201.Contact>;
    /**
     * Current DNS type
     */
    readonly dnsType?: pulumi.Input<string>;
    /**
     * Azure DNS Zone to use
     */
    readonly dnsZoneId?: pulumi.Input<string>;
    /**
     * Kind of resource.
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * Resource Location.
     */
    readonly location: pulumi.Input<string>;
    /**
     * Name of the domain.
     */
    readonly name: pulumi.Input<string>;
    /**
     * <code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>.
     */
    readonly privacy?: pulumi.Input<boolean>;
    /**
     * Name of the resource group to which the resource belongs.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Target DNS type (would be used for migration)
     */
    readonly targetDnsType?: pulumi.Input<string>;
}
