// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Information about managed application definition.
 *
 * Uses Azure REST API version 2021-07-01. In version 2.x of the Azure Native provider, it used API version 2021-07-01.
 *
 * Other available API versions: 2023-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native solutions [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class ApplicationDefinition extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ApplicationDefinition {
        return new ApplicationDefinition(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:solutions:ApplicationDefinition';

    /**
     * Returns true if the given object is an instance of ApplicationDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationDefinition.__pulumiType;
    }

    /**
     * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
     */
    declare public readonly artifacts: pulumi.Output<outputs.solutions.ApplicationDefinitionArtifactResponse[] | undefined>;
    /**
     * The managed application provider authorizations.
     */
    declare public readonly authorizations: pulumi.Output<outputs.solutions.ApplicationAuthorizationResponse[] | undefined>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
     */
    declare public readonly createUiDefinition: pulumi.Output<any | undefined>;
    /**
     * The managed application deployment policy.
     */
    declare public readonly deploymentPolicy: pulumi.Output<outputs.solutions.ApplicationDeploymentPolicyResponse | undefined>;
    /**
     * The managed application definition description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The managed application definition display name.
     */
    declare public readonly displayName: pulumi.Output<string | undefined>;
    /**
     * A value indicating whether the package is enabled or not.
     */
    declare public readonly isEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Resource location
     */
    declare public readonly location: pulumi.Output<string | undefined>;
    /**
     * The managed application lock level.
     */
    declare public readonly lockLevel: pulumi.Output<string>;
    /**
     * The managed application locking policy.
     */
    declare public readonly lockingPolicy: pulumi.Output<outputs.solutions.ApplicationPackageLockingPolicyDefinitionResponse | undefined>;
    /**
     * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
     */
    declare public readonly mainTemplate: pulumi.Output<any | undefined>;
    /**
     * ID of the resource that manages this resource.
     */
    declare public readonly managedBy: pulumi.Output<string | undefined>;
    /**
     * The managed application management policy that determines publisher's access to the managed resource group.
     */
    declare public readonly managementPolicy: pulumi.Output<outputs.solutions.ApplicationManagementPolicyResponse | undefined>;
    /**
     * Resource name
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The managed application notification policy.
     */
    declare public readonly notificationPolicy: pulumi.Output<outputs.solutions.ApplicationNotificationPolicyResponse | undefined>;
    /**
     * The managed application definition package file Uri. Use this element
     */
    declare public readonly packageFileUri: pulumi.Output<string | undefined>;
    /**
     * The managed application provider policies.
     */
    declare public readonly policies: pulumi.Output<outputs.solutions.ApplicationPolicyResponse[] | undefined>;
    /**
     * The SKU of the resource.
     */
    declare public readonly sku: pulumi.Output<outputs.solutions.SkuResponse | undefined>;
    /**
     * The storage account id for bring your own storage scenario.
     */
    declare public readonly storageAccountId: pulumi.Output<string | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.solutions.SystemDataResponse>;
    /**
     * Resource tags
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a ApplicationDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationDefinitionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.lockLevel === undefined && !opts.urn) {
                throw new Error("Missing required property 'lockLevel'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["applicationDefinitionName"] = args?.applicationDefinitionName;
            resourceInputs["artifacts"] = args?.artifacts;
            resourceInputs["authorizations"] = args?.authorizations;
            resourceInputs["createUiDefinition"] = args?.createUiDefinition;
            resourceInputs["deploymentPolicy"] = args?.deploymentPolicy;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["isEnabled"] = args?.isEnabled;
            resourceInputs["location"] = args?.location;
            resourceInputs["lockLevel"] = args?.lockLevel;
            resourceInputs["lockingPolicy"] = args?.lockingPolicy;
            resourceInputs["mainTemplate"] = args?.mainTemplate;
            resourceInputs["managedBy"] = args?.managedBy;
            resourceInputs["managementPolicy"] = args?.managementPolicy;
            resourceInputs["notificationPolicy"] = args?.notificationPolicy;
            resourceInputs["packageFileUri"] = args?.packageFileUri;
            resourceInputs["policies"] = args?.policies;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["sku"] = args?.sku;
            resourceInputs["storageAccountId"] = args?.storageAccountId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["artifacts"] = undefined /*out*/;
            resourceInputs["authorizations"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["createUiDefinition"] = undefined /*out*/;
            resourceInputs["deploymentPolicy"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["isEnabled"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["lockLevel"] = undefined /*out*/;
            resourceInputs["lockingPolicy"] = undefined /*out*/;
            resourceInputs["mainTemplate"] = undefined /*out*/;
            resourceInputs["managedBy"] = undefined /*out*/;
            resourceInputs["managementPolicy"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["notificationPolicy"] = undefined /*out*/;
            resourceInputs["packageFileUri"] = undefined /*out*/;
            resourceInputs["policies"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["storageAccountId"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:solutions/v20160901preview:ApplicationDefinition" }, { type: "azure-native:solutions/v20170901:ApplicationDefinition" }, { type: "azure-native:solutions/v20171201:ApplicationDefinition" }, { type: "azure-native:solutions/v20180201:ApplicationDefinition" }, { type: "azure-native:solutions/v20180301:ApplicationDefinition" }, { type: "azure-native:solutions/v20180601:ApplicationDefinition" }, { type: "azure-native:solutions/v20180901preview:ApplicationDefinition" }, { type: "azure-native:solutions/v20190701:ApplicationDefinition" }, { type: "azure-native:solutions/v20200821preview:ApplicationDefinition" }, { type: "azure-native:solutions/v20210201preview:ApplicationDefinition" }, { type: "azure-native:solutions/v20210701:ApplicationDefinition" }, { type: "azure-native:solutions/v20231201preview:ApplicationDefinition" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ApplicationDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ApplicationDefinition resource.
 */
export interface ApplicationDefinitionArgs {
    /**
     * The name of the managed application definition.
     */
    applicationDefinitionName?: pulumi.Input<string>;
    /**
     * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
     */
    artifacts?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationDefinitionArtifactArgs>[]>;
    /**
     * The managed application provider authorizations.
     */
    authorizations?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationAuthorizationArgs>[]>;
    /**
     * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
     */
    createUiDefinition?: any;
    /**
     * The managed application deployment policy.
     */
    deploymentPolicy?: pulumi.Input<inputs.solutions.ApplicationDeploymentPolicyArgs>;
    /**
     * The managed application definition description.
     */
    description?: pulumi.Input<string>;
    /**
     * The managed application definition display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A value indicating whether the package is enabled or not.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * The managed application lock level.
     */
    lockLevel: pulumi.Input<enums.solutions.ApplicationLockLevel>;
    /**
     * The managed application locking policy.
     */
    lockingPolicy?: pulumi.Input<inputs.solutions.ApplicationPackageLockingPolicyDefinitionArgs>;
    /**
     * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
     */
    mainTemplate?: any;
    /**
     * ID of the resource that manages this resource.
     */
    managedBy?: pulumi.Input<string>;
    /**
     * The managed application management policy that determines publisher's access to the managed resource group.
     */
    managementPolicy?: pulumi.Input<inputs.solutions.ApplicationManagementPolicyArgs>;
    /**
     * The managed application notification policy.
     */
    notificationPolicy?: pulumi.Input<inputs.solutions.ApplicationNotificationPolicyArgs>;
    /**
     * The managed application definition package file Uri. Use this element
     */
    packageFileUri?: pulumi.Input<string>;
    /**
     * The managed application provider policies.
     */
    policies?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationPolicyArgs>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the resource.
     */
    sku?: pulumi.Input<inputs.solutions.SkuArgs>;
    /**
     * The storage account id for bring your own storage scenario.
     */
    storageAccountId?: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
