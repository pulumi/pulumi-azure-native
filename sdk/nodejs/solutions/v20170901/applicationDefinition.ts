// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Information about managed application definition.
 *
 * @deprecated Version 2017-09-01 will be removed in v2 of the provider.
 */
export class ApplicationDefinition extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ApplicationDefinition {
        pulumi.log.warn("ApplicationDefinition is deprecated: Version 2017-09-01 will be removed in v2 of the provider.")
        return new ApplicationDefinition(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:solutions/v20170901:ApplicationDefinition';

    /**
     * Returns true if the given object is an instance of ApplicationDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationDefinition.__pulumiType;
    }

    /**
     * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
     */
    public readonly artifacts!: pulumi.Output<outputs.solutions.v20170901.ApplicationArtifactResponse[] | undefined>;
    /**
     * The managed application provider authorizations.
     */
    public readonly authorizations!: pulumi.Output<outputs.solutions.v20170901.ApplicationProviderAuthorizationResponse[]>;
    /**
     * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
     */
    public readonly createUiDefinition!: pulumi.Output<any | undefined>;
    /**
     * The managed application definition description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The managed application definition display name.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The identity of the resource.
     */
    public readonly identity!: pulumi.Output<outputs.solutions.v20170901.IdentityResponse | undefined>;
    /**
     * A value indicating whether the package is enabled or not.
     */
    public readonly isEnabled!: pulumi.Output<string | undefined>;
    /**
     * Resource location
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The managed application lock level.
     */
    public readonly lockLevel!: pulumi.Output<string>;
    /**
     * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
     */
    public readonly mainTemplate!: pulumi.Output<any | undefined>;
    /**
     * ID of the resource that manages this resource.
     */
    public readonly managedBy!: pulumi.Output<string | undefined>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The managed application definition package file Uri. Use this element
     */
    public readonly packageFileUri!: pulumi.Output<string | undefined>;
    /**
     * The SKU of the resource.
     */
    public readonly sku!: pulumi.Output<outputs.solutions.v20170901.SkuResponse | undefined>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ApplicationDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2017-09-01 will be removed in v2 of the provider. */
    constructor(name: string, args: ApplicationDefinitionArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("ApplicationDefinition is deprecated: Version 2017-09-01 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.authorizations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authorizations'");
            }
            if ((!args || args.lockLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lockLevel'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["applicationDefinitionName"] = args ? args.applicationDefinitionName : undefined;
            resourceInputs["artifacts"] = args ? args.artifacts : undefined;
            resourceInputs["authorizations"] = args ? args.authorizations : undefined;
            resourceInputs["createUiDefinition"] = args ? args.createUiDefinition : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["isEnabled"] = args ? args.isEnabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["lockLevel"] = args ? args.lockLevel : undefined;
            resourceInputs["mainTemplate"] = args ? args.mainTemplate : undefined;
            resourceInputs["managedBy"] = args ? args.managedBy : undefined;
            resourceInputs["packageFileUri"] = args ? args.packageFileUri : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["artifacts"] = undefined /*out*/;
            resourceInputs["authorizations"] = undefined /*out*/;
            resourceInputs["createUiDefinition"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["isEnabled"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["lockLevel"] = undefined /*out*/;
            resourceInputs["mainTemplate"] = undefined /*out*/;
            resourceInputs["managedBy"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["packageFileUri"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:solutions:ApplicationDefinition" }, { type: "azure-native:solutions/v20160901preview:ApplicationDefinition" }, { type: "azure-native:solutions/v20171201:ApplicationDefinition" }, { type: "azure-native:solutions/v20180201:ApplicationDefinition" }, { type: "azure-native:solutions/v20180301:ApplicationDefinition" }, { type: "azure-native:solutions/v20180601:ApplicationDefinition" }, { type: "azure-native:solutions/v20180901preview:ApplicationDefinition" }, { type: "azure-native:solutions/v20190701:ApplicationDefinition" }, { type: "azure-native:solutions/v20200821preview:ApplicationDefinition" }, { type: "azure-native:solutions/v20210201preview:ApplicationDefinition" }, { type: "azure-native:solutions/v20210701:ApplicationDefinition" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ApplicationDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ApplicationDefinition resource.
 */
export interface ApplicationDefinitionArgs {
    /**
     * The name of the managed application definition.
     */
    applicationDefinitionName?: pulumi.Input<string>;
    /**
     * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
     */
    artifacts?: pulumi.Input<pulumi.Input<inputs.solutions.v20170901.ApplicationArtifactArgs>[]>;
    /**
     * The managed application provider authorizations.
     */
    authorizations: pulumi.Input<pulumi.Input<inputs.solutions.v20170901.ApplicationProviderAuthorizationArgs>[]>;
    /**
     * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
     */
    createUiDefinition?: any;
    /**
     * The managed application definition description.
     */
    description?: pulumi.Input<string>;
    /**
     * The managed application definition display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The identity of the resource.
     */
    identity?: pulumi.Input<inputs.solutions.v20170901.IdentityArgs>;
    /**
     * A value indicating whether the package is enabled or not.
     */
    isEnabled?: pulumi.Input<string>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * The managed application lock level.
     */
    lockLevel: pulumi.Input<enums.solutions.v20170901.ApplicationLockLevel>;
    /**
     * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
     */
    mainTemplate?: any;
    /**
     * ID of the resource that manages this resource.
     */
    managedBy?: pulumi.Input<string>;
    /**
     * The managed application definition package file Uri. Use this element
     */
    packageFileUri?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the resource.
     */
    sku?: pulumi.Input<inputs.solutions.v20170901.SkuArgs>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
