// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Information about appliance.
 *
 * @deprecated Version 2016-09-01-preview will be removed in v2 of the provider.
 */
export class Appliance extends pulumi.CustomResource {
    /**
     * Get an existing Appliance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Appliance {
        pulumi.log.warn("Appliance is deprecated: Version 2016-09-01-preview will be removed in v2 of the provider.")
        return new Appliance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:solutions/v20160901preview:Appliance';

    /**
     * Returns true if the given object is an instance of Appliance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Appliance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Appliance.__pulumiType;
    }

    /**
     * The fully qualified path of appliance definition Id.
     */
    public readonly applianceDefinitionId!: pulumi.Output<string | undefined>;
    /**
     * The identity of the resource.
     */
    public readonly identity!: pulumi.Output<outputs.solutions.v20160901preview.IdentityResponse | undefined>;
    /**
     * The kind of the appliance. Allowed values are MarketPlace and ServiceCatalog.
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Resource location
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * ID of the resource that manages this resource.
     */
    public readonly managedBy!: pulumi.Output<string | undefined>;
    /**
     * The managed resource group Id.
     */
    public readonly managedResourceGroupId!: pulumi.Output<string>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Name and value pairs that define the appliance outputs.
     */
    public /*out*/ readonly outputs!: pulumi.Output<any>;
    /**
     * Name and value pairs that define the appliance parameters. It can be a JObject or a well formed JSON string.
     */
    public readonly parameters!: pulumi.Output<any | undefined>;
    /**
     * The plan information.
     */
    public readonly plan!: pulumi.Output<outputs.solutions.v20160901preview.PlanResponse | undefined>;
    /**
     * The appliance provisioning state.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The SKU of the resource.
     */
    public readonly sku!: pulumi.Output<outputs.solutions.v20160901preview.SkuResponse | undefined>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The blob URI where the UI definition file is located.
     */
    public readonly uiDefinitionUri!: pulumi.Output<string | undefined>;

    /**
     * Create a Appliance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2016-09-01-preview will be removed in v2 of the provider. */
    constructor(name: string, args: ApplianceArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Appliance is deprecated: Version 2016-09-01-preview will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.managedResourceGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedResourceGroupId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["applianceDefinitionId"] = args ? args.applianceDefinitionId : undefined;
            resourceInputs["applianceName"] = args ? args.applianceName : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["managedBy"] = args ? args.managedBy : undefined;
            resourceInputs["managedResourceGroupId"] = args ? args.managedResourceGroupId : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["plan"] = args ? args.plan : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["uiDefinitionUri"] = args ? args.uiDefinitionUri : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["outputs"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["applianceDefinitionId"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["managedBy"] = undefined /*out*/;
            resourceInputs["managedResourceGroupId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["outputs"] = undefined /*out*/;
            resourceInputs["parameters"] = undefined /*out*/;
            resourceInputs["plan"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uiDefinitionUri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:solutions:Appliance" }, { type: "azure-native:solutions/v20170901:Appliance" }, { type: "azure-native:solutions/v20171201:Appliance" }, { type: "azure-native:solutions/v20180201:Appliance" }, { type: "azure-native:solutions/v20180301:Appliance" }, { type: "azure-native:solutions/v20180601:Appliance" }, { type: "azure-native:solutions/v20180901preview:Appliance" }, { type: "azure-native:solutions/v20190701:Appliance" }, { type: "azure-native:solutions/v20200821preview:Appliance" }, { type: "azure-native:solutions/v20210201preview:Appliance" }, { type: "azure-native:solutions/v20210701:Appliance" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Appliance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Appliance resource.
 */
export interface ApplianceArgs {
    /**
     * The fully qualified path of appliance definition Id.
     */
    applianceDefinitionId?: pulumi.Input<string>;
    /**
     * The name of the appliance.
     */
    applianceName?: pulumi.Input<string>;
    /**
     * The identity of the resource.
     */
    identity?: pulumi.Input<inputs.solutions.v20160901preview.IdentityArgs>;
    /**
     * The kind of the appliance. Allowed values are MarketPlace and ServiceCatalog.
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * ID of the resource that manages this resource.
     */
    managedBy?: pulumi.Input<string>;
    /**
     * The managed resource group Id.
     */
    managedResourceGroupId: pulumi.Input<string>;
    /**
     * Name and value pairs that define the appliance parameters. It can be a JObject or a well formed JSON string.
     */
    parameters?: any;
    /**
     * The plan information.
     */
    plan?: pulumi.Input<inputs.solutions.v20160901preview.PlanArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the resource.
     */
    sku?: pulumi.Input<inputs.solutions.v20160901preview.SkuArgs>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The blob URI where the UI definition file is located.
     */
    uiDefinitionUri?: pulumi.Input<string>;
}
