// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Response for ElasticSan request.
 */
export function getElasticSan(args: GetElasticSanArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticSanResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:elasticsan/v20211120preview:getElasticSan", {
        "elasticSanName": args.elasticSanName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetElasticSanArgs {
    /**
     * The name of the ElasticSan.
     */
    elasticSanName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Response for ElasticSan request.
 */
export interface GetElasticSanResult {
    /**
     * Logical zone for Elastic San resource; example: ["1"].
     */
    readonly availabilityZones: string[];
    /**
     * Base size of the Elastic San appliance in TiB.
     */
    readonly baseSizeTiB: number;
    /**
     * Extended size of the Elastic San appliance in TiB.
     */
    readonly extendedCapacitySizeTiB: number;
    /**
     * Azure resource identifier.
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives.
     */
    readonly location?: string;
    /**
     * Azure resource name.
     */
    readonly name: string;
    /**
     * Provisioned MBps Elastic San appliance.
     */
    readonly provisionedMBps: number;
    /**
     * State of the operation on the resource.
     */
    readonly provisioningState: string;
    /**
     * resource sku
     */
    readonly sku?: outputs.elasticsan.v20211120preview.SkuResponse;
    /**
     * Resource metadata required by ARM RPC
     */
    readonly systemData: outputs.elasticsan.v20211120preview.SystemDataResponse;
    /**
     * Azure resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Total Provisioned IOPS of the Elastic San appliance.
     */
    readonly totalIops: number;
    /**
     * Total Provisioned MBps Elastic San appliance.
     */
    readonly totalMBps: number;
    /**
     * Total size of the provisioned Volumes in GiB.
     */
    readonly totalVolumeSizeGiB: number;
    /**
     * Azure resource type.
     */
    readonly type: string;
    /**
     * Total number of volume groups in this Elastic San appliance.
     */
    readonly volumeGroupCount: number;
}

export function getElasticSanOutput(args: GetElasticSanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticSanResult> {
    return pulumi.output(args).apply(a => getElasticSan(a, opts))
}

export interface GetElasticSanOutputArgs {
    /**
     * The name of the ElasticSan.
     */
    elasticSanName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
