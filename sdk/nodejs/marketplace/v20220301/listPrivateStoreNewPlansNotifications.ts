// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * List of all new plans notifications for public offers
 */
export function listPrivateStoreNewPlansNotifications(args: ListPrivateStoreNewPlansNotificationsArgs, opts?: pulumi.InvokeOptions): Promise<ListPrivateStoreNewPlansNotificationsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:marketplace/v20220301:listPrivateStoreNewPlansNotifications", {
        "privateStoreId": args.privateStoreId,
    }, opts);
}

export interface ListPrivateStoreNewPlansNotificationsArgs {
    /**
     * The store ID - must use the tenant ID
     */
    privateStoreId: string;
}

/**
 * List of all new plans notifications for public offers
 */
export interface ListPrivateStoreNewPlansNotificationsResult {
    readonly newPlansNotifications?: outputs.marketplace.v20220301.NewNotificationsResponse[];
}

export function listPrivateStoreNewPlansNotificationsOutput(args: ListPrivateStoreNewPlansNotificationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListPrivateStoreNewPlansNotificationsResult> {
    return pulumi.output(args).apply(a => listPrivateStoreNewPlansNotifications(a, opts))
}

export interface ListPrivateStoreNewPlansNotificationsOutputArgs {
    /**
     * The store ID - must use the tenant ID
     */
    privateStoreId: pulumi.Input<string>;
}
