// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getBlockchainMember(args: GetBlockchainMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockchainMemberResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:blockchain/v20180601preview:getBlockchainMember", {
        "blockchainMemberName": args.blockchainMemberName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetBlockchainMemberArgs {
    /**
     * Blockchain member name.
     */
    readonly blockchainMemberName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    readonly resourceGroupName: string;
}

/**
 * Payload of the blockchain member which is exposed in the request/response of the resource provider.
 */
export interface GetBlockchainMemberResult {
    /**
     * Gets or sets the consortium for the blockchain member.
     */
    readonly consortium?: string;
    /**
     * Gets the managed consortium management account address.
     */
    readonly consortiumManagementAccountAddress: string;
    /**
     * Sets the managed consortium management account password.
     */
    readonly consortiumManagementAccountPassword?: string;
    /**
     * Gets the display name of the member in the consortium.
     */
    readonly consortiumMemberDisplayName?: string;
    /**
     * Gets the role of the member in the consortium.
     */
    readonly consortiumRole?: string;
    /**
     * Gets the dns endpoint of the blockchain member.
     */
    readonly dns: string;
    /**
     * Gets or sets firewall rules
     */
    readonly firewallRules?: outputs.blockchain.v20180601preview.FirewallRuleResponse[];
    /**
     * The GEO location of the blockchain service.
     */
    readonly location?: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * Sets the basic auth password of the blockchain member.
     */
    readonly password?: string;
    /**
     * Gets or sets the blockchain protocol.
     */
    readonly protocol?: string;
    /**
     * Gets or sets the blockchain member provision state.
     */
    readonly provisioningState: string;
    /**
     * Gets the public key of the blockchain member (default transaction node).
     */
    readonly publicKey: string;
    /**
     * Gets the Ethereum root contract address of the blockchain.
     */
    readonly rootContractAddress: string;
    /**
     * Gets or sets the blockchain member Sku.
     */
    readonly sku?: outputs.blockchain.v20180601preview.SkuResponse;
    /**
     * Tags of the service which is a list of key value pairs that describes the resource.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the service - e.g. "Microsoft.Blockchain"
     */
    readonly type: string;
    /**
     * Gets the auth user name of the blockchain member.
     */
    readonly userName: string;
    /**
     * Gets or sets the blockchain validator nodes Sku.
     */
    readonly validatorNodesSku?: outputs.blockchain.v20180601preview.BlockchainMemberNodesSkuResponse;
}
