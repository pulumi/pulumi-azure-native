// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Payload of the blockchain member which is exposed in the request/response of the resource provider.
 */
export class BlockchainMember extends pulumi.CustomResource {
    /**
     * Get an existing BlockchainMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BlockchainMember {
        return new BlockchainMember(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:blockchain/v20180601preview:BlockchainMember';

    /**
     * Returns true if the given object is an instance of BlockchainMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BlockchainMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BlockchainMember.__pulumiType;
    }

    /**
     * Gets or sets the consortium for the blockchain member.
     */
    public readonly consortium!: pulumi.Output<string | undefined>;
    /**
     * Gets the managed consortium management account address.
     */
    public /*out*/ readonly consortiumManagementAccountAddress!: pulumi.Output<string>;
    /**
     * Sets the managed consortium management account password.
     */
    public readonly consortiumManagementAccountPassword!: pulumi.Output<string | undefined>;
    /**
     * Gets the display name of the member in the consortium.
     */
    public readonly consortiumMemberDisplayName!: pulumi.Output<string | undefined>;
    /**
     * Gets the role of the member in the consortium.
     */
    public readonly consortiumRole!: pulumi.Output<string | undefined>;
    /**
     * Gets the dns endpoint of the blockchain member.
     */
    public /*out*/ readonly dns!: pulumi.Output<string>;
    /**
     * Gets or sets firewall rules
     */
    public readonly firewallRules!: pulumi.Output<outputs.blockchain.v20180601preview.FirewallRuleResponse[] | undefined>;
    /**
     * The GEO location of the blockchain service.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Sets the basic auth password of the blockchain member.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the blockchain protocol.
     */
    public readonly protocol!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the blockchain member provision state.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Gets the public key of the blockchain member (default transaction node).
     */
    public /*out*/ readonly publicKey!: pulumi.Output<string>;
    /**
     * Gets the Ethereum root contract address of the blockchain.
     */
    public /*out*/ readonly rootContractAddress!: pulumi.Output<string>;
    /**
     * Gets or sets the blockchain member Sku.
     */
    public readonly sku!: pulumi.Output<outputs.blockchain.v20180601preview.SkuResponse | undefined>;
    /**
     * Tags of the service which is a list of key value pairs that describes the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the service - e.g. "Microsoft.Blockchain"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Gets the auth user name of the blockchain member.
     */
    public /*out*/ readonly userName!: pulumi.Output<string>;
    /**
     * Gets or sets the blockchain validator nodes Sku.
     */
    public readonly validatorNodesSku!: pulumi.Output<outputs.blockchain.v20180601preview.BlockchainMemberNodesSkuResponse | undefined>;

    /**
     * Create a BlockchainMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlockchainMemberArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.blockchainMemberName === undefined) {
                throw new Error("Missing required property 'blockchainMemberName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["blockchainMemberName"] = args ? args.blockchainMemberName : undefined;
            inputs["consortium"] = args ? args.consortium : undefined;
            inputs["consortiumManagementAccountPassword"] = args ? args.consortiumManagementAccountPassword : undefined;
            inputs["consortiumMemberDisplayName"] = args ? args.consortiumMemberDisplayName : undefined;
            inputs["consortiumRole"] = args ? args.consortiumRole : undefined;
            inputs["firewallRules"] = args ? args.firewallRules : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["validatorNodesSku"] = args ? args.validatorNodesSku : undefined;
            inputs["consortiumManagementAccountAddress"] = undefined /*out*/;
            inputs["dns"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["publicKey"] = undefined /*out*/;
            inputs["rootContractAddress"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["userName"] = undefined /*out*/;
        } else {
            inputs["consortium"] = undefined /*out*/;
            inputs["consortiumManagementAccountAddress"] = undefined /*out*/;
            inputs["consortiumManagementAccountPassword"] = undefined /*out*/;
            inputs["consortiumMemberDisplayName"] = undefined /*out*/;
            inputs["consortiumRole"] = undefined /*out*/;
            inputs["dns"] = undefined /*out*/;
            inputs["firewallRules"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["password"] = undefined /*out*/;
            inputs["protocol"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["publicKey"] = undefined /*out*/;
            inputs["rootContractAddress"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["userName"] = undefined /*out*/;
            inputs["validatorNodesSku"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(BlockchainMember.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a BlockchainMember resource.
 */
export interface BlockchainMemberArgs {
    /**
     * Blockchain member name.
     */
    readonly blockchainMemberName: pulumi.Input<string>;
    /**
     * Gets or sets the consortium for the blockchain member.
     */
    readonly consortium?: pulumi.Input<string>;
    /**
     * Sets the managed consortium management account password.
     */
    readonly consortiumManagementAccountPassword?: pulumi.Input<string>;
    /**
     * Gets the display name of the member in the consortium.
     */
    readonly consortiumMemberDisplayName?: pulumi.Input<string>;
    /**
     * Gets the role of the member in the consortium.
     */
    readonly consortiumRole?: pulumi.Input<string>;
    /**
     * Gets or sets firewall rules
     */
    readonly firewallRules?: pulumi.Input<pulumi.Input<inputs.blockchain.v20180601preview.FirewallRule>[]>;
    /**
     * The GEO location of the blockchain service.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * Sets the basic auth password of the blockchain member.
     */
    readonly password?: pulumi.Input<string>;
    /**
     * Gets or sets the blockchain protocol.
     */
    readonly protocol?: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Gets or sets the blockchain member Sku.
     */
    readonly sku?: pulumi.Input<inputs.blockchain.v20180601preview.Sku>;
    /**
     * Tags of the service which is a list of key value pairs that describes the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Gets or sets the blockchain validator nodes Sku.
     */
    readonly validatorNodesSku?: pulumi.Input<inputs.blockchain.v20180601preview.BlockchainMemberNodesSku>;
}
