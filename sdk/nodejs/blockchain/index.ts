// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BlockchainMemberArgs } from "./blockchainMember";
export type BlockchainMember = import("./blockchainMember").BlockchainMember;
export const BlockchainMember: typeof import("./blockchainMember").BlockchainMember = null as any;

export { GetBlockchainMemberArgs, GetBlockchainMemberResult, GetBlockchainMemberOutputArgs } from "./getBlockchainMember";
export const getBlockchainMember: typeof import("./getBlockchainMember").getBlockchainMember = null as any;
export const getBlockchainMemberOutput: typeof import("./getBlockchainMember").getBlockchainMemberOutput = null as any;

export { GetTransactionNodeArgs, GetTransactionNodeResult, GetTransactionNodeOutputArgs } from "./getTransactionNode";
export const getTransactionNode: typeof import("./getTransactionNode").getTransactionNode = null as any;
export const getTransactionNodeOutput: typeof import("./getTransactionNode").getTransactionNodeOutput = null as any;

export { ListBlockchainMemberApiKeysArgs, ListBlockchainMemberApiKeysResult, ListBlockchainMemberApiKeysOutputArgs } from "./listBlockchainMemberApiKeys";
export const listBlockchainMemberApiKeys: typeof import("./listBlockchainMemberApiKeys").listBlockchainMemberApiKeys = null as any;
export const listBlockchainMemberApiKeysOutput: typeof import("./listBlockchainMemberApiKeys").listBlockchainMemberApiKeysOutput = null as any;

export { ListLocationConsortiumsArgs, ListLocationConsortiumsResult, ListLocationConsortiumsOutputArgs } from "./listLocationConsortiums";
export const listLocationConsortiums: typeof import("./listLocationConsortiums").listLocationConsortiums = null as any;
export const listLocationConsortiumsOutput: typeof import("./listLocationConsortiums").listLocationConsortiumsOutput = null as any;

export { ListTransactionNodeApiKeysArgs, ListTransactionNodeApiKeysResult, ListTransactionNodeApiKeysOutputArgs } from "./listTransactionNodeApiKeys";
export const listTransactionNodeApiKeys: typeof import("./listTransactionNodeApiKeys").listTransactionNodeApiKeys = null as any;
export const listTransactionNodeApiKeysOutput: typeof import("./listTransactionNodeApiKeys").listTransactionNodeApiKeysOutput = null as any;

export { TransactionNodeArgs } from "./transactionNode";
export type TransactionNode = import("./transactionNode").TransactionNode;
export const TransactionNode: typeof import("./transactionNode").TransactionNode = null as any;

utilities.lazyLoad(exports, ["BlockchainMember"], () => require("./blockchainMember"));
utilities.lazyLoad(exports, ["getBlockchainMember","getBlockchainMemberOutput"], () => require("./getBlockchainMember"));
utilities.lazyLoad(exports, ["getTransactionNode","getTransactionNodeOutput"], () => require("./getTransactionNode"));
utilities.lazyLoad(exports, ["listBlockchainMemberApiKeys","listBlockchainMemberApiKeysOutput"], () => require("./listBlockchainMemberApiKeys"));
utilities.lazyLoad(exports, ["listLocationConsortiums","listLocationConsortiumsOutput"], () => require("./listLocationConsortiums"));
utilities.lazyLoad(exports, ["listTransactionNodeApiKeys","listTransactionNodeApiKeysOutput"], () => require("./listTransactionNodeApiKeys"));
utilities.lazyLoad(exports, ["TransactionNode"], () => require("./transactionNode"));

// Export enums:
export * from "../types/enums/blockchain";

// Export sub-modules:
import * as v20180601preview from "./v20180601preview";

export {
    v20180601preview,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:blockchain:BlockchainMember":
                return new BlockchainMember(name, <any>undefined, { urn })
            case "azure-native:blockchain:TransactionNode":
                return new TransactionNode(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "blockchain", _module)
