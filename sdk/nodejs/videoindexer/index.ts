// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccountArgs } from "./account";
export type Account = import("./account").Account;
export const Account: typeof import("./account").Account = null as any;
utilities.lazyLoad(exports, ["Account"], () => require("./account"));

export { GetAccountArgs, GetAccountResult, GetAccountOutputArgs } from "./getAccount";
export const getAccount: typeof import("./getAccount").getAccount = null as any;
export const getAccountOutput: typeof import("./getAccount").getAccountOutput = null as any;
utilities.lazyLoad(exports, ["getAccount","getAccountOutput"], () => require("./getAccount"));


// Export enums:
export * from "../types/enums/videoindexer";

// Export sub-modules:
import * as v20211018preview from "./v20211018preview";
import * as v20211027preview from "./v20211027preview";
import * as v20211110preview from "./v20211110preview";
import * as v20220413preview from "./v20220413preview";
import * as v20220720preview from "./v20220720preview";
import * as v20220801 from "./v20220801";

export {
    v20211018preview,
    v20211027preview,
    v20211110preview,
    v20220413preview,
    v20220720preview,
    v20220801,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:videoindexer:Account":
                return new Account(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "videoindexer", _module)
