// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * iOS Policy entity for Intune MAM.
 *
 * Uses Azure REST API version 2015-01-14-preview. In version 2.x of the Azure Native provider, it used API version 2015-01-14-preview.
 */
export class IoMAMPolicyByName extends pulumi.CustomResource {
    /**
     * Get an existing IoMAMPolicyByName resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IoMAMPolicyByName {
        return new IoMAMPolicyByName(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:intune:IoMAMPolicyByName';

    /**
     * Returns true if the given object is an instance of IoMAMPolicyByName.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IoMAMPolicyByName {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IoMAMPolicyByName.__pulumiType;
    }

    declare public readonly accessRecheckOfflineTimeout: pulumi.Output<string | undefined>;
    declare public readonly accessRecheckOnlineTimeout: pulumi.Output<string | undefined>;
    declare public readonly appSharingFromLevel: pulumi.Output<string | undefined>;
    declare public readonly appSharingToLevel: pulumi.Output<string | undefined>;
    declare public readonly authentication: pulumi.Output<string | undefined>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    declare public readonly clipboardSharingLevel: pulumi.Output<string | undefined>;
    declare public readonly dataBackup: pulumi.Output<string | undefined>;
    declare public readonly description: pulumi.Output<string | undefined>;
    declare public readonly deviceCompliance: pulumi.Output<string | undefined>;
    declare public readonly fileEncryptionLevel: pulumi.Output<string | undefined>;
    declare public readonly fileSharingSaveAs: pulumi.Output<string | undefined>;
    declare public readonly friendlyName: pulumi.Output<string>;
    declare public /*out*/ readonly groupStatus: pulumi.Output<string>;
    declare public /*out*/ readonly lastModifiedTime: pulumi.Output<string>;
    /**
     * Resource Location
     */
    declare public readonly location: pulumi.Output<string | undefined>;
    declare public readonly managedBrowser: pulumi.Output<string | undefined>;
    /**
     * Resource name
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    declare public /*out*/ readonly numOfApps: pulumi.Output<number>;
    declare public readonly offlineWipeTimeout: pulumi.Output<string | undefined>;
    declare public readonly pin: pulumi.Output<string | undefined>;
    declare public readonly pinNumRetry: pulumi.Output<number | undefined>;
    /**
     * Resource Tags
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    declare public readonly touchId: pulumi.Output<string | undefined>;
    /**
     * Resource type
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a IoMAMPolicyByName resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IoMAMPolicyByNameArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.friendlyName === undefined && !opts.urn) {
                throw new Error("Missing required property 'friendlyName'");
            }
            if (args?.hostName === undefined && !opts.urn) {
                throw new Error("Missing required property 'hostName'");
            }
            resourceInputs["accessRecheckOfflineTimeout"] = args?.accessRecheckOfflineTimeout;
            resourceInputs["accessRecheckOnlineTimeout"] = args?.accessRecheckOnlineTimeout;
            resourceInputs["appSharingFromLevel"] = (args?.appSharingFromLevel) ?? "none";
            resourceInputs["appSharingToLevel"] = (args?.appSharingToLevel) ?? "none";
            resourceInputs["authentication"] = (args?.authentication) ?? "required";
            resourceInputs["clipboardSharingLevel"] = (args?.clipboardSharingLevel) ?? "blocked";
            resourceInputs["dataBackup"] = (args?.dataBackup) ?? "allow";
            resourceInputs["description"] = args?.description;
            resourceInputs["deviceCompliance"] = (args?.deviceCompliance) ?? "enable";
            resourceInputs["fileEncryptionLevel"] = (args?.fileEncryptionLevel) ?? "deviceLocked";
            resourceInputs["fileSharingSaveAs"] = (args?.fileSharingSaveAs) ?? "allow";
            resourceInputs["friendlyName"] = args?.friendlyName;
            resourceInputs["hostName"] = args?.hostName;
            resourceInputs["location"] = args?.location;
            resourceInputs["managedBrowser"] = (args?.managedBrowser) ?? "required";
            resourceInputs["offlineWipeTimeout"] = args?.offlineWipeTimeout;
            resourceInputs["pin"] = (args?.pin) ?? "required";
            resourceInputs["pinNumRetry"] = args?.pinNumRetry;
            resourceInputs["policyName"] = args?.policyName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["touchId"] = (args?.touchId) ?? "enable";
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["groupStatus"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["numOfApps"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["accessRecheckOfflineTimeout"] = undefined /*out*/;
            resourceInputs["accessRecheckOnlineTimeout"] = undefined /*out*/;
            resourceInputs["appSharingFromLevel"] = undefined /*out*/;
            resourceInputs["appSharingToLevel"] = undefined /*out*/;
            resourceInputs["authentication"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["clipboardSharingLevel"] = undefined /*out*/;
            resourceInputs["dataBackup"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["deviceCompliance"] = undefined /*out*/;
            resourceInputs["fileEncryptionLevel"] = undefined /*out*/;
            resourceInputs["fileSharingSaveAs"] = undefined /*out*/;
            resourceInputs["friendlyName"] = undefined /*out*/;
            resourceInputs["groupStatus"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["managedBrowser"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["numOfApps"] = undefined /*out*/;
            resourceInputs["offlineWipeTimeout"] = undefined /*out*/;
            resourceInputs["pin"] = undefined /*out*/;
            resourceInputs["pinNumRetry"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["touchId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:intune/v20150114preview:IoMAMPolicyByName" }, { type: "azure-native:intune/v20150114privatepreview:IoMAMPolicyByName" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(IoMAMPolicyByName.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a IoMAMPolicyByName resource.
 */
export interface IoMAMPolicyByNameArgs {
    accessRecheckOfflineTimeout?: pulumi.Input<string>;
    accessRecheckOnlineTimeout?: pulumi.Input<string>;
    appSharingFromLevel?: pulumi.Input<string>;
    appSharingToLevel?: pulumi.Input<string>;
    authentication?: pulumi.Input<string>;
    clipboardSharingLevel?: pulumi.Input<string>;
    dataBackup?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceCompliance?: pulumi.Input<string>;
    fileEncryptionLevel?: pulumi.Input<string>;
    fileSharingSaveAs?: pulumi.Input<string>;
    friendlyName: pulumi.Input<string>;
    /**
     * Location hostName for the tenant
     */
    hostName: pulumi.Input<string>;
    /**
     * Resource Location
     */
    location?: pulumi.Input<string>;
    managedBrowser?: pulumi.Input<string>;
    offlineWipeTimeout?: pulumi.Input<string>;
    pin?: pulumi.Input<string>;
    pinNumRetry?: pulumi.Input<number>;
    /**
     * Unique name for the policy
     */
    policyName?: pulumi.Input<string>;
    /**
     * Resource Tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    touchId?: pulumi.Input<string>;
}
