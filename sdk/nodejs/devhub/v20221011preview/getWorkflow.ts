// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Resource representation of a workflow
 */
export function getWorkflow(args: GetWorkflowArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkflowResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:devhub/v20221011preview:getWorkflow", {
        "resourceGroupName": args.resourceGroupName,
        "workflowName": args.workflowName,
    }, opts);
}

export interface GetWorkflowArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the workflow resource.
     */
    workflowName: string;
}

/**
 * Resource representation of a workflow
 */
export interface GetWorkflowResult {
    /**
     * Information on the azure container registry
     */
    readonly acr?: outputs.devhub.v20221011preview.ACRResponse;
    /**
     * The Azure Kubernetes Cluster Resource the application will be deployed to.
     */
    readonly aksResourceId?: string;
    /**
     * The name of the app.
     */
    readonly appName?: string;
    /**
     * Determines the authorization status of requests.
     */
    readonly authStatus: string;
    /**
     * Repository Branch Name
     */
    readonly branchName?: string;
    /**
     * The version of the language image used for building the code in the generated dockerfile.
     */
    readonly builderVersion?: string;
    readonly deploymentProperties?: outputs.devhub.v20221011preview.DeploymentPropertiesResponse;
    /**
     * Path to Dockerfile Build Context within the repository.
     */
    readonly dockerBuildContext?: string;
    /**
     * Path to the Dockerfile within the repository.
     */
    readonly dockerfile?: string;
    /**
     * The mode of generation to be used for generating Dockerfiles.
     */
    readonly dockerfileGenerationMode?: string;
    /**
     * The directory to output the generated Dockerfile to.
     */
    readonly dockerfileOutputDirectory?: string;
    /**
     * The programming language used.
     */
    readonly generationLanguage?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the image to be generated.
     */
    readonly imageName?: string;
    /**
     * The tag to apply to the generated image.
     */
    readonly imageTag?: string;
    /**
     * The version of the language image used for execution in the generated dockerfile.
     */
    readonly languageVersion?: string;
    readonly lastWorkflowRun?: outputs.devhub.v20221011preview.WorkflowRunResponse;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The mode of generation to be used for generating Manifest.
     */
    readonly manifestGenerationMode?: string;
    /**
     * The directory to output the generated manifests to.
     */
    readonly manifestOutputDirectory?: string;
    /**
     * Determines the type of manifests to be generated.
     */
    readonly manifestType?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Kubernetes namespace the application is deployed to.
     */
    readonly namespace?: string;
    /**
     * The fields needed for OIDC with GitHub.
     */
    readonly oidcCredentials?: outputs.devhub.v20221011preview.GitHubWorkflowProfileResponseOidcCredentials;
    /**
     * The port the application is exposed on.
     */
    readonly port?: string;
    /**
     * The status of the Pull Request submitted against the users repository.
     */
    readonly prStatus: string;
    /**
     * The URL to the Pull Request submitted against the users repository.
     */
    readonly prURL: string;
    /**
     * The number associated with the submitted pull request.
     */
    readonly pullNumber: number;
    /**
     * Repository Name
     */
    readonly repositoryName?: string;
    /**
     * Repository Owner
     */
    readonly repositoryOwner?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.devhub.v20221011preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Resource representation of a workflow
 */
export function getWorkflowOutput(args: GetWorkflowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkflowResult> {
    return pulumi.output(args).apply((a: any) => getWorkflow(a, opts))
}

export interface GetWorkflowOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the workflow resource.
     */
    workflowName: pulumi.Input<string>;
}
