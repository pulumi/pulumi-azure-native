// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Machine Learning dataset object wrapped into ARM resource envelope.
 * API Version: 2020-05-01-preview.
 */
export class MachineLearningDataset extends pulumi.CustomResource {
    /**
     * Get an existing MachineLearningDataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MachineLearningDataset {
        return new MachineLearningDataset(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:machinelearningservices:MachineLearningDataset';

    /**
     * Returns true if the given object is an instance of MachineLearningDataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachineLearningDataset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachineLearningDataset.__pulumiType;
    }

    /**
     * The identity of the resource.
     */
    public /*out*/ readonly identity!: pulumi.Output<outputs.machinelearningservices.IdentityResponse | undefined>;
    /**
     * Specifies the location of the resource.
     */
    public /*out*/ readonly location!: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Dataset properties
     */
    public /*out*/ readonly properties!: pulumi.Output<outputs.machinelearningservices.DatasetResponse>;
    /**
     * The sku of the workspace.
     */
    public /*out*/ readonly sku!: pulumi.Output<outputs.machinelearningservices.SkuResponse | undefined>;
    /**
     * Contains resource tags defined as key/value pairs.
     */
    public /*out*/ readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the type of the resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a MachineLearningDataset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineLearningDatasetArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if ((!args || args.datasetName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'datasetName'");
            }
            if ((!args || args.datasetType === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'datasetType'");
            }
            if ((!args || args.parameters === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'parameters'");
            }
            if ((!args || args.registration === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'registration'");
            }
            if ((!args || args.resourceGroupName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'workspaceName'");
            }
            inputs["datasetName"] = args ? args.datasetName : undefined;
            inputs["datasetType"] = args ? args.datasetType : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["registration"] = args ? args.registration : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["skipValidation"] = (args ? args.skipValidation : undefined) || false;
            inputs["timeSeries"] = args ? args.timeSeries : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["identity"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["properties"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["identity"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["properties"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:machinelearningservices/v20200501preview:MachineLearningDataset" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(MachineLearningDataset.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a MachineLearningDataset resource.
 */
export interface MachineLearningDatasetArgs {
    /**
     * The Dataset name.
     */
    readonly datasetName: pulumi.Input<string>;
    /**
     * Specifies dataset type.
     */
    readonly datasetType: pulumi.Input<string | enums.machinelearningservices.DatasetType>;
    readonly parameters: pulumi.Input<inputs.machinelearningservices.DatasetCreateRequestParameters>;
    readonly registration: pulumi.Input<inputs.machinelearningservices.DatasetCreateRequestRegistration>;
    /**
     * Name of the resource group in which workspace is located.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Skip validation that ensures data can be loaded from the dataset before registration.
     */
    readonly skipValidation?: pulumi.Input<boolean>;
    readonly timeSeries?: pulumi.Input<inputs.machinelearningservices.DatasetCreateRequestTimeSeries>;
    /**
     * Name of Azure Machine Learning workspace.
     */
    readonly workspaceName: pulumi.Input<string>;
}
