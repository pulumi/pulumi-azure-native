// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the properties of the specified machine learning workspace.
 */
export function getWorkspace(args: GetWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:machinelearningservices/v20230401preview:getWorkspace", {
        "resourceGroupName": args.resourceGroupName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetWorkspaceArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Name of Azure Machine Learning workspace.
     */
    workspaceName: string;
}

/**
 * An object that represents a machine learning workspace.
 */
export interface GetWorkspaceResult {
    /**
     * The flag to indicate whether to allow public access when behind VNet.
     */
    readonly allowPublicAccessWhenBehindVnet?: boolean;
    /**
     * ARM id of the application insights associated with this workspace.
     */
    readonly applicationInsights?: string;
    /**
     * A list of lean workspaces associated with Hub.
     */
    readonly associatedWorkspaces: string[];
    /**
     * A list of container registries used by Hub.
     */
    readonly containerRegistries?: string[];
    /**
     * ARM id of the container registry associated with this workspace.
     */
    readonly containerRegistry?: string;
    /**
     * The description of this workspace.
     */
    readonly description?: string;
    /**
     * Url for the discovery service to identify regional endpoints for machine learning experimentation services
     */
    readonly discoveryUrl?: string;
    /**
     * A flag to determine if workspace has data isolation enabled. The flag can only be set at the creation phase, it can't be updated.
     */
    readonly enableDataIsolation?: boolean;
    /**
     * The encryption settings of Azure ML workspace.
     */
    readonly encryption?: outputs.machinelearningservices.v20230401preview.EncryptionPropertyResponse;
    /**
     * A list of existing workspaces used by Hub to perform convert.
     */
    readonly existingWorkspaces?: string[];
    /**
     * Settings for feature store type workspace.
     */
    readonly featureStoreSettings?: outputs.machinelearningservices.v20230401preview.FeatureStoreSettingsResponse;
    /**
     * The friendly name for this workspace. This name in mutable
     */
    readonly friendlyName?: string;
    /**
     * The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
     */
    readonly hbiWorkspace?: boolean;
    /**
     * Resource Id of Hub used for lean workspace.
     */
    readonly hubResourceId?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The identity of the resource.
     */
    readonly identity?: outputs.machinelearningservices.v20230401preview.ManagedServiceIdentityResponse;
    /**
     * The compute name for image build
     */
    readonly imageBuildCompute?: string;
    /**
     * ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
     */
    readonly keyVault?: string;
    /**
     * A list of key vaults used by Hub.
     */
    readonly keyVaults?: string[];
    readonly kind?: string;
    /**
     * Specifies the location of the resource.
     */
    readonly location?: string;
    /**
     * Managed Network settings for a machine learning workspace.
     */
    readonly managedNetwork?: outputs.machinelearningservices.v20230401preview.ManagedNetworkSettingsResponse;
    /**
     * The URI associated with this workspace that machine learning flow must point at to set up tracking.
     */
    readonly mlFlowTrackingUri: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The notebook info of Azure ML workspace.
     */
    readonly notebookInfo: outputs.machinelearningservices.v20230401preview.NotebookResourceInfoResponse;
    /**
     * The user assigned identity resource id that represents the workspace identity.
     */
    readonly primaryUserAssignedIdentity?: string;
    /**
     * The list of private endpoint connections in the workspace.
     */
    readonly privateEndpointConnections: outputs.machinelearningservices.v20230401preview.PrivateEndpointConnectionResponse[];
    /**
     * Count of private connections in the workspace
     */
    readonly privateLinkCount: number;
    /**
     * The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
     */
    readonly provisioningState: string;
    /**
     * Whether requests from Public Network are allowed.
     */
    readonly publicNetworkAccess?: string;
    /**
     * The timestamp when the soft deleted workspace is going to be purged
     */
    readonly scheduledPurgeDate: string;
    /**
     * The service managed resource settings.
     */
    readonly serviceManagedResourcesSettings?: outputs.machinelearningservices.v20230401preview.ServiceManagedResourcesSettingsResponse;
    /**
     * The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
     */
    readonly serviceProvisionedResourceGroup: string;
    /**
     * The list of shared private link resources in this workspace.
     */
    readonly sharedPrivateLinkResources?: outputs.machinelearningservices.v20230401preview.SharedPrivateLinkResourceResponse[];
    /**
     * The sku of the workspace.
     */
    readonly sku?: outputs.machinelearningservices.v20230401preview.SkuResponse;
    /**
     * Retention time in days after workspace get soft deleted.
     */
    readonly softDeleteRetentionInDays?: number;
    /**
     * The timestamp when the workspace was soft deleted
     */
    readonly softDeletedAt: string;
    /**
     * ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
     */
    readonly storageAccount?: string;
    /**
     * : A list of storage accounts used by Hub.
     */
    readonly storageAccounts?: string[];
    /**
     * If the storage associated with the workspace has hierarchical namespace(HNS) enabled.
     */
    readonly storageHnsEnabled: boolean;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.machinelearningservices.v20230401preview.SystemDataResponse;
    /**
     * The auth mode used for accessing the system datastores of the workspace
     */
    readonly systemDatastoresAuthMode?: string;
    /**
     * Contains resource tags defined as key/value pairs.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The tenant id associated with this workspace.
     */
    readonly tenantId: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.
     */
    readonly v1LegacyMode?: boolean;
    /**
     * The immutable id associated with this workspace.
     */
    readonly workspaceId: string;
}
/**
 * Gets the properties of the specified machine learning workspace.
 */
export function getWorkspaceOutput(args: GetWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getWorkspace(a, opts))
}

export interface GetWorkspaceOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of Azure Machine Learning workspace.
     */
    workspaceName: pulumi.Input<string>;
}
