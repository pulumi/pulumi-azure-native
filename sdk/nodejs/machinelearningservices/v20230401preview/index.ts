// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { FeaturesetContainerEntityArgs } from "./featuresetContainerEntity";
export type FeaturesetContainerEntity = import("./featuresetContainerEntity").FeaturesetContainerEntity;
export const FeaturesetContainerEntity: typeof import("./featuresetContainerEntity").FeaturesetContainerEntity = null as any;
utilities.lazyLoad(exports, ["FeaturesetContainerEntity"], () => require("./featuresetContainerEntity"));

export { FeaturesetVersionArgs } from "./featuresetVersion";
export type FeaturesetVersion = import("./featuresetVersion").FeaturesetVersion;
export const FeaturesetVersion: typeof import("./featuresetVersion").FeaturesetVersion = null as any;
utilities.lazyLoad(exports, ["FeaturesetVersion"], () => require("./featuresetVersion"));

export { FeaturestoreEntityContainerEntityArgs } from "./featurestoreEntityContainerEntity";
export type FeaturestoreEntityContainerEntity = import("./featurestoreEntityContainerEntity").FeaturestoreEntityContainerEntity;
export const FeaturestoreEntityContainerEntity: typeof import("./featurestoreEntityContainerEntity").FeaturestoreEntityContainerEntity = null as any;
utilities.lazyLoad(exports, ["FeaturestoreEntityContainerEntity"], () => require("./featurestoreEntityContainerEntity"));

export { FeaturestoreEntityVersionArgs } from "./featurestoreEntityVersion";
export type FeaturestoreEntityVersion = import("./featurestoreEntityVersion").FeaturestoreEntityVersion;
export const FeaturestoreEntityVersion: typeof import("./featurestoreEntityVersion").FeaturestoreEntityVersion = null as any;
utilities.lazyLoad(exports, ["FeaturestoreEntityVersion"], () => require("./featurestoreEntityVersion"));

export { GetFeaturesetContainerEntityArgs, GetFeaturesetContainerEntityResult, GetFeaturesetContainerEntityOutputArgs } from "./getFeaturesetContainerEntity";
export const getFeaturesetContainerEntity: typeof import("./getFeaturesetContainerEntity").getFeaturesetContainerEntity = null as any;
export const getFeaturesetContainerEntityOutput: typeof import("./getFeaturesetContainerEntity").getFeaturesetContainerEntityOutput = null as any;
utilities.lazyLoad(exports, ["getFeaturesetContainerEntity","getFeaturesetContainerEntityOutput"], () => require("./getFeaturesetContainerEntity"));

export { GetFeaturesetVersionArgs, GetFeaturesetVersionResult, GetFeaturesetVersionOutputArgs } from "./getFeaturesetVersion";
export const getFeaturesetVersion: typeof import("./getFeaturesetVersion").getFeaturesetVersion = null as any;
export const getFeaturesetVersionOutput: typeof import("./getFeaturesetVersion").getFeaturesetVersionOutput = null as any;
utilities.lazyLoad(exports, ["getFeaturesetVersion","getFeaturesetVersionOutput"], () => require("./getFeaturesetVersion"));

export { GetFeaturestoreEntityContainerEntityArgs, GetFeaturestoreEntityContainerEntityResult, GetFeaturestoreEntityContainerEntityOutputArgs } from "./getFeaturestoreEntityContainerEntity";
export const getFeaturestoreEntityContainerEntity: typeof import("./getFeaturestoreEntityContainerEntity").getFeaturestoreEntityContainerEntity = null as any;
export const getFeaturestoreEntityContainerEntityOutput: typeof import("./getFeaturestoreEntityContainerEntity").getFeaturestoreEntityContainerEntityOutput = null as any;
utilities.lazyLoad(exports, ["getFeaturestoreEntityContainerEntity","getFeaturestoreEntityContainerEntityOutput"], () => require("./getFeaturestoreEntityContainerEntity"));

export { GetFeaturestoreEntityVersionArgs, GetFeaturestoreEntityVersionResult, GetFeaturestoreEntityVersionOutputArgs } from "./getFeaturestoreEntityVersion";
export const getFeaturestoreEntityVersion: typeof import("./getFeaturestoreEntityVersion").getFeaturestoreEntityVersion = null as any;
export const getFeaturestoreEntityVersionOutput: typeof import("./getFeaturestoreEntityVersion").getFeaturestoreEntityVersionOutput = null as any;
utilities.lazyLoad(exports, ["getFeaturestoreEntityVersion","getFeaturestoreEntityVersionOutput"], () => require("./getFeaturestoreEntityVersion"));

export { GetLabelingJobArgs, GetLabelingJobResult, GetLabelingJobOutputArgs } from "./getLabelingJob";
export const getLabelingJob: typeof import("./getLabelingJob").getLabelingJob = null as any;
export const getLabelingJobOutput: typeof import("./getLabelingJob").getLabelingJobOutput = null as any;
utilities.lazyLoad(exports, ["getLabelingJob","getLabelingJobOutput"], () => require("./getLabelingJob"));

export { GetManagedNetworkSettingsRuleArgs, GetManagedNetworkSettingsRuleResult, GetManagedNetworkSettingsRuleOutputArgs } from "./getManagedNetworkSettingsRule";
export const getManagedNetworkSettingsRule: typeof import("./getManagedNetworkSettingsRule").getManagedNetworkSettingsRule = null as any;
export const getManagedNetworkSettingsRuleOutput: typeof import("./getManagedNetworkSettingsRule").getManagedNetworkSettingsRuleOutput = null as any;
utilities.lazyLoad(exports, ["getManagedNetworkSettingsRule","getManagedNetworkSettingsRuleOutput"], () => require("./getManagedNetworkSettingsRule"));

export { GetWorkspaceArgs, GetWorkspaceResult, GetWorkspaceOutputArgs } from "./getWorkspace";
export const getWorkspace: typeof import("./getWorkspace").getWorkspace = null as any;
export const getWorkspaceOutput: typeof import("./getWorkspace").getWorkspaceOutput = null as any;
utilities.lazyLoad(exports, ["getWorkspace","getWorkspaceOutput"], () => require("./getWorkspace"));

export { LabelingJobArgs } from "./labelingJob";
export type LabelingJob = import("./labelingJob").LabelingJob;
export const LabelingJob: typeof import("./labelingJob").LabelingJob = null as any;
utilities.lazyLoad(exports, ["LabelingJob"], () => require("./labelingJob"));

export { ListFeaturesetVersionMaterializationJobsArgs, ListFeaturesetVersionMaterializationJobsResult, ListFeaturesetVersionMaterializationJobsOutputArgs } from "./listFeaturesetVersionMaterializationJobs";
export const listFeaturesetVersionMaterializationJobs: typeof import("./listFeaturesetVersionMaterializationJobs").listFeaturesetVersionMaterializationJobs = null as any;
export const listFeaturesetVersionMaterializationJobsOutput: typeof import("./listFeaturesetVersionMaterializationJobs").listFeaturesetVersionMaterializationJobsOutput = null as any;
utilities.lazyLoad(exports, ["listFeaturesetVersionMaterializationJobs","listFeaturesetVersionMaterializationJobsOutput"], () => require("./listFeaturesetVersionMaterializationJobs"));

export { ListWorkspaceKeysArgs, ListWorkspaceKeysResult, ListWorkspaceKeysOutputArgs } from "./listWorkspaceKeys";
export const listWorkspaceKeys: typeof import("./listWorkspaceKeys").listWorkspaceKeys = null as any;
export const listWorkspaceKeysOutput: typeof import("./listWorkspaceKeys").listWorkspaceKeysOutput = null as any;
utilities.lazyLoad(exports, ["listWorkspaceKeys","listWorkspaceKeysOutput"], () => require("./listWorkspaceKeys"));

export { ListWorkspaceNotebookAccessTokenArgs, ListWorkspaceNotebookAccessTokenResult, ListWorkspaceNotebookAccessTokenOutputArgs } from "./listWorkspaceNotebookAccessToken";
export const listWorkspaceNotebookAccessToken: typeof import("./listWorkspaceNotebookAccessToken").listWorkspaceNotebookAccessToken = null as any;
export const listWorkspaceNotebookAccessTokenOutput: typeof import("./listWorkspaceNotebookAccessToken").listWorkspaceNotebookAccessTokenOutput = null as any;
utilities.lazyLoad(exports, ["listWorkspaceNotebookAccessToken","listWorkspaceNotebookAccessTokenOutput"], () => require("./listWorkspaceNotebookAccessToken"));

export { ListWorkspaceNotebookKeysArgs, ListWorkspaceNotebookKeysResult, ListWorkspaceNotebookKeysOutputArgs } from "./listWorkspaceNotebookKeys";
export const listWorkspaceNotebookKeys: typeof import("./listWorkspaceNotebookKeys").listWorkspaceNotebookKeys = null as any;
export const listWorkspaceNotebookKeysOutput: typeof import("./listWorkspaceNotebookKeys").listWorkspaceNotebookKeysOutput = null as any;
utilities.lazyLoad(exports, ["listWorkspaceNotebookKeys","listWorkspaceNotebookKeysOutput"], () => require("./listWorkspaceNotebookKeys"));

export { ListWorkspaceStorageAccountKeysArgs, ListWorkspaceStorageAccountKeysResult, ListWorkspaceStorageAccountKeysOutputArgs } from "./listWorkspaceStorageAccountKeys";
export const listWorkspaceStorageAccountKeys: typeof import("./listWorkspaceStorageAccountKeys").listWorkspaceStorageAccountKeys = null as any;
export const listWorkspaceStorageAccountKeysOutput: typeof import("./listWorkspaceStorageAccountKeys").listWorkspaceStorageAccountKeysOutput = null as any;
utilities.lazyLoad(exports, ["listWorkspaceStorageAccountKeys","listWorkspaceStorageAccountKeysOutput"], () => require("./listWorkspaceStorageAccountKeys"));

export { ManagedNetworkSettingsRuleArgs } from "./managedNetworkSettingsRule";
export type ManagedNetworkSettingsRule = import("./managedNetworkSettingsRule").ManagedNetworkSettingsRule;
export const ManagedNetworkSettingsRule: typeof import("./managedNetworkSettingsRule").ManagedNetworkSettingsRule = null as any;
utilities.lazyLoad(exports, ["ManagedNetworkSettingsRule"], () => require("./managedNetworkSettingsRule"));

export { WorkspaceArgs } from "./workspace";
export type Workspace = import("./workspace").Workspace;
export const Workspace: typeof import("./workspace").Workspace = null as any;
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));


// Export enums:
export * from "../../types/enums/machinelearningservices/v20230401preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:machinelearningservices/v20230401preview:FeaturesetContainerEntity":
                return new FeaturesetContainerEntity(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230401preview:FeaturesetVersion":
                return new FeaturesetVersion(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230401preview:FeaturestoreEntityContainerEntity":
                return new FeaturestoreEntityContainerEntity(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230401preview:FeaturestoreEntityVersion":
                return new FeaturestoreEntityVersion(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230401preview:LabelingJob":
                return new LabelingJob(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230401preview:ManagedNetworkSettingsRule":
                return new ManagedNetworkSettingsRule(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230401preview:Workspace":
                return new Workspace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "machinelearningservices/v20230401preview", _module)
