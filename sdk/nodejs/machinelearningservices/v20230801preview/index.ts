// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { CapacityReservationGroupArgs } from "./capacityReservationGroup";
export type CapacityReservationGroup = import("./capacityReservationGroup").CapacityReservationGroup;
export const CapacityReservationGroup: typeof import("./capacityReservationGroup").CapacityReservationGroup = null as any;
utilities.lazyLoad(exports, ["CapacityReservationGroup"], () => require("./capacityReservationGroup"));

export { GetCapacityReservationGroupArgs, GetCapacityReservationGroupResult, GetCapacityReservationGroupOutputArgs } from "./getCapacityReservationGroup";
export const getCapacityReservationGroup: typeof import("./getCapacityReservationGroup").getCapacityReservationGroup = null as any;
export const getCapacityReservationGroupOutput: typeof import("./getCapacityReservationGroup").getCapacityReservationGroupOutput = null as any;
utilities.lazyLoad(exports, ["getCapacityReservationGroup","getCapacityReservationGroupOutput"], () => require("./getCapacityReservationGroup"));

export { GetComputeAllowedResizeSizesArgs, GetComputeAllowedResizeSizesResult, GetComputeAllowedResizeSizesOutputArgs } from "./getComputeAllowedResizeSizes";
export const getComputeAllowedResizeSizes: typeof import("./getComputeAllowedResizeSizes").getComputeAllowedResizeSizes = null as any;
export const getComputeAllowedResizeSizesOutput: typeof import("./getComputeAllowedResizeSizes").getComputeAllowedResizeSizesOutput = null as any;
utilities.lazyLoad(exports, ["getComputeAllowedResizeSizes","getComputeAllowedResizeSizesOutput"], () => require("./getComputeAllowedResizeSizes"));

export { GetInferenceEndpointArgs, GetInferenceEndpointResult, GetInferenceEndpointOutputArgs } from "./getInferenceEndpoint";
export const getInferenceEndpoint: typeof import("./getInferenceEndpoint").getInferenceEndpoint = null as any;
export const getInferenceEndpointOutput: typeof import("./getInferenceEndpoint").getInferenceEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getInferenceEndpoint","getInferenceEndpointOutput"], () => require("./getInferenceEndpoint"));

export { GetInferenceGroupArgs, GetInferenceGroupResult, GetInferenceGroupOutputArgs } from "./getInferenceGroup";
export const getInferenceGroup: typeof import("./getInferenceGroup").getInferenceGroup = null as any;
export const getInferenceGroupOutput: typeof import("./getInferenceGroup").getInferenceGroupOutput = null as any;
utilities.lazyLoad(exports, ["getInferenceGroup","getInferenceGroupOutput"], () => require("./getInferenceGroup"));

export { GetInferenceGroupStatusArgs, GetInferenceGroupStatusResult, GetInferenceGroupStatusOutputArgs } from "./getInferenceGroupStatus";
export const getInferenceGroupStatus: typeof import("./getInferenceGroupStatus").getInferenceGroupStatus = null as any;
export const getInferenceGroupStatusOutput: typeof import("./getInferenceGroupStatus").getInferenceGroupStatusOutput = null as any;
utilities.lazyLoad(exports, ["getInferenceGroupStatus","getInferenceGroupStatusOutput"], () => require("./getInferenceGroupStatus"));

export { GetInferencePoolArgs, GetInferencePoolResult, GetInferencePoolOutputArgs } from "./getInferencePool";
export const getInferencePool: typeof import("./getInferencePool").getInferencePool = null as any;
export const getInferencePoolOutput: typeof import("./getInferencePool").getInferencePoolOutput = null as any;
utilities.lazyLoad(exports, ["getInferencePool","getInferencePoolOutput"], () => require("./getInferencePool"));

export { GetInferencePoolStatusArgs, GetInferencePoolStatusResult, GetInferencePoolStatusOutputArgs } from "./getInferencePoolStatus";
export const getInferencePoolStatus: typeof import("./getInferencePoolStatus").getInferencePoolStatus = null as any;
export const getInferencePoolStatusOutput: typeof import("./getInferencePoolStatus").getInferencePoolStatusOutput = null as any;
utilities.lazyLoad(exports, ["getInferencePoolStatus","getInferencePoolStatusOutput"], () => require("./getInferencePoolStatus"));

export { GetServerlessEndpointArgs, GetServerlessEndpointResult, GetServerlessEndpointOutputArgs } from "./getServerlessEndpoint";
export const getServerlessEndpoint: typeof import("./getServerlessEndpoint").getServerlessEndpoint = null as any;
export const getServerlessEndpointOutput: typeof import("./getServerlessEndpoint").getServerlessEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getServerlessEndpoint","getServerlessEndpointOutput"], () => require("./getServerlessEndpoint"));

export { GetServerlessEndpointStatusArgs, GetServerlessEndpointStatusResult, GetServerlessEndpointStatusOutputArgs } from "./getServerlessEndpointStatus";
export const getServerlessEndpointStatus: typeof import("./getServerlessEndpointStatus").getServerlessEndpointStatus = null as any;
export const getServerlessEndpointStatusOutput: typeof import("./getServerlessEndpointStatus").getServerlessEndpointStatusOutput = null as any;
utilities.lazyLoad(exports, ["getServerlessEndpointStatus","getServerlessEndpointStatusOutput"], () => require("./getServerlessEndpointStatus"));

export { InferenceEndpointArgs } from "./inferenceEndpoint";
export type InferenceEndpoint = import("./inferenceEndpoint").InferenceEndpoint;
export const InferenceEndpoint: typeof import("./inferenceEndpoint").InferenceEndpoint = null as any;
utilities.lazyLoad(exports, ["InferenceEndpoint"], () => require("./inferenceEndpoint"));

export { InferenceGroupArgs } from "./inferenceGroup";
export type InferenceGroup = import("./inferenceGroup").InferenceGroup;
export const InferenceGroup: typeof import("./inferenceGroup").InferenceGroup = null as any;
utilities.lazyLoad(exports, ["InferenceGroup"], () => require("./inferenceGroup"));

export { InferencePoolArgs } from "./inferencePool";
export type InferencePool = import("./inferencePool").InferencePool;
export const InferencePool: typeof import("./inferencePool").InferencePool = null as any;
utilities.lazyLoad(exports, ["InferencePool"], () => require("./inferencePool"));

export { ListServerlessEndpointKeysArgs, ListServerlessEndpointKeysResult, ListServerlessEndpointKeysOutputArgs } from "./listServerlessEndpointKeys";
export const listServerlessEndpointKeys: typeof import("./listServerlessEndpointKeys").listServerlessEndpointKeys = null as any;
export const listServerlessEndpointKeysOutput: typeof import("./listServerlessEndpointKeys").listServerlessEndpointKeysOutput = null as any;
utilities.lazyLoad(exports, ["listServerlessEndpointKeys","listServerlessEndpointKeysOutput"], () => require("./listServerlessEndpointKeys"));

export { ServerlessEndpointArgs } from "./serverlessEndpoint";
export type ServerlessEndpoint = import("./serverlessEndpoint").ServerlessEndpoint;
export const ServerlessEndpoint: typeof import("./serverlessEndpoint").ServerlessEndpoint = null as any;
utilities.lazyLoad(exports, ["ServerlessEndpoint"], () => require("./serverlessEndpoint"));


// Export enums:
export * from "../../types/enums/machinelearningservices/v20230801preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:machinelearningservices/v20230801preview:CapacityReservationGroup":
                return new CapacityReservationGroup(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230801preview:InferenceEndpoint":
                return new InferenceEndpoint(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230801preview:InferenceGroup":
                return new InferenceGroup(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230801preview:InferencePool":
                return new InferencePool(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20230801preview:ServerlessEndpoint":
                return new ServerlessEndpoint(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "machinelearningservices/v20230801preview", _module)
