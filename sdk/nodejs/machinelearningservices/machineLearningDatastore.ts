// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Machine Learning datastore object wrapped into ARM resource envelope.
 *
 * Uses Azure REST API version 2020-05-01-preview. In version 2.x of the Azure Native provider, it used API version 2020-05-01-preview.
 */
export class MachineLearningDatastore extends pulumi.CustomResource {
    /**
     * Get an existing MachineLearningDatastore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MachineLearningDatastore {
        return new MachineLearningDatastore(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:machinelearningservices:MachineLearningDatastore';

    /**
     * Returns true if the given object is an instance of MachineLearningDatastore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachineLearningDatastore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachineLearningDatastore.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The identity of the resource.
     */
    declare public /*out*/ readonly identity: pulumi.Output<outputs.machinelearningservices.IdentityResponse | undefined>;
    /**
     * Specifies the location of the resource.
     */
    declare public /*out*/ readonly location: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the resource.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Datastore properties
     */
    declare public /*out*/ readonly properties: pulumi.Output<outputs.machinelearningservices.DatastoreResponse>;
    /**
     * The sku of the workspace.
     */
    declare public /*out*/ readonly sku: pulumi.Output<outputs.machinelearningservices.SkuResponse | undefined>;
    /**
     * Contains resource tags defined as key/value pairs.
     */
    declare public /*out*/ readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the type of the resource.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a MachineLearningDatastore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineLearningDatastoreArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.dataStoreType === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataStoreType'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.workspaceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["accountKey"] = args?.accountKey;
            resourceInputs["accountName"] = args?.accountName;
            resourceInputs["adlsResourceGroup"] = args?.adlsResourceGroup;
            resourceInputs["adlsSubscriptionId"] = args?.adlsSubscriptionId;
            resourceInputs["authorityUrl"] = args?.authorityUrl;
            resourceInputs["clientId"] = args?.clientId;
            resourceInputs["clientSecret"] = args?.clientSecret;
            resourceInputs["containerName"] = args?.containerName;
            resourceInputs["dataStoreType"] = args?.dataStoreType;
            resourceInputs["databaseName"] = args?.databaseName;
            resourceInputs["datastoreName"] = args?.datastoreName;
            resourceInputs["description"] = args?.description;
            resourceInputs["endpoint"] = args?.endpoint;
            resourceInputs["enforceSSL"] = (args?.enforceSSL) ?? true;
            resourceInputs["fileSystem"] = args?.fileSystem;
            resourceInputs["includeSecret"] = (args?.includeSecret) ?? true;
            resourceInputs["name"] = args?.name;
            resourceInputs["password"] = args?.password;
            resourceInputs["port"] = args?.port;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["resourceUrl"] = args?.resourceUrl;
            resourceInputs["sasToken"] = args?.sasToken;
            resourceInputs["serverName"] = args?.serverName;
            resourceInputs["shareName"] = args?.shareName;
            resourceInputs["skipValidation"] = args?.skipValidation;
            resourceInputs["storageAccountResourceGroup"] = args?.storageAccountResourceGroup;
            resourceInputs["storageAccountSubscriptionId"] = args?.storageAccountSubscriptionId;
            resourceInputs["storeName"] = args?.storeName;
            resourceInputs["tenantId"] = args?.tenantId;
            resourceInputs["userId"] = args?.userId;
            resourceInputs["userName"] = args?.userName;
            resourceInputs["workspaceName"] = args?.workspaceName;
            resourceInputs["workspaceSystemAssignedIdentity"] = args?.workspaceSystemAssignedIdentity;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:machinelearningservices/v20200501preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20210301preview:Datastore" }, { type: "azure-native:machinelearningservices/v20210301preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20220201preview:Datastore" }, { type: "azure-native:machinelearningservices/v20220201preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20220501:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20220601preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20221001:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20221001preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20221201preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20230201preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20230401:Datastore" }, { type: "azure-native:machinelearningservices/v20230401:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20230401preview:Datastore" }, { type: "azure-native:machinelearningservices/v20230401preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20230601preview:Datastore" }, { type: "azure-native:machinelearningservices/v20230601preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20230801preview:Datastore" }, { type: "azure-native:machinelearningservices/v20230801preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20231001:Datastore" }, { type: "azure-native:machinelearningservices/v20231001:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20240101preview:Datastore" }, { type: "azure-native:machinelearningservices/v20240101preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20240401:Datastore" }, { type: "azure-native:machinelearningservices/v20240401:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20240401preview:Datastore" }, { type: "azure-native:machinelearningservices/v20240401preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20240701preview:Datastore" }, { type: "azure-native:machinelearningservices/v20240701preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20241001:Datastore" }, { type: "azure-native:machinelearningservices/v20241001:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20241001preview:Datastore" }, { type: "azure-native:machinelearningservices/v20241001preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20250101preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20250401:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20250401preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20250601:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices/v20250701preview:MachineLearningDatastore" }, { type: "azure-native:machinelearningservices:Datastore" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(MachineLearningDatastore.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a MachineLearningDatastore resource.
 */
export interface MachineLearningDatastoreArgs {
    /**
     * Account Key of storage account.
     */
    accountKey?: pulumi.Input<string>;
    /**
     * The name of the storage account.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The resource group the ADLS store belongs to. Defaults to selected resource group.
     */
    adlsResourceGroup?: pulumi.Input<string>;
    /**
     * The ID of the subscription the ADLS store belongs to. Defaults to selected subscription.
     */
    adlsSubscriptionId?: pulumi.Input<string>;
    /**
     * Authority url used to authenticate the user.
     */
    authorityUrl?: pulumi.Input<string>;
    /**
     * The service principal's client/application ID.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The service principal's secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The name of the azure blob container.
     */
    containerName?: pulumi.Input<string>;
    /**
     * Specifies datastore type.
     */
    dataStoreType: pulumi.Input<string | enums.machinelearningservices.DatastoreTypeArm>;
    /**
     * The database name.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The Datastore name.
     */
    datastoreName?: pulumi.Input<string>;
    /**
     * The description of the datastore.
     */
    description?: pulumi.Input<string>;
    /**
     * The endpoint of the server.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * This sets the ssl value of the server. Defaults to true if not set.
     */
    enforceSSL?: pulumi.Input<boolean>;
    /**
     * The file system name of the ADLS Gen2.
     */
    fileSystem?: pulumi.Input<string>;
    /**
     * Include datastore secret in response.
     */
    includeSecret?: pulumi.Input<boolean>;
    /**
     * The name of the datastore.
     */
    name?: pulumi.Input<string>;
    /**
     * The password.
     */
    password?: pulumi.Input<string>;
    /**
     * The port number.
     */
    port?: pulumi.Input<string>;
    /**
     * The protocol to be used
     */
    protocol?: pulumi.Input<string>;
    /**
     * Name of the resource group in which workspace is located.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Determines what operations will be performed.
     */
    resourceUrl?: pulumi.Input<string>;
    /**
     * Sas Token of storage account.
     */
    sasToken?: pulumi.Input<string>;
    /**
     * The SQL/MySQL/PostgreSQL server name
     */
    serverName?: pulumi.Input<string>;
    /**
     * The name of the file share.
     */
    shareName?: pulumi.Input<string>;
    /**
     * Skip validation that ensures data can be loaded from the dataset before registration.
     */
    skipValidation?: pulumi.Input<boolean>;
    /**
     * The resource group of the storage account. Defaults to selected resource group
     */
    storageAccountResourceGroup?: pulumi.Input<string>;
    /**
     * The subscription ID of the storage account. Defaults to selected subscription
     */
    storageAccountSubscriptionId?: pulumi.Input<string>;
    /**
     * The ADLS store name.
     */
    storeName?: pulumi.Input<string>;
    /**
     * The service principal Tenant ID.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The user ID.
     */
    userId?: pulumi.Input<string>;
    /**
     * The username of the database user.
     */
    userName?: pulumi.Input<string>;
    /**
     * Name of Azure Machine Learning workspace.
     */
    workspaceName: pulumi.Input<string>;
    /**
     * If set to true, datastore support data access authenticated with Workspace MSI.
     */
    workspaceSystemAssignedIdentity?: pulumi.Input<boolean>;
}
