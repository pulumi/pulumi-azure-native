// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Machine Learning datastore object wrapped into ARM resource envelope.
 */
export class MachineLearningDatastore extends pulumi.CustomResource {
    /**
     * Get an existing MachineLearningDatastore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MachineLearningDatastore {
        return new MachineLearningDatastore(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:machinelearningservices/v20200501preview:MachineLearningDatastore';

    /**
     * Returns true if the given object is an instance of MachineLearningDatastore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachineLearningDatastore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachineLearningDatastore.__pulumiType;
    }

    /**
     * The identity of the resource.
     */
    public /*out*/ readonly identity!: pulumi.Output<outputs.machinelearningservices.v20200501preview.IdentityResponse | undefined>;
    /**
     * Specifies the location of the resource.
     */
    public /*out*/ readonly location!: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Datastore properties
     */
    public /*out*/ readonly properties!: pulumi.Output<outputs.machinelearningservices.v20200501preview.DatastoreResponse>;
    /**
     * The sku of the workspace.
     */
    public /*out*/ readonly sku!: pulumi.Output<outputs.machinelearningservices.v20200501preview.SkuResponse | undefined>;
    /**
     * Contains resource tags defined as key/value pairs.
     */
    public /*out*/ readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the type of the resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a MachineLearningDatastore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineLearningDatastoreArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.dataStoreType === undefined) {
                throw new Error("Missing required property 'dataStoreType'");
            }
            if (!args || args.datastoreName === undefined) {
                throw new Error("Missing required property 'datastoreName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.workspaceName === undefined) {
                throw new Error("Missing required property 'workspaceName'");
            }
            inputs["accountKey"] = args ? args.accountKey : undefined;
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["adlsResourceGroup"] = args ? args.adlsResourceGroup : undefined;
            inputs["adlsSubscriptionId"] = args ? args.adlsSubscriptionId : undefined;
            inputs["authorityUrl"] = args ? args.authorityUrl : undefined;
            inputs["clientId"] = args ? args.clientId : undefined;
            inputs["clientSecret"] = args ? args.clientSecret : undefined;
            inputs["containerName"] = args ? args.containerName : undefined;
            inputs["dataStoreType"] = args ? args.dataStoreType : undefined;
            inputs["databaseName"] = args ? args.databaseName : undefined;
            inputs["datastoreName"] = args ? args.datastoreName : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["endpoint"] = args ? args.endpoint : undefined;
            inputs["enforceSSL"] = args ? args.enforceSSL : undefined;
            inputs["fileSystem"] = args ? args.fileSystem : undefined;
            inputs["includeSecret"] = args ? args.includeSecret : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["resourceUrl"] = args ? args.resourceUrl : undefined;
            inputs["sasToken"] = args ? args.sasToken : undefined;
            inputs["serverName"] = args ? args.serverName : undefined;
            inputs["shareName"] = args ? args.shareName : undefined;
            inputs["skipValidation"] = args ? args.skipValidation : undefined;
            inputs["storageAccountResourceGroup"] = args ? args.storageAccountResourceGroup : undefined;
            inputs["storageAccountSubscriptionId"] = args ? args.storageAccountSubscriptionId : undefined;
            inputs["storeName"] = args ? args.storeName : undefined;
            inputs["tenantId"] = args ? args.tenantId : undefined;
            inputs["userId"] = args ? args.userId : undefined;
            inputs["userName"] = args ? args.userName : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["workspaceSystemAssignedIdentity"] = args ? args.workspaceSystemAssignedIdentity : undefined;
            inputs["identity"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["properties"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["identity"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["properties"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(MachineLearningDatastore.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a MachineLearningDatastore resource.
 */
export interface MachineLearningDatastoreArgs {
    /**
     * Account Key of storage account.
     */
    readonly accountKey?: pulumi.Input<string>;
    /**
     * The name of the storage account.
     */
    readonly accountName?: pulumi.Input<string>;
    /**
     * The resource group the ADLS store belongs to. Defaults to selected resource group.
     */
    readonly adlsResourceGroup?: pulumi.Input<string>;
    /**
     * The ID of the subscription the ADLS store belongs to. Defaults to selected subscription.
     */
    readonly adlsSubscriptionId?: pulumi.Input<string>;
    /**
     * Authority url used to authenticate the user.
     */
    readonly authorityUrl?: pulumi.Input<string>;
    /**
     * The service principal's client/application ID.
     */
    readonly clientId?: pulumi.Input<string>;
    /**
     * The service principal's secret.
     */
    readonly clientSecret?: pulumi.Input<string>;
    /**
     * The name of the azure blob container.
     */
    readonly containerName?: pulumi.Input<string>;
    /**
     * Specifies datastore type.
     */
    readonly dataStoreType: pulumi.Input<string>;
    /**
     * The database name.
     */
    readonly databaseName?: pulumi.Input<string>;
    /**
     * The Datastore name.
     */
    readonly datastoreName: pulumi.Input<string>;
    /**
     * The description of the datastore.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The endpoint of the server.
     */
    readonly endpoint?: pulumi.Input<string>;
    /**
     * This sets the ssl value of the server. Defaults to true if not set.
     */
    readonly enforceSSL?: pulumi.Input<boolean>;
    /**
     * The file system name of the ADLS Gen2.
     */
    readonly fileSystem?: pulumi.Input<string>;
    /**
     * Include datastore secret in response.
     */
    readonly includeSecret?: pulumi.Input<boolean>;
    /**
     * The name of the datastore.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The password.
     */
    readonly password?: pulumi.Input<string>;
    /**
     * The port number.
     */
    readonly port?: pulumi.Input<string>;
    /**
     * The protocol to be used
     */
    readonly protocol?: pulumi.Input<string>;
    /**
     * Name of the resource group in which workspace is located.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Determines what operations will be performed.
     */
    readonly resourceUrl?: pulumi.Input<string>;
    /**
     * Sas Token of storage account.
     */
    readonly sasToken?: pulumi.Input<string>;
    /**
     * The SQL/MySQL/PostgreSQL server name
     */
    readonly serverName?: pulumi.Input<string>;
    /**
     * The name of the file share.
     */
    readonly shareName?: pulumi.Input<string>;
    /**
     * Skip validation that ensures data can be loaded from the dataset before registration.
     */
    readonly skipValidation?: pulumi.Input<boolean>;
    /**
     * The resource group of the storage account. Defaults to selected resource group
     */
    readonly storageAccountResourceGroup?: pulumi.Input<string>;
    /**
     * The subscription ID of the storage account. Defaults to selected subscription
     */
    readonly storageAccountSubscriptionId?: pulumi.Input<string>;
    /**
     * The ADLS store name.
     */
    readonly storeName?: pulumi.Input<string>;
    /**
     * The service principal Tenant ID.
     */
    readonly tenantId?: pulumi.Input<string>;
    /**
     * The user ID.
     */
    readonly userId?: pulumi.Input<string>;
    /**
     * The username of the database user.
     */
    readonly userName?: pulumi.Input<string>;
    /**
     * Name of Azure Machine Learning workspace.
     */
    readonly workspaceName: pulumi.Input<string>;
    /**
     * If set to true, datastore support data access authenticated with Workspace MSI.
     */
    readonly workspaceSystemAssignedIdentity?: pulumi.Input<boolean>;
}
