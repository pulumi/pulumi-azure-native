// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ACIServiceArgs } from "./aciservice";
export type ACIService = import("./aciservice").ACIService;
export const ACIService: typeof import("./aciservice").ACIService = null as any;
utilities.lazyLoad(exports, ["ACIService"], () => require("./aciservice"));

export { AKSServiceArgs } from "./aksservice";
export type AKSService = import("./aksservice").AKSService;
export const AKSService: typeof import("./aksservice").AKSService = null as any;
utilities.lazyLoad(exports, ["AKSService"], () => require("./aksservice"));

export { EndpointVariantArgs } from "./endpointVariant";
export type EndpointVariant = import("./endpointVariant").EndpointVariant;
export const EndpointVariant: typeof import("./endpointVariant").EndpointVariant = null as any;
utilities.lazyLoad(exports, ["EndpointVariant"], () => require("./endpointVariant"));

export { GetACIServiceArgs, GetACIServiceResult, GetACIServiceOutputArgs } from "./getACIService";
export const getACIService: typeof import("./getACIService").getACIService = null as any;
export const getACIServiceOutput: typeof import("./getACIService").getACIServiceOutput = null as any;
utilities.lazyLoad(exports, ["getACIService","getACIServiceOutput"], () => require("./getACIService"));

export { GetAKSServiceArgs, GetAKSServiceResult, GetAKSServiceOutputArgs } from "./getAKSService";
export const getAKSService: typeof import("./getAKSService").getAKSService = null as any;
export const getAKSServiceOutput: typeof import("./getAKSService").getAKSServiceOutput = null as any;
utilities.lazyLoad(exports, ["getAKSService","getAKSServiceOutput"], () => require("./getAKSService"));

export { GetEndpointVariantArgs, GetEndpointVariantResult, GetEndpointVariantOutputArgs } from "./getEndpointVariant";
export const getEndpointVariant: typeof import("./getEndpointVariant").getEndpointVariant = null as any;
export const getEndpointVariantOutput: typeof import("./getEndpointVariant").getEndpointVariantOutput = null as any;
utilities.lazyLoad(exports, ["getEndpointVariant","getEndpointVariantOutput"], () => require("./getEndpointVariant"));

export { GetMachineLearningDatasetArgs, GetMachineLearningDatasetResult, GetMachineLearningDatasetOutputArgs } from "./getMachineLearningDataset";
export const getMachineLearningDataset: typeof import("./getMachineLearningDataset").getMachineLearningDataset = null as any;
export const getMachineLearningDatasetOutput: typeof import("./getMachineLearningDataset").getMachineLearningDatasetOutput = null as any;
utilities.lazyLoad(exports, ["getMachineLearningDataset","getMachineLearningDatasetOutput"], () => require("./getMachineLearningDataset"));

export { GetMachineLearningDatastoreArgs, GetMachineLearningDatastoreResult, GetMachineLearningDatastoreOutputArgs } from "./getMachineLearningDatastore";
export const getMachineLearningDatastore: typeof import("./getMachineLearningDatastore").getMachineLearningDatastore = null as any;
export const getMachineLearningDatastoreOutput: typeof import("./getMachineLearningDatastore").getMachineLearningDatastoreOutput = null as any;
utilities.lazyLoad(exports, ["getMachineLearningDatastore","getMachineLearningDatastoreOutput"], () => require("./getMachineLearningDatastore"));

export { MachineLearningDatasetArgs } from "./machineLearningDataset";
export type MachineLearningDataset = import("./machineLearningDataset").MachineLearningDataset;
export const MachineLearningDataset: typeof import("./machineLearningDataset").MachineLearningDataset = null as any;
utilities.lazyLoad(exports, ["MachineLearningDataset"], () => require("./machineLearningDataset"));

export { MachineLearningDatastoreArgs } from "./machineLearningDatastore";
export type MachineLearningDatastore = import("./machineLearningDatastore").MachineLearningDatastore;
export const MachineLearningDatastore: typeof import("./machineLearningDatastore").MachineLearningDatastore = null as any;
utilities.lazyLoad(exports, ["MachineLearningDatastore"], () => require("./machineLearningDatastore"));


// Export enums:
export * from "../../types/enums/machinelearningservices/v20200501preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:machinelearningservices/v20200501preview:ACIService":
                return new ACIService(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20200501preview:AKSService":
                return new AKSService(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20200501preview:EndpointVariant":
                return new EndpointVariant(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20200501preview:MachineLearningDataset":
                return new MachineLearningDataset(name, <any>undefined, { urn })
            case "azure-native:machinelearningservices/v20200501preview:MachineLearningDatastore":
                return new MachineLearningDatastore(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "machinelearningservices/v20200501preview", _module)
