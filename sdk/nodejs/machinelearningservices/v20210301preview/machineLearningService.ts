// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Machine Learning service object wrapped into ARM resource envelope.
 *
 * @deprecated Please use one of the variants: ACIService, AKSService, EndpointVariant.
 */
export class MachineLearningService extends pulumi.CustomResource {
    /**
     * Get an existing MachineLearningService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MachineLearningService {
        pulumi.log.warn("MachineLearningService is deprecated: Please use one of the variants: ACIService, AKSService, EndpointVariant.")
        return new MachineLearningService(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:machinelearningservices/v20210301preview:MachineLearningService';

    /**
     * Returns true if the given object is an instance of MachineLearningService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachineLearningService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachineLearningService.__pulumiType;
    }

    /**
     * The identity of the resource.
     */
    public /*out*/ readonly identity!: pulumi.Output<outputs.machinelearningservices.v20210301preview.IdentityResponse | undefined>;
    /**
     * Specifies the location of the resource.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Service properties
     */
    public readonly properties!: pulumi.Output<outputs.machinelearningservices.v20210301preview.ACIServiceResponseResponse | outputs.machinelearningservices.v20210301preview.AKSServiceResponseResponse | outputs.machinelearningservices.v20210301preview.AKSVariantResponseResponse>;
    /**
     * The sku of the workspace.
     */
    public /*out*/ readonly sku!: pulumi.Output<outputs.machinelearningservices.v20210301preview.SkuResponse | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.machinelearningservices.v20210301preview.SystemDataResponse>;
    /**
     * Contains resource tags defined as key/value pairs.
     */
    public /*out*/ readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a MachineLearningService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Please use one of the variants: ACIService, AKSService, EndpointVariant. */
    constructor(name: string, args: MachineLearningServiceArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("MachineLearningService is deprecated: Please use one of the variants: ACIService, AKSService, EndpointVariant.")
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.computeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeType'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            inputs["computeType"] = args ? args.computeType : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["environmentImageRequest"] = args ? args.environmentImageRequest : undefined;
            inputs["keys"] = args ? args.keys : undefined;
            inputs["kvTags"] = args ? args.kvTags : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["properties"] = args ? args.properties : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["serviceName"] = args ? args.serviceName : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["identity"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["identity"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["properties"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:machinelearningservices/v20210301preview:MachineLearningService" }, { type: "azure-native:machinelearningservices:MachineLearningService" }, { type: "azure-nextgen:machinelearningservices:MachineLearningService" }, { type: "azure-native:machinelearningservices/v20200501preview:MachineLearningService" }, { type: "azure-nextgen:machinelearningservices/v20200501preview:MachineLearningService" }, { type: "azure-native:machinelearningservices/v20200515preview:MachineLearningService" }, { type: "azure-nextgen:machinelearningservices/v20200515preview:MachineLearningService" }, { type: "azure-native:machinelearningservices/v20200901preview:MachineLearningService" }, { type: "azure-nextgen:machinelearningservices/v20200901preview:MachineLearningService" }, { type: "azure-native:machinelearningservices/v20210101:MachineLearningService" }, { type: "azure-nextgen:machinelearningservices/v20210101:MachineLearningService" }, { type: "azure-native:machinelearningservices/v20210401:MachineLearningService" }, { type: "azure-nextgen:machinelearningservices/v20210401:MachineLearningService" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(MachineLearningService.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a MachineLearningService resource.
 */
export interface MachineLearningServiceArgs {
    /**
     * The compute environment type for the service.
     */
    computeType: pulumi.Input<string | enums.machinelearningservices.v20210301preview.ComputeEnvironmentType>;
    /**
     * The description of the service.
     */
    description?: pulumi.Input<string>;
    /**
     * The Environment, models and assets needed for inferencing.
     */
    environmentImageRequest?: pulumi.Input<inputs.machinelearningservices.v20210301preview.CreateServiceRequestEnvironmentImageRequestArgs>;
    /**
     * The authentication keys.
     */
    keys?: pulumi.Input<inputs.machinelearningservices.v20210301preview.CreateServiceRequestKeysArgs>;
    /**
     * The service tag dictionary. Tags are mutable.
     */
    kvTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the Azure location/region.
     */
    location?: pulumi.Input<string>;
    /**
     * The service properties dictionary. Properties are immutable.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the Azure Machine Learning service.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Name of Azure Machine Learning workspace.
     */
    workspaceName: pulumi.Input<string>;
}
