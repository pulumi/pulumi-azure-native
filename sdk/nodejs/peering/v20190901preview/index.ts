// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetPeerAsnArgs, GetPeerAsnResult, GetPeerAsnOutputArgs } from "./getPeerAsn";
export const getPeerAsn: typeof import("./getPeerAsn").getPeerAsn = null as any;
export const getPeerAsnOutput: typeof import("./getPeerAsn").getPeerAsnOutput = null as any;

export { GetPeeringArgs, GetPeeringResult, GetPeeringOutputArgs } from "./getPeering";
export const getPeering: typeof import("./getPeering").getPeering = null as any;
export const getPeeringOutput: typeof import("./getPeering").getPeeringOutput = null as any;

export { GetPeeringServiceArgs, GetPeeringServiceResult, GetPeeringServiceOutputArgs } from "./getPeeringService";
export const getPeeringService: typeof import("./getPeeringService").getPeeringService = null as any;
export const getPeeringServiceOutput: typeof import("./getPeeringService").getPeeringServiceOutput = null as any;

export { GetPrefixArgs, GetPrefixResult, GetPrefixOutputArgs } from "./getPrefix";
export const getPrefix: typeof import("./getPrefix").getPrefix = null as any;
export const getPrefixOutput: typeof import("./getPrefix").getPrefixOutput = null as any;

export { PeerAsnArgs } from "./peerAsn";
export type PeerAsn = import("./peerAsn").PeerAsn;
export const PeerAsn: typeof import("./peerAsn").PeerAsn = null as any;

export { PeeringArgs } from "./peering";
export type Peering = import("./peering").Peering;
export const Peering: typeof import("./peering").Peering = null as any;

export { PeeringServiceArgs } from "./peeringService";
export type PeeringService = import("./peeringService").PeeringService;
export const PeeringService: typeof import("./peeringService").PeeringService = null as any;

export { PrefixArgs } from "./prefix";
export type Prefix = import("./prefix").Prefix;
export const Prefix: typeof import("./prefix").Prefix = null as any;

utilities.lazyLoad(exports, ["getPeerAsn","getPeerAsnOutput"], () => require("./getPeerAsn"));
utilities.lazyLoad(exports, ["getPeering","getPeeringOutput"], () => require("./getPeering"));
utilities.lazyLoad(exports, ["getPeeringService","getPeeringServiceOutput"], () => require("./getPeeringService"));
utilities.lazyLoad(exports, ["getPrefix","getPrefixOutput"], () => require("./getPrefix"));
utilities.lazyLoad(exports, ["PeerAsn"], () => require("./peerAsn"));
utilities.lazyLoad(exports, ["Peering"], () => require("./peering"));
utilities.lazyLoad(exports, ["PeeringService"], () => require("./peeringService"));
utilities.lazyLoad(exports, ["Prefix"], () => require("./prefix"));

// Export enums:
export * from "../../types/enums/peering/v20190901preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:peering/v20190901preview:PeerAsn":
                return new PeerAsn(name, <any>undefined, { urn })
            case "azure-native:peering/v20190901preview:Peering":
                return new Peering(name, <any>undefined, { urn })
            case "azure-native:peering/v20190901preview:PeeringService":
                return new PeeringService(name, <any>undefined, { urn })
            case "azure-native:peering/v20190901preview:Prefix":
                return new Prefix(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "peering/v20190901preview", _module)
