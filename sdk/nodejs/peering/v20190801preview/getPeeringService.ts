// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets an existing peering service with the specified name under the given subscription and resource group.
 */
/** @deprecated Version 2019-08-01-preview will be removed in v2 of the provider. */
export function getPeeringService(args: GetPeeringServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetPeeringServiceResult> {
    pulumi.log.warn("getPeeringService is deprecated: Version 2019-08-01-preview will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:peering/v20190801preview:getPeeringService", {
        "peeringServiceName": args.peeringServiceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetPeeringServiceArgs {
    /**
     * The name of the peering.
     */
    peeringServiceName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}

/**
 * Peering Service
 */
export interface GetPeeringServiceResult {
    /**
     * The ID of the resource.
     */
    readonly id: string;
    /**
     * The location of the resource.
     */
    readonly location: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * The PeeringServiceLocation of the Customer.
     */
    readonly peeringServiceLocation?: string;
    /**
     * The MAPS Provider Name.
     */
    readonly peeringServiceProvider?: string;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * The resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource.
     */
    readonly type: string;
}
/**
 * Gets an existing peering service with the specified name under the given subscription and resource group.
 */
/** @deprecated Version 2019-08-01-preview will be removed in v2 of the provider. */
export function getPeeringServiceOutput(args: GetPeeringServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPeeringServiceResult> {
    return pulumi.output(args).apply((a: any) => getPeeringService(a, opts))
}

export interface GetPeeringServiceOutputArgs {
    /**
     * The name of the peering.
     */
    peeringServiceName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
