// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ConnectionMonitorTestArgs } from "./connectionMonitorTest";
export type ConnectionMonitorTest = import("./connectionMonitorTest").ConnectionMonitorTest;
export const ConnectionMonitorTest: typeof import("./connectionMonitorTest").ConnectionMonitorTest = null as any;
utilities.lazyLoad(exports, ["ConnectionMonitorTest"], () => require("./connectionMonitorTest"));

export { GetConnectionMonitorTestArgs, GetConnectionMonitorTestResult, GetConnectionMonitorTestOutputArgs } from "./getConnectionMonitorTest";
export const getConnectionMonitorTest: typeof import("./getConnectionMonitorTest").getConnectionMonitorTest = null as any;
export const getConnectionMonitorTestOutput: typeof import("./getConnectionMonitorTest").getConnectionMonitorTestOutput = null as any;
utilities.lazyLoad(exports, ["getConnectionMonitorTest","getConnectionMonitorTestOutput"], () => require("./getConnectionMonitorTest"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:peering/v20210601:ConnectionMonitorTest":
                return new ConnectionMonitorTest(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "peering/v20210601", _module)
