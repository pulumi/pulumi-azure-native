// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the Azure NextGen package.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Provider.__pulumiType;
    }


    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let inputs: pulumi.Inputs = {};
        {
            inputs["auxiliaryTenantIds"] = pulumi.output((args ? args.auxiliaryTenantIds : undefined) || <any>utilities.getEnv("ARM_AUXILIARY_TENANT_IDS")).apply(JSON.stringify);
            inputs["clientCertificatePassword"] = (args ? args.clientCertificatePassword : undefined) || utilities.getEnv("ARM_CLIENT_CERTIFICATE_PASSWORD");
            inputs["clientCertificatePath"] = (args ? args.clientCertificatePath : undefined) || utilities.getEnv("ARM_CLIENT_CERTIFICATE_PATH");
            inputs["clientId"] = (args ? args.clientId : undefined) || utilities.getEnv("ARM_CLIENT_ID");
            inputs["clientSecret"] = (args ? args.clientSecret : undefined) || utilities.getEnv("ARM_CLIENT_SECRET");
            inputs["disablePulumiPartnerId"] = pulumi.output((args ? args.disablePulumiPartnerId : undefined) || <any>utilities.getEnvBoolean("ARM_DISABLE_PULUMI_PARTNER_ID")).apply(JSON.stringify);
            inputs["environment"] = (args ? args.environment : undefined) || (utilities.getEnv("ARM_ENVIRONMENT") || "public");
            inputs["msiEndpoint"] = (args ? args.msiEndpoint : undefined) || utilities.getEnv("ARM_MSI_ENDPOINT");
            inputs["partnerId"] = (args ? args.partnerId : undefined) || utilities.getEnv("ARM_PARTNER_ID");
            inputs["subscriptionId"] = (args ? args.subscriptionId : undefined) || utilities.getEnv("ARM_SUBSCRIPTION_ID");
            inputs["tenantId"] = (args ? args.tenantId : undefined) || utilities.getEnv("ARM_TENANT_ID");
            inputs["useMsi"] = pulumi.output((args ? args.useMsi : undefined) || (<any>utilities.getEnvBoolean("ARM_USE_MSI") || false)).apply(JSON.stringify);
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Provider.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    readonly auxiliaryTenantIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client Certificate
     */
    readonly clientCertificatePassword?: pulumi.Input<string>;
    /**
     * The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service Principal using a Client Certificate.
     */
    readonly clientCertificatePath?: pulumi.Input<string>;
    /**
     * The Client ID which should be used.
     */
    readonly clientId?: pulumi.Input<string>;
    /**
     * The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.
     */
    readonly clientSecret?: pulumi.Input<string>;
    /**
     * This will disable the Pulumi Partner ID which is used if a custom `partnerId` isn't specified.
     */
    readonly disablePulumiPartnerId?: pulumi.Input<boolean>;
    /**
     * The Cloud Environment which should be used. Possible values are public, usgovernment, german, and china. Defaults to public.
     */
    readonly environment?: pulumi.Input<string>;
    /**
     * The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected automatically. 
     */
    readonly msiEndpoint?: pulumi.Input<string>;
    /**
     * A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.
     */
    readonly partnerId?: pulumi.Input<string>;
    /**
     * The Subscription ID which should be used.
     */
    readonly subscriptionId?: pulumi.Input<string>;
    /**
     * The Tenant ID which should be used.
     */
    readonly tenantId?: pulumi.Input<string>;
    /**
     * Allowed Managed Service Identity be used for Authentication.
     */
    readonly useMsi?: pulumi.Input<boolean>;
}
