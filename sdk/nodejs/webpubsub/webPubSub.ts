// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A class represent a resource.
 *
 * Uses Azure REST API version 2024-03-01. In version 2.x of the Azure Native provider, it used API version 2023-02-01.
 *
 * Other available API versions: 2023-02-01, 2023-03-01-preview, 2023-06-01-preview, 2023-08-01-preview, 2024-01-01-preview, 2024-04-01-preview, 2024-08-01-preview, 2024-10-01-preview, 2025-01-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native webpubsub [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class WebPubSub extends pulumi.CustomResource {
    /**
     * Get an existing WebPubSub resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WebPubSub {
        return new WebPubSub(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:webpubsub:WebPubSub';

    /**
     * Returns true if the given object is an instance of WebPubSub.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebPubSub {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebPubSub.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * DisableLocalAuth
     * Enable or disable aad auth
     * When set as true, connection with AuthType=aad won't work.
     */
    declare public readonly disableAadAuth: pulumi.Output<boolean | undefined>;
    /**
     * DisableLocalAuth
     * Enable or disable local auth with AccessKey
     * When set as true, connection with AccessKey=xxx won't work.
     */
    declare public readonly disableLocalAuth: pulumi.Output<boolean | undefined>;
    /**
     * The publicly accessible IP of the resource.
     */
    declare public /*out*/ readonly externalIP: pulumi.Output<string>;
    /**
     * FQDN of the service instance.
     */
    declare public /*out*/ readonly hostName: pulumi.Output<string>;
    /**
     * Deprecated.
     */
    declare public /*out*/ readonly hostNamePrefix: pulumi.Output<string>;
    /**
     * A class represent managed identities used for request and response
     */
    declare public readonly identity: pulumi.Output<outputs.webpubsub.ManagedIdentityResponse | undefined>;
    /**
     * The kind of the service
     */
    declare public readonly kind: pulumi.Output<string | undefined>;
    /**
     * Live trace configuration of a Microsoft.SignalRService resource.
     */
    declare public readonly liveTraceConfiguration: pulumi.Output<outputs.webpubsub.LiveTraceConfigurationResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Network ACLs for the resource
     */
    declare public readonly networkACLs: pulumi.Output<outputs.webpubsub.WebPubSubNetworkACLsResponse | undefined>;
    /**
     * Private endpoint connections to the resource.
     */
    declare public /*out*/ readonly privateEndpointConnections: pulumi.Output<outputs.webpubsub.PrivateEndpointConnectionResponse[]>;
    /**
     * Provisioning state of the resource.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * Enable or disable public network access. Default to "Enabled".
     * When it's Enabled, network ACLs still apply.
     * When it's Disabled, public network access is always disabled no matter what you set in network ACLs.
     */
    declare public readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * The publicly accessible port of the resource which is designed for browser/client side usage.
     */
    declare public /*out*/ readonly publicPort: pulumi.Output<number>;
    /**
     * Enable or disable the regional endpoint. Default to "Enabled".
     * When it's Disabled, new connections will not be routed to this endpoint, however existing connections will not be affected.
     * This property is replica specific. Disable the regional endpoint without replica is not allowed.
     */
    declare public readonly regionEndpointEnabled: pulumi.Output<string | undefined>;
    /**
     * Resource log configuration of a Microsoft.SignalRService resource.
     */
    declare public readonly resourceLogConfiguration: pulumi.Output<outputs.webpubsub.ResourceLogConfigurationResponse | undefined>;
    /**
     * Stop or start the resource.  Default to "False".
     * When it's true, the data plane of the resource is shutdown.
     * When it's false, the data plane of the resource is started.
     */
    declare public readonly resourceStopped: pulumi.Output<string | undefined>;
    /**
     * The publicly accessible port of the resource which is designed for customer server side usage.
     */
    declare public /*out*/ readonly serverPort: pulumi.Output<number>;
    /**
     * The list of shared private link resources.
     */
    declare public /*out*/ readonly sharedPrivateLinkResources: pulumi.Output<outputs.webpubsub.SharedPrivateLinkResourceResponse[]>;
    /**
     * The billing information of the resource.
     */
    declare public readonly sku: pulumi.Output<outputs.webpubsub.ResourceSkuResponse | undefined>;
    /**
     * SocketIO settings for the resource
     */
    declare public readonly socketIO: pulumi.Output<outputs.webpubsub.WebPubSubSocketIOSettingsResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.webpubsub.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * TLS settings for the resource
     */
    declare public readonly tls: pulumi.Output<outputs.webpubsub.WebPubSubTlsSettingsResponse | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * Version of the resource. Probably you need the same or higher version of client SDKs.
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;

    /**
     * Create a WebPubSub resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebPubSubArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["disableAadAuth"] = (args?.disableAadAuth) ?? false;
            resourceInputs["disableLocalAuth"] = (args?.disableLocalAuth) ?? false;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["kind"] = args?.kind;
            resourceInputs["liveTraceConfiguration"] = args ? (args.liveTraceConfiguration ? pulumi.output(args.liveTraceConfiguration).apply(inputs.webpubsub.liveTraceConfigurationArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["location"] = args?.location;
            resourceInputs["networkACLs"] = args?.networkACLs;
            resourceInputs["publicNetworkAccess"] = (args?.publicNetworkAccess) ?? "Enabled";
            resourceInputs["regionEndpointEnabled"] = (args?.regionEndpointEnabled) ?? "Enabled";
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["resourceLogConfiguration"] = args?.resourceLogConfiguration;
            resourceInputs["resourceName"] = args?.resourceName;
            resourceInputs["resourceStopped"] = (args?.resourceStopped) ?? "false";
            resourceInputs["sku"] = args?.sku;
            resourceInputs["socketIO"] = args?.socketIO;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["tls"] = args ? (args.tls ? pulumi.output(args.tls).apply(inputs.webpubsub.webPubSubTlsSettingsArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["externalIP"] = undefined /*out*/;
            resourceInputs["hostName"] = undefined /*out*/;
            resourceInputs["hostNamePrefix"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["privateEndpointConnections"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["publicPort"] = undefined /*out*/;
            resourceInputs["serverPort"] = undefined /*out*/;
            resourceInputs["sharedPrivateLinkResources"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["disableAadAuth"] = undefined /*out*/;
            resourceInputs["disableLocalAuth"] = undefined /*out*/;
            resourceInputs["externalIP"] = undefined /*out*/;
            resourceInputs["hostName"] = undefined /*out*/;
            resourceInputs["hostNamePrefix"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["liveTraceConfiguration"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkACLs"] = undefined /*out*/;
            resourceInputs["privateEndpointConnections"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["publicNetworkAccess"] = undefined /*out*/;
            resourceInputs["publicPort"] = undefined /*out*/;
            resourceInputs["regionEndpointEnabled"] = undefined /*out*/;
            resourceInputs["resourceLogConfiguration"] = undefined /*out*/;
            resourceInputs["resourceStopped"] = undefined /*out*/;
            resourceInputs["serverPort"] = undefined /*out*/;
            resourceInputs["sharedPrivateLinkResources"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["socketIO"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["tls"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:webpubsub/v20210401preview:WebPubSub" }, { type: "azure-native:webpubsub/v20210601preview:WebPubSub" }, { type: "azure-native:webpubsub/v20210901preview:WebPubSub" }, { type: "azure-native:webpubsub/v20211001:WebPubSub" }, { type: "azure-native:webpubsub/v20220801preview:WebPubSub" }, { type: "azure-native:webpubsub/v20230201:WebPubSub" }, { type: "azure-native:webpubsub/v20230301preview:WebPubSub" }, { type: "azure-native:webpubsub/v20230601preview:WebPubSub" }, { type: "azure-native:webpubsub/v20230801preview:WebPubSub" }, { type: "azure-native:webpubsub/v20240101preview:WebPubSub" }, { type: "azure-native:webpubsub/v20240301:WebPubSub" }, { type: "azure-native:webpubsub/v20240401preview:WebPubSub" }, { type: "azure-native:webpubsub/v20240801preview:WebPubSub" }, { type: "azure-native:webpubsub/v20241001preview:WebPubSub" }, { type: "azure-native:webpubsub/v20250101preview:WebPubSub" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(WebPubSub.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a WebPubSub resource.
 */
export interface WebPubSubArgs {
    /**
     * DisableLocalAuth
     * Enable or disable aad auth
     * When set as true, connection with AuthType=aad won't work.
     */
    disableAadAuth?: pulumi.Input<boolean>;
    /**
     * DisableLocalAuth
     * Enable or disable local auth with AccessKey
     * When set as true, connection with AccessKey=xxx won't work.
     */
    disableLocalAuth?: pulumi.Input<boolean>;
    /**
     * A class represent managed identities used for request and response
     */
    identity?: pulumi.Input<inputs.webpubsub.ManagedIdentityArgs>;
    /**
     * The kind of the service
     */
    kind?: pulumi.Input<string | enums.webpubsub.ServiceKind>;
    /**
     * Live trace configuration of a Microsoft.SignalRService resource.
     */
    liveTraceConfiguration?: pulumi.Input<inputs.webpubsub.LiveTraceConfigurationArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Network ACLs for the resource
     */
    networkACLs?: pulumi.Input<inputs.webpubsub.WebPubSubNetworkACLsArgs>;
    /**
     * Enable or disable public network access. Default to "Enabled".
     * When it's Enabled, network ACLs still apply.
     * When it's Disabled, public network access is always disabled no matter what you set in network ACLs.
     */
    publicNetworkAccess?: pulumi.Input<string>;
    /**
     * Enable or disable the regional endpoint. Default to "Enabled".
     * When it's Disabled, new connections will not be routed to this endpoint, however existing connections will not be affected.
     * This property is replica specific. Disable the regional endpoint without replica is not allowed.
     */
    regionEndpointEnabled?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource log configuration of a Microsoft.SignalRService resource.
     */
    resourceLogConfiguration?: pulumi.Input<inputs.webpubsub.ResourceLogConfigurationArgs>;
    /**
     * The name of the resource.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * Stop or start the resource.  Default to "False".
     * When it's true, the data plane of the resource is shutdown.
     * When it's false, the data plane of the resource is started.
     */
    resourceStopped?: pulumi.Input<string>;
    /**
     * The billing information of the resource.
     */
    sku?: pulumi.Input<inputs.webpubsub.ResourceSkuArgs>;
    /**
     * SocketIO settings for the resource
     */
    socketIO?: pulumi.Input<inputs.webpubsub.WebPubSubSocketIOSettingsArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * TLS settings for the resource
     */
    tls?: pulumi.Input<inputs.webpubsub.WebPubSubTlsSettingsArgs>;
}
