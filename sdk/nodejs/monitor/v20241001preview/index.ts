// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetPipelineGroupArgs, GetPipelineGroupResult, GetPipelineGroupOutputArgs } from "./getPipelineGroup";
export const getPipelineGroup: typeof import("./getPipelineGroup").getPipelineGroup = null as any;
export const getPipelineGroupOutput: typeof import("./getPipelineGroup").getPipelineGroupOutput = null as any;
utilities.lazyLoad(exports, ["getPipelineGroup","getPipelineGroupOutput"], () => require("./getPipelineGroup"));

export { PipelineGroupArgs } from "./pipelineGroup";
export type PipelineGroup = import("./pipelineGroup").PipelineGroup;
export const PipelineGroup: typeof import("./pipelineGroup").PipelineGroup = null as any;
utilities.lazyLoad(exports, ["PipelineGroup"], () => require("./pipelineGroup"));


// Export enums:
export * from "../../types/enums/monitor/v20241001preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:monitor/v20241001preview:PipelineGroup":
                return new PipelineGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "monitor/v20241001preview", _module)
