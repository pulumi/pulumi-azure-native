// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetMonitoringAccountArgs, GetMonitoringAccountResult, GetMonitoringAccountOutputArgs } from "./getMonitoringAccount";
export const getMonitoringAccount: typeof import("./getMonitoringAccount").getMonitoringAccount = null as any;
export const getMonitoringAccountOutput: typeof import("./getMonitoringAccount").getMonitoringAccountOutput = null as any;
utilities.lazyLoad(exports, ["getMonitoringAccount","getMonitoringAccountOutput"], () => require("./getMonitoringAccount"));

export { MonitoringAccountArgs } from "./monitoringAccount";
export type MonitoringAccount = import("./monitoringAccount").MonitoringAccount;
export const MonitoringAccount: typeof import("./monitoringAccount").MonitoringAccount = null as any;
utilities.lazyLoad(exports, ["MonitoringAccount"], () => require("./monitoringAccount"));


// Export sub-modules:
import * as v20210603preview from "./v20210603preview";

export {
    v20210603preview,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:monitor:MonitoringAccount":
                return new MonitoringAccount(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "monitor", _module)
