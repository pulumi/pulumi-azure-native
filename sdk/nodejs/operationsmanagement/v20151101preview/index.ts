// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./getManagementAssociation";
export * from "./getManagementConfiguration";
export * from "./getSolution";
export * from "./managementAssociation";
export * from "./managementConfiguration";
export * from "./solution";

// Import resources to register:
import { ManagementAssociation } from "./managementAssociation";
import { ManagementConfiguration } from "./managementConfiguration";
import { Solution } from "./solution";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:operationsmanagement/v20151101preview:ManagementAssociation":
                return new ManagementAssociation(name, <any>undefined, { urn })
            case "azure-nextgen:operationsmanagement/v20151101preview:ManagementConfiguration":
                return new ManagementConfiguration(name, <any>undefined, { urn })
            case "azure-nextgen:operationsmanagement/v20151101preview:Solution":
                return new Solution(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "operationsmanagement/v20151101preview", _module)
