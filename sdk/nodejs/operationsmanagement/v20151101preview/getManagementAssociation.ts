// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getManagementAssociation(args: GetManagementAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementAssociationResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:operationsmanagement/v20151101preview:getManagementAssociation", {
        "managementAssociationName": args.managementAssociationName,
        "providerName": args.providerName,
        "resourceGroupName": args.resourceGroupName,
        "resourceName": args.resourceName,
        "resourceType": args.resourceType,
    }, opts);
}

export interface GetManagementAssociationArgs {
    /**
     * User ManagementAssociation Name.
     */
    readonly managementAssociationName: string;
    /**
     * Provider name for the parent resource.
     */
    readonly providerName: string;
    /**
     * The name of the resource group to get. The name is case insensitive.
     */
    readonly resourceGroupName: string;
    /**
     * Parent resource name.
     */
    readonly resourceName: string;
    /**
     * Resource type for the parent resource
     */
    readonly resourceType: string;
}

/**
 * The container for solution.
 */
export interface GetManagementAssociationResult {
    /**
     * Resource location
     */
    readonly location?: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Properties for ManagementAssociation object supported by the OperationsManagement resource provider.
     */
    readonly properties: outputs.operationsmanagement.v20151101preview.ManagementAssociationPropertiesResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}
