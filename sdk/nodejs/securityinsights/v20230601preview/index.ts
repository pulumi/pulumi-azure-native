// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { BookmarkRelationArgs } from "./bookmarkRelation";
export type BookmarkRelation = import("./bookmarkRelation").BookmarkRelation;
export const BookmarkRelation: typeof import("./bookmarkRelation").BookmarkRelation = null as any;
utilities.lazyLoad(exports, ["BookmarkRelation"], () => require("./bookmarkRelation"));

export { ContentPackageArgs } from "./contentPackage";
export type ContentPackage = import("./contentPackage").ContentPackage;
export const ContentPackage: typeof import("./contentPackage").ContentPackage = null as any;
utilities.lazyLoad(exports, ["ContentPackage"], () => require("./contentPackage"));

export { ContentTemplateArgs } from "./contentTemplate";
export type ContentTemplate = import("./contentTemplate").ContentTemplate;
export const ContentTemplate: typeof import("./contentTemplate").ContentTemplate = null as any;
utilities.lazyLoad(exports, ["ContentTemplate"], () => require("./contentTemplate"));

export { FileImportArgs } from "./fileImport";
export type FileImport = import("./fileImport").FileImport;
export const FileImport: typeof import("./fileImport").FileImport = null as any;
utilities.lazyLoad(exports, ["FileImport"], () => require("./fileImport"));

export { GetBookmarkRelationArgs, GetBookmarkRelationResult, GetBookmarkRelationOutputArgs } from "./getBookmarkRelation";
export const getBookmarkRelation: typeof import("./getBookmarkRelation").getBookmarkRelation = null as any;
export const getBookmarkRelationOutput: typeof import("./getBookmarkRelation").getBookmarkRelationOutput = null as any;
utilities.lazyLoad(exports, ["getBookmarkRelation","getBookmarkRelationOutput"], () => require("./getBookmarkRelation"));

export { GetContentPackageArgs, GetContentPackageResult, GetContentPackageOutputArgs } from "./getContentPackage";
export const getContentPackage: typeof import("./getContentPackage").getContentPackage = null as any;
export const getContentPackageOutput: typeof import("./getContentPackage").getContentPackageOutput = null as any;
utilities.lazyLoad(exports, ["getContentPackage","getContentPackageOutput"], () => require("./getContentPackage"));

export { GetContentTemplateArgs, GetContentTemplateResult, GetContentTemplateOutputArgs } from "./getContentTemplate";
export const getContentTemplate: typeof import("./getContentTemplate").getContentTemplate = null as any;
export const getContentTemplateOutput: typeof import("./getContentTemplate").getContentTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getContentTemplate","getContentTemplateOutput"], () => require("./getContentTemplate"));

export { GetEntitiesGetTimelineArgs, GetEntitiesGetTimelineResult, GetEntitiesGetTimelineOutputArgs } from "./getEntitiesGetTimeline";
export const getEntitiesGetTimeline: typeof import("./getEntitiesGetTimeline").getEntitiesGetTimeline = null as any;
export const getEntitiesGetTimelineOutput: typeof import("./getEntitiesGetTimeline").getEntitiesGetTimelineOutput = null as any;
utilities.lazyLoad(exports, ["getEntitiesGetTimeline","getEntitiesGetTimelineOutput"], () => require("./getEntitiesGetTimeline"));

export { GetEntityInsightsArgs, GetEntityInsightsResult, GetEntityInsightsOutputArgs } from "./getEntityInsights";
export const getEntityInsights: typeof import("./getEntityInsights").getEntityInsights = null as any;
export const getEntityInsightsOutput: typeof import("./getEntityInsights").getEntityInsightsOutput = null as any;
utilities.lazyLoad(exports, ["getEntityInsights","getEntityInsightsOutput"], () => require("./getEntityInsights"));

export { GetFileImportArgs, GetFileImportResult, GetFileImportOutputArgs } from "./getFileImport";
export const getFileImport: typeof import("./getFileImport").getFileImport = null as any;
export const getFileImportOutput: typeof import("./getFileImport").getFileImportOutput = null as any;
utilities.lazyLoad(exports, ["getFileImport","getFileImportOutput"], () => require("./getFileImport"));

export { GetHuntArgs, GetHuntResult, GetHuntOutputArgs } from "./getHunt";
export const getHunt: typeof import("./getHunt").getHunt = null as any;
export const getHuntOutput: typeof import("./getHunt").getHuntOutput = null as any;
utilities.lazyLoad(exports, ["getHunt","getHuntOutput"], () => require("./getHunt"));

export { GetHuntCommentArgs, GetHuntCommentResult, GetHuntCommentOutputArgs } from "./getHuntComment";
export const getHuntComment: typeof import("./getHuntComment").getHuntComment = null as any;
export const getHuntCommentOutput: typeof import("./getHuntComment").getHuntCommentOutput = null as any;
utilities.lazyLoad(exports, ["getHuntComment","getHuntCommentOutput"], () => require("./getHuntComment"));

export { GetHuntRelationArgs, GetHuntRelationResult, GetHuntRelationOutputArgs } from "./getHuntRelation";
export const getHuntRelation: typeof import("./getHuntRelation").getHuntRelation = null as any;
export const getHuntRelationOutput: typeof import("./getHuntRelation").getHuntRelationOutput = null as any;
utilities.lazyLoad(exports, ["getHuntRelation","getHuntRelationOutput"], () => require("./getHuntRelation"));

export { GetIncidentTaskArgs, GetIncidentTaskResult, GetIncidentTaskOutputArgs } from "./getIncidentTask";
export const getIncidentTask: typeof import("./getIncidentTask").getIncidentTask = null as any;
export const getIncidentTaskOutput: typeof import("./getIncidentTask").getIncidentTaskOutput = null as any;
utilities.lazyLoad(exports, ["getIncidentTask","getIncidentTaskOutput"], () => require("./getIncidentTask"));

export { GetWorkspaceManagerAssignmentArgs, GetWorkspaceManagerAssignmentResult, GetWorkspaceManagerAssignmentOutputArgs } from "./getWorkspaceManagerAssignment";
export const getWorkspaceManagerAssignment: typeof import("./getWorkspaceManagerAssignment").getWorkspaceManagerAssignment = null as any;
export const getWorkspaceManagerAssignmentOutput: typeof import("./getWorkspaceManagerAssignment").getWorkspaceManagerAssignmentOutput = null as any;
utilities.lazyLoad(exports, ["getWorkspaceManagerAssignment","getWorkspaceManagerAssignmentOutput"], () => require("./getWorkspaceManagerAssignment"));

export { GetWorkspaceManagerConfigurationArgs, GetWorkspaceManagerConfigurationResult, GetWorkspaceManagerConfigurationOutputArgs } from "./getWorkspaceManagerConfiguration";
export const getWorkspaceManagerConfiguration: typeof import("./getWorkspaceManagerConfiguration").getWorkspaceManagerConfiguration = null as any;
export const getWorkspaceManagerConfigurationOutput: typeof import("./getWorkspaceManagerConfiguration").getWorkspaceManagerConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getWorkspaceManagerConfiguration","getWorkspaceManagerConfigurationOutput"], () => require("./getWorkspaceManagerConfiguration"));

export { GetWorkspaceManagerGroupArgs, GetWorkspaceManagerGroupResult, GetWorkspaceManagerGroupOutputArgs } from "./getWorkspaceManagerGroup";
export const getWorkspaceManagerGroup: typeof import("./getWorkspaceManagerGroup").getWorkspaceManagerGroup = null as any;
export const getWorkspaceManagerGroupOutput: typeof import("./getWorkspaceManagerGroup").getWorkspaceManagerGroupOutput = null as any;
utilities.lazyLoad(exports, ["getWorkspaceManagerGroup","getWorkspaceManagerGroupOutput"], () => require("./getWorkspaceManagerGroup"));

export { GetWorkspaceManagerMemberArgs, GetWorkspaceManagerMemberResult, GetWorkspaceManagerMemberOutputArgs } from "./getWorkspaceManagerMember";
export const getWorkspaceManagerMember: typeof import("./getWorkspaceManagerMember").getWorkspaceManagerMember = null as any;
export const getWorkspaceManagerMemberOutput: typeof import("./getWorkspaceManagerMember").getWorkspaceManagerMemberOutput = null as any;
utilities.lazyLoad(exports, ["getWorkspaceManagerMember","getWorkspaceManagerMemberOutput"], () => require("./getWorkspaceManagerMember"));

export { HuntArgs } from "./hunt";
export type Hunt = import("./hunt").Hunt;
export const Hunt: typeof import("./hunt").Hunt = null as any;
utilities.lazyLoad(exports, ["Hunt"], () => require("./hunt"));

export { HuntCommentArgs } from "./huntComment";
export type HuntComment = import("./huntComment").HuntComment;
export const HuntComment: typeof import("./huntComment").HuntComment = null as any;
utilities.lazyLoad(exports, ["HuntComment"], () => require("./huntComment"));

export { HuntRelationArgs } from "./huntRelation";
export type HuntRelation = import("./huntRelation").HuntRelation;
export const HuntRelation: typeof import("./huntRelation").HuntRelation = null as any;
utilities.lazyLoad(exports, ["HuntRelation"], () => require("./huntRelation"));

export { IncidentTaskArgs } from "./incidentTask";
export type IncidentTask = import("./incidentTask").IncidentTask;
export const IncidentTask: typeof import("./incidentTask").IncidentTask = null as any;
utilities.lazyLoad(exports, ["IncidentTask"], () => require("./incidentTask"));

export { ListSourceControlRepositoriesArgs, ListSourceControlRepositoriesResult, ListSourceControlRepositoriesOutputArgs } from "./listSourceControlRepositories";
export const listSourceControlRepositories: typeof import("./listSourceControlRepositories").listSourceControlRepositories = null as any;
export const listSourceControlRepositoriesOutput: typeof import("./listSourceControlRepositories").listSourceControlRepositoriesOutput = null as any;
utilities.lazyLoad(exports, ["listSourceControlRepositories","listSourceControlRepositoriesOutput"], () => require("./listSourceControlRepositories"));

export { WorkspaceManagerAssignmentArgs } from "./workspaceManagerAssignment";
export type WorkspaceManagerAssignment = import("./workspaceManagerAssignment").WorkspaceManagerAssignment;
export const WorkspaceManagerAssignment: typeof import("./workspaceManagerAssignment").WorkspaceManagerAssignment = null as any;
utilities.lazyLoad(exports, ["WorkspaceManagerAssignment"], () => require("./workspaceManagerAssignment"));

export { WorkspaceManagerConfigurationArgs } from "./workspaceManagerConfiguration";
export type WorkspaceManagerConfiguration = import("./workspaceManagerConfiguration").WorkspaceManagerConfiguration;
export const WorkspaceManagerConfiguration: typeof import("./workspaceManagerConfiguration").WorkspaceManagerConfiguration = null as any;
utilities.lazyLoad(exports, ["WorkspaceManagerConfiguration"], () => require("./workspaceManagerConfiguration"));

export { WorkspaceManagerGroupArgs } from "./workspaceManagerGroup";
export type WorkspaceManagerGroup = import("./workspaceManagerGroup").WorkspaceManagerGroup;
export const WorkspaceManagerGroup: typeof import("./workspaceManagerGroup").WorkspaceManagerGroup = null as any;
utilities.lazyLoad(exports, ["WorkspaceManagerGroup"], () => require("./workspaceManagerGroup"));

export { WorkspaceManagerMemberArgs } from "./workspaceManagerMember";
export type WorkspaceManagerMember = import("./workspaceManagerMember").WorkspaceManagerMember;
export const WorkspaceManagerMember: typeof import("./workspaceManagerMember").WorkspaceManagerMember = null as any;
utilities.lazyLoad(exports, ["WorkspaceManagerMember"], () => require("./workspaceManagerMember"));


// Export enums:
export * from "../../types/enums/securityinsights/v20230601preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:securityinsights/v20230601preview:BookmarkRelation":
                return new BookmarkRelation(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:ContentPackage":
                return new ContentPackage(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:ContentTemplate":
                return new ContentTemplate(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:FileImport":
                return new FileImport(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:Hunt":
                return new Hunt(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:HuntComment":
                return new HuntComment(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:HuntRelation":
                return new HuntRelation(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:IncidentTask":
                return new IncidentTask(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:WorkspaceManagerAssignment":
                return new WorkspaceManagerAssignment(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:WorkspaceManagerConfiguration":
                return new WorkspaceManagerConfiguration(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:WorkspaceManagerGroup":
                return new WorkspaceManagerGroup(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20230601preview:WorkspaceManagerMember":
                return new WorkspaceManagerMember(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "securityinsights/v20230601preview", _module)
