// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Represents a SourceControl in Azure Security Insights.
 * API Version: 2021-03-01-preview.
 */
export function getSourceControl(args: GetSourceControlArgs, opts?: pulumi.InvokeOptions): Promise<GetSourceControlResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:securityinsights:getSourceControl", {
        "operationalInsightsResourceProvider": args.operationalInsightsResourceProvider,
        "resourceGroupName": args.resourceGroupName,
        "sourceControlId": args.sourceControlId,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetSourceControlArgs {
    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     */
    operationalInsightsResourceProvider: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Source control Id
     */
    sourceControlId: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}

/**
 * Represents a SourceControl in Azure Security Insights.
 */
export interface GetSourceControlResult {
    /**
     * Array of source control content types.
     */
    readonly contentTypes: string[];
    /**
     * A description of the source control
     */
    readonly description?: string;
    /**
     * The display name of the source control
     */
    readonly displayName: string;
    /**
     * Etag of the azure resource
     */
    readonly etag?: string;
    /**
     * Azure resource Id
     */
    readonly id: string;
    /**
     * Azure resource name
     */
    readonly name: string;
    /**
     * The repository type of the source control
     */
    readonly repoType: string;
    /**
     * Repository metadata.
     */
    readonly repository: outputs.securityinsights.RepositoryResponse;
    /**
     * The id (a Guid) of the source control
     */
    readonly sourceControlId?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.securityinsights.SystemDataResponse;
    /**
     * Azure resource type
     */
    readonly type: string;
}

export function getSourceControlOutput(args: GetSourceControlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourceControlResult> {
    return pulumi.output(args).apply(a => getSourceControl(a, opts))
}

export interface GetSourceControlOutputArgs {
    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     */
    operationalInsightsResourceProvider: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Source control Id
     */
    sourceControlId: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
