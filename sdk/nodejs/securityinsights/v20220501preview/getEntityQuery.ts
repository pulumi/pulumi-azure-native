// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Specific entity query.
 */
/** @deprecated Please use one of the variants: ActivityCustomEntityQuery. */
export function getEntityQuery(args: GetEntityQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityQueryResult> {
    pulumi.log.warn("getEntityQuery is deprecated: Please use one of the variants: ActivityCustomEntityQuery.")
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:securityinsights/v20220501preview:getEntityQuery", {
        "entityQueryId": args.entityQueryId,
        "resourceGroupName": args.resourceGroupName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetEntityQueryArgs {
    /**
     * entity query ID
     */
    entityQueryId: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}

/**
 * Specific entity query.
 */
export interface GetEntityQueryResult {
    /**
     * Etag of the azure resource
     */
    readonly etag?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * the entity query kind
     */
    readonly kind: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.securityinsights.v20220501preview.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}

export function getEntityQueryOutput(args: GetEntityQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntityQueryResult> {
    return pulumi.output(args).apply(a => getEntityQuery(a, opts))
}

export interface GetEntityQueryOutputArgs {
    /**
     * entity query ID
     */
    entityQueryId: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
