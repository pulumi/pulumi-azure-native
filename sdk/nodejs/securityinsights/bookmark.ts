// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Represents a bookmark in Azure Security Insights.
 *
 * Uses Azure REST API version 2024-09-01. In version 2.x of the Azure Native provider, it used API version 2023-02-01.
 *
 * Other available API versions: 2023-02-01, 2023-03-01-preview, 2023-04-01-preview, 2023-05-01-preview, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-11-01, 2023-12-01-preview, 2024-01-01-preview, 2024-03-01, 2024-04-01-preview, 2024-10-01-preview, 2025-01-01-preview, 2025-03-01, 2025-04-01-preview, 2025-06-01, 2025-07-01-preview, 2025-09-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native securityinsights [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Bookmark extends pulumi.CustomResource {
    /**
     * Get an existing Bookmark resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Bookmark {
        return new Bookmark(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:securityinsights:Bookmark';

    /**
     * Returns true if the given object is an instance of Bookmark.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bookmark {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bookmark.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The time the bookmark was created
     */
    declare public readonly created: pulumi.Output<string | undefined>;
    /**
     * Describes a user that created the bookmark
     */
    declare public readonly createdBy: pulumi.Output<outputs.securityinsights.UserInfoResponse | undefined>;
    /**
     * The display name of the bookmark
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * Etag of the azure resource
     */
    declare public /*out*/ readonly etag: pulumi.Output<string | undefined>;
    /**
     * The bookmark event time
     */
    declare public readonly eventTime: pulumi.Output<string | undefined>;
    /**
     * Describes an incident that relates to bookmark
     */
    declare public readonly incidentInfo: pulumi.Output<outputs.securityinsights.IncidentInfoResponse | undefined>;
    /**
     * List of labels relevant to this bookmark
     */
    declare public readonly labels: pulumi.Output<string[] | undefined>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The notes of the bookmark
     */
    declare public readonly notes: pulumi.Output<string | undefined>;
    /**
     * The query of the bookmark.
     */
    declare public readonly query: pulumi.Output<string>;
    /**
     * The end time for the query
     */
    declare public readonly queryEndTime: pulumi.Output<string | undefined>;
    /**
     * The query result of the bookmark.
     */
    declare public readonly queryResult: pulumi.Output<string | undefined>;
    /**
     * The start time for the query
     */
    declare public readonly queryStartTime: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.securityinsights.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * The last time the bookmark was updated
     */
    declare public readonly updated: pulumi.Output<string | undefined>;
    /**
     * Describes a user that updated the bookmark
     */
    declare public readonly updatedBy: pulumi.Output<outputs.securityinsights.UserInfoResponse | undefined>;

    /**
     * Create a Bookmark resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BookmarkArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.query === undefined && !opts.urn) {
                throw new Error("Missing required property 'query'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.workspaceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["bookmarkId"] = args?.bookmarkId;
            resourceInputs["created"] = args?.created;
            resourceInputs["createdBy"] = args?.createdBy;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["eventTime"] = args?.eventTime;
            resourceInputs["incidentInfo"] = args?.incidentInfo;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["notes"] = args?.notes;
            resourceInputs["query"] = args?.query;
            resourceInputs["queryEndTime"] = args?.queryEndTime;
            resourceInputs["queryResult"] = args?.queryResult;
            resourceInputs["queryStartTime"] = args?.queryStartTime;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["updated"] = args?.updated;
            resourceInputs["updatedBy"] = args?.updatedBy;
            resourceInputs["workspaceName"] = args?.workspaceName;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["eventTime"] = undefined /*out*/;
            resourceInputs["incidentInfo"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["notes"] = undefined /*out*/;
            resourceInputs["query"] = undefined /*out*/;
            resourceInputs["queryEndTime"] = undefined /*out*/;
            resourceInputs["queryResult"] = undefined /*out*/;
            resourceInputs["queryStartTime"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:securityinsights/v20190101preview:Bookmark" }, { type: "azure-native:securityinsights/v20200101:Bookmark" }, { type: "azure-native:securityinsights/v20210901preview:Bookmark" }, { type: "azure-native:securityinsights/v20211001:Bookmark" }, { type: "azure-native:securityinsights/v20211001preview:Bookmark" }, { type: "azure-native:securityinsights/v20220101preview:Bookmark" }, { type: "azure-native:securityinsights/v20220401preview:Bookmark" }, { type: "azure-native:securityinsights/v20220501preview:Bookmark" }, { type: "azure-native:securityinsights/v20220601preview:Bookmark" }, { type: "azure-native:securityinsights/v20220701preview:Bookmark" }, { type: "azure-native:securityinsights/v20220801:Bookmark" }, { type: "azure-native:securityinsights/v20220801preview:Bookmark" }, { type: "azure-native:securityinsights/v20220901preview:Bookmark" }, { type: "azure-native:securityinsights/v20221001preview:Bookmark" }, { type: "azure-native:securityinsights/v20221101:Bookmark" }, { type: "azure-native:securityinsights/v20221101preview:Bookmark" }, { type: "azure-native:securityinsights/v20221201preview:Bookmark" }, { type: "azure-native:securityinsights/v20230201:Bookmark" }, { type: "azure-native:securityinsights/v20230201preview:Bookmark" }, { type: "azure-native:securityinsights/v20230301preview:Bookmark" }, { type: "azure-native:securityinsights/v20230401preview:Bookmark" }, { type: "azure-native:securityinsights/v20230501preview:Bookmark" }, { type: "azure-native:securityinsights/v20230601preview:Bookmark" }, { type: "azure-native:securityinsights/v20230701preview:Bookmark" }, { type: "azure-native:securityinsights/v20230801preview:Bookmark" }, { type: "azure-native:securityinsights/v20230901preview:Bookmark" }, { type: "azure-native:securityinsights/v20231001preview:Bookmark" }, { type: "azure-native:securityinsights/v20231101:Bookmark" }, { type: "azure-native:securityinsights/v20231201preview:Bookmark" }, { type: "azure-native:securityinsights/v20240101preview:Bookmark" }, { type: "azure-native:securityinsights/v20240301:Bookmark" }, { type: "azure-native:securityinsights/v20240401preview:Bookmark" }, { type: "azure-native:securityinsights/v20240901:Bookmark" }, { type: "azure-native:securityinsights/v20241001preview:Bookmark" }, { type: "azure-native:securityinsights/v20250101preview:Bookmark" }, { type: "azure-native:securityinsights/v20250301:Bookmark" }, { type: "azure-native:securityinsights/v20250401preview:Bookmark" }, { type: "azure-native:securityinsights/v20250601:Bookmark" }, { type: "azure-native:securityinsights/v20250701preview:Bookmark" }, { type: "azure-native:securityinsights/v20250901:Bookmark" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Bookmark.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Bookmark resource.
 */
export interface BookmarkArgs {
    /**
     * Bookmark ID
     */
    bookmarkId?: pulumi.Input<string>;
    /**
     * The time the bookmark was created
     */
    created?: pulumi.Input<string>;
    /**
     * Describes a user that created the bookmark
     */
    createdBy?: pulumi.Input<inputs.securityinsights.UserInfoArgs>;
    /**
     * The display name of the bookmark
     */
    displayName: pulumi.Input<string>;
    /**
     * The bookmark event time
     */
    eventTime?: pulumi.Input<string>;
    /**
     * Describes an incident that relates to bookmark
     */
    incidentInfo?: pulumi.Input<inputs.securityinsights.IncidentInfoArgs>;
    /**
     * List of labels relevant to this bookmark
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The notes of the bookmark
     */
    notes?: pulumi.Input<string>;
    /**
     * The query of the bookmark.
     */
    query: pulumi.Input<string>;
    /**
     * The end time for the query
     */
    queryEndTime?: pulumi.Input<string>;
    /**
     * The query result of the bookmark.
     */
    queryResult?: pulumi.Input<string>;
    /**
     * The start time for the query
     */
    queryStartTime?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The last time the bookmark was updated
     */
    updated?: pulumi.Input<string>;
    /**
     * Describes a user that updated the bookmark
     */
    updatedBy?: pulumi.Input<inputs.securityinsights.UserInfoArgs>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
