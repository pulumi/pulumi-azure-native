// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Represents an incident in Azure Security Insights.
 * API Version: 2020-01-01.
 */
export class Incident extends pulumi.CustomResource {
    /**
     * Get an existing Incident resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Incident {
        return new Incident(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:securityinsights:Incident';

    /**
     * Returns true if the given object is an instance of Incident.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Incident {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Incident.__pulumiType;
    }

    /**
     * Additional data on the incident
     */
    public /*out*/ readonly additionalData!: pulumi.Output<outputs.securityinsights.IncidentAdditionalDataResponse>;
    /**
     * The reason the incident was closed
     */
    public readonly classification!: pulumi.Output<string | undefined>;
    /**
     * Describes the reason the incident was closed
     */
    public readonly classificationComment!: pulumi.Output<string | undefined>;
    /**
     * The classification reason the incident was closed with
     */
    public readonly classificationReason!: pulumi.Output<string | undefined>;
    /**
     * The time the incident was created
     */
    public /*out*/ readonly createdTimeUtc!: pulumi.Output<string>;
    /**
     * The description of the incident
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Etag of the azure resource
     */
    public readonly etag!: pulumi.Output<string | undefined>;
    /**
     * The time of the first activity in the incident
     */
    public readonly firstActivityTimeUtc!: pulumi.Output<string | undefined>;
    /**
     * A sequential number
     */
    public /*out*/ readonly incidentNumber!: pulumi.Output<number>;
    /**
     * The deep-link url to the incident in Azure portal
     */
    public /*out*/ readonly incidentUrl!: pulumi.Output<string>;
    /**
     * List of labels relevant to this incident
     */
    public readonly labels!: pulumi.Output<outputs.securityinsights.IncidentLabelResponse[] | undefined>;
    /**
     * The time of the last activity in the incident
     */
    public readonly lastActivityTimeUtc!: pulumi.Output<string | undefined>;
    /**
     * The last time the incident was updated
     */
    public /*out*/ readonly lastModifiedTimeUtc!: pulumi.Output<string>;
    /**
     * Azure resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Describes a user that the incident is assigned to
     */
    public readonly owner!: pulumi.Output<outputs.securityinsights.IncidentOwnerInfoResponse | undefined>;
    /**
     * List of resource ids of Analytic rules related to the incident
     */
    public /*out*/ readonly relatedAnalyticRuleIds!: pulumi.Output<string[]>;
    /**
     * The severity of the incident
     */
    public readonly severity!: pulumi.Output<string>;
    /**
     * The status of the incident
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * The title of the incident
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * Azure resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Incident resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IncidentArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.severity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'severity'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            if ((!args || args.workspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            inputs["classification"] = args ? args.classification : undefined;
            inputs["classificationComment"] = args ? args.classificationComment : undefined;
            inputs["classificationReason"] = args ? args.classificationReason : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["firstActivityTimeUtc"] = args ? args.firstActivityTimeUtc : undefined;
            inputs["incidentId"] = args ? args.incidentId : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["lastActivityTimeUtc"] = args ? args.lastActivityTimeUtc : undefined;
            inputs["owner"] = args ? args.owner : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["severity"] = args ? args.severity : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["title"] = args ? args.title : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["additionalData"] = undefined /*out*/;
            inputs["createdTimeUtc"] = undefined /*out*/;
            inputs["incidentNumber"] = undefined /*out*/;
            inputs["incidentUrl"] = undefined /*out*/;
            inputs["lastModifiedTimeUtc"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["relatedAnalyticRuleIds"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["additionalData"] = undefined /*out*/;
            inputs["classification"] = undefined /*out*/;
            inputs["classificationComment"] = undefined /*out*/;
            inputs["classificationReason"] = undefined /*out*/;
            inputs["createdTimeUtc"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["firstActivityTimeUtc"] = undefined /*out*/;
            inputs["incidentNumber"] = undefined /*out*/;
            inputs["incidentUrl"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["lastActivityTimeUtc"] = undefined /*out*/;
            inputs["lastModifiedTimeUtc"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["owner"] = undefined /*out*/;
            inputs["relatedAnalyticRuleIds"] = undefined /*out*/;
            inputs["severity"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["title"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:securityinsights:Incident" }, { type: "azure-native:securityinsights/v20200101:Incident" }, { type: "azure-nextgen:securityinsights/v20200101:Incident" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Incident.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Incident resource.
 */
export interface IncidentArgs {
    /**
     * The reason the incident was closed
     */
    classification?: pulumi.Input<string | enums.securityinsights.IncidentClassification>;
    /**
     * Describes the reason the incident was closed
     */
    classificationComment?: pulumi.Input<string>;
    /**
     * The classification reason the incident was closed with
     */
    classificationReason?: pulumi.Input<string | enums.securityinsights.IncidentClassificationReason>;
    /**
     * The description of the incident
     */
    description?: pulumi.Input<string>;
    /**
     * Etag of the azure resource
     */
    etag?: pulumi.Input<string>;
    /**
     * The time of the first activity in the incident
     */
    firstActivityTimeUtc?: pulumi.Input<string>;
    /**
     * Incident ID
     */
    incidentId?: pulumi.Input<string>;
    /**
     * List of labels relevant to this incident
     */
    labels?: pulumi.Input<pulumi.Input<inputs.securityinsights.IncidentLabelArgs>[]>;
    /**
     * The time of the last activity in the incident
     */
    lastActivityTimeUtc?: pulumi.Input<string>;
    /**
     * Describes a user that the incident is assigned to
     */
    owner?: pulumi.Input<inputs.securityinsights.IncidentOwnerInfoArgs>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The severity of the incident
     */
    severity: pulumi.Input<string | enums.securityinsights.IncidentSeverity>;
    /**
     * The status of the incident
     */
    status: pulumi.Input<string | enums.securityinsights.IncidentStatus>;
    /**
     * The title of the incident
     */
    title: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
