// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The workspace manager group
 *
 * Uses Azure REST API version 2025-01-01-preview. In version 2.x of the Azure Native provider, it used API version 2023-06-01-preview.
 *
 * Other available API versions: 2023-04-01-preview, 2023-05-01-preview, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-12-01-preview, 2024-01-01-preview, 2024-04-01-preview, 2024-10-01-preview, 2025-04-01-preview, 2025-07-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native securityinsights [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class WorkspaceManagerGroup extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceManagerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WorkspaceManagerGroup {
        return new WorkspaceManagerGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:securityinsights:WorkspaceManagerGroup';

    /**
     * Returns true if the given object is an instance of WorkspaceManagerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceManagerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceManagerGroup.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * The description of the workspace manager group
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the workspace manager group
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Resource Etag.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The names of the workspace manager members participating in this group.
     */
    public readonly memberResourceNames!: pulumi.Output<string[]>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.securityinsights.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a WorkspaceManagerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceManagerGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.memberResourceNames === undefined && !opts.urn) {
                throw new Error("Missing required property 'memberResourceNames'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.workspaceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["memberResourceNames"] = args?.memberResourceNames;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["workspaceManagerGroupName"] = args?.workspaceManagerGroupName;
            resourceInputs["workspaceName"] = args?.workspaceName;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["memberResourceNames"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:securityinsights/v20230401preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20230501preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20230601preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20230701preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20230801preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20230901preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20231001preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20231201preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20240101preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20240401preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20241001preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20250101preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20250401preview:WorkspaceManagerGroup" }, { type: "azure-native:securityinsights/v20250701preview:WorkspaceManagerGroup" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(WorkspaceManagerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a WorkspaceManagerGroup resource.
 */
export interface WorkspaceManagerGroupArgs {
    /**
     * The description of the workspace manager group
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the workspace manager group
     */
    displayName: pulumi.Input<string>;
    /**
     * The names of the workspace manager members participating in this group.
     */
    memberResourceNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the workspace manager group
     */
    workspaceManagerGroupName?: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
