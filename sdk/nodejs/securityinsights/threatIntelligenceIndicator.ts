// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Threat intelligence information object.
 *
 * Uses Azure REST API version 2024-09-01. In version 2.x of the Azure Native provider, it used API version 2023-02-01.
 *
 * Other available API versions: 2023-02-01, 2023-03-01-preview, 2023-04-01-preview, 2023-05-01-preview, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-11-01, 2023-12-01-preview, 2024-01-01-preview, 2024-03-01, 2024-04-01-preview, 2024-10-01-preview, 2025-01-01-preview, 2025-03-01, 2025-04-01-preview, 2025-06-01, 2025-07-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native securityinsights [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class ThreatIntelligenceIndicator extends pulumi.CustomResource {
    /**
     * Get an existing ThreatIntelligenceIndicator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ThreatIntelligenceIndicator {
        return new ThreatIntelligenceIndicator(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:securityinsights:ThreatIntelligenceIndicator';

    /**
     * Returns true if the given object is an instance of ThreatIntelligenceIndicator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThreatIntelligenceIndicator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreatIntelligenceIndicator.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * Etag of the azure resource
     */
    public /*out*/ readonly etag!: pulumi.Output<string | undefined>;
    /**
     * The kind of the entity.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.securityinsights.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ThreatIntelligenceIndicator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThreatIntelligenceIndicatorArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.kind === undefined && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.workspaceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["confidence"] = args?.confidence;
            resourceInputs["created"] = args?.created;
            resourceInputs["createdByRef"] = args?.createdByRef;
            resourceInputs["defanged"] = args?.defanged;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["extensions"] = args?.extensions;
            resourceInputs["externalId"] = args?.externalId;
            resourceInputs["externalLastUpdatedTimeUtc"] = args?.externalLastUpdatedTimeUtc;
            resourceInputs["externalReferences"] = args?.externalReferences;
            resourceInputs["granularMarkings"] = args?.granularMarkings;
            resourceInputs["indicatorTypes"] = args?.indicatorTypes;
            resourceInputs["killChainPhases"] = args?.killChainPhases;
            resourceInputs["kind"] = "indicator";
            resourceInputs["labels"] = args?.labels;
            resourceInputs["language"] = args?.language;
            resourceInputs["lastUpdatedTimeUtc"] = args?.lastUpdatedTimeUtc;
            resourceInputs["modified"] = args?.modified;
            resourceInputs["name"] = args?.name;
            resourceInputs["objectMarkingRefs"] = args?.objectMarkingRefs;
            resourceInputs["parsedPattern"] = args?.parsedPattern;
            resourceInputs["pattern"] = args?.pattern;
            resourceInputs["patternType"] = args?.patternType;
            resourceInputs["patternVersion"] = args?.patternVersion;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["revoked"] = args?.revoked;
            resourceInputs["source"] = args?.source;
            resourceInputs["threatIntelligenceTags"] = args?.threatIntelligenceTags;
            resourceInputs["threatTypes"] = args?.threatTypes;
            resourceInputs["validFrom"] = args?.validFrom;
            resourceInputs["validUntil"] = args?.validUntil;
            resourceInputs["workspaceName"] = args?.workspaceName;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:securityinsights/v20190101preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20210401:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20210901preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20211001:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20211001preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20220101preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20220401preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20220501preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20220601preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20220701preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20220801:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20220801preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20220901preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20221001preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20221101:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20221101preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20221201preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20230201:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20230201preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20230301preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20230401preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20230501preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20230601preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20230701preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20230801preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20230901preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20231001preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20231101:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20231201preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20240101preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20240301:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20240401preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20240901:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20241001preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20250101preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20250301:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20250401preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20250601:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20250701preview:ThreatIntelligenceIndicator" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ThreatIntelligenceIndicator.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ThreatIntelligenceIndicator resource.
 */
export interface ThreatIntelligenceIndicatorArgs {
    /**
     * Confidence of threat intelligence entity
     */
    confidence?: pulumi.Input<number>;
    /**
     * Created by
     */
    created?: pulumi.Input<string>;
    /**
     * Created by reference of threat intelligence entity
     */
    createdByRef?: pulumi.Input<string>;
    /**
     * Is threat intelligence entity defanged
     */
    defanged?: pulumi.Input<boolean>;
    /**
     * Description of a threat intelligence entity
     */
    description?: pulumi.Input<string>;
    /**
     * Display name of a threat intelligence entity
     */
    displayName?: pulumi.Input<string>;
    /**
     * Extensions map
     */
    extensions?: any;
    /**
     * External ID of threat intelligence entity
     */
    externalId?: pulumi.Input<string>;
    /**
     * External last updated time in UTC
     */
    externalLastUpdatedTimeUtc?: pulumi.Input<string>;
    /**
     * External References
     */
    externalReferences?: pulumi.Input<pulumi.Input<inputs.securityinsights.ThreatIntelligenceExternalReferenceArgs>[]>;
    /**
     * Granular Markings
     */
    granularMarkings?: pulumi.Input<pulumi.Input<inputs.securityinsights.ThreatIntelligenceGranularMarkingModelArgs>[]>;
    /**
     * Indicator types of threat intelligence entities
     */
    indicatorTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kill chain phases
     */
    killChainPhases?: pulumi.Input<pulumi.Input<inputs.securityinsights.ThreatIntelligenceKillChainPhaseArgs>[]>;
    /**
     * The kind of the threat intelligence entity
     * Expected value is 'indicator'.
     */
    kind: pulumi.Input<"indicator">;
    /**
     * Labels  of threat intelligence entity
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Language of threat intelligence entity
     */
    language?: pulumi.Input<string>;
    /**
     * Last updated time in UTC
     */
    lastUpdatedTimeUtc?: pulumi.Input<string>;
    /**
     * Modified by
     */
    modified?: pulumi.Input<string>;
    /**
     * Threat intelligence indicator name field.
     */
    name?: pulumi.Input<string>;
    /**
     * Threat intelligence entity object marking references
     */
    objectMarkingRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parsed patterns
     */
    parsedPattern?: pulumi.Input<pulumi.Input<inputs.securityinsights.ThreatIntelligenceParsedPatternArgs>[]>;
    /**
     * Pattern of a threat intelligence entity
     */
    pattern?: pulumi.Input<string>;
    /**
     * Pattern type of a threat intelligence entity
     */
    patternType?: pulumi.Input<string>;
    /**
     * Pattern version of a threat intelligence entity
     */
    patternVersion?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Is threat intelligence entity revoked
     */
    revoked?: pulumi.Input<boolean>;
    /**
     * Source of a threat intelligence entity
     */
    source?: pulumi.Input<string>;
    /**
     * List of tags
     */
    threatIntelligenceTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Threat types
     */
    threatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Valid from
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Valid until
     */
    validUntil?: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
