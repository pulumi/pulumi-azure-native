// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { BusinessApplicationAgentArgs } from "./businessApplicationAgent";
export type BusinessApplicationAgent = import("./businessApplicationAgent").BusinessApplicationAgent;
export const BusinessApplicationAgent: typeof import("./businessApplicationAgent").BusinessApplicationAgent = null as any;
utilities.lazyLoad(exports, ["BusinessApplicationAgent"], () => require("./businessApplicationAgent"));

export { GetBusinessApplicationAgentArgs, GetBusinessApplicationAgentResult, GetBusinessApplicationAgentOutputArgs } from "./getBusinessApplicationAgent";
export const getBusinessApplicationAgent: typeof import("./getBusinessApplicationAgent").getBusinessApplicationAgent = null as any;
export const getBusinessApplicationAgentOutput: typeof import("./getBusinessApplicationAgent").getBusinessApplicationAgentOutput = null as any;
utilities.lazyLoad(exports, ["getBusinessApplicationAgent","getBusinessApplicationAgentOutput"], () => require("./getBusinessApplicationAgent"));

export { GetEntitiesGetTimelineArgs, GetEntitiesGetTimelineResult, GetEntitiesGetTimelineOutputArgs } from "./getEntitiesGetTimeline";
export const getEntitiesGetTimeline: typeof import("./getEntitiesGetTimeline").getEntitiesGetTimeline = null as any;
export const getEntitiesGetTimelineOutput: typeof import("./getEntitiesGetTimeline").getEntitiesGetTimelineOutput = null as any;
utilities.lazyLoad(exports, ["getEntitiesGetTimeline","getEntitiesGetTimelineOutput"], () => require("./getEntitiesGetTimeline"));

export { GetEntityInsightsArgs, GetEntityInsightsResult, GetEntityInsightsOutputArgs } from "./getEntityInsights";
export const getEntityInsights: typeof import("./getEntityInsights").getEntityInsights = null as any;
export const getEntityInsightsOutput: typeof import("./getEntityInsights").getEntityInsightsOutput = null as any;
utilities.lazyLoad(exports, ["getEntityInsights","getEntityInsightsOutput"], () => require("./getEntityInsights"));

export { GetSystemArgs, GetSystemResult, GetSystemOutputArgs } from "./getSystem";
export const getSystem: typeof import("./getSystem").getSystem = null as any;
export const getSystemOutput: typeof import("./getSystem").getSystemOutput = null as any;
utilities.lazyLoad(exports, ["getSystem","getSystemOutput"], () => require("./getSystem"));

export { ListGeodataByIpArgs, ListGeodataByIpResult, ListGeodataByIpOutputArgs } from "./listGeodataByIp";
export const listGeodataByIp: typeof import("./listGeodataByIp").listGeodataByIp = null as any;
export const listGeodataByIpOutput: typeof import("./listGeodataByIp").listGeodataByIpOutput = null as any;
utilities.lazyLoad(exports, ["listGeodataByIp","listGeodataByIpOutput"], () => require("./listGeodataByIp"));

export { ListSourceControlRepositoriesArgs, ListSourceControlRepositoriesResult, ListSourceControlRepositoriesOutputArgs } from "./listSourceControlRepositories";
export const listSourceControlRepositories: typeof import("./listSourceControlRepositories").listSourceControlRepositories = null as any;
export const listSourceControlRepositoriesOutput: typeof import("./listSourceControlRepositories").listSourceControlRepositoriesOutput = null as any;
utilities.lazyLoad(exports, ["listSourceControlRepositories","listSourceControlRepositoriesOutput"], () => require("./listSourceControlRepositories"));

export { ListSystemActionsArgs, ListSystemActionsResult, ListSystemActionsOutputArgs } from "./listSystemActions";
export const listSystemActions: typeof import("./listSystemActions").listSystemActions = null as any;
export const listSystemActionsOutput: typeof import("./listSystemActions").listSystemActionsOutput = null as any;
utilities.lazyLoad(exports, ["listSystemActions","listSystemActionsOutput"], () => require("./listSystemActions"));

export { ListWhoisByDomainArgs, ListWhoisByDomainResult, ListWhoisByDomainOutputArgs } from "./listWhoisByDomain";
export const listWhoisByDomain: typeof import("./listWhoisByDomain").listWhoisByDomain = null as any;
export const listWhoisByDomainOutput: typeof import("./listWhoisByDomain").listWhoisByDomainOutput = null as any;
utilities.lazyLoad(exports, ["listWhoisByDomain","listWhoisByDomainOutput"], () => require("./listWhoisByDomain"));

export { SystemArgs } from "./system";
export type System = import("./system").System;
export const System: typeof import("./system").System = null as any;
utilities.lazyLoad(exports, ["System"], () => require("./system"));


// Export enums:
export * from "../../types/enums/securityinsights/v20240401preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:securityinsights/v20240401preview:BusinessApplicationAgent":
                return new BusinessApplicationAgent(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20240401preview:System":
                return new System(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "securityinsights/v20240401preview", _module)
