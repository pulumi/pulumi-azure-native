// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AADDataConnectorArgs } from "./aaddataConnector";
export type AADDataConnector = import("./aaddataConnector").AADDataConnector;
export const AADDataConnector: typeof import("./aaddataConnector").AADDataConnector = null as any;
utilities.lazyLoad(exports, ["AADDataConnector"], () => require("./aaddataConnector"));

export { AATPDataConnectorArgs } from "./aatpdataConnector";
export type AATPDataConnector = import("./aatpdataConnector").AATPDataConnector;
export const AATPDataConnector: typeof import("./aatpdataConnector").AATPDataConnector = null as any;
utilities.lazyLoad(exports, ["AATPDataConnector"], () => require("./aatpdataConnector"));

export { ActionArgs } from "./action";
export type Action = import("./action").Action;
export const Action: typeof import("./action").Action = null as any;
utilities.lazyLoad(exports, ["Action"], () => require("./action"));

export { ActivityCustomEntityQueryArgs } from "./activityCustomEntityQuery";
export type ActivityCustomEntityQuery = import("./activityCustomEntityQuery").ActivityCustomEntityQuery;
export const ActivityCustomEntityQuery: typeof import("./activityCustomEntityQuery").ActivityCustomEntityQuery = null as any;
utilities.lazyLoad(exports, ["ActivityCustomEntityQuery"], () => require("./activityCustomEntityQuery"));

export { AnomaliesArgs } from "./anomalies";
export type Anomalies = import("./anomalies").Anomalies;
export const Anomalies: typeof import("./anomalies").Anomalies = null as any;
utilities.lazyLoad(exports, ["Anomalies"], () => require("./anomalies"));

export { AnomalySecurityMLAnalyticsSettingsArgs } from "./anomalySecurityMLAnalyticsSettings";
export type AnomalySecurityMLAnalyticsSettings = import("./anomalySecurityMLAnalyticsSettings").AnomalySecurityMLAnalyticsSettings;
export const AnomalySecurityMLAnalyticsSettings: typeof import("./anomalySecurityMLAnalyticsSettings").AnomalySecurityMLAnalyticsSettings = null as any;
utilities.lazyLoad(exports, ["AnomalySecurityMLAnalyticsSettings"], () => require("./anomalySecurityMLAnalyticsSettings"));

export { ASCDataConnectorArgs } from "./ascdataConnector";
export type ASCDataConnector = import("./ascdataConnector").ASCDataConnector;
export const ASCDataConnector: typeof import("./ascdataConnector").ASCDataConnector = null as any;
utilities.lazyLoad(exports, ["ASCDataConnector"], () => require("./ascdataConnector"));

export { AutomationRuleArgs } from "./automationRule";
export type AutomationRule = import("./automationRule").AutomationRule;
export const AutomationRule: typeof import("./automationRule").AutomationRule = null as any;
utilities.lazyLoad(exports, ["AutomationRule"], () => require("./automationRule"));

export { AwsCloudTrailDataConnectorArgs } from "./awsCloudTrailDataConnector";
export type AwsCloudTrailDataConnector = import("./awsCloudTrailDataConnector").AwsCloudTrailDataConnector;
export const AwsCloudTrailDataConnector: typeof import("./awsCloudTrailDataConnector").AwsCloudTrailDataConnector = null as any;
utilities.lazyLoad(exports, ["AwsCloudTrailDataConnector"], () => require("./awsCloudTrailDataConnector"));

export { AwsS3DataConnectorArgs } from "./awsS3DataConnector";
export type AwsS3DataConnector = import("./awsS3DataConnector").AwsS3DataConnector;
export const AwsS3DataConnector: typeof import("./awsS3DataConnector").AwsS3DataConnector = null as any;
utilities.lazyLoad(exports, ["AwsS3DataConnector"], () => require("./awsS3DataConnector"));

export { BookmarkArgs } from "./bookmark";
export type Bookmark = import("./bookmark").Bookmark;
export const Bookmark: typeof import("./bookmark").Bookmark = null as any;
utilities.lazyLoad(exports, ["Bookmark"], () => require("./bookmark"));

export { BookmarkRelationArgs } from "./bookmarkRelation";
export type BookmarkRelation = import("./bookmarkRelation").BookmarkRelation;
export const BookmarkRelation: typeof import("./bookmarkRelation").BookmarkRelation = null as any;
utilities.lazyLoad(exports, ["BookmarkRelation"], () => require("./bookmarkRelation"));

export { CodelessApiPollingDataConnectorArgs } from "./codelessApiPollingDataConnector";
export type CodelessApiPollingDataConnector = import("./codelessApiPollingDataConnector").CodelessApiPollingDataConnector;
export const CodelessApiPollingDataConnector: typeof import("./codelessApiPollingDataConnector").CodelessApiPollingDataConnector = null as any;
utilities.lazyLoad(exports, ["CodelessApiPollingDataConnector"], () => require("./codelessApiPollingDataConnector"));

export { CodelessUiDataConnectorArgs } from "./codelessUiDataConnector";
export type CodelessUiDataConnector = import("./codelessUiDataConnector").CodelessUiDataConnector;
export const CodelessUiDataConnector: typeof import("./codelessUiDataConnector").CodelessUiDataConnector = null as any;
utilities.lazyLoad(exports, ["CodelessUiDataConnector"], () => require("./codelessUiDataConnector"));

export { Dynamics365DataConnectorArgs } from "./dynamics365DataConnector";
export type Dynamics365DataConnector = import("./dynamics365DataConnector").Dynamics365DataConnector;
export const Dynamics365DataConnector: typeof import("./dynamics365DataConnector").Dynamics365DataConnector = null as any;
utilities.lazyLoad(exports, ["Dynamics365DataConnector"], () => require("./dynamics365DataConnector"));

export { EntityAnalyticsArgs } from "./entityAnalytics";
export type EntityAnalytics = import("./entityAnalytics").EntityAnalytics;
export const EntityAnalytics: typeof import("./entityAnalytics").EntityAnalytics = null as any;
utilities.lazyLoad(exports, ["EntityAnalytics"], () => require("./entityAnalytics"));

export { EyesOnArgs } from "./eyesOn";
export type EyesOn = import("./eyesOn").EyesOn;
export const EyesOn: typeof import("./eyesOn").EyesOn = null as any;
utilities.lazyLoad(exports, ["EyesOn"], () => require("./eyesOn"));

export { FusionAlertRuleArgs } from "./fusionAlertRule";
export type FusionAlertRule = import("./fusionAlertRule").FusionAlertRule;
export const FusionAlertRule: typeof import("./fusionAlertRule").FusionAlertRule = null as any;
utilities.lazyLoad(exports, ["FusionAlertRule"], () => require("./fusionAlertRule"));

export { GetAADDataConnectorArgs, GetAADDataConnectorResult, GetAADDataConnectorOutputArgs } from "./getAADDataConnector";
export const getAADDataConnector: typeof import("./getAADDataConnector").getAADDataConnector = null as any;
export const getAADDataConnectorOutput: typeof import("./getAADDataConnector").getAADDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getAADDataConnector","getAADDataConnectorOutput"], () => require("./getAADDataConnector"));

export { GetAATPDataConnectorArgs, GetAATPDataConnectorResult, GetAATPDataConnectorOutputArgs } from "./getAATPDataConnector";
export const getAATPDataConnector: typeof import("./getAATPDataConnector").getAATPDataConnector = null as any;
export const getAATPDataConnectorOutput: typeof import("./getAATPDataConnector").getAATPDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getAATPDataConnector","getAATPDataConnectorOutput"], () => require("./getAATPDataConnector"));

export { GetASCDataConnectorArgs, GetASCDataConnectorResult, GetASCDataConnectorOutputArgs } from "./getASCDataConnector";
export const getASCDataConnector: typeof import("./getASCDataConnector").getASCDataConnector = null as any;
export const getASCDataConnectorOutput: typeof import("./getASCDataConnector").getASCDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getASCDataConnector","getASCDataConnectorOutput"], () => require("./getASCDataConnector"));

export { GetActionArgs, GetActionResult, GetActionOutputArgs } from "./getAction";
export const getAction: typeof import("./getAction").getAction = null as any;
export const getActionOutput: typeof import("./getAction").getActionOutput = null as any;
utilities.lazyLoad(exports, ["getAction","getActionOutput"], () => require("./getAction"));

export { GetActivityCustomEntityQueryArgs, GetActivityCustomEntityQueryResult, GetActivityCustomEntityQueryOutputArgs } from "./getActivityCustomEntityQuery";
export const getActivityCustomEntityQuery: typeof import("./getActivityCustomEntityQuery").getActivityCustomEntityQuery = null as any;
export const getActivityCustomEntityQueryOutput: typeof import("./getActivityCustomEntityQuery").getActivityCustomEntityQueryOutput = null as any;
utilities.lazyLoad(exports, ["getActivityCustomEntityQuery","getActivityCustomEntityQueryOutput"], () => require("./getActivityCustomEntityQuery"));

export { GetAnomaliesArgs, GetAnomaliesResult, GetAnomaliesOutputArgs } from "./getAnomalies";
export const getAnomalies: typeof import("./getAnomalies").getAnomalies = null as any;
export const getAnomaliesOutput: typeof import("./getAnomalies").getAnomaliesOutput = null as any;
utilities.lazyLoad(exports, ["getAnomalies","getAnomaliesOutput"], () => require("./getAnomalies"));

export { GetAnomalySecurityMLAnalyticsSettingsArgs, GetAnomalySecurityMLAnalyticsSettingsResult, GetAnomalySecurityMLAnalyticsSettingsOutputArgs } from "./getAnomalySecurityMLAnalyticsSettings";
export const getAnomalySecurityMLAnalyticsSettings: typeof import("./getAnomalySecurityMLAnalyticsSettings").getAnomalySecurityMLAnalyticsSettings = null as any;
export const getAnomalySecurityMLAnalyticsSettingsOutput: typeof import("./getAnomalySecurityMLAnalyticsSettings").getAnomalySecurityMLAnalyticsSettingsOutput = null as any;
utilities.lazyLoad(exports, ["getAnomalySecurityMLAnalyticsSettings","getAnomalySecurityMLAnalyticsSettingsOutput"], () => require("./getAnomalySecurityMLAnalyticsSettings"));

export { GetAutomationRuleArgs, GetAutomationRuleResult, GetAutomationRuleOutputArgs } from "./getAutomationRule";
export const getAutomationRule: typeof import("./getAutomationRule").getAutomationRule = null as any;
export const getAutomationRuleOutput: typeof import("./getAutomationRule").getAutomationRuleOutput = null as any;
utilities.lazyLoad(exports, ["getAutomationRule","getAutomationRuleOutput"], () => require("./getAutomationRule"));

export { GetAwsCloudTrailDataConnectorArgs, GetAwsCloudTrailDataConnectorResult, GetAwsCloudTrailDataConnectorOutputArgs } from "./getAwsCloudTrailDataConnector";
export const getAwsCloudTrailDataConnector: typeof import("./getAwsCloudTrailDataConnector").getAwsCloudTrailDataConnector = null as any;
export const getAwsCloudTrailDataConnectorOutput: typeof import("./getAwsCloudTrailDataConnector").getAwsCloudTrailDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getAwsCloudTrailDataConnector","getAwsCloudTrailDataConnectorOutput"], () => require("./getAwsCloudTrailDataConnector"));

export { GetAwsS3DataConnectorArgs, GetAwsS3DataConnectorResult, GetAwsS3DataConnectorOutputArgs } from "./getAwsS3DataConnector";
export const getAwsS3DataConnector: typeof import("./getAwsS3DataConnector").getAwsS3DataConnector = null as any;
export const getAwsS3DataConnectorOutput: typeof import("./getAwsS3DataConnector").getAwsS3DataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getAwsS3DataConnector","getAwsS3DataConnectorOutput"], () => require("./getAwsS3DataConnector"));

export { GetBookmarkArgs, GetBookmarkResult, GetBookmarkOutputArgs } from "./getBookmark";
export const getBookmark: typeof import("./getBookmark").getBookmark = null as any;
export const getBookmarkOutput: typeof import("./getBookmark").getBookmarkOutput = null as any;
utilities.lazyLoad(exports, ["getBookmark","getBookmarkOutput"], () => require("./getBookmark"));

export { GetBookmarkRelationArgs, GetBookmarkRelationResult, GetBookmarkRelationOutputArgs } from "./getBookmarkRelation";
export const getBookmarkRelation: typeof import("./getBookmarkRelation").getBookmarkRelation = null as any;
export const getBookmarkRelationOutput: typeof import("./getBookmarkRelation").getBookmarkRelationOutput = null as any;
utilities.lazyLoad(exports, ["getBookmarkRelation","getBookmarkRelationOutput"], () => require("./getBookmarkRelation"));

export { GetCodelessApiPollingDataConnectorArgs, GetCodelessApiPollingDataConnectorResult, GetCodelessApiPollingDataConnectorOutputArgs } from "./getCodelessApiPollingDataConnector";
export const getCodelessApiPollingDataConnector: typeof import("./getCodelessApiPollingDataConnector").getCodelessApiPollingDataConnector = null as any;
export const getCodelessApiPollingDataConnectorOutput: typeof import("./getCodelessApiPollingDataConnector").getCodelessApiPollingDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getCodelessApiPollingDataConnector","getCodelessApiPollingDataConnectorOutput"], () => require("./getCodelessApiPollingDataConnector"));

export { GetCodelessUiDataConnectorArgs, GetCodelessUiDataConnectorResult, GetCodelessUiDataConnectorOutputArgs } from "./getCodelessUiDataConnector";
export const getCodelessUiDataConnector: typeof import("./getCodelessUiDataConnector").getCodelessUiDataConnector = null as any;
export const getCodelessUiDataConnectorOutput: typeof import("./getCodelessUiDataConnector").getCodelessUiDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getCodelessUiDataConnector","getCodelessUiDataConnectorOutput"], () => require("./getCodelessUiDataConnector"));

export { GetDynamics365DataConnectorArgs, GetDynamics365DataConnectorResult, GetDynamics365DataConnectorOutputArgs } from "./getDynamics365DataConnector";
export const getDynamics365DataConnector: typeof import("./getDynamics365DataConnector").getDynamics365DataConnector = null as any;
export const getDynamics365DataConnectorOutput: typeof import("./getDynamics365DataConnector").getDynamics365DataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getDynamics365DataConnector","getDynamics365DataConnectorOutput"], () => require("./getDynamics365DataConnector"));

export { GetEntitiesGetTimelineArgs, GetEntitiesGetTimelineResult, GetEntitiesGetTimelineOutputArgs } from "./getEntitiesGetTimeline";
export const getEntitiesGetTimeline: typeof import("./getEntitiesGetTimeline").getEntitiesGetTimeline = null as any;
export const getEntitiesGetTimelineOutput: typeof import("./getEntitiesGetTimeline").getEntitiesGetTimelineOutput = null as any;
utilities.lazyLoad(exports, ["getEntitiesGetTimeline","getEntitiesGetTimelineOutput"], () => require("./getEntitiesGetTimeline"));

export { GetEntityAnalyticsArgs, GetEntityAnalyticsResult, GetEntityAnalyticsOutputArgs } from "./getEntityAnalytics";
export const getEntityAnalytics: typeof import("./getEntityAnalytics").getEntityAnalytics = null as any;
export const getEntityAnalyticsOutput: typeof import("./getEntityAnalytics").getEntityAnalyticsOutput = null as any;
utilities.lazyLoad(exports, ["getEntityAnalytics","getEntityAnalyticsOutput"], () => require("./getEntityAnalytics"));

export { GetEntityInsightsArgs, GetEntityInsightsResult, GetEntityInsightsOutputArgs } from "./getEntityInsights";
export const getEntityInsights: typeof import("./getEntityInsights").getEntityInsights = null as any;
export const getEntityInsightsOutput: typeof import("./getEntityInsights").getEntityInsightsOutput = null as any;
utilities.lazyLoad(exports, ["getEntityInsights","getEntityInsightsOutput"], () => require("./getEntityInsights"));

export { GetEyesOnArgs, GetEyesOnResult, GetEyesOnOutputArgs } from "./getEyesOn";
export const getEyesOn: typeof import("./getEyesOn").getEyesOn = null as any;
export const getEyesOnOutput: typeof import("./getEyesOn").getEyesOnOutput = null as any;
utilities.lazyLoad(exports, ["getEyesOn","getEyesOnOutput"], () => require("./getEyesOn"));

export { GetFusionAlertRuleArgs, GetFusionAlertRuleResult, GetFusionAlertRuleOutputArgs } from "./getFusionAlertRule";
export const getFusionAlertRule: typeof import("./getFusionAlertRule").getFusionAlertRule = null as any;
export const getFusionAlertRuleOutput: typeof import("./getFusionAlertRule").getFusionAlertRuleOutput = null as any;
utilities.lazyLoad(exports, ["getFusionAlertRule","getFusionAlertRuleOutput"], () => require("./getFusionAlertRule"));

export { GetIncidentArgs, GetIncidentResult, GetIncidentOutputArgs } from "./getIncident";
export const getIncident: typeof import("./getIncident").getIncident = null as any;
export const getIncidentOutput: typeof import("./getIncident").getIncidentOutput = null as any;
utilities.lazyLoad(exports, ["getIncident","getIncidentOutput"], () => require("./getIncident"));

export { GetIncidentCommentArgs, GetIncidentCommentResult, GetIncidentCommentOutputArgs } from "./getIncidentComment";
export const getIncidentComment: typeof import("./getIncidentComment").getIncidentComment = null as any;
export const getIncidentCommentOutput: typeof import("./getIncidentComment").getIncidentCommentOutput = null as any;
utilities.lazyLoad(exports, ["getIncidentComment","getIncidentCommentOutput"], () => require("./getIncidentComment"));

export { GetIncidentRelationArgs, GetIncidentRelationResult, GetIncidentRelationOutputArgs } from "./getIncidentRelation";
export const getIncidentRelation: typeof import("./getIncidentRelation").getIncidentRelation = null as any;
export const getIncidentRelationOutput: typeof import("./getIncidentRelation").getIncidentRelationOutput = null as any;
utilities.lazyLoad(exports, ["getIncidentRelation","getIncidentRelationOutput"], () => require("./getIncidentRelation"));

export { GetIoTDataConnectorArgs, GetIoTDataConnectorResult, GetIoTDataConnectorOutputArgs } from "./getIoTDataConnector";
export const getIoTDataConnector: typeof import("./getIoTDataConnector").getIoTDataConnector = null as any;
export const getIoTDataConnectorOutput: typeof import("./getIoTDataConnector").getIoTDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getIoTDataConnector","getIoTDataConnectorOutput"], () => require("./getIoTDataConnector"));

export { GetMCASDataConnectorArgs, GetMCASDataConnectorResult, GetMCASDataConnectorOutputArgs } from "./getMCASDataConnector";
export const getMCASDataConnector: typeof import("./getMCASDataConnector").getMCASDataConnector = null as any;
export const getMCASDataConnectorOutput: typeof import("./getMCASDataConnector").getMCASDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getMCASDataConnector","getMCASDataConnectorOutput"], () => require("./getMCASDataConnector"));

export { GetMDATPDataConnectorArgs, GetMDATPDataConnectorResult, GetMDATPDataConnectorOutputArgs } from "./getMDATPDataConnector";
export const getMDATPDataConnector: typeof import("./getMDATPDataConnector").getMDATPDataConnector = null as any;
export const getMDATPDataConnectorOutput: typeof import("./getMDATPDataConnector").getMDATPDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getMDATPDataConnector","getMDATPDataConnectorOutput"], () => require("./getMDATPDataConnector"));

export { GetMLBehaviorAnalyticsAlertRuleArgs, GetMLBehaviorAnalyticsAlertRuleResult, GetMLBehaviorAnalyticsAlertRuleOutputArgs } from "./getMLBehaviorAnalyticsAlertRule";
export const getMLBehaviorAnalyticsAlertRule: typeof import("./getMLBehaviorAnalyticsAlertRule").getMLBehaviorAnalyticsAlertRule = null as any;
export const getMLBehaviorAnalyticsAlertRuleOutput: typeof import("./getMLBehaviorAnalyticsAlertRule").getMLBehaviorAnalyticsAlertRuleOutput = null as any;
utilities.lazyLoad(exports, ["getMLBehaviorAnalyticsAlertRule","getMLBehaviorAnalyticsAlertRuleOutput"], () => require("./getMLBehaviorAnalyticsAlertRule"));

export { GetMSTIDataConnectorArgs, GetMSTIDataConnectorResult, GetMSTIDataConnectorOutputArgs } from "./getMSTIDataConnector";
export const getMSTIDataConnector: typeof import("./getMSTIDataConnector").getMSTIDataConnector = null as any;
export const getMSTIDataConnectorOutput: typeof import("./getMSTIDataConnector").getMSTIDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getMSTIDataConnector","getMSTIDataConnectorOutput"], () => require("./getMSTIDataConnector"));

export { GetMTPDataConnectorArgs, GetMTPDataConnectorResult, GetMTPDataConnectorOutputArgs } from "./getMTPDataConnector";
export const getMTPDataConnector: typeof import("./getMTPDataConnector").getMTPDataConnector = null as any;
export const getMTPDataConnectorOutput: typeof import("./getMTPDataConnector").getMTPDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getMTPDataConnector","getMTPDataConnectorOutput"], () => require("./getMTPDataConnector"));

export { GetMetadataArgs, GetMetadataResult, GetMetadataOutputArgs } from "./getMetadata";
export const getMetadata: typeof import("./getMetadata").getMetadata = null as any;
export const getMetadataOutput: typeof import("./getMetadata").getMetadataOutput = null as any;
utilities.lazyLoad(exports, ["getMetadata","getMetadataOutput"], () => require("./getMetadata"));

export { GetMicrosoftSecurityIncidentCreationAlertRuleArgs, GetMicrosoftSecurityIncidentCreationAlertRuleResult, GetMicrosoftSecurityIncidentCreationAlertRuleOutputArgs } from "./getMicrosoftSecurityIncidentCreationAlertRule";
export const getMicrosoftSecurityIncidentCreationAlertRule: typeof import("./getMicrosoftSecurityIncidentCreationAlertRule").getMicrosoftSecurityIncidentCreationAlertRule = null as any;
export const getMicrosoftSecurityIncidentCreationAlertRuleOutput: typeof import("./getMicrosoftSecurityIncidentCreationAlertRule").getMicrosoftSecurityIncidentCreationAlertRuleOutput = null as any;
utilities.lazyLoad(exports, ["getMicrosoftSecurityIncidentCreationAlertRule","getMicrosoftSecurityIncidentCreationAlertRuleOutput"], () => require("./getMicrosoftSecurityIncidentCreationAlertRule"));

export { GetNrtAlertRuleArgs, GetNrtAlertRuleResult, GetNrtAlertRuleOutputArgs } from "./getNrtAlertRule";
export const getNrtAlertRule: typeof import("./getNrtAlertRule").getNrtAlertRule = null as any;
export const getNrtAlertRuleOutput: typeof import("./getNrtAlertRule").getNrtAlertRuleOutput = null as any;
utilities.lazyLoad(exports, ["getNrtAlertRule","getNrtAlertRuleOutput"], () => require("./getNrtAlertRule"));

export { GetOffice365ProjectDataConnectorArgs, GetOffice365ProjectDataConnectorResult, GetOffice365ProjectDataConnectorOutputArgs } from "./getOffice365ProjectDataConnector";
export const getOffice365ProjectDataConnector: typeof import("./getOffice365ProjectDataConnector").getOffice365ProjectDataConnector = null as any;
export const getOffice365ProjectDataConnectorOutput: typeof import("./getOffice365ProjectDataConnector").getOffice365ProjectDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getOffice365ProjectDataConnector","getOffice365ProjectDataConnectorOutput"], () => require("./getOffice365ProjectDataConnector"));

export { GetOfficeATPDataConnectorArgs, GetOfficeATPDataConnectorResult, GetOfficeATPDataConnectorOutputArgs } from "./getOfficeATPDataConnector";
export const getOfficeATPDataConnector: typeof import("./getOfficeATPDataConnector").getOfficeATPDataConnector = null as any;
export const getOfficeATPDataConnectorOutput: typeof import("./getOfficeATPDataConnector").getOfficeATPDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getOfficeATPDataConnector","getOfficeATPDataConnectorOutput"], () => require("./getOfficeATPDataConnector"));

export { GetOfficeDataConnectorArgs, GetOfficeDataConnectorResult, GetOfficeDataConnectorOutputArgs } from "./getOfficeDataConnector";
export const getOfficeDataConnector: typeof import("./getOfficeDataConnector").getOfficeDataConnector = null as any;
export const getOfficeDataConnectorOutput: typeof import("./getOfficeDataConnector").getOfficeDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getOfficeDataConnector","getOfficeDataConnectorOutput"], () => require("./getOfficeDataConnector"));

export { GetOfficeIRMDataConnectorArgs, GetOfficeIRMDataConnectorResult, GetOfficeIRMDataConnectorOutputArgs } from "./getOfficeIRMDataConnector";
export const getOfficeIRMDataConnector: typeof import("./getOfficeIRMDataConnector").getOfficeIRMDataConnector = null as any;
export const getOfficeIRMDataConnectorOutput: typeof import("./getOfficeIRMDataConnector").getOfficeIRMDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getOfficeIRMDataConnector","getOfficeIRMDataConnectorOutput"], () => require("./getOfficeIRMDataConnector"));

export { GetOfficePowerBIDataConnectorArgs, GetOfficePowerBIDataConnectorResult, GetOfficePowerBIDataConnectorOutputArgs } from "./getOfficePowerBIDataConnector";
export const getOfficePowerBIDataConnector: typeof import("./getOfficePowerBIDataConnector").getOfficePowerBIDataConnector = null as any;
export const getOfficePowerBIDataConnectorOutput: typeof import("./getOfficePowerBIDataConnector").getOfficePowerBIDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getOfficePowerBIDataConnector","getOfficePowerBIDataConnectorOutput"], () => require("./getOfficePowerBIDataConnector"));

export { GetScheduledAlertRuleArgs, GetScheduledAlertRuleResult, GetScheduledAlertRuleOutputArgs } from "./getScheduledAlertRule";
export const getScheduledAlertRule: typeof import("./getScheduledAlertRule").getScheduledAlertRule = null as any;
export const getScheduledAlertRuleOutput: typeof import("./getScheduledAlertRule").getScheduledAlertRuleOutput = null as any;
utilities.lazyLoad(exports, ["getScheduledAlertRule","getScheduledAlertRuleOutput"], () => require("./getScheduledAlertRule"));

export { GetSentinelOnboardingStateArgs, GetSentinelOnboardingStateResult, GetSentinelOnboardingStateOutputArgs } from "./getSentinelOnboardingState";
export const getSentinelOnboardingState: typeof import("./getSentinelOnboardingState").getSentinelOnboardingState = null as any;
export const getSentinelOnboardingStateOutput: typeof import("./getSentinelOnboardingState").getSentinelOnboardingStateOutput = null as any;
utilities.lazyLoad(exports, ["getSentinelOnboardingState","getSentinelOnboardingStateOutput"], () => require("./getSentinelOnboardingState"));

export { GetSourceControlArgs, GetSourceControlResult, GetSourceControlOutputArgs } from "./getSourceControl";
export const getSourceControl: typeof import("./getSourceControl").getSourceControl = null as any;
export const getSourceControlOutput: typeof import("./getSourceControl").getSourceControlOutput = null as any;
utilities.lazyLoad(exports, ["getSourceControl","getSourceControlOutput"], () => require("./getSourceControl"));

export { GetTIDataConnectorArgs, GetTIDataConnectorResult, GetTIDataConnectorOutputArgs } from "./getTIDataConnector";
export const getTIDataConnector: typeof import("./getTIDataConnector").getTIDataConnector = null as any;
export const getTIDataConnectorOutput: typeof import("./getTIDataConnector").getTIDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getTIDataConnector","getTIDataConnectorOutput"], () => require("./getTIDataConnector"));

export { GetThreatIntelligenceAlertRuleArgs, GetThreatIntelligenceAlertRuleResult, GetThreatIntelligenceAlertRuleOutputArgs } from "./getThreatIntelligenceAlertRule";
export const getThreatIntelligenceAlertRule: typeof import("./getThreatIntelligenceAlertRule").getThreatIntelligenceAlertRule = null as any;
export const getThreatIntelligenceAlertRuleOutput: typeof import("./getThreatIntelligenceAlertRule").getThreatIntelligenceAlertRuleOutput = null as any;
utilities.lazyLoad(exports, ["getThreatIntelligenceAlertRule","getThreatIntelligenceAlertRuleOutput"], () => require("./getThreatIntelligenceAlertRule"));

export { GetThreatIntelligenceIndicatorArgs, GetThreatIntelligenceIndicatorResult, GetThreatIntelligenceIndicatorOutputArgs } from "./getThreatIntelligenceIndicator";
export const getThreatIntelligenceIndicator: typeof import("./getThreatIntelligenceIndicator").getThreatIntelligenceIndicator = null as any;
export const getThreatIntelligenceIndicatorOutput: typeof import("./getThreatIntelligenceIndicator").getThreatIntelligenceIndicatorOutput = null as any;
utilities.lazyLoad(exports, ["getThreatIntelligenceIndicator","getThreatIntelligenceIndicatorOutput"], () => require("./getThreatIntelligenceIndicator"));

export { GetTiTaxiiDataConnectorArgs, GetTiTaxiiDataConnectorResult, GetTiTaxiiDataConnectorOutputArgs } from "./getTiTaxiiDataConnector";
export const getTiTaxiiDataConnector: typeof import("./getTiTaxiiDataConnector").getTiTaxiiDataConnector = null as any;
export const getTiTaxiiDataConnectorOutput: typeof import("./getTiTaxiiDataConnector").getTiTaxiiDataConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getTiTaxiiDataConnector","getTiTaxiiDataConnectorOutput"], () => require("./getTiTaxiiDataConnector"));

export { GetUebaArgs, GetUebaResult, GetUebaOutputArgs } from "./getUeba";
export const getUeba: typeof import("./getUeba").getUeba = null as any;
export const getUebaOutput: typeof import("./getUeba").getUebaOutput = null as any;
utilities.lazyLoad(exports, ["getUeba","getUebaOutput"], () => require("./getUeba"));

export { GetWatchlistArgs, GetWatchlistResult, GetWatchlistOutputArgs } from "./getWatchlist";
export const getWatchlist: typeof import("./getWatchlist").getWatchlist = null as any;
export const getWatchlistOutput: typeof import("./getWatchlist").getWatchlistOutput = null as any;
utilities.lazyLoad(exports, ["getWatchlist","getWatchlistOutput"], () => require("./getWatchlist"));

export { GetWatchlistItemArgs, GetWatchlistItemResult, GetWatchlistItemOutputArgs } from "./getWatchlistItem";
export const getWatchlistItem: typeof import("./getWatchlistItem").getWatchlistItem = null as any;
export const getWatchlistItemOutput: typeof import("./getWatchlistItem").getWatchlistItemOutput = null as any;
utilities.lazyLoad(exports, ["getWatchlistItem","getWatchlistItemOutput"], () => require("./getWatchlistItem"));

export { IncidentArgs } from "./incident";
export type Incident = import("./incident").Incident;
export const Incident: typeof import("./incident").Incident = null as any;
utilities.lazyLoad(exports, ["Incident"], () => require("./incident"));

export { IncidentCommentArgs } from "./incidentComment";
export type IncidentComment = import("./incidentComment").IncidentComment;
export const IncidentComment: typeof import("./incidentComment").IncidentComment = null as any;
utilities.lazyLoad(exports, ["IncidentComment"], () => require("./incidentComment"));

export { IncidentRelationArgs } from "./incidentRelation";
export type IncidentRelation = import("./incidentRelation").IncidentRelation;
export const IncidentRelation: typeof import("./incidentRelation").IncidentRelation = null as any;
utilities.lazyLoad(exports, ["IncidentRelation"], () => require("./incidentRelation"));

export { IoTDataConnectorArgs } from "./ioTDataConnector";
export type IoTDataConnector = import("./ioTDataConnector").IoTDataConnector;
export const IoTDataConnector: typeof import("./ioTDataConnector").IoTDataConnector = null as any;
utilities.lazyLoad(exports, ["IoTDataConnector"], () => require("./ioTDataConnector"));

export { ListSourceControlRepositoriesArgs, ListSourceControlRepositoriesResult, ListSourceControlRepositoriesOutputArgs } from "./listSourceControlRepositories";
export const listSourceControlRepositories: typeof import("./listSourceControlRepositories").listSourceControlRepositories = null as any;
export const listSourceControlRepositoriesOutput: typeof import("./listSourceControlRepositories").listSourceControlRepositoriesOutput = null as any;
utilities.lazyLoad(exports, ["listSourceControlRepositories","listSourceControlRepositoriesOutput"], () => require("./listSourceControlRepositories"));

export { MCASDataConnectorArgs } from "./mcasdataConnector";
export type MCASDataConnector = import("./mcasdataConnector").MCASDataConnector;
export const MCASDataConnector: typeof import("./mcasdataConnector").MCASDataConnector = null as any;
utilities.lazyLoad(exports, ["MCASDataConnector"], () => require("./mcasdataConnector"));

export { MDATPDataConnectorArgs } from "./mdatpdataConnector";
export type MDATPDataConnector = import("./mdatpdataConnector").MDATPDataConnector;
export const MDATPDataConnector: typeof import("./mdatpdataConnector").MDATPDataConnector = null as any;
utilities.lazyLoad(exports, ["MDATPDataConnector"], () => require("./mdatpdataConnector"));

export { MetadataArgs } from "./metadata";
export type Metadata = import("./metadata").Metadata;
export const Metadata: typeof import("./metadata").Metadata = null as any;
utilities.lazyLoad(exports, ["Metadata"], () => require("./metadata"));

export { MicrosoftSecurityIncidentCreationAlertRuleArgs } from "./microsoftSecurityIncidentCreationAlertRule";
export type MicrosoftSecurityIncidentCreationAlertRule = import("./microsoftSecurityIncidentCreationAlertRule").MicrosoftSecurityIncidentCreationAlertRule;
export const MicrosoftSecurityIncidentCreationAlertRule: typeof import("./microsoftSecurityIncidentCreationAlertRule").MicrosoftSecurityIncidentCreationAlertRule = null as any;
utilities.lazyLoad(exports, ["MicrosoftSecurityIncidentCreationAlertRule"], () => require("./microsoftSecurityIncidentCreationAlertRule"));

export { MLBehaviorAnalyticsAlertRuleArgs } from "./mlbehaviorAnalyticsAlertRule";
export type MLBehaviorAnalyticsAlertRule = import("./mlbehaviorAnalyticsAlertRule").MLBehaviorAnalyticsAlertRule;
export const MLBehaviorAnalyticsAlertRule: typeof import("./mlbehaviorAnalyticsAlertRule").MLBehaviorAnalyticsAlertRule = null as any;
utilities.lazyLoad(exports, ["MLBehaviorAnalyticsAlertRule"], () => require("./mlbehaviorAnalyticsAlertRule"));

export { MSTIDataConnectorArgs } from "./mstidataConnector";
export type MSTIDataConnector = import("./mstidataConnector").MSTIDataConnector;
export const MSTIDataConnector: typeof import("./mstidataConnector").MSTIDataConnector = null as any;
utilities.lazyLoad(exports, ["MSTIDataConnector"], () => require("./mstidataConnector"));

export { MTPDataConnectorArgs } from "./mtpdataConnector";
export type MTPDataConnector = import("./mtpdataConnector").MTPDataConnector;
export const MTPDataConnector: typeof import("./mtpdataConnector").MTPDataConnector = null as any;
utilities.lazyLoad(exports, ["MTPDataConnector"], () => require("./mtpdataConnector"));

export { NrtAlertRuleArgs } from "./nrtAlertRule";
export type NrtAlertRule = import("./nrtAlertRule").NrtAlertRule;
export const NrtAlertRule: typeof import("./nrtAlertRule").NrtAlertRule = null as any;
utilities.lazyLoad(exports, ["NrtAlertRule"], () => require("./nrtAlertRule"));

export { Office365ProjectDataConnectorArgs } from "./office365ProjectDataConnector";
export type Office365ProjectDataConnector = import("./office365ProjectDataConnector").Office365ProjectDataConnector;
export const Office365ProjectDataConnector: typeof import("./office365ProjectDataConnector").Office365ProjectDataConnector = null as any;
utilities.lazyLoad(exports, ["Office365ProjectDataConnector"], () => require("./office365ProjectDataConnector"));

export { OfficeATPDataConnectorArgs } from "./officeATPDataConnector";
export type OfficeATPDataConnector = import("./officeATPDataConnector").OfficeATPDataConnector;
export const OfficeATPDataConnector: typeof import("./officeATPDataConnector").OfficeATPDataConnector = null as any;
utilities.lazyLoad(exports, ["OfficeATPDataConnector"], () => require("./officeATPDataConnector"));

export { OfficeDataConnectorArgs } from "./officeDataConnector";
export type OfficeDataConnector = import("./officeDataConnector").OfficeDataConnector;
export const OfficeDataConnector: typeof import("./officeDataConnector").OfficeDataConnector = null as any;
utilities.lazyLoad(exports, ["OfficeDataConnector"], () => require("./officeDataConnector"));

export { OfficeIRMDataConnectorArgs } from "./officeIRMDataConnector";
export type OfficeIRMDataConnector = import("./officeIRMDataConnector").OfficeIRMDataConnector;
export const OfficeIRMDataConnector: typeof import("./officeIRMDataConnector").OfficeIRMDataConnector = null as any;
utilities.lazyLoad(exports, ["OfficeIRMDataConnector"], () => require("./officeIRMDataConnector"));

export { OfficePowerBIDataConnectorArgs } from "./officePowerBIDataConnector";
export type OfficePowerBIDataConnector = import("./officePowerBIDataConnector").OfficePowerBIDataConnector;
export const OfficePowerBIDataConnector: typeof import("./officePowerBIDataConnector").OfficePowerBIDataConnector = null as any;
utilities.lazyLoad(exports, ["OfficePowerBIDataConnector"], () => require("./officePowerBIDataConnector"));

export { ScheduledAlertRuleArgs } from "./scheduledAlertRule";
export type ScheduledAlertRule = import("./scheduledAlertRule").ScheduledAlertRule;
export const ScheduledAlertRule: typeof import("./scheduledAlertRule").ScheduledAlertRule = null as any;
utilities.lazyLoad(exports, ["ScheduledAlertRule"], () => require("./scheduledAlertRule"));

export { SentinelOnboardingStateArgs } from "./sentinelOnboardingState";
export type SentinelOnboardingState = import("./sentinelOnboardingState").SentinelOnboardingState;
export const SentinelOnboardingState: typeof import("./sentinelOnboardingState").SentinelOnboardingState = null as any;
utilities.lazyLoad(exports, ["SentinelOnboardingState"], () => require("./sentinelOnboardingState"));

export { SourceControlArgs } from "./sourceControl";
export type SourceControl = import("./sourceControl").SourceControl;
export const SourceControl: typeof import("./sourceControl").SourceControl = null as any;
utilities.lazyLoad(exports, ["SourceControl"], () => require("./sourceControl"));

export { ThreatIntelligenceAlertRuleArgs } from "./threatIntelligenceAlertRule";
export type ThreatIntelligenceAlertRule = import("./threatIntelligenceAlertRule").ThreatIntelligenceAlertRule;
export const ThreatIntelligenceAlertRule: typeof import("./threatIntelligenceAlertRule").ThreatIntelligenceAlertRule = null as any;
utilities.lazyLoad(exports, ["ThreatIntelligenceAlertRule"], () => require("./threatIntelligenceAlertRule"));

export { ThreatIntelligenceIndicatorArgs } from "./threatIntelligenceIndicator";
export type ThreatIntelligenceIndicator = import("./threatIntelligenceIndicator").ThreatIntelligenceIndicator;
export const ThreatIntelligenceIndicator: typeof import("./threatIntelligenceIndicator").ThreatIntelligenceIndicator = null as any;
utilities.lazyLoad(exports, ["ThreatIntelligenceIndicator"], () => require("./threatIntelligenceIndicator"));

export { TiTaxiiDataConnectorArgs } from "./tiTaxiiDataConnector";
export type TiTaxiiDataConnector = import("./tiTaxiiDataConnector").TiTaxiiDataConnector;
export const TiTaxiiDataConnector: typeof import("./tiTaxiiDataConnector").TiTaxiiDataConnector = null as any;
utilities.lazyLoad(exports, ["TiTaxiiDataConnector"], () => require("./tiTaxiiDataConnector"));

export { TIDataConnectorArgs } from "./tidataConnector";
export type TIDataConnector = import("./tidataConnector").TIDataConnector;
export const TIDataConnector: typeof import("./tidataConnector").TIDataConnector = null as any;
utilities.lazyLoad(exports, ["TIDataConnector"], () => require("./tidataConnector"));

export { UebaArgs } from "./ueba";
export type Ueba = import("./ueba").Ueba;
export const Ueba: typeof import("./ueba").Ueba = null as any;
utilities.lazyLoad(exports, ["Ueba"], () => require("./ueba"));

export { WatchlistArgs } from "./watchlist";
export type Watchlist = import("./watchlist").Watchlist;
export const Watchlist: typeof import("./watchlist").Watchlist = null as any;
utilities.lazyLoad(exports, ["Watchlist"], () => require("./watchlist"));

export { WatchlistItemArgs } from "./watchlistItem";
export type WatchlistItem = import("./watchlistItem").WatchlistItem;
export const WatchlistItem: typeof import("./watchlistItem").WatchlistItem = null as any;
utilities.lazyLoad(exports, ["WatchlistItem"], () => require("./watchlistItem"));


// Export enums:
export * from "../../types/enums/securityinsights/v20220601preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:securityinsights/v20220601preview:AADDataConnector":
                return new AADDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:AATPDataConnector":
                return new AATPDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:ASCDataConnector":
                return new ASCDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:Action":
                return new Action(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:ActivityCustomEntityQuery":
                return new ActivityCustomEntityQuery(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:Anomalies":
                return new Anomalies(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:AnomalySecurityMLAnalyticsSettings":
                return new AnomalySecurityMLAnalyticsSettings(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:AutomationRule":
                return new AutomationRule(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:AwsCloudTrailDataConnector":
                return new AwsCloudTrailDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:AwsS3DataConnector":
                return new AwsS3DataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:Bookmark":
                return new Bookmark(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:BookmarkRelation":
                return new BookmarkRelation(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:CodelessApiPollingDataConnector":
                return new CodelessApiPollingDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:CodelessUiDataConnector":
                return new CodelessUiDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:Dynamics365DataConnector":
                return new Dynamics365DataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:EntityAnalytics":
                return new EntityAnalytics(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:EyesOn":
                return new EyesOn(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:FusionAlertRule":
                return new FusionAlertRule(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:Incident":
                return new Incident(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:IncidentComment":
                return new IncidentComment(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:IncidentRelation":
                return new IncidentRelation(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:IoTDataConnector":
                return new IoTDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:MCASDataConnector":
                return new MCASDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:MDATPDataConnector":
                return new MDATPDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:MLBehaviorAnalyticsAlertRule":
                return new MLBehaviorAnalyticsAlertRule(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:MSTIDataConnector":
                return new MSTIDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:MTPDataConnector":
                return new MTPDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:Metadata":
                return new Metadata(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:MicrosoftSecurityIncidentCreationAlertRule":
                return new MicrosoftSecurityIncidentCreationAlertRule(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:NrtAlertRule":
                return new NrtAlertRule(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:Office365ProjectDataConnector":
                return new Office365ProjectDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:OfficeATPDataConnector":
                return new OfficeATPDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:OfficeDataConnector":
                return new OfficeDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:OfficeIRMDataConnector":
                return new OfficeIRMDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:OfficePowerBIDataConnector":
                return new OfficePowerBIDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:ScheduledAlertRule":
                return new ScheduledAlertRule(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:SentinelOnboardingState":
                return new SentinelOnboardingState(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:SourceControl":
                return new SourceControl(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:TIDataConnector":
                return new TIDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:ThreatIntelligenceAlertRule":
                return new ThreatIntelligenceAlertRule(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:ThreatIntelligenceIndicator":
                return new ThreatIntelligenceIndicator(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:TiTaxiiDataConnector":
                return new TiTaxiiDataConnector(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:Ueba":
                return new Ueba(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:Watchlist":
                return new Watchlist(name, <any>undefined, { urn })
            case "azure-native:securityinsights/v20220601preview:WatchlistItem":
                return new WatchlistItem(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "securityinsights/v20220601preview", _module)
