// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets an installed packages by its id.
 */
export function getContentPackage(args: GetContentPackageArgs, opts?: pulumi.InvokeOptions): Promise<GetContentPackageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:securityinsights/v20230901preview:getContentPackage", {
        "packageId": args.packageId,
        "resourceGroupName": args.resourceGroupName,
        "workspaceName": args.workspaceName,
    }, opts);
}

export interface GetContentPackageArgs {
    /**
     * package Id
     */
    packageId: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}

/**
 * Represents a Package in Azure Security Insights.
 */
export interface GetContentPackageResult {
    /**
     * The author of the package
     */
    readonly author?: outputs.securityinsights.v20230901preview.MetadataAuthorResponse;
    /**
     * The categories of the package
     */
    readonly categories?: outputs.securityinsights.v20230901preview.MetadataCategoriesResponse;
    /**
     * The content id of the package
     */
    readonly contentId: string;
    /**
     * The package kind
     */
    readonly contentKind: string;
    /**
     * Unique ID for the content. It should be generated based on the contentId, contentKind and the contentVersion of the package
     */
    readonly contentProductId: string;
    /**
     * The version of the content schema.
     */
    readonly contentSchemaVersion?: string;
    /**
     * The support tier of the package
     */
    readonly dependencies?: outputs.securityinsights.v20230901preview.MetadataDependenciesResponse;
    /**
     * The description of the package
     */
    readonly description?: string;
    /**
     * The display name of the package
     */
    readonly displayName: string;
    /**
     * Etag of the azure resource
     */
    readonly etag?: string;
    /**
     * first publish date package item
     */
    readonly firstPublishDate?: string;
    /**
     * the icon identifier. this id can later be fetched from the content metadata
     */
    readonly icon?: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * Flag indicates if this package is among the featured list.
     */
    readonly isFeatured?: string;
    /**
     * Flag indicates if this is a newly published package.
     */
    readonly isNew?: string;
    /**
     * Flag indicates if this package is in preview.
     */
    readonly isPreview?: string;
    /**
     * last publish date for the package item
     */
    readonly lastPublishDate?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Providers for the package item
     */
    readonly providers?: string[];
    /**
     * The publisher display name of the package
     */
    readonly publisherDisplayName?: string;
    /**
     * The source of the package
     */
    readonly source?: outputs.securityinsights.v20230901preview.MetadataSourceResponse;
    /**
     * The support tier of the package
     */
    readonly support?: outputs.securityinsights.v20230901preview.MetadataSupportResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.securityinsights.v20230901preview.SystemDataResponse;
    /**
     * the tactics the resource covers
     */
    readonly threatAnalysisTactics?: string[];
    /**
     * the techniques the resource covers, these have to be aligned with the tactics being used
     */
    readonly threatAnalysisTechniques?: string[];
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * the latest version number of the package
     */
    readonly version: string;
}
/**
 * Gets an installed packages by its id.
 */
export function getContentPackageOutput(args: GetContentPackageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContentPackageResult> {
    return pulumi.output(args).apply((a: any) => getContentPackage(a, opts))
}

export interface GetContentPackageOutputArgs {
    /**
     * package Id
     */
    packageId: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
