// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Represents a Watchlist in Azure Security Insights.
 */
export class Watchlist extends pulumi.CustomResource {
    /**
     * Get an existing Watchlist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Watchlist {
        return new Watchlist(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:securityinsights/v20190101preview:Watchlist';

    /**
     * Returns true if the given object is an instance of Watchlist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Watchlist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Watchlist.__pulumiType;
    }

    /**
     * The content type of the raw content. Example : text/csv or text/tsv 
     */
    public readonly contentType!: pulumi.Output<string | undefined>;
    /**
     * The time the watchlist was created
     */
    public readonly created!: pulumi.Output<string | undefined>;
    /**
     * Describes a user that created the watchlist
     */
    public readonly createdBy!: pulumi.Output<outputs.securityinsights.v20190101preview.UserInfoResponse | undefined>;
    /**
     * The default duration of a watchlist (in ISO 8601 duration format)
     */
    public readonly defaultDuration!: pulumi.Output<string | undefined>;
    /**
     * A description of the watchlist
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the watchlist
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Etag of the azure resource
     */
    public readonly etag!: pulumi.Output<string | undefined>;
    /**
     * A flag that indicates if the watchlist is deleted or not
     */
    public readonly isDeleted!: pulumi.Output<boolean | undefined>;
    /**
     * List of labels relevant to this watchlist
     */
    public readonly labels!: pulumi.Output<string[] | undefined>;
    /**
     * Azure resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The number of lines in a csv/tsv content to skip before the header
     */
    public readonly numberOfLinesToSkip!: pulumi.Output<number | undefined>;
    /**
     * The provider of the watchlist
     */
    public readonly provider!: pulumi.Output<string>;
    /**
     * The raw content that represents to watchlist items to create. In case of csv/tsv content type, it's the content of the file that will parsed by the endpoint
     */
    public readonly rawContent!: pulumi.Output<string | undefined>;
    /**
     * The source of the watchlist
     */
    public readonly source!: pulumi.Output<string>;
    /**
     * The tenantId where the watchlist belongs to
     */
    public readonly tenantId!: pulumi.Output<string | undefined>;
    /**
     * Azure resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The last time the watchlist was updated
     */
    public readonly updated!: pulumi.Output<string | undefined>;
    /**
     * Describes a user that updated the watchlist
     */
    public readonly updatedBy!: pulumi.Output<outputs.securityinsights.v20190101preview.UserInfoResponse | undefined>;
    /**
     * The alias of the watchlist
     */
    public readonly watchlistAlias!: pulumi.Output<string | undefined>;
    /**
     * The id (a Guid) of the watchlist
     */
    public readonly watchlistId!: pulumi.Output<string | undefined>;
    /**
     * The type of the watchlist
     */
    public readonly watchlistType!: pulumi.Output<string | undefined>;

    /**
     * Create a Watchlist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WatchlistArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.displayName === undefined) {
                throw new Error("Missing required property 'displayName'");
            }
            if (!args || args.operationalInsightsResourceProvider === undefined) {
                throw new Error("Missing required property 'operationalInsightsResourceProvider'");
            }
            if (!args || args.provider === undefined) {
                throw new Error("Missing required property 'provider'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.source === undefined) {
                throw new Error("Missing required property 'source'");
            }
            if (!args || args.watchlistAlias === undefined) {
                throw new Error("Missing required property 'watchlistAlias'");
            }
            if (!args || args.workspaceName === undefined) {
                throw new Error("Missing required property 'workspaceName'");
            }
            inputs["contentType"] = args ? args.contentType : undefined;
            inputs["created"] = args ? args.created : undefined;
            inputs["createdBy"] = args ? args.createdBy : undefined;
            inputs["defaultDuration"] = args ? args.defaultDuration : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["isDeleted"] = args ? args.isDeleted : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["numberOfLinesToSkip"] = args ? args.numberOfLinesToSkip : undefined;
            inputs["operationalInsightsResourceProvider"] = args ? args.operationalInsightsResourceProvider : undefined;
            inputs["provider"] = args ? args.provider : undefined;
            inputs["rawContent"] = args ? args.rawContent : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["tenantId"] = args ? args.tenantId : undefined;
            inputs["updated"] = args ? args.updated : undefined;
            inputs["updatedBy"] = args ? args.updatedBy : undefined;
            inputs["watchlistAlias"] = args ? args.watchlistAlias : undefined;
            inputs["watchlistId"] = args ? args.watchlistId : undefined;
            inputs["watchlistType"] = args ? args.watchlistType : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["contentType"] = undefined /*out*/;
            inputs["created"] = undefined /*out*/;
            inputs["createdBy"] = undefined /*out*/;
            inputs["defaultDuration"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["isDeleted"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["numberOfLinesToSkip"] = undefined /*out*/;
            inputs["provider"] = undefined /*out*/;
            inputs["rawContent"] = undefined /*out*/;
            inputs["source"] = undefined /*out*/;
            inputs["tenantId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["updated"] = undefined /*out*/;
            inputs["updatedBy"] = undefined /*out*/;
            inputs["watchlistAlias"] = undefined /*out*/;
            inputs["watchlistId"] = undefined /*out*/;
            inputs["watchlistType"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Watchlist.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Watchlist resource.
 */
export interface WatchlistArgs {
    /**
     * The content type of the raw content. Example : text/csv or text/tsv 
     */
    readonly contentType?: pulumi.Input<string>;
    /**
     * The time the watchlist was created
     */
    readonly created?: pulumi.Input<string>;
    /**
     * Describes a user that created the watchlist
     */
    readonly createdBy?: pulumi.Input<inputs.securityinsights.v20190101preview.UserInfo>;
    /**
     * The default duration of a watchlist (in ISO 8601 duration format)
     */
    readonly defaultDuration?: pulumi.Input<string>;
    /**
     * A description of the watchlist
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The display name of the watchlist
     */
    readonly displayName: pulumi.Input<string>;
    /**
     * Etag of the azure resource
     */
    readonly etag?: pulumi.Input<string>;
    /**
     * A flag that indicates if the watchlist is deleted or not
     */
    readonly isDeleted?: pulumi.Input<boolean>;
    /**
     * List of labels relevant to this watchlist
     */
    readonly labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of lines in a csv/tsv content to skip before the header
     */
    readonly numberOfLinesToSkip?: pulumi.Input<number>;
    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     */
    readonly operationalInsightsResourceProvider: pulumi.Input<string>;
    /**
     * The provider of the watchlist
     */
    readonly provider: pulumi.Input<string>;
    /**
     * The raw content that represents to watchlist items to create. In case of csv/tsv content type, it's the content of the file that will parsed by the endpoint
     */
    readonly rawContent?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The source of the watchlist
     */
    readonly source: pulumi.Input<string>;
    /**
     * The tenantId where the watchlist belongs to
     */
    readonly tenantId?: pulumi.Input<string>;
    /**
     * The last time the watchlist was updated
     */
    readonly updated?: pulumi.Input<string>;
    /**
     * Describes a user that updated the watchlist
     */
    readonly updatedBy?: pulumi.Input<inputs.securityinsights.v20190101preview.UserInfo>;
    /**
     * The alias of the watchlist
     */
    readonly watchlistAlias: pulumi.Input<string>;
    /**
     * The id (a Guid) of the watchlist
     */
    readonly watchlistId?: pulumi.Input<string>;
    /**
     * The type of the watchlist
     */
    readonly watchlistType?: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    readonly workspaceName: pulumi.Input<string>;
}
