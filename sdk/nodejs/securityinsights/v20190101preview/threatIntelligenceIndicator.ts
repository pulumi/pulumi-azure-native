// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Threat intelligence resource.
 */
export class ThreatIntelligenceIndicator extends pulumi.CustomResource {
    /**
     * Get an existing ThreatIntelligenceIndicator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ThreatIntelligenceIndicator {
        return new ThreatIntelligenceIndicator(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:securityinsights/v20190101preview:ThreatIntelligenceIndicator';

    /**
     * Returns true if the given object is an instance of ThreatIntelligenceIndicator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThreatIntelligenceIndicator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreatIntelligenceIndicator.__pulumiType;
    }

    /**
     * Etag of the azure resource
     */
    public readonly etag!: pulumi.Output<string | undefined>;
    /**
     * The kind of the entity.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * Azure resource name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Azure resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ThreatIntelligenceIndicator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThreatIntelligenceIndicatorArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.kind === undefined) {
                throw new Error("Missing required property 'kind'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.operationalInsightsResourceProvider === undefined) {
                throw new Error("Missing required property 'operationalInsightsResourceProvider'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.workspaceName === undefined) {
                throw new Error("Missing required property 'workspaceName'");
            }
            inputs["confidence"] = args ? args.confidence : undefined;
            inputs["created"] = args ? args.created : undefined;
            inputs["createdByRef"] = args ? args.createdByRef : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["externalId"] = args ? args.externalId : undefined;
            inputs["externalReferences"] = args ? args.externalReferences : undefined;
            inputs["granularMarkings"] = args ? args.granularMarkings : undefined;
            inputs["indicatorTypes"] = args ? args.indicatorTypes : undefined;
            inputs["killChainPhases"] = args ? args.killChainPhases : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["lastUpdatedTimeUtc"] = args ? args.lastUpdatedTimeUtc : undefined;
            inputs["modified"] = args ? args.modified : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["operationalInsightsResourceProvider"] = args ? args.operationalInsightsResourceProvider : undefined;
            inputs["pattern"] = args ? args.pattern : undefined;
            inputs["patternType"] = args ? args.patternType : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["revoked"] = args ? args.revoked : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["threatIntelligenceTags"] = args ? args.threatIntelligenceTags : undefined;
            inputs["threatTypes"] = args ? args.threatTypes : undefined;
            inputs["validFrom"] = args ? args.validFrom : undefined;
            inputs["validUntil"] = args ? args.validUntil : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["etag"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ThreatIntelligenceIndicator.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ThreatIntelligenceIndicator resource.
 */
export interface ThreatIntelligenceIndicatorArgs {
    /**
     * Confidence of threat intelligence entity
     */
    readonly confidence?: pulumi.Input<number>;
    /**
     * Created by
     */
    readonly created?: pulumi.Input<string>;
    /**
     * Created by reference of threat intelligence entity
     */
    readonly createdByRef?: pulumi.Input<string>;
    /**
     * Description of a threat intelligence entity
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Display name of a threat intelligence entity
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Etag of the azure resource
     */
    readonly etag?: pulumi.Input<string>;
    /**
     * External ID of threat intelligence entity
     */
    readonly externalId?: pulumi.Input<string>;
    /**
     * External References
     */
    readonly externalReferences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Granular Markings
     */
    readonly granularMarkings?: pulumi.Input<pulumi.Input<inputs.securityinsights.v20190101preview.ThreatIntelligenceGranularMarkingModel>[]>;
    /**
     * Indicator types of threat intelligence entities
     */
    readonly indicatorTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kill chain phases
     */
    readonly killChainPhases?: pulumi.Input<pulumi.Input<inputs.securityinsights.v20190101preview.ThreatIntelligenceKillChainPhase>[]>;
    /**
     * The kind of the entity.
     */
    readonly kind: pulumi.Input<string>;
    /**
     * Labels  of threat intelligence entity
     */
    readonly labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Last updated time in UTC
     */
    readonly lastUpdatedTimeUtc?: pulumi.Input<string>;
    /**
     * Modified by
     */
    readonly modified?: pulumi.Input<string>;
    /**
     * Threat Intelligence Identifier
     */
    readonly name: pulumi.Input<string>;
    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     */
    readonly operationalInsightsResourceProvider: pulumi.Input<string>;
    /**
     * Pattern of a threat intelligence entity
     */
    readonly pattern?: pulumi.Input<string>;
    /**
     * Pattern type of a threat intelligence entity
     */
    readonly patternType?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Is threat intelligence entity revoked
     */
    readonly revoked?: pulumi.Input<boolean>;
    /**
     * Source of a threat intelligence entity
     */
    readonly source?: pulumi.Input<string>;
    /**
     * List of tags
     */
    readonly threatIntelligenceTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Threat types
     */
    readonly threatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Valid from
     */
    readonly validFrom?: pulumi.Input<string>;
    /**
     * Valid until
     */
    readonly validUntil?: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    readonly workspaceName: pulumi.Input<string>;
}
