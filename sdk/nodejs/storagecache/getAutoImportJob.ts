// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Returns an auto import job.
 *
 * Uses Azure REST API version 2025-07-01.
 */
export function getAutoImportJob(args: GetAutoImportJobArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoImportJobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:storagecache:getAutoImportJob", {
        "amlFilesystemName": args.amlFilesystemName,
        "autoImportJobName": args.autoImportJobName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetAutoImportJobArgs {
    /**
     * Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
     */
    amlFilesystemName: string;
    /**
     * Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
     */
    autoImportJobName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * An auto import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
 */
export interface GetAutoImportJobResult {
    /**
     * The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.
     */
    readonly adminStatus?: string;
    /**
     * An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100.
     */
    readonly autoImportPrefixes?: string[];
    /**
     * The Azure API version of the resource.
     */
    readonly azureApiVersion: string;
    /**
     * The storage account blob change feed status of the auto import job.
     */
    readonly blobSyncEvents: outputs.storagecache.AutoImportJobResponseBlobSyncEvents;
    /**
     * How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes.
     */
    readonly conflictResolutionMode?: string;
    /**
     * Whether or not to enable deletions during auto import. This only affects overwrite-dirty.
     */
    readonly enableDeletions?: boolean;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Number of directories imported during full scan.
     */
    readonly importedDirectories: number;
    /**
     * Number of files imported during full scan.
     */
    readonly importedFiles: number;
    /**
     * Number of symlinks imported during full scan.
     */
    readonly importedSymlinks: number;
    /**
     * The time (in UTC) of the last completed auto import job.
     */
    readonly lastCompletionTimeUTC: string;
    /**
     * The time (in UTC) the latest auto import job started.
     */
    readonly lastStartedTimeUTC: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error.
     */
    readonly maximumErrors?: number;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Number of preexisting directories during full scan.
     */
    readonly preexistingDirectories: number;
    /**
     * Number of preexisting files during full scan.
     */
    readonly preexistingFiles: number;
    /**
     * Number of preexisting symlinks during full scan.
     */
    readonly preexistingSymlinks: number;
    /**
     * ARM provisioning state.
     */
    readonly provisioningState: string;
    /**
     * Rate of blob import during full scan.
     */
    readonly rateOfBlobImport: number;
    /**
     * Rate of blobs walked during full scan.
     */
    readonly rateOfBlobWalk: number;
    /**
     * Date and time of when the full scan ended.
     */
    readonly scanEndTime: string;
    /**
     * Date and time of when the currently running full scan began.
     */
    readonly scanStartTime: string;
    /**
     * The state of the auto import operation.
     */
    readonly state: string;
    /**
     * Server-defined status code for auto import job.
     */
    readonly statusCode: string;
    /**
     * Server-defined status message for auto import job.
     */
    readonly statusMessage: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.storagecache.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Total number of blobs imported during full scan.
     */
    readonly totalBlobsImported: number;
    /**
     * Total number of blobs walked during full scan.
     */
    readonly totalBlobsWalked: number;
    /**
     * Total conflicts encountered during full scan.
     */
    readonly totalConflicts: number;
    /**
     * Total errors encountered during full scan.
     */
    readonly totalErrors: number;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Returns an auto import job.
 *
 * Uses Azure REST API version 2025-07-01.
 */
export function getAutoImportJobOutput(args: GetAutoImportJobOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAutoImportJobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:storagecache:getAutoImportJob", {
        "amlFilesystemName": args.amlFilesystemName,
        "autoImportJobName": args.autoImportJobName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetAutoImportJobOutputArgs {
    /**
     * Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
     */
    amlFilesystemName: pulumi.Input<string>;
    /**
     * Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
     */
    autoImportJobName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
