// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AmlFilesystemArgs } from "./amlFilesystem";
export type AmlFilesystem = import("./amlFilesystem").AmlFilesystem;
export const AmlFilesystem: typeof import("./amlFilesystem").AmlFilesystem = null as any;
utilities.lazyLoad(exports, ["AmlFilesystem"], () => require("./amlFilesystem"));

export { CacheArgs } from "./cache";
export type Cache = import("./cache").Cache;
export const Cache: typeof import("./cache").Cache = null as any;
utilities.lazyLoad(exports, ["Cache"], () => require("./cache"));

export { GetCacheArgs, GetCacheResult, GetCacheOutputArgs } from "./getCache";
export const getCache: typeof import("./getCache").getCache = null as any;
export const getCacheOutput: typeof import("./getCache").getCacheOutput = null as any;
utilities.lazyLoad(exports, ["getCache","getCacheOutput"], () => require("./getCache"));

export { GetRequiredAmlFSSubnetsSizeArgs, GetRequiredAmlFSSubnetsSizeResult, GetRequiredAmlFSSubnetsSizeOutputArgs } from "./getRequiredAmlFSSubnetsSize";
export const getRequiredAmlFSSubnetsSize: typeof import("./getRequiredAmlFSSubnetsSize").getRequiredAmlFSSubnetsSize = null as any;
export const getRequiredAmlFSSubnetsSizeOutput: typeof import("./getRequiredAmlFSSubnetsSize").getRequiredAmlFSSubnetsSizeOutput = null as any;
utilities.lazyLoad(exports, ["getRequiredAmlFSSubnetsSize","getRequiredAmlFSSubnetsSizeOutput"], () => require("./getRequiredAmlFSSubnetsSize"));

export { GetStorageTargetArgs, GetStorageTargetResult, GetStorageTargetOutputArgs } from "./getStorageTarget";
export const getStorageTarget: typeof import("./getStorageTarget").getStorageTarget = null as any;
export const getStorageTargetOutput: typeof import("./getStorageTarget").getStorageTargetOutput = null as any;
utilities.lazyLoad(exports, ["getStorageTarget","getStorageTargetOutput"], () => require("./getStorageTarget"));

export { GetamlFilesystemArgs, GetamlFilesystemResult, GetamlFilesystemOutputArgs } from "./getamlFilesystem";
export const getamlFilesystem: typeof import("./getamlFilesystem").getamlFilesystem = null as any;
export const getamlFilesystemOutput: typeof import("./getamlFilesystem").getamlFilesystemOutput = null as any;
utilities.lazyLoad(exports, ["getamlFilesystem","getamlFilesystemOutput"], () => require("./getamlFilesystem"));

export { StorageTargetArgs } from "./storageTarget";
export type StorageTarget = import("./storageTarget").StorageTarget;
export const StorageTarget: typeof import("./storageTarget").StorageTarget = null as any;
utilities.lazyLoad(exports, ["StorageTarget"], () => require("./storageTarget"));


// Export enums:
export * from "../../types/enums/storagecache/v20230301preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:storagecache/v20230301preview:Cache":
                return new Cache(name, <any>undefined, { urn })
            case "azure-native:storagecache/v20230301preview:StorageTarget":
                return new StorageTarget(name, <any>undefined, { urn })
            case "azure-native:storagecache/v20230301preview:amlFilesystem":
                return new AmlFilesystem(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "storagecache/v20230301preview", _module)
