// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get a CommunityTraining
 */
export function getCommunityTraining(args: GetCommunityTrainingArgs, opts?: pulumi.InvokeOptions): Promise<GetCommunityTrainingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:community/v20231101:getCommunityTraining", {
        "communityTrainingName": args.communityTrainingName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetCommunityTrainingArgs {
    /**
     * The name of the Community Training Resource
     */
    communityTrainingName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * A CommunityProviderHub resource
 */
export interface GetCommunityTrainingResult {
    /**
     * To indicate whether the Community Training instance has Disaster Recovery enabled
     */
    readonly disasterRecoveryEnabled: boolean;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The identity configuration of the Community Training resource
     */
    readonly identityConfiguration: outputs.community.v20231101.IdentityConfigurationPropertiesResponse;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The email address of the portal admin
     */
    readonly portalAdminEmailAddress: string;
    /**
     * The portal name (website name) of the Community Training instance
     */
    readonly portalName: string;
    /**
     * The email address of the portal owner. Will be used as the primary contact
     */
    readonly portalOwnerEmailAddress: string;
    /**
     * The organization name of the portal owner
     */
    readonly portalOwnerOrganizationName: string;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: string;
    /**
     * The SKU (Stock Keeping Unit) assigned to this resource.
     */
    readonly sku?: outputs.community.v20231101.SkuResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.community.v20231101.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * To indicate whether the Community Training instance has Zone Redundancy enabled
     */
    readonly zoneRedundancyEnabled: boolean;
}
/**
 * Get a CommunityTraining
 */
export function getCommunityTrainingOutput(args: GetCommunityTrainingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCommunityTrainingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:community/v20231101:getCommunityTraining", {
        "communityTrainingName": args.communityTrainingName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetCommunityTrainingOutputArgs {
    /**
     * The name of the Community Training Resource
     */
    communityTrainingName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
