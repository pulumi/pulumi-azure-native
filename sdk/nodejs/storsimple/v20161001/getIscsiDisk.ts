// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * The iSCSI disk.
 */
export function getIscsiDisk(args: GetIscsiDiskArgs, opts?: pulumi.InvokeOptions): Promise<GetIscsiDiskResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:storsimple/v20161001:getIscsiDisk", {
        "deviceName": args.deviceName,
        "diskName": args.diskName,
        "iscsiServerName": args.iscsiServerName,
        "managerName": args.managerName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetIscsiDiskArgs {
    /**
     * The device name.
     */
    deviceName: string;
    /**
     * The disk name.
     */
    diskName: string;
    /**
     * The iSCSI server name.
     */
    iscsiServerName: string;
    /**
     * The manager name
     */
    managerName: string;
    /**
     * The resource group name
     */
    resourceGroupName: string;
}

/**
 * The iSCSI disk.
 */
export interface GetIscsiDiskResult {
    /**
     * The access control records.
     */
    readonly accessControlRecords: string[];
    /**
     * The data policy.
     */
    readonly dataPolicy: string;
    /**
     * The description.
     */
    readonly description?: string;
    /**
     * The disk status.
     */
    readonly diskStatus: string;
    /**
     * The identifier.
     */
    readonly id: string;
    /**
     * The local used capacity in bytes.
     */
    readonly localUsedCapacityInBytes: number;
    /**
     * The monitoring.
     */
    readonly monitoringStatus: string;
    /**
     * The name.
     */
    readonly name: string;
    /**
     * The provisioned capacity in bytes.
     */
    readonly provisionedCapacityInBytes: number;
    /**
     * The type.
     */
    readonly type: string;
    /**
     * The used capacity in bytes.
     */
    readonly usedCapacityInBytes: number;
}
