// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ArcAddonArgs } from "./arcAddon";
export type ArcAddon = import("./arcAddon").ArcAddon;
export const ArcAddon: typeof import("./arcAddon").ArcAddon = null as any;
utilities.lazyLoad(exports, ["ArcAddon"], () => require("./arcAddon"));

export { CloudEdgeManagementRoleArgs } from "./cloudEdgeManagementRole";
export type CloudEdgeManagementRole = import("./cloudEdgeManagementRole").CloudEdgeManagementRole;
export const CloudEdgeManagementRole: typeof import("./cloudEdgeManagementRole").CloudEdgeManagementRole = null as any;
utilities.lazyLoad(exports, ["CloudEdgeManagementRole"], () => require("./cloudEdgeManagementRole"));

export { DeviceArgs } from "./device";
export type Device = import("./device").Device;
export const Device: typeof import("./device").Device = null as any;
utilities.lazyLoad(exports, ["Device"], () => require("./device"));

export { FileEventTriggerArgs } from "./fileEventTrigger";
export type FileEventTrigger = import("./fileEventTrigger").FileEventTrigger;
export const FileEventTrigger: typeof import("./fileEventTrigger").FileEventTrigger = null as any;
utilities.lazyLoad(exports, ["FileEventTrigger"], () => require("./fileEventTrigger"));

export { GetArcAddonArgs, GetArcAddonResult, GetArcAddonOutputArgs } from "./getArcAddon";
export const getArcAddon: typeof import("./getArcAddon").getArcAddon = null as any;
export const getArcAddonOutput: typeof import("./getArcAddon").getArcAddonOutput = null as any;
utilities.lazyLoad(exports, ["getArcAddon","getArcAddonOutput"], () => require("./getArcAddon"));

export { GetCloudEdgeManagementRoleArgs, GetCloudEdgeManagementRoleResult, GetCloudEdgeManagementRoleOutputArgs } from "./getCloudEdgeManagementRole";
export const getCloudEdgeManagementRole: typeof import("./getCloudEdgeManagementRole").getCloudEdgeManagementRole = null as any;
export const getCloudEdgeManagementRoleOutput: typeof import("./getCloudEdgeManagementRole").getCloudEdgeManagementRoleOutput = null as any;
utilities.lazyLoad(exports, ["getCloudEdgeManagementRole","getCloudEdgeManagementRoleOutput"], () => require("./getCloudEdgeManagementRole"));

export { GetDeviceArgs, GetDeviceResult, GetDeviceOutputArgs } from "./getDevice";
export const getDevice: typeof import("./getDevice").getDevice = null as any;
export const getDeviceOutput: typeof import("./getDevice").getDeviceOutput = null as any;
utilities.lazyLoad(exports, ["getDevice","getDeviceOutput"], () => require("./getDevice"));

export { GetDeviceExtendedInformationArgs, GetDeviceExtendedInformationResult, GetDeviceExtendedInformationOutputArgs } from "./getDeviceExtendedInformation";
export const getDeviceExtendedInformation: typeof import("./getDeviceExtendedInformation").getDeviceExtendedInformation = null as any;
export const getDeviceExtendedInformationOutput: typeof import("./getDeviceExtendedInformation").getDeviceExtendedInformationOutput = null as any;
utilities.lazyLoad(exports, ["getDeviceExtendedInformation","getDeviceExtendedInformationOutput"], () => require("./getDeviceExtendedInformation"));

export { GetFileEventTriggerArgs, GetFileEventTriggerResult, GetFileEventTriggerOutputArgs } from "./getFileEventTrigger";
export const getFileEventTrigger: typeof import("./getFileEventTrigger").getFileEventTrigger = null as any;
export const getFileEventTriggerOutput: typeof import("./getFileEventTrigger").getFileEventTriggerOutput = null as any;
utilities.lazyLoad(exports, ["getFileEventTrigger","getFileEventTriggerOutput"], () => require("./getFileEventTrigger"));

export { GetIoTAddonArgs, GetIoTAddonResult, GetIoTAddonOutputArgs } from "./getIoTAddon";
export const getIoTAddon: typeof import("./getIoTAddon").getIoTAddon = null as any;
export const getIoTAddonOutput: typeof import("./getIoTAddon").getIoTAddonOutput = null as any;
utilities.lazyLoad(exports, ["getIoTAddon","getIoTAddonOutput"], () => require("./getIoTAddon"));

export { GetIoTRoleArgs, GetIoTRoleResult, GetIoTRoleOutputArgs } from "./getIoTRole";
export const getIoTRole: typeof import("./getIoTRole").getIoTRole = null as any;
export const getIoTRoleOutput: typeof import("./getIoTRole").getIoTRoleOutput = null as any;
utilities.lazyLoad(exports, ["getIoTRole","getIoTRoleOutput"], () => require("./getIoTRole"));

export { GetKubernetesRoleArgs, GetKubernetesRoleResult, GetKubernetesRoleOutputArgs } from "./getKubernetesRole";
export const getKubernetesRole: typeof import("./getKubernetesRole").getKubernetesRole = null as any;
export const getKubernetesRoleOutput: typeof import("./getKubernetesRole").getKubernetesRoleOutput = null as any;
utilities.lazyLoad(exports, ["getKubernetesRole","getKubernetesRoleOutput"], () => require("./getKubernetesRole"));

export { GetMECRoleArgs, GetMECRoleResult, GetMECRoleOutputArgs } from "./getMECRole";
export const getMECRole: typeof import("./getMECRole").getMECRole = null as any;
export const getMECRoleOutput: typeof import("./getMECRole").getMECRoleOutput = null as any;
utilities.lazyLoad(exports, ["getMECRole","getMECRoleOutput"], () => require("./getMECRole"));

export { GetPeriodicTimerEventTriggerArgs, GetPeriodicTimerEventTriggerResult, GetPeriodicTimerEventTriggerOutputArgs } from "./getPeriodicTimerEventTrigger";
export const getPeriodicTimerEventTrigger: typeof import("./getPeriodicTimerEventTrigger").getPeriodicTimerEventTrigger = null as any;
export const getPeriodicTimerEventTriggerOutput: typeof import("./getPeriodicTimerEventTrigger").getPeriodicTimerEventTriggerOutput = null as any;
utilities.lazyLoad(exports, ["getPeriodicTimerEventTrigger","getPeriodicTimerEventTriggerOutput"], () => require("./getPeriodicTimerEventTrigger"));

export { GetUserArgs, GetUserResult, GetUserOutputArgs } from "./getUser";
export const getUser: typeof import("./getUser").getUser = null as any;
export const getUserOutput: typeof import("./getUser").getUserOutput = null as any;
utilities.lazyLoad(exports, ["getUser","getUserOutput"], () => require("./getUser"));

export { IoTAddonArgs } from "./ioTAddon";
export type IoTAddon = import("./ioTAddon").IoTAddon;
export const IoTAddon: typeof import("./ioTAddon").IoTAddon = null as any;
utilities.lazyLoad(exports, ["IoTAddon"], () => require("./ioTAddon"));

export { IoTRoleArgs } from "./ioTRole";
export type IoTRole = import("./ioTRole").IoTRole;
export const IoTRole: typeof import("./ioTRole").IoTRole = null as any;
utilities.lazyLoad(exports, ["IoTRole"], () => require("./ioTRole"));

export { KubernetesRoleArgs } from "./kubernetesRole";
export type KubernetesRole = import("./kubernetesRole").KubernetesRole;
export const KubernetesRole: typeof import("./kubernetesRole").KubernetesRole = null as any;
utilities.lazyLoad(exports, ["KubernetesRole"], () => require("./kubernetesRole"));

export { MECRoleArgs } from "./mecrole";
export type MECRole = import("./mecrole").MECRole;
export const MECRole: typeof import("./mecrole").MECRole = null as any;
utilities.lazyLoad(exports, ["MECRole"], () => require("./mecrole"));

export { PeriodicTimerEventTriggerArgs } from "./periodicTimerEventTrigger";
export type PeriodicTimerEventTrigger = import("./periodicTimerEventTrigger").PeriodicTimerEventTrigger;
export const PeriodicTimerEventTrigger: typeof import("./periodicTimerEventTrigger").PeriodicTimerEventTrigger = null as any;
utilities.lazyLoad(exports, ["PeriodicTimerEventTrigger"], () => require("./periodicTimerEventTrigger"));

export { UserArgs } from "./user";
export type User = import("./user").User;
export const User: typeof import("./user").User = null as any;
utilities.lazyLoad(exports, ["User"], () => require("./user"));


// Export enums:
export * from "../../types/enums/databoxedge/v20210201preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:databoxedge/v20210201preview:ArcAddon":
                return new ArcAddon(name, <any>undefined, { urn })
            case "azure-native:databoxedge/v20210201preview:CloudEdgeManagementRole":
                return new CloudEdgeManagementRole(name, <any>undefined, { urn })
            case "azure-native:databoxedge/v20210201preview:Device":
                return new Device(name, <any>undefined, { urn })
            case "azure-native:databoxedge/v20210201preview:FileEventTrigger":
                return new FileEventTrigger(name, <any>undefined, { urn })
            case "azure-native:databoxedge/v20210201preview:IoTAddon":
                return new IoTAddon(name, <any>undefined, { urn })
            case "azure-native:databoxedge/v20210201preview:IoTRole":
                return new IoTRole(name, <any>undefined, { urn })
            case "azure-native:databoxedge/v20210201preview:KubernetesRole":
                return new KubernetesRole(name, <any>undefined, { urn })
            case "azure-native:databoxedge/v20210201preview:MECRole":
                return new MECRole(name, <any>undefined, { urn })
            case "azure-native:databoxedge/v20210201preview:PeriodicTimerEventTrigger":
                return new PeriodicTimerEventTrigger(name, <any>undefined, { urn })
            case "azure-native:databoxedge/v20210201preview:User":
                return new User(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "databoxedge/v20210201preview", _module)
