// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * IoT Addon.
 * API Version: 2020-12-01.
 */
export class IoTAddon extends pulumi.CustomResource {
    /**
     * Get an existing IoTAddon resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IoTAddon {
        return new IoTAddon(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:databoxedge:IoTAddon';

    /**
     * Returns true if the given object is an instance of IoTAddon.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IoTAddon {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IoTAddon.__pulumiType;
    }

    /**
     * Host OS supported by the IoT addon.
     */
    public /*out*/ readonly hostPlatform!: pulumi.Output<string>;
    /**
     * Platform where the runtime is hosted.
     */
    public /*out*/ readonly hostPlatformType!: pulumi.Output<string>;
    /**
     * IoT device metadata to which appliance needs to be connected.
     */
    public readonly ioTDeviceDetails!: pulumi.Output<outputs.databoxedge.IoTDeviceInfoResponse>;
    /**
     * IoT edge device to which the IoT Addon needs to be configured.
     */
    public readonly ioTEdgeDeviceDetails!: pulumi.Output<outputs.databoxedge.IoTDeviceInfoResponse>;
    /**
     * Addon type.
     * Expected value is 'IotEdge'.
     */
    public readonly kind!: pulumi.Output<"IotEdge">;
    /**
     * The object name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Addon Provisioning State
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Addon type
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.databoxedge.SystemDataResponse>;
    /**
     * The hierarchical type of the object.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Version of IoT running on the appliance.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a IoTAddon resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IoTAddonArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.deviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceName'");
            }
            if ((!args || args.ioTDeviceDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ioTDeviceDetails'");
            }
            if ((!args || args.ioTEdgeDeviceDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ioTEdgeDeviceDetails'");
            }
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.roleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleName'");
            }
            inputs["addonName"] = args ? args.addonName : undefined;
            inputs["deviceName"] = args ? args.deviceName : undefined;
            inputs["ioTDeviceDetails"] = args ? args.ioTDeviceDetails : undefined;
            inputs["ioTEdgeDeviceDetails"] = args ? args.ioTEdgeDeviceDetails : undefined;
            inputs["kind"] = "IotEdge";
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["roleName"] = args ? args.roleName : undefined;
            inputs["hostPlatform"] = undefined /*out*/;
            inputs["hostPlatformType"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        } else {
            inputs["hostPlatform"] = undefined /*out*/;
            inputs["hostPlatformType"] = undefined /*out*/;
            inputs["ioTDeviceDetails"] = undefined /*out*/;
            inputs["ioTEdgeDeviceDetails"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:databoxedge:IoTAddon" }, { type: "azure-native:databoxedge/v20200901:IoTAddon" }, { type: "azure-nextgen:databoxedge/v20200901:IoTAddon" }, { type: "azure-native:databoxedge/v20200901preview:IoTAddon" }, { type: "azure-nextgen:databoxedge/v20200901preview:IoTAddon" }, { type: "azure-native:databoxedge/v20201201:IoTAddon" }, { type: "azure-nextgen:databoxedge/v20201201:IoTAddon" }, { type: "azure-native:databoxedge/v20210201preview:IoTAddon" }, { type: "azure-nextgen:databoxedge/v20210201preview:IoTAddon" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(IoTAddon.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a IoTAddon resource.
 */
export interface IoTAddonArgs {
    /**
     * The addon name.
     */
    addonName?: pulumi.Input<string>;
    /**
     * The device name.
     */
    deviceName: pulumi.Input<string>;
    /**
     * IoT device metadata to which appliance needs to be connected.
     */
    ioTDeviceDetails: pulumi.Input<inputs.databoxedge.IoTDeviceInfoArgs>;
    /**
     * IoT edge device to which the IoT Addon needs to be configured.
     */
    ioTEdgeDeviceDetails: pulumi.Input<inputs.databoxedge.IoTDeviceInfoArgs>;
    /**
     * Addon type.
     * Expected value is 'IotEdge'.
     */
    kind: pulumi.Input<"IotEdge">;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The role name.
     */
    roleName: pulumi.Input<string>;
}
