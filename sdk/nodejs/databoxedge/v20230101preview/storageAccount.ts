// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Represents a Storage Account on the  Data Box Edge/Gateway device.
 */
export class StorageAccount extends pulumi.CustomResource {
    /**
     * Get an existing StorageAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StorageAccount {
        return new StorageAccount(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:databoxedge/v20230101preview:StorageAccount';

    /**
     * Returns true if the given object is an instance of StorageAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageAccount.__pulumiType;
    }

    /**
     * BlobEndpoint of Storage Account
     */
    public /*out*/ readonly blobEndpoint!: pulumi.Output<string>;
    /**
     * The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
     */
    public /*out*/ readonly containerCount!: pulumi.Output<number>;
    /**
     * Data policy of the storage Account.
     */
    public readonly dataPolicy!: pulumi.Output<string>;
    /**
     * Description for the storage Account.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The object name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Storage Account Credential Id
     */
    public readonly storageAccountCredentialId!: pulumi.Output<string | undefined>;
    /**
     * Current status of the storage account
     */
    public readonly storageAccountStatus!: pulumi.Output<string | undefined>;
    /**
     * Metadata pertaining to creation and last modification of StorageAccount
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.databoxedge.v20230101preview.SystemDataResponse>;
    /**
     * The hierarchical type of the object.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a StorageAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageAccountArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dataPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataPolicy'");
            }
            if ((!args || args.deviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["dataPolicy"] = args ? args.dataPolicy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["storageAccountCredentialId"] = args ? args.storageAccountCredentialId : undefined;
            resourceInputs["storageAccountName"] = args ? args.storageAccountName : undefined;
            resourceInputs["storageAccountStatus"] = args ? args.storageAccountStatus : undefined;
            resourceInputs["blobEndpoint"] = undefined /*out*/;
            resourceInputs["containerCount"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["blobEndpoint"] = undefined /*out*/;
            resourceInputs["containerCount"] = undefined /*out*/;
            resourceInputs["dataPolicy"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["storageAccountCredentialId"] = undefined /*out*/;
            resourceInputs["storageAccountStatus"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:databoxedge:StorageAccount" }, { type: "azure-native:databoxedge/v20190801:StorageAccount" }, { type: "azure-native:databoxedge/v20200501preview:StorageAccount" }, { type: "azure-native:databoxedge/v20200901:StorageAccount" }, { type: "azure-native:databoxedge/v20200901preview:StorageAccount" }, { type: "azure-native:databoxedge/v20201201:StorageAccount" }, { type: "azure-native:databoxedge/v20210201:StorageAccount" }, { type: "azure-native:databoxedge/v20210201preview:StorageAccount" }, { type: "azure-native:databoxedge/v20210601:StorageAccount" }, { type: "azure-native:databoxedge/v20210601preview:StorageAccount" }, { type: "azure-native:databoxedge/v20220301:StorageAccount" }, { type: "azure-native:databoxedge/v20220401preview:StorageAccount" }, { type: "azure-native:databoxedge/v20221201preview:StorageAccount" }, { type: "azure-native:databoxedge/v20230701:StorageAccount" }, { type: "azure-native:databoxedge/v20231201:StorageAccount" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(StorageAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a StorageAccount resource.
 */
export interface StorageAccountArgs {
    /**
     * Data policy of the storage Account.
     */
    dataPolicy: pulumi.Input<string | enums.databoxedge.v20230101preview.DataPolicy>;
    /**
     * Description for the storage Account.
     */
    description?: pulumi.Input<string>;
    /**
     * The device name.
     */
    deviceName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Storage Account Credential Id
     */
    storageAccountCredentialId?: pulumi.Input<string>;
    /**
     * The StorageAccount name.
     */
    storageAccountName?: pulumi.Input<string>;
    /**
     * Current status of the storage account
     */
    storageAccountStatus?: pulumi.Input<string | enums.databoxedge.v20230101preview.StorageAccountStatus>;
}
