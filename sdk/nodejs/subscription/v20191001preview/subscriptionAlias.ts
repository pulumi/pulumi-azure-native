// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Subscription Information with the alias.
 *
 * @deprecated Version 2019-10-01-preview will be removed in v2 of the provider.
 */
export class SubscriptionAlias extends pulumi.CustomResource {
    /**
     * Get an existing SubscriptionAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SubscriptionAlias {
        pulumi.log.warn("SubscriptionAlias is deprecated: Version 2019-10-01-preview will be removed in v2 of the provider.")
        return new SubscriptionAlias(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:subscription/v20191001preview:SubscriptionAlias';

    /**
     * Returns true if the given object is an instance of SubscriptionAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SubscriptionAlias {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SubscriptionAlias.__pulumiType;
    }

    /**
     * Alias ID.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Put Alias response properties.
     */
    public readonly properties!: pulumi.Output<outputs.subscription.v20191001preview.PutAliasResponsePropertiesResponse>;
    /**
     * Resource type, Microsoft.Subscription/aliases.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a SubscriptionAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2019-10-01-preview will be removed in v2 of the provider. */
    constructor(name: string, args?: SubscriptionAliasArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("SubscriptionAlias is deprecated: Version 2019-10-01-preview will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["aliasName"] = args ? args.aliasName : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:subscription:SubscriptionAlias" }, { type: "azure-native:subscription/v20200901:SubscriptionAlias" }, { type: "azure-native:subscription/v20211001:SubscriptionAlias" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(SubscriptionAlias.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SubscriptionAlias resource.
 */
export interface SubscriptionAliasArgs {
    /**
     * Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesnâ€™t have any other lifecycle need beyond the request for subscription creation.
     */
    aliasName?: pulumi.Input<string>;
    /**
     * Put alias request properties.
     */
    properties?: pulumi.Input<inputs.subscription.v20191001preview.PutAliasRequestPropertiesArgs>;
}
