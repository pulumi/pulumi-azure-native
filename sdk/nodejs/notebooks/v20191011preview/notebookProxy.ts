// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * A NotebookProxy resource.
 */
export class NotebookProxy extends pulumi.CustomResource {
    /**
     * Get an existing NotebookProxy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NotebookProxy {
        return new NotebookProxy(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:notebooks/v20191011preview:NotebookProxy';

    /**
     * Returns true if the given object is an instance of NotebookProxy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NotebookProxy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NotebookProxy.__pulumiType;
    }

    /**
     * The friendly string identifier of the creator of the NotebookProxy resource.
     */
    public readonly hostname!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The public DNS name
     */
    public readonly publicDns!: pulumi.Output<string | undefined>;
    /**
     * Allow public network access on a V-Net locked notebook resource
     */
    public readonly publicNetworkAccess!: pulumi.Output<string | undefined>;
    /**
     * The region of the NotebookProxy resource.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * The unique identifier (a GUID) generated for every resource.
     */
    public /*out*/ readonly resourceId!: pulumi.Output<string>;
    /**
     * The alternate application ID used for auth token request in the data plane
     */
    public readonly secondaryAppId!: pulumi.Output<string | undefined>;
    /**
     * System data for notebook resource
     */
    public readonly systemData!: pulumi.Output<outputs.notebooks.v20191011preview.NotebookResourceSystemDataResponse | undefined>;
    /**
     * The type of the resource. Ex- Microsoft.Storage/storageAccounts or Microsoft.Notebooks/notebookProxies.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a NotebookProxy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotebookProxyArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["hostname"] = args ? args.hostname : undefined;
            inputs["publicDns"] = args ? args.publicDns : undefined;
            inputs["publicNetworkAccess"] = args ? args.publicNetworkAccess : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["resourceName"] = args ? args.resourceName : undefined;
            inputs["secondaryAppId"] = args ? args.secondaryAppId : undefined;
            inputs["systemData"] = args ? args.systemData : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["resourceId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["hostname"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["publicDns"] = undefined /*out*/;
            inputs["publicNetworkAccess"] = undefined /*out*/;
            inputs["region"] = undefined /*out*/;
            inputs["resourceId"] = undefined /*out*/;
            inputs["secondaryAppId"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-native:notebooks:NotebookProxy" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(NotebookProxy.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a NotebookProxy resource.
 */
export interface NotebookProxyArgs {
    /**
     * The friendly string identifier of the creator of the NotebookProxy resource.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The public DNS name
     */
    publicDns?: pulumi.Input<string>;
    /**
     * Allow public network access on a V-Net locked notebook resource
     */
    publicNetworkAccess?: pulumi.Input<string>;
    /**
     * The region of the NotebookProxy resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * The alternate application ID used for auth token request in the data plane
     */
    secondaryAppId?: pulumi.Input<string>;
    /**
     * System data for notebook resource
     */
    systemData?: pulumi.Input<inputs.notebooks.v20191011preview.NotebookResourceSystemDataArgs>;
}
