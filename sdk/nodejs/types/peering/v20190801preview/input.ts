// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The properties that define a BGP session.
 */
export interface BgpSessionArgs {
    /**
     * The maximum number of prefixes advertised over the IPv4 session.
     */
    maxPrefixesAdvertisedV4?: pulumi.Input<number>;
    /**
     * The maximum number of prefixes advertised over the IPv6 session.
     */
    maxPrefixesAdvertisedV6?: pulumi.Input<number>;
    /**
     * The MD5 authentication key of the session.
     */
    md5AuthenticationKey?: pulumi.Input<string>;
    /**
     * The IPv4 session address on peer's end.
     */
    peerSessionIPv4Address?: pulumi.Input<string>;
    /**
     * The IPv6 session address on peer's end.
     */
    peerSessionIPv6Address?: pulumi.Input<string>;
    /**
     * The IPv4 prefix that contains both ends' IPv4 addresses.
     */
    sessionPrefixV4?: pulumi.Input<string>;
    /**
     * The IPv6 prefix that contains both ends' IPv6 addresses.
     */
    sessionPrefixV6?: pulumi.Input<string>;
}

/**
 * The contact information of the peer.
 */
export interface ContactInfoArgs {
    /**
     * The list of email addresses.
     */
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of contact numbers.
     */
    phone?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The properties that define a direct connection.
 */
export interface DirectConnectionArgs {
    /**
     * The bandwidth of the connection.
     */
    bandwidthInMbps?: pulumi.Input<number>;
    /**
     * The BGP session associated with the connection.
     */
    bgpSession?: pulumi.Input<inputs.peering.v20190801preview.BgpSessionArgs>;
    /**
     * The unique identifier (GUID) for the connection.
     */
    connectionIdentifier?: pulumi.Input<string>;
    /**
     * The PeeringDB.com ID of the facility at which the connection has to be set up.
     */
    peeringDBFacilityId?: pulumi.Input<number>;
    /**
     * The bandwidth that is actually provisioned.
     */
    provisionedBandwidthInMbps?: pulumi.Input<number>;
    /**
     * The field indicating if Microsoft provides session ip addresses.
     */
    sessionAddressProvider?: pulumi.Input<string | enums.peering.v20190801preview.SessionAddressProvider>;
    /**
     * The flag that indicates whether or not the connection is used for peering service.
     */
    useForPeeringService?: pulumi.Input<boolean>;
}

/**
 * The properties that define an exchange connection.
 */
export interface ExchangeConnectionArgs {
    /**
     * The BGP session associated with the connection.
     */
    bgpSession?: pulumi.Input<inputs.peering.v20190801preview.BgpSessionArgs>;
    /**
     * The unique identifier (GUID) for the connection.
     */
    connectionIdentifier?: pulumi.Input<string>;
    /**
     * The PeeringDB.com ID of the facility at which the connection has to be set up.
     */
    peeringDBFacilityId?: pulumi.Input<number>;
}

/**
 * The properties that define a direct peering.
 */
export interface PeeringPropertiesDirectArgs {
    /**
     * The set of connections that constitute a direct peering.
     */
    connections?: pulumi.Input<pulumi.Input<inputs.peering.v20190801preview.DirectConnectionArgs>[]>;
    /**
     * The type of direct peering.
     */
    directPeeringType?: pulumi.Input<string | enums.peering.v20190801preview.DirectPeeringType>;
    /**
     * The reference of the peer ASN.
     */
    peerAsn?: pulumi.Input<inputs.peering.v20190801preview.SubResourceArgs>;
    /**
     * The flag that indicates whether or not the peering is used for peering service.
     */
    useForPeeringService?: pulumi.Input<boolean>;
}

/**
 * The properties that define an exchange peering.
 */
export interface PeeringPropertiesExchangeArgs {
    /**
     * The set of connections that constitute an exchange peering.
     */
    connections?: pulumi.Input<pulumi.Input<inputs.peering.v20190801preview.ExchangeConnectionArgs>[]>;
    /**
     * The reference of the peer ASN.
     */
    peerAsn?: pulumi.Input<inputs.peering.v20190801preview.SubResourceArgs>;
}

/**
 * The SKU that defines the tier and kind of the peering.
 */
export interface PeeringSkuArgs {
    /**
     * The family of the peering SKU.
     */
    family?: pulumi.Input<string | enums.peering.v20190801preview.Family>;
    /**
     * The name of the peering SKU.
     */
    name?: pulumi.Input<string | enums.peering.v20190801preview.Name>;
    /**
     * The size of the peering SKU.
     */
    size?: pulumi.Input<string | enums.peering.v20190801preview.Size>;
    /**
     * The tier of the peering SKU.
     */
    tier?: pulumi.Input<string | enums.peering.v20190801preview.Tier>;
}

/**
 * The sub resource.
 */
export interface SubResourceArgs {
    /**
     * The identifier of the referenced resource.
     */
    id?: pulumi.Input<string>;
}

