// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

export interface HttpAuthenticationResponse {
    /**
     * Gets or sets the http authentication type.
     */
    type?: string;
}

export interface HttpRequestResponse {
    /**
     * Gets or sets the http authentication.
     */
    authentication?: outputs.scheduler.v20140801preview.HttpAuthenticationResponse;
    /**
     * Gets or sets the request body.
     */
    body?: string;
    /**
     * Gets or sets the headers.
     */
    headers?: {[key: string]: string};
    /**
     * Gets or sets the method of the request.
     */
    method?: string;
    /**
     * Gets or sets the Uri.
     */
    uri?: string;
}

export interface JobActionResponse {
    /**
     * Gets or sets the error action.
     */
    errorAction?: outputs.scheduler.v20140801preview.JobErrorActionResponse;
    /**
     * Gets or sets the storage queue message.
     */
    queueMessage?: outputs.scheduler.v20140801preview.StorageQueueMessageResponse;
    /**
     * Gets or sets the http requests.
     */
    request?: outputs.scheduler.v20140801preview.HttpRequestResponse;
    /**
     * Gets or sets the retry policy.
     */
    retryPolicy?: outputs.scheduler.v20140801preview.RetryPolicyResponse;
    /**
     * Gets or sets the service bus queue message.
     */
    serviceBusQueueMessage?: outputs.scheduler.v20140801preview.ServiceBusQueueMessageResponse;
    /**
     * Gets or sets the service bus topic message.
     */
    serviceBusTopicMessage?: outputs.scheduler.v20140801preview.ServiceBusTopicMessageResponse;
    /**
     * Gets or sets the job action type.
     */
    type?: string;
}

export interface JobCollectionPropertiesResponse {
    /**
     * Gets or sets the job collection quota.
     */
    quota?: outputs.scheduler.v20140801preview.JobCollectionQuotaResponse;
    /**
     * Gets or sets the SKU.
     */
    sku?: outputs.scheduler.v20140801preview.SkuResponse;
    /**
     * Gets or sets the state.
     */
    state?: string;
}

export interface JobCollectionQuotaResponse {
    /**
     * Gets or set the maximum job count.
     */
    maxJobCount?: number;
    /**
     * Gets or sets the maximum job occurrence.
     */
    maxJobOccurrence?: number;
    /**
     * Gets or set the maximum recurrence.
     */
    maxRecurrence?: outputs.scheduler.v20140801preview.JobMaxRecurrenceResponse;
}

export interface JobErrorActionResponse {
    /**
     * Gets or sets the storage queue message.
     */
    queueMessage?: outputs.scheduler.v20140801preview.StorageQueueMessageResponse;
    /**
     * Gets or sets the http requests.
     */
    request?: outputs.scheduler.v20140801preview.HttpRequestResponse;
    /**
     * Gets or sets the retry policy.
     */
    retryPolicy?: outputs.scheduler.v20140801preview.RetryPolicyResponse;
    /**
     * Gets or sets the service bus queue message.
     */
    serviceBusQueueMessage?: outputs.scheduler.v20140801preview.ServiceBusQueueMessageResponse;
    /**
     * Gets or sets the service bus topic message.
     */
    serviceBusTopicMessage?: outputs.scheduler.v20140801preview.ServiceBusTopicMessageResponse;
    /**
     * Gets or sets the job error action type.
     */
    type?: string;
}

export interface JobMaxRecurrenceResponse {
    /**
     * Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
     */
    frequency?: string;
    /**
     * Gets or sets the interval between retries.
     */
    interval?: number;
}

export interface JobPropertiesResponse {
    /**
     * Gets or sets the job action.
     */
    action?: outputs.scheduler.v20140801preview.JobActionResponse;
    /**
     * Gets or sets the job recurrence.
     */
    recurrence?: outputs.scheduler.v20140801preview.JobRecurrenceResponse;
    /**
     * Gets or sets the job start time.
     */
    startTime?: string;
    /**
     * Gets or set the job state.
     */
    state?: string;
    /**
     * Gets the job status.
     */
    status: outputs.scheduler.v20140801preview.JobStatusResponse;
}

export interface JobRecurrenceResponse {
    /**
     * Gets or sets the maximum number of times that the job should run.
     */
    count?: number;
    /**
     * Gets or sets the time at which the job will complete.
     */
    endTime?: string;
    /**
     * Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
     */
    frequency?: string;
    /**
     * Gets or sets the interval between retries.
     */
    interval?: number;
    schedule?: outputs.scheduler.v20140801preview.JobRecurrenceScheduleResponse;
}

export interface JobRecurrenceScheduleMonthlyOccurrenceResponse {
    /**
     * Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
     */
    day?: string;
    /**
     * Gets or sets the occurrence. Must be between -5 and 5.
     */
    occurrence?: number;
}

export interface JobRecurrenceScheduleResponse {
    /**
     * Gets or sets the hours of the day that the job should execute at.
     */
    hours?: number[];
    /**
     * Gets or sets the minutes of the hour that the job should execute at.
     */
    minutes?: number[];
    /**
     * Gets or sets the days of the month that the job should execute on. Must be between 1 and 31.
     */
    monthDays?: number[];
    /**
     * Gets or sets the occurrences of days within a month.
     */
    monthlyOccurrences?: outputs.scheduler.v20140801preview.JobRecurrenceScheduleMonthlyOccurrenceResponse[];
    /**
     * Gets or sets the days of the week that the job should execute on.
     */
    weekDays?: string[];
}

export interface JobStatusResponse {
    /**
     * Gets the number of times this job has executed.
     */
    executionCount: number;
    /**
     * Gets the number of times this job has failed.
     */
    failureCount: number;
    /**
     * Gets the number of faulted occurrences (occurrences that were retried and failed as many times as the retry policy states).
     */
    faultedCount: number;
    /**
     * Gets the time the last occurrence executed in ISO-8601 format.  Could be empty if job has not run yet.
     */
    lastExecutionTime: string;
    /**
     * Gets the time of the next occurrence in ISO-8601 format. Could be empty if the job is completed.
     */
    nextExecutionTime: string;
}

export interface RetryPolicyResponse {
    /**
     * Gets or sets the number of times a retry should be attempted.
     */
    retryCount?: number;
    /**
     * Gets or sets the retry interval between retries.
     */
    retryInterval?: string;
    /**
     * Gets or sets the retry strategy to be used.
     */
    retryType?: string;
}

export interface ServiceBusAuthenticationResponse {
    /**
     * Gets or sets the SAS key.
     */
    sasKey?: string;
    /**
     * Gets or sets the SAS key name.
     */
    sasKeyName?: string;
    /**
     * Gets or sets the authentication type.
     */
    type?: string;
}

export interface ServiceBusBrokeredMessagePropertiesResponse {
    /**
     * Gets or sets the content type.
     */
    contentType?: string;
    /**
     * Gets or sets the correlation id.
     */
    correlationId?: string;
    /**
     * Gets or sets the force persistence.
     */
    forcePersistence?: boolean;
    /**
     * Gets or sets the label.
     */
    label?: string;
    /**
     * Gets or sets the message id.
     */
    messageId?: string;
    /**
     * Gets or sets the partition key.
     */
    partitionKey?: string;
    /**
     * Gets or sets the reply to.
     */
    replyTo?: string;
    /**
     * Gets or sets the reply to session id.
     */
    replyToSessionId?: string;
    /**
     * Gets or sets the scheduled enqueue time UTC.
     */
    scheduledEnqueueTimeUtc?: string;
    /**
     * Gets or sets the session id.
     */
    sessionId?: string;
    /**
     * Gets or sets the time to live.
     */
    timeToLive?: string;
    /**
     * Gets or sets the to.
     */
    to?: string;
    /**
     * Gets or sets the via partition key.
     */
    viaPartitionKey?: string;
}

export interface ServiceBusQueueMessageResponse {
    /**
     * Gets or sets the authentication.
     */
    authentication?: outputs.scheduler.v20140801preview.ServiceBusAuthenticationResponse;
    /**
     * Gets or sets the brokered message properties.
     */
    brokeredMessageProperties?: outputs.scheduler.v20140801preview.ServiceBusBrokeredMessagePropertiesResponse;
    /**
     * Gets or sets the custom message properties.
     */
    customMessageProperties?: {[key: string]: string};
    /**
     * Gets or sets the message.
     */
    message?: string;
    /**
     * Gets or sets the namespace.
     */
    namespace?: string;
    /**
     * Gets or sets the queue name.
     */
    queueName?: string;
    /**
     * Gets or sets the transport type.
     */
    transportType?: string;
}

export interface ServiceBusTopicMessageResponse {
    /**
     * Gets or sets the authentication.
     */
    authentication?: outputs.scheduler.v20140801preview.ServiceBusAuthenticationResponse;
    /**
     * Gets or sets the brokered message properties.
     */
    brokeredMessageProperties?: outputs.scheduler.v20140801preview.ServiceBusBrokeredMessagePropertiesResponse;
    /**
     * Gets or sets the custom message properties.
     */
    customMessageProperties?: {[key: string]: string};
    /**
     * Gets or sets the message.
     */
    message?: string;
    /**
     * Gets or sets the namespace.
     */
    namespace?: string;
    /**
     * Gets or sets the topic path.
     */
    topicPath?: string;
    /**
     * Gets or sets the transport type.
     */
    transportType?: string;
}

export interface SkuResponse {
    /**
     * Gets or set the SKU.
     */
    name?: string;
}

export interface StorageQueueMessageResponse {
    /**
     * Gets or sets the message.
     */
    message?: string;
    /**
     * Gets or sets the queue name.
     */
    queueName?: string;
    /**
     * Gets or sets the SAS key.
     */
    sasToken?: string;
    /**
     * Gets or sets the storage account name.
     */
    storageAccount?: string;
}

