// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Properties to configure capture description for eventhub
 */
export interface CaptureDescriptionResponse {
    /**
     * Properties of Destination where capture will be stored. (Storage Account, Blob Names)
     */
    destination?: outputs.eventhub.v20210101preview.DestinationResponse;
    /**
     * A value that indicates whether capture description is enabled. 
     */
    enabled?: boolean;
    /**
     * Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
     */
    encoding?: string;
    /**
     * The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
     */
    intervalInSeconds?: number;
    /**
     * The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
     */
    sizeLimitInBytes?: number;
    /**
     * A value that indicates whether to Skip Empty Archives
     */
    skipEmptyArchives?: boolean;
}

/**
 * ConnectionState information.
 */
export interface ConnectionStateResponse {
    /**
     * Description of the connection state.
     */
    description?: string;
    /**
     * Status of the connection.
     */
    status?: string;
}

/**
 * Capture storage details for capture description
 */
export interface DestinationResponse {
    /**
     * Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
     */
    archiveNameFormat?: string;
    /**
     * Blob container Name
     */
    blobContainer?: string;
    /**
     * Name for capture destination
     */
    name?: string;
    /**
     * Resource id of the storage account to be used to create the blobs
     */
    storageAccountResourceId?: string;
}

/**
 * Properties to configure Encryption
 */
export interface EncryptionResponse {
    /**
     * Enumerates the possible value of keySource for Encryption
     */
    keySource?: string;
    /**
     * Properties of KeyVault
     */
    keyVaultProperties?: outputs.eventhub.v20210101preview.KeyVaultPropertiesResponse[];
    /**
     * Enable Infrastructure Encryption (Double Encryption)
     */
    requireInfrastructureEncryption?: boolean;
}
/**
 * encryptionResponseProvideDefaults sets the appropriate defaults for EncryptionResponse
 */
export function encryptionResponseProvideDefaults(val: EncryptionResponse): EncryptionResponse {
    return {
        ...val,
        keySource: (val.keySource) ?? "Microsoft.KeyVault",
    };
}

/**
 * Properties to configure Identity for Bring your Own Keys
 */
export interface IdentityResponse {
    /**
     * ObjectId from the KeyVault
     */
    principalId: string;
    /**
     * TenantId from the KeyVault
     */
    tenantId: string;
    /**
     * Type of managed service identity.
     */
    type?: string;
    /**
     * Properties for User Assigned Identities
     */
    userAssignedIdentities?: {[key: string]: outputs.eventhub.v20210101preview.IdentityResponseUserAssignedIdentities};
}

export interface IdentityResponseUserAssignedIdentities {
    /**
     * Client Id of user assigned identity
     */
    clientId: string;
    /**
     * Principal Id of user assigned identity
     */
    principalId: string;
}

/**
 * Properties to configure keyVault Properties
 */
export interface KeyVaultPropertiesResponse {
    identity?: outputs.eventhub.v20210101preview.UserAssignedIdentityPropertiesResponse;
    /**
     * Name of the Key from KeyVault
     */
    keyName?: string;
    /**
     * Uri of KeyVault
     */
    keyVaultUri?: string;
    /**
     * Key Version
     */
    keyVersion?: string;
}

/**
 * The response from the List namespace operation.
 */
export interface NWRuleSetIpRulesResponse {
    /**
     * The IP Filter Action
     */
    action?: string;
    /**
     * IP Mask
     */
    ipMask?: string;
}

/**
 * The response from the List namespace operation.
 */
export interface NWRuleSetVirtualNetworkRulesResponse {
    /**
     * Value that indicates whether to ignore missing Vnet Service Endpoint
     */
    ignoreMissingVnetServiceEndpoint?: boolean;
    /**
     * Subnet properties
     */
    subnet?: outputs.eventhub.v20210101preview.SubnetResponse;
}

/**
 * Properties of the PrivateEndpointConnection.
 */
export interface PrivateEndpointConnectionResponse {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    id: string;
    /**
     * The name of the resource
     */
    name: string;
    /**
     * The Private Endpoint resource for this Connection.
     */
    privateEndpoint?: outputs.eventhub.v20210101preview.PrivateEndpointResponse;
    /**
     * Details about the state of the connection.
     */
    privateLinkServiceConnectionState?: outputs.eventhub.v20210101preview.ConnectionStateResponse;
    /**
     * Provisioning state of the Private Endpoint Connection.
     */
    provisioningState?: string;
    /**
     * The system meta data relating to this resource.
     */
    systemData: outputs.eventhub.v20210101preview.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    type: string;
}

/**
 * PrivateEndpoint information.
 */
export interface PrivateEndpointResponse {
    /**
     * The ARM identifier for Private Endpoint.
     */
    id?: string;
}

/**
 * SKU parameters supplied to the create namespace operation
 */
export interface SkuResponse {
    /**
     * The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.
     */
    capacity?: number;
    /**
     * Name of this SKU.
     */
    name: string;
    /**
     * The billing tier of this particular SKU.
     */
    tier?: string;
}

/**
 * Properties supplied for Subnet
 */
export interface SubnetResponse {
    /**
     * Resource ID of Virtual Network Subnet
     */
    id?: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC).
     */
    createdAt?: string;
    /**
     * The identity that created the resource.
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource.
     */
    createdByType?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedAt?: string;
    /**
     * The identity that last modified the resource.
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedByType?: string;
}

export interface UserAssignedIdentityPropertiesResponse {
    /**
     * ARM ID of user Identity selected for encryption
     */
    userAssignedIdentity?: string;
}

