// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Properties to configure capture description for eventhub
 */
export interface CaptureDescriptionArgs {
    /**
     * Properties of Destination where capture will be stored. (Storage Account, Blob Names)
     */
    destination?: pulumi.Input<inputs.eventhub.v20210101preview.DestinationArgs>;
    /**
     * A value that indicates whether capture description is enabled. 
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
     */
    encoding?: pulumi.Input<enums.eventhub.v20210101preview.EncodingCaptureDescription>;
    /**
     * The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
     */
    intervalInSeconds?: pulumi.Input<number>;
    /**
     * The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
     */
    sizeLimitInBytes?: pulumi.Input<number>;
    /**
     * A value that indicates whether to Skip Empty Archives
     */
    skipEmptyArchives?: pulumi.Input<boolean>;
}

/**
 * ConnectionState information.
 */
export interface ConnectionStateArgs {
    /**
     * Description of the connection state.
     */
    description?: pulumi.Input<string>;
    /**
     * Status of the connection.
     */
    status?: pulumi.Input<string | enums.eventhub.v20210101preview.PrivateLinkConnectionStatus>;
}

/**
 * Capture storage details for capture description
 */
export interface DestinationArgs {
    /**
     * Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
     */
    archiveNameFormat?: pulumi.Input<string>;
    /**
     * Blob container Name
     */
    blobContainer?: pulumi.Input<string>;
    /**
     * Name for capture destination
     */
    name?: pulumi.Input<string>;
    /**
     * Resource id of the storage account to be used to create the blobs
     */
    storageAccountResourceId?: pulumi.Input<string>;
}

/**
 * Properties to configure Encryption
 */
export interface EncryptionArgs {
    /**
     * Enumerates the possible value of keySource for Encryption
     */
    keySource?: pulumi.Input<enums.eventhub.v20210101preview.KeySource>;
    /**
     * Properties of KeyVault
     */
    keyVaultProperties?: pulumi.Input<pulumi.Input<inputs.eventhub.v20210101preview.KeyVaultPropertiesArgs>[]>;
    /**
     * Enable Infrastructure Encryption (Double Encryption)
     */
    requireInfrastructureEncryption?: pulumi.Input<boolean>;
}
/**
 * encryptionArgsProvideDefaults sets the appropriate defaults for EncryptionArgs
 */
export function encryptionArgsProvideDefaults(val: EncryptionArgs): EncryptionArgs {
    return {
        ...val,
        keySource: (val.keySource) ?? "Microsoft.KeyVault",
    };
}

/**
 * Properties to configure Identity for Bring your Own Keys
 */
export interface IdentityArgs {
    /**
     * Type of managed service identity.
     */
    type?: pulumi.Input<enums.eventhub.v20210101preview.ManagedServiceIdentityType>;
    /**
     * Properties for User Assigned Identities
     */
    userAssignedIdentities?: pulumi.Input<{[key: string]: any}>;
}

/**
 * Properties to configure keyVault Properties
 */
export interface KeyVaultPropertiesArgs {
    identity?: pulumi.Input<inputs.eventhub.v20210101preview.UserAssignedIdentityPropertiesArgs>;
    /**
     * Name of the Key from KeyVault
     */
    keyName?: pulumi.Input<string>;
    /**
     * Uri of KeyVault
     */
    keyVaultUri?: pulumi.Input<string>;
    /**
     * Key Version
     */
    keyVersion?: pulumi.Input<string>;
}

/**
 * The response from the List namespace operation.
 */
export interface NWRuleSetIpRulesArgs {
    /**
     * The IP Filter Action
     */
    action?: pulumi.Input<string | enums.eventhub.v20210101preview.NetworkRuleIPAction>;
    /**
     * IP Mask
     */
    ipMask?: pulumi.Input<string>;
}

/**
 * The response from the List namespace operation.
 */
export interface NWRuleSetVirtualNetworkRulesArgs {
    /**
     * Value that indicates whether to ignore missing Vnet Service Endpoint
     */
    ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
    /**
     * Subnet properties
     */
    subnet?: pulumi.Input<inputs.eventhub.v20210101preview.SubnetArgs>;
}

/**
 * PrivateEndpoint information.
 */
export interface PrivateEndpointArgs {
    /**
     * The ARM identifier for Private Endpoint.
     */
    id?: pulumi.Input<string>;
}

/**
 * Properties of the PrivateEndpointConnection.
 */
export interface PrivateEndpointConnectionArgs {
    /**
     * The Private Endpoint resource for this Connection.
     */
    privateEndpoint?: pulumi.Input<inputs.eventhub.v20210101preview.PrivateEndpointArgs>;
    /**
     * Details about the state of the connection.
     */
    privateLinkServiceConnectionState?: pulumi.Input<inputs.eventhub.v20210101preview.ConnectionStateArgs>;
    /**
     * Provisioning state of the Private Endpoint Connection.
     */
    provisioningState?: pulumi.Input<string | enums.eventhub.v20210101preview.EndPointProvisioningState>;
}

/**
 * SKU parameters supplied to the create namespace operation
 */
export interface SkuArgs {
    /**
     * The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.
     */
    capacity?: pulumi.Input<number>;
    /**
     * Name of this SKU.
     */
    name: pulumi.Input<string | enums.eventhub.v20210101preview.SkuName>;
    /**
     * The billing tier of this particular SKU.
     */
    tier?: pulumi.Input<string | enums.eventhub.v20210101preview.SkuTier>;
}

/**
 * Properties supplied for Subnet
 */
export interface SubnetArgs {
    /**
     * Resource ID of Virtual Network Subnet
     */
    id?: pulumi.Input<string>;
}

export interface UserAssignedIdentityPropertiesArgs {
    /**
     * ARM ID of user Identity selected for encryption
     */
    userAssignedIdentity?: pulumi.Input<string>;
}

