// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20191101preview from "./v20191101preview/output";
export * as v20200701preview from "./v20200701preview/output";
export * as v20201001preview from "./v20201001preview/output";
export * as v20210301 from "./v20210301/output";
export * as v20210501preview from "./v20210501preview/output";
export * as v20210901 from "./v20210901/output";
export * as v20211101preview from "./v20211101preview/output";
export * as v20220101preview from "./v20220101preview/output";
export * as v20220301 from "./v20220301/output";
export * as v20220402preview from "./v20220402preview/output";
export * as v20220701 from "./v20220701/output";
export * as v20221101 from "./v20221101/output";
/**
 * Compliance Status details
 */
export interface ComplianceStatusResponse {
    /**
     * The compliance state of the configuration.
     */
    complianceState: string;
    /**
     * Datetime the configuration was last applied.
     */
    lastConfigApplied?: string;
    /**
     * Message from when the configuration was applied.
     */
    message?: string;
    /**
     * Level of the message.
     */
    messageLevel?: string;
}

/**
 * Identity for the managed cluster.
 */
export interface ConfigurationIdentityResponse {
    /**
     * The principal id of the system assigned identity which is used by the configuration.
     */
    principalId: string;
    /**
     * The tenant id of the system assigned identity which is used by the configuration.
     */
    tenantId: string;
    /**
     * The type of identity used for the configuration. Type 'SystemAssigned' will use an implicitly created identity. Type 'None' will not use Managed Identity for the configuration.
     */
    type?: string;
}

/**
 * Specify which kustomizations must succeed reconciliation on the cluster prior to reconciling this kustomization
 */
export interface DependsOnDefinitionResponse {
    /**
     * Name of the kustomization to claim dependency on
     */
    kustomizationName?: string;
}

/**
 * Error definition.
 */
export interface ErrorDefinitionResponse {
    /**
     * Service specific error code which serves as the substatus for the HTTP error code.
     */
    code: string;
    /**
     * Description of the error.
     */
    message: string;
}

/**
 * Status from this instance of the extension.
 */
export interface ExtensionStatusResponse {
    /**
     * Status code provided by the Extension
     */
    code?: string;
    /**
     * Short description of status of this instance of the extension.
     */
    displayStatus?: string;
    /**
     * Level of the status.
     */
    level?: string;
    /**
     * Detailed message of the status from the Extension instance.
     */
    message?: string;
    /**
     * DateLiteral (per ISO8601) noting the time of installation status.
     */
    time?: string;
}
/**
 * extensionStatusResponseProvideDefaults sets the appropriate defaults for ExtensionStatusResponse
 */
export function extensionStatusResponseProvideDefaults(val: ExtensionStatusResponse): ExtensionStatusResponse {
    return {
        ...val,
        level: (val.level) ?? "Information",
    };
}

/**
 * Parameters to reconcile to the GitRepository source kind type.
 */
export interface GitRepositoryDefinitionResponse {
    /**
     * Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
     */
    httpsCAFile?: string;
    /**
     * Base64-encoded HTTPS username used to access private git repositories over HTTPS
     */
    httpsUser?: string;
    /**
     * Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
     */
    localAuthRef?: string;
    /**
     * The source reference for the GitRepository object.
     */
    repositoryRef?: outputs.kubernetesconfiguration.RepositoryRefDefinitionResponse;
    /**
     * Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
     */
    sshKnownHosts?: string;
    /**
     * The interval at which to re-reconcile the cluster git repository source with the remote.
     */
    syncIntervalInSeconds?: number;
    /**
     * The maximum time to attempt to reconcile the cluster git repository source with the remote.
     */
    timeoutInSeconds?: number;
    /**
     * The URL to sync for the flux configuration git repository.
     */
    url?: string;
}
/**
 * gitRepositoryDefinitionResponseProvideDefaults sets the appropriate defaults for GitRepositoryDefinitionResponse
 */
export function gitRepositoryDefinitionResponseProvideDefaults(val: GitRepositoryDefinitionResponse): GitRepositoryDefinitionResponse {
    return {
        ...val,
        syncIntervalInSeconds: (val.syncIntervalInSeconds) ?? 600,
        timeoutInSeconds: (val.timeoutInSeconds) ?? 600,
    };
}

/**
 * Properties for Helm operator.
 */
export interface HelmOperatorPropertiesResponse {
    /**
     * Values override for the operator Helm chart.
     */
    chartValues?: string;
    /**
     * Version of the operator Helm chart.
     */
    chartVersion?: string;
}

export interface HelmReleasePropertiesDefinitionResponse {
    /**
     * Total number of times that the HelmRelease failed to install or upgrade
     */
    failureCount?: number;
    /**
     * The reference to the HelmChart object used as the source to this HelmRelease
     */
    helmChartRef?: outputs.kubernetesconfiguration.ObjectReferenceDefinitionResponse;
    /**
     * Number of times that the HelmRelease failed to install
     */
    installFailureCount?: number;
    /**
     * The revision number of the last released object change
     */
    lastRevisionApplied?: number;
    /**
     * Number of times that the HelmRelease failed to upgrade
     */
    upgradeFailureCount?: number;
}

/**
 * Properties that define a Azure Arc PrivateLinkScope resource.
 */
export interface KubernetesConfigurationPrivateLinkScopePropertiesResponse {
    /**
     * Managed Cluster ARM ID for the private link scope  (Required)
     */
    clusterResourceId: string;
    /**
     * The collection of associated Private Endpoint Connections.
     */
    privateEndpointConnections: outputs.kubernetesconfiguration.PrivateEndpointConnectionResponse[];
    /**
     * The Guid id of the private link scope.
     */
    privateLinkScopeId: string;
    /**
     * Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.
     */
    provisioningState: string;
    /**
     * Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.
     */
    publicNetworkAccess?: string;
}

/**
 * The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.
 */
export interface KustomizationDefinitionResponse {
    /**
     * Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.
     */
    dependsOn?: outputs.kubernetesconfiguration.DependsOnDefinitionResponse[];
    /**
     * Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.
     */
    force?: boolean;
    /**
     * The path in the source reference to reconcile on the cluster.
     */
    path?: string;
    /**
     * Enable/disable garbage collections of Kubernetes objects created by this Kustomization.
     */
    prune?: boolean;
    /**
     * The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.
     */
    retryIntervalInSeconds?: number;
    /**
     * The interval at which to re-reconcile the Kustomization on the cluster.
     */
    syncIntervalInSeconds?: number;
    /**
     * The maximum time to attempt to reconcile the Kustomization on the cluster.
     */
    timeoutInSeconds?: number;
    /**
     * Specify whether to validate the Kubernetes objects referenced in the Kustomization before applying them to the cluster.
     */
    validation?: string;
}
/**
 * kustomizationDefinitionResponseProvideDefaults sets the appropriate defaults for KustomizationDefinitionResponse
 */
export function kustomizationDefinitionResponseProvideDefaults(val: KustomizationDefinitionResponse): KustomizationDefinitionResponse {
    return {
        ...val,
        force: (val.force) ?? false,
        path: (val.path) ?? "",
        prune: (val.prune) ?? false,
        syncIntervalInSeconds: (val.syncIntervalInSeconds) ?? 600,
        timeoutInSeconds: (val.timeoutInSeconds) ?? 600,
    };
}

/**
 * Object reference to a Kubernetes object on a cluster
 */
export interface ObjectReferenceDefinitionResponse {
    /**
     * Name of the object
     */
    name?: string;
    /**
     * Namespace of the object
     */
    namespace?: string;
}

/**
 * Status condition of Kubernetes object
 */
export interface ObjectStatusConditionDefinitionResponse {
    /**
     * Last time this status condition has changed
     */
    lastTransitionTime?: string;
    /**
     * A more verbose description of the object status condition
     */
    message?: string;
    /**
     * Reason for the specified status condition type status
     */
    reason?: string;
    /**
     * Status of the Kubernetes object condition type
     */
    status?: string;
    /**
     * Object status condition type for this object
     */
    type?: string;
}

/**
 * Statuses of objects deployed by the user-specified kustomizations from the git repository.
 */
export interface ObjectStatusDefinitionResponse {
    /**
     * Object reference to the Kustomization that applied this object
     */
    appliedBy?: outputs.kubernetesconfiguration.ObjectReferenceDefinitionResponse;
    /**
     * Compliance state of the applied object showing whether the applied object has come into a ready state on the cluster.
     */
    complianceState?: string;
    /**
     * Additional properties that are provided from objects of the HelmRelease kind
     */
    helmReleaseProperties?: outputs.kubernetesconfiguration.HelmReleasePropertiesDefinitionResponse;
    /**
     * Kind of the applied object
     */
    kind?: string;
    /**
     * Name of the applied object
     */
    name?: string;
    /**
     * Namespace of the applied object
     */
    namespace?: string;
    /**
     * List of Kubernetes object status conditions present on the cluster
     */
    statusConditions?: outputs.kubernetesconfiguration.ObjectStatusConditionDefinitionResponse[];
}

/**
 * The Private Endpoint Connection resource.
 */
export interface PrivateEndpointConnectionResponse {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    id: string;
    /**
     * The name of the resource
     */
    name: string;
    /**
     * The resource of private end point.
     */
    privateEndpoint?: outputs.kubernetesconfiguration.PrivateEndpointResponse;
    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    privateLinkServiceConnectionState: outputs.kubernetesconfiguration.PrivateLinkServiceConnectionStateResponse;
    /**
     * The provisioning state of the private endpoint connection resource.
     */
    provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    systemData: outputs.kubernetesconfiguration.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    type: string;
}

/**
 * The Private Endpoint resource.
 */
export interface PrivateEndpointResponse {
    /**
     * The ARM identifier for Private Endpoint
     */
    id: string;
}

/**
 * A collection of information about the state of the connection between service consumer and provider.
 */
export interface PrivateLinkServiceConnectionStateResponse {
    /**
     * A message indicating if changes on the service provider require any updates on the consumer.
     */
    actionsRequired?: string;
    /**
     * The reason for approval/rejection of the connection.
     */
    description?: string;
    /**
     * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
     */
    status?: string;
}

/**
 * The source reference for the GitRepository object.
 */
export interface RepositoryRefDefinitionResponse {
    /**
     * The git repository branch name to checkout.
     */
    branch?: string;
    /**
     * The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
     */
    commit?: string;
    /**
     * The semver range used to match against git repository tags. This takes precedence over tag.
     */
    semver?: string;
    /**
     * The git repository tag name to checkout. This takes precedence over branch.
     */
    tag?: string;
}

/**
 * Specifies that the scope of the extensionInstance is Cluster
 */
export interface ScopeClusterResponse {
    /**
     * Namespace where the extension Release must be placed, for a Cluster scoped extensionInstance.  If this namespace does not exist, it will be created
     */
    releaseNamespace?: string;
}

/**
 * Specifies that the scope of the extensionInstance is Namespace
 */
export interface ScopeNamespaceResponse {
    /**
     * Namespace where the extensionInstance will be created for an Namespace scoped extensionInstance.  If this namespace does not exist, it will be created
     */
    targetNamespace?: string;
}

/**
 * Scope of the extensionInstance. It can be either Cluster or Namespace; but not both.
 */
export interface ScopeResponse {
    /**
     * Specifies that the scope of the extensionInstance is Cluster
     */
    cluster?: outputs.kubernetesconfiguration.ScopeClusterResponse;
    /**
     * Specifies that the scope of the extensionInstance is Namespace
     */
    namespace?: outputs.kubernetesconfiguration.ScopeNamespaceResponse;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC).
     */
    createdAt?: string;
    /**
     * The identity that created the resource.
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource.
     */
    createdByType?: string;
    /**
     * The timestamp of resource last modification (UTC)
     */
    lastModifiedAt?: string;
    /**
     * The identity that last modified the resource.
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedByType?: string;
}

