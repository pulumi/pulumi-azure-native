// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The debug setting.
 */
export interface DebugSettingArgs {
    /**
     * Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
     */
    detailLevel?: pulumi.Input<string>;
}

/**
 * Deployment properties.
 */
export interface DeploymentPropertiesArgs {
    /**
     * The debug setting of the deployment.
     */
    debugSetting?: pulumi.Input<inputs.resources.v20190801.DebugSettingArgs>;
    /**
     * The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.
     */
    mode: pulumi.Input<enums.resources.v20190801.DeploymentMode>;
    /**
     * The deployment on error behavior.
     */
    onErrorDeployment?: pulumi.Input<inputs.resources.v20190801.OnErrorDeploymentArgs>;
    /**
     * Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
     */
    parameters?: any;
    /**
     * The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
     */
    parametersLink?: pulumi.Input<inputs.resources.v20190801.ParametersLinkArgs>;
    /**
     * The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.
     */
    template?: any;
    /**
     * The URI of the template. Use either the templateLink property or the template property, but not both.
     */
    templateLink?: pulumi.Input<inputs.resources.v20190801.TemplateLinkArgs>;
}

/**
 * Identity for the resource.
 */
export interface IdentityArgs {
    /**
     * The identity type.
     */
    type?: pulumi.Input<enums.resources.v20190801.ResourceIdentityType>;
    /**
     * The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    userAssignedIdentities?: pulumi.Input<{[key: string]: any}>;
}

/**
 * Deployment on error behavior.
 */
export interface OnErrorDeploymentArgs {
    /**
     * The deployment to be used on error case.
     */
    deploymentName?: pulumi.Input<string>;
    /**
     * The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
     */
    type?: pulumi.Input<enums.resources.v20190801.OnErrorDeploymentType>;
}

/**
 * Entity representing the reference to the deployment parameters.
 */
export interface ParametersLinkArgs {
    /**
     * If included, must match the ContentVersion in the template.
     */
    contentVersion?: pulumi.Input<string>;
    /**
     * The URI of the parameters file.
     */
    uri: pulumi.Input<string>;
}

/**
 * Plan for the resource.
 */
export interface PlanArgs {
    /**
     * The plan ID.
     */
    name?: pulumi.Input<string>;
    /**
     * The offer ID.
     */
    product?: pulumi.Input<string>;
    /**
     * The promotion code.
     */
    promotionCode?: pulumi.Input<string>;
    /**
     * The publisher ID.
     */
    publisher?: pulumi.Input<string>;
    /**
     * The plan's version.
     */
    version?: pulumi.Input<string>;
}

/**
 * SKU for the resource.
 */
export interface SkuArgs {
    /**
     * The SKU capacity.
     */
    capacity?: pulumi.Input<number>;
    /**
     * The SKU family.
     */
    family?: pulumi.Input<string>;
    /**
     * The SKU model.
     */
    model?: pulumi.Input<string>;
    /**
     * The SKU name.
     */
    name?: pulumi.Input<string>;
    /**
     * The SKU size.
     */
    size?: pulumi.Input<string>;
    /**
     * The SKU tier.
     */
    tier?: pulumi.Input<string>;
}

/**
 * Entity representing the reference to the template.
 */
export interface TemplateLinkArgs {
    /**
     * If included, must match the ContentVersion in the template.
     */
    contentVersion?: pulumi.Input<string>;
    /**
     * The URI of the template to deploy.
     */
    uri: pulumi.Input<string>;
}

