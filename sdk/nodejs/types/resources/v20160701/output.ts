// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The type of the paths for alias. 
 */
export interface AliasPathTypeResponse {
    /**
     * The api versions.
     */
    apiVersions?: string[];
    /**
     * The path of an alias.
     */
    path?: string;
}

/**
 * The alias type. 
 */
export interface AliasTypeResponse {
    /**
     * The alias name.
     */
    name?: string;
    /**
     * The paths for an alias.
     */
    paths?: outputs.resources.v20160701.AliasPathTypeResponse[];
}

/**
 * Deployment dependency information.
 */
export interface BasicDependencyResponse {
    /**
     * The ID of the dependency.
     */
    id?: string;
    /**
     * The dependency resource name.
     */
    resourceName?: string;
    /**
     * The dependency resource type.
     */
    resourceType?: string;
}

/**
 * Deployment dependency information.
 */
export interface DependencyResponse {
    /**
     * The list of dependencies.
     */
    dependsOn?: outputs.resources.v20160701.BasicDependencyResponse[];
    /**
     * The ID of the dependency.
     */
    id?: string;
    /**
     * The dependency resource name.
     */
    resourceName?: string;
    /**
     * The dependency resource type.
     */
    resourceType?: string;
}

/**
 * Deployment properties with additional details.
 */
export interface DeploymentPropertiesExtendedResponse {
    /**
     * The correlation ID of the deployment.
     */
    correlationId?: string;
    /**
     * The list of deployment dependencies.
     */
    dependencies?: outputs.resources.v20160701.DependencyResponse[];
    /**
     * The deployment error.
     */
    error: outputs.resources.v20160701.ErrorResponseResponse;
    /**
     * The deployment mode.
     */
    mode?: string;
    /**
     * Key/value pairs that represent deployment output.
     */
    outputs?: any;
    /**
     * Deployment parameters. Use only one of Parameters or ParametersLink.
     */
    parameters?: any;
    /**
     * The URI referencing the parameters. Use only one of Parameters or ParametersLink.
     */
    parametersLink?: outputs.resources.v20160701.ParametersLinkResponse;
    /**
     * The list of resource providers needed for the deployment.
     */
    providers?: outputs.resources.v20160701.ProviderResponse[];
    /**
     * The state of the provisioning.
     */
    provisioningState?: string;
    /**
     * The template content. Use only one of Template or TemplateLink.
     */
    template?: any;
    /**
     * The URI referencing the template. Use only one of Template or TemplateLink.
     */
    templateLink?: outputs.resources.v20160701.TemplateLinkResponse;
    /**
     * The timestamp of the template deployment.
     */
    timestamp?: string;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfoResponse {
    /**
     * The additional info.
     */
    info: any;
    /**
     * The additional info type.
     */
    type: string;
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
 */
export interface ErrorResponseResponse {
    /**
     * The error additional info.
     */
    additionalInfo: outputs.resources.v20160701.ErrorAdditionalInfoResponse[];
    /**
     * The error code.
     */
    code: string;
    /**
     * The error details.
     */
    details: outputs.resources.v20160701.ErrorResponseResponse[];
    /**
     * The error message.
     */
    message: string;
    /**
     * The error target.
     */
    target: string;
}

/**
 * Identity for the resource.
 */
export interface IdentityResponse {
    /**
     * The principal id of resource identity.
     */
    principalId: string;
    /**
     * The tenant id of resource.
     */
    tenantId: string;
    /**
     * The identity type.
     */
    type?: string;
}

/**
 * Entity representing the reference to the deployment parameters.
 */
export interface ParametersLinkResponse {
    /**
     * If included it must match the ContentVersion in the template.
     */
    contentVersion?: string;
    /**
     * URI referencing the template.
     */
    uri: string;
}

/**
 * Plan for the resource.
 */
export interface PlanResponse {
    /**
     * The plan ID.
     */
    name?: string;
    /**
     * The offer ID.
     */
    product?: string;
    /**
     * The promotion code.
     */
    promotionCode?: string;
    /**
     * The publisher ID.
     */
    publisher?: string;
}

/**
 * Resource type managed by the resource provider.
 */
export interface ProviderResourceTypeResponse {
    /**
     * The aliases that are supported by this resource type.
     */
    aliases?: outputs.resources.v20160701.AliasTypeResponse[];
    /**
     * The api version.
     */
    apiVersions?: string[];
    /**
     * The collection of locations where this resource type can be created in.
     */
    locations?: string[];
    /**
     * The properties.
     */
    properties?: {[key: string]: string};
    /**
     * The resource type.
     */
    resourceType?: string;
    zoneMappings?: outputs.resources.v20160701.ZoneMappingResponse[];
}

/**
 * Resource provider information.
 */
export interface ProviderResponse {
    /**
     * The provider id.
     */
    id?: string;
    /**
     * The namespace of the provider.
     */
    namespace?: string;
    /**
     * The registration state of the provider.
     */
    registrationState?: string;
    /**
     * The collection of provider resource types.
     */
    resourceTypes?: outputs.resources.v20160701.ProviderResourceTypeResponse[];
}

/**
 * The resource group properties.
 */
export interface ResourceGroupPropertiesResponse {
    /**
     * The provisioning state. 
     */
    provisioningState: string;
}

/**
 * Sku for the resource.
 */
export interface SkuResponse {
    /**
     * The sku capacity.
     */
    capacity?: number;
    /**
     * The sku family.
     */
    family?: string;
    /**
     * The sku model.
     */
    model?: string;
    /**
     * The sku name.
     */
    name?: string;
    /**
     * The sku size.
     */
    size?: string;
    /**
     * The sku tier.
     */
    tier?: string;
}

/**
 * Entity representing the reference to the template.
 */
export interface TemplateLinkResponse {
    /**
     * If included it must match the ContentVersion in the template.
     */
    contentVersion?: string;
    /**
     * URI referencing the template.
     */
    uri: string;
}

export interface ZoneMappingResponse {
    /**
     * The location of the zone mapping.
     */
    location?: string;
    zones?: string[];
}

