// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The start and end date for a budget.
 */
export interface BudgetTimePeriodResponse {
    /**
     * The end date for the budget. If not provided, we default this to 10 years from the start date.
     */
    endDate?: string;
    /**
     * The start date for the budget.
     */
    startDate: string;
}

/**
 * The current amount of cost which is being tracked for a budget.
 */
export interface CurrentSpendResponse {
    /**
     * The total amount of cost which is being tracked by the budget.
     */
    amount: number;
    /**
     * The unit of measure for the budget amount.
     */
    unit: string;
}

/**
 * May be used to filter budgets by resource group, resource, or meter.
 */
export interface FiltersResponse {
    /**
     * The list of filters on meters (GUID), mandatory for budgets of usage category. 
     */
    meters?: string[];
    /**
     * The list of filters on resource groups, allowed at subscription level only.
     */
    resourceGroups?: string[];
    /**
     * The list of filters on resources.
     */
    resources?: string[];
    /**
     * The dictionary of filters on tags.
     */
    tags?: {[key: string]: string[]};
}

/**
 * The notification associated with a budget.
 */
export interface NotificationResponse {
    /**
     * Email addresses to send the budget notification to when the threshold is exceeded.
     */
    contactEmails: string[];
    /**
     * Action groups to send the budget notification to when the threshold is exceeded.
     */
    contactGroups?: string[];
    /**
     * Contact roles to send the budget notification to when the threshold is exceeded.
     */
    contactRoles?: string[];
    /**
     * The notification is enabled or not.
     */
    enabled: boolean;
    /**
     * The comparison operator.
     */
    operator: string;
    /**
     * Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
     */
    threshold: number;
}

