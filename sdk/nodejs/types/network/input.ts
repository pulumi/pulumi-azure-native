// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20150501preview from "./v20150501preview/input";
export * as v20150504preview from "./v20150504preview/input";
export * as v20150615 from "./v20150615/input";
export * as v20151101 from "./v20151101/input";
export * as v20160330 from "./v20160330/input";
export * as v20160401 from "./v20160401/input";
export * as v20160601 from "./v20160601/input";
export * as v20160901 from "./v20160901/input";
export * as v20161201 from "./v20161201/input";
export * as v20170301 from "./v20170301/input";
export * as v20170501 from "./v20170501/input";
export * as v20170601 from "./v20170601/input";
export * as v20170801 from "./v20170801/input";
export * as v20170901 from "./v20170901/input";
export * as v20171001 from "./v20171001/input";
export * as v20171101 from "./v20171101/input";
export * as v20180101 from "./v20180101/input";
export * as v20180201 from "./v20180201/input";
export * as v20180301 from "./v20180301/input";
export * as v20180301preview from "./v20180301preview/input";
export * as v20180401 from "./v20180401/input";
export * as v20180501 from "./v20180501/input";
export * as v20180601 from "./v20180601/input";
export * as v20180701 from "./v20180701/input";
export * as v20180801 from "./v20180801/input";
export * as v20180901 from "./v20180901/input";
export * as v20181001 from "./v20181001/input";
export * as v20181101 from "./v20181101/input";
export * as v20181201 from "./v20181201/input";
export * as v20190201 from "./v20190201/input";
export * as v20190301 from "./v20190301/input";
export * as v20190401 from "./v20190401/input";
export * as v20190501 from "./v20190501/input";
export * as v20190601 from "./v20190601/input";
export * as v20190701 from "./v20190701/input";
export * as v20190801 from "./v20190801/input";
export * as v20190901 from "./v20190901/input";
export * as v20191001 from "./v20191001/input";
export * as v20191101 from "./v20191101/input";
export * as v20191201 from "./v20191201/input";
export * as v20200101 from "./v20200101/input";
export * as v20200301 from "./v20200301/input";
export * as v20200401 from "./v20200401/input";
export * as v20200401preview from "./v20200401preview/input";
export * as v20200501 from "./v20200501/input";
export * as v20200601 from "./v20200601/input";
export * as v20200701 from "./v20200701/input";
export * as v20200801 from "./v20200801/input";
export * as v20201101 from "./v20201101/input";
export * as v20210201 from "./v20210201/input";
export * as v20210201preview from "./v20210201preview/input";
export * as v20210301 from "./v20210301/input";
export * as v20210501 from "./v20210501/input";
export * as v20210501preview from "./v20210501preview/input";
export * as v20210601 from "./v20210601/input";
export * as v20210801 from "./v20210801/input";
export * as v20220101 from "./v20220101/input";
export * as v20220201preview from "./v20220201preview/input";
export * as v20220401preview from "./v20220401preview/input";
export * as v20220501 from "./v20220501/input";
export * as v20220701 from "./v20220701/input";
/**
 * An A record.
 */
export interface ARecordArgs {
    /**
     * The IPv4 address of this A record.
     */
    ipv4Address?: pulumi.Input<string>;
}

/**
 * An AAAA record.
 */
export interface AaaaRecordArgs {
    /**
     * The IPv6 address of this AAAA record.
     */
    ipv6Address?: pulumi.Input<string>;
}

/**
 * AAD Vpn authentication type related parameters.
 */
export interface AadAuthenticationParametersArgs {
    /**
     * AAD Vpn authentication parameter AAD audience.
     */
    aadAudience?: pulumi.Input<string>;
    /**
     * AAD Vpn authentication parameter AAD issuer.
     */
    aadIssuer?: pulumi.Input<string>;
    /**
     * AAD Vpn authentication parameter AAD tenant.
     */
    aadTenant?: pulumi.Input<string>;
}

/**
 * AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
 */
export interface AddressSpaceArgs {
    /**
     * A list of address blocks reserved for this virtual network in CIDR notation.
     */
    addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Authentication certificates of an application gateway.
 */
export interface ApplicationGatewayAuthenticationCertificateArgs {
    /**
     * Certificate public data.
     */
    data?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the authentication certificate that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
}

/**
 * Application Gateway autoscale configuration.
 */
export interface ApplicationGatewayAutoscaleConfigurationArgs {
    /**
     * Upper bound on number of Application Gateway capacity.
     */
    maxCapacity?: pulumi.Input<number>;
    /**
     * Lower bound on number of Application Gateway capacity.
     */
    minCapacity: pulumi.Input<number>;
}

/**
 * Backend address of an application gateway.
 */
export interface ApplicationGatewayBackendAddressArgs {
    /**
     * Fully qualified domain name (FQDN).
     */
    fqdn?: pulumi.Input<string>;
    /**
     * IP address.
     */
    ipAddress?: pulumi.Input<string>;
}

/**
 * Backend Address Pool of an application gateway.
 */
export interface ApplicationGatewayBackendAddressPoolArgs {
    /**
     * Backend addresses.
     */
    backendAddresses?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendAddressArgs>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the backend address pool that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
}

/**
 * Backend address pool settings of an application gateway.
 */
export interface ApplicationGatewayBackendHttpSettingsArgs {
    /**
     * Cookie name to use for the affinity cookie.
     */
    affinityCookieName?: pulumi.Input<string>;
    /**
     * Array of references to application gateway authentication certificates.
     */
    authenticationCertificates?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * Connection draining of the backend http settings resource.
     */
    connectionDraining?: pulumi.Input<inputs.network.ApplicationGatewayConnectionDrainingArgs>;
    /**
     * Cookie based affinity.
     */
    cookieBasedAffinity?: pulumi.Input<string | enums.network.ApplicationGatewayCookieBasedAffinity>;
    /**
     * Host header to be sent to the backend servers.
     */
    hostName?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the backend http settings that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
     */
    path?: pulumi.Input<string>;
    /**
     * Whether to pick host header should be picked from the host name of the backend server. Default value is false.
     */
    pickHostNameFromBackendAddress?: pulumi.Input<boolean>;
    /**
     * The destination port on the backend.
     */
    port?: pulumi.Input<number>;
    /**
     * Probe resource of an application gateway.
     */
    probe?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Whether the probe is enabled. Default value is false.
     */
    probeEnabled?: pulumi.Input<boolean>;
    /**
     * The protocol used to communicate with the backend.
     */
    protocol?: pulumi.Input<string | enums.network.ApplicationGatewayProtocol>;
    /**
     * Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
     */
    requestTimeout?: pulumi.Input<number>;
    /**
     * Array of references to application gateway trusted root certificates.
     */
    trustedRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
}

/**
 * Application gateway client authentication configuration.
 */
export interface ApplicationGatewayClientAuthConfigurationArgs {
    /**
     * Verify client certificate issuer name on the application gateway.
     */
    verifyClientCertIssuerDN?: pulumi.Input<boolean>;
}

/**
 * Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
 */
export interface ApplicationGatewayConnectionDrainingArgs {
    /**
     * The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
     */
    drainTimeoutInSec: pulumi.Input<number>;
    /**
     * Whether connection draining is enabled or not.
     */
    enabled: pulumi.Input<boolean>;
}

/**
 * Customer error of an application gateway.
 */
export interface ApplicationGatewayCustomErrorArgs {
    /**
     * Error page URL of the application gateway customer error.
     */
    customErrorPageUrl?: pulumi.Input<string>;
    /**
     * Status code of the application gateway customer error.
     */
    statusCode?: pulumi.Input<string | enums.network.ApplicationGatewayCustomErrorStatusCode>;
}

/**
 * Allows to disable rules within a rule group or an entire rule group.
 */
export interface ApplicationGatewayFirewallDisabledRuleGroupArgs {
    /**
     * The name of the rule group that will be disabled.
     */
    ruleGroupName: pulumi.Input<string>;
    /**
     * The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
     */
    rules?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * Allow to exclude some variable satisfy the condition for the WAF check.
 */
export interface ApplicationGatewayFirewallExclusionArgs {
    /**
     * The variable to be excluded.
     */
    matchVariable: pulumi.Input<string>;
    /**
     * When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
     */
    selector: pulumi.Input<string>;
    /**
     * When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
     */
    selectorMatchOperator: pulumi.Input<string>;
}

/**
 * Frontend IP configuration of an application gateway.
 */
export interface ApplicationGatewayFrontendIPConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the frontend IP configuration that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * PrivateIPAddress of the network interface IP Configuration.
     */
    privateIPAddress?: pulumi.Input<string>;
    /**
     * The private IP address allocation method.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.IPAllocationMethod>;
    /**
     * Reference to the application gateway private link configuration.
     */
    privateLinkConfiguration?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Reference to the PublicIP resource.
     */
    publicIPAddress?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Reference to the subnet resource.
     */
    subnet?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * Frontend port of an application gateway.
 */
export interface ApplicationGatewayFrontendPortArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the frontend port that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Frontend port.
     */
    port?: pulumi.Input<number>;
}

/**
 * Header configuration of the Actions set in Application Gateway.
 */
export interface ApplicationGatewayHeaderConfigurationArgs {
    /**
     * Header name of the header configuration.
     */
    headerName?: pulumi.Input<string>;
    /**
     * Header value of the header configuration.
     */
    headerValue?: pulumi.Input<string>;
}

/**
 * Http listener of an application gateway.
 */
export interface ApplicationGatewayHttpListenerArgs {
    /**
     * Custom error configurations of the HTTP listener.
     */
    customErrorConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayCustomErrorArgs>[]>;
    /**
     * Reference to the FirewallPolicy resource.
     */
    firewallPolicy?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Frontend IP configuration resource of an application gateway.
     */
    frontendIPConfiguration?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Frontend port resource of an application gateway.
     */
    frontendPort?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Host name of HTTP listener.
     */
    hostName?: pulumi.Input<string>;
    /**
     * List of Host names for HTTP Listener that allows special wildcard characters as well.
     */
    hostNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the HTTP listener that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Protocol of the HTTP listener.
     */
    protocol?: pulumi.Input<string | enums.network.ApplicationGatewayProtocol>;
    /**
     * Applicable only if protocol is https. Enables SNI for multi-hosting.
     */
    requireServerNameIndication?: pulumi.Input<boolean>;
    /**
     * SSL certificate resource of an application gateway.
     */
    sslCertificate?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * SSL profile resource of the application gateway.
     */
    sslProfile?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
 */
export interface ApplicationGatewayIPConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the IP configuration that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Reference to the subnet resource. A subnet from where application gateway gets its private address.
     */
    subnet?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * Path rule of URL path map of an application gateway.
 */
export interface ApplicationGatewayPathRuleArgs {
    /**
     * Backend address pool resource of URL path map path rule.
     */
    backendAddressPool?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Backend http settings resource of URL path map path rule.
     */
    backendHttpSettings?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Reference to the FirewallPolicy resource.
     */
    firewallPolicy?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the path rule that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Path rules of URL path map.
     */
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redirect configuration resource of URL path map path rule.
     */
    redirectConfiguration?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Rewrite rule set resource of URL path map path rule.
     */
    rewriteRuleSet?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * Private Link Configuration on an application gateway.
 */
export interface ApplicationGatewayPrivateLinkConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * An array of application gateway private link ip configurations.
     */
    ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayPrivateLinkIpConfigurationArgs>[]>;
    /**
     * Name of the private link configuration that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
}

/**
 * The application gateway private link ip configuration.
 */
export interface ApplicationGatewayPrivateLinkIpConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of application gateway private link ip configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether the ip configuration is primary or not.
     */
    primary?: pulumi.Input<boolean>;
    /**
     * The private IP address of the IP configuration.
     */
    privateIPAddress?: pulumi.Input<string>;
    /**
     * The private IP address allocation method.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.IPAllocationMethod>;
    /**
     * Reference to the subnet resource.
     */
    subnet?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * Probe of the application gateway.
 */
export interface ApplicationGatewayProbeArgs {
    /**
     * Host name to send the probe to.
     */
    host?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
     */
    interval?: pulumi.Input<number>;
    /**
     * Criterion for classifying a healthy probe response.
     */
    match?: pulumi.Input<inputs.network.ApplicationGatewayProbeHealthResponseMatchArgs>;
    /**
     * Minimum number of servers that are always marked healthy. Default value is 0.
     */
    minServers?: pulumi.Input<number>;
    /**
     * Name of the probe that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
     */
    path?: pulumi.Input<string>;
    /**
     * Whether the host header should be picked from the backend http settings. Default value is false.
     */
    pickHostNameFromBackendHttpSettings?: pulumi.Input<boolean>;
    /**
     * Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
     */
    port?: pulumi.Input<number>;
    /**
     * The protocol used for the probe.
     */
    protocol?: pulumi.Input<string | enums.network.ApplicationGatewayProtocol>;
    /**
     * The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
     */
    timeout?: pulumi.Input<number>;
    /**
     * The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

/**
 * Application gateway probe health response match.
 */
export interface ApplicationGatewayProbeHealthResponseMatch {
    /**
     * Body that must be contained in the health response. Default value is empty.
     */
    body?: string;
    /**
     * Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
     */
    statusCodes?: string[];
}

/**
 * Application gateway probe health response match.
 */
export interface ApplicationGatewayProbeHealthResponseMatchArgs {
    /**
     * Body that must be contained in the health response. Default value is empty.
     */
    body?: pulumi.Input<string>;
    /**
     * Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
     */
    statusCodes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Redirect configuration of an application gateway.
 */
export interface ApplicationGatewayRedirectConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Include path in the redirected url.
     */
    includePath?: pulumi.Input<boolean>;
    /**
     * Include query string in the redirected url.
     */
    includeQueryString?: pulumi.Input<boolean>;
    /**
     * Name of the redirect configuration that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Path rules specifying redirect configuration.
     */
    pathRules?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * HTTP redirection type.
     */
    redirectType?: pulumi.Input<string | enums.network.ApplicationGatewayRedirectType>;
    /**
     * Request routing specifying redirect configuration.
     */
    requestRoutingRules?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * Reference to a listener to redirect the request to.
     */
    targetListener?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Url to redirect the request to.
     */
    targetUrl?: pulumi.Input<string>;
    /**
     * Url path maps specifying default redirect configuration.
     */
    urlPathMaps?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
}

/**
 * Request routing rule of an application gateway.
 */
export interface ApplicationGatewayRequestRoutingRuleArgs {
    /**
     * Backend address pool resource of the application gateway.
     */
    backendAddressPool?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Backend http settings resource of the application gateway.
     */
    backendHttpSettings?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Http listener resource of the application gateway.
     */
    httpListener?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the request routing rule that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the request routing rule.
     */
    priority?: pulumi.Input<number>;
    /**
     * Redirect configuration resource of the application gateway.
     */
    redirectConfiguration?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Rewrite Rule Set resource in Basic rule of the application gateway.
     */
    rewriteRuleSet?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Rule type.
     */
    ruleType?: pulumi.Input<string | enums.network.ApplicationGatewayRequestRoutingRuleType>;
    /**
     * URL path map resource of the application gateway.
     */
    urlPathMap?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * Rewrite rule of an application gateway.
 */
export interface ApplicationGatewayRewriteRuleArgs {
    /**
     * Set of actions to be done as part of the rewrite Rule.
     */
    actionSet?: pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleActionSetArgs>;
    /**
     * Conditions based on which the action set execution will be evaluated.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleConditionArgs>[]>;
    /**
     * Name of the rewrite rule that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
     */
    ruleSequence?: pulumi.Input<number>;
}

/**
 * Set of actions in the Rewrite Rule in Application Gateway.
 */
export interface ApplicationGatewayRewriteRuleActionSetArgs {
    /**
     * Request Header Actions in the Action Set.
     */
    requestHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayHeaderConfigurationArgs>[]>;
    /**
     * Response Header Actions in the Action Set.
     */
    responseHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayHeaderConfigurationArgs>[]>;
    /**
     * Url Configuration Action in the Action Set.
     */
    urlConfiguration?: pulumi.Input<inputs.network.ApplicationGatewayUrlConfigurationArgs>;
}

/**
 * Set of conditions in the Rewrite Rule in Application Gateway.
 */
export interface ApplicationGatewayRewriteRuleConditionArgs {
    /**
     * Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
     */
    ignoreCase?: pulumi.Input<boolean>;
    /**
     * Setting this value as truth will force to check the negation of the condition given by the user.
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
     */
    pattern?: pulumi.Input<string>;
    /**
     * The condition parameter of the RewriteRuleCondition.
     */
    variable?: pulumi.Input<string>;
}

/**
 * Rewrite rule set of an application gateway.
 */
export interface ApplicationGatewayRewriteRuleSetArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the rewrite rule set that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Rewrite rules in the rewrite rule set.
     */
    rewriteRules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleArgs>[]>;
}

/**
 * SKU of an application gateway.
 */
export interface ApplicationGatewaySkuArgs {
    /**
     * Capacity (instance count) of an application gateway.
     */
    capacity?: pulumi.Input<number>;
    /**
     * Name of an application gateway SKU.
     */
    name?: pulumi.Input<string | enums.network.ApplicationGatewaySkuName>;
    /**
     * Tier of an application gateway.
     */
    tier?: pulumi.Input<string | enums.network.ApplicationGatewayTier>;
}

/**
 * SSL certificates of an application gateway.
 */
export interface ApplicationGatewaySslCertificateArgs {
    /**
     * Base-64 encoded pfx certificate. Only applicable in PUT Request.
     */
    data?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
     */
    keyVaultSecretId?: pulumi.Input<string>;
    /**
     * Name of the SSL certificate that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Password for the pfx file specified in data. Only applicable in PUT request.
     */
    password?: pulumi.Input<string>;
}

/**
 * Application Gateway Ssl policy.
 */
export interface ApplicationGatewaySslPolicyArgs {
    /**
     * Ssl cipher suites to be enabled in the specified order to application gateway.
     */
    cipherSuites?: pulumi.Input<pulumi.Input<string | enums.network.ApplicationGatewaySslCipherSuite>[]>;
    /**
     * Ssl protocols to be disabled on application gateway.
     */
    disabledSslProtocols?: pulumi.Input<pulumi.Input<string | enums.network.ApplicationGatewaySslProtocol>[]>;
    /**
     * Minimum version of Ssl protocol to be supported on application gateway.
     */
    minProtocolVersion?: pulumi.Input<string | enums.network.ApplicationGatewaySslProtocol>;
    /**
     * Name of Ssl predefined policy.
     */
    policyName?: pulumi.Input<string | enums.network.ApplicationGatewaySslPolicyName>;
    /**
     * Type of Ssl Policy.
     */
    policyType?: pulumi.Input<string | enums.network.ApplicationGatewaySslPolicyType>;
}

/**
 * SSL profile of an application gateway.
 */
export interface ApplicationGatewaySslProfileArgs {
    /**
     * Client authentication configuration of the application gateway resource.
     */
    clientAuthConfiguration?: pulumi.Input<inputs.network.ApplicationGatewayClientAuthConfigurationArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the SSL profile that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * SSL policy of the application gateway resource.
     */
    sslPolicy?: pulumi.Input<inputs.network.ApplicationGatewaySslPolicyArgs>;
    /**
     * Array of references to application gateway trusted client certificates.
     */
    trustedClientCertificates?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
}

/**
 * Trusted client certificates of an application gateway.
 */
export interface ApplicationGatewayTrustedClientCertificateArgs {
    /**
     * Certificate public data.
     */
    data?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the trusted client certificate that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
}

/**
 * Trusted Root certificates of an application gateway.
 */
export interface ApplicationGatewayTrustedRootCertificateArgs {
    /**
     * Certificate public data.
     */
    data?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
     */
    keyVaultSecretId?: pulumi.Input<string>;
    /**
     * Name of the trusted root certificate that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
}

/**
 * Url configuration of the Actions set in Application Gateway.
 */
export interface ApplicationGatewayUrlConfigurationArgs {
    /**
     * Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
     */
    modifiedPath?: pulumi.Input<string>;
    /**
     * Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
     */
    modifiedQueryString?: pulumi.Input<string>;
    /**
     * If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
     */
    reroute?: pulumi.Input<boolean>;
}

/**
 * UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
 */
export interface ApplicationGatewayUrlPathMapArgs {
    /**
     * Default backend address pool resource of URL path map.
     */
    defaultBackendAddressPool?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Default backend http settings resource of URL path map.
     */
    defaultBackendHttpSettings?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Default redirect configuration resource of URL path map.
     */
    defaultRedirectConfiguration?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Default Rewrite rule set resource of URL path map.
     */
    defaultRewriteRuleSet?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the URL path map that is unique within an Application Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Path rule of URL path map resource.
     */
    pathRules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayPathRuleArgs>[]>;
}

/**
 * Application gateway web application firewall configuration.
 */
export interface ApplicationGatewayWebApplicationFirewallConfigurationArgs {
    /**
     * The disabled rule groups.
     */
    disabledRuleGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFirewallDisabledRuleGroupArgs>[]>;
    /**
     * Whether the web application firewall is enabled or not.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The exclusion list.
     */
    exclusions?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFirewallExclusionArgs>[]>;
    /**
     * Maximum file upload size in Mb for WAF.
     */
    fileUploadLimitInMb?: pulumi.Input<number>;
    /**
     * Web application firewall mode.
     */
    firewallMode: pulumi.Input<string | enums.network.ApplicationGatewayFirewallMode>;
    /**
     * Maximum request body size for WAF.
     */
    maxRequestBodySize?: pulumi.Input<number>;
    /**
     * Maximum request body size in Kb for WAF.
     */
    maxRequestBodySizeInKb?: pulumi.Input<number>;
    /**
     * Whether allow WAF to check request Body.
     */
    requestBodyCheck?: pulumi.Input<boolean>;
    /**
     * The type of the web application firewall rule set. Possible values are: 'OWASP'.
     */
    ruleSetType: pulumi.Input<string>;
    /**
     * The version of the rule set type.
     */
    ruleSetVersion: pulumi.Input<string>;
}

/**
 * Rule of type application.
 */
export interface ApplicationRuleArgs {
    /**
     * Description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses or Service Tags.
     */
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of FQDN Tags for this rule.
     */
    fqdnTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Array of Application Protocols.
     */
    protocols?: pulumi.Input<pulumi.Input<inputs.network.FirewallPolicyRuleApplicationProtocolArgs>[]>;
    /**
     * Rule Type.
     * Expected value is 'ApplicationRule'.
     */
    ruleType: pulumi.Input<"ApplicationRule">;
    /**
     * List of source IP addresses for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of FQDNs for this rule.
     */
    targetFqdns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Urls for this rule condition.
     */
    targetUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Terminate TLS connections for this rule.
     */
    terminateTLS?: pulumi.Input<boolean>;
    /**
     * List of destination azure web categories.
     */
    webCategories?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Rule condition of type application.
 */
export interface ApplicationRuleConditionArgs {
    /**
     * Description of the rule condition.
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses or Service Tags.
     */
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of FQDN Tags for this rule condition.
     */
    fqdnTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the rule condition.
     */
    name?: pulumi.Input<string>;
    /**
     * Array of Application Protocols.
     */
    protocols?: pulumi.Input<pulumi.Input<inputs.network.FirewallPolicyRuleConditionApplicationProtocolArgs>[]>;
    /**
     * Rule Condition Type.
     * Expected value is 'ApplicationRuleCondition'.
     */
    ruleConditionType: pulumi.Input<"ApplicationRuleCondition">;
    /**
     * List of source IP addresses for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of FQDNs for this rule condition.
     */
    targetFqdns?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * An application security group in a resource group.
 */
export interface ApplicationSecurityGroupArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Properties of an application rule.
 */
export interface AzureFirewallApplicationRuleArgs {
    /**
     * Description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * List of FQDN Tags for this rule.
     */
    fqdnTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the application rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Array of ApplicationRuleProtocols.
     */
    protocols?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallApplicationRuleProtocolArgs>[]>;
    /**
     * List of source IP addresses for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of FQDNs for this rule.
     */
    targetFqdns?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Application rule collection resource.
 */
export interface AzureFirewallApplicationRuleCollectionArgs {
    /**
     * The action type of a rule collection.
     */
    action?: pulumi.Input<inputs.network.AzureFirewallRCActionArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the application rule collection resource.
     */
    priority?: pulumi.Input<number>;
    /**
     * Collection of rules used by a application rule collection.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallApplicationRuleArgs>[]>;
}

/**
 * Properties of the application rule protocol.
 */
export interface AzureFirewallApplicationRuleProtocolArgs {
    /**
     * Port number for the protocol, cannot be greater than 64000. This field is optional.
     */
    port?: pulumi.Input<number>;
    /**
     * Protocol type.
     */
    protocolType?: pulumi.Input<string | enums.network.AzureFirewallApplicationRuleProtocolType>;
}

/**
 * IP configuration of an Azure Firewall.
 */
export interface AzureFirewallIPConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
     */
    publicIPAddress?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
     */
    subnet?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * AzureFirewall NAT Rule Collection Action.
 */
export interface AzureFirewallNatRCActionArgs {
    /**
     * The type of action.
     */
    type?: pulumi.Input<string | enums.network.AzureFirewallNatRCActionType>;
}

/**
 * Properties of a NAT rule.
 */
export interface AzureFirewallNatRuleArgs {
    /**
     * Description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
     */
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination ports.
     */
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the NAT rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
     */
    protocols?: pulumi.Input<pulumi.Input<string | enums.network.AzureFirewallNetworkRuleProtocol>[]>;
    /**
     * List of source IP addresses for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The translated address for this NAT rule.
     */
    translatedAddress?: pulumi.Input<string>;
    /**
     * The translated FQDN for this NAT rule.
     */
    translatedFqdn?: pulumi.Input<string>;
    /**
     * The translated port for this NAT rule.
     */
    translatedPort?: pulumi.Input<string>;
}

/**
 * NAT rule collection resource.
 */
export interface AzureFirewallNatRuleCollectionArgs {
    /**
     * The action type of a NAT rule collection.
     */
    action?: pulumi.Input<inputs.network.AzureFirewallNatRCActionArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the NAT rule collection resource.
     */
    priority?: pulumi.Input<number>;
    /**
     * Collection of rules used by a NAT rule collection.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNatRuleArgs>[]>;
}

/**
 * Properties of the network rule.
 */
export interface AzureFirewallNetworkRuleArgs {
    /**
     * Description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses.
     */
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination FQDNs.
     */
    destinationFqdns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination IpGroups for this rule.
     */
    destinationIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination ports.
     */
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the network rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Array of AzureFirewallNetworkRuleProtocols.
     */
    protocols?: pulumi.Input<pulumi.Input<string | enums.network.AzureFirewallNetworkRuleProtocol>[]>;
    /**
     * List of source IP addresses for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Network rule collection resource.
 */
export interface AzureFirewallNetworkRuleCollectionArgs {
    /**
     * The action type of a rule collection.
     */
    action?: pulumi.Input<inputs.network.AzureFirewallRCActionArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the network rule collection resource.
     */
    priority?: pulumi.Input<number>;
    /**
     * Collection of rules used by a network rule collection.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNetworkRuleArgs>[]>;
}

/**
 * Public IP Address associated with azure firewall.
 */
export interface AzureFirewallPublicIPAddressArgs {
    /**
     * Public IP Address value.
     */
    address?: pulumi.Input<string>;
}

/**
 * Properties of the AzureFirewallRCAction.
 */
export interface AzureFirewallRCActionArgs {
    /**
     * The type of action.
     */
    type?: pulumi.Input<string | enums.network.AzureFirewallRCActionType>;
}

/**
 * SKU of an Azure Firewall.
 */
export interface AzureFirewallSkuArgs {
    /**
     * Name of an Azure Firewall SKU.
     */
    name?: pulumi.Input<string | enums.network.AzureFirewallSkuName>;
    /**
     * Tier of an Azure Firewall.
     */
    tier?: pulumi.Input<string | enums.network.AzureFirewallSkuTier>;
}

/**
 * Backend address of a frontDoor load balancer.
 */
export interface BackendArgs {
    /**
     * Location of the backend (IP address or FQDN)
     */
    address?: pulumi.Input<string>;
    /**
     * The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
     */
    backendHostHeader?: pulumi.Input<string>;
    /**
     * Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
     */
    enabledState?: pulumi.Input<string | enums.network.BackendEnabledState>;
    /**
     * The HTTP TCP port number. Must be between 1 and 65535.
     */
    httpPort?: pulumi.Input<number>;
    /**
     * The HTTPS TCP port number. Must be between 1 and 65535.
     */
    httpsPort?: pulumi.Input<number>;
    /**
     * Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
     */
    privateLinkAlias?: pulumi.Input<string>;
    /**
     * A custom message to be included in the approval request to connect to the Private Link
     */
    privateLinkApprovalMessage?: pulumi.Input<string>;
    /**
     * The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
     */
    privateLinkLocation?: pulumi.Input<string>;
    /**
     * The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
     */
    privateLinkResourceId?: pulumi.Input<string>;
    /**
     * Weight of this endpoint for load balancing purposes.
     */
    weight?: pulumi.Input<number>;
}

/**
 * Pool of backend IP addresses.
 */
export interface BackendAddressPoolArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * An array of backend addresses.
     */
    loadBalancerBackendAddresses?: pulumi.Input<pulumi.Input<inputs.network.LoadBalancerBackendAddressArgs>[]>;
    /**
     * The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
}

/**
 * A backend pool is a collection of backends that can be routed to.
 */
export interface BackendPoolArgs {
    /**
     * The set of backends for this pool
     */
    backends?: pulumi.Input<pulumi.Input<inputs.network.BackendArgs>[]>;
    /**
     * L7 health probe settings for a backend pool
     */
    healthProbeSettings?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Load balancing settings for a backend pool
     */
    loadBalancingSettings?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Resource name.
     */
    name?: pulumi.Input<string>;
}

/**
 * Settings that apply to all backend pools.
 */
export interface BackendPoolsSettingsArgs {
    /**
     * Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
     */
    enforceCertificateNameCheck?: pulumi.Input<string | enums.network.EnforceCertificateNameCheckEnabledState>;
    /**
     * Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
     */
    sendRecvTimeoutSeconds?: pulumi.Input<number>;
}
/**
 * backendPoolsSettingsArgsProvideDefaults sets the appropriate defaults for BackendPoolsSettingsArgs
 */
export function backendPoolsSettingsArgsProvideDefaults(val: BackendPoolsSettingsArgs): BackendPoolsSettingsArgs {
    return {
        ...val,
        enforceCertificateNameCheck: (val.enforceCertificateNameCheck) ?? "Enabled",
    };
}

/**
 * IP configuration of an Bastion Host.
 */
export interface BastionHostIPConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Private IP allocation method.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.IPAllocationMethod>;
    /**
     * Reference of the PublicIP resource.
     */
    publicIPAddress: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Reference of the subnet resource.
     */
    subnet: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * Bastion Shareable Link.
 */
export interface BastionShareableLink {
    /**
     * Reference of the virtual machine resource.
     */
    vm: inputs.network.VM;
}

/**
 * Bastion Shareable Link.
 */
export interface BastionShareableLinkArgs {
    /**
     * Reference of the virtual machine resource.
     */
    vm: pulumi.Input<inputs.network.VMArgs>;
}

/**
 * BGP settings details.
 */
export interface BgpSettingsArgs {
    /**
     * The BGP speaker's ASN.
     */
    asn?: pulumi.Input<number>;
    /**
     * The BGP peering address and BGP identifier of this BGP speaker.
     */
    bgpPeeringAddress?: pulumi.Input<string>;
    /**
     * BGP peering address with IP configuration ID for virtual network gateway.
     */
    bgpPeeringAddresses?: pulumi.Input<pulumi.Input<inputs.network.IPConfigurationBgpPeeringAddressArgs>[]>;
    /**
     * The weight added to routes learned from this BGP speaker.
     */
    peerWeight?: pulumi.Input<number>;
}

/**
 * Network Virtual Appliance Sku Properties.
 */
export interface BreakOutCategoryPoliciesArgs {
    /**
     * Flag to control breakout of o365 allow category.
     */
    allow?: pulumi.Input<boolean>;
    /**
     * Flag to control breakout of o365 default category.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Flag to control breakout of o365 optimize category.
     */
    optimize?: pulumi.Input<boolean>;
}

/**
 * A CAA record.
 */
export interface CaaRecordArgs {
    /**
     * The flags for this CAA record as an integer between 0 and 255.
     */
    flags?: pulumi.Input<number>;
    /**
     * The tag for this CAA record.
     */
    tag?: pulumi.Input<string>;
    /**
     * The value for this CAA record.
     */
    value?: pulumi.Input<string>;
}

/**
 * Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
 */
export interface CacheConfigurationArgs {
    /**
     * The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
     */
    cacheDuration?: pulumi.Input<string>;
    /**
     * Whether to use dynamic compression for cached content
     */
    dynamicCompression?: pulumi.Input<string | enums.network.DynamicCompressionEnabled>;
    /**
     * Treatment of URL query terms when forming the cache key.
     */
    queryParameterStripDirective?: pulumi.Input<string | enums.network.FrontDoorQuery>;
    /**
     * query parameters to include or exclude (comma separated).
     */
    queryParameters?: pulumi.Input<string>;
}

/**
 * A CNAME record.
 */
export interface CnameRecordArgs {
    /**
     * The canonical name for this CNAME record.
     */
    cname?: pulumi.Input<string>;
}

/**
 * Describes the destination of connection monitor.
 */
export interface ConnectionMonitorDestinationArgs {
    /**
     * Address of the connection monitor destination (IP or domain name).
     */
    address?: pulumi.Input<string>;
    /**
     * The destination port used by connection monitor.
     */
    port?: pulumi.Input<number>;
    /**
     * The ID of the resource used as the destination by connection monitor.
     */
    resourceId?: pulumi.Input<string>;
}

/**
 * Describes the connection monitor endpoint.
 */
export interface ConnectionMonitorEndpointArgs {
    /**
     * Address of the connection monitor endpoint (IP or domain name).
     */
    address?: pulumi.Input<string>;
    /**
     * Test coverage for the endpoint.
     */
    coverageLevel?: pulumi.Input<string | enums.network.CoverageLevel>;
    /**
     * Filter for sub-items within the endpoint.
     */
    filter?: pulumi.Input<inputs.network.ConnectionMonitorEndpointFilterArgs>;
    /**
     * The name of the connection monitor endpoint.
     */
    name: pulumi.Input<string>;
    /**
     * Resource ID of the connection monitor endpoint.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Endpoint scope.
     */
    scope?: pulumi.Input<inputs.network.ConnectionMonitorEndpointScopeArgs>;
    /**
     * The endpoint type.
     */
    type?: pulumi.Input<string | enums.network.EndpointType>;
}

/**
 * Describes the connection monitor endpoint filter.
 */
export interface ConnectionMonitorEndpointFilterArgs {
    /**
     * List of items in the filter.
     */
    items?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorEndpointFilterItemArgs>[]>;
    /**
     * The behavior of the endpoint filter. Currently only 'Include' is supported.
     */
    type?: pulumi.Input<string | enums.network.ConnectionMonitorEndpointFilterType>;
}

/**
 * Describes the connection monitor endpoint filter item.
 */
export interface ConnectionMonitorEndpointFilterItemArgs {
    /**
     * The address of the filter item.
     */
    address?: pulumi.Input<string>;
    /**
     * The type of item included in the filter. Currently only 'AgentAddress' is supported.
     */
    type?: pulumi.Input<string | enums.network.ConnectionMonitorEndpointFilterItemType>;
}

/**
 * Describes the connection monitor endpoint scope.
 */
export interface ConnectionMonitorEndpointScopeArgs {
    /**
     * List of items which needs to be excluded from the endpoint scope.
     */
    exclude?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorEndpointScopeItemArgs>[]>;
    /**
     * List of items which needs to be included to the endpoint scope.
     */
    include?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorEndpointScopeItemArgs>[]>;
}

/**
 * Describes the connection monitor endpoint scope item.
 */
export interface ConnectionMonitorEndpointScopeItemArgs {
    /**
     * The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
     */
    address?: pulumi.Input<string>;
}

/**
 * Describes the HTTP configuration.
 */
export interface ConnectionMonitorHttpConfigurationArgs {
    /**
     * The HTTP method to use.
     */
    method?: pulumi.Input<string | enums.network.HTTPConfigurationMethod>;
    /**
     * The path component of the URI. For instance, "/dir1/dir2".
     */
    path?: pulumi.Input<string>;
    /**
     * The port to connect to.
     */
    port?: pulumi.Input<number>;
    /**
     * Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
     */
    preferHTTPS?: pulumi.Input<boolean>;
    /**
     * The HTTP headers to transmit with the request.
     */
    requestHeaders?: pulumi.Input<pulumi.Input<inputs.network.HTTPHeaderArgs>[]>;
    /**
     * HTTP status codes to consider successful. For instance, "2xx,301-304,418".
     */
    validStatusCodeRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Describes the ICMP configuration.
 */
export interface ConnectionMonitorIcmpConfigurationArgs {
    /**
     * Value indicating whether path evaluation with trace route should be disabled.
     */
    disableTraceRoute?: pulumi.Input<boolean>;
}

/**
 * Describes a connection monitor output destination.
 */
export interface ConnectionMonitorOutputArgs {
    /**
     * Connection monitor output destination type. Currently, only "Workspace" is supported.
     */
    type?: pulumi.Input<string | enums.network.OutputType>;
    /**
     * Describes the settings for producing output into a log analytics workspace.
     */
    workspaceSettings?: pulumi.Input<inputs.network.ConnectionMonitorWorkspaceSettingsArgs>;
}

/**
 * Describes the source of connection monitor.
 */
export interface ConnectionMonitorSourceArgs {
    /**
     * The source port used by connection monitor.
     */
    port?: pulumi.Input<number>;
    /**
     * The ID of the resource used as the source by connection monitor.
     */
    resourceId: pulumi.Input<string>;
}

/**
 * Describes the threshold for declaring a test successful.
 */
export interface ConnectionMonitorSuccessThresholdArgs {
    /**
     * The maximum percentage of failed checks permitted for a test to evaluate as successful.
     */
    checksFailedPercent?: pulumi.Input<number>;
    /**
     * The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
     */
    roundTripTimeMs?: pulumi.Input<number>;
}

/**
 * Describes the TCP configuration.
 */
export interface ConnectionMonitorTcpConfigurationArgs {
    /**
     * Destination port behavior.
     */
    destinationPortBehavior?: pulumi.Input<string | enums.network.DestinationPortBehavior>;
    /**
     * Value indicating whether path evaluation with trace route should be disabled.
     */
    disableTraceRoute?: pulumi.Input<boolean>;
    /**
     * The port to connect to.
     */
    port?: pulumi.Input<number>;
}

/**
 * Describes a connection monitor test configuration.
 */
export interface ConnectionMonitorTestConfigurationArgs {
    /**
     * The parameters used to perform test evaluation over HTTP.
     */
    httpConfiguration?: pulumi.Input<inputs.network.ConnectionMonitorHttpConfigurationArgs>;
    /**
     * The parameters used to perform test evaluation over ICMP.
     */
    icmpConfiguration?: pulumi.Input<inputs.network.ConnectionMonitorIcmpConfigurationArgs>;
    /**
     * The name of the connection monitor test configuration.
     */
    name: pulumi.Input<string>;
    /**
     * The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
     */
    preferredIPVersion?: pulumi.Input<string | enums.network.PreferredIPVersion>;
    /**
     * The protocol to use in test evaluation.
     */
    protocol: pulumi.Input<string | enums.network.ConnectionMonitorTestConfigurationProtocol>;
    /**
     * The threshold for declaring a test successful.
     */
    successThreshold?: pulumi.Input<inputs.network.ConnectionMonitorSuccessThresholdArgs>;
    /**
     * The parameters used to perform test evaluation over TCP.
     */
    tcpConfiguration?: pulumi.Input<inputs.network.ConnectionMonitorTcpConfigurationArgs>;
    /**
     * The frequency of test evaluation, in seconds.
     */
    testFrequencySec?: pulumi.Input<number>;
}

/**
 * Describes the connection monitor test group.
 */
export interface ConnectionMonitorTestGroupArgs {
    /**
     * List of destination endpoint names.
     */
    destinations: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value indicating whether test group is disabled.
     */
    disable?: pulumi.Input<boolean>;
    /**
     * The name of the connection monitor test group.
     */
    name: pulumi.Input<string>;
    /**
     * List of source endpoint names.
     */
    sources: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of test configuration names.
     */
    testConfigurations: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Describes the settings for producing output into a log analytics workspace.
 */
export interface ConnectionMonitorWorkspaceSettingsArgs {
    /**
     * Log analytics workspace resource ID.
     */
    workspaceResourceId?: pulumi.Input<string>;
}

export interface ConnectivityGroupItemArgs {
    /**
     * Group connectivity type.
     */
    groupConnectivity?: pulumi.Input<string | enums.network.GroupConnectivity>;
    /**
     * Flag if global is supported.
     */
    isGlobal?: pulumi.Input<string | enums.network.IsGlobal>;
    /**
     * Network group Id.
     */
    networkGroupId?: pulumi.Input<string>;
    /**
     * Flag if need to use hub gateway.
     */
    useHubGateway?: pulumi.Input<string | enums.network.UseHubGateway>;
}

/**
 * Container network interface configuration child resource.
 */
export interface ContainerNetworkInterfaceConfigurationArgs {
    /**
     * A list of container network interfaces created from this container network interface configuration.
     */
    containerNetworkInterfaces?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * A list of ip configurations of the container network interface configuration.
     */
    ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.IPConfigurationProfileArgs>[]>;
    /**
     * The name of the resource. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
}

/**
 * Contains custom Dns resolution configuration from customer.
 */
export interface CustomDnsConfigPropertiesFormatArgs {
    /**
     * Fqdn that resolves to private endpoint ip address.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * A list of private ip addresses of the private endpoint.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Defines contents of a web application rule
 */
export interface CustomRuleArgs {
    /**
     * Describes what action to be applied when rule matches.
     */
    action: pulumi.Input<string | enums.network.ActionType>;
    /**
     * Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
     */
    enabledState?: pulumi.Input<string | enums.network.CustomRuleEnabledState>;
    /**
     * List of match conditions.
     */
    matchConditions: pulumi.Input<pulumi.Input<inputs.network.FrontDoorMatchConditionArgs>[]>;
    /**
     * Describes the name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
     */
    priority: pulumi.Input<number>;
    /**
     * Time window for resetting the rate limit count. Default is 1 minute.
     */
    rateLimitDurationInMinutes?: pulumi.Input<number>;
    /**
     * Number of allowed requests per client within the time window.
     */
    rateLimitThreshold?: pulumi.Input<number>;
    /**
     * Describes type of rule.
     */
    ruleType: pulumi.Input<string | enums.network.RuleType>;
}

/**
 * Defines contents of custom rules
 */
export interface CustomRuleListArgs {
    /**
     * List of rules
     */
    rules?: pulumi.Input<pulumi.Input<inputs.network.CustomRuleArgs>[]>;
}

/**
 * Contains the DDoS protection settings of the public IP.
 */
export interface DdosSettingsArgs {
    /**
     * The DDoS custom policy associated with the public IP.
     */
    ddosCustomPolicy?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Enables DDoS protection on the public IP.
     */
    protectedIP?: pulumi.Input<boolean>;
    /**
     * The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
     */
    protectionCoverage?: pulumi.Input<string | enums.network.DdosSettingsProtectionCoverage>;
}

/**
 * Details the service to which the subnet is delegated.
 */
export interface DelegationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a subnet. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Resource type.
     */
    type?: pulumi.Input<string>;
}

/**
 * List of properties of the device.
 */
export interface DevicePropertiesArgs {
    /**
     * Model of the device.
     */
    deviceModel?: pulumi.Input<string>;
    /**
     * Name of the device Vendor.
     */
    deviceVendor?: pulumi.Input<string>;
    /**
     * Link speed.
     */
    linkSpeedInMbps?: pulumi.Input<number>;
}

/**
 * DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
 */
export interface DhcpOptionsArgs {
    /**
     * The list of DNS servers IP addresses.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Class containing DNS settings in a Traffic Manager profile.
 */
export interface DnsConfigArgs {
    /**
     * The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
     */
    relativeName?: pulumi.Input<string>;
    /**
     * The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
     */
    ttl?: pulumi.Input<number>;
}

/**
 * DNS Proxy Settings in Firewall Policy.
 */
export interface DnsSettingsArgs {
    /**
     * Enable DNS Proxy on Firewalls attached to the Firewall Policy.
     */
    enableProxy?: pulumi.Input<boolean>;
    /**
     * FQDNs in Network Rules are supported when set to true.
     */
    requireProxyForNetworkRules?: pulumi.Input<boolean>;
    /**
     * List of Custom DNS Servers.
     */
    servers?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Class representing a Traffic Manager endpoint.
 */
export interface EndpointArgs {
    /**
     * List of custom headers.
     */
    customHeaders?: pulumi.Input<pulumi.Input<inputs.network.EndpointPropertiesCustomHeadersArgs>[]>;
    /**
     * Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
     */
    endpointLocation?: pulumi.Input<string>;
    /**
     * The monitoring status of the endpoint.
     */
    endpointMonitorStatus?: pulumi.Input<string | enums.network.EndpointMonitorStatus>;
    /**
     * The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
     */
    endpointStatus?: pulumi.Input<string | enums.network.EndpointStatus>;
    /**
     * The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
     */
    geoMapping?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
     */
    id?: pulumi.Input<string>;
    /**
     * The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
     */
    minChildEndpoints?: pulumi.Input<number>;
    /**
     * The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
     */
    minChildEndpointsIPv4?: pulumi.Input<number>;
    /**
     * The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
     */
    minChildEndpointsIPv6?: pulumi.Input<number>;
    /**
     * The name of the resource
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
     */
    priority?: pulumi.Input<number>;
    /**
     * The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
     */
    subnets?: pulumi.Input<pulumi.Input<inputs.network.EndpointPropertiesSubnetsArgs>[]>;
    /**
     * The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
     */
    target?: pulumi.Input<string>;
    /**
     * The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
     */
    targetResourceId?: pulumi.Input<string>;
    /**
     * The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
     */
    type?: pulumi.Input<string>;
    /**
     * The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
     */
    weight?: pulumi.Input<number>;
}

/**
 * Custom header name and value.
 */
export interface EndpointPropertiesCustomHeadersArgs {
    /**
     * Header name.
     */
    name?: pulumi.Input<string>;
    /**
     * Header value.
     */
    value?: pulumi.Input<string>;
}

/**
 * Subnet first address, scope, and/or last address.
 */
export interface EndpointPropertiesSubnetsArgs {
    /**
     * First address in the subnet.
     */
    first?: pulumi.Input<string>;
    /**
     * Last address in the subnet.
     */
    last?: pulumi.Input<string>;
    /**
     * Block size (number of leading bits in the subnet mask).
     */
    scope?: pulumi.Input<number>;
}

/**
 * Defines the endpoint properties
 */
export interface ExperimentEndpointArgs {
    /**
     * The endpoint URL
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The name of the endpoint
     */
    name?: pulumi.Input<string>;
}

/**
 * Authorization in an ExpressRouteCircuit resource.
 */
export interface ExpressRouteCircuitAuthorizationArgs {
    /**
     * The authorization key.
     */
    authorizationKey?: pulumi.Input<string>;
    /**
     * The authorization use status.
     */
    authorizationUseStatus?: pulumi.Input<string | enums.network.AuthorizationUseStatus>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
}

/**
 * Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
 */
export interface ExpressRouteCircuitConnectionArgs {
    /**
     * /29 IP address space to carve out Customer addresses for tunnels.
     */
    addressPrefix?: pulumi.Input<string>;
    /**
     * The authorization key.
     */
    authorizationKey?: pulumi.Input<string>;
    /**
     * Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
     */
    expressRouteCircuitPeering?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * IPv6 Address PrefixProperties of the express route circuit connection.
     */
    ipv6CircuitConnectionConfig?: pulumi.Input<inputs.network.Ipv6CircuitConnectionConfigArgs>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Reference to Express Route Circuit Private Peering Resource of the peered circuit.
     */
    peerExpressRouteCircuitPeering?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * Peering in an ExpressRouteCircuit resource.
 */
export interface ExpressRouteCircuitPeeringArgs {
    /**
     * The Azure ASN.
     */
    azureASN?: pulumi.Input<number>;
    /**
     * The list of circuit connections associated with Azure Private Peering for this circuit.
     */
    connections?: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteCircuitConnectionArgs>[]>;
    /**
     * The GatewayManager Etag.
     */
    gatewayManagerEtag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The IPv6 peering configuration.
     */
    ipv6PeeringConfig?: pulumi.Input<inputs.network.Ipv6ExpressRouteCircuitPeeringConfigArgs>;
    /**
     * The Microsoft peering configuration.
     */
    microsoftPeeringConfig?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringConfigArgs>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The peer ASN.
     */
    peerASN?: pulumi.Input<number>;
    /**
     * The peering type.
     */
    peeringType?: pulumi.Input<string | enums.network.ExpressRoutePeeringType>;
    /**
     * The primary port.
     */
    primaryAzurePort?: pulumi.Input<string>;
    /**
     * The primary address prefix.
     */
    primaryPeerAddressPrefix?: pulumi.Input<string>;
    /**
     * The reference to the RouteFilter resource.
     */
    routeFilter?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The secondary port.
     */
    secondaryAzurePort?: pulumi.Input<string>;
    /**
     * The secondary address prefix.
     */
    secondaryPeerAddressPrefix?: pulumi.Input<string>;
    /**
     * The shared key.
     */
    sharedKey?: pulumi.Input<string>;
    /**
     * The peering state.
     */
    state?: pulumi.Input<string | enums.network.ExpressRoutePeeringState>;
    /**
     * The peering stats of express route circuit.
     */
    stats?: pulumi.Input<inputs.network.ExpressRouteCircuitStatsArgs>;
    /**
     * The VLAN ID.
     */
    vlanId?: pulumi.Input<number>;
}

/**
 * Specifies the peering configuration.
 */
export interface ExpressRouteCircuitPeeringConfigArgs {
    /**
     * The communities of bgp peering. Specified for microsoft peering.
     */
    advertisedCommunities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The reference to AdvertisedPublicPrefixes.
     */
    advertisedPublicPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The CustomerASN of the peering.
     */
    customerASN?: pulumi.Input<number>;
    /**
     * The legacy mode of the peering.
     */
    legacyMode?: pulumi.Input<number>;
    /**
     * The RoutingRegistryName of the configuration.
     */
    routingRegistryName?: pulumi.Input<string>;
}

/**
 * ExpressRoute circuit peering identifier.
 */
export interface ExpressRouteCircuitPeeringIdArgs {
    /**
     * The ID of the ExpressRoute circuit peering.
     */
    id?: pulumi.Input<string>;
}

/**
 * Contains ServiceProviderProperties in an ExpressRouteCircuit.
 */
export interface ExpressRouteCircuitServiceProviderPropertiesArgs {
    /**
     * The BandwidthInMbps.
     */
    bandwidthInMbps?: pulumi.Input<number>;
    /**
     * The peering location.
     */
    peeringLocation?: pulumi.Input<string>;
    /**
     * The serviceProviderName.
     */
    serviceProviderName?: pulumi.Input<string>;
}

/**
 * Contains SKU in an ExpressRouteCircuit.
 */
export interface ExpressRouteCircuitSkuArgs {
    /**
     * The family of the SKU.
     */
    family?: pulumi.Input<string | enums.network.ExpressRouteCircuitSkuFamily>;
    /**
     * The name of the SKU.
     */
    name?: pulumi.Input<string>;
    /**
     * The tier of the SKU.
     */
    tier?: pulumi.Input<string | enums.network.ExpressRouteCircuitSkuTier>;
}

/**
 * Contains stats associated with the peering.
 */
export interface ExpressRouteCircuitStatsArgs {
    /**
     * The Primary BytesIn of the peering.
     */
    primarybytesIn?: pulumi.Input<number>;
    /**
     * The primary BytesOut of the peering.
     */
    primarybytesOut?: pulumi.Input<number>;
    /**
     * The secondary BytesIn of the peering.
     */
    secondarybytesIn?: pulumi.Input<number>;
    /**
     * The secondary BytesOut of the peering.
     */
    secondarybytesOut?: pulumi.Input<number>;
}

/**
 * Configuration for auto scaling.
 */
export interface ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs {
    /**
     * Minimum and maximum number of scale units to deploy.
     */
    bounds?: pulumi.Input<inputs.network.ExpressRouteGatewayPropertiesBoundsArgs>;
}

/**
 * Minimum and maximum number of scale units to deploy.
 */
export interface ExpressRouteGatewayPropertiesBoundsArgs {
    /**
     * Maximum number of scale units deployed for ExpressRoute gateway.
     */
    max?: pulumi.Input<number>;
    /**
     * Minimum number of scale units deployed for ExpressRoute gateway.
     */
    min?: pulumi.Input<number>;
}

/**
 * ExpressRouteLink child resource definition.
 */
export interface ExpressRouteLinkArgs {
    /**
     * Administrative state of the physical port.
     */
    adminState?: pulumi.Input<string | enums.network.ExpressRouteLinkAdminState>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * MacSec configuration.
     */
    macSecConfig?: pulumi.Input<inputs.network.ExpressRouteLinkMacSecConfigArgs>;
    /**
     * Name of child port resource that is unique among child port resources of the parent.
     */
    name?: pulumi.Input<string>;
}

/**
 * ExpressRouteLink Mac Security Configuration.
 */
export interface ExpressRouteLinkMacSecConfigArgs {
    /**
     * Keyvault Secret Identifier URL containing Mac security CAK key.
     */
    cakSecretIdentifier?: pulumi.Input<string>;
    /**
     * Mac security cipher.
     */
    cipher?: pulumi.Input<string | enums.network.ExpressRouteLinkMacSecCipher>;
    /**
     * Keyvault Secret Identifier URL containing Mac security CKN key.
     */
    cknSecretIdentifier?: pulumi.Input<string>;
    /**
     * Sci mode enabled/disabled.
     */
    sciState?: pulumi.Input<string | enums.network.ExpressRouteLinkMacSecSciState>;
}

/**
 * ExtendedLocation complex type.
 */
export interface ExtendedLocationArgs {
    /**
     * The name of the extended location.
     */
    name: pulumi.Input<string>;
    /**
     * The type of the extended location.
     */
    type: pulumi.Input<string | enums.network.ExtendedLocationTypes>;
}

/**
 * Will contain the filter name and values to operate on
 */
export interface FilterItems {
    /**
     * The name of the field we would like to filter
     */
    field?: string;
    /**
     * List of values to filter the current field by
     */
    values?: string[];
}

/**
 * Will contain the filter name and values to operate on
 */
export interface FilterItemsArgs {
    /**
     * The name of the field we would like to filter
     */
    field?: pulumi.Input<string>;
    /**
     * List of values to filter the current field by
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Trusted Root certificates properties for tls.
 */
export interface FirewallPolicyCertificateAuthorityArgs {
    /**
     * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
     */
    keyVaultSecretId?: pulumi.Input<string>;
    /**
     * Name of the CA certificate.
     */
    name?: pulumi.Input<string>;
}

/**
 * Firewall Policy Filter Rule.
 */
export interface FirewallPolicyFilterRuleArgs {
    /**
     * The action type of a Filter rule.
     */
    action?: pulumi.Input<inputs.network.FirewallPolicyFilterRuleActionArgs>;
    /**
     * The name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the Firewall Policy Rule resource.
     */
    priority?: pulumi.Input<number>;
    /**
     * Collection of rule conditions used by a rule.
     */
    ruleConditions?: pulumi.Input<pulumi.Input<inputs.network.ApplicationRuleConditionArgs | inputs.network.NatRuleConditionArgs | inputs.network.NetworkRuleConditionArgs>[]>;
    /**
     * The type of the rule.
     * Expected value is 'FirewallPolicyFilterRule'.
     */
    ruleType: pulumi.Input<"FirewallPolicyFilterRule">;
}

/**
 * Properties of the FirewallPolicyFilterRuleAction.
 */
export interface FirewallPolicyFilterRuleActionArgs {
    /**
     * The type of action.
     */
    type?: pulumi.Input<string | enums.network.FirewallPolicyFilterRuleActionType>;
}

/**
 * Firewall Policy Filter Rule Collection.
 */
export interface FirewallPolicyFilterRuleCollectionArgs {
    /**
     * The action type of a Filter rule collection.
     */
    action?: pulumi.Input<inputs.network.FirewallPolicyFilterRuleCollectionActionArgs>;
    /**
     * The name of the rule collection.
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the Firewall Policy Rule Collection resource.
     */
    priority?: pulumi.Input<number>;
    /**
     * The type of the rule collection.
     * Expected value is 'FirewallPolicyFilterRuleCollection'.
     */
    ruleCollectionType: pulumi.Input<"FirewallPolicyFilterRuleCollection">;
    /**
     * List of rules included in a rule collection.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationRuleArgs | inputs.network.NatRuleArgs | inputs.network.NetworkRuleArgs>[]>;
}

/**
 * Properties of the FirewallPolicyFilterRuleCollectionAction.
 */
export interface FirewallPolicyFilterRuleCollectionActionArgs {
    /**
     * The type of action.
     */
    type?: pulumi.Input<string | enums.network.FirewallPolicyFilterRuleCollectionActionType>;
}

/**
 * Firewall Policy Insights.
 */
export interface FirewallPolicyInsightsArgs {
    /**
     * A flag to indicate if the insights are enabled on the policy.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * Workspaces needed to configure the Firewall Policy Insights.
     */
    logAnalyticsResources?: pulumi.Input<inputs.network.FirewallPolicyLogAnalyticsResourcesArgs>;
    /**
     * Number of days the insights should be enabled on the policy.
     */
    retentionDays?: pulumi.Input<number>;
}

/**
 * Configuration for intrusion detection mode and rules.
 */
export interface FirewallPolicyIntrusionDetectionArgs {
    /**
     * Intrusion detection configuration properties.
     */
    configuration?: pulumi.Input<inputs.network.FirewallPolicyIntrusionDetectionConfigurationArgs>;
    /**
     * Intrusion detection general state.
     */
    mode?: pulumi.Input<string | enums.network.FirewallPolicyIntrusionDetectionStateType>;
}

/**
 * Intrusion detection bypass traffic specification.
 */
export interface FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs {
    /**
     * Description of the bypass traffic rule.
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses or ranges for this rule.
     */
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination IpGroups for this rule.
     */
    destinationIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination ports or ranges.
     */
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the bypass traffic rule.
     */
    name?: pulumi.Input<string>;
    /**
     * The rule bypass protocol.
     */
    protocol?: pulumi.Input<string | enums.network.FirewallPolicyIntrusionDetectionProtocol>;
    /**
     * List of source IP addresses or ranges for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The operation for configuring intrusion detection.
 */
export interface FirewallPolicyIntrusionDetectionConfigurationArgs {
    /**
     * List of rules for traffic to bypass.
     */
    bypassTrafficSettings?: pulumi.Input<pulumi.Input<inputs.network.FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs>[]>;
    /**
     * List of specific signatures states.
     */
    signatureOverrides?: pulumi.Input<pulumi.Input<inputs.network.FirewallPolicyIntrusionDetectionSignatureSpecificationArgs>[]>;
}

/**
 * Intrusion detection signatures specification states.
 */
export interface FirewallPolicyIntrusionDetectionSignatureSpecificationArgs {
    /**
     * Signature id.
     */
    id?: pulumi.Input<string>;
    /**
     * The signature state.
     */
    mode?: pulumi.Input<string | enums.network.FirewallPolicyIntrusionDetectionStateType>;
}

/**
 * Log Analytics Resources for Firewall Policy Insights.
 */
export interface FirewallPolicyLogAnalyticsResourcesArgs {
    /**
     * The default workspace Id for Firewall Policy Insights.
     */
    defaultWorkspaceId?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * List of workspaces for Firewall Policy Insights.
     */
    workspaces?: pulumi.Input<pulumi.Input<inputs.network.FirewallPolicyLogAnalyticsWorkspaceArgs>[]>;
}

/**
 * Log Analytics Workspace for Firewall Policy Insights.
 */
export interface FirewallPolicyLogAnalyticsWorkspaceArgs {
    /**
     * Region to configure the Workspace.
     */
    region?: pulumi.Input<string>;
    /**
     * The workspace Id for Firewall Policy Insights.
     */
    workspaceId?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * Firewall Policy NAT Rule.
 */
export interface FirewallPolicyNatRuleArgs {
    /**
     * The action type of a Nat rule.
     */
    action?: pulumi.Input<inputs.network.FirewallPolicyNatRuleActionArgs>;
    /**
     * The name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the Firewall Policy Rule resource.
     */
    priority?: pulumi.Input<number>;
    /**
     * The match conditions for incoming traffic.
     */
    ruleCondition?: pulumi.Input<inputs.network.ApplicationRuleConditionArgs | inputs.network.NatRuleConditionArgs | inputs.network.NetworkRuleConditionArgs>;
    /**
     * The type of the rule.
     * Expected value is 'FirewallPolicyNatRule'.
     */
    ruleType: pulumi.Input<"FirewallPolicyNatRule">;
    /**
     * The translated address for this NAT rule.
     */
    translatedAddress?: pulumi.Input<string>;
    /**
     * The translated port for this NAT rule.
     */
    translatedPort?: pulumi.Input<string>;
}

/**
 * Properties of the FirewallPolicyNatRuleAction.
 */
export interface FirewallPolicyNatRuleActionArgs {
    /**
     * The type of action.
     */
    type?: pulumi.Input<string | enums.network.FirewallPolicyNatRuleActionType>;
}

/**
 * Firewall Policy NAT Rule Collection.
 */
export interface FirewallPolicyNatRuleCollectionArgs {
    /**
     * The action type of a Nat rule collection.
     */
    action?: pulumi.Input<inputs.network.FirewallPolicyNatRuleCollectionActionArgs>;
    /**
     * The name of the rule collection.
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the Firewall Policy Rule Collection resource.
     */
    priority?: pulumi.Input<number>;
    /**
     * The type of the rule collection.
     * Expected value is 'FirewallPolicyNatRuleCollection'.
     */
    ruleCollectionType: pulumi.Input<"FirewallPolicyNatRuleCollection">;
    /**
     * List of rules included in a rule collection.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationRuleArgs | inputs.network.NatRuleArgs | inputs.network.NetworkRuleArgs>[]>;
}

/**
 * Properties of the FirewallPolicyNatRuleCollectionAction.
 */
export interface FirewallPolicyNatRuleCollectionActionArgs {
    /**
     * The type of action.
     */
    type?: pulumi.Input<string | enums.network.FirewallPolicyNatRuleCollectionActionType>;
}

/**
 * Properties of the application rule protocol.
 */
export interface FirewallPolicyRuleApplicationProtocolArgs {
    /**
     * Port number for the protocol, cannot be greater than 64000.
     */
    port?: pulumi.Input<number>;
    /**
     * Protocol type.
     */
    protocolType?: pulumi.Input<string | enums.network.FirewallPolicyRuleApplicationProtocolType>;
}

/**
 * Properties of the application rule protocol.
 */
export interface FirewallPolicyRuleConditionApplicationProtocolArgs {
    /**
     * Port number for the protocol, cannot be greater than 64000.
     */
    port?: pulumi.Input<number>;
    /**
     * Protocol type.
     */
    protocolType?: pulumi.Input<string | enums.network.FirewallPolicyRuleConditionApplicationProtocolType>;
}

/**
 * The private IP addresses/IP ranges to which traffic will not be SNAT.
 */
export interface FirewallPolicySNATArgs {
    /**
     * List of private IP addresses/IP address ranges to not be SNAT.
     */
    privateRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * SKU of Firewall policy.
 */
export interface FirewallPolicySkuArgs {
    /**
     * Tier of Firewall Policy.
     */
    tier?: pulumi.Input<string | enums.network.FirewallPolicySkuTier>;
}

/**
 * ThreatIntel Whitelist for Firewall Policy.
 */
export interface FirewallPolicyThreatIntelWhitelistArgs {
    /**
     * List of FQDNs for the ThreatIntel Whitelist.
     */
    fqdns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of IP addresses for the ThreatIntel Whitelist.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Configuration needed to perform TLS termination & initiation.
 */
export interface FirewallPolicyTransportSecurityArgs {
    /**
     * The CA used for intermediate CA generation.
     */
    certificateAuthority?: pulumi.Input<inputs.network.FirewallPolicyCertificateAuthorityArgs>;
}

/**
 * Parameters that define the flow log format.
 */
export interface FlowLogFormatParametersArgs {
    /**
     * The file type of flow log.
     */
    type?: pulumi.Input<string | enums.network.FlowLogFormatType>;
    /**
     * The version (revision) of the flow log.
     */
    version?: pulumi.Input<number>;
}
/**
 * flowLogFormatParametersArgsProvideDefaults sets the appropriate defaults for FlowLogFormatParametersArgs
 */
export function flowLogFormatParametersArgsProvideDefaults(val: FlowLogFormatParametersArgs): FlowLogFormatParametersArgs {
    return {
        ...val,
        version: (val.version) ?? 0,
    };
}

/**
 * Describes Forwarding Route.
 */
export interface ForwardingConfigurationArgs {
    /**
     * A reference to the BackendPool which this rule routes to.
     */
    backendPool?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The caching configuration associated with this rule.
     */
    cacheConfiguration?: pulumi.Input<inputs.network.CacheConfigurationArgs>;
    /**
     * A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
     */
    customForwardingPath?: pulumi.Input<string>;
    /**
     * Protocol this rule will use when forwarding traffic to backends.
     */
    forwardingProtocol?: pulumi.Input<string | enums.network.FrontDoorForwardingProtocol>;
    /**
     *
     * Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration'.
     */
    odataType: pulumi.Input<"#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration">;
}

/**
 * Defines a managed rule group override setting.
 */
export interface FrontDoorManagedRuleGroupOverrideArgs {
    /**
     * Describes the exclusions that are applied to all rules in the group.
     */
    exclusions?: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleExclusionArgs>[]>;
    /**
     * Describes the managed rule group to override.
     */
    ruleGroupName: pulumi.Input<string>;
    /**
     * List of rules that will be disabled. If none specified, all rules in the group will be disabled.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.network.FrontDoorManagedRuleOverrideArgs>[]>;
}

/**
 * Defines a managed rule group override setting.
 */
export interface FrontDoorManagedRuleOverrideArgs {
    /**
     * Describes the override action to be applied when rule matches.
     */
    action?: pulumi.Input<string | enums.network.ActionType>;
    /**
     * Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
     */
    enabledState?: pulumi.Input<string | enums.network.ManagedRuleEnabledState>;
    /**
     * Describes the exclusions that are applied to this specific rule.
     */
    exclusions?: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleExclusionArgs>[]>;
    /**
     * Identifier for the managed rule.
     */
    ruleId: pulumi.Input<string>;
}

/**
 * Defines a managed rule set.
 */
export interface FrontDoorManagedRuleSetArgs {
    /**
     * Describes the exclusions that are applied to all rules in the set.
     */
    exclusions?: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleExclusionArgs>[]>;
    /**
     * Defines the rule group overrides to apply to the rule set.
     */
    ruleGroupOverrides?: pulumi.Input<pulumi.Input<inputs.network.FrontDoorManagedRuleGroupOverrideArgs>[]>;
    /**
     * Defines the action to take when a managed rule set score threshold is met.
     */
    ruleSetAction?: pulumi.Input<string | enums.network.ManagedRuleSetActionType>;
    /**
     * Defines the rule set type to use.
     */
    ruleSetType: pulumi.Input<string>;
    /**
     * Defines the version of the rule set to use.
     */
    ruleSetVersion: pulumi.Input<string>;
}

/**
 * Define a match condition.
 */
export interface FrontDoorMatchConditionArgs {
    /**
     * List of possible match values.
     */
    matchValue: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Request variable to compare with.
     */
    matchVariable: pulumi.Input<string | enums.network.FrontDoorMatchVariable>;
    /**
     * Describes if the result of this condition should be negated.
     */
    negateCondition?: pulumi.Input<boolean>;
    /**
     * Comparison type to use for matching with the variable value.
     */
    operator: pulumi.Input<string | enums.network.Operator>;
    /**
     * Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
     */
    selector?: pulumi.Input<string>;
    /**
     * List of transforms.
     */
    transforms?: pulumi.Input<pulumi.Input<string | enums.network.TransformType>[]>;
}

/**
 * Defines top-level WebApplicationFirewallPolicy configuration settings.
 */
export interface FrontDoorPolicySettingsArgs {
    /**
     * If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
     */
    customBlockResponseBody?: pulumi.Input<string>;
    /**
     * If the action type is block, customer can override the response status code.
     */
    customBlockResponseStatusCode?: pulumi.Input<number>;
    /**
     * Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
     */
    enabledState?: pulumi.Input<string | enums.network.PolicyEnabledState>;
    /**
     * Describes if it is in detection mode or prevention mode at policy level.
     */
    mode?: pulumi.Input<string | enums.network.PolicyMode>;
    /**
     * If action type is redirect, this field represents redirect URL for the client.
     */
    redirectUrl?: pulumi.Input<string>;
    /**
     * Describes if policy managed rules will inspect the request body content.
     */
    requestBodyCheck?: pulumi.Input<string | enums.network.PolicyRequestBodyCheck>;
}

/**
 * A frontend endpoint used for routing.
 */
export interface FrontendEndpointArgs {
    /**
     * The host name of the frontendEndpoint. Must be a domain name.
     */
    hostName?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
     */
    sessionAffinityEnabledState?: pulumi.Input<string | enums.network.SessionAffinityEnabledState>;
    /**
     * UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
     */
    sessionAffinityTtlSeconds?: pulumi.Input<number>;
    /**
     * Defines the Web Application Firewall policy for each host (if applicable)
     */
    webApplicationFirewallPolicyLink?: pulumi.Input<inputs.network.FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs>;
}

/**
 * Defines the Web Application Firewall policy for each host (if applicable)
 */
export interface FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
}

/**
 * Frontend IP address of the load balancer.
 */
export interface FrontendIPConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The private IP address of the IP configuration.
     */
    privateIPAddress?: pulumi.Input<string>;
    /**
     * Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
     */
    privateIPAddressVersion?: pulumi.Input<string | enums.network.IPVersion>;
    /**
     * The Private IP allocation method.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.IPAllocationMethod>;
    /**
     * The reference to the Public IP resource.
     */
    publicIPAddress?: pulumi.Input<inputs.network.PublicIPAddressArgs>;
    /**
     * The reference to the Public IP Prefix resource.
     */
    publicIPPrefix?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The reference to the subnet resource.
     */
    subnet?: pulumi.Input<inputs.network.SubnetArgs>;
    /**
     * A list of availability zones denoting the IP allocated for the resource needs to come from.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * frontendIPConfigurationArgsProvideDefaults sets the appropriate defaults for FrontendIPConfigurationArgs
 */
export function frontendIPConfigurationArgsProvideDefaults(val: FrontendIPConfigurationArgs): FrontendIPConfigurationArgs {
    return {
        ...val,
        subnet: (val.subnet ? pulumi.output(val.subnet).apply(inputs.network.subnetArgsProvideDefaults) : undefined),
    };
}

/**
 * GroupMembers Item.
 */
export interface GroupMembersItemArgs {
    /**
     * Resource Id.
     */
    resourceId?: pulumi.Input<string>;
}

/**
 * The HTTP header.
 */
export interface HTTPHeaderArgs {
    /**
     * The name in HTTP header.
     */
    name?: pulumi.Input<string>;
    /**
     * The value in HTTP header.
     */
    value?: pulumi.Input<string>;
}

/**
 * An action that can manipulate an http header.
 */
export interface HeaderActionArgs {
    /**
     * Which type of manipulation to apply to the header.
     */
    headerActionType: pulumi.Input<string | enums.network.HeaderActionType>;
    /**
     * The name of the header this action will apply to.
     */
    headerName: pulumi.Input<string>;
    /**
     * The value to update the given header name with. This value is not used if the actionType is Delete.
     */
    value?: pulumi.Input<string>;
}

/**
 * Load balancing settings for a backend pool
 */
export interface HealthProbeSettingsModelArgs {
    /**
     * Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
     */
    enabledState?: pulumi.Input<string | enums.network.HealthProbeEnabled>;
    /**
     * Configures which HTTP method to use to probe the backends defined under backendPools.
     */
    healthProbeMethod?: pulumi.Input<string | enums.network.FrontDoorHealthProbeMethod>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The number of seconds between health probes.
     */
    intervalInSeconds?: pulumi.Input<number>;
    /**
     * Resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The path to use for the health probe. Default is /
     */
    path?: pulumi.Input<string>;
    /**
     * Protocol scheme to use for this probe
     */
    protocol?: pulumi.Input<string | enums.network.FrontDoorProtocol>;
}
/**
 * healthProbeSettingsModelArgsProvideDefaults sets the appropriate defaults for HealthProbeSettingsModelArgs
 */
export function healthProbeSettingsModelArgsProvideDefaults(val: HealthProbeSettingsModelArgs): HealthProbeSettingsModelArgs {
    return {
        ...val,
        healthProbeMethod: (val.healthProbeMethod) ?? "HEAD",
    };
}

/**
 * Hub Item.
 */
export interface HubArgs {
    /**
     * Resource Id.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Resource Type.
     */
    resourceType?: pulumi.Input<string>;
}

/**
 * IP addresses associated with azure firewall.
 */
export interface HubIPAddressesArgs {
    /**
     * Private IP Address associated with azure firewall.
     */
    privateIPAddress?: pulumi.Input<string>;
    /**
     * Public IP addresses associated with azure firewall.
     */
    publicIPs?: pulumi.Input<inputs.network.HubPublicIPAddressesArgs>;
}

/**
 * Public IP addresses associated with azure firewall.
 */
export interface HubPublicIPAddressesArgs {
    /**
     * The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
     */
    addresses?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallPublicIPAddressArgs>[]>;
    /**
     * The number of Public IP addresses associated with azure firewall.
     */
    count?: pulumi.Input<number>;
}

/**
 * RouteTable route.
 */
export interface HubRouteArgs {
    /**
     * The type of destinations (eg: CIDR, ResourceId, Service).
     */
    destinationType: pulumi.Input<string>;
    /**
     * List of all destinations.
     */
    destinations: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Route that is unique within a RouteTable. This name can be used to access this route.
     */
    name: pulumi.Input<string>;
    /**
     * NextHop resource ID.
     */
    nextHop: pulumi.Input<string>;
    /**
     * The type of next hop (eg: ResourceId).
     */
    nextHopType: pulumi.Input<string>;
}

/**
 * Properties of IPConfigurationBgpPeeringAddress.
 */
export interface IPConfigurationBgpPeeringAddressArgs {
    /**
     * The list of custom BGP peering addresses which belong to IP configuration.
     */
    customBgpIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of IP configuration which belongs to gateway.
     */
    ipconfigurationId?: pulumi.Input<string>;
}

/**
 * IP configuration profile child resource.
 */
export interface IPConfigurationProfileArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The reference to the subnet resource to create a container network interface ip configuration.
     */
    subnet?: pulumi.Input<inputs.network.SubnetArgs>;
}
/**
 * ipconfigurationProfileArgsProvideDefaults sets the appropriate defaults for IPConfigurationProfileArgs
 */
export function ipconfigurationProfileArgsProvideDefaults(val: IPConfigurationProfileArgs): IPConfigurationProfileArgs {
    return {
        ...val,
        subnet: (val.subnet ? pulumi.output(val.subnet).apply(inputs.network.subnetArgsProvideDefaults) : undefined),
    };
}

/**
 * IP configuration.
 */
export interface InboundEndpointIPConfigurationArgs {
    /**
     * Private IP address of the IP configuration.
     */
    privateIpAddress?: pulumi.Input<string>;
    /**
     * Private IP address allocation method.
     */
    privateIpAllocationMethod?: pulumi.Input<string | enums.network.IpAllocationMethod>;
    /**
     * The reference to the subnet bound to the IP configuration.
     */
    subnet?: pulumi.Input<inputs.network.SubResourceArgs>;
}
/**
 * inboundEndpointIPConfigurationArgsProvideDefaults sets the appropriate defaults for InboundEndpointIPConfigurationArgs
 */
export function inboundEndpointIPConfigurationArgsProvideDefaults(val: InboundEndpointIPConfigurationArgs): InboundEndpointIPConfigurationArgs {
    return {
        ...val,
        privateIpAllocationMethod: (val.privateIpAllocationMethod) ?? "Dynamic",
    };
}

/**
 * Inbound NAT pool of the load balancer.
 */
export interface InboundNatPoolArgs {
    /**
     * The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
     */
    backendPort: pulumi.Input<number>;
    /**
     * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
     */
    enableFloatingIP?: pulumi.Input<boolean>;
    /**
     * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
     */
    enableTcpReset?: pulumi.Input<boolean>;
    /**
     * A reference to frontend IP addresses.
     */
    frontendIPConfiguration?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
     */
    frontendPortRangeEnd: pulumi.Input<number>;
    /**
     * The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
     */
    frontendPortRangeStart: pulumi.Input<number>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The reference to the transport protocol used by the inbound NAT pool.
     */
    protocol: pulumi.Input<string | enums.network.TransportProtocol>;
}

/**
 * Inbound NAT rule of the load balancer.
 */
export interface InboundNatRuleArgs {
    /**
     * The port used for the internal endpoint. Acceptable values range from 1 to 65535.
     */
    backendPort?: pulumi.Input<number>;
    /**
     * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
     */
    enableFloatingIP?: pulumi.Input<boolean>;
    /**
     * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
     */
    enableTcpReset?: pulumi.Input<boolean>;
    /**
     * A reference to frontend IP addresses.
     */
    frontendIPConfiguration?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
     */
    frontendPort?: pulumi.Input<number>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The reference to the transport protocol used by the load balancing rule.
     */
    protocol?: pulumi.Input<string | enums.network.TransportProtocol>;
}

/**
 * Contains the IpTag associated with the object.
 */
export interface IpTagArgs {
    /**
     * The IP tag type. Example: FirstPartyUsage.
     */
    ipTagType?: pulumi.Input<string>;
    /**
     * The value of the IP tag associated with the public IP. Example: SQL.
     */
    tag?: pulumi.Input<string>;
}

/**
 * An IPSec Policy configuration for a virtual network gateway connection.
 */
export interface IpsecPolicyArgs {
    /**
     * The DH Group used in IKE Phase 1 for initial SA.
     */
    dhGroup: pulumi.Input<string | enums.network.DhGroup>;
    /**
     * The IKE encryption algorithm (IKE phase 2).
     */
    ikeEncryption: pulumi.Input<string | enums.network.IkeEncryption>;
    /**
     * The IKE integrity algorithm (IKE phase 2).
     */
    ikeIntegrity: pulumi.Input<string | enums.network.IkeIntegrity>;
    /**
     * The IPSec encryption algorithm (IKE phase 1).
     */
    ipsecEncryption: pulumi.Input<string | enums.network.IpsecEncryption>;
    /**
     * The IPSec integrity algorithm (IKE phase 1).
     */
    ipsecIntegrity: pulumi.Input<string | enums.network.IpsecIntegrity>;
    /**
     * The Pfs Group used in IKE Phase 2 for new child SA.
     */
    pfsGroup: pulumi.Input<string | enums.network.PfsGroup>;
    /**
     * The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
     */
    saDataSizeKilobytes: pulumi.Input<number>;
    /**
     * The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
     */
    saLifeTimeSeconds: pulumi.Input<number>;
}

/**
 * IPv6 Circuit Connection properties for global reach.
 */
export interface Ipv6CircuitConnectionConfigArgs {
    /**
     * /125 IP address space to carve out customer addresses for global reach.
     */
    addressPrefix?: pulumi.Input<string>;
}

/**
 * Contains IPv6 peering config.
 */
export interface Ipv6ExpressRouteCircuitPeeringConfigArgs {
    /**
     * The Microsoft peering configuration.
     */
    microsoftPeeringConfig?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringConfigArgs>;
    /**
     * The primary address prefix.
     */
    primaryPeerAddressPrefix?: pulumi.Input<string>;
    /**
     * The reference to the RouteFilter resource.
     */
    routeFilter?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The secondary address prefix.
     */
    secondaryPeerAddressPrefix?: pulumi.Input<string>;
    /**
     * The state of peering.
     */
    state?: pulumi.Input<string | enums.network.ExpressRouteCircuitPeeringState>;
}

/**
 * Load balancer backend addresses.
 */
export interface LoadBalancerBackendAddressArgs {
    /**
     * IP Address belonging to the referenced virtual network.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Reference to the frontend ip address configuration defined in regional loadbalancer.
     */
    loadBalancerFrontendIPConfiguration?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Name of the backend address.
     */
    name?: pulumi.Input<string>;
    /**
     * Reference to an existing subnet.
     */
    subnet?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Reference to an existing virtual network.
     */
    virtualNetwork?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * SKU of a load balancer.
 */
export interface LoadBalancerSkuArgs {
    /**
     * Name of a load balancer SKU.
     */
    name?: pulumi.Input<string | enums.network.LoadBalancerSkuName>;
    /**
     * Tier of a load balancer SKU.
     */
    tier?: pulumi.Input<string | enums.network.LoadBalancerSkuTier>;
}

/**
 * A load balancing rule for a load balancer.
 */
export interface LoadBalancingRuleArgs {
    /**
     * A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
     */
    backendAddressPool?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
     */
    backendPort?: pulumi.Input<number>;
    /**
     * Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
     */
    disableOutboundSnat?: pulumi.Input<boolean>;
    /**
     * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
     */
    enableFloatingIP?: pulumi.Input<boolean>;
    /**
     * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
     */
    enableTcpReset?: pulumi.Input<boolean>;
    /**
     * A reference to frontend IP addresses.
     */
    frontendIPConfiguration?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
     */
    frontendPort: pulumi.Input<number>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The load distribution policy for this rule.
     */
    loadDistribution?: pulumi.Input<string | enums.network.LoadDistribution>;
    /**
     * The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The reference to the load balancer probe used by the load balancing rule.
     */
    probe?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The reference to the transport protocol used by the load balancing rule.
     */
    protocol: pulumi.Input<string | enums.network.TransportProtocol>;
}

/**
 * Load balancing settings for a backend pool
 */
export interface LoadBalancingSettingsModelArgs {
    /**
     * The additional latency in milliseconds for probes to fall into the lowest latency bucket
     */
    additionalLatencyMilliseconds?: pulumi.Input<number>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of samples to consider for load balancing decisions
     */
    sampleSize?: pulumi.Input<number>;
    /**
     * The number of samples within the sample period that must succeed
     */
    successfulSamplesRequired?: pulumi.Input<number>;
}

/**
 * A common class for general resource information.
 */
export interface LocalNetworkGatewayArgs {
    /**
     * Local network gateway's BGP speaker settings.
     */
    bgpSettings?: pulumi.Input<inputs.network.BgpSettingsArgs>;
    /**
     * FQDN of local network gateway.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * IP address of local network gateway.
     */
    gatewayIpAddress?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Local network site address space.
     */
    localNetworkAddressSpace?: pulumi.Input<inputs.network.AddressSpaceArgs>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Exclude variables from managed rule evaluation.
 */
export interface ManagedRuleExclusionArgs {
    /**
     * The variable type to be excluded.
     */
    matchVariable: pulumi.Input<string | enums.network.ManagedRuleExclusionMatchVariable>;
    /**
     * Selector value for which elements in the collection this exclusion applies to.
     */
    selector: pulumi.Input<string>;
    /**
     * Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
     */
    selectorMatchOperator: pulumi.Input<string | enums.network.ManagedRuleExclusionSelectorMatchOperator>;
}

/**
 * Defines a managed rule group override setting.
 */
export interface ManagedRuleGroupOverrideArgs {
    /**
     * The managed rule group to override.
     */
    ruleGroupName: pulumi.Input<string>;
    /**
     * List of rules that will be disabled. If none specified, all rules in the group will be disabled.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleOverrideArgs>[]>;
}

/**
 * Defines a managed rule group override setting.
 */
export interface ManagedRuleOverrideArgs {
    /**
     * Identifier for the managed rule.
     */
    ruleId: pulumi.Input<string>;
    /**
     * The state of the managed rule. Defaults to Disabled if not specified.
     */
    state?: pulumi.Input<string | enums.network.ManagedRuleEnabledState>;
}

/**
 * Defines a managed rule set.
 */
export interface ManagedRuleSetArgs {
    /**
     * Defines the rule group overrides to apply to the rule set.
     */
    ruleGroupOverrides?: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleGroupOverrideArgs>[]>;
    /**
     * Defines the rule set type to use.
     */
    ruleSetType: pulumi.Input<string>;
    /**
     * Defines the version of the rule set to use.
     */
    ruleSetVersion: pulumi.Input<string>;
}

/**
 * Defines the list of managed rule sets for the policy.
 */
export interface ManagedRuleSetListArgs {
    /**
     * List of rule sets.
     */
    managedRuleSets?: pulumi.Input<pulumi.Input<inputs.network.FrontDoorManagedRuleSetArgs>[]>;
}

/**
 * Allow to exclude some variable satisfy the condition for the WAF check.
 */
export interface ManagedRulesDefinitionArgs {
    /**
     * The Exclusions that are applied on the policy.
     */
    exclusions?: pulumi.Input<pulumi.Input<inputs.network.OwaspCrsExclusionEntryArgs>[]>;
    /**
     * The managed rule sets that are associated with the policy.
     */
    managedRuleSets: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleSetArgs>[]>;
}

/**
 * Identity for the resource.
 */
export interface ManagedServiceIdentityArgs {
    /**
     * The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
     */
    type?: pulumi.Input<enums.network.ResourceIdentityType>;
    /**
     * The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    userAssignedIdentities?: pulumi.Input<{[key: string]: any}>;
}

/**
 * Define match conditions.
 */
export interface MatchConditionArgs {
    /**
     * Match value.
     */
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of match variables.
     */
    matchVariables: pulumi.Input<pulumi.Input<inputs.network.MatchVariableArgs>[]>;
    /**
     * Whether this is negate condition or not.
     */
    negationConditon?: pulumi.Input<boolean>;
    /**
     * The operator to be matched.
     */
    operator: pulumi.Input<string | enums.network.WebApplicationFirewallOperator>;
    /**
     * List of transforms.
     */
    transforms?: pulumi.Input<pulumi.Input<string | enums.network.WebApplicationFirewallTransform>[]>;
}

/**
 * Define match variables.
 */
export interface MatchVariableArgs {
    /**
     * The selector of match variable.
     */
    selector?: pulumi.Input<string>;
    /**
     * Match Variable.
     */
    variableName: pulumi.Input<string | enums.network.WebApplicationFirewallMatchVariable>;
}

/**
 * Class containing endpoint monitoring settings in a Traffic Manager profile.
 */
export interface MonitorConfigArgs {
    /**
     * List of custom headers.
     */
    customHeaders?: pulumi.Input<pulumi.Input<inputs.network.MonitorConfigCustomHeadersArgs>[]>;
    /**
     * List of expected status code ranges.
     */
    expectedStatusCodeRanges?: pulumi.Input<pulumi.Input<inputs.network.MonitorConfigExpectedStatusCodeRangesArgs>[]>;
    /**
     * The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
     */
    intervalInSeconds?: pulumi.Input<number>;
    /**
     * The path relative to the endpoint domain name used to probe for endpoint health.
     */
    path?: pulumi.Input<string>;
    /**
     * The TCP port used to probe for endpoint health.
     */
    port?: pulumi.Input<number>;
    /**
     * The profile-level monitoring status of the Traffic Manager profile.
     */
    profileMonitorStatus?: pulumi.Input<string | enums.network.ProfileMonitorStatus>;
    /**
     * The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
     */
    protocol?: pulumi.Input<string | enums.network.MonitorProtocol>;
    /**
     * The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
     */
    timeoutInSeconds?: pulumi.Input<number>;
    /**
     * The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
     */
    toleratedNumberOfFailures?: pulumi.Input<number>;
}

/**
 * Custom header name and value.
 */
export interface MonitorConfigCustomHeadersArgs {
    /**
     * Header name.
     */
    name?: pulumi.Input<string>;
    /**
     * Header value.
     */
    value?: pulumi.Input<string>;
}

/**
 * Min and max value of a status code range.
 */
export interface MonitorConfigExpectedStatusCodeRangesArgs {
    /**
     * Max status code.
     */
    max?: pulumi.Input<number>;
    /**
     * Min status code.
     */
    min?: pulumi.Input<number>;
}

/**
 * An MX record.
 */
export interface MxRecordArgs {
    /**
     * The domain name of the mail host for this MX record.
     */
    exchange?: pulumi.Input<string>;
    /**
     * The preference value for this MX record.
     */
    preference?: pulumi.Input<number>;
}

/**
 * Nat Gateway resource.
 */
export interface NatGatewayArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The idle timeout of the nat gateway.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * An array of public ip addresses associated with the nat gateway resource.
     */
    publicIpAddresses?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * An array of public ip prefixes associated with the nat gateway resource.
     */
    publicIpPrefixes?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * The nat gateway SKU.
     */
    sku?: pulumi.Input<inputs.network.NatGatewaySkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of availability zones denoting the zone in which Nat Gateway should be deployed.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * SKU of nat gateway.
 */
export interface NatGatewaySkuArgs {
    /**
     * Name of Nat Gateway SKU.
     */
    name?: pulumi.Input<string | enums.network.NatGatewaySkuName>;
}

/**
 * Rule of type nat.
 */
export interface NatRuleArgs {
    /**
     * Description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses or Service Tags.
     */
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination ports.
     */
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of FirewallPolicyRuleNetworkProtocols.
     */
    ipProtocols?: pulumi.Input<pulumi.Input<string | enums.network.FirewallPolicyRuleNetworkProtocol>[]>;
    /**
     * Name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Rule Type.
     * Expected value is 'NatRule'.
     */
    ruleType: pulumi.Input<"NatRule">;
    /**
     * List of source IP addresses for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The translated address for this NAT rule.
     */
    translatedAddress?: pulumi.Input<string>;
    /**
     * The translated FQDN for this NAT rule.
     */
    translatedFqdn?: pulumi.Input<string>;
    /**
     * The translated port for this NAT rule.
     */
    translatedPort?: pulumi.Input<string>;
}

/**
 * Rule condition of type nat.
 */
export interface NatRuleConditionArgs {
    /**
     * Description of the rule condition.
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses or Service Tags.
     */
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination ports.
     */
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of FirewallPolicyRuleConditionNetworkProtocols.
     */
    ipProtocols?: pulumi.Input<pulumi.Input<string | enums.network.FirewallPolicyRuleConditionNetworkProtocol>[]>;
    /**
     * Name of the rule condition.
     */
    name?: pulumi.Input<string>;
    /**
     * Rule Condition Type.
     * Expected value is 'NatRuleCondition'.
     */
    ruleConditionType: pulumi.Input<"NatRuleCondition">;
    /**
     * List of source IP addresses for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * DNS settings of a network interface.
 */
export interface NetworkInterfaceDnsSettingsArgs {
    /**
     * List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
     */
    internalDnsNameLabel?: pulumi.Input<string>;
}

/**
 * IPConfiguration in a network interface.
 */
export interface NetworkInterfaceIPConfigurationArgs {
    /**
     * The reference to ApplicationGatewayBackendAddressPool resource.
     */
    applicationGatewayBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendAddressPoolArgs>[]>;
    /**
     * Application security groups in which the IP configuration is included.
     */
    applicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationSecurityGroupArgs>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The reference to LoadBalancerBackendAddressPool resource.
     */
    loadBalancerBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.BackendAddressPoolArgs>[]>;
    /**
     * A list of references of LoadBalancerInboundNatRules.
     */
    loadBalancerInboundNatRules?: pulumi.Input<pulumi.Input<inputs.network.InboundNatRuleArgs>[]>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether this is a primary customer address on the network interface.
     */
    primary?: pulumi.Input<boolean>;
    /**
     * Private IP address of the IP configuration.
     */
    privateIPAddress?: pulumi.Input<string>;
    /**
     * Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
     */
    privateIPAddressVersion?: pulumi.Input<string | enums.network.IPVersion>;
    /**
     * The private IP address allocation method.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.IPAllocationMethod>;
    /**
     * Public IP address bound to the IP configuration.
     */
    publicIPAddress?: pulumi.Input<inputs.network.PublicIPAddressArgs>;
    /**
     * Subnet bound to the IP configuration.
     */
    subnet?: pulumi.Input<inputs.network.SubnetArgs>;
    /**
     * Resource type.
     */
    type?: pulumi.Input<string>;
    /**
     * The reference to Virtual Network Taps.
     */
    virtualNetworkTaps?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkTapArgs>[]>;
}
/**
 * networkInterfaceIPConfigurationArgsProvideDefaults sets the appropriate defaults for NetworkInterfaceIPConfigurationArgs
 */
export function networkInterfaceIPConfigurationArgsProvideDefaults(val: NetworkInterfaceIPConfigurationArgs): NetworkInterfaceIPConfigurationArgs {
    return {
        ...val,
        subnet: (val.subnet ? pulumi.output(val.subnet).apply(inputs.network.subnetArgsProvideDefaults) : undefined),
    };
}

/**
 * Scope of Network Manager.
 */
export interface NetworkManagerPropertiesNetworkManagerScopesArgs {
    /**
     * List of management groups.
     */
    managementGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of subscriptions.
     */
    subscriptions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Network manager security group item.
 */
export interface NetworkManagerSecurityGroupItemArgs {
    /**
     * Network manager group Id.
     */
    networkGroupId?: pulumi.Input<string>;
}

/**
 * Rule of type network.
 */
export interface NetworkRuleArgs {
    /**
     * Description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses or Service Tags.
     */
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination FQDNs.
     */
    destinationFqdns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination IpGroups for this rule.
     */
    destinationIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination ports.
     */
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of FirewallPolicyRuleNetworkProtocols.
     */
    ipProtocols?: pulumi.Input<pulumi.Input<string | enums.network.FirewallPolicyRuleNetworkProtocol>[]>;
    /**
     * Name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Rule Type.
     * Expected value is 'NetworkRule'.
     */
    ruleType: pulumi.Input<"NetworkRule">;
    /**
     * List of source IP addresses for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Rule condition of type network.
 */
export interface NetworkRuleConditionArgs {
    /**
     * Description of the rule condition.
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses or Service Tags.
     */
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination IpGroups for this rule.
     */
    destinationIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination ports.
     */
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of FirewallPolicyRuleConditionNetworkProtocols.
     */
    ipProtocols?: pulumi.Input<pulumi.Input<string | enums.network.FirewallPolicyRuleConditionNetworkProtocol>[]>;
    /**
     * Name of the rule condition.
     */
    name?: pulumi.Input<string>;
    /**
     * Rule Condition Type.
     * Expected value is 'NetworkRuleCondition'.
     */
    ruleConditionType: pulumi.Input<"NetworkRuleCondition">;
    /**
     * List of source IP addresses for this rule.
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of source IpGroups for this rule.
     */
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * NetworkSecurityGroup resource.
 */
export interface NetworkSecurityGroupArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * A collection of security rules of the network security group.
     */
    securityRules?: pulumi.Input<pulumi.Input<inputs.network.SecurityRuleArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * An NS record.
 */
export interface NsRecordArgs {
    /**
     * The name server name for this NS record.
     */
    nsdname?: pulumi.Input<string>;
}

/**
 * Office365 breakout categories.
 */
export interface O365BreakOutCategoryPoliciesArgs {
    /**
     * Flag to control allow category.
     */
    allow?: pulumi.Input<boolean>;
    /**
     * Flag to control default category.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Flag to control optimize category.
     */
    optimize?: pulumi.Input<boolean>;
}

/**
 * The Office365 breakout policy.
 */
export interface O365PolicyPropertiesArgs {
    /**
     * Office365 breakout categories.
     */
    breakOutCategories?: pulumi.Input<inputs.network.O365BreakOutCategoryPoliciesArgs>;
}

/**
 * Network Virtual Appliance Sku Properties.
 */
export interface Office365PolicyPropertiesArgs {
    /**
     * Office 365 breakout categories.
     */
    breakOutCategories?: pulumi.Input<inputs.network.BreakOutCategoryPoliciesArgs>;
}

/**
 * Describes a column to sort
 */
export interface OrderBy {
    /**
     * Describes the actual column name to sort by
     */
    field?: string;
    /**
     * Describes if results should be in ascending/descending order
     */
    order?: string | enums.network.FirewallPolicyIDPSQuerySortOrder;
}

/**
 * Describes a column to sort
 */
export interface OrderByArgs {
    /**
     * Describes the actual column name to sort by
     */
    field?: pulumi.Input<string>;
    /**
     * Describes if results should be in ascending/descending order
     */
    order?: pulumi.Input<string | enums.network.FirewallPolicyIDPSQuerySortOrder>;
}

/**
 * Outbound rule of the load balancer.
 */
export interface OutboundRuleArgs {
    /**
     * The number of outbound ports to be used for NAT.
     */
    allocatedOutboundPorts?: pulumi.Input<number>;
    /**
     * A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
     */
    backendAddressPool: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
     */
    enableTcpReset?: pulumi.Input<boolean>;
    /**
     * The Frontend IP addresses of the load balancer.
     */
    frontendIPConfigurations: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The timeout for the TCP idle connection.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The protocol for the outbound rule in load balancer.
     */
    protocol: pulumi.Input<string | enums.network.LoadBalancerOutboundRuleProtocol>;
}

/**
 * Allow to exclude some variable satisfy the condition for the WAF check.
 */
export interface OwaspCrsExclusionEntryArgs {
    /**
     * The variable to be excluded.
     */
    matchVariable: pulumi.Input<string | enums.network.OwaspCrsExclusionEntryMatchVariable>;
    /**
     * When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
     */
    selector: pulumi.Input<string>;
    /**
     * When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
     */
    selectorMatchOperator: pulumi.Input<string | enums.network.OwaspCrsExclusionEntrySelectorMatchOperator>;
}

/**
 * P2SConnectionConfiguration Resource.
 */
export interface P2SConnectionConfigurationArgs {
    /**
     * Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
     */
    enableInternetSecurity?: pulumi.Input<boolean>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The Routing Configuration indicating the associated and propagated route tables on this connection.
     */
    routingConfiguration?: pulumi.Input<inputs.network.RoutingConfigurationArgs>;
    /**
     * The reference to the address space resource which represents Address space for P2S VpnClient.
     */
    vpnClientAddressPool?: pulumi.Input<inputs.network.AddressSpaceArgs>;
}

/**
 * Radius client root certificate of P2SVpnServerConfiguration.
 */
export interface P2SVpnServerConfigRadiusClientRootCertificateArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The Radius client root certificate thumbprint.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * Radius Server root certificate of P2SVpnServerConfiguration.
 */
export interface P2SVpnServerConfigRadiusServerRootCertificateArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The certificate public data.
     */
    publicCertData: pulumi.Input<string>;
}

/**
 * VPN client revoked certificate of P2SVpnServerConfiguration.
 */
export interface P2SVpnServerConfigVpnClientRevokedCertificateArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The revoked VPN client certificate thumbprint.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * VPN client root certificate of P2SVpnServerConfiguration.
 */
export interface P2SVpnServerConfigVpnClientRootCertificateArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The certificate public data.
     */
    publicCertData: pulumi.Input<string>;
}

/**
 * Filter that is applied to packet capture request. Multiple filters can be applied.
 */
export interface PacketCaptureFilterArgs {
    /**
     * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     */
    localIPAddress?: pulumi.Input<string>;
    /**
     * Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     */
    localPort?: pulumi.Input<string>;
    /**
     * Protocol to be filtered on.
     */
    protocol?: pulumi.Input<string | enums.network.PcProtocol>;
    /**
     * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     */
    remoteIPAddress?: pulumi.Input<string>;
    /**
     * Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     */
    remotePort?: pulumi.Input<string>;
}
/**
 * packetCaptureFilterArgsProvideDefaults sets the appropriate defaults for PacketCaptureFilterArgs
 */
export function packetCaptureFilterArgsProvideDefaults(val: PacketCaptureFilterArgs): PacketCaptureFilterArgs {
    return {
        ...val,
        protocol: (val.protocol) ?? "Any",
    };
}

/**
 * The storage location for a packet capture session.
 */
export interface PacketCaptureStorageLocationArgs {
    /**
     * A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
     */
    filePath?: pulumi.Input<string>;
    /**
     * The ID of the storage account to save the packet capture session. Required if no local file path is provided.
     */
    storageId?: pulumi.Input<string>;
    /**
     * The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
     */
    storagePath?: pulumi.Input<string>;
}

export interface PerimeterBasedAccessRuleArgs {
    /**
     * NSP id in the ARM id format.
     */
    id?: pulumi.Input<string>;
}

/**
 * Defines contents of a web application firewall global configuration.
 */
export interface PolicySettingsArgs {
    /**
     * Maximum file upload size in Mb for WAF.
     */
    fileUploadLimitInMb?: pulumi.Input<number>;
    /**
     * Maximum request body size in Kb for WAF.
     */
    maxRequestBodySizeInKb?: pulumi.Input<number>;
    /**
     * The mode of the policy.
     */
    mode?: pulumi.Input<string | enums.network.WebApplicationFirewallMode>;
    /**
     * Whether to allow WAF to check request Body.
     */
    requestBodyCheck?: pulumi.Input<boolean>;
    /**
     * The state of the policy.
     */
    state?: pulumi.Input<string | enums.network.WebApplicationFirewallEnabledState>;
}

/**
 * PrivateDnsZoneConfig resource.
 */
export interface PrivateDnsZoneConfigArgs {
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource id of the private dns zone.
     */
    privateDnsZoneId?: pulumi.Input<string>;
}

/**
 * Private link service resource.
 */
export interface PrivateLinkServiceArgs {
    /**
     * The auto-approval list of the private link service.
     */
    autoApproval?: pulumi.Input<inputs.network.PrivateLinkServicePropertiesAutoApprovalArgs>;
    /**
     * Whether the private link service is enabled for proxy protocol or not.
     */
    enableProxyProtocol?: pulumi.Input<boolean>;
    /**
     * The extended location of the load balancer.
     */
    extendedLocation?: pulumi.Input<inputs.network.ExtendedLocationArgs>;
    /**
     * The list of Fqdn.
     */
    fqdns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * An array of private link service IP configurations.
     */
    ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.PrivateLinkServiceIpConfigurationArgs>[]>;
    /**
     * An array of references to the load balancer IP configurations.
     */
    loadBalancerFrontendIpConfigurations?: pulumi.Input<pulumi.Input<inputs.network.FrontendIPConfigurationArgs>[]>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The visibility list of the private link service.
     */
    visibility?: pulumi.Input<inputs.network.PrivateLinkServicePropertiesVisibilityArgs>;
}

/**
 * PrivateLinkServiceConnection resource.
 */
export interface PrivateLinkServiceConnectionArgs {
    /**
     * The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * A collection of read-only information about the state of the connection to the remote resource.
     */
    privateLinkServiceConnectionState?: pulumi.Input<inputs.network.PrivateLinkServiceConnectionStateArgs>;
    /**
     * The resource id of private link service.
     */
    privateLinkServiceId?: pulumi.Input<string>;
    /**
     * A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
     */
    requestMessage?: pulumi.Input<string>;
}

/**
 * A collection of information about the state of the connection between service consumer and provider.
 */
export interface PrivateLinkServiceConnectionStateArgs {
    /**
     * A message indicating if changes on the service provider require any updates on the consumer.
     */
    actionsRequired?: pulumi.Input<string>;
    /**
     * The reason for approval/rejection of the connection.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
     */
    status?: pulumi.Input<string>;
}

/**
 * The private link service ip configuration.
 */
export interface PrivateLinkServiceIpConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of private link service ip configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether the ip configuration is primary or not.
     */
    primary?: pulumi.Input<boolean>;
    /**
     * The private IP address of the IP configuration.
     */
    privateIPAddress?: pulumi.Input<string>;
    /**
     * Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
     */
    privateIPAddressVersion?: pulumi.Input<string | enums.network.IPVersion>;
    /**
     * The private IP address allocation method.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.IPAllocationMethod>;
    /**
     * The reference to the subnet resource.
     */
    subnet?: pulumi.Input<inputs.network.SubnetArgs>;
}
/**
 * privateLinkServiceIpConfigurationArgsProvideDefaults sets the appropriate defaults for PrivateLinkServiceIpConfigurationArgs
 */
export function privateLinkServiceIpConfigurationArgsProvideDefaults(val: PrivateLinkServiceIpConfigurationArgs): PrivateLinkServiceIpConfigurationArgs {
    return {
        ...val,
        subnet: (val.subnet ? pulumi.output(val.subnet).apply(inputs.network.subnetArgsProvideDefaults) : undefined),
    };
}

/**
 * The auto-approval list of the private link service.
 */
export interface PrivateLinkServicePropertiesAutoApprovalArgs {
    /**
     * The list of subscriptions.
     */
    subscriptions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The visibility list of the private link service.
 */
export interface PrivateLinkServicePropertiesVisibilityArgs {
    /**
     * The list of subscriptions.
     */
    subscriptions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * A load balancer probe.
 */
export interface ProbeArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
     */
    intervalInSeconds?: pulumi.Input<number>;
    /**
     * The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
     */
    numberOfProbes?: pulumi.Input<number>;
    /**
     * The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
     */
    port: pulumi.Input<number>;
    /**
     * The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
     */
    protocol: pulumi.Input<string | enums.network.ProbeProtocol>;
    /**
     * The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
     */
    requestPath?: pulumi.Input<string>;
}

/**
 * The list of RouteTables to advertise the routes to.
 */
export interface PropagatedRouteTableArgs {
    /**
     * The list of resource ids of all the RouteTables.
     */
    ids?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * The list of labels.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * DDoS custom policy properties.
 */
export interface ProtocolCustomSettingsFormatArgs {
    /**
     * The protocol for which the DDoS protection policy is being customized.
     */
    protocol?: pulumi.Input<string | enums.network.DdosCustomPolicyProtocol>;
    /**
     * The customized DDoS protection source rate.
     */
    sourceRateOverride?: pulumi.Input<string>;
    /**
     * The customized DDoS protection trigger rate.
     */
    triggerRateOverride?: pulumi.Input<string>;
    /**
     * The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
     */
    triggerSensitivityOverride?: pulumi.Input<string | enums.network.DdosCustomPolicyTriggerSensitivityOverride>;
}

/**
 * A PTR record.
 */
export interface PtrRecordArgs {
    /**
     * The PTR target domain name for this PTR record.
     */
    ptrdname?: pulumi.Input<string>;
}

/**
 * Public IP address resource.
 */
export interface PublicIPAddressArgs {
    /**
     * The DDoS protection custom policy associated with the public IP address.
     */
    ddosSettings?: pulumi.Input<inputs.network.DdosSettingsArgs>;
    /**
     * The FQDN of the DNS record associated with the public IP address.
     */
    dnsSettings?: pulumi.Input<inputs.network.PublicIPAddressDnsSettingsArgs>;
    /**
     * The extended location of the public ip address.
     */
    extendedLocation?: pulumi.Input<inputs.network.ExtendedLocationArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The idle timeout of the public IP address.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The IP address associated with the public IP address resource.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The list of tags associated with the public IP address.
     */
    ipTags?: pulumi.Input<pulumi.Input<inputs.network.IpTagArgs>[]>;
    /**
     * The linked public IP address of the public IP address resource.
     */
    linkedPublicIPAddress?: pulumi.Input<inputs.network.PublicIPAddressArgs>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Migration phase of Public IP Address.
     */
    migrationPhase?: pulumi.Input<string | enums.network.PublicIPAddressMigrationPhase>;
    /**
     * The NatGateway for the Public IP address.
     */
    natGateway?: pulumi.Input<inputs.network.NatGatewayArgs>;
    /**
     * The public IP address version.
     */
    publicIPAddressVersion?: pulumi.Input<string | enums.network.IPVersion>;
    /**
     * The public IP address allocation method.
     */
    publicIPAllocationMethod?: pulumi.Input<string | enums.network.IPAllocationMethod>;
    /**
     * The Public IP Prefix this Public IP Address should be allocated from.
     */
    publicIPPrefix?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The service public IP address of the public IP address resource.
     */
    servicePublicIPAddress?: pulumi.Input<inputs.network.PublicIPAddressArgs>;
    /**
     * The public IP address SKU.
     */
    sku?: pulumi.Input<inputs.network.PublicIPAddressSkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of availability zones denoting the IP allocated for the resource needs to come from.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Contains FQDN of the DNS record associated with the public IP address.
 */
export interface PublicIPAddressDnsSettingsArgs {
    /**
     * The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
     */
    domainNameLabel?: pulumi.Input<string>;
    /**
     * The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
     */
    reverseFqdn?: pulumi.Input<string>;
}

/**
 * SKU of a public IP address.
 */
export interface PublicIPAddressSkuArgs {
    /**
     * Name of a public IP address SKU.
     */
    name?: pulumi.Input<string | enums.network.PublicIPAddressSkuName>;
    /**
     * Tier of a public IP address SKU.
     */
    tier?: pulumi.Input<string | enums.network.PublicIPAddressSkuTier>;
}

/**
 * SKU of a public IP prefix.
 */
export interface PublicIPPrefixSkuArgs {
    /**
     * Name of a public IP prefix SKU.
     */
    name?: pulumi.Input<string | enums.network.PublicIPPrefixSkuName>;
    /**
     * Tier of a public IP prefix SKU.
     */
    tier?: pulumi.Input<string | enums.network.PublicIPPrefixSkuTier>;
}

/**
 * Qos Traffic Profiler IP Range properties.
 */
export interface QosIpRangeArgs {
    /**
     * End IP Address.
     */
    endIP?: pulumi.Input<string>;
    /**
     * Start IP Address.
     */
    startIP?: pulumi.Input<string>;
}

/**
 * Qos Traffic Profiler Port range properties.
 */
export interface QosPortRangeArgs {
    /**
     * Qos Port Range end.
     */
    end?: pulumi.Input<number>;
    /**
     * Qos Port Range start.
     */
    start?: pulumi.Input<number>;
}

/**
 * Radius Server Settings.
 */
export interface RadiusServerArgs {
    /**
     * The address of this radius server.
     */
    radiusServerAddress: pulumi.Input<string>;
    /**
     * The initial score assigned to this radius server.
     */
    radiusServerScore?: pulumi.Input<number>;
    /**
     * The secret used for this radius server.
     */
    radiusServerSecret?: pulumi.Input<string>;
}

/**
 * Describes Redirect Route.
 */
export interface RedirectConfigurationArgs {
    /**
     * Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
     */
    customFragment?: pulumi.Input<string>;
    /**
     * Host to redirect. Leave empty to use the incoming host as the destination host.
     */
    customHost?: pulumi.Input<string>;
    /**
     * The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
     */
    customPath?: pulumi.Input<string>;
    /**
     * The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
     */
    customQueryString?: pulumi.Input<string>;
    /**
     *
     * Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'.
     */
    odataType: pulumi.Input<"#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration">;
    /**
     * The protocol of the destination to where the traffic is redirected
     */
    redirectProtocol?: pulumi.Input<string | enums.network.FrontDoorRedirectProtocol>;
    /**
     * The redirect type the rule will use when redirecting traffic.
     */
    redirectType?: pulumi.Input<string | enums.network.FrontDoorRedirectType>;
}

/**
 * Parameters that define the retention policy for flow log.
 */
export interface RetentionPolicyParametersArgs {
    /**
     * Number of days to retain flow log records.
     */
    days?: pulumi.Input<number>;
    /**
     * Flag to enable/disable retention.
     */
    enabled?: pulumi.Input<boolean>;
}
/**
 * retentionPolicyParametersArgsProvideDefaults sets the appropriate defaults for RetentionPolicyParametersArgs
 */
export function retentionPolicyParametersArgsProvideDefaults(val: RetentionPolicyParametersArgs): RetentionPolicyParametersArgs {
    return {
        ...val,
        days: (val.days) ?? 0,
        enabled: (val.enabled) ?? false,
    };
}

/**
 * Route resource.
 */
export interface RouteArgs {
    /**
     * The destination CIDR to which the route applies.
     */
    addressPrefix?: pulumi.Input<string>;
    /**
     * A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
     */
    hasBgpOverride?: pulumi.Input<boolean>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
     */
    nextHopIpAddress?: pulumi.Input<string>;
    /**
     * The type of Azure hop the packet should be sent to.
     */
    nextHopType: pulumi.Input<string | enums.network.RouteNextHopType>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
}

/**
 * Route Filter Rule Resource.
 */
export interface RouteFilterRuleArgs {
    /**
     * The access type of the rule.
     */
    access: pulumi.Input<string | enums.network.Access>;
    /**
     * The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
     */
    communities: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The rule type of the rule.
     */
    routeFilterRuleType: pulumi.Input<string | enums.network.RouteFilterRuleType>;
}

/**
 * Route table resource.
 */
export interface RouteTableArgs {
    /**
     * Whether to disable the routes learned by BGP on that route table. True means disable.
     */
    disableBgpRoutePropagation?: pulumi.Input<boolean>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Collection of routes contained within a route table.
     */
    routes?: pulumi.Input<pulumi.Input<inputs.network.RouteArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Routing Configuration indicating the associated and propagated route tables for this connection.
 */
export interface RoutingConfigurationArgs {
    /**
     * The resource id RouteTable associated with this RoutingConfiguration.
     */
    associatedRouteTable?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The list of RouteTables to advertise the routes to.
     */
    propagatedRouteTables?: pulumi.Input<inputs.network.PropagatedRouteTableArgs>;
    /**
     * List of routes that control routing from VirtualHub into a virtual network connection.
     */
    vnetRoutes?: pulumi.Input<inputs.network.VnetRouteArgs>;
}

/**
 * The routing policy object used in a RoutingIntent resource.
 */
export interface RoutingPolicyArgs {
    /**
     * List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
     */
    destinations: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique name for the routing policy.
     */
    name: pulumi.Input<string>;
    /**
     * The next hop resource id on which this routing policy is applicable to.
     */
    nextHop: pulumi.Input<string>;
}

/**
 * A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
 */
export interface RoutingRuleArgs {
    /**
     * Protocol schemes to match for this rule
     */
    acceptedProtocols?: pulumi.Input<pulumi.Input<string | enums.network.FrontDoorProtocol>[]>;
    /**
     * Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
     */
    enabledState?: pulumi.Input<string | enums.network.RoutingRuleEnabledState>;
    /**
     * Frontend endpoints associated with this rule
     */
    frontendEndpoints?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The route patterns of the rule.
     */
    patternsToMatch?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to the routing configuration.
     */
    routeConfiguration?: pulumi.Input<inputs.network.ForwardingConfigurationArgs | inputs.network.RedirectConfigurationArgs>;
    /**
     * A reference to a specific Rules Engine Configuration to apply to this route.
     */
    rulesEngine?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Defines the Web Application Firewall policy for each routing rule (if applicable)
     */
    webApplicationFirewallPolicyLink?: pulumi.Input<inputs.network.RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs>;
}

/**
 * Defines the Web Application Firewall policy for each routing rule (if applicable)
 */
export interface RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
}

/**
 * One or more actions that will execute, modifying the request and/or response.
 */
export interface RulesEngineActionArgs {
    /**
     * A list of header actions to apply from the request from AFD to the origin.
     */
    requestHeaderActions?: pulumi.Input<pulumi.Input<inputs.network.HeaderActionArgs>[]>;
    /**
     * A list of header actions to apply from the response from AFD to the client.
     */
    responseHeaderActions?: pulumi.Input<pulumi.Input<inputs.network.HeaderActionArgs>[]>;
    /**
     * Override the route configuration.
     */
    routeConfigurationOverride?: pulumi.Input<inputs.network.ForwardingConfigurationArgs | inputs.network.RedirectConfigurationArgs>;
}

/**
 * Define a match condition
 */
export interface RulesEngineMatchConditionArgs {
    /**
     * Describes if this is negate condition or not
     */
    negateCondition?: pulumi.Input<boolean>;
    /**
     * Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
     */
    rulesEngineMatchValue: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Match Variable
     */
    rulesEngineMatchVariable: pulumi.Input<string | enums.network.RulesEngineMatchVariable>;
    /**
     * Describes operator to apply to the match condition.
     */
    rulesEngineOperator: pulumi.Input<string | enums.network.RulesEngineOperator>;
    /**
     * Name of selector in RequestHeader or RequestBody to be matched
     */
    selector?: pulumi.Input<string>;
    /**
     * List of transforms
     */
    transforms?: pulumi.Input<pulumi.Input<string | enums.network.Transform>[]>;
}

/**
 * Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
 */
export interface RulesEngineRuleArgs {
    /**
     * Actions to perform on the request and response if all of the match conditions are met.
     */
    action: pulumi.Input<inputs.network.RulesEngineActionArgs>;
    /**
     * A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
     */
    matchConditions?: pulumi.Input<pulumi.Input<inputs.network.RulesEngineMatchConditionArgs>[]>;
    /**
     * If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
     */
    matchProcessingBehavior?: pulumi.Input<string | enums.network.MatchProcessingBehavior>;
    /**
     * A name to refer to this specific rule.
     */
    name: pulumi.Input<string>;
    /**
     * A priority assigned to this rule. 
     */
    priority: pulumi.Input<number>;
}

/**
 * Network security rule.
 */
export interface SecurityRuleArgs {
    /**
     * The network traffic is allowed or denied.
     */
    access: pulumi.Input<string | enums.network.SecurityRuleAccess>;
    /**
     * A description for this rule. Restricted to 140 chars.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
     */
    destinationAddressPrefix?: pulumi.Input<string>;
    /**
     * The destination address prefixes. CIDR or destination IP ranges.
     */
    destinationAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The application security group specified as destination.
     */
    destinationApplicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationSecurityGroupArgs>[]>;
    /**
     * The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
     */
    destinationPortRange?: pulumi.Input<string>;
    /**
     * The destination port ranges.
     */
    destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
     */
    direction: pulumi.Input<string | enums.network.SecurityRuleDirection>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    priority?: pulumi.Input<number>;
    /**
     * Network protocol this rule applies to.
     */
    protocol: pulumi.Input<string | enums.network.SecurityRuleProtocol>;
    /**
     * The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
     */
    sourceAddressPrefix?: pulumi.Input<string>;
    /**
     * The CIDR or source IP ranges.
     */
    sourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The application security group specified as source.
     */
    sourceApplicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationSecurityGroupArgs>[]>;
    /**
     * The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
     */
    sourcePortRange?: pulumi.Input<string>;
    /**
     * The source port ranges.
     */
    sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
}

/**
 * Service End point policy resource.
 */
export interface ServiceEndpointPolicyArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * A collection of service endpoint policy definitions of the service endpoint policy.
     */
    serviceEndpointPolicyDefinitions?: pulumi.Input<pulumi.Input<inputs.network.ServiceEndpointPolicyDefinitionArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Service Endpoint policy definitions.
 */
export interface ServiceEndpointPolicyDefinitionArgs {
    /**
     * A description for this rule. Restricted to 140 chars.
     */
    description?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Service endpoint name.
     */
    service?: pulumi.Input<string>;
    /**
     * A list of service resources.
     */
    serviceResources?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The service endpoint properties.
 */
export interface ServiceEndpointPropertiesFormatArgs {
    /**
     * A list of locations.
     */
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the endpoint service.
     */
    service?: pulumi.Input<string>;
}

/**
 * The pricing tier of the web application firewall policy.
 */
export interface SkuArgs {
    /**
     * Name of the pricing tier.
     */
    name?: pulumi.Input<string | enums.network.SkuName>;
}

/**
 * An SOA record.
 */
export interface SoaRecordArgs {
    /**
     * The email contact for this SOA record.
     */
    email?: pulumi.Input<string>;
    /**
     * The expire time for this SOA record.
     */
    expireTime?: pulumi.Input<number>;
    /**
     * The domain name of the authoritative name server for this SOA record.
     */
    host?: pulumi.Input<string>;
    /**
     * The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
     */
    minimumTtl?: pulumi.Input<number>;
    /**
     * The refresh value for this SOA record.
     */
    refreshTime?: pulumi.Input<number>;
    /**
     * The retry time for this SOA record.
     */
    retryTime?: pulumi.Input<number>;
    /**
     * The serial number for this SOA record.
     */
    serialNumber?: pulumi.Input<number>;
}

/**
 * An SRV record.
 */
export interface SrvRecordArgs {
    /**
     * The port value for this SRV record.
     */
    port?: pulumi.Input<number>;
    /**
     * The priority value for this SRV record.
     */
    priority?: pulumi.Input<number>;
    /**
     * The target domain name for this SRV record.
     */
    target?: pulumi.Input<string>;
    /**
     * The weight value for this SRV record.
     */
    weight?: pulumi.Input<number>;
}

/**
 * List of all Static Routes.
 */
export interface StaticRouteArgs {
    /**
     * List of all address prefixes.
     */
    addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the StaticRoute that is unique within a VnetRoute.
     */
    name?: pulumi.Input<string>;
    /**
     * The ip address of the next hop.
     */
    nextHopIpAddress?: pulumi.Input<string>;
}

/**
 * A reference to a another resource
 */
export interface SubResource {
    /**
     * Resource Id.
     */
    id?: string;
}

/**
 * A reference to a another resource
 */
export interface SubResourceArgs {
    /**
     * Resource Id.
     */
    id?: pulumi.Input<string>;
}

/**
 * Subnet in a virtual network resource.
 */
export interface SubnetArgs {
    /**
     * The address prefix for the subnet.
     */
    addressPrefix?: pulumi.Input<string>;
    /**
     * List of address prefixes for the subnet.
     */
    addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Application gateway IP configurations of virtual network resource.
     */
    applicationGatewayIpConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayIPConfigurationArgs>[]>;
    /**
     * An array of references to the delegations on the subnet.
     */
    delegations?: pulumi.Input<pulumi.Input<inputs.network.DelegationArgs>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Array of IpAllocation which reference this subnet.
     */
    ipAllocations?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Nat gateway associated with this subnet.
     */
    natGateway?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The reference to the NetworkSecurityGroup resource.
     */
    networkSecurityGroup?: pulumi.Input<inputs.network.NetworkSecurityGroupArgs>;
    /**
     * Enable or Disable apply network policies on private end point in the subnet.
     */
    privateEndpointNetworkPolicies?: pulumi.Input<string | enums.network.VirtualNetworkPrivateEndpointNetworkPolicies>;
    /**
     * Enable or Disable apply network policies on private link service in the subnet.
     */
    privateLinkServiceNetworkPolicies?: pulumi.Input<string | enums.network.VirtualNetworkPrivateLinkServiceNetworkPolicies>;
    /**
     * The reference to the RouteTable resource.
     */
    routeTable?: pulumi.Input<inputs.network.RouteTableArgs>;
    /**
     * An array of service endpoint policies.
     */
    serviceEndpointPolicies?: pulumi.Input<pulumi.Input<inputs.network.ServiceEndpointPolicyArgs>[]>;
    /**
     * An array of service endpoints.
     */
    serviceEndpoints?: pulumi.Input<pulumi.Input<inputs.network.ServiceEndpointPropertiesFormatArgs>[]>;
    /**
     * Resource type.
     */
    type?: pulumi.Input<string>;
}
/**
 * subnetArgsProvideDefaults sets the appropriate defaults for SubnetArgs
 */
export function subnetArgsProvideDefaults(val: SubnetArgs): SubnetArgs {
    return {
        ...val,
        privateEndpointNetworkPolicies: (val.privateEndpointNetworkPolicies) ?? "Enabled",
        privateLinkServiceNetworkPolicies: (val.privateLinkServiceNetworkPolicies) ?? "Enabled",
    };
}

export interface SubscriptionIdArgs {
    /**
     * Subscription id in the ARM id format.
     */
    id?: pulumi.Input<string>;
}

/**
 * Describes a server to forward the DNS queries to.
 */
export interface TargetDnsServerArgs {
    /**
     * DNS server IP address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * DNS server port.
     */
    port?: pulumi.Input<number>;
}
/**
 * targetDnsServerArgsProvideDefaults sets the appropriate defaults for TargetDnsServerArgs
 */
export function targetDnsServerArgsProvideDefaults(val: TargetDnsServerArgs): TargetDnsServerArgs {
    return {
        ...val,
        port: (val.port) ?? 53,
    };
}

/**
 * Parameters that define the configuration of traffic analytics.
 */
export interface TrafficAnalyticsConfigurationPropertiesArgs {
    /**
     * Flag to enable/disable traffic analytics.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The interval in minutes which would decide how frequently TA service should do flow analytics.
     */
    trafficAnalyticsInterval?: pulumi.Input<number>;
    /**
     * The resource guid of the attached workspace.
     */
    workspaceId?: pulumi.Input<string>;
    /**
     * The location of the attached workspace.
     */
    workspaceRegion?: pulumi.Input<string>;
    /**
     * Resource Id of the attached workspace.
     */
    workspaceResourceId?: pulumi.Input<string>;
}

/**
 * Parameters that define the configuration of traffic analytics.
 */
export interface TrafficAnalyticsPropertiesArgs {
    /**
     * Parameters that define the configuration of traffic analytics.
     */
    networkWatcherFlowAnalyticsConfiguration?: pulumi.Input<inputs.network.TrafficAnalyticsConfigurationPropertiesArgs>;
}

/**
 * An traffic selector policy for a virtual network gateway connection.
 */
export interface TrafficSelectorPolicyArgs {
    /**
     * A collection of local address spaces in CIDR format.
     */
    localAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A collection of remote address spaces in CIDR format.
     */
    remoteAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * A TXT record.
 */
export interface TxtRecordArgs {
    /**
     * The text value of this TXT record.
     */
    value?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Describes a Virtual Machine.
 */
export interface VM {
    /**
     * Resource ID.
     */
    id?: string;
    /**
     * Resource location.
     */
    location?: string;
    /**
     * Resource tags.
     */
    tags?: {[key: string]: string};
}

/**
 * Describes a Virtual Machine.
 */
export interface VMArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Network Virtual Appliance Sku Properties.
 */
export interface VirtualApplianceSkuPropertiesArgs {
    /**
     * Virtual Appliance Scale Unit.
     */
    bundledScaleUnit?: pulumi.Input<string>;
    /**
     * Virtual Appliance Version.
     */
    marketPlaceVersion?: pulumi.Input<string>;
    /**
     * Virtual Appliance Vendor.
     */
    vendor?: pulumi.Input<string>;
}

/**
 * Virtual Hub identifier.
 */
export interface VirtualHubIdArgs {
    /**
     * The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
     */
    id?: pulumi.Input<string>;
}

/**
 * VirtualHub route.
 */
export interface VirtualHubRouteArgs {
    /**
     * List of all addressPrefixes.
     */
    addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * NextHop ip address.
     */
    nextHopIpAddress?: pulumi.Input<string>;
}

/**
 * VirtualHub route table.
 */
export interface VirtualHubRouteTableArgs {
    /**
     * List of all routes.
     */
    routes?: pulumi.Input<pulumi.Input<inputs.network.VirtualHubRouteArgs>[]>;
}

/**
 * VirtualHubRouteTableV2 Resource.
 */
export interface VirtualHubRouteTableV2Args {
    /**
     * List of all connections attached to this route table v2.
     */
    attachedConnections?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * List of all routes.
     */
    routes?: pulumi.Input<pulumi.Input<inputs.network.VirtualHubRouteV2Args>[]>;
}

/**
 * VirtualHubRouteTableV2 route.
 */
export interface VirtualHubRouteV2Args {
    /**
     * The type of destinations.
     */
    destinationType?: pulumi.Input<string>;
    /**
     * List of all destinations.
     */
    destinations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of next hops.
     */
    nextHopType?: pulumi.Input<string>;
    /**
     * NextHops ip address.
     */
    nextHops?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
 */
export interface VirtualNetworkBgpCommunitiesArgs {
    /**
     * The BGP community associated with the virtual network.
     */
    virtualNetworkCommunity: pulumi.Input<string>;
}

/**
 * A common class for general resource information.
 */
export interface VirtualNetworkGatewayArgs {
    /**
     * ActiveActive flag.
     */
    activeActive?: pulumi.Input<boolean>;
    /**
     * Virtual network gateway's BGP speaker settings.
     */
    bgpSettings?: pulumi.Input<inputs.network.BgpSettingsArgs>;
    /**
     * The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
     */
    customRoutes?: pulumi.Input<inputs.network.AddressSpaceArgs>;
    /**
     * Whether BGP is enabled for this virtual network gateway or not.
     */
    enableBgp?: pulumi.Input<boolean>;
    /**
     * Whether dns forwarding is enabled or not.
     */
    enableDnsForwarding?: pulumi.Input<boolean>;
    /**
     * Whether private IP needs to be enabled on this gateway for connections or not.
     */
    enablePrivateIpAddress?: pulumi.Input<boolean>;
    /**
     * The extended location of type local virtual network gateway.
     */
    extendedLocation?: pulumi.Input<inputs.network.ExtendedLocationArgs>;
    /**
     * The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
     */
    gatewayDefaultSite?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The type of this virtual network gateway.
     */
    gatewayType?: pulumi.Input<string | enums.network.VirtualNetworkGatewayType>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * IP configurations for virtual network gateway.
     */
    ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkGatewayIPConfigurationArgs>[]>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
     */
    sku?: pulumi.Input<inputs.network.VirtualNetworkGatewaySkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
     */
    vNetExtendedLocationResourceId?: pulumi.Input<string>;
    /**
     * The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
     */
    vpnClientConfiguration?: pulumi.Input<inputs.network.VpnClientConfigurationArgs>;
    /**
     * The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
     */
    vpnGatewayGeneration?: pulumi.Input<string | enums.network.VpnGatewayGeneration>;
    /**
     * The type of this virtual network gateway.
     */
    vpnType?: pulumi.Input<string | enums.network.VpnType>;
}

/**
 * IP configuration for virtual network gateway.
 */
export interface VirtualNetworkGatewayIPConfigurationArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The private IP address allocation method.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.IPAllocationMethod>;
    /**
     * The reference to the public IP resource.
     */
    publicIPAddress?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The reference to the subnet resource.
     */
    subnet?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * VirtualNetworkGatewaySku details.
 */
export interface VirtualNetworkGatewaySkuArgs {
    /**
     * Gateway SKU name.
     */
    name?: pulumi.Input<string | enums.network.VirtualNetworkGatewaySkuName>;
    /**
     * Gateway SKU tier.
     */
    tier?: pulumi.Input<string | enums.network.VirtualNetworkGatewaySkuTier>;
}

/**
 * Peerings in a virtual network resource.
 */
export interface VirtualNetworkPeeringArgs {
    /**
     * Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
     */
    allowForwardedTraffic?: pulumi.Input<boolean>;
    /**
     * If gateway links can be used in remote virtual networking to link to this virtual network.
     */
    allowGatewayTransit?: pulumi.Input<boolean>;
    /**
     * Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
     */
    allowVirtualNetworkAccess?: pulumi.Input<boolean>;
    /**
     * If we need to verify the provisioning state of the remote gateway.
     */
    doNotVerifyRemoteGateways?: pulumi.Input<boolean>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the virtual network peering.
     */
    peeringState?: pulumi.Input<string | enums.network.VirtualNetworkPeeringState>;
    /**
     * The reference to the remote virtual network address space.
     */
    remoteAddressSpace?: pulumi.Input<inputs.network.AddressSpaceArgs>;
    /**
     * The reference to the remote virtual network's Bgp Communities.
     */
    remoteBgpCommunities?: pulumi.Input<inputs.network.VirtualNetworkBgpCommunitiesArgs>;
    /**
     * The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
     */
    remoteVirtualNetwork?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Resource type.
     */
    type?: pulumi.Input<string>;
    /**
     * If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
     */
    useRemoteGateways?: pulumi.Input<boolean>;
}

/**
 * Virtual Network Tap resource.
 */
export interface VirtualNetworkTapArgs {
    /**
     * The reference to the private IP address on the internal Load Balancer that will receive the tap.
     */
    destinationLoadBalancerFrontEndIPConfiguration?: pulumi.Input<inputs.network.FrontendIPConfigurationArgs>;
    /**
     * The reference to the private IP Address of the collector nic that will receive the tap.
     */
    destinationNetworkInterfaceIPConfiguration?: pulumi.Input<inputs.network.NetworkInterfaceIPConfigurationArgs>;
    /**
     * The VXLAN destination port that will receive the tapped traffic.
     */
    destinationPort?: pulumi.Input<number>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
/**
 * virtualNetworkTapArgsProvideDefaults sets the appropriate defaults for VirtualNetworkTapArgs
 */
export function virtualNetworkTapArgsProvideDefaults(val: VirtualNetworkTapArgs): VirtualNetworkTapArgs {
    return {
        ...val,
        destinationLoadBalancerFrontEndIPConfiguration: (val.destinationLoadBalancerFrontEndIPConfiguration ? pulumi.output(val.destinationLoadBalancerFrontEndIPConfiguration).apply(inputs.network.frontendIPConfigurationArgsProvideDefaults) : undefined),
        destinationNetworkInterfaceIPConfiguration: (val.destinationNetworkInterfaceIPConfiguration ? pulumi.output(val.destinationNetworkInterfaceIPConfiguration).apply(inputs.network.networkInterfaceIPConfigurationArgsProvideDefaults) : undefined),
    };
}

/**
 * List of routes that control routing from VirtualHub into a virtual network connection.
 */
export interface VnetRouteArgs {
    /**
     * List of all Static Routes.
     */
    staticRoutes?: pulumi.Input<pulumi.Input<inputs.network.StaticRouteArgs>[]>;
}

/**
 * VpnClientConfiguration for P2S client.
 */
export interface VpnClientConfigurationArgs {
    /**
     * The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     */
    aadAudience?: pulumi.Input<string>;
    /**
     * The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     */
    aadIssuer?: pulumi.Input<string>;
    /**
     * The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     */
    aadTenant?: pulumi.Input<string>;
    /**
     * The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
     */
    radiusServerAddress?: pulumi.Input<string>;
    /**
     * The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
     */
    radiusServerSecret?: pulumi.Input<string>;
    /**
     * The radiusServers property for multiple radius server configuration.
     */
    radiusServers?: pulumi.Input<pulumi.Input<inputs.network.RadiusServerArgs>[]>;
    /**
     * VPN authentication types for the virtual network gateway..
     */
    vpnAuthenticationTypes?: pulumi.Input<pulumi.Input<string | enums.network.VpnAuthenticationType>[]>;
    /**
     * The reference to the address space resource which represents Address space for P2S VpnClient.
     */
    vpnClientAddressPool?: pulumi.Input<inputs.network.AddressSpaceArgs>;
    /**
     * VpnClientIpsecPolicies for virtual network gateway P2S client.
     */
    vpnClientIpsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicyArgs>[]>;
    /**
     * VpnClientProtocols for Virtual network gateway.
     */
    vpnClientProtocols?: pulumi.Input<pulumi.Input<string | enums.network.VpnClientProtocol>[]>;
    /**
     * VpnClientRevokedCertificate for Virtual network gateway.
     */
    vpnClientRevokedCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnClientRevokedCertificateArgs>[]>;
    /**
     * VpnClientRootCertificate for virtual network gateway.
     */
    vpnClientRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnClientRootCertificateArgs>[]>;
}

/**
 * VPN client revoked certificate of virtual network gateway.
 */
export interface VpnClientRevokedCertificateArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The revoked VPN client certificate thumbprint.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * VPN client root certificate of virtual network gateway.
 */
export interface VpnClientRootCertificateArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The certificate public data.
     */
    publicCertData: pulumi.Input<string>;
}

/**
 * VpnConnection Resource.
 */
export interface VpnConnectionArgs {
    /**
     * Expected bandwidth in MBPS.
     */
    connectionBandwidth?: pulumi.Input<number>;
    /**
     * DPD timeout in seconds for vpn connection.
     */
    dpdTimeoutSeconds?: pulumi.Input<number>;
    /**
     * EnableBgp flag.
     */
    enableBgp?: pulumi.Input<boolean>;
    /**
     * Enable internet security.
     */
    enableInternetSecurity?: pulumi.Input<boolean>;
    /**
     * EnableBgp flag.
     */
    enableRateLimiting?: pulumi.Input<boolean>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The IPSec Policies to be considered by this connection.
     */
    ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicyArgs>[]>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Id of the connected vpn site.
     */
    remoteVpnSite?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The Routing Configuration indicating the associated and propagated route tables on this connection.
     */
    routingConfiguration?: pulumi.Input<inputs.network.RoutingConfigurationArgs>;
    /**
     * Routing weight for vpn connection.
     */
    routingWeight?: pulumi.Input<number>;
    /**
     * SharedKey for the vpn connection.
     */
    sharedKey?: pulumi.Input<string>;
    /**
     * The Traffic Selector Policies to be considered by this connection.
     */
    trafficSelectorPolicies?: pulumi.Input<pulumi.Input<inputs.network.TrafficSelectorPolicyArgs>[]>;
    /**
     * Use local azure ip to initiate connection.
     */
    useLocalAzureIpAddress?: pulumi.Input<boolean>;
    /**
     * Enable policy-based traffic selectors.
     */
    usePolicyBasedTrafficSelectors?: pulumi.Input<boolean>;
    /**
     * Connection protocol used for this connection.
     */
    vpnConnectionProtocolType?: pulumi.Input<string | enums.network.VirtualNetworkGatewayConnectionProtocol>;
    /**
     * List of all vpn site link connections to the gateway.
     */
    vpnLinkConnections?: pulumi.Input<pulumi.Input<inputs.network.VpnSiteLinkConnectionArgs>[]>;
}

/**
 * VpnGatewayNatRule Resource.
 */
export interface VpnGatewayNatRuleArgs {
    /**
     * The private IP address external mapping for NAT.
     */
    externalMappings?: pulumi.Input<pulumi.Input<inputs.network.VpnNatRuleMappingArgs>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The private IP address internal mapping for NAT.
     */
    internalMappings?: pulumi.Input<pulumi.Input<inputs.network.VpnNatRuleMappingArgs>[]>;
    /**
     * The IP Configuration ID this NAT rule applies to.
     */
    ipConfigurationId?: pulumi.Input<string>;
    /**
     * The Source NAT direction of a VPN NAT.
     */
    mode?: pulumi.Input<string | enums.network.VpnNatRuleMode>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of NAT rule for VPN NAT.
     */
    type?: pulumi.Input<string | enums.network.VpnNatRuleType>;
}

/**
 * BGP settings details for a link.
 */
export interface VpnLinkBgpSettingsArgs {
    /**
     * The BGP speaker's ASN.
     */
    asn?: pulumi.Input<number>;
    /**
     * The BGP peering address and BGP identifier of this BGP speaker.
     */
    bgpPeeringAddress?: pulumi.Input<string>;
}

/**
 * List of properties of a link provider.
 */
export interface VpnLinkProviderPropertiesArgs {
    /**
     * Name of the link provider.
     */
    linkProviderName?: pulumi.Input<string>;
    /**
     * Link speed.
     */
    linkSpeedInMbps?: pulumi.Input<number>;
}

/**
 * Vpn NatRule mapping.
 */
export interface VpnNatRuleMappingArgs {
    /**
     * Address space for Vpn NatRule mapping.
     */
    addressSpace?: pulumi.Input<string>;
}

/**
 * Properties of the Radius client root certificate of VpnServerConfiguration.
 */
export interface VpnServerConfigRadiusClientRootCertificateArgs {
    /**
     * The certificate name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Radius client root certificate thumbprint.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * Properties of Radius Server root certificate of VpnServerConfiguration.
 */
export interface VpnServerConfigRadiusServerRootCertificateArgs {
    /**
     * The certificate name.
     */
    name?: pulumi.Input<string>;
    /**
     * The certificate public data.
     */
    publicCertData?: pulumi.Input<string>;
}

/**
 * Properties of the revoked VPN client certificate of VpnServerConfiguration.
 */
export interface VpnServerConfigVpnClientRevokedCertificateArgs {
    /**
     * The certificate name.
     */
    name?: pulumi.Input<string>;
    /**
     * The revoked VPN client certificate thumbprint.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * Properties of VPN client root certificate of VpnServerConfiguration.
 */
export interface VpnServerConfigVpnClientRootCertificateArgs {
    /**
     * The certificate name.
     */
    name?: pulumi.Input<string>;
    /**
     * The certificate public data.
     */
    publicCertData?: pulumi.Input<string>;
}

/**
 * VpnServerConfiguration PolicyGroup member
 */
export interface VpnServerConfigurationPolicyGroupMemberArgs {
    /**
     * The Vpn Policy member attribute type.
     */
    attributeType?: pulumi.Input<string | enums.network.VpnPolicyMemberAttributeType>;
    /**
     * The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
     */
    attributeValue?: pulumi.Input<string>;
    /**
     * Name of the VpnServerConfigurationPolicyGroupMember.
     */
    name?: pulumi.Input<string>;
}

/**
 * VpnSiteLink Resource.
 */
export interface VpnSiteLinkArgs {
    /**
     * The set of bgp properties.
     */
    bgpProperties?: pulumi.Input<inputs.network.VpnLinkBgpSettingsArgs>;
    /**
     * FQDN of vpn-site-link.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The ip-address for the vpn-site-link.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The link provider properties.
     */
    linkProperties?: pulumi.Input<inputs.network.VpnLinkProviderPropertiesArgs>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
}

/**
 * VpnSiteLinkConnection Resource.
 */
export interface VpnSiteLinkConnectionArgs {
    /**
     * Expected bandwidth in MBPS.
     */
    connectionBandwidth?: pulumi.Input<number>;
    /**
     * List of egress NatRules.
     */
    egressNatRules?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * EnableBgp flag.
     */
    enableBgp?: pulumi.Input<boolean>;
    /**
     * EnableBgp flag.
     */
    enableRateLimiting?: pulumi.Input<boolean>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * List of ingress NatRules.
     */
    ingressNatRules?: pulumi.Input<pulumi.Input<inputs.network.SubResourceArgs>[]>;
    /**
     * The IPSec Policies to be considered by this connection.
     */
    ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicyArgs>[]>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Routing weight for vpn connection.
     */
    routingWeight?: pulumi.Input<number>;
    /**
     * SharedKey for the vpn connection.
     */
    sharedKey?: pulumi.Input<string>;
    /**
     * Use local azure ip to initiate connection.
     */
    useLocalAzureIpAddress?: pulumi.Input<boolean>;
    /**
     * Enable policy-based traffic selectors.
     */
    usePolicyBasedTrafficSelectors?: pulumi.Input<boolean>;
    /**
     * Connection protocol used for this connection.
     */
    vpnConnectionProtocolType?: pulumi.Input<string | enums.network.VirtualNetworkGatewayConnectionProtocol>;
    /**
     * Vpn link connection mode.
     */
    vpnLinkConnectionMode?: pulumi.Input<string | enums.network.VpnLinkConnectionMode>;
    /**
     * Id of the connected vpn site link.
     */
    vpnSiteLink?: pulumi.Input<inputs.network.SubResourceArgs>;
}

/**
 * Defines contents of a web application rule.
 */
export interface WebApplicationFirewallCustomRuleArgs {
    /**
     * Type of Actions.
     */
    action: pulumi.Input<string | enums.network.WebApplicationFirewallAction>;
    /**
     * List of match conditions.
     */
    matchConditions: pulumi.Input<pulumi.Input<inputs.network.MatchConditionArgs>[]>;
    /**
     * The name of the resource that is unique within a policy. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
     */
    priority: pulumi.Input<number>;
    /**
     * The rule type.
     */
    ruleType: pulumi.Input<string | enums.network.WebApplicationFirewallRuleType>;
}

