// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
 */
export interface AddressSpaceArgs {
    /**
     * A list of address blocks reserved for this virtual network in CIDR notation.
     */
    addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Authentication certificates of an application gateway.
 */
export interface ApplicationGatewayAuthenticationCertificateArgs {
    /**
     * Certificate public data.
     */
    data?: pulumi.Input<string>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * Backend address of an application gateway.
 */
export interface ApplicationGatewayBackendAddressArgs {
    /**
     * Fully qualified domain name (FQDN).
     */
    fqdn?: pulumi.Input<string>;
    /**
     * IP address
     */
    ipAddress?: pulumi.Input<string>;
}

/**
 * Backend Address Pool of an application gateway.
 */
export interface ApplicationGatewayBackendAddressPoolArgs {
    /**
     * Backend addresses
     */
    backendAddresses?: pulumi.Input<pulumi.Input<inputs.network.v20160901.ApplicationGatewayBackendAddressArgs>[]>;
    /**
     * Collection of references to IPs defined in network interfaces.
     */
    backendIPConfigurations?: pulumi.Input<pulumi.Input<inputs.network.v20160901.NetworkInterfaceIPConfigurationArgs>[]>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * Backend address pool settings of an application gateway.
 */
export interface ApplicationGatewayBackendHttpSettingsArgs {
    /**
     * Array of references to application gateway authentication certificates.
     */
    authenticationCertificates?: pulumi.Input<pulumi.Input<inputs.network.v20160901.SubResourceArgs>[]>;
    /**
     * Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
     */
    cookieBasedAffinity?: pulumi.Input<string | enums.network.v20160901.ApplicationGatewayCookieBasedAffinity>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Port
     */
    port?: pulumi.Input<number>;
    /**
     * Probe resource of an application gateway.
     */
    probe?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * Protocol. Possible values are: 'Http' and 'Https'.
     */
    protocol?: pulumi.Input<string | enums.network.v20160901.ApplicationGatewayProtocol>;
    /**
     * Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
     */
    requestTimeout?: pulumi.Input<number>;
}

/**
 * Frontend IP configuration of an application gateway.
 */
export interface ApplicationGatewayFrontendIPConfigurationArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * PrivateIPAddress of the network interface IP Configuration.
     */
    privateIPAddress?: pulumi.Input<string>;
    /**
     * PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.v20160901.IPAllocationMethod>;
    /**
     * Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Reference of the PublicIP resource.
     */
    publicIPAddress?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * Reference of the subnet resource.
     */
    subnet?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
}

/**
 * Frontend port of an application gateway.
 */
export interface ApplicationGatewayFrontendPortArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Frontend port
     */
    port?: pulumi.Input<number>;
    /**
     * Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * Http listener of an application gateway.
 */
export interface ApplicationGatewayHttpListenerArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Frontend IP configuration resource of an application gateway.
     */
    frontendIPConfiguration?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * Frontend port resource of an application gateway.
     */
    frontendPort?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * Host name of HTTP listener.
     */
    hostName?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Protocol. Possible values are: 'Http' and 'Https'.
     */
    protocol?: pulumi.Input<string | enums.network.v20160901.ApplicationGatewayProtocol>;
    /**
     * Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Applicable only if protocol is https. Enables SNI for multi-hosting.
     */
    requireServerNameIndication?: pulumi.Input<boolean>;
    /**
     * SSL certificate resource of an application gateway.
     */
    sslCertificate?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
}

/**
 * IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
 */
export interface ApplicationGatewayIPConfigurationArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Reference of the subnet resource. A subnet from where application gateway gets its private address.
     */
    subnet?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
}

/**
 * Path rule of URL path map of an application gateway.
 */
export interface ApplicationGatewayPathRuleArgs {
    /**
     * Backend address pool resource of URL path map.
     */
    backendAddressPool?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * Backend http settings resource of URL path map.
     */
    backendHttpSettings?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Path rules of URL path map.
     */
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * Probe of the application gateway.
 */
export interface ApplicationGatewayProbeArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Host name to send the probe to.
     */
    host?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
     */
    interval?: pulumi.Input<number>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
     */
    path?: pulumi.Input<string>;
    /**
     * Protocol. Possible values are: 'Http' and 'Https'.
     */
    protocol?: pulumi.Input<string | enums.network.v20160901.ApplicationGatewayProtocol>;
    /**
     * Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
     */
    timeout?: pulumi.Input<number>;
    /**
     * The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

/**
 * Request routing rule of an application gateway.
 */
export interface ApplicationGatewayRequestRoutingRuleArgs {
    /**
     * Backend address pool resource of the application gateway. 
     */
    backendAddressPool?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * Frontend port resource of the application gateway.
     */
    backendHttpSettings?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Http listener resource of the application gateway. 
     */
    httpListener?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
     */
    ruleType?: pulumi.Input<string | enums.network.v20160901.ApplicationGatewayRequestRoutingRuleType>;
    /**
     * URL path map resource of the application gateway.
     */
    urlPathMap?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
}

/**
 * SKU of an application gateway
 */
export interface ApplicationGatewaySkuArgs {
    /**
     * Capacity (instance count) of an application gateway.
     */
    capacity?: pulumi.Input<number>;
    /**
     * Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
     */
    name?: pulumi.Input<string | enums.network.v20160901.ApplicationGatewaySkuName>;
    /**
     * Tier of an application gateway. Possible values are: 'Standard' and 'WAF'.
     */
    tier?: pulumi.Input<string | enums.network.v20160901.ApplicationGatewayTier>;
}

/**
 * SSL certificates of an application gateway.
 */
export interface ApplicationGatewaySslCertificateArgs {
    /**
     * Base-64 encoded pfx certificate. Only applicable in PUT Request.
     */
    data?: pulumi.Input<string>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Password for the pfx file specified in data. Only applicable in PUT request.
     */
    password?: pulumi.Input<string>;
    /**
     * Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
     */
    publicCertData?: pulumi.Input<string>;
}

/**
 * Application gateway SSL policy.
 */
export interface ApplicationGatewaySslPolicyArgs {
    /**
     * SSL protocols to be disabled on application gateway. Possible values are: 'TLSv1_0', 'TLSv1_1', and 'TLSv1_2'.
     */
    disabledSslProtocols?: pulumi.Input<pulumi.Input<string | enums.network.v20160901.ApplicationGatewaySslProtocol>[]>;
}

/**
 * UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
 */
export interface ApplicationGatewayUrlPathMapArgs {
    /**
     * Default backend address pool resource of URL path map.
     */
    defaultBackendAddressPool?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * Default backend http settings resource of URL path map.
     */
    defaultBackendHttpSettings?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Path rule of URL path map resource.
     */
    pathRules?: pulumi.Input<pulumi.Input<inputs.network.v20160901.ApplicationGatewayPathRuleArgs>[]>;
    /**
     * Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * Application gateway web application firewall configuration.
 */
export interface ApplicationGatewayWebApplicationFirewallConfigurationArgs {
    /**
     * Whether the web application firewall is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Web application firewall mode. Possible values are: 'Detection' and 'Prevention'.
     */
    firewallMode?: pulumi.Input<string | enums.network.v20160901.ApplicationGatewayFirewallMode>;
}

/**
 * Pool of backend IP addresses.
 */
export interface BackendAddressPoolArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

export interface BgpSettingsArgs {
    /**
     * The BGP speaker's ASN.
     */
    asn?: pulumi.Input<number>;
    /**
     * The BGP peering address and BGP identifier of this BGP speaker.
     */
    bgpPeeringAddress?: pulumi.Input<string>;
    /**
     * The weight added to routes learned from this BGP speaker.
     */
    peerWeight?: pulumi.Input<number>;
}

/**
 * DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
 */
export interface DhcpOptionsArgs {
    /**
     * The list of DNS servers IP addresses.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Authorization in an ExpressRouteCircuit resource.
 */
export interface ExpressRouteCircuitAuthorizationArgs {
    /**
     * The authorization key.
     */
    authorizationKey?: pulumi.Input<string>;
    /**
     * AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
     */
    authorizationUseStatus?: pulumi.Input<string | enums.network.v20160901.AuthorizationUseStatus>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * Peering in an ExpressRouteCircuit resource.
 */
export interface ExpressRouteCircuitPeeringArgs {
    /**
     * The Azure ASN.
     */
    azureASN?: pulumi.Input<number>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * The GatewayManager Etag.
     */
    gatewayManagerEtag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Gets whether the provider or the customer last modified the peering.
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * The Microsoft peering configuration.
     */
    microsoftPeeringConfig?: pulumi.Input<inputs.network.v20160901.ExpressRouteCircuitPeeringConfigArgs>;
    /**
     * Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The peer ASN.
     */
    peerASN?: pulumi.Input<number>;
    /**
     * The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
     */
    peeringType?: pulumi.Input<string | enums.network.v20160901.ExpressRouteCircuitPeeringType>;
    /**
     * The primary port.
     */
    primaryAzurePort?: pulumi.Input<string>;
    /**
     * The primary address prefix.
     */
    primaryPeerAddressPrefix?: pulumi.Input<string>;
    /**
     * Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The secondary port.
     */
    secondaryAzurePort?: pulumi.Input<string>;
    /**
     * The secondary address prefix.
     */
    secondaryPeerAddressPrefix?: pulumi.Input<string>;
    /**
     * The shared key.
     */
    sharedKey?: pulumi.Input<string>;
    /**
     * The state of peering. Possible values are: 'Disabled' and 'Enabled'
     */
    state?: pulumi.Input<string | enums.network.v20160901.ExpressRouteCircuitPeeringState>;
    /**
     * Gets peering stats.
     */
    stats?: pulumi.Input<inputs.network.v20160901.ExpressRouteCircuitStatsArgs>;
    /**
     * The VLAN ID.
     */
    vlanId?: pulumi.Input<number>;
}

/**
 * Specifies the peering configuration.
 */
export interface ExpressRouteCircuitPeeringConfigArgs {
    /**
     * The reference of AdvertisedPublicPrefixes.
     */
    advertisedPublicPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
     */
    advertisedPublicPrefixesState?: pulumi.Input<string | enums.network.v20160901.ExpressRouteCircuitPeeringAdvertisedPublicPrefixState>;
    /**
     * The CustomerASN of the peering.
     */
    customerASN?: pulumi.Input<number>;
    /**
     * The RoutingRegistryName of the configuration.
     */
    routingRegistryName?: pulumi.Input<string>;
}

/**
 * Contains ServiceProviderProperties in an ExpressRouteCircuit.
 */
export interface ExpressRouteCircuitServiceProviderPropertiesArgs {
    /**
     * The BandwidthInMbps.
     */
    bandwidthInMbps?: pulumi.Input<number>;
    /**
     * The peering location.
     */
    peeringLocation?: pulumi.Input<string>;
    /**
     * The serviceProviderName.
     */
    serviceProviderName?: pulumi.Input<string>;
}

/**
 * Contains SKU in an ExpressRouteCircuit.
 */
export interface ExpressRouteCircuitSkuArgs {
    /**
     * The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
     */
    family?: pulumi.Input<string | enums.network.v20160901.ExpressRouteCircuitSkuFamily>;
    /**
     * The name of the SKU.
     */
    name?: pulumi.Input<string>;
    /**
     * The tier of the SKU. Possible values are 'Standard' and 'Premium'.
     */
    tier?: pulumi.Input<string | enums.network.v20160901.ExpressRouteCircuitSkuTier>;
}

/**
 * Contains stats associated with the peering.
 */
export interface ExpressRouteCircuitStatsArgs {
    /**
     * Gets BytesIn of the peering.
     */
    primarybytesIn?: pulumi.Input<number>;
    /**
     * Gets BytesOut of the peering.
     */
    primarybytesOut?: pulumi.Input<number>;
    /**
     * Gets BytesIn of the peering.
     */
    secondarybytesIn?: pulumi.Input<number>;
    /**
     * Gets BytesOut of the peering.
     */
    secondarybytesOut?: pulumi.Input<number>;
}

/**
 * Frontend IP address of the load balancer.
 */
export interface FrontendIPConfigurationArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The private IP address of the IP configuration.
     */
    privateIPAddress?: pulumi.Input<string>;
    /**
     * The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.v20160901.IPAllocationMethod>;
    /**
     * Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The reference of the Public IP resource.
     */
    publicIPAddress?: pulumi.Input<inputs.network.v20160901.PublicIPAddressArgs>;
    /**
     * The reference of the subnet resource.
     */
    subnet?: pulumi.Input<inputs.network.v20160901.SubnetArgs>;
}

/**
 * Inbound NAT pool of the load balancer.
 */
export interface InboundNatPoolArgs {
    /**
     * The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
     */
    backendPort: pulumi.Input<number>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * A reference to frontend IP addresses.
     */
    frontendIPConfiguration?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
     */
    frontendPortRangeEnd: pulumi.Input<number>;
    /**
     * The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
     */
    frontendPortRangeStart: pulumi.Input<number>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
     */
    protocol: pulumi.Input<string | enums.network.v20160901.TransportProtocol>;
    /**
     * Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * Inbound NAT rule of the load balancer.
 */
export interface InboundNatRuleArgs {
    /**
     * The port used for the internal endpoint. Acceptable values range from 1 to 65535.
     */
    backendPort?: pulumi.Input<number>;
    /**
     * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
     */
    enableFloatingIP?: pulumi.Input<boolean>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * A reference to frontend IP addresses.
     */
    frontendIPConfiguration?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
     */
    frontendPort?: pulumi.Input<number>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
     */
    protocol?: pulumi.Input<string | enums.network.v20160901.TransportProtocol>;
    /**
     * Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * A load balancing rule for a load balancer.
 */
export interface LoadBalancingRuleArgs {
    /**
     * A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
     */
    backendAddressPool?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535. 
     */
    backendPort?: pulumi.Input<number>;
    /**
     * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
     */
    enableFloatingIP?: pulumi.Input<boolean>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * A reference to frontend IP addresses.
     */
    frontendIPConfiguration?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
     */
    frontendPort: pulumi.Input<number>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
     */
    loadDistribution?: pulumi.Input<string | enums.network.v20160901.LoadDistribution>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The reference of the load balancer probe used by the load balancing rule.
     */
    probe?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
     */
    protocol: pulumi.Input<string | enums.network.v20160901.TransportProtocol>;
    /**
     * Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * A common class for general resource information
 */
export interface LocalNetworkGatewayArgs {
    /**
     * Local network gateway's BGP speaker settings.
     */
    bgpSettings?: pulumi.Input<inputs.network.v20160901.BgpSettingsArgs>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * IP address of local network gateway.
     */
    gatewayIpAddress?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Local network site address space.
     */
    localNetworkAddressSpace: pulumi.Input<inputs.network.v20160901.AddressSpaceArgs>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource GUID property of the LocalNetworkGateway resource.
     */
    resourceGuid?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * DNS settings of a network interface.
 */
export interface NetworkInterfaceDnsSettingsArgs {
    /**
     * If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
     */
    appliedDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
     */
    internalDnsNameLabel?: pulumi.Input<string>;
    /**
     * Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
     */
    internalDomainNameSuffix?: pulumi.Input<string>;
    /**
     * Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
     */
    internalFqdn?: pulumi.Input<string>;
}

/**
 * IPConfiguration in a network interface.
 */
export interface NetworkInterfaceIPConfigurationArgs {
    /**
     * The reference of ApplicationGatewayBackendAddressPool resource.
     */
    applicationGatewayBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.v20160901.ApplicationGatewayBackendAddressPoolArgs>[]>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The reference of LoadBalancerBackendAddressPool resource.
     */
    loadBalancerBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.v20160901.BackendAddressPoolArgs>[]>;
    /**
     * A list of references of LoadBalancerInboundNatRules.
     */
    loadBalancerInboundNatRules?: pulumi.Input<pulumi.Input<inputs.network.v20160901.InboundNatRuleArgs>[]>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Gets whether this is a primary customer address on the network interface.
     */
    primary?: pulumi.Input<boolean>;
    privateIPAddress?: pulumi.Input<string>;
    /**
     * Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
     */
    privateIPAddressVersion?: pulumi.Input<string | enums.network.v20160901.IPVersion>;
    /**
     * Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.v20160901.IPAllocationMethod>;
    provisioningState?: pulumi.Input<string>;
    /**
     * Public IP address resource.
     */
    publicIPAddress?: pulumi.Input<inputs.network.v20160901.PublicIPAddressArgs>;
    /**
     * Subnet in a virtual network resource.
     */
    subnet?: pulumi.Input<inputs.network.v20160901.SubnetArgs>;
}

/**
 * NetworkSecurityGroup resource.
 */
export interface NetworkSecurityGroupArgs {
    /**
     * The default security rules of network security group.
     */
    defaultSecurityRules?: pulumi.Input<pulumi.Input<inputs.network.v20160901.SecurityRuleArgs>[]>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The resource GUID property of the network security group resource.
     */
    resourceGuid?: pulumi.Input<string>;
    /**
     * A collection of security rules of the network security group.
     */
    securityRules?: pulumi.Input<pulumi.Input<inputs.network.v20160901.SecurityRuleArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Outbound NAT pool of the load balancer.
 */
export interface OutboundNatRuleArgs {
    /**
     * The number of outbound ports to be used for NAT.
     */
    allocatedOutboundPorts?: pulumi.Input<number>;
    /**
     * A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
     */
    backendAddressPool: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * The Frontend IP addresses of the load balancer.
     */
    frontendIPConfigurations?: pulumi.Input<pulumi.Input<inputs.network.v20160901.SubResourceArgs>[]>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * Filter that is applied to packet capture request. Multiple filters can be applied.
 */
export interface PacketCaptureFilterArgs {
    /**
     * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     */
    localIPAddress?: pulumi.Input<string>;
    /**
     * Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     */
    localPort?: pulumi.Input<string>;
    /**
     * Protocol to be filtered on.
     */
    protocol?: pulumi.Input<string | enums.network.v20160901.PcProtocol>;
    /**
     * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     */
    remoteIPAddress?: pulumi.Input<string>;
    /**
     * Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     */
    remotePort?: pulumi.Input<string>;
}
/**
 * packetCaptureFilterArgsProvideDefaults sets the appropriate defaults for PacketCaptureFilterArgs
 */
export function packetCaptureFilterArgsProvideDefaults(val: PacketCaptureFilterArgs): PacketCaptureFilterArgs {
    return {
        ...val,
        protocol: (val.protocol) ?? "Any",
    };
}

/**
 * Describes the storage location for a packet capture session.
 */
export interface PacketCaptureStorageLocationArgs {
    /**
     * A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
     */
    filePath?: pulumi.Input<string>;
    /**
     * The ID of the storage account to save the packet capture session. Required if no local file path is provided.
     */
    storageId?: pulumi.Input<string>;
    /**
     * The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
     */
    storagePath?: pulumi.Input<string>;
}

/**
 * A load balancer probe.
 */
export interface ProbeArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
     */
    intervalInSeconds?: pulumi.Input<number>;
    /**
     * Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
     */
    numberOfProbes?: pulumi.Input<number>;
    /**
     * The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
     */
    port: pulumi.Input<number>;
    /**
     * The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
     */
    protocol: pulumi.Input<string | enums.network.v20160901.ProbeProtocol>;
    /**
     * Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
     */
    requestPath?: pulumi.Input<string>;
}

/**
 * Public IP address resource.
 */
export interface PublicIPAddressArgs {
    /**
     * The FQDN of the DNS record associated with the public IP address.
     */
    dnsSettings?: pulumi.Input<inputs.network.v20160901.PublicIPAddressDnsSettingsArgs>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The idle timeout of the public IP address.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    ipAddress?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
     */
    publicIPAddressVersion?: pulumi.Input<string | enums.network.v20160901.IPVersion>;
    /**
     * The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
     */
    publicIPAllocationMethod?: pulumi.Input<string | enums.network.v20160901.IPAllocationMethod>;
    /**
     * The resource GUID property of the public IP resource.
     */
    resourceGuid?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Contains FQDN of the DNS record associated with the public IP address
 */
export interface PublicIPAddressDnsSettingsArgs {
    /**
     * Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
     */
    domainNameLabel?: pulumi.Input<string>;
    /**
     * Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. 
     */
    reverseFqdn?: pulumi.Input<string>;
}

/**
 * ResourceNavigationLink resource.
 */
export interface ResourceNavigationLinkArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Link to the external resource
     */
    link?: pulumi.Input<string>;
    /**
     * Resource type of the linked resource.
     */
    linkedResourceType?: pulumi.Input<string>;
    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
}

/**
 * Route resource
 */
export interface RouteArgs {
    /**
     * The destination CIDR to which the route applies.
     */
    addressPrefix?: pulumi.Input<string>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
     */
    nextHopIpAddress?: pulumi.Input<string>;
    /**
     * The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
     */
    nextHopType: pulumi.Input<string | enums.network.v20160901.RouteNextHopType>;
    /**
     * The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
}

/**
 * Route table resource.
 */
export interface RouteTableArgs {
    /**
     * Gets a unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Collection of routes contained within a route table.
     */
    routes?: pulumi.Input<pulumi.Input<inputs.network.v20160901.RouteArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Network security rule.
 */
export interface SecurityRuleArgs {
    /**
     * The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
     */
    access: pulumi.Input<string | enums.network.v20160901.SecurityRuleAccess>;
    /**
     * A description for this rule. Restricted to 140 chars.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
     */
    destinationAddressPrefix: pulumi.Input<string>;
    /**
     * The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
     */
    destinationPortRange?: pulumi.Input<string>;
    /**
     * The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
     */
    direction: pulumi.Input<string | enums.network.v20160901.SecurityRuleDirection>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    priority?: pulumi.Input<number>;
    /**
     * Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
     */
    protocol: pulumi.Input<string | enums.network.v20160901.SecurityRuleProtocol>;
    /**
     * The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
     */
    sourceAddressPrefix: pulumi.Input<string>;
    /**
     * The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
     */
    sourcePortRange?: pulumi.Input<string>;
}

export interface SubResourceArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
}

/**
 * Subnet in a virtual network resource.
 */
export interface SubnetArgs {
    /**
     * The address prefix for the subnet.
     */
    addressPrefix?: pulumi.Input<string>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The reference of the NetworkSecurityGroup resource.
     */
    networkSecurityGroup?: pulumi.Input<inputs.network.v20160901.NetworkSecurityGroupArgs>;
    /**
     * The provisioning state of the resource.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Gets an array of references to the external resources using subnet.
     */
    resourceNavigationLinks?: pulumi.Input<pulumi.Input<inputs.network.v20160901.ResourceNavigationLinkArgs>[]>;
    /**
     * The reference of the RouteTable resource.
     */
    routeTable?: pulumi.Input<inputs.network.v20160901.RouteTableArgs>;
}

/**
 * A common class for general resource information
 */
export interface VirtualNetworkGatewayArgs {
    /**
     * ActiveActive flag
     */
    activeActive?: pulumi.Input<boolean>;
    /**
     * Virtual network gateway's BGP speaker settings.
     */
    bgpSettings?: pulumi.Input<inputs.network.v20160901.BgpSettingsArgs>;
    /**
     * Whether BGP is enabled for this virtual network gateway or not.
     */
    enableBgp?: pulumi.Input<boolean>;
    /**
     * Gets a unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
     */
    gatewayDefaultSite?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
     */
    gatewayType: pulumi.Input<string | enums.network.v20160901.VirtualNetworkGatewayType>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * IP configurations for virtual network gateway.
     */
    ipConfigurations: pulumi.Input<pulumi.Input<inputs.network.v20160901.VirtualNetworkGatewayIPConfigurationArgs>[]>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource GUID property of the VirtualNetworkGateway resource.
     */
    resourceGuid?: pulumi.Input<string>;
    /**
     * The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
     */
    sku?: pulumi.Input<inputs.network.v20160901.VirtualNetworkGatewaySkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
     */
    vpnClientConfiguration?: pulumi.Input<inputs.network.v20160901.VpnClientConfigurationArgs>;
    /**
     * The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
     */
    vpnType: pulumi.Input<string | enums.network.v20160901.VpnType>;
}

/**
 * IP configuration for virtual network gateway
 */
export interface VirtualNetworkGatewayIPConfigurationArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
     */
    privateIPAllocationMethod?: pulumi.Input<string | enums.network.v20160901.IPAllocationMethod>;
    /**
     * The reference of the public IP resource.
     */
    publicIPAddress: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * The reference of the subnet resource.
     */
    subnet: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
}

/**
 * VirtualNetworkGatewaySku details
 */
export interface VirtualNetworkGatewaySkuArgs {
    /**
     * The capacity.
     */
    capacity?: pulumi.Input<number>;
    /**
     * Gateway SKU name. Possible values are: 'Basic', 'HighPerformance','Standard', and 'UltraPerformance'.
     */
    name: pulumi.Input<string | enums.network.v20160901.VirtualNetworkGatewaySkuName>;
    /**
     * Gateway SKU tier. Possible values are: 'Basic', 'HighPerformance','Standard', and 'UltraPerformance'.
     */
    tier: pulumi.Input<string | enums.network.v20160901.VirtualNetworkGatewaySkuTier>;
}

/**
 * Peerings in a virtual network resource.
 */
export interface VirtualNetworkPeeringArgs {
    /**
     * Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
     */
    allowForwardedTraffic?: pulumi.Input<boolean>;
    /**
     * If gateway links can be used in remote virtual networking to link to this virtual network.
     */
    allowGatewayTransit?: pulumi.Input<boolean>;
    /**
     * Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
     */
    allowVirtualNetworkAccess?: pulumi.Input<boolean>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
     */
    peeringState?: pulumi.Input<string | enums.network.v20160901.VirtualNetworkPeeringState>;
    /**
     * The provisioning state of the resource.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The reference of the remote virtual network.
     */
    remoteVirtualNetwork?: pulumi.Input<inputs.network.v20160901.SubResourceArgs>;
    /**
     * If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
     */
    useRemoteGateways?: pulumi.Input<boolean>;
}

/**
 * VpnClientConfiguration for P2S client.
 */
export interface VpnClientConfigurationArgs {
    /**
     * The reference of the address space resource which represents Address space for P2S VpnClient.
     */
    vpnClientAddressPool?: pulumi.Input<inputs.network.v20160901.AddressSpaceArgs>;
    /**
     * VpnClientRevokedCertificate for Virtual network gateway.
     */
    vpnClientRevokedCertificates?: pulumi.Input<pulumi.Input<inputs.network.v20160901.VpnClientRevokedCertificateArgs>[]>;
    /**
     * VpnClientRootCertificate for virtual network gateway.
     */
    vpnClientRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.v20160901.VpnClientRootCertificateArgs>[]>;
}

/**
 * VPN client revoked certificate of virtual network gateway.
 */
export interface VpnClientRevokedCertificateArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The revoked VPN client certificate thumbprint.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * VPN client root certificate of virtual network gateway
 */
export interface VpnClientRootCertificateArgs {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The certificate public data.
     */
    publicCertData: pulumi.Input<string>;
}

