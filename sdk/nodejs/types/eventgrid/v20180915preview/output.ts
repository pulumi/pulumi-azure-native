// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * BoolEquals Filter
 */
export interface BoolEqualsAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'BoolEquals'.
     */
    operatorType: "BoolEquals";
    /**
     * The filter value
     */
    value?: boolean;
}

/**
 * Information about the event hub destination for an event subscription
 */
export interface EventHubEventSubscriptionDestinationResponse {
    /**
     * Type of the endpoint for the event subscription destination
     * Expected value is 'EventHub'.
     */
    endpointType: "EventHub";
    /**
     * The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.
     */
    resourceId?: string;
}

/**
 * Filter for the Event Subscription
 */
export interface EventSubscriptionFilterResponse {
    /**
     * A list of advanced filters.
     */
    advancedFilters?: (outputs.eventgrid.v20180915preview.BoolEqualsAdvancedFilterResponse | outputs.eventgrid.v20180915preview.NumberGreaterThanAdvancedFilterResponse | outputs.eventgrid.v20180915preview.NumberGreaterThanOrEqualsAdvancedFilterResponse | outputs.eventgrid.v20180915preview.NumberInAdvancedFilterResponse | outputs.eventgrid.v20180915preview.NumberLessThanAdvancedFilterResponse | outputs.eventgrid.v20180915preview.NumberLessThanOrEqualsAdvancedFilterResponse | outputs.eventgrid.v20180915preview.NumberNotInAdvancedFilterResponse | outputs.eventgrid.v20180915preview.StringBeginsWithAdvancedFilterResponse | outputs.eventgrid.v20180915preview.StringContainsAdvancedFilterResponse | outputs.eventgrid.v20180915preview.StringEndsWithAdvancedFilterResponse | outputs.eventgrid.v20180915preview.StringInAdvancedFilterResponse | outputs.eventgrid.v20180915preview.StringNotInAdvancedFilterResponse)[];
    /**
     * A list of applicable event types that need to be part of the event subscription. 
     * If it is desired to subscribe to all event types, the string "all" needs to be specified as an element in this list.
     */
    includedEventTypes?: string[];
    /**
     * Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter 
     * should be compared in a case sensitive manner.
     */
    isSubjectCaseSensitive?: boolean;
    /**
     * An optional string to filter events for an event subscription based on a resource path prefix.
     * The format of this depends on the publisher of the events. 
     * Wildcard characters are not supported in this path.
     */
    subjectBeginsWith?: string;
    /**
     * An optional string to filter events for an event subscription based on a resource path suffix.
     * Wildcard characters are not supported in this path.
     */
    subjectEndsWith?: string;
}
/**
 * eventSubscriptionFilterResponseProvideDefaults sets the appropriate defaults for EventSubscriptionFilterResponse
 */
export function eventSubscriptionFilterResponseProvideDefaults(val: EventSubscriptionFilterResponse): EventSubscriptionFilterResponse {
    return {
        ...val,
        isSubjectCaseSensitive: (val.isSubjectCaseSensitive) ?? false,
    };
}

/**
 * Information about the HybridConnection destination for an event subscription.
 */
export interface HybridConnectionEventSubscriptionDestinationResponse {
    /**
     * Type of the endpoint for the event subscription destination
     * Expected value is 'HybridConnection'.
     */
    endpointType: "HybridConnection";
    /**
     * The Azure Resource ID of an hybrid connection that is the destination of an event subscription.
     */
    resourceId?: string;
}

/**
 * This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id','topic' and 'eventTime' properties. This represents a field in the input event schema.
 */
export interface JsonFieldResponse {
    /**
     * Name of a field in the input event schema that's to be used as the source of a mapping.
     */
    sourceField?: string;
}

/**
 * This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'subject','eventType' and 'dataVersion' properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided.
 */
export interface JsonFieldWithDefaultResponse {
    /**
     * The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.
     */
    defaultValue?: string;
    /**
     * Name of a field in the input event schema that's to be used as the source of a mapping.
     */
    sourceField?: string;
}

/**
 * This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.
 */
export interface JsonInputSchemaMappingResponse {
    /**
     * The mapping information for the DataVersion property of the Event Grid Event.
     */
    dataVersion?: outputs.eventgrid.v20180915preview.JsonFieldWithDefaultResponse;
    /**
     * The mapping information for the EventTime property of the Event Grid Event.
     */
    eventTime?: outputs.eventgrid.v20180915preview.JsonFieldResponse;
    /**
     * The mapping information for the EventType property of the Event Grid Event.
     */
    eventType?: outputs.eventgrid.v20180915preview.JsonFieldWithDefaultResponse;
    /**
     * The mapping information for the Id property of the Event Grid Event.
     */
    id?: outputs.eventgrid.v20180915preview.JsonFieldResponse;
    /**
     * Type of the custom mapping
     * Expected value is 'Json'.
     */
    inputSchemaMappingType?: "Json";
    /**
     * The mapping information for the Subject property of the Event Grid Event.
     */
    subject?: outputs.eventgrid.v20180915preview.JsonFieldWithDefaultResponse;
    /**
     * The mapping information for the Topic property of the Event Grid Event.
     */
    topic?: outputs.eventgrid.v20180915preview.JsonFieldResponse;
}

/**
 * NumberGreaterThan Filter
 */
export interface NumberGreaterThanAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'NumberGreaterThan'.
     */
    operatorType: "NumberGreaterThan";
    /**
     * The filter value
     */
    value?: number;
}

/**
 * NumberGreaterThanOrEquals Filter
 */
export interface NumberGreaterThanOrEqualsAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'NumberGreaterThanOrEquals'.
     */
    operatorType: "NumberGreaterThanOrEquals";
    /**
     * The filter value
     */
    value?: number;
}

/**
 * NumberIn filter
 */
export interface NumberInAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'NumberIn'.
     */
    operatorType: "NumberIn";
    /**
     * The set of filter values
     */
    values?: number[];
}

/**
 * NumberLessThan Filter
 */
export interface NumberLessThanAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'NumberLessThan'.
     */
    operatorType: "NumberLessThan";
    /**
     * The filter value
     */
    value?: number;
}

/**
 * NumberLessThanOrEquals Filter
 */
export interface NumberLessThanOrEqualsAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'NumberLessThanOrEquals'.
     */
    operatorType: "NumberLessThanOrEquals";
    /**
     * The filter value
     */
    value?: number;
}

/**
 * NumberNotIn Filter
 */
export interface NumberNotInAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'NumberNotIn'.
     */
    operatorType: "NumberNotIn";
    /**
     * The set of filter values
     */
    values?: number[];
}

/**
 * Information about the retry policy for an event subscription
 */
export interface RetryPolicyResponse {
    /**
     * Time To Live (in minutes) for events.
     */
    eventTimeToLiveInMinutes?: number;
    /**
     * Maximum number of delivery retry attempts for events.
     */
    maxDeliveryAttempts?: number;
}

/**
 * Information about the storage blob based dead letter destination.
 */
export interface StorageBlobDeadLetterDestinationResponse {
    /**
     * The name of the Storage blob container that is the destination of the deadletter events
     */
    blobContainerName?: string;
    /**
     * Type of the endpoint for the dead letter destination
     * Expected value is 'StorageBlob'.
     */
    endpointType: "StorageBlob";
    /**
     * The Azure Resource ID of the storage account that is the destination of the deadletter events
     */
    resourceId?: string;
}

/**
 * Information about the storage queue destination for an event subscription.
 */
export interface StorageQueueEventSubscriptionDestinationResponse {
    /**
     * Type of the endpoint for the event subscription destination
     * Expected value is 'StorageQueue'.
     */
    endpointType: "StorageQueue";
    /**
     * The name of the Storage queue under a storage account that is the destination of an event subscription.
     */
    queueName?: string;
    /**
     * The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.
     */
    resourceId?: string;
}

/**
 * StringBeginsWith Filter
 */
export interface StringBeginsWithAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'StringBeginsWith'.
     */
    operatorType: "StringBeginsWith";
    /**
     * The set of filter values
     */
    values?: string[];
}

/**
 * StringContains Filter
 */
export interface StringContainsAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'StringContains'.
     */
    operatorType: "StringContains";
    /**
     * The set of filter values
     */
    values?: string[];
}

/**
 * StringEndsWith Filter
 */
export interface StringEndsWithAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'StringEndsWith'.
     */
    operatorType: "StringEndsWith";
    /**
     * The set of filter values
     */
    values?: string[];
}

/**
 * StringIn Filter
 */
export interface StringInAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'StringIn'.
     */
    operatorType: "StringIn";
    /**
     * The set of filter values
     */
    values?: string[];
}

/**
 * StringNotIn Filter
 */
export interface StringNotInAdvancedFilterResponse {
    /**
     * The filter key. Represents an event property with up to two levels of nesting.
     */
    key?: string;
    /**
     * Represents the filter operator
     * Expected value is 'StringNotIn'.
     */
    operatorType: "StringNotIn";
    /**
     * The set of filter values
     */
    values?: string[];
}

/**
 * Information about the webhook destination for an event subscription
 */
export interface WebHookEventSubscriptionDestinationResponse {
    /**
     * The base URL that represents the endpoint of the destination of an event subscription.
     */
    endpointBaseUrl: string;
    /**
     * Type of the endpoint for the event subscription destination
     * Expected value is 'WebHook'.
     */
    endpointType: "WebHook";
    /**
     * The URL that represents the endpoint of the destination of an event subscription.
     */
    endpointUrl?: string;
}

