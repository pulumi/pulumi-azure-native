// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

export interface EncryptionPropertyArgs {
    /**
     * Key vault properties.
     */
    keyVaultProperties?: pulumi.Input<inputs.containerregistry.v20191201preview.KeyVaultPropertiesArgs>;
    /**
     * Indicates whether or not the encryption is enabled for container registry.
     */
    status?: pulumi.Input<string | enums.containerregistry.v20191201preview.EncryptionStatus>;
}

/**
 * The properties of the export pipeline target.
 */
export interface ExportPipelineTargetPropertiesArgs {
    /**
     * They key vault secret uri to obtain the target storage SAS token.
     */
    keyVaultUri: pulumi.Input<string>;
    /**
     * The type of target for the export pipeline.
     */
    type?: pulumi.Input<string>;
    /**
     * The target uri of the export pipeline.
     * When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
     * When 'AzureStorageBlobContainer':  "https://accountName.blob.core.windows.net/containerName"
     */
    uri?: pulumi.Input<string>;
}

/**
 * IP rule with specific IP or IP range in CIDR format.
 */
export interface IPRuleArgs {
    /**
     * The action of IP ACL rule.
     */
    action?: pulumi.Input<string | enums.containerregistry.v20191201preview.Action>;
    /**
     * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
     */
    iPAddressOrRange: pulumi.Input<string>;
}
/**
 * ipruleArgsProvideDefaults sets the appropriate defaults for IPRuleArgs
 */
export function ipruleArgsProvideDefaults(val: IPRuleArgs): IPRuleArgs {
    return {
        ...val,
        action: (val.action) ?? "Allow",
    };
}

/**
 * Managed identity for the resource.
 */
export interface IdentityPropertiesArgs {
    /**
     * The principal ID of resource identity.
     */
    principalId?: pulumi.Input<string>;
    /**
     * The tenant ID of resource.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The identity type.
     */
    type?: pulumi.Input<enums.containerregistry.v20191201preview.ResourceIdentityType>;
    /**
     * The list of user identities associated with the resource. The user identity 
     * dictionary key references will be ARM resource ids in the form: 
     * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
     *     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<inputs.containerregistry.v20191201preview.UserIdentityPropertiesArgs>}>;
}

/**
 * The properties of the import pipeline source.
 */
export interface ImportPipelineSourcePropertiesArgs {
    /**
     * They key vault secret uri to obtain the source storage SAS token.
     */
    keyVaultUri: pulumi.Input<string>;
    /**
     * The type of source for the import pipeline.
     */
    type?: pulumi.Input<string | enums.containerregistry.v20191201preview.PipelineSourceType>;
    /**
     * The source uri of the import pipeline.
     * When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
     * When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
     */
    uri?: pulumi.Input<string>;
}
/**
 * importPipelineSourcePropertiesArgsProvideDefaults sets the appropriate defaults for ImportPipelineSourcePropertiesArgs
 */
export function importPipelineSourcePropertiesArgsProvideDefaults(val: ImportPipelineSourcePropertiesArgs): ImportPipelineSourcePropertiesArgs {
    return {
        ...val,
        type: (val.type) ?? "AzureStorageBlobContainer",
    };
}

export interface KeyVaultPropertiesArgs {
    /**
     * The client id of the identity which will be used to access key vault.
     */
    identity?: pulumi.Input<string>;
    /**
     * Key vault uri to access the encryption key.
     */
    keyIdentifier?: pulumi.Input<string>;
}

/**
 * The network rule set for a container registry.
 */
export interface NetworkRuleSetArgs {
    /**
     * The default action of allow or deny when no other rules match.
     */
    defaultAction: pulumi.Input<string | enums.containerregistry.v20191201preview.DefaultAction>;
    /**
     * The IP ACL rules.
     */
    ipRules?: pulumi.Input<pulumi.Input<inputs.containerregistry.v20191201preview.IPRuleArgs>[]>;
    /**
     * The virtual network rules.
     */
    virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.containerregistry.v20191201preview.VirtualNetworkRuleArgs>[]>;
}
/**
 * networkRuleSetArgsProvideDefaults sets the appropriate defaults for NetworkRuleSetArgs
 */
export function networkRuleSetArgsProvideDefaults(val: NetworkRuleSetArgs): NetworkRuleSetArgs {
    return {
        ...val,
        defaultAction: (val.defaultAction) ?? "Allow",
    };
}

/**
 * The request properties provided for a pipeline run.
 */
export interface PipelineRunRequestArgs {
    /**
     * List of source artifacts to be transferred by the pipeline. 
     * Specify an image by repository ('hello-world'). This will use the 'latest' tag.
     * Specify an image by tag ('hello-world:latest').
     * Specify an image by sha256-based manifest digest ('hello-world@sha256:abc123').
     */
    artifacts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The digest of the tar used to transfer the artifacts.
     */
    catalogDigest?: pulumi.Input<string>;
    /**
     * The resource ID of the pipeline to run.
     */
    pipelineResourceId?: pulumi.Input<string>;
    /**
     * The source properties of the pipeline run.
     */
    source?: pulumi.Input<inputs.containerregistry.v20191201preview.PipelineRunSourcePropertiesArgs>;
    /**
     * The target properties of the pipeline run.
     */
    target?: pulumi.Input<inputs.containerregistry.v20191201preview.PipelineRunTargetPropertiesArgs>;
}
/**
 * pipelineRunRequestArgsProvideDefaults sets the appropriate defaults for PipelineRunRequestArgs
 */
export function pipelineRunRequestArgsProvideDefaults(val: PipelineRunRequestArgs): PipelineRunRequestArgs {
    return {
        ...val,
        source: (val.source ? pulumi.output(val.source).apply(inputs.containerregistry.v20191201preview.pipelineRunSourcePropertiesArgsProvideDefaults) : undefined),
        target: (val.target ? pulumi.output(val.target).apply(inputs.containerregistry.v20191201preview.pipelineRunTargetPropertiesArgsProvideDefaults) : undefined),
    };
}

export interface PipelineRunSourcePropertiesArgs {
    /**
     * The name of the source.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of the source.
     */
    type?: pulumi.Input<string | enums.containerregistry.v20191201preview.PipelineRunSourceType>;
}
/**
 * pipelineRunSourcePropertiesArgsProvideDefaults sets the appropriate defaults for PipelineRunSourcePropertiesArgs
 */
export function pipelineRunSourcePropertiesArgsProvideDefaults(val: PipelineRunSourcePropertiesArgs): PipelineRunSourcePropertiesArgs {
    return {
        ...val,
        type: (val.type) ?? "AzureStorageBlob",
    };
}

export interface PipelineRunTargetPropertiesArgs {
    /**
     * The name of the target.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of the target.
     */
    type?: pulumi.Input<string | enums.containerregistry.v20191201preview.PipelineRunTargetType>;
}
/**
 * pipelineRunTargetPropertiesArgsProvideDefaults sets the appropriate defaults for PipelineRunTargetPropertiesArgs
 */
export function pipelineRunTargetPropertiesArgsProvideDefaults(val: PipelineRunTargetPropertiesArgs): PipelineRunTargetPropertiesArgs {
    return {
        ...val,
        type: (val.type) ?? "AzureStorageBlob",
    };
}

export interface PipelineSourceTriggerPropertiesArgs {
    /**
     * The current status of the source trigger.
     */
    status: pulumi.Input<string | enums.containerregistry.v20191201preview.TriggerStatus>;
}
/**
 * pipelineSourceTriggerPropertiesArgsProvideDefaults sets the appropriate defaults for PipelineSourceTriggerPropertiesArgs
 */
export function pipelineSourceTriggerPropertiesArgsProvideDefaults(val: PipelineSourceTriggerPropertiesArgs): PipelineSourceTriggerPropertiesArgs {
    return {
        ...val,
        status: (val.status) ?? "Enabled",
    };
}

export interface PipelineTriggerPropertiesArgs {
    /**
     * The source trigger properties of the pipeline.
     */
    sourceTrigger?: pulumi.Input<inputs.containerregistry.v20191201preview.PipelineSourceTriggerPropertiesArgs>;
}
/**
 * pipelineTriggerPropertiesArgsProvideDefaults sets the appropriate defaults for PipelineTriggerPropertiesArgs
 */
export function pipelineTriggerPropertiesArgsProvideDefaults(val: PipelineTriggerPropertiesArgs): PipelineTriggerPropertiesArgs {
    return {
        ...val,
        sourceTrigger: (val.sourceTrigger ? pulumi.output(val.sourceTrigger).apply(inputs.containerregistry.v20191201preview.pipelineSourceTriggerPropertiesArgsProvideDefaults) : undefined),
    };
}

/**
 * The policies for a container registry.
 */
export interface PoliciesArgs {
    /**
     * The quarantine policy for a container registry.
     */
    quarantinePolicy?: pulumi.Input<inputs.containerregistry.v20191201preview.QuarantinePolicyArgs>;
    /**
     * The retention policy for a container registry.
     */
    retentionPolicy?: pulumi.Input<inputs.containerregistry.v20191201preview.RetentionPolicyArgs>;
    /**
     * The content trust policy for a container registry.
     */
    trustPolicy?: pulumi.Input<inputs.containerregistry.v20191201preview.TrustPolicyArgs>;
}
/**
 * policiesArgsProvideDefaults sets the appropriate defaults for PoliciesArgs
 */
export function policiesArgsProvideDefaults(val: PoliciesArgs): PoliciesArgs {
    return {
        ...val,
        quarantinePolicy: (val.quarantinePolicy ? pulumi.output(val.quarantinePolicy).apply(inputs.containerregistry.v20191201preview.quarantinePolicyArgsProvideDefaults) : undefined),
        retentionPolicy: (val.retentionPolicy ? pulumi.output(val.retentionPolicy).apply(inputs.containerregistry.v20191201preview.retentionPolicyArgsProvideDefaults) : undefined),
        trustPolicy: (val.trustPolicy ? pulumi.output(val.trustPolicy).apply(inputs.containerregistry.v20191201preview.trustPolicyArgsProvideDefaults) : undefined),
    };
}

/**
 * The Private Endpoint resource.
 */
export interface PrivateEndpointArgs {
    /**
     * This is private endpoint resource created with Microsoft.Network resource provider.
     */
    id?: pulumi.Input<string>;
}

/**
 * The state of a private link service connection.
 */
export interface PrivateLinkServiceConnectionStateArgs {
    /**
     * A message indicating if changes on the service provider require any updates on the consumer.
     */
    actionsRequired?: pulumi.Input<string | enums.containerregistry.v20191201preview.ActionsRequired>;
    /**
     * The description for connection status. For example if connection is rejected it can indicate reason for rejection.
     */
    description?: pulumi.Input<string>;
    /**
     * The private link service connection status.
     */
    status?: pulumi.Input<string | enums.containerregistry.v20191201preview.ConnectionStatus>;
}

/**
 * The quarantine policy for a container registry.
 */
export interface QuarantinePolicyArgs {
    /**
     * The value that indicates whether the policy is enabled or not.
     */
    status?: pulumi.Input<string | enums.containerregistry.v20191201preview.PolicyStatus>;
}
/**
 * quarantinePolicyArgsProvideDefaults sets the appropriate defaults for QuarantinePolicyArgs
 */
export function quarantinePolicyArgsProvideDefaults(val: QuarantinePolicyArgs): QuarantinePolicyArgs {
    return {
        ...val,
        status: (val.status) ?? "disabled",
    };
}

/**
 * The retention policy for a container registry.
 */
export interface RetentionPolicyArgs {
    /**
     * The number of days to retain an untagged manifest after which it gets purged.
     */
    days?: pulumi.Input<number>;
    /**
     * The value that indicates whether the policy is enabled or not.
     */
    status?: pulumi.Input<string | enums.containerregistry.v20191201preview.PolicyStatus>;
}
/**
 * retentionPolicyArgsProvideDefaults sets the appropriate defaults for RetentionPolicyArgs
 */
export function retentionPolicyArgsProvideDefaults(val: RetentionPolicyArgs): RetentionPolicyArgs {
    return {
        ...val,
        days: (val.days) ?? 7,
        status: (val.status) ?? "disabled",
    };
}

/**
 * The SKU of a container registry.
 */
export interface SkuArgs {
    /**
     * The SKU name of the container registry. Required for registry creation.
     */
    name: pulumi.Input<string | enums.containerregistry.v20191201preview.SkuName>;
}

/**
 * The content trust policy for a container registry.
 */
export interface TrustPolicyArgs {
    /**
     * The value that indicates whether the policy is enabled or not.
     */
    status?: pulumi.Input<string | enums.containerregistry.v20191201preview.PolicyStatus>;
    /**
     * The type of trust policy.
     */
    type?: pulumi.Input<string | enums.containerregistry.v20191201preview.TrustPolicyType>;
}
/**
 * trustPolicyArgsProvideDefaults sets the appropriate defaults for TrustPolicyArgs
 */
export function trustPolicyArgsProvideDefaults(val: TrustPolicyArgs): TrustPolicyArgs {
    return {
        ...val,
        status: (val.status) ?? "disabled",
        type: (val.type) ?? "Notary",
    };
}

export interface UserIdentityPropertiesArgs {
    /**
     * The client id of user assigned identity.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The principal id of user assigned identity.
     */
    principalId?: pulumi.Input<string>;
}

/**
 * Virtual network rule.
 */
export interface VirtualNetworkRuleArgs {
    /**
     * The action of virtual network rule.
     */
    action?: pulumi.Input<string | enums.containerregistry.v20191201preview.Action>;
    /**
     * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
     */
    virtualNetworkResourceId: pulumi.Input<string>;
}
/**
 * virtualNetworkRuleArgsProvideDefaults sets the appropriate defaults for VirtualNetworkRuleArgs
 */
export function virtualNetworkRuleArgsProvideDefaults(val: VirtualNetworkRuleArgs): VirtualNetworkRuleArgs {
    return {
        ...val,
        action: (val.action) ?? "Allow",
    };
}

