// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const CompressionModeType = {
    Gzip: "gzip",
    None: "None",
} as const;

/**
 * Allow customers to select compress data(gzip) for exports. This setting will enable destination file compression scheme at runtime. By default set to None.
 */
export type CompressionModeType = (typeof CompressionModeType)[keyof typeof CompressionModeType];

export const DataOverwriteBehaviorType = {
    OverwritePreviousReport: "OverwritePreviousReport",
    CreateNewReport: "CreateNewReport",
} as const;

/**
 * Allow customers to select overwrite data(OverwritePreviousReport) for exports. This setting will enable overwrite data for the same month in customer storage account. By default set to CreateNewReport.
 */
export type DataOverwriteBehaviorType = (typeof DataOverwriteBehaviorType)[keyof typeof DataOverwriteBehaviorType];

export const DestinationType = {
    AzureBlob: "AzureBlob",
} as const;

/**
 * The export delivery destination type. Currently only 'AzureBlob' is supported.
 */
export type DestinationType = (typeof DestinationType)[keyof typeof DestinationType];

export const ExportType = {
    Usage: "Usage",
    ActualCost: "ActualCost",
    AmortizedCost: "AmortizedCost",
    FocusCost: "FocusCost",
    PriceSheet: "PriceSheet",
    ReservationTransactions: "ReservationTransactions",
    ReservationRecommendations: "ReservationRecommendations",
    ReservationDetails: "ReservationDetails",
} as const;

/**
 * The type of the export. Note that 'Usage' is equivalent to 'ActualCost' and is applicable to exports that do not yet provide data for charges or amortization for service reservations.
 */
export type ExportType = (typeof ExportType)[keyof typeof ExportType];

export const FilterItemNames = {
    ReservationScope: "ReservationScope",
    ResourceType: "ResourceType",
    LookBackPeriod: "LookBackPeriod",
} as const;

/**
 * The name of the filter. This is currently only supported for Export Definition type of ReservationRecommendations. Supported names are ['ReservationScope', 'LookBackPeriod', 'ResourceType']
 */
export type FilterItemNames = (typeof FilterItemNames)[keyof typeof FilterItemNames];

export const FormatType = {
    Csv: "Csv",
} as const;

/**
 * The format of the export being delivered. Currently only 'Csv' is supported.
 */
export type FormatType = (typeof FormatType)[keyof typeof FormatType];

export const GranularityType = {
    Daily: "Daily",
    Monthly: "Monthly",
} as const;

/**
 * The granularity of rows in the export. Currently 'Daily' is supported for most cases.
 */
export type GranularityType = (typeof GranularityType)[keyof typeof GranularityType];

export const RecurrenceType = {
    Daily: "Daily",
    Weekly: "Weekly",
    Monthly: "Monthly",
    Annually: "Annually",
} as const;

/**
 * The schedule recurrence.
 */
export type RecurrenceType = (typeof RecurrenceType)[keyof typeof RecurrenceType];

export const StatusType = {
    Active: "Active",
    Inactive: "Inactive",
    SystemSuspended: "SystemSuspended",
} as const;

/**
 * The status of the export's schedule. If 'Inactive', the export's schedule is paused. 'SystemSuspended' can only be set by export service.
 */
export type StatusType = (typeof StatusType)[keyof typeof StatusType];

export const SystemAssignedServiceIdentityType = {
    None: "None",
    SystemAssigned: "SystemAssigned",
} as const;

/**
 * Type of managed service identity (either system assigned, or none).
 */
export type SystemAssignedServiceIdentityType = (typeof SystemAssignedServiceIdentityType)[keyof typeof SystemAssignedServiceIdentityType];

export const TimeframeType = {
    MonthToDate: "MonthToDate",
    BillingMonthToDate: "BillingMonthToDate",
    TheLastMonth: "TheLastMonth",
    TheLastBillingMonth: "TheLastBillingMonth",
    WeekToDate: "WeekToDate",
    Custom: "Custom",
    TheCurrentMonth: "TheCurrentMonth",
} as const;

/**
 * The time frame for pulling data for the export. If custom, then a specific time period must be provided.
 */
export type TimeframeType = (typeof TimeframeType)[keyof typeof TimeframeType];
