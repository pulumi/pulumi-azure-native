// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// Export sub-modules:
import * as v20170815 from "./v20170815";
import * as v20190501 from "./v20190501";
import * as v20190601 from "./v20190601";
import * as v20190701 from "./v20190701";
import * as v20190801 from "./v20190801";
import * as v20191001 from "./v20191001";
import * as v20191101 from "./v20191101";
import * as v20200201 from "./v20200201";
import * as v20200301 from "./v20200301";
import * as v20200501 from "./v20200501";
import * as v20200601 from "./v20200601";
import * as v20200701 from "./v20200701";
import * as v20200801 from "./v20200801";
import * as v20200901 from "./v20200901";
import * as v20201101 from "./v20201101";
import * as v20201201 from "./v20201201";
import * as v20210201 from "./v20210201";
import * as v20210401 from "./v20210401";
import * as v20210401preview from "./v20210401preview";
import * as v20210601 from "./v20210601";
import * as v20210801 from "./v20210801";
import * as v20211001 from "./v20211001";
import * as v20220101 from "./v20220101";
import * as v20220301 from "./v20220301";

export {
    v20170815,
    v20190501,
    v20190601,
    v20190701,
    v20190801,
    v20191001,
    v20191101,
    v20200201,
    v20200301,
    v20200501,
    v20200601,
    v20200701,
    v20200801,
    v20200901,
    v20201101,
    v20201201,
    v20210201,
    v20210401,
    v20210401preview,
    v20210601,
    v20210801,
    v20211001,
    v20220101,
    v20220301,
};

export const ApplicationType = {
    SAP_HANA: "SAP-HANA",
} as const;

/**
 * Application Type
 */
export type ApplicationType = (typeof ApplicationType)[keyof typeof ApplicationType];

export const AvsDataStore = {
    /**
     * avsDataStore is enabled
     */
    Enabled: "Enabled",
    /**
     * avsDataStore is disabled
     */
    Disabled: "Disabled",
} as const;

/**
 * Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose
 */
export type AvsDataStore = (typeof AvsDataStore)[keyof typeof AvsDataStore];

export const ChownMode = {
    Restricted: "Restricted",
    Unrestricted: "Unrestricted",
} as const;

/**
 * This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.
 */
export type ChownMode = (typeof ChownMode)[keyof typeof ChownMode];

export const EnableSubvolumes = {
    /**
     * subvolumes are enabled
     */
    Enabled: "Enabled",
    /**
     * subvolumes are not enabled
     */
    Disabled: "Disabled",
} as const;

/**
 * Flag indicating whether subvolume operations are enabled on the volume
 */
export type EnableSubvolumes = (typeof EnableSubvolumes)[keyof typeof EnableSubvolumes];

export const EndpointType = {
    Src: "src",
    Dst: "dst",
} as const;

/**
 * Indicates whether the local volume is the source or destination for the Volume Replication
 */
export type EndpointType = (typeof EndpointType)[keyof typeof EndpointType];

export const NetworkFeatures = {
    /**
     * Basic network feature.
     */
    Basic: "Basic",
    /**
     * Standard network feature.
     */
    Standard: "Standard",
} as const;

/**
 * Basic network, or Standard features available to the volume.
 */
export type NetworkFeatures = (typeof NetworkFeatures)[keyof typeof NetworkFeatures];

export const QosType = {
    /**
     * qos type Auto
     */
    Auto: "Auto",
    /**
     * qos type Manual
     */
    Manual: "Manual",
} as const;

/**
 * The qos type of the pool
 */
export type QosType = (typeof QosType)[keyof typeof QosType];

export const ReplicationSchedule = {
    ReplicationSchedule_10minutely: "_10minutely",
    Hourly: "hourly",
    Daily: "daily",
} as const;

/**
 * Schedule
 */
export type ReplicationSchedule = (typeof ReplicationSchedule)[keyof typeof ReplicationSchedule];

export const SecurityStyle = {
    Ntfs: "ntfs",
    Unix: "unix",
} as const;

/**
 * The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol
 */
export type SecurityStyle = (typeof SecurityStyle)[keyof typeof SecurityStyle];

export const ServiceLevel = {
    /**
     * Standard service level
     */
    Standard: "Standard",
    /**
     * Premium service level
     */
    Premium: "Premium",
    /**
     * Ultra service level
     */
    Ultra: "Ultra",
    /**
     * Zone redundant storage service level
     */
    StandardZRS: "StandardZRS",
} as const;

/**
 * The service level of the file system
 */
export type ServiceLevel = (typeof ServiceLevel)[keyof typeof ServiceLevel];

export const Type = {
    /**
     * Default user quota
     */
    DefaultUserQuota: "DefaultUserQuota",
    /**
     * Default group quota
     */
    DefaultGroupQuota: "DefaultGroupQuota",
    /**
     * Individual user quota
     */
    IndividualUserQuota: "IndividualUserQuota",
    /**
     * Individual group quota
     */
    IndividualGroupQuota: "IndividualGroupQuota",
} as const;

/**
 * Type of quota
 */
export type Type = (typeof Type)[keyof typeof Type];
