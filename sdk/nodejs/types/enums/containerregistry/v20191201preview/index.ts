// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const Action = {
    Allow: "Allow",
} as const;

/**
 * The action of virtual network rule.
 */
export type Action = (typeof Action)[keyof typeof Action];

export const ActionsRequired = {
    None: "None",
    Recreate: "Recreate",
} as const;

/**
 * A message indicating if changes on the service provider require any updates on the consumer.
 */
export type ActionsRequired = (typeof ActionsRequired)[keyof typeof ActionsRequired];

export const ConnectionStatus = {
    Approved: "Approved",
    Pending: "Pending",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
} as const;

/**
 * The private link service connection status.
 */
export type ConnectionStatus = (typeof ConnectionStatus)[keyof typeof ConnectionStatus];

export const DefaultAction = {
    Allow: "Allow",
    Deny: "Deny",
} as const;

/**
 * The default action of allow or deny when no other rules match.
 */
export type DefaultAction = (typeof DefaultAction)[keyof typeof DefaultAction];

export const EncryptionStatus = {
    Enabled: "enabled",
    Disabled: "disabled",
} as const;

/**
 * Indicates whether or not the encryption is enabled for container registry.
 */
export type EncryptionStatus = (typeof EncryptionStatus)[keyof typeof EncryptionStatus];

export const PipelineOptions = {
    OverwriteTags: "OverwriteTags",
    OverwriteBlobs: "OverwriteBlobs",
    DeleteSourceBlobOnSuccess: "DeleteSourceBlobOnSuccess",
    ContinueOnErrors: "ContinueOnErrors",
} as const;

export type PipelineOptions = (typeof PipelineOptions)[keyof typeof PipelineOptions];

export const PipelineRunSourceType = {
    AzureStorageBlob: "AzureStorageBlob",
} as const;

/**
 * The type of the source.
 */
export type PipelineRunSourceType = (typeof PipelineRunSourceType)[keyof typeof PipelineRunSourceType];

export const PipelineRunTargetType = {
    AzureStorageBlob: "AzureStorageBlob",
} as const;

/**
 * The type of the target.
 */
export type PipelineRunTargetType = (typeof PipelineRunTargetType)[keyof typeof PipelineRunTargetType];

export const PipelineSourceType = {
    AzureStorageBlobContainer: "AzureStorageBlobContainer",
} as const;

/**
 * The type of source for the import pipeline.
 */
export type PipelineSourceType = (typeof PipelineSourceType)[keyof typeof PipelineSourceType];

export const PolicyStatus = {
    Enabled: "enabled",
    Disabled: "disabled",
} as const;

/**
 * The value that indicates whether the policy is enabled or not.
 */
export type PolicyStatus = (typeof PolicyStatus)[keyof typeof PolicyStatus];

export const PublicNetworkAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Whether or not public network access is allowed for the container registry.
 */
export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];

export const ResourceIdentityType = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned",
    None: "None",
} as const;

/**
 * The identity type.
 */
export type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];

export const SkuName = {
    Classic: "Classic",
    Basic: "Basic",
    Standard: "Standard",
    Premium: "Premium",
} as const;

/**
 * The SKU name of the container registry. Required for registry creation.
 */
export type SkuName = (typeof SkuName)[keyof typeof SkuName];

export const TriggerStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * The current status of the source trigger.
 */
export type TriggerStatus = (typeof TriggerStatus)[keyof typeof TriggerStatus];

export const TrustPolicyType = {
    Notary: "Notary",
} as const;

/**
 * The type of trust policy.
 */
export type TrustPolicyType = (typeof TrustPolicyType)[keyof typeof TrustPolicyType];

export const WebhookAction = {
    Push: "push",
    Delete: "delete",
    Quarantine: "quarantine",
    Chart_push: "chart_push",
    Chart_delete: "chart_delete",
} as const;

export type WebhookAction = (typeof WebhookAction)[keyof typeof WebhookAction];

export const WebhookStatus = {
    Enabled: "enabled",
    Disabled: "disabled",
} as const;

/**
 * The status of the webhook at the time the operation was called.
 */
export type WebhookStatus = (typeof WebhookStatus)[keyof typeof WebhookStatus];
