// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const CatalogItemSyncEnableStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
 */
export type CatalogItemSyncEnableStatus = (typeof CatalogItemSyncEnableStatus)[keyof typeof CatalogItemSyncEnableStatus];

export const CatalogItemType = {
    EnvironmentDefinition: "EnvironmentDefinition",
    ImageDefinition: "ImageDefinition",
} as const;

/**
 * Indicates catalog item types.
 */
export type CatalogItemType = (typeof CatalogItemType)[keyof typeof CatalogItemType];

export const CatalogSyncType = {
    Manual: "Manual",
    Scheduled: "Scheduled",
} as const;

/**
 * Indicates the type of sync that is configured for the catalog.
 */
export type CatalogSyncType = (typeof CatalogSyncType)[keyof typeof CatalogSyncType];

export const DevCenterResourceType = {
    Images: "Images",
    AttachedNetworks: "AttachedNetworks",
    Skus: "Skus",
} as const;

/**
 * Indicates dev center resource types.
 */
export type DevCenterResourceType = (typeof DevCenterResourceType)[keyof typeof DevCenterResourceType];

export const DevboxDisksEncryptionEnableStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Devbox disk encryption enable or disable status. Indicates if Devbox disks encryption using DevCenter CMK is enabled or not.
 */
export type DevboxDisksEncryptionEnableStatus = (typeof DevboxDisksEncryptionEnableStatus)[keyof typeof DevboxDisksEncryptionEnableStatus];

export const DomainJoinType = {
    HybridAzureADJoin: "HybridAzureADJoin",
    AzureADJoin: "AzureADJoin",
    None: "None",
} as const;

/**
 * AAD Join type.
 */
export type DomainJoinType = (typeof DomainJoinType)[keyof typeof DomainJoinType];

export const EnvironmentTypeEnableStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Defines whether this Environment Type can be used in this Project.
 */
export type EnvironmentTypeEnableStatus = (typeof EnvironmentTypeEnableStatus)[keyof typeof EnvironmentTypeEnableStatus];

export const HibernateSupport = {
    Disabled: "Disabled",
    Enabled: "Enabled",
} as const;

/**
 * Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate
 */
export type HibernateSupport = (typeof HibernateSupport)[keyof typeof HibernateSupport];

export const IdentityType = {
    SystemAssignedIdentity: "systemAssignedIdentity",
    UserAssignedIdentity: "userAssignedIdentity",
    DelegatedResourceIdentity: "delegatedResourceIdentity",
} as const;

/**
 * Values can be systemAssignedIdentity or userAssignedIdentity
 */
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];

export const InstallAzureMonitorAgentEnableStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
 */
export type InstallAzureMonitorAgentEnableStatus = (typeof InstallAzureMonitorAgentEnableStatus)[keyof typeof InstallAzureMonitorAgentEnableStatus];

export const LicenseType = {
    Windows_Client: "Windows_Client",
} as const;

/**
 * Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
 */
export type LicenseType = (typeof LicenseType)[keyof typeof LicenseType];

export const LocalAdminStatus = {
    Disabled: "Disabled",
    Enabled: "Enabled",
} as const;

/**
 * Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
 */
export type LocalAdminStatus = (typeof LocalAdminStatus)[keyof typeof LocalAdminStatus];

export const ManagedServiceIdentityType = {
    None: "None",
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned",
} as const;

/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];

export const MicrosoftHostedNetworkEnableStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
 */
export type MicrosoftHostedNetworkEnableStatus = (typeof MicrosoftHostedNetworkEnableStatus)[keyof typeof MicrosoftHostedNetworkEnableStatus];

export const PlanMemberType = {
    User: "User",
    Group: "Group",
} as const;

/**
 * The type of the member (user, group)
 */
export type PlanMemberType = (typeof PlanMemberType)[keyof typeof PlanMemberType];

export const PoolDevBoxDefinitionType = {
    Reference: "Reference",
    Value: "Value",
} as const;

/**
 * Indicates if the pool is created from an existing Dev Box Definition or if one is provided directly.
 */
export type PoolDevBoxDefinitionType = (typeof PoolDevBoxDefinitionType)[keyof typeof PoolDevBoxDefinitionType];

export const ScheduleEnableStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Indicates whether or not this scheduled task is enabled.
 */
export type ScheduleEnableStatus = (typeof ScheduleEnableStatus)[keyof typeof ScheduleEnableStatus];

export const ScheduledFrequency = {
    Daily: "Daily",
} as const;

/**
 * The frequency of this scheduled task.
 */
export type ScheduledFrequency = (typeof ScheduledFrequency)[keyof typeof ScheduledFrequency];

export const ScheduledType = {
    StopDevBox: "StopDevBox",
} as const;

/**
 * Supported type this scheduled task represents.
 */
export type ScheduledType = (typeof ScheduledType)[keyof typeof ScheduledType];

export const SingleSignOnStatus = {
    Disabled: "Disabled",
    Enabled: "Enabled",
} as const;

/**
 * Indicates whether Dev Boxes in this pool are created with single sign on enabled. The also requires that single sign on be enabled on the tenant.
 */
export type SingleSignOnStatus = (typeof SingleSignOnStatus)[keyof typeof SingleSignOnStatus];

export const SkuTier = {
    Free: "Free",
    Basic: "Basic",
    Standard: "Standard",
    Premium: "Premium",
} as const;

/**
 * This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
 */
export type SkuTier = (typeof SkuTier)[keyof typeof SkuTier];

export const StopOnDisconnectEnableStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
 */
export type StopOnDisconnectEnableStatus = (typeof StopOnDisconnectEnableStatus)[keyof typeof StopOnDisconnectEnableStatus];

export const StopOnNoConnectEnableStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Enables the feature to stop a started Dev Box when it has not been connected to, once the grace period has lapsed.
 */
export type StopOnNoConnectEnableStatus = (typeof StopOnNoConnectEnableStatus)[keyof typeof StopOnNoConnectEnableStatus];

export const VirtualNetworkType = {
    Managed: "Managed",
    Unmanaged: "Unmanaged",
} as const;

/**
 * Indicates whether the pool uses a Virtual Network managed by Microsoft or a customer provided network.
 */
export type VirtualNetworkType = (typeof VirtualNetworkType)[keyof typeof VirtualNetworkType];
