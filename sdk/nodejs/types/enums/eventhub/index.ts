// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// Export sub-modules:
import * as v20140901 from "./v20140901";
import * as v20150801 from "./v20150801";
import * as v20170401 from "./v20170401";
import * as v20180101preview from "./v20180101preview";
import * as v20210101preview from "./v20210101preview";
import * as v20210601preview from "./v20210601preview";
import * as v20211101 from "./v20211101";
import * as v20220101preview from "./v20220101preview";
import * as v20221001preview from "./v20221001preview";

export {
    v20140901,
    v20150801,
    v20170401,
    v20180101preview,
    v20210101preview,
    v20210601preview,
    v20211101,
    v20220101preview,
    v20221001preview,
};

export const AccessRights = {
    Manage: "Manage",
    Send: "Send",
    Listen: "Listen",
} as const;

export type AccessRights = (typeof AccessRights)[keyof typeof AccessRights];

export const ClusterSkuName = {
    Dedicated: "Dedicated",
} as const;

/**
 * Name of this SKU.
 */
export type ClusterSkuName = (typeof ClusterSkuName)[keyof typeof ClusterSkuName];

export const DefaultAction = {
    Allow: "Allow",
    Deny: "Deny",
} as const;

/**
 * Default Action for Network Rule Set
 */
export type DefaultAction = (typeof DefaultAction)[keyof typeof DefaultAction];

export const EncodingCaptureDescription = {
    Avro: "Avro",
    AvroDeflate: "AvroDeflate",
} as const;

/**
 * Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
 */
export type EncodingCaptureDescription = (typeof EncodingCaptureDescription)[keyof typeof EncodingCaptureDescription];

export const EndPointProvisioningState = {
    Creating: "Creating",
    Updating: "Updating",
    Deleting: "Deleting",
    Succeeded: "Succeeded",
    Canceled: "Canceled",
    Failed: "Failed",
} as const;

/**
 * Provisioning state of the Private Endpoint Connection.
 */
export type EndPointProvisioningState = (typeof EndPointProvisioningState)[keyof typeof EndPointProvisioningState];

export const EntityStatus = {
    Active: "Active",
    Disabled: "Disabled",
    Restoring: "Restoring",
    SendDisabled: "SendDisabled",
    ReceiveDisabled: "ReceiveDisabled",
    Creating: "Creating",
    Deleting: "Deleting",
    Renaming: "Renaming",
    Unknown: "Unknown",
} as const;

/**
 * Enumerates the possible values for the status of the Event Hub.
 */
export type EntityStatus = (typeof EntityStatus)[keyof typeof EntityStatus];

export const KeySource = {
    Microsoft_KeyVault: "Microsoft.KeyVault",
} as const;

/**
 * Enumerates the possible value of keySource for Encryption
 */
export type KeySource = (typeof KeySource)[keyof typeof KeySource];

export const ManagedServiceIdentityType = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned",
    None: "None",
} as const;

/**
 * Type of managed service identity.
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];

export const NetworkRuleIPAction = {
    Allow: "Allow",
} as const;

/**
 * The IP Filter Action
 */
export type NetworkRuleIPAction = (typeof NetworkRuleIPAction)[keyof typeof NetworkRuleIPAction];

export const PrivateLinkConnectionStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
} as const;

/**
 * Status of the connection.
 */
export type PrivateLinkConnectionStatus = (typeof PrivateLinkConnectionStatus)[keyof typeof PrivateLinkConnectionStatus];

export const PublicNetworkAccessFlag = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * This determines if traffic is allowed over public network. By default it is enabled.
 */
export type PublicNetworkAccessFlag = (typeof PublicNetworkAccessFlag)[keyof typeof PublicNetworkAccessFlag];

export const SchemaCompatibility = {
    None: "None",
    Backward: "Backward",
    Forward: "Forward",
} as const;

export type SchemaCompatibility = (typeof SchemaCompatibility)[keyof typeof SchemaCompatibility];

export const SchemaType = {
    Unknown: "Unknown",
    Avro: "Avro",
} as const;

export type SchemaType = (typeof SchemaType)[keyof typeof SchemaType];

export const SkuName = {
    Basic: "Basic",
    Standard: "Standard",
    Premium: "Premium",
} as const;

/**
 * Name of this SKU.
 */
export type SkuName = (typeof SkuName)[keyof typeof SkuName];

export const SkuTier = {
    Basic: "Basic",
    Standard: "Standard",
    Premium: "Premium",
} as const;

/**
 * The billing tier of this particular SKU.
 */
export type SkuTier = (typeof SkuTier)[keyof typeof SkuTier];
