// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// Export sub-modules:
import * as v20190801preview from "./v20190801preview";
import * as v20191101 from "./v20191101";
import * as v20200301 from "./v20200301";
import * as v20201001 from "./v20201001";
import * as v20210301 from "./v20210301";
import * as v20210501 from "./v20210501";
import * as v20210901 from "./v20210901";
import * as v20220101 from "./v20220101";
import * as v20220501 from "./v20220501";
import * as v20230101 from "./v20230101";
import * as v20230301preview from "./v20230301preview";

export {
    v20190801preview,
    v20191101,
    v20200301,
    v20201001,
    v20210301,
    v20210501,
    v20210901,
    v20220101,
    v20220501,
    v20230101,
    v20230301preview,
};

export const CacheIdentityType = {
    SystemAssigned: "SystemAssigned",
    None: "None",
} as const;

/**
 * The type of identity used for the cache
 */
export type CacheIdentityType = (typeof CacheIdentityType)[keyof typeof CacheIdentityType];

export const NfsAccessRuleAccess = {
    No: "no",
    Ro: "ro",
    Rw: "rw",
} as const;

/**
 * Access allowed by this rule.
 */
export type NfsAccessRuleAccess = (typeof NfsAccessRuleAccess)[keyof typeof NfsAccessRuleAccess];

export const NfsAccessRuleScope = {
    Default: "default",
    Network: "network",
    Host: "host",
} as const;

/**
 * Scope for this rule. The scope and filter determine which clients match the rule.
 */
export type NfsAccessRuleScope = (typeof NfsAccessRuleScope)[keyof typeof NfsAccessRuleScope];

export const ProvisioningStateType = {
    Succeeded: "Succeeded",
    Failed: "Failed",
    Cancelled: "Cancelled",
    Creating: "Creating",
    Deleting: "Deleting",
    Updating: "Updating",
} as const;

/**
 * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
 */
export type ProvisioningStateType = (typeof ProvisioningStateType)[keyof typeof ProvisioningStateType];

export const StorageTargetType = {
    Nfs3: "nfs3",
    Clfs: "clfs",
    Unknown: "unknown",
    BlobNfs: "blobNfs",
} as const;

/**
 * Type of the Storage Target.
 */
export type StorageTargetType = (typeof StorageTargetType)[keyof typeof StorageTargetType];

export const UsernameSource = {
    AD: "AD",
    LDAP: "LDAP",
    File: "File",
    None: "None",
} as const;

/**
 * This setting determines how the cache gets username and group names for clients.
 */
export type UsernameSource = (typeof UsernameSource)[keyof typeof UsernameSource];
