// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AlertAutoMitigate = {
    /**
     * The alert should be automatically resolved.
     */
    Enable: "Enable",
    /**
     * The alert should not be automatically resolved.
     */
    Disable: "Disable",
} as const;

/**
 * The value that indicates whether the alert should be automatically resolved or not. The default is Disable.
 */
export type AlertAutoMitigate = (typeof AlertAutoMitigate)[keyof typeof AlertAutoMitigate];

export const AlertRuleStatus = {
    /**
     * The scheduled query rule is enabled
     */
    Enabled: "Enabled",
    /**
     * The scheduled query rule is disabled
     */
    Disabled: "Disabled",
} as const;

/**
 * Indicates whether the alert is in an enabled state.
 */
export type AlertRuleStatus = (typeof AlertRuleStatus)[keyof typeof AlertRuleStatus];

export const AppServicePlanTier = {
    /**
     * Elastic Premium plan
     */
    ElasticPremium: "ElasticPremium",
    /**
     * Dedicated Premium V3 plan
     */
    PremiumV3: "PremiumV3",
} as const;

/**
 * The App Service plan tier.
 */
export type AppServicePlanTier = (typeof AppServicePlanTier)[keyof typeof AppServicePlanTier];

export const ConditionalOperator = {
    /**
     * The value is less than the specified value.
     */
    LessThan: "LessThan",
    /**
     * The value is greater than the specified value.
     */
    GreaterThan: "GreaterThan",
    /**
     * The value is equal to the specified value.
     */
    Equal: "Equal",
    /**
     * The value is greater than or equal to the specified value.
     */
    GreaterThanOrEqual: "GreaterThanOrEqual",
    /**
     * The value is less than or equal to the specified value.
     */
    LessThanOrEqual: "LessThanOrEqual",
} as const;

/**
 * The threshold operator of the alert.
 */
export type ConditionalOperator = (typeof ConditionalOperator)[keyof typeof ConditionalOperator];

export const ManagedServiceIdentityType = {
    None: "None",
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
} as const;

/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];

export const RoutingPreference = {
    /**
     * Default routing preference. Only RFC1918 traffic is routed to the customer VNET.
     */
    Default: "Default",
    /**
     * Route all traffic to the customer VNET.
     */
    RouteAll: "RouteAll",
} as const;

/**
 * Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.
 */
export type RoutingPreference = (typeof RoutingPreference)[keyof typeof RoutingPreference];

export const SslPreference = {
    /**
     * Secure communication is disabled.
     */
    Disabled: "Disabled",
    /**
     * Secure communication is enabled with root certificate.
     */
    RootCertificate: "RootCertificate",
    /**
     * Secure communication is enabled with server certificate.
     */
    ServerCertificate: "ServerCertificate",
} as const;

/**
 * Gets or sets certificate preference if secure communication is enabled.
 */
export type SslPreference = (typeof SslPreference)[keyof typeof SslPreference];
