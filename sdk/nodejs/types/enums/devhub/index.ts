// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// Export sub-modules:
import * as v20221011preview from "./v20221011preview";
import * as v20230801 from "./v20230801";
import * as v20240501preview from "./v20240501preview";

export {
    v20221011preview,
    v20230801,
    v20240501preview,
};

export const DockerfileGenerationMode = {
    /**
     * Dockerfiles will be generated
     */
    Enabled: "enabled",
    /**
     * Dockerfiles will not be generated
     */
    Disabled: "disabled",
} as const;

/**
 * The mode of generation to be used for generating Dockerfiles.
 */
export type DockerfileGenerationMode = (typeof DockerfileGenerationMode)[keyof typeof DockerfileGenerationMode];

export const GenerationLanguage = {
    /**
     * clojure language
     */
    Clojure: "clojure",
    /**
     * csharp language
     */
    Csharp: "csharp",
    /**
     * erlang language
     */
    Erlang: "erlang",
    /**
     * go language
     */
    Go: "go",
    /**
     * gomodule language
     */
    Gomodule: "gomodule",
    /**
     * gradle language
     */
    Gradle: "gradle",
    /**
     * java language
     */
    Java: "java",
    /**
     * javascript language
     */
    Javascript: "javascript",
    /**
     * php language
     */
    Php: "php",
    /**
     * python language
     */
    Python: "python",
    /**
     * ruby language
     */
    Ruby: "ruby",
    /**
     * rust language
     */
    Rust: "rust",
    /**
     * swift language
     */
    Swift: "swift",
} as const;

/**
 * The programming language used.
 */
export type GenerationLanguage = (typeof GenerationLanguage)[keyof typeof GenerationLanguage];

export const GenerationManifestType = {
    /**
     * Helm manifests
     */
    Helm: "helm",
    /**
     * Kubernetes manifests
     */
    Kube: "kube",
} as const;

/**
 * Determines the type of manifests to be generated.
 */
export type GenerationManifestType = (typeof GenerationManifestType)[keyof typeof GenerationManifestType];

export const ManifestGenerationMode = {
    /**
     * Manifests will be generated
     */
    Enabled: "enabled",
    /**
     * Manifests will not be generated
     */
    Disabled: "disabled",
} as const;

/**
 * The mode of generation to be used for generating Manifest.
 */
export type ManifestGenerationMode = (typeof ManifestGenerationMode)[keyof typeof ManifestGenerationMode];

export const ManifestType = {
    /**
     * Repositories using helm
     */
    Helm: "helm",
    /**
     * Repositories using kubernetes manifests
     */
    Kube: "kube",
} as const;

/**
 * Determines the type of manifests within the repository.
 */
export type ManifestType = (typeof ManifestType)[keyof typeof ManifestType];

export const WorkflowRunStatus = {
    /**
     * Workflow run is queued
     */
    Queued: "queued",
    /**
     * Workflow run is inprogress
     */
    Inprogress: "inprogress",
    /**
     * Workflow run is completed
     */
    Completed: "completed",
} as const;

/**
 * Describes the status of the workflow run
 */
export type WorkflowRunStatus = (typeof WorkflowRunStatus)[keyof typeof WorkflowRunStatus];
