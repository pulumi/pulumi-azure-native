// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const DiagnosticsSinkKind = {
    /**
     * Indicates an invalid sink kind. All Service Fabric enumerations have the invalid type.
     */
    Invalid: "Invalid",
    /**
     * Diagnostics settings for Geneva.
     */
    AzureInternalMonitoringPipeline: "AzureInternalMonitoringPipeline",
} as const;

/**
 * The kind of DiagnosticsSink.
 */
export type DiagnosticsSinkKind = (typeof DiagnosticsSinkKind)[keyof typeof DiagnosticsSinkKind];

export const HealthState = {
    /**
     * Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
     */
    Invalid: "Invalid",
    /**
     * Indicates the health state is okay. The value is 1.
     */
    Ok: "Ok",
    /**
     * Indicates the health state is at a warning level. The value is 2.
     */
    Warning: "Warning",
    /**
     * Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
     */
    Error: "Error",
    /**
     * Indicates an unknown health status. The value is 65535.
     */
    Unknown: "Unknown",
} as const;

/**
 * The health state of a resource such as Application, Service, or Network.
 */
export type HealthState = (typeof HealthState)[keyof typeof HealthState];

export const IngressQoSLevel = {
    Bronze: "Bronze",
} as const;

/**
 * The QoS tier for ingress.
 */
export type IngressQoSLevel = (typeof IngressQoSLevel)[keyof typeof IngressQoSLevel];

export const OperatingSystemTypes = {
    Linux: "Linux",
    Windows: "Windows",
} as const;

/**
 * The Operating system type required by the code in service.
 */
export type OperatingSystemTypes = (typeof OperatingSystemTypes)[keyof typeof OperatingSystemTypes];

export const VolumeProvider = {
    SFAzureFile: "SFAzureFile",
} as const;

/**
 * Provider of the volume.
 */
export type VolumeProvider = (typeof VolumeProvider)[keyof typeof VolumeProvider];
