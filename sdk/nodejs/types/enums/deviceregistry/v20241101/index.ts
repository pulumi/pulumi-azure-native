// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AuthenticationMethod = {
    /**
     * The user authentication method is anonymous.
     */
    Anonymous: "Anonymous",
    /**
     * The user authentication method is an x509 certificate.
     */
    Certificate: "Certificate",
    /**
     * The user authentication method is a username and password.
     */
    UsernamePassword: "UsernamePassword",
} as const;

/**
 * Defines the method to authenticate the user of the client at the server.
 */
export type AuthenticationMethod = (typeof AuthenticationMethod)[keyof typeof AuthenticationMethod];

export const DataPointObservabilityMode = {
    /**
     * No mapping to OpenTelemetry.
     */
    None: "None",
    /**
     * Map as counter to OpenTelemetry.
     */
    Counter: "Counter",
    /**
     * Map as gauge to OpenTelemetry.
     */
    Gauge: "Gauge",
    /**
     * Map as histogram to OpenTelemetry.
     */
    Histogram: "Histogram",
    /**
     * Map as log to OpenTelemetry.
     */
    Log: "Log",
} as const;

/**
 * An indication of how the data point should be mapped to OpenTelemetry.
 */
export type DataPointObservabilityMode = (typeof DataPointObservabilityMode)[keyof typeof DataPointObservabilityMode];

export const EventObservabilityMode = {
    /**
     * No mapping to OpenTelemetry.
     */
    None: "None",
    /**
     * Map as log to OpenTelemetry.
     */
    Log: "Log",
} as const;

/**
 * An indication of how the event should be mapped to OpenTelemetry.
 */
export type EventObservabilityMode = (typeof EventObservabilityMode)[keyof typeof EventObservabilityMode];

export const TopicRetainType = {
    /**
     * Retain the messages.
     */
    Keep: "Keep",
    /**
     * Never retain messages.
     */
    Never: "Never",
} as const;

/**
 * When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.
 */
export type TopicRetainType = (typeof TopicRetainType)[keyof typeof TopicRetainType];
