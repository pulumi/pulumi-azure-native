// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AKSIdentityType = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
} as const;

/**
 * The identity type.
 */
export type AKSIdentityType = (typeof AKSIdentityType)[keyof typeof AKSIdentityType];

export const LevelType = {
    Error: "Error",
    Warning: "Warning",
    Information: "Information",
} as const;

/**
 * Level of the status.
 */
export type LevelType = (typeof LevelType)[keyof typeof LevelType];

export const OperationType = {
    Extract: "extract",
    Copy: "copy",
} as const;

/**
 * The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
 */
export type OperationType = (typeof OperationType)[keyof typeof OperationType];

export const ProviderType = {
    /**
     * Azure provider can be used to authenticate to Azure DevOps repositories using Managed Identity.
     */
    Azure: "Azure",
    /**
     * Generic is the default provider that indicates secret-based authentication mechanism.
     */
    Generic: "Generic",
} as const;

/**
 * Name of the provider used for authentication.
 */
export type ProviderType = (typeof ProviderType)[keyof typeof ProviderType];

export const ResourceIdentityType = {
    SystemAssigned: "SystemAssigned",
} as const;

/**
 * The identity type.
 */
export type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];

export const ScopeType = {
    Cluster: "cluster",
    Namespace: "namespace",
} as const;

/**
 * Scope at which the operator will be installed.
 */
export type ScopeType = (typeof ScopeType)[keyof typeof ScopeType];

export const SourceKindType = {
    GitRepository: "GitRepository",
    Bucket: "Bucket",
    AzureBlob: "AzureBlob",
    OCIRepository: "OCIRepository",
} as const;

/**
 * Source Kind to pull the configuration data from.
 */
export type SourceKindType = (typeof SourceKindType)[keyof typeof SourceKindType];
