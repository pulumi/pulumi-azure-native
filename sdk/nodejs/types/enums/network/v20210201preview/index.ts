// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AdminRuleKind = {
    Custom: "Custom",
    Default: "Default",
} as const;

/**
 * Whether the rule is custom or default.
 */
export type AdminRuleKind = (typeof AdminRuleKind)[keyof typeof AdminRuleKind];

export const ConfigurationType = {
    AdminSecurity: "AdminSecurity",
    UserSecurity: "UserSecurity",
    Connectivity: "Connectivity",
} as const;

/**
 * Configuration Deployment Type.
 */
export type ConfigurationType = (typeof ConfigurationType)[keyof typeof ConfigurationType];

export const ConnectivityTopology = {
    HubAndSpoke: "HubAndSpoke",
    Mesh: "Mesh",
} as const;

/**
 * Connectivity topology type.
 */
export type ConnectivityTopology = (typeof ConnectivityTopology)[keyof typeof ConnectivityTopology];

export const DeleteExistingNSGs = {
    False: "False",
    True: "True",
} as const;

/**
 * Flag if need to delete existing network security groups.
 */
export type DeleteExistingNSGs = (typeof DeleteExistingNSGs)[keyof typeof DeleteExistingNSGs];

export const DeleteExistingPeering = {
    False: "False",
    True: "True",
} as const;

/**
 * Flag if need to remove current existing peerings.
 */
export type DeleteExistingPeering = (typeof DeleteExistingPeering)[keyof typeof DeleteExistingPeering];

export const GroupConnectivity = {
    None: "None",
    DirectlyConnected: "DirectlyConnected",
} as const;

/**
 * Group connectivity type.
 */
export type GroupConnectivity = (typeof GroupConnectivity)[keyof typeof GroupConnectivity];

export const IsGlobal = {
    False: "False",
    True: "True",
} as const;

/**
 * Flag if global mesh is supported.
 */
export type IsGlobal = (typeof IsGlobal)[keyof typeof IsGlobal];

export const MemberType = {
    VirtualNetwork: "VirtualNetwork",
    Subnet: "Subnet",
} as const;

/**
 * Group member type.
 */
export type MemberType = (typeof MemberType)[keyof typeof MemberType];

export const SecurityType = {
    AdminPolicy: "AdminPolicy",
    UserPolicy: "UserPolicy",
} as const;

/**
 * Security Type.
 */
export type SecurityType = (typeof SecurityType)[keyof typeof SecurityType];

export const UseHubGateway = {
    False: "False",
    True: "True",
} as const;

/**
 * Flag if need to use hub gateway.
 */
export type UseHubGateway = (typeof UseHubGateway)[keyof typeof UseHubGateway];

export const UserRuleKind = {
    Custom: "Custom",
    Default: "Default",
} as const;

/**
 * Whether the rule is custom or default.
 */
export type UserRuleKind = (typeof UserRuleKind)[keyof typeof UserRuleKind];
