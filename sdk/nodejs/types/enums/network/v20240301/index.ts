// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AddressPrefixType = {
    IPPrefix: "IPPrefix",
    ServiceTag: "ServiceTag",
} as const;

/**
 * Address prefix type.
 */
export type AddressPrefixType = (typeof AddressPrefixType)[keyof typeof AddressPrefixType];

export const ConfigurationType = {
    SecurityAdmin: "SecurityAdmin",
    Connectivity: "Connectivity",
    SecurityUser: "SecurityUser",
    Routing: "Routing",
} as const;

/**
 * Configuration Deployment Type.
 */
export type ConfigurationType = (typeof ConfigurationType)[keyof typeof ConfigurationType];

export const DisableBgpRoutePropagation = {
    False: "False",
    True: "True",
} as const;

/**
 * Determines whether BGP route propagation is enabled. Defaults to true.
 */
export type DisableBgpRoutePropagation = (typeof DisableBgpRoutePropagation)[keyof typeof DisableBgpRoutePropagation];

export const RoutingRuleDestinationType = {
    AddressPrefix: "AddressPrefix",
    ServiceTag: "ServiceTag",
} as const;

/**
 * Destination type.
 */
export type RoutingRuleDestinationType = (typeof RoutingRuleDestinationType)[keyof typeof RoutingRuleDestinationType];

export const RoutingRuleNextHopType = {
    Internet: "Internet",
    NoNextHop: "NoNextHop",
    VirtualAppliance: "VirtualAppliance",
    VirtualNetworkGateway: "VirtualNetworkGateway",
    VnetLocal: "VnetLocal",
} as const;

/**
 * Next hop type.
 */
export type RoutingRuleNextHopType = (typeof RoutingRuleNextHopType)[keyof typeof RoutingRuleNextHopType];

export const SecurityConfigurationRuleDirection = {
    Inbound: "Inbound",
    Outbound: "Outbound",
} as const;

/**
 * Indicates if the traffic matched against the rule in inbound or outbound.
 */
export type SecurityConfigurationRuleDirection = (typeof SecurityConfigurationRuleDirection)[keyof typeof SecurityConfigurationRuleDirection];

export const SecurityConfigurationRuleProtocol = {
    Tcp: "Tcp",
    Udp: "Udp",
    Icmp: "Icmp",
    Esp: "Esp",
    Any: "Any",
    Ah: "Ah",
} as const;

/**
 * Network protocol this rule applies to.
 */
export type SecurityConfigurationRuleProtocol = (typeof SecurityConfigurationRuleProtocol)[keyof typeof SecurityConfigurationRuleProtocol];
