// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ActionsRequired = {
    None: "None",
} as const;

/**
 * A message indicating if changes on the service provider require any updates on the consumer.
 */
export type ActionsRequired = (typeof ActionsRequired)[keyof typeof ActionsRequired];

export const CreateMode = {
    /**
     * Recover the managed HSM pool from a soft-deleted resource.
     */
    Recover: "recover",
    /**
     * Create a new managed HSM pool. This is the default option.
     */
    Default: "default",
} as const;

/**
 * The create mode to indicate whether the resource is being created or is being recovered from a deleted resource.
 */
export type CreateMode = (typeof CreateMode)[keyof typeof CreateMode];

export const ManagedHsmSkuFamily = {
    B: "B",
} as const;

/**
 * SKU Family of the managed HSM Pool
 */
export type ManagedHsmSkuFamily = (typeof ManagedHsmSkuFamily)[keyof typeof ManagedHsmSkuFamily];

export const ManagedHsmSkuName = {
    Standard_B1: "Standard_B1",
    Custom_B32: "Custom_B32",
    Custom_B6: "Custom_B6",
} as const;

/**
 * SKU of the managed HSM Pool
 */
export type ManagedHsmSkuName = (typeof ManagedHsmSkuName)[keyof typeof ManagedHsmSkuName];

export const NetworkRuleAction = {
    Allow: "Allow",
    Deny: "Deny",
} as const;

/**
 * The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
 */
export type NetworkRuleAction = (typeof NetworkRuleAction)[keyof typeof NetworkRuleAction];

export const NetworkRuleBypassOptions = {
    AzureServices: "AzureServices",
    None: "None",
} as const;

/**
 * Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.
 */
export type NetworkRuleBypassOptions = (typeof NetworkRuleBypassOptions)[keyof typeof NetworkRuleBypassOptions];

export const PrivateEndpointServiceConnectionStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
} as const;

/**
 * Indicates whether the connection has been approved, rejected or removed by the key vault owner.
 */
export type PrivateEndpointServiceConnectionStatus = (typeof PrivateEndpointServiceConnectionStatus)[keyof typeof PrivateEndpointServiceConnectionStatus];

export const PublicNetworkAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * Control permission to the managed HSM from public networks.
 */
export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
