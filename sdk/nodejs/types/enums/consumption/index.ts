// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// Export sub-modules:
import * as latest from "./latest";
import * as v20171230preview from "./v20171230preview";
import * as v20180131 from "./v20180131";
import * as v20180331 from "./v20180331";
import * as v20180630 from "./v20180630";
import * as v20180831 from "./v20180831";
import * as v20181001 from "./v20181001";
import * as v20190101 from "./v20190101";
import * as v20190401preview from "./v20190401preview";
import * as v20190501 from "./v20190501";
import * as v20190501preview from "./v20190501preview";
import * as v20190601 from "./v20190601";
import * as v20191001 from "./v20191001";

export {
    latest,
    v20171230preview,
    v20180131,
    v20180331,
    v20180630,
    v20180831,
    v20181001,
    v20190101,
    v20190401preview,
    v20190501,
    v20190501preview,
    v20190601,
    v20191001,
};

export const BudgetOperatorType = {
    In: "In",
} as const;

/**
 * The operator to use for comparison.
 */
export type BudgetOperatorType = (typeof BudgetOperatorType)[keyof typeof BudgetOperatorType];

export const CategoryType = {
    Cost: "Cost",
    Usage: "Usage",
} as const;

/**
 * The category of the budget, whether the budget tracks cost or usage.
 */
export type CategoryType = (typeof CategoryType)[keyof typeof CategoryType];

export const OperatorType = {
    EqualTo: "EqualTo",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqualTo: "GreaterThanOrEqualTo",
} as const;

/**
 * The comparison operator.
 */
export type OperatorType = (typeof OperatorType)[keyof typeof OperatorType];

export const ThresholdType = {
    Actual: "Actual",
} as const;

/**
 * The type of threshold
 */
export type ThresholdType = (typeof ThresholdType)[keyof typeof ThresholdType];

export const TimeGrainType = {
    Monthly: "Monthly",
    Quarterly: "Quarterly",
    Annually: "Annually",
} as const;

/**
 * The time covered by a budget. Tracking of the amount will be reset based on the time grain.
 */
export type TimeGrainType = (typeof TimeGrainType)[keyof typeof TimeGrainType];
