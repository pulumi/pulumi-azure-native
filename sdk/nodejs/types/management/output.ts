// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20171101preview from "./v20171101preview/output";
export * as v20180101preview from "./v20180101preview/output";
export * as v20180301preview from "./v20180301preview/output";
export * as v20191101 from "./v20191101/output";
export * as v20200201 from "./v20200201/output";
export * as v20200501 from "./v20200501/output";
export * as v20201001 from "./v20201001/output";
export * as v20210401 from "./v20210401/output";
/**
 * The ID of the parent management group.
 */
export interface DescendantParentGroupInfoResponse {
    /**
     * The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
     */
    id?: string;
}

/**
 * The entity.
 */
export interface EntityInfoResponse {
    /**
     * The friendly name of the management group.
     */
    displayName?: string;
    /**
     * The fully qualified ID for the entity.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
     */
    id: string;
    /**
     * The users specific permissions to this item.
     */
    inheritedPermissions?: string;
    /**
     * The name of the entity. For example, 00000000-0000-0000-0000-000000000000
     */
    name: string;
    /**
     * Number of children is the number of Groups that are exactly one level underneath the current Group.
     */
    numberOfChildGroups?: number;
    /**
     * Number of children is the number of Groups and Subscriptions that are exactly one level underneath the current Group.
     */
    numberOfChildren?: number;
    numberOfDescendants?: number;
    /**
     * (Optional) The ID of the parent management group.
     */
    parent?: outputs.management.EntityParentGroupInfoResponse;
    /**
     * The parent display name chain from the root group to the immediate parent
     */
    parentDisplayNameChain?: string[];
    /**
     * The parent name chain from the root group to the immediate parent
     */
    parentNameChain?: string[];
    /**
     * The users specific permissions to this item.
     */
    permissions?: string;
    /**
     * The AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000
     */
    tenantId?: string;
    /**
     * The type of the resource. For example, Microsoft.Management/managementGroups
     */
    type: string;
}

/**
 * (Optional) The ID of the parent management group.
 */
export interface EntityParentGroupInfoResponse {
    /**
     * The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
     */
    id?: string;
}

/**
 * The child information of a management group.
 */
export interface ManagementGroupChildInfoResponse {
    /**
     * The list of children.
     */
    children?: outputs.management.ManagementGroupChildInfoResponse[];
    /**
     * The friendly name of the child resource.
     */
    displayName?: string;
    /**
     * The fully qualified ID for the child resource (management group or subscription).  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
     */
    id?: string;
    /**
     * The name of the child entity.
     */
    name?: string;
    /**
     * The fully qualified resource type which includes provider namespace (e.g. Microsoft.Management/managementGroups)
     */
    type?: string;
}

/**
 * The details of a management group.
 */
export interface ManagementGroupDetailsResponse {
    /**
     * (Optional) The ID of the parent management group.
     */
    parent?: outputs.management.ParentGroupInfoResponse;
    /**
     * The path from the root to the current group.
     */
    path?: outputs.management.ManagementGroupPathElementResponse[];
    /**
     * The identity of the principal or process that updated the object.
     */
    updatedBy?: string;
    /**
     * The date and time when this object was last updated.
     */
    updatedTime?: string;
    /**
     * The version number of the object.
     */
    version?: number;
}

/**
 * A path element of a management group ancestors.
 */
export interface ManagementGroupPathElementResponse {
    /**
     * The friendly name of the group.
     */
    displayName?: string;
    /**
     * The name of the group.
     */
    name?: string;
}

/**
 * (Optional) The ID of the parent management group.
 */
export interface ParentGroupInfoResponse {
    /**
     * The friendly name of the parent management group.
     */
    displayName?: string;
    /**
     * The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
     */
    id?: string;
    /**
     * The name of the parent management group
     */
    name?: string;
}

