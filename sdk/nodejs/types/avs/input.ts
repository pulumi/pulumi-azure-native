// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20200320 from "./v20200320/input";
export * as v20200717preview from "./v20200717preview/input";
export * as v20210101preview from "./v20210101preview/input";
export * as v20210601 from "./v20210601/input";
export * as v20211201 from "./v20211201/input";
export * as v20220501 from "./v20220501/input";
/**
 * An iSCSI volume from Microsoft.StoragePool provider
 */
export interface DiskPoolVolumeArgs {
    /**
     * iSCSI provider target IP address list
     */
    endpoints?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the LUN to be used
     */
    lunName?: pulumi.Input<string>;
}

/**
 * vCenter Single Sign On Identity Source
 */
export interface IdentitySourceArgs {
    /**
     * The domain's NetBIOS name
     */
    alias?: pulumi.Input<string>;
    /**
     * The base distinguished name for groups
     */
    baseGroupDN?: pulumi.Input<string>;
    /**
     * The base distinguished name for users
     */
    baseUserDN?: pulumi.Input<string>;
    /**
     * The domain's dns name
     */
    domain?: pulumi.Input<string>;
    /**
     * The name of the identity source
     */
    name?: pulumi.Input<string>;
    /**
     * The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
     */
    password?: pulumi.Input<string>;
    /**
     * Primary server URL
     */
    primaryServer?: pulumi.Input<string>;
    /**
     * Secondary server URL
     */
    secondaryServer?: pulumi.Input<string>;
    /**
     * Protect LDAP communication using SSL certificate (LDAPS)
     */
    ssl?: pulumi.Input<string | enums.avs.SslEnum>;
    /**
     * The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
     */
    username?: pulumi.Input<string>;
}

/**
 * The properties of a default cluster
 */
export interface ManagementClusterArgs {
    /**
     * The cluster size
     */
    clusterSize: pulumi.Input<number>;
}

/**
 * An Azure NetApp Files volume from Microsoft.NetApp provider
 */
export interface NetAppVolumeArgs {
    /**
     * File path through which the NFS volume is exposed by the provider
     */
    nfsFilePath?: pulumi.Input<string>;
    /**
     * IP address of the NFS provider
     */
    nfsProviderIp?: pulumi.Input<string>;
}

/**
 * a powershell credential object
 */
export interface PSCredentialExecutionParameterArgs {
    /**
     * The parameter name
     */
    name: pulumi.Input<string>;
    /**
     * password for login
     */
    password?: pulumi.Input<string>;
    /**
     * The type of execution parameter
     * Expected value is 'Credential'.
     */
    type: pulumi.Input<"Credential">;
    /**
     * username for login
     */
    username?: pulumi.Input<string>;
}

/**
 * a plain text value execution parameter
 */
export interface ScriptSecureStringExecutionParameterArgs {
    /**
     * The parameter name
     */
    name: pulumi.Input<string>;
    /**
     * A secure value for the passed parameter, not to be stored in logs
     */
    secureValue?: pulumi.Input<string>;
    /**
     * The type of execution parameter
     * Expected value is 'SecureValue'.
     */
    type: pulumi.Input<"SecureValue">;
}

/**
 * a plain text value execution parameter
 */
export interface ScriptStringExecutionParameterArgs {
    /**
     * The parameter name
     */
    name: pulumi.Input<string>;
    /**
     * The type of execution parameter
     * Expected value is 'Value'.
     */
    type: pulumi.Input<"Value">;
    /**
     * The value for the passed parameter
     */
    value?: pulumi.Input<string>;
}

/**
 * The resource model definition representing SKU
 */
export interface SkuArgs {
    /**
     * The name of the SKU.
     */
    name: pulumi.Input<string>;
}

/**
 * VM-Host placement policy properties
 */
export interface VmHostPlacementPolicyPropertiesArgs {
    /**
     * placement policy affinity type
     */
    affinityType: pulumi.Input<string | enums.avs.AffinityType>;
    /**
     * Display name of the placement policy
     */
    displayName?: pulumi.Input<string>;
    /**
     * Host members list
     */
    hostMembers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the placement policy is enabled or disabled
     */
    state?: pulumi.Input<string | enums.avs.PlacementPolicyState>;
    /**
     * placement policy type
     * Expected value is 'VmHost'.
     */
    type: pulumi.Input<"VmHost">;
    /**
     * Virtual machine members list
     */
    vmMembers: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * VM-VM placement policy properties
 */
export interface VmVmPlacementPolicyPropertiesArgs {
    /**
     * placement policy affinity type
     */
    affinityType: pulumi.Input<string | enums.avs.AffinityType>;
    /**
     * Display name of the placement policy
     */
    displayName?: pulumi.Input<string>;
    /**
     * Whether the placement policy is enabled or disabled
     */
    state?: pulumi.Input<string | enums.avs.PlacementPolicyState>;
    /**
     * placement policy type
     * Expected value is 'VmVm'.
     */
    type: pulumi.Input<"VmVm">;
    /**
     * Virtual machine members list
     */
    vmMembers: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Subnet configuration for segment
 */
export interface WorkloadNetworkSegmentSubnetArgs {
    /**
     * DHCP Range assigned for subnet.
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Gateway address.
     */
    gatewayAddress?: pulumi.Input<string>;
}

