// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Cosmos DB capability object
 */
export interface CapabilityArgs {
    /**
     * Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
     */
    name?: pulumi.Input<string>;
}

/**
 * Cosmos DB Cassandra keyspace id object
 */
export interface CassandraKeyspaceResourceArgs {
    /**
     * Name of the Cosmos DB Cassandra keyspace
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB Cassandra table partition key
 */
export interface CassandraPartitionKeyArgs {
    /**
     * Name of the Cosmos DB Cassandra table partition key
     */
    name?: pulumi.Input<string>;
}

/**
 * Cosmos DB Cassandra table schema
 */
export interface CassandraSchemaArgs {
    /**
     * List of cluster key.
     */
    clusterKeys?: pulumi.Input<pulumi.Input<inputs.documentdb.v20150401.ClusterKeyArgs>[]>;
    /**
     * List of Cassandra table columns.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.documentdb.v20150401.ColumnArgs>[]>;
    /**
     * List of partition key.
     */
    partitionKeys?: pulumi.Input<pulumi.Input<inputs.documentdb.v20150401.CassandraPartitionKeyArgs>[]>;
}

/**
 * Cosmos DB Cassandra table id object
 */
export interface CassandraTableResourceArgs {
    /**
     * Time to live of the Cosmos DB Cassandra table
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * Name of the Cosmos DB Cassandra table
     */
    id: pulumi.Input<string>;
    /**
     * Schema of the Cosmos DB Cassandra table
     */
    schema?: pulumi.Input<inputs.documentdb.v20150401.CassandraSchemaArgs>;
}

/**
 * Cosmos DB Cassandra table cluster key
 */
export interface ClusterKeyArgs {
    /**
     * Name of the Cosmos DB Cassandra table cluster key
     */
    name?: pulumi.Input<string>;
    /**
     * Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
     */
    orderBy?: pulumi.Input<string>;
}

/**
 * Cosmos DB Cassandra table column
 */
export interface ColumnArgs {
    /**
     * Name of the Cosmos DB Cassandra table column
     */
    name?: pulumi.Input<string>;
    /**
     * Type of the Cosmos DB Cassandra table column
     */
    type?: pulumi.Input<string>;
}

/**
 * The conflict resolution policy for the container.
 */
export interface ConflictResolutionPolicyArgs {
    /**
     * The conflict resolution path in the case of LastWriterWins mode.
     */
    conflictResolutionPath?: pulumi.Input<string>;
    /**
     * The procedure to resolve conflicts in the case of custom mode.
     */
    conflictResolutionProcedure?: pulumi.Input<string>;
    /**
     * Indicates the conflict resolution mode.
     */
    mode?: pulumi.Input<string | enums.documentdb.v20150401.ConflictResolutionMode>;
}
/**
 * conflictResolutionPolicyArgsProvideDefaults sets the appropriate defaults for ConflictResolutionPolicyArgs
 */
export function conflictResolutionPolicyArgsProvideDefaults(val: ConflictResolutionPolicyArgs): ConflictResolutionPolicyArgs {
    return {
        ...val,
        mode: (val.mode) ?? "LastWriterWins",
    };
}

/**
 * The consistency policy for the Cosmos DB database account.
 */
export interface ConsistencyPolicyArgs {
    /**
     * The default consistency level and configuration settings of the Cosmos DB account.
     */
    defaultConsistencyLevel: pulumi.Input<enums.documentdb.v20150401.DefaultConsistencyLevel>;
    /**
     * When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
     */
    maxIntervalInSeconds?: pulumi.Input<number>;
    /**
     * When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 â€“ 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
     */
    maxStalenessPrefix?: pulumi.Input<number>;
}

/**
 * The configuration of the partition key to be used for partitioning data into multiple partitions
 */
export interface ContainerPartitionKeyArgs {
    /**
     * Indicates the kind of algorithm used for partitioning
     */
    kind?: pulumi.Input<string | enums.documentdb.v20150401.PartitionKind>;
    /**
     * List of paths using which data within the container can be partitioned
     */
    paths?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * containerPartitionKeyArgsProvideDefaults sets the appropriate defaults for ContainerPartitionKeyArgs
 */
export function containerPartitionKeyArgsProvideDefaults(val: ContainerPartitionKeyArgs): ContainerPartitionKeyArgs {
    return {
        ...val,
        kind: (val.kind) ?? "Hash",
    };
}

export interface ExcludedPathArgs {
    /**
     * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     */
    path?: pulumi.Input<string>;
}

/**
 * Cosmos DB Gremlin database id object
 */
export interface GremlinDatabaseResourceArgs {
    /**
     * Name of the Cosmos DB Gremlin database
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB Gremlin graph resource object
 */
export interface GremlinGraphResourceArgs {
    /**
     * The conflict resolution policy for the graph.
     */
    conflictResolutionPolicy?: pulumi.Input<inputs.documentdb.v20150401.ConflictResolutionPolicyArgs>;
    /**
     * Default time to live
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * Name of the Cosmos DB Gremlin graph
     */
    id: pulumi.Input<string>;
    /**
     * The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
     */
    indexingPolicy?: pulumi.Input<inputs.documentdb.v20150401.IndexingPolicyArgs>;
    /**
     * The configuration of the partition key to be used for partitioning data into multiple partitions
     */
    partitionKey?: pulumi.Input<inputs.documentdb.v20150401.ContainerPartitionKeyArgs>;
    /**
     * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
     */
    uniqueKeyPolicy?: pulumi.Input<inputs.documentdb.v20150401.UniqueKeyPolicyArgs>;
}
/**
 * gremlinGraphResourceArgsProvideDefaults sets the appropriate defaults for GremlinGraphResourceArgs
 */
export function gremlinGraphResourceArgsProvideDefaults(val: GremlinGraphResourceArgs): GremlinGraphResourceArgs {
    return {
        ...val,
        conflictResolutionPolicy: (val.conflictResolutionPolicy ? pulumi.output(val.conflictResolutionPolicy).apply(inputs.documentdb.v20150401.conflictResolutionPolicyArgsProvideDefaults) : undefined),
        indexingPolicy: (val.indexingPolicy ? pulumi.output(val.indexingPolicy).apply(inputs.documentdb.v20150401.indexingPolicyArgsProvideDefaults) : undefined),
        partitionKey: (val.partitionKey ? pulumi.output(val.partitionKey).apply(inputs.documentdb.v20150401.containerPartitionKeyArgsProvideDefaults) : undefined),
    };
}

/**
 * The paths that are included in indexing
 */
export interface IncludedPathArgs {
    /**
     * List of indexes for this path
     */
    indexes?: pulumi.Input<pulumi.Input<inputs.documentdb.v20150401.IndexesArgs>[]>;
    /**
     * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     */
    path?: pulumi.Input<string>;
}

/**
 * The indexes for the path.
 */
export interface IndexesArgs {
    /**
     * The datatype for which the indexing behavior is applied to.
     */
    dataType?: pulumi.Input<string | enums.documentdb.v20150401.DataType>;
    /**
     * Indicates the type of index.
     */
    kind?: pulumi.Input<string | enums.documentdb.v20150401.IndexKind>;
    /**
     * The precision of the index. -1 is maximum precision.
     */
    precision?: pulumi.Input<number>;
}
/**
 * indexesArgsProvideDefaults sets the appropriate defaults for IndexesArgs
 */
export function indexesArgsProvideDefaults(val: IndexesArgs): IndexesArgs {
    return {
        ...val,
        dataType: (val.dataType) ?? "String",
        kind: (val.kind) ?? "Hash",
    };
}

/**
 * Cosmos DB indexing policy
 */
export interface IndexingPolicyArgs {
    /**
     * Indicates if the indexing policy is automatic
     */
    automatic?: pulumi.Input<boolean>;
    /**
     * List of paths to exclude from indexing
     */
    excludedPaths?: pulumi.Input<pulumi.Input<inputs.documentdb.v20150401.ExcludedPathArgs>[]>;
    /**
     * List of paths to include in the indexing
     */
    includedPaths?: pulumi.Input<pulumi.Input<inputs.documentdb.v20150401.IncludedPathArgs>[]>;
    /**
     * Indicates the indexing mode.
     */
    indexingMode?: pulumi.Input<string | enums.documentdb.v20150401.IndexingMode>;
}
/**
 * indexingPolicyArgsProvideDefaults sets the appropriate defaults for IndexingPolicyArgs
 */
export function indexingPolicyArgsProvideDefaults(val: IndexingPolicyArgs): IndexingPolicyArgs {
    return {
        ...val,
        indexingMode: (val.indexingMode) ?? "Consistent",
    };
}

/**
 * A region in which the Azure Cosmos DB database account is deployed.
 */
export interface LocationArgs {
    /**
     * The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
     */
    failoverPriority?: pulumi.Input<number>;
    /**
     * Flag to indicate whether or not this region is an AvailabilityZone region
     */
    isZoneRedundant?: pulumi.Input<boolean>;
    /**
     * The name of the region.
     */
    locationName?: pulumi.Input<string>;
}

/**
 * Cosmos DB MongoDB collection resource object
 */
export interface MongoDBCollectionResourceArgs {
    /**
     * Name of the Cosmos DB MongoDB collection
     */
    id: pulumi.Input<string>;
    /**
     * List of index keys
     */
    indexes?: pulumi.Input<pulumi.Input<inputs.documentdb.v20150401.MongoIndexArgs>[]>;
    /**
     * A key-value pair of shard keys to be applied for the request.
     */
    shardKey?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Cosmos DB MongoDB database id object
 */
export interface MongoDBDatabaseResourceArgs {
    /**
     * Name of the Cosmos DB MongoDB database
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB MongoDB collection index key
 */
export interface MongoIndexArgs {
    /**
     * Cosmos DB MongoDB collection index keys
     */
    key?: pulumi.Input<inputs.documentdb.v20150401.MongoIndexKeysArgs>;
    /**
     * Cosmos DB MongoDB collection index key options
     */
    options?: pulumi.Input<inputs.documentdb.v20150401.MongoIndexOptionsArgs>;
}

/**
 * Cosmos DB MongoDB collection resource object
 */
export interface MongoIndexKeysArgs {
    /**
     * List of keys for each MongoDB collection in the Azure Cosmos DB service
     */
    keys?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Cosmos DB MongoDB collection index options
 */
export interface MongoIndexOptionsArgs {
    /**
     * Expire after seconds
     */
    expireAfterSeconds?: pulumi.Input<number>;
    /**
     * Is unique or not
     */
    unique?: pulumi.Input<boolean>;
}

/**
 * Cosmos DB SQL container resource object
 */
export interface SqlContainerResourceArgs {
    /**
     * The conflict resolution policy for the container.
     */
    conflictResolutionPolicy?: pulumi.Input<inputs.documentdb.v20150401.ConflictResolutionPolicyArgs>;
    /**
     * Default time to live
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * Name of the Cosmos DB SQL container
     */
    id: pulumi.Input<string>;
    /**
     * The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
     */
    indexingPolicy?: pulumi.Input<inputs.documentdb.v20150401.IndexingPolicyArgs>;
    /**
     * The configuration of the partition key to be used for partitioning data into multiple partitions
     */
    partitionKey?: pulumi.Input<inputs.documentdb.v20150401.ContainerPartitionKeyArgs>;
    /**
     * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
     */
    uniqueKeyPolicy?: pulumi.Input<inputs.documentdb.v20150401.UniqueKeyPolicyArgs>;
}
/**
 * sqlContainerResourceArgsProvideDefaults sets the appropriate defaults for SqlContainerResourceArgs
 */
export function sqlContainerResourceArgsProvideDefaults(val: SqlContainerResourceArgs): SqlContainerResourceArgs {
    return {
        ...val,
        conflictResolutionPolicy: (val.conflictResolutionPolicy ? pulumi.output(val.conflictResolutionPolicy).apply(inputs.documentdb.v20150401.conflictResolutionPolicyArgsProvideDefaults) : undefined),
        indexingPolicy: (val.indexingPolicy ? pulumi.output(val.indexingPolicy).apply(inputs.documentdb.v20150401.indexingPolicyArgsProvideDefaults) : undefined),
        partitionKey: (val.partitionKey ? pulumi.output(val.partitionKey).apply(inputs.documentdb.v20150401.containerPartitionKeyArgsProvideDefaults) : undefined),
    };
}

/**
 * Cosmos DB SQL database id object
 */
export interface SqlDatabaseResourceArgs {
    /**
     * Name of the Cosmos DB SQL database
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB table id object
 */
export interface TableResourceArgs {
    /**
     * Name of the Cosmos DB table
     */
    id: pulumi.Input<string>;
}

/**
 * The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
 */
export interface UniqueKeyArgs {
    /**
     * List of paths must be unique for each document in the Azure Cosmos DB service
     */
    paths?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
 */
export interface UniqueKeyPolicyArgs {
    /**
     * List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
     */
    uniqueKeys?: pulumi.Input<pulumi.Input<inputs.documentdb.v20150401.UniqueKeyArgs>[]>;
}

/**
 * Virtual Network ACL Rule object
 */
export interface VirtualNetworkRuleArgs {
    /**
     * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
     */
    id?: pulumi.Input<string>;
    /**
     * Create firewall rule before the virtual network has vnet service endpoint enabled.
     */
    ignoreMissingVNetServiceEndpoint?: pulumi.Input<boolean>;
}

