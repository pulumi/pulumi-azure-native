// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

export interface ApiPropertiesArgs {
    /**
     * Describes the ServerVersion of an a MongoDB account.
     */
    serverVersion?: pulumi.Input<string | enums.documentdb.v20200601preview.ServerVersion>;
}

export interface AutoscaleSettingsArgs {
    /**
     * Represents maximum throughput, the resource can scale up to.
     */
    maxThroughput?: pulumi.Input<number>;
}

/**
 * Cosmos DB capability object
 */
export interface CapabilityArgs {
    /**
     * Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
     */
    name?: pulumi.Input<string>;
}

/**
 * Cosmos DB Cassandra keyspace resource object
 */
export interface CassandraKeyspaceResourceArgs {
    /**
     * Name of the Cosmos DB Cassandra keyspace
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB Cassandra table partition key
 */
export interface CassandraPartitionKeyArgs {
    /**
     * Name of the Cosmos DB Cassandra table partition key
     */
    name?: pulumi.Input<string>;
}

/**
 * Cosmos DB Cassandra table schema
 */
export interface CassandraSchemaArgs {
    /**
     * List of cluster key.
     */
    clusterKeys?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.ClusterKeyArgs>[]>;
    /**
     * List of Cassandra table columns.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.ColumnArgs>[]>;
    /**
     * List of partition key.
     */
    partitionKeys?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.CassandraPartitionKeyArgs>[]>;
}

/**
 * Cosmos DB Cassandra table resource object
 */
export interface CassandraTableResourceArgs {
    /**
     * Analytical TTL.
     */
    analyticalStorageTtl?: pulumi.Input<number>;
    /**
     * Time to live of the Cosmos DB Cassandra table
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * Name of the Cosmos DB Cassandra table
     */
    id: pulumi.Input<string>;
    /**
     * Schema of the Cosmos DB Cassandra table
     */
    schema?: pulumi.Input<inputs.documentdb.v20200601preview.CassandraSchemaArgs>;
}

/**
 * Cosmos DB Cassandra table cluster key
 */
export interface ClusterKeyArgs {
    /**
     * Name of the Cosmos DB Cassandra table cluster key
     */
    name?: pulumi.Input<string>;
    /**
     * Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
     */
    orderBy?: pulumi.Input<string>;
}

/**
 * Cosmos DB Cassandra table column
 */
export interface ColumnArgs {
    /**
     * Name of the Cosmos DB Cassandra table column
     */
    name?: pulumi.Input<string>;
    /**
     * Type of the Cosmos DB Cassandra table column
     */
    type?: pulumi.Input<string>;
}

export interface CompositePathArgs {
    /**
     * Sort order for composite paths.
     */
    order?: pulumi.Input<string | enums.documentdb.v20200601preview.CompositePathSortOrder>;
    /**
     * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     */
    path?: pulumi.Input<string>;
}

/**
 * The conflict resolution policy for the container.
 */
export interface ConflictResolutionPolicyArgs {
    /**
     * The conflict resolution path in the case of LastWriterWins mode.
     */
    conflictResolutionPath?: pulumi.Input<string>;
    /**
     * The procedure to resolve conflicts in the case of custom mode.
     */
    conflictResolutionProcedure?: pulumi.Input<string>;
    /**
     * Indicates the conflict resolution mode.
     */
    mode?: pulumi.Input<string | enums.documentdb.v20200601preview.ConflictResolutionMode>;
}
/**
 * conflictResolutionPolicyArgsProvideDefaults sets the appropriate defaults for ConflictResolutionPolicyArgs
 */
export function conflictResolutionPolicyArgsProvideDefaults(val: ConflictResolutionPolicyArgs): ConflictResolutionPolicyArgs {
    return {
        ...val,
        mode: (val.mode) ?? "LastWriterWins",
    };
}

/**
 * The consistency policy for the Cosmos DB database account.
 */
export interface ConsistencyPolicyArgs {
    /**
     * The default consistency level and configuration settings of the Cosmos DB account.
     */
    defaultConsistencyLevel: pulumi.Input<enums.documentdb.v20200601preview.DefaultConsistencyLevel>;
    /**
     * When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
     */
    maxIntervalInSeconds?: pulumi.Input<number>;
    /**
     * When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
     */
    maxStalenessPrefix?: pulumi.Input<number>;
}

/**
 * The configuration of the partition key to be used for partitioning data into multiple partitions
 */
export interface ContainerPartitionKeyArgs {
    /**
     * Indicates the kind of algorithm used for partitioning
     */
    kind?: pulumi.Input<string | enums.documentdb.v20200601preview.PartitionKind>;
    /**
     * List of paths using which data within the container can be partitioned
     */
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the version of the partition key definition
     */
    version?: pulumi.Input<number>;
}
/**
 * containerPartitionKeyArgsProvideDefaults sets the appropriate defaults for ContainerPartitionKeyArgs
 */
export function containerPartitionKeyArgsProvideDefaults(val: ContainerPartitionKeyArgs): ContainerPartitionKeyArgs {
    return {
        ...val,
        kind: (val.kind) ?? "Hash",
    };
}

/**
 * The object representing continuous mode backup policy.
 */
export interface ContinuousModeBackupPolicyArgs {
    /**
     * Describes the mode of backups.
     * Expected value is 'Continuous'.
     */
    type: pulumi.Input<"Continuous">;
}

/**
 * The CORS policy for the Cosmos DB database account.
 */
export interface CorsPolicyArgs {
    /**
     * The request headers that the origin domain may specify on the CORS request.
     */
    allowedHeaders?: pulumi.Input<string>;
    /**
     * The methods (HTTP request verbs) that the origin domain may use for a CORS request.
     */
    allowedMethods?: pulumi.Input<string>;
    /**
     * The origin domains that are permitted to make a request against the service via CORS.
     */
    allowedOrigins: pulumi.Input<string>;
    /**
     * The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
     */
    exposedHeaders?: pulumi.Input<string>;
    /**
     * The maximum amount time that a browser should cache the preflight OPTIONS request.
     */
    maxAgeInSeconds?: pulumi.Input<number>;
}

/**
 * CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
 */
export interface CreateUpdateOptionsArgs {
    /**
     * Specifies the Autoscale settings.
     */
    autoscaleSettings?: pulumi.Input<inputs.documentdb.v20200601preview.AutoscaleSettingsArgs>;
    /**
     * Request Units per second. For example, "throughput": 10000.
     */
    throughput?: pulumi.Input<number>;
}

/**
 * Specific Databases to restore.
 */
export interface DatabaseRestoreResourceArgs {
    /**
     * The names of the collections available for restore.
     */
    collectionNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the database available for restore.
     */
    databaseName?: pulumi.Input<string>;
}

/**
 * Properties for non-restore Azure Cosmos DB database account requests.
 */
export interface DefaultRequestDatabaseAccountCreateUpdatePropertiesArgs {
    /**
     * API specific properties. Currently, supported only for MongoDB API.
     */
    apiProperties?: pulumi.Input<inputs.documentdb.v20200601preview.ApiPropertiesArgs>;
    /**
     * The object representing the policy for taking backups on an account.
     */
    backupPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.ContinuousModeBackupPolicyArgs | inputs.documentdb.v20200601preview.PeriodicModeBackupPolicyArgs>;
    /**
     * List of Cosmos DB capabilities for the account
     */
    capabilities?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.CapabilityArgs>[]>;
    /**
     * The cassandra connector offer type for the Cosmos DB database C* account.
     */
    connectorOffer?: pulumi.Input<string | enums.documentdb.v20200601preview.ConnectorOffer>;
    /**
     * The consistency policy for the Cosmos DB account.
     */
    consistencyPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.ConsistencyPolicyArgs>;
    /**
     * The CORS policy for the Cosmos DB database account.
     */
    cors?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.CorsPolicyArgs>[]>;
    /**
     * Enum to indicate the mode of account creation.
     * Expected value is 'Default'.
     */
    createMode: pulumi.Input<"Default">;
    /**
     * The offer type for the database
     */
    databaseAccountOfferType: pulumi.Input<enums.documentdb.v20200601preview.DatabaseAccountOfferType>;
    /**
     * Disable write operations on metadata resources (databases, containers, throughput) via account keys
     */
    disableKeyBasedMetadataWriteAccess?: pulumi.Input<boolean>;
    /**
     * Flag to indicate whether to enable storage analytics.
     */
    enableAnalyticalStorage?: pulumi.Input<boolean>;
    /**
     * Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
     */
    enableAutomaticFailover?: pulumi.Input<boolean>;
    /**
     * Enables the cassandra connector on the Cosmos DB C* account
     */
    enableCassandraConnector?: pulumi.Input<boolean>;
    /**
     * Flag to indicate whether Free Tier is enabled.
     */
    enableFreeTier?: pulumi.Input<boolean>;
    /**
     * Enables the account to write in multiple locations
     */
    enableMultipleWriteLocations?: pulumi.Input<boolean>;
    /**
     * List of IpRules.
     */
    ipRules?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.IpAddressOrRangeArgs>[]>;
    /**
     * Flag to indicate whether to enable/disable Virtual Network ACL rules.
     */
    isVirtualNetworkFilterEnabled?: pulumi.Input<boolean>;
    /**
     * The URI of the key vault
     */
    keyVaultKeyUri?: pulumi.Input<string>;
    /**
     * An array that contains the georeplication locations enabled for the Cosmos DB account.
     */
    locations: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.LocationArgs>[]>;
    /**
     * List of Virtual Network ACL rules configured for the Cosmos DB account.
     */
    virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.VirtualNetworkRuleArgs>[]>;
}
/**
 * defaultRequestDatabaseAccountCreateUpdatePropertiesArgsProvideDefaults sets the appropriate defaults for DefaultRequestDatabaseAccountCreateUpdatePropertiesArgs
 */
export function defaultRequestDatabaseAccountCreateUpdatePropertiesArgsProvideDefaults(val: DefaultRequestDatabaseAccountCreateUpdatePropertiesArgs): DefaultRequestDatabaseAccountCreateUpdatePropertiesArgs {
    return {
        ...val,
        createMode: (val.createMode) ?? "Default",
    };
}

export interface ExcludedPathArgs {
    /**
     * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     */
    path?: pulumi.Input<string>;
}

/**
 * Cosmos DB Gremlin database resource object
 */
export interface GremlinDatabaseResourceArgs {
    /**
     * Name of the Cosmos DB Gremlin database
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB Gremlin graph resource object
 */
export interface GremlinGraphResourceArgs {
    /**
     * The conflict resolution policy for the graph.
     */
    conflictResolutionPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.ConflictResolutionPolicyArgs>;
    /**
     * Default time to live
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * Name of the Cosmos DB Gremlin graph
     */
    id: pulumi.Input<string>;
    /**
     * The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
     */
    indexingPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.IndexingPolicyArgs>;
    /**
     * The configuration of the partition key to be used for partitioning data into multiple partitions
     */
    partitionKey?: pulumi.Input<inputs.documentdb.v20200601preview.ContainerPartitionKeyArgs>;
    /**
     * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
     */
    uniqueKeyPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.UniqueKeyPolicyArgs>;
}
/**
 * gremlinGraphResourceArgsProvideDefaults sets the appropriate defaults for GremlinGraphResourceArgs
 */
export function gremlinGraphResourceArgsProvideDefaults(val: GremlinGraphResourceArgs): GremlinGraphResourceArgs {
    return {
        ...val,
        conflictResolutionPolicy: (val.conflictResolutionPolicy ? pulumi.output(val.conflictResolutionPolicy).apply(inputs.documentdb.v20200601preview.conflictResolutionPolicyArgsProvideDefaults) : undefined),
        indexingPolicy: (val.indexingPolicy ? pulumi.output(val.indexingPolicy).apply(inputs.documentdb.v20200601preview.indexingPolicyArgsProvideDefaults) : undefined),
        partitionKey: (val.partitionKey ? pulumi.output(val.partitionKey).apply(inputs.documentdb.v20200601preview.containerPartitionKeyArgsProvideDefaults) : undefined),
    };
}

/**
 * The paths that are included in indexing
 */
export interface IncludedPathArgs {
    /**
     * List of indexes for this path
     */
    indexes?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.IndexesArgs>[]>;
    /**
     * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     */
    path?: pulumi.Input<string>;
}

/**
 * The indexes for the path.
 */
export interface IndexesArgs {
    /**
     * The datatype for which the indexing behavior is applied to.
     */
    dataType?: pulumi.Input<string | enums.documentdb.v20200601preview.DataType>;
    /**
     * Indicates the type of index.
     */
    kind?: pulumi.Input<string | enums.documentdb.v20200601preview.IndexKind>;
    /**
     * The precision of the index. -1 is maximum precision.
     */
    precision?: pulumi.Input<number>;
}
/**
 * indexesArgsProvideDefaults sets the appropriate defaults for IndexesArgs
 */
export function indexesArgsProvideDefaults(val: IndexesArgs): IndexesArgs {
    return {
        ...val,
        dataType: (val.dataType) ?? "String",
        kind: (val.kind) ?? "Hash",
    };
}

/**
 * Cosmos DB indexing policy
 */
export interface IndexingPolicyArgs {
    /**
     * Indicates if the indexing policy is automatic
     */
    automatic?: pulumi.Input<boolean>;
    /**
     * List of composite path list
     */
    compositeIndexes?: pulumi.Input<pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.CompositePathArgs>[]>[]>;
    /**
     * List of paths to exclude from indexing
     */
    excludedPaths?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.ExcludedPathArgs>[]>;
    /**
     * List of paths to include in the indexing
     */
    includedPaths?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.IncludedPathArgs>[]>;
    /**
     * Indicates the indexing mode.
     */
    indexingMode?: pulumi.Input<string | enums.documentdb.v20200601preview.IndexingMode>;
    /**
     * List of spatial specifics
     */
    spatialIndexes?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.SpatialSpecArgs>[]>;
}
/**
 * indexingPolicyArgsProvideDefaults sets the appropriate defaults for IndexingPolicyArgs
 */
export function indexingPolicyArgsProvideDefaults(val: IndexingPolicyArgs): IndexingPolicyArgs {
    return {
        ...val,
        indexingMode: (val.indexingMode) ?? "Consistent",
    };
}

/**
 * IpAddressOrRange object
 */
export interface IpAddressOrRangeArgs {
    /**
     * A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
     */
    ipAddressOrRange?: pulumi.Input<string>;
}

/**
 * A region in which the Azure Cosmos DB database account is deployed.
 */
export interface LocationArgs {
    /**
     * The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
     */
    failoverPriority?: pulumi.Input<number>;
    /**
     * Flag to indicate whether or not this region is an AvailabilityZone region
     */
    isZoneRedundant?: pulumi.Input<boolean>;
    /**
     * The name of the region.
     */
    locationName?: pulumi.Input<string>;
}

/**
 * Identity for the resource.
 */
export interface ManagedServiceIdentityArgs {
    /**
     * The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
     */
    type?: pulumi.Input<enums.documentdb.v20200601preview.ResourceIdentityType>;
    /**
     * The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    userAssignedIdentities?: pulumi.Input<{[key: string]: any}>;
}

/**
 * Cosmos DB MongoDB collection resource object
 */
export interface MongoDBCollectionResourceArgs {
    /**
     * Analytical TTL.
     */
    analyticalStorageTtl?: pulumi.Input<number>;
    /**
     * Name of the Cosmos DB MongoDB collection
     */
    id: pulumi.Input<string>;
    /**
     * List of index keys
     */
    indexes?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.MongoIndexArgs>[]>;
    /**
     * A key-value pair of shard keys to be applied for the request.
     */
    shardKey?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Cosmos DB MongoDB database resource object
 */
export interface MongoDBDatabaseResourceArgs {
    /**
     * Name of the Cosmos DB MongoDB database
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB MongoDB collection index key
 */
export interface MongoIndexArgs {
    /**
     * Cosmos DB MongoDB collection index keys
     */
    key?: pulumi.Input<inputs.documentdb.v20200601preview.MongoIndexKeysArgs>;
    /**
     * Cosmos DB MongoDB collection index key options
     */
    options?: pulumi.Input<inputs.documentdb.v20200601preview.MongoIndexOptionsArgs>;
}

/**
 * Cosmos DB MongoDB collection resource object
 */
export interface MongoIndexKeysArgs {
    /**
     * List of keys for each MongoDB collection in the Azure Cosmos DB service
     */
    keys?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Cosmos DB MongoDB collection index options
 */
export interface MongoIndexOptionsArgs {
    /**
     * Expire after seconds
     */
    expireAfterSeconds?: pulumi.Input<number>;
    /**
     * Is unique or not
     */
    unique?: pulumi.Input<boolean>;
}

/**
 * The object representing periodic mode backup policy.
 */
export interface PeriodicModeBackupPolicyArgs {
    /**
     * Configuration values for periodic mode backup
     */
    periodicModeProperties?: pulumi.Input<inputs.documentdb.v20200601preview.PeriodicModePropertiesArgs>;
    /**
     * Describes the mode of backups.
     * Expected value is 'Periodic'.
     */
    type: pulumi.Input<"Periodic">;
}

/**
 * Configuration values for periodic mode backup
 */
export interface PeriodicModePropertiesArgs {
    /**
     * An integer representing the interval in minutes between two backups
     */
    backupIntervalInMinutes?: pulumi.Input<number>;
    /**
     * An integer representing the time (in hours) that each backup is retained
     */
    backupRetentionIntervalInHours?: pulumi.Input<number>;
    /**
     * Enum to indicate type of backup residency
     */
    backupStorageRedundancy?: pulumi.Input<string | enums.documentdb.v20200601preview.BackupStorageRedundancy>;
}

/**
 * The set of data plane operations permitted through this Role Definition.
 */
export interface PermissionArgs {
    /**
     * An array of data actions that are allowed.
     */
    dataActions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of data actions that are denied.
     */
    notDataActions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Parameters to indicate the information about the restore.
 */
export interface RestoreParametersArgs {
    /**
     * List of specific databases available for restore.
     */
    databasesToRestore?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.DatabaseRestoreResourceArgs>[]>;
    /**
     * Describes the mode of the restore.
     */
    restoreMode?: pulumi.Input<string | enums.documentdb.v20200601preview.RestoreMode>;
    /**
     * The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
     */
    restoreSource?: pulumi.Input<string>;
    /**
     * Time to which the account has to be restored (ISO-8601 format).
     */
    restoreTimestampInUtc?: pulumi.Input<string>;
}

/**
 * Properties to restore Azure Cosmos DB database account.
 */
export interface RestoreReqeustDatabaseAccountCreateUpdatePropertiesArgs {
    /**
     * API specific properties. Currently, supported only for MongoDB API.
     */
    apiProperties?: pulumi.Input<inputs.documentdb.v20200601preview.ApiPropertiesArgs>;
    /**
     * The object representing the policy for taking backups on an account.
     */
    backupPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.ContinuousModeBackupPolicyArgs | inputs.documentdb.v20200601preview.PeriodicModeBackupPolicyArgs>;
    /**
     * List of Cosmos DB capabilities for the account
     */
    capabilities?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.CapabilityArgs>[]>;
    /**
     * The cassandra connector offer type for the Cosmos DB database C* account.
     */
    connectorOffer?: pulumi.Input<string | enums.documentdb.v20200601preview.ConnectorOffer>;
    /**
     * The consistency policy for the Cosmos DB account.
     */
    consistencyPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.ConsistencyPolicyArgs>;
    /**
     * The CORS policy for the Cosmos DB database account.
     */
    cors?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.CorsPolicyArgs>[]>;
    /**
     * Enum to indicate the mode of account creation.
     * Expected value is 'Restore'.
     */
    createMode: pulumi.Input<"Restore">;
    /**
     * The offer type for the database
     */
    databaseAccountOfferType: pulumi.Input<enums.documentdb.v20200601preview.DatabaseAccountOfferType>;
    /**
     * Disable write operations on metadata resources (databases, containers, throughput) via account keys
     */
    disableKeyBasedMetadataWriteAccess?: pulumi.Input<boolean>;
    /**
     * Flag to indicate whether to enable storage analytics.
     */
    enableAnalyticalStorage?: pulumi.Input<boolean>;
    /**
     * Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
     */
    enableAutomaticFailover?: pulumi.Input<boolean>;
    /**
     * Enables the cassandra connector on the Cosmos DB C* account
     */
    enableCassandraConnector?: pulumi.Input<boolean>;
    /**
     * Flag to indicate whether Free Tier is enabled.
     */
    enableFreeTier?: pulumi.Input<boolean>;
    /**
     * Enables the account to write in multiple locations
     */
    enableMultipleWriteLocations?: pulumi.Input<boolean>;
    /**
     * List of IpRules.
     */
    ipRules?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.IpAddressOrRangeArgs>[]>;
    /**
     * Flag to indicate whether to enable/disable Virtual Network ACL rules.
     */
    isVirtualNetworkFilterEnabled?: pulumi.Input<boolean>;
    /**
     * The URI of the key vault
     */
    keyVaultKeyUri?: pulumi.Input<string>;
    /**
     * An array that contains the georeplication locations enabled for the Cosmos DB account.
     */
    locations: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.LocationArgs>[]>;
    /**
     * Parameters to indicate the information about the restore.
     */
    restoreParameters?: pulumi.Input<inputs.documentdb.v20200601preview.RestoreParametersArgs>;
    /**
     * List of Virtual Network ACL rules configured for the Cosmos DB account.
     */
    virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.VirtualNetworkRuleArgs>[]>;
}
/**
 * restoreReqeustDatabaseAccountCreateUpdatePropertiesArgsProvideDefaults sets the appropriate defaults for RestoreReqeustDatabaseAccountCreateUpdatePropertiesArgs
 */
export function restoreReqeustDatabaseAccountCreateUpdatePropertiesArgsProvideDefaults(val: RestoreReqeustDatabaseAccountCreateUpdatePropertiesArgs): RestoreReqeustDatabaseAccountCreateUpdatePropertiesArgs {
    return {
        ...val,
        createMode: (val.createMode) ?? "Default",
    };
}

export interface SpatialSpecArgs {
    /**
     * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     */
    path?: pulumi.Input<string>;
    /**
     * List of path's spatial type
     */
    types?: pulumi.Input<pulumi.Input<string | enums.documentdb.v20200601preview.SpatialType>[]>;
}

/**
 * Cosmos DB SQL container resource object
 */
export interface SqlContainerResourceArgs {
    /**
     * The conflict resolution policy for the container.
     */
    conflictResolutionPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.ConflictResolutionPolicyArgs>;
    /**
     * Default time to live
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * Name of the Cosmos DB SQL container
     */
    id: pulumi.Input<string>;
    /**
     * The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
     */
    indexingPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.IndexingPolicyArgs>;
    /**
     * The configuration of the partition key to be used for partitioning data into multiple partitions
     */
    partitionKey?: pulumi.Input<inputs.documentdb.v20200601preview.ContainerPartitionKeyArgs>;
    /**
     * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
     */
    uniqueKeyPolicy?: pulumi.Input<inputs.documentdb.v20200601preview.UniqueKeyPolicyArgs>;
}
/**
 * sqlContainerResourceArgsProvideDefaults sets the appropriate defaults for SqlContainerResourceArgs
 */
export function sqlContainerResourceArgsProvideDefaults(val: SqlContainerResourceArgs): SqlContainerResourceArgs {
    return {
        ...val,
        conflictResolutionPolicy: (val.conflictResolutionPolicy ? pulumi.output(val.conflictResolutionPolicy).apply(inputs.documentdb.v20200601preview.conflictResolutionPolicyArgsProvideDefaults) : undefined),
        indexingPolicy: (val.indexingPolicy ? pulumi.output(val.indexingPolicy).apply(inputs.documentdb.v20200601preview.indexingPolicyArgsProvideDefaults) : undefined),
        partitionKey: (val.partitionKey ? pulumi.output(val.partitionKey).apply(inputs.documentdb.v20200601preview.containerPartitionKeyArgsProvideDefaults) : undefined),
    };
}

/**
 * Cosmos DB SQL database resource object
 */
export interface SqlDatabaseResourceArgs {
    /**
     * Name of the Cosmos DB SQL database
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB SQL storedProcedure resource object
 */
export interface SqlStoredProcedureResourceArgs {
    /**
     * Body of the Stored Procedure
     */
    body?: pulumi.Input<string>;
    /**
     * Name of the Cosmos DB SQL storedProcedure
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB SQL trigger resource object
 */
export interface SqlTriggerResourceArgs {
    /**
     * Body of the Trigger
     */
    body?: pulumi.Input<string>;
    /**
     * Name of the Cosmos DB SQL trigger
     */
    id: pulumi.Input<string>;
    /**
     * The operation the trigger is associated with
     */
    triggerOperation?: pulumi.Input<string | enums.documentdb.v20200601preview.TriggerOperation>;
    /**
     * Type of the Trigger
     */
    triggerType?: pulumi.Input<string | enums.documentdb.v20200601preview.TriggerType>;
}

/**
 * Cosmos DB SQL userDefinedFunction resource object
 */
export interface SqlUserDefinedFunctionResourceArgs {
    /**
     * Body of the User Defined Function
     */
    body?: pulumi.Input<string>;
    /**
     * Name of the Cosmos DB SQL userDefinedFunction
     */
    id: pulumi.Input<string>;
}

/**
 * Cosmos DB table resource object
 */
export interface TableResourceArgs {
    /**
     * Name of the Cosmos DB table
     */
    id: pulumi.Input<string>;
}

/**
 * The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
 */
export interface UniqueKeyArgs {
    /**
     * List of paths must be unique for each document in the Azure Cosmos DB service
     */
    paths?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
 */
export interface UniqueKeyPolicyArgs {
    /**
     * List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
     */
    uniqueKeys?: pulumi.Input<pulumi.Input<inputs.documentdb.v20200601preview.UniqueKeyArgs>[]>;
}

/**
 * Virtual Network ACL Rule object
 */
export interface VirtualNetworkRuleArgs {
    /**
     * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
     */
    id?: pulumi.Input<string>;
    /**
     * Create firewall rule before the virtual network has vnet service endpoint enabled.
     */
    ignoreMissingVNetServiceEndpoint?: pulumi.Input<boolean>;
}

