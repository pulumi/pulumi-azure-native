// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20201001preview from "./v20201001preview/input";
export * as v20220110preview from "./v20220110preview/input";
export * as v20220715preview from "./v20220715preview/input";
/**
 * The extended location.
 */
export interface ExtendedLocationArgs {
    /**
     * The extended location name.
     */
    name?: pulumi.Input<string>;
    /**
     * The extended location type.
     */
    type?: pulumi.Input<string>;
}

/**
 * Username / Password Credentials to connect to guest.
 */
export interface GuestCredentialArgs {
    /**
     * Gets or sets the password to connect with the guest.
     */
    password?: pulumi.Input<string>;
    /**
     * Gets or sets username to connect with the guest.
     */
    username?: pulumi.Input<string>;
}

/**
 * Defines the resource properties.
 */
export interface HardwareProfileArgs {
    /**
     * Gets or sets memory size in MBs for the vm.
     */
    memorySizeMB?: pulumi.Input<number>;
    /**
     * Gets or sets the number of vCPUs for the vm.
     */
    numCPUs?: pulumi.Input<number>;
    /**
     * Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.
     */
    numCoresPerSocket?: pulumi.Input<number>;
}

/**
 * HTTP Proxy configuration for the VM.
 */
export interface HttpProxyConfigurationArgs {
    /**
     * Gets or sets httpsProxy url.
     */
    httpsProxy?: pulumi.Input<string>;
}

/**
 * Managed service identity.
 */
export interface IdentityArgs {
    /**
     * The type of managed service identity.
     */
    type: pulumi.Input<string | enums.connectedvmwarevsphere.IdentityType>;
}

/**
 * Network Interface model
 */
export interface NetworkInterfaceArgs {
    /**
     * Gets or sets the device key value.
     */
    deviceKey?: pulumi.Input<number>;
    /**
     * Gets or sets the ipsettings.
     */
    ipSettings?: pulumi.Input<inputs.connectedvmwarevsphere.NicIPSettingsArgs>;
    /**
     * Gets or sets the name of the network interface.
     */
    name?: pulumi.Input<string>;
    /**
     * Gets or sets the ARM Id of the network resource to connect the virtual machine.
     */
    networkId?: pulumi.Input<string>;
    /**
     * NIC type
     */
    nicType?: pulumi.Input<string | enums.connectedvmwarevsphere.NICType>;
    /**
     * Gets or sets the power on boot.
     */
    powerOnBoot?: pulumi.Input<string | enums.connectedvmwarevsphere.PowerOnBootOption>;
}

/**
 * Defines the resource properties.
 */
export interface NetworkProfileArgs {
    /**
     * Gets or sets the list of network interfaces associated with the virtual machine.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.connectedvmwarevsphere.NetworkInterfaceArgs>[]>;
}

/**
 * Defines the network interface ip settings.
 */
export interface NicIPSettingsArgs {
    /**
     * Gets or sets the nic allocation method.
     */
    allocationMethod?: pulumi.Input<string | enums.connectedvmwarevsphere.IPAddressAllocationMethod>;
    /**
     * Gets or sets the dns servers.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Gets or sets the gateway.
     */
    gateway?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Gets or sets the ip address for the nic.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Gets or sets the mask.
     */
    subnetMask?: pulumi.Input<string>;
}

/**
 * Defines the resource properties.
 */
export interface OsProfileArgs {
    /**
     * Gets or sets administrator password.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * Gets or sets administrator username.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * Gets or sets computer name.
     */
    computerName?: pulumi.Input<string>;
    /**
     * Gets or sets the type of the os.
     */
    osType?: pulumi.Input<string | enums.connectedvmwarevsphere.OsType>;
}

/**
 * Defines the resource properties.
 */
export interface PlacementProfileArgs {
    /**
     * Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept.
     */
    datastoreId?: pulumi.Input<string>;
    /**
     * Gets or sets the ARM Id of the host resource on which this virtual machine will deploy.
     */
    hostId?: pulumi.Input<string>;
    /**
     * Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy.
     */
    resourcePoolId?: pulumi.Input<string>;
}

/**
 * Defines the resource properties.
 */
export interface StorageProfileArgs {
    /**
     * Gets or sets the list of virtual disks associated with the virtual machine.
     */
    disks?: pulumi.Input<pulumi.Input<inputs.connectedvmwarevsphere.VirtualDiskArgs>[]>;
}

/**
 * Username / Password Credentials to connect to vcenter.
 */
export interface VICredentialArgs {
    /**
     * Gets or sets the password to connect with the vCenter.
     */
    password?: pulumi.Input<string>;
    /**
     * Gets or sets username to connect with the vCenter.
     */
    username?: pulumi.Input<string>;
}

/**
 * Virtual disk model
 */
export interface VirtualDiskArgs {
    /**
     * Gets or sets the controller id.
     */
    controllerKey?: pulumi.Input<number>;
    /**
     * Gets or sets the device key value.
     */
    deviceKey?: pulumi.Input<number>;
    /**
     * Gets or sets the device name.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * Gets or sets the disk mode.
     */
    diskMode?: pulumi.Input<string | enums.connectedvmwarevsphere.DiskMode>;
    /**
     * Gets or sets the disk total size.
     */
    diskSizeGB?: pulumi.Input<number>;
    /**
     * Gets or sets the disk backing type.
     */
    diskType?: pulumi.Input<string | enums.connectedvmwarevsphere.DiskType>;
    /**
     * Gets or sets the name of the virtual disk.
     */
    name?: pulumi.Input<string>;
    /**
     * Gets or sets the unit number of the disk on the controller.
     */
    unitNumber?: pulumi.Input<number>;
}

