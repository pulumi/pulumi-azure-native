// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Contact Details.
 */
export interface ContactDetailsArgs {
    /**
     * Contact name of the person.
     */
    contactName: pulumi.Input<string>;
    /**
     * List of Email-ids to be notified about job progress.
     */
    emailList: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Mobile number of the contact person.
     */
    mobile?: pulumi.Input<string>;
    /**
     * Notification preference for a job stage.
     */
    notificationPreference?: pulumi.Input<pulumi.Input<inputs.databox.v20190901.NotificationPreferenceArgs>[]>;
    /**
     * Phone number of the contact person.
     */
    phone: pulumi.Input<string>;
    /**
     * Phone extension number of the contact person.
     */
    phoneExtension?: pulumi.Input<string>;
}

/**
 * DataBox Disk Job Details.
 */
export interface DataBoxDiskJobDetailsArgs {
    /**
     * Contact details for notification and shipping.
     */
    contactDetails: pulumi.Input<inputs.databox.v20190901.ContactDetailsArgs>;
    /**
     * Destination account details.
     */
    destinationAccountDetails: pulumi.Input<pulumi.Input<inputs.databox.v20190901.DestinationManagedDiskDetailsArgs | inputs.databox.v20190901.DestinationStorageAccountDetailsArgs>[]>;
    /**
     * The expected size of the data, which needs to be transferred in this job, in terabytes.
     */
    expectedDataSizeInTeraBytes?: pulumi.Input<number>;
    /**
     * Indicates the type of job details.
     * Expected value is 'DataBoxDisk'.
     */
    jobDetailsType: pulumi.Input<"DataBoxDisk">;
    /**
     * User entered passkey for DataBox Disk job.
     */
    passkey?: pulumi.Input<string>;
    /**
     * Preferences for the order.
     */
    preferences?: pulumi.Input<inputs.databox.v20190901.PreferencesArgs>;
    /**
     * User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
     */
    preferredDisks?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    /**
     * Shipping address of the customer.
     */
    shippingAddress: pulumi.Input<inputs.databox.v20190901.ShippingAddressArgs>;
}
/**
 * dataBoxDiskJobDetailsArgsProvideDefaults sets the appropriate defaults for DataBoxDiskJobDetailsArgs
 */
export function dataBoxDiskJobDetailsArgsProvideDefaults(val: DataBoxDiskJobDetailsArgs): DataBoxDiskJobDetailsArgs {
    return {
        ...val,
        shippingAddress: pulumi.output(val.shippingAddress).apply(inputs.databox.v20190901.shippingAddressArgsProvideDefaults),
    };
}

/**
 * Databox Heavy Device Job Details
 */
export interface DataBoxHeavyJobDetailsArgs {
    /**
     * Contact details for notification and shipping.
     */
    contactDetails: pulumi.Input<inputs.databox.v20190901.ContactDetailsArgs>;
    /**
     * Destination account details.
     */
    destinationAccountDetails: pulumi.Input<pulumi.Input<inputs.databox.v20190901.DestinationManagedDiskDetailsArgs | inputs.databox.v20190901.DestinationStorageAccountDetailsArgs>[]>;
    /**
     * Set Device password for unlocking Databox Heavy
     */
    devicePassword?: pulumi.Input<string>;
    /**
     * The expected size of the data, which needs to be transferred in this job, in terabytes.
     */
    expectedDataSizeInTeraBytes?: pulumi.Input<number>;
    /**
     * Indicates the type of job details.
     * Expected value is 'DataBoxHeavy'.
     */
    jobDetailsType: pulumi.Input<"DataBoxHeavy">;
    /**
     * Preferences for the order.
     */
    preferences?: pulumi.Input<inputs.databox.v20190901.PreferencesArgs>;
    /**
     * Shipping address of the customer.
     */
    shippingAddress: pulumi.Input<inputs.databox.v20190901.ShippingAddressArgs>;
}
/**
 * dataBoxHeavyJobDetailsArgsProvideDefaults sets the appropriate defaults for DataBoxHeavyJobDetailsArgs
 */
export function dataBoxHeavyJobDetailsArgsProvideDefaults(val: DataBoxHeavyJobDetailsArgs): DataBoxHeavyJobDetailsArgs {
    return {
        ...val,
        shippingAddress: pulumi.output(val.shippingAddress).apply(inputs.databox.v20190901.shippingAddressArgsProvideDefaults),
    };
}

/**
 * Databox Job Details
 */
export interface DataBoxJobDetailsArgs {
    /**
     * Contact details for notification and shipping.
     */
    contactDetails: pulumi.Input<inputs.databox.v20190901.ContactDetailsArgs>;
    /**
     * Destination account details.
     */
    destinationAccountDetails: pulumi.Input<pulumi.Input<inputs.databox.v20190901.DestinationManagedDiskDetailsArgs | inputs.databox.v20190901.DestinationStorageAccountDetailsArgs>[]>;
    /**
     * Set Device password for unlocking Databox
     */
    devicePassword?: pulumi.Input<string>;
    /**
     * The expected size of the data, which needs to be transferred in this job, in terabytes.
     */
    expectedDataSizeInTeraBytes?: pulumi.Input<number>;
    /**
     * Indicates the type of job details.
     * Expected value is 'DataBox'.
     */
    jobDetailsType: pulumi.Input<"DataBox">;
    /**
     * Preferences for the order.
     */
    preferences?: pulumi.Input<inputs.databox.v20190901.PreferencesArgs>;
    /**
     * Shipping address of the customer.
     */
    shippingAddress: pulumi.Input<inputs.databox.v20190901.ShippingAddressArgs>;
}
/**
 * dataBoxJobDetailsArgsProvideDefaults sets the appropriate defaults for DataBoxJobDetailsArgs
 */
export function dataBoxJobDetailsArgsProvideDefaults(val: DataBoxJobDetailsArgs): DataBoxJobDetailsArgs {
    return {
        ...val,
        shippingAddress: pulumi.output(val.shippingAddress).apply(inputs.databox.v20190901.shippingAddressArgsProvideDefaults),
    };
}

/**
 * Details for the destination compute disks.
 */
export interface DestinationManagedDiskDetailsArgs {
    /**
     * Arm Id of the destination where the data has to be moved.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Data Destination Type.
     * Expected value is 'ManagedDisk'.
     */
    dataDestinationType: pulumi.Input<"ManagedDisk">;
    /**
     * Destination Resource Group Id where the Compute disks should be created.
     */
    resourceGroupId: pulumi.Input<string>;
    /**
     * Share password to be shared by all shares in SA.
     */
    sharePassword?: pulumi.Input<string>;
    /**
     * Arm Id of the storage account that can be used to copy the vhd for staging.
     */
    stagingStorageAccountId: pulumi.Input<string>;
}

/**
 * Details for the destination storage account.
 */
export interface DestinationStorageAccountDetailsArgs {
    /**
     * Arm Id of the destination where the data has to be moved.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Data Destination Type.
     * Expected value is 'StorageAccount'.
     */
    dataDestinationType: pulumi.Input<"StorageAccount">;
    /**
     * Share password to be shared by all shares in SA.
     */
    sharePassword?: pulumi.Input<string>;
    /**
     * Destination Storage Account Arm Id.
     */
    storageAccountId: pulumi.Input<string>;
}

/**
 * Additional delivery info.
 */
export interface JobDeliveryInfoArgs {
    /**
     * Scheduled date time.
     */
    scheduledDateTime?: pulumi.Input<string>;
}

/**
 * Notification preference for a job stage.
 */
export interface NotificationPreferenceArgs {
    /**
     * Notification is required or not.
     */
    sendNotification: pulumi.Input<boolean>;
    /**
     * Name of the stage.
     */
    stageName: pulumi.Input<string | enums.databox.v20190901.NotificationStageName>;
}
/**
 * notificationPreferenceArgsProvideDefaults sets the appropriate defaults for NotificationPreferenceArgs
 */
export function notificationPreferenceArgsProvideDefaults(val: NotificationPreferenceArgs): NotificationPreferenceArgs {
    return {
        ...val,
        sendNotification: (val.sendNotification) ?? true,
    };
}

/**
 * Preferences related to the order
 */
export interface PreferencesArgs {
    /**
     * Preferred Data Center Region.
     */
    preferredDataCenterRegion?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Preferences related to the shipment logistics of the sku.
     */
    transportPreferences?: pulumi.Input<inputs.databox.v20190901.TransportPreferencesArgs>;
}

/**
 * Shipping address where customer wishes to receive the device.
 */
export interface ShippingAddressArgs {
    /**
     * Type of address.
     */
    addressType?: pulumi.Input<string | enums.databox.v20190901.AddressType>;
    /**
     * Name of the City.
     */
    city?: pulumi.Input<string>;
    /**
     * Name of the company.
     */
    companyName?: pulumi.Input<string>;
    /**
     * Name of the Country.
     */
    country: pulumi.Input<string>;
    /**
     * Postal code.
     */
    postalCode: pulumi.Input<string>;
    /**
     * Name of the State or Province.
     */
    stateOrProvince?: pulumi.Input<string>;
    /**
     * Street Address line 1.
     */
    streetAddress1: pulumi.Input<string>;
    /**
     * Street Address line 2.
     */
    streetAddress2?: pulumi.Input<string>;
    /**
     * Street Address line 3.
     */
    streetAddress3?: pulumi.Input<string>;
    /**
     * Extended Zip Code.
     */
    zipExtendedCode?: pulumi.Input<string>;
}
/**
 * shippingAddressArgsProvideDefaults sets the appropriate defaults for ShippingAddressArgs
 */
export function shippingAddressArgsProvideDefaults(val: ShippingAddressArgs): ShippingAddressArgs {
    return {
        ...val,
        addressType: (val.addressType) ?? "None",
    };
}

/**
 * The Sku.
 */
export interface SkuArgs {
    /**
     * The display name of the sku.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The sku family.
     */
    family?: pulumi.Input<string>;
    /**
     * The sku name.
     */
    name: pulumi.Input<string | enums.databox.v20190901.SkuName>;
}

/**
 * Preferences related to the shipment logistics of the sku
 */
export interface TransportPreferencesArgs {
    /**
     * Indicates Shipment Logistics type that the customer preferred.
     */
    preferredShipmentType: pulumi.Input<string | enums.databox.v20190901.TransportShipmentTypes>;
}

