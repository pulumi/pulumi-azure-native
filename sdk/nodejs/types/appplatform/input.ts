// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20200701 from "./v20200701/input";
export * as v20201101preview from "./v20201101preview/input";
export * as v20210601preview from "./v20210601preview/input";
export * as v20210901preview from "./v20210901preview/input";
export * as v20220101preview from "./v20220101preview/input";
export * as v20220301preview from "./v20220301preview/input";
export * as v20220401 from "./v20220401/input";
export * as v20220501preview from "./v20220501preview/input";
export * as v20220901preview from "./v20220901preview/input";
export * as v20221101preview from "./v20221101preview/input";
/**
 * The properties of custom domain for API portal
 */
export interface ApiPortalCustomDomainPropertiesArgs {
    /**
     * The thumbprint of bound certificate.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * API portal properties payload
 */
export interface ApiPortalPropertiesArgs {
    /**
     * The array of resource Ids of gateway to integrate with API portal.
     */
    gatewayIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicate if only https is allowed.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * Indicates whether the API portal exposes endpoint.
     */
    public?: pulumi.Input<boolean>;
    /**
     * Collection of OpenAPI source URL locations.
     */
    sourceUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Single sign-on related configuration
     */
    ssoProperties?: pulumi.Input<inputs.appplatform.SsoPropertiesArgs>;
}
/**
 * apiPortalPropertiesArgsProvideDefaults sets the appropriate defaults for ApiPortalPropertiesArgs
 */
export function apiPortalPropertiesArgsProvideDefaults(val: ApiPortalPropertiesArgs): ApiPortalPropertiesArgs {
    return {
        ...val,
        httpsOnly: (val.httpsOnly) ?? false,
        public: (val.public) ?? false,
    };
}

/**
 * App resource properties payload
 */
export interface AppResourcePropertiesArgs {
    /**
     * Name of the active deployment of the App
     */
    activeDeploymentName?: pulumi.Input<string>;
    /**
     * Fully qualified dns Name.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Indicate if only https is allowed.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * Persistent disk settings
     */
    persistentDisk?: pulumi.Input<inputs.appplatform.PersistentDiskArgs>;
    /**
     * Indicates whether the App exposes public endpoint
     */
    public?: pulumi.Input<boolean>;
    /**
     * Temporary disk settings
     */
    temporaryDisk?: pulumi.Input<inputs.appplatform.TemporaryDiskArgs>;
}
/**
 * appResourcePropertiesArgsProvideDefaults sets the appropriate defaults for AppResourcePropertiesArgs
 */
export function appResourcePropertiesArgsProvideDefaults(val: AppResourcePropertiesArgs): AppResourcePropertiesArgs {
    return {
        ...val,
        httpsOnly: (val.httpsOnly) ?? false,
        temporaryDisk: (val.temporaryDisk ? pulumi.output(val.temporaryDisk).apply(inputs.appplatform.temporaryDiskArgsProvideDefaults) : undefined),
    };
}

/**
 * Binding resource properties payload
 */
export interface BindingResourcePropertiesArgs {
    /**
     * Binding parameters of the Binding resource
     */
    bindingParameters?: pulumi.Input<{[key: string]: any}>;
    /**
     * The key of the bound resource
     */
    key?: pulumi.Input<string>;
    /**
     * The Azure resource id of the bound resource
     */
    resourceId?: pulumi.Input<string>;
}

/**
 * Build service agent pool properties
 */
export interface BuildServiceAgentPoolPropertiesArgs {
    /**
     * build service agent pool size properties
     */
    poolSize?: pulumi.Input<inputs.appplatform.BuildServiceAgentPoolSizePropertiesArgs>;
}

/**
 * Build service agent pool size properties
 */
export interface BuildServiceAgentPoolSizePropertiesArgs {
    /**
     * The name of build service agent pool size
     */
    name?: pulumi.Input<string>;
}

/**
 * KPack Builder properties payload
 */
export interface BuilderPropertiesArgs {
    /**
     * Builder buildpack groups.
     */
    buildpackGroups?: pulumi.Input<pulumi.Input<inputs.appplatform.BuildpacksGroupPropertiesArgs>[]>;
    /**
     * Builder cluster stack property.
     */
    stack?: pulumi.Input<inputs.appplatform.StackPropertiesArgs>;
}

/**
 * Buildpack Binding Launch Properties
 */
export interface BuildpackBindingLaunchPropertiesArgs {
    /**
     * Non-sensitive properties for launchProperties
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Sensitive properties for launchProperties
     */
    secrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Properties of a buildpack binding
 */
export interface BuildpackBindingPropertiesArgs {
    /**
     * Buildpack Binding Type
     */
    bindingType?: pulumi.Input<string | enums.appplatform.BindingType>;
    /**
     * The object describes the buildpack binding launch properties
     */
    launchProperties?: pulumi.Input<inputs.appplatform.BuildpackBindingLaunchPropertiesArgs>;
}

/**
 * Buildpack properties payload
 */
export interface BuildpackPropertiesArgs {
    /**
     * Id of the buildpack
     */
    id?: pulumi.Input<string>;
}

/**
 * Buildpack group properties of the Builder
 */
export interface BuildpacksGroupPropertiesArgs {
    /**
     * Buildpacks in the buildpack group
     */
    buildpacks?: pulumi.Input<pulumi.Input<inputs.appplatform.BuildpackPropertiesArgs>[]>;
    /**
     * Buildpack group name
     */
    name?: pulumi.Input<string>;
}

/**
 * Certificate resource payload.
 */
export interface CertificatePropertiesArgs {
    /**
     * The certificate version of key vault.
     */
    certVersion?: pulumi.Input<string>;
    /**
     * The certificate name of key vault.
     */
    keyVaultCertName: pulumi.Input<string>;
    /**
     * The vault uri of user key vault.
     */
    vaultUri: pulumi.Input<string>;
}

/**
 * Service properties payload
 */
export interface ClusterResourcePropertiesArgs {
    /**
     * Network profile of the Service
     */
    networkProfile?: pulumi.Input<inputs.appplatform.NetworkProfileArgs>;
}

/**
 * Property of git.
 */
export interface ConfigServerGitPropertyArgs {
    /**
     * Public sshKey of git repository.
     */
    hostKey?: pulumi.Input<string>;
    /**
     * SshKey algorithm of git repository.
     */
    hostKeyAlgorithm?: pulumi.Input<string>;
    /**
     * Label of the repository
     */
    label?: pulumi.Input<string>;
    /**
     * Password of git repository basic auth.
     */
    password?: pulumi.Input<string>;
    /**
     * Private sshKey algorithm of git repository.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Repositories of git.
     */
    repositories?: pulumi.Input<pulumi.Input<inputs.appplatform.GitPatternRepositoryArgs>[]>;
    /**
     * Searching path of the repository
     */
    searchPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Strict host key checking or not.
     */
    strictHostKeyChecking?: pulumi.Input<boolean>;
    /**
     * URI of the repository
     */
    uri: pulumi.Input<string>;
    /**
     * Username of git repository basic auth.
     */
    username?: pulumi.Input<string>;
}

/**
 * Config server git properties payload
 */
export interface ConfigServerPropertiesArgs {
    /**
     * Settings of config server.
     */
    configServer?: pulumi.Input<inputs.appplatform.ConfigServerSettingsArgs>;
    /**
     * Error when apply config server settings.
     */
    error?: pulumi.Input<inputs.appplatform.ErrorArgs>;
}

/**
 * The settings of config server.
 */
export interface ConfigServerSettingsArgs {
    /**
     * Property of git environment.
     */
    gitProperty?: pulumi.Input<inputs.appplatform.ConfigServerGitPropertyArgs>;
}

/**
 * Property of git environment.
 */
export interface ConfigurationServiceGitPropertyArgs {
    /**
     * Repositories of Application Configuration Service git property.
     */
    repositories?: pulumi.Input<pulumi.Input<inputs.appplatform.ConfigurationServiceGitRepositoryArgs>[]>;
}

/**
 * Git repository property payload for Application Configuration Service
 */
export interface ConfigurationServiceGitRepositoryArgs {
    /**
     * Public sshKey of git repository.
     */
    hostKey?: pulumi.Input<string>;
    /**
     * SshKey algorithm of git repository.
     */
    hostKeyAlgorithm?: pulumi.Input<string>;
    /**
     * Label of the repository
     */
    label: pulumi.Input<string>;
    /**
     * Name of the repository
     */
    name: pulumi.Input<string>;
    /**
     * Password of git repository basic auth.
     */
    password?: pulumi.Input<string>;
    /**
     * Collection of patterns of the repository
     */
    patterns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Private sshKey algorithm of git repository.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Searching path of the repository
     */
    searchPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Strict host key checking or not.
     */
    strictHostKeyChecking?: pulumi.Input<boolean>;
    /**
     * URI of the repository
     */
    uri: pulumi.Input<string>;
    /**
     * Username of git repository basic auth.
     */
    username?: pulumi.Input<string>;
}

/**
 * Application Configuration Service properties payload
 */
export interface ConfigurationServicePropertiesArgs {
    /**
     * The settings of Application Configuration Service.
     */
    settings?: pulumi.Input<inputs.appplatform.ConfigurationServiceSettingsArgs>;
}

/**
 * The settings of Application Configuration Service.
 */
export interface ConfigurationServiceSettingsArgs {
    /**
     * Property of git environment.
     */
    gitProperty?: pulumi.Input<inputs.appplatform.ConfigurationServiceGitPropertyArgs>;
}

/**
 * Custom domain of app resource payload.
 */
export interface CustomDomainPropertiesArgs {
    /**
     * The bound certificate name of domain.
     */
    certName?: pulumi.Input<string>;
    /**
     * The thumbprint of bound certificate.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * Deployment resource properties payload
 */
export interface DeploymentResourcePropertiesArgs {
    /**
     * Deployment settings of the Deployment
     */
    deploymentSettings?: pulumi.Input<inputs.appplatform.DeploymentSettingsArgs>;
    /**
     * Uploaded source information of the deployment.
     */
    source?: pulumi.Input<inputs.appplatform.UserSourceInfoArgs>;
}
/**
 * deploymentResourcePropertiesArgsProvideDefaults sets the appropriate defaults for DeploymentResourcePropertiesArgs
 */
export function deploymentResourcePropertiesArgsProvideDefaults(val: DeploymentResourcePropertiesArgs): DeploymentResourcePropertiesArgs {
    return {
        ...val,
        deploymentSettings: (val.deploymentSettings ? pulumi.output(val.deploymentSettings).apply(inputs.appplatform.deploymentSettingsArgsProvideDefaults) : undefined),
    };
}

/**
 * Deployment settings payload
 */
export interface DeploymentSettingsArgs {
    /**
     * Required CPU, basic tier should be 1, standard tier should be in range (1, 4)
     */
    cpu?: pulumi.Input<number>;
    /**
     * Collection of environment variables
     */
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * JVM parameter
     */
    jvmOptions?: pulumi.Input<string>;
    /**
     * Required Memory size in GB, basic tier should be in range (1, 2), standard tier should be in range (1, 8)
     */
    memoryInGB?: pulumi.Input<number>;
    /**
     * The path to the .NET executable relative to zip root
     */
    netCoreMainEntryPath?: pulumi.Input<string>;
    /**
     * Runtime version
     */
    runtimeVersion?: pulumi.Input<string | enums.appplatform.RuntimeVersion>;
}
/**
 * deploymentSettingsArgsProvideDefaults sets the appropriate defaults for DeploymentSettingsArgs
 */
export function deploymentSettingsArgsProvideDefaults(val: DeploymentSettingsArgs): DeploymentSettingsArgs {
    return {
        ...val,
        cpu: (val.cpu) ?? 1,
        memoryInGB: (val.memoryInGB) ?? 1,
        runtimeVersion: (val.runtimeVersion) ?? "Java_8",
    };
}

/**
 * The error code compose of code and message.
 */
export interface ErrorArgs {
    /**
     * The code of error.
     */
    code?: pulumi.Input<string>;
    /**
     * The message of error.
     */
    message?: pulumi.Input<string>;
}

/**
 * API metadata property for Spring Cloud Gateway
 */
export interface GatewayApiMetadataPropertiesArgs {
    /**
     * Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)
     */
    description?: pulumi.Input<string>;
    /**
     * Location of additional documentation for the APIs available on the Gateway instance
     */
    documentation?: pulumi.Input<string>;
    /**
     * Base URL that API consumers will use to access APIs on the Gateway instance.
     */
    serverUrl?: pulumi.Input<string>;
    /**
     * Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)
     */
    title?: pulumi.Input<string>;
    /**
     * Version of APIs available on this Gateway instance (default: `unspecified`).
     */
    version?: pulumi.Input<string>;
}

/**
 * API route config of the Spring Cloud Gateway
 */
export interface GatewayApiRouteArgs {
    /**
     * A description, will be applied to methods in the generated OpenAPI documentation.
     */
    description?: pulumi.Input<string>;
    /**
     * To modify the request before sending it to the target endpoint, or the received response.
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Route processing order.
     */
    order?: pulumi.Input<number>;
    /**
     * A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
     */
    predicates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable sso validation.
     */
    ssoEnabled?: pulumi.Input<boolean>;
    /**
     * Classification tags, will be applied to methods in the generated OpenAPI documentation.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A title, will be applied to methods in the generated OpenAPI documentation.
     */
    title?: pulumi.Input<string>;
    /**
     * Pass currently-authenticated user's identity token to application service, default is 'false'
     */
    tokenRelay?: pulumi.Input<boolean>;
    /**
     * Full uri, will override `appName`.
     */
    uri?: pulumi.Input<string>;
}

/**
 * Cross-Origin Resource Sharing property
 */
export interface GatewayCorsPropertiesArgs {
    /**
     * Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.
     */
    allowCredentials?: pulumi.Input<boolean>;
    /**
     * Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.
     */
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.
     */
    allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allowed origins to make cross-site requests. The special value `*` allows all domains.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * HTTP response headers to expose for cross-site requests.
     */
    exposedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * How long, in seconds, the response from a pre-flight request can be cached by clients.
     */
    maxAge?: pulumi.Input<number>;
}

/**
 * The properties of custom domain for Spring Cloud Gateway
 */
export interface GatewayCustomDomainPropertiesArgs {
    /**
     * The thumbprint of bound certificate.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * Spring Cloud Gateway properties payload
 */
export interface GatewayPropertiesArgs {
    /**
     * API metadata property for Spring Cloud Gateway
     */
    apiMetadataProperties?: pulumi.Input<inputs.appplatform.GatewayApiMetadataPropertiesArgs>;
    /**
     * Cross-Origin Resource Sharing property
     */
    corsProperties?: pulumi.Input<inputs.appplatform.GatewayCorsPropertiesArgs>;
    /**
     * Indicate if only https is allowed.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * Indicates whether the Spring Cloud Gateway exposes endpoint.
     */
    public?: pulumi.Input<boolean>;
    /**
     * The requested resource quantity for required CPU and Memory.
     */
    resourceRequests?: pulumi.Input<inputs.appplatform.GatewayResourceRequestsArgs>;
    /**
     * Single sign-on related configuration
     */
    ssoProperties?: pulumi.Input<inputs.appplatform.SsoPropertiesArgs>;
}
/**
 * gatewayPropertiesArgsProvideDefaults sets the appropriate defaults for GatewayPropertiesArgs
 */
export function gatewayPropertiesArgsProvideDefaults(val: GatewayPropertiesArgs): GatewayPropertiesArgs {
    return {
        ...val,
        httpsOnly: (val.httpsOnly) ?? false,
        public: (val.public) ?? false,
        resourceRequests: (val.resourceRequests ? pulumi.output(val.resourceRequests).apply(inputs.appplatform.gatewayResourceRequestsArgsProvideDefaults) : undefined),
    };
}

/**
 * Resource request payload of Spring Cloud Gateway.
 */
export interface GatewayResourceRequestsArgs {
    /**
     * Cpu allocated to each Spring Cloud Gateway instance.
     */
    cpu?: pulumi.Input<string>;
    /**
     * Memory allocated to each Spring Cloud Gateway instance.
     */
    memory?: pulumi.Input<string>;
}
/**
 * gatewayResourceRequestsArgsProvideDefaults sets the appropriate defaults for GatewayResourceRequestsArgs
 */
export function gatewayResourceRequestsArgsProvideDefaults(val: GatewayResourceRequestsArgs): GatewayResourceRequestsArgs {
    return {
        ...val,
        cpu: (val.cpu) ?? "1",
        memory: (val.memory) ?? "2Gi",
    };
}

/**
 * API route config of the Spring Cloud Gateway
 */
export interface GatewayRouteConfigPropertiesArgs {
    /**
     * The resource Id of the Azure Spring Cloud app, required unless route defines `uri`.
     */
    appResourceId?: pulumi.Input<string>;
    /**
     * Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
     */
    routes?: pulumi.Input<pulumi.Input<inputs.appplatform.GatewayApiRouteArgs>[]>;
}

/**
 * Git repository property payload
 */
export interface GitPatternRepositoryArgs {
    /**
     * Public sshKey of git repository.
     */
    hostKey?: pulumi.Input<string>;
    /**
     * SshKey algorithm of git repository.
     */
    hostKeyAlgorithm?: pulumi.Input<string>;
    /**
     * Label of the repository
     */
    label?: pulumi.Input<string>;
    /**
     * Name of the repository
     */
    name: pulumi.Input<string>;
    /**
     * Password of git repository basic auth.
     */
    password?: pulumi.Input<string>;
    /**
     * Collection of pattern of the repository
     */
    pattern?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Private sshKey algorithm of git repository.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Searching path of the repository
     */
    searchPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Strict host key checking or not.
     */
    strictHostKeyChecking?: pulumi.Input<boolean>;
    /**
     * URI of the repository
     */
    uri: pulumi.Input<string>;
    /**
     * Username of git repository basic auth.
     */
    username?: pulumi.Input<string>;
}

/**
 * Managed identity properties retrieved from ARM request headers.
 */
export interface ManagedIdentityPropertiesArgs {
    /**
     * Principal Id
     */
    principalId?: pulumi.Input<string>;
    /**
     * Tenant Id
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Type of the managed identity
     */
    type?: pulumi.Input<string | enums.appplatform.ManagedIdentityType>;
}

/**
 * Monitoring Setting properties payload
 */
export interface MonitoringSettingPropertiesArgs {
    /**
     * Target application insight instrumentation key
     */
    appInsightsInstrumentationKey?: pulumi.Input<string>;
    /**
     * Error when apply Monitoring Setting changes.
     */
    error?: pulumi.Input<inputs.appplatform.ErrorArgs>;
    /**
     * Indicates whether enable the trace functionality
     */
    traceEnabled?: pulumi.Input<boolean>;
}

/**
 * Service network profile payload
 */
export interface NetworkProfileArgs {
    /**
     * Name of the resource group containing network resources of Azure Spring Cloud Apps
     */
    appNetworkResourceGroup?: pulumi.Input<string>;
    /**
     * Fully qualified resource Id of the subnet to host Azure Spring Cloud Apps
     */
    appSubnetId?: pulumi.Input<string>;
    /**
     * Azure Spring Cloud service reserved CIDR
     */
    serviceCidr?: pulumi.Input<string>;
    /**
     * Name of the resource group containing network resources of Azure Spring Cloud Service Runtime
     */
    serviceRuntimeNetworkResourceGroup?: pulumi.Input<string>;
    /**
     * Fully qualified resource Id of the subnet to host Azure Spring Cloud Service Runtime
     */
    serviceRuntimeSubnetId?: pulumi.Input<string>;
}

/**
 * Persistent disk payload
 */
export interface PersistentDiskArgs {
    /**
     * Mount path of the persistent disk
     */
    mountPath?: pulumi.Input<string>;
    /**
     * Size of the persistent disk in GB
     */
    sizeInGB?: pulumi.Input<number>;
}

/**
 * Sku of Azure Spring Cloud
 */
export interface SkuArgs {
    /**
     * Current capacity of the target resource
     */
    capacity?: pulumi.Input<number>;
    /**
     * Name of the Sku
     */
    name?: pulumi.Input<string>;
    /**
     * Tier of the Sku
     */
    tier?: pulumi.Input<string>;
}

/**
 * Single sign-on related configuration
 */
export interface SsoPropertiesArgs {
    /**
     * The public identifier for the application
     */
    clientId?: pulumi.Input<string>;
    /**
     * The secret known only to the application and the authorization server
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The URI of Issuer Identifier
     */
    issuerUri?: pulumi.Input<string>;
    /**
     * It defines the specific actions applications can be allowed to do on a user's behalf
     */
    scope?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * KPack ClusterStack properties payload
 */
export interface StackPropertiesArgs {
    /**
     * Id of the ClusterStack.
     */
    id?: pulumi.Input<string>;
    /**
     * Version of the ClusterStack
     */
    version?: pulumi.Input<string>;
}

/**
 * storage resource of type Azure Storage Account.
 */
export interface StorageAccountArgs {
    /**
     * The account key of the Azure Storage Account.
     */
    accountKey: pulumi.Input<string>;
    /**
     * The account name of the Azure Storage Account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The type of the storage.
     * Expected value is 'StorageAccount'.
     */
    storageType: pulumi.Input<"StorageAccount">;
}

/**
 * Temporary disk payload
 */
export interface TemporaryDiskArgs {
    /**
     * Mount path of the temporary disk
     */
    mountPath?: pulumi.Input<string>;
    /**
     * Size of the temporary disk in GB
     */
    sizeInGB?: pulumi.Input<number>;
}
/**
 * temporaryDiskArgsProvideDefaults sets the appropriate defaults for TemporaryDiskArgs
 */
export function temporaryDiskArgsProvideDefaults(val: TemporaryDiskArgs): TemporaryDiskArgs {
    return {
        ...val,
        mountPath: (val.mountPath) ?? "/tmp",
    };
}

/**
 * Source information for a deployment
 */
export interface UserSourceInfoArgs {
    /**
     * Selector for the artifact to be used for the deployment for multi-module projects. This should be
     * the relative path to the target module/project.
     */
    artifactSelector?: pulumi.Input<string>;
    /**
     * Relative path of the storage which stores the source
     */
    relativePath?: pulumi.Input<string>;
    /**
     * Type of the source uploaded
     */
    type?: pulumi.Input<string | enums.appplatform.UserSourceType>;
    /**
     * Version of the source
     */
    version?: pulumi.Input<string>;
}

