// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

export interface AccessControlResponse {
    /**
     * The behavior for IP access control in Key Delivery.
     */
    defaultAction?: string;
    /**
     * The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty.
     */
    ipAllowList?: string[];
}

export interface AccountEncryptionResponse {
    /**
     * The properties of the key used to encrypt the account.
     */
    keyVaultProperties?: outputs.media.v20210501.KeyVaultPropertiesResponse;
    /**
     * The type of key used to encrypt the Account Key.
     */
    type: string;
}

export interface EdgeUsageDataCollectionPolicyResponse {
    /**
     * Usage data collection frequency in ISO 8601 duration format e.g. PT10M , PT5H.
     */
    dataCollectionFrequency?: string;
    /**
     * Usage data reporting frequency in ISO 8601 duration format e.g. PT10M , PT5H.
     */
    dataReportingFrequency?: string;
    /**
     * Details of Event Hub where the usage will be reported.
     */
    eventHubDetails?: outputs.media.v20210501.EdgeUsageDataEventHubResponse;
    /**
     * Maximum time for which the functionality of the device will not be hampered for not reporting the usage data.
     */
    maxAllowedUnreportedUsageDuration?: string;
}

export interface EdgeUsageDataEventHubResponse {
    /**
     * Name of the Event Hub where usage will be reported.
     */
    name?: string;
    /**
     * Namespace of the Event Hub where usage will be reported.
     */
    namespace?: string;
    /**
     * SAS token needed to interact with Event Hub.
     */
    token?: string;
}

export interface KeyDeliveryResponse {
    /**
     * The access control properties for Key Delivery.
     */
    accessControl?: outputs.media.v20210501.AccessControlResponse;
}

export interface KeyVaultPropertiesResponse {
    /**
     * The current key used to encrypt the Media Services account, including the key version.
     */
    currentKeyIdentifier: string;
    /**
     * The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
     */
    keyIdentifier?: string;
}

export interface MediaServiceIdentityResponse {
    /**
     * The Principal ID of the identity.
     */
    principalId: string;
    /**
     * The Tenant ID of the identity.
     */
    tenantId: string;
    /**
     * The identity type.
     */
    type: string;
}

/**
 * The Private Endpoint resource.
 */
export interface PrivateEndpointResponse {
    /**
     * The ARM identifier for Private Endpoint
     */
    id: string;
}

/**
 * A collection of information about the state of the connection between service consumer and provider.
 */
export interface PrivateLinkServiceConnectionStateResponse {
    /**
     * A message indicating if changes on the service provider require any updates on the consumer.
     */
    actionsRequired?: string;
    /**
     * The reason for approval/rejection of the connection.
     */
    description?: string;
    /**
     * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
     */
    status?: string;
}

/**
 * The storage account details.
 */
export interface StorageAccountResponse {
    /**
     * The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.
     */
    id?: string;
    /**
     * The type of the storage account.
     */
    type: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC).
     */
    createdAt?: string;
    /**
     * The identity that created the resource.
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource.
     */
    createdByType?: string;
    /**
     * The timestamp of resource last modification (UTC)
     */
    lastModifiedAt?: string;
    /**
     * The identity that last modified the resource.
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedByType?: string;
}

