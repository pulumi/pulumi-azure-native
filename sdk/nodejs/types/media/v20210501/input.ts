// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

export interface AccessControlArgs {
    /**
     * The behavior for IP access control in Key Delivery.
     */
    defaultAction?: pulumi.Input<string | enums.media.v20210501.DefaultAction>;
    /**
     * The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty.
     */
    ipAllowList?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AccountEncryptionArgs {
    /**
     * The properties of the key used to encrypt the account.
     */
    keyVaultProperties?: pulumi.Input<inputs.media.v20210501.KeyVaultPropertiesArgs>;
    /**
     * The type of key used to encrypt the Account Key.
     */
    type: pulumi.Input<string | enums.media.v20210501.AccountEncryptionKeyType>;
}

export interface KeyDeliveryArgs {
    /**
     * The access control properties for Key Delivery.
     */
    accessControl?: pulumi.Input<inputs.media.v20210501.AccessControlArgs>;
}

export interface KeyVaultPropertiesArgs {
    /**
     * The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
     */
    keyIdentifier?: pulumi.Input<string>;
}

export interface MediaServiceIdentityArgs {
    /**
     * The identity type.
     */
    type: pulumi.Input<string | enums.media.v20210501.ManagedIdentityType>;
}

/**
 * A collection of information about the state of the connection between service consumer and provider.
 */
export interface PrivateLinkServiceConnectionStateArgs {
    /**
     * A message indicating if changes on the service provider require any updates on the consumer.
     */
    actionsRequired?: pulumi.Input<string>;
    /**
     * The reason for approval/rejection of the connection.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
     */
    status?: pulumi.Input<string | enums.media.v20210501.PrivateEndpointServiceConnectionStatus>;
}

/**
 * The storage account details.
 */
export interface StorageAccountArgs {
    /**
     * The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.
     */
    id?: pulumi.Input<string>;
    /**
     * The type of the storage account.
     */
    type: pulumi.Input<string | enums.media.v20210501.StorageAccountType>;
}

