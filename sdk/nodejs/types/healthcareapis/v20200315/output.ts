// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Setting indicating whether the service has a managed identity associated with it.
 */
export interface ResourceResponseIdentity {
    /**
     * The principal ID of the resource identity.
     */
    principalId: string;
    /**
     * The tenant ID of the resource.
     */
    tenantId: string;
    /**
     * Type of identity being specified, currently SystemAssigned and None are allowed.
     */
    type?: string;
}

/**
 * An access policy entry.
 */
export interface ServiceAccessPolicyEntryResponse {
    /**
     * An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.
     */
    objectId: string;
}

/**
 * Authentication configuration information
 */
export interface ServiceAuthenticationConfigurationInfoResponse {
    /**
     * The audience url for the service
     */
    audience?: string;
    /**
     * The authority url for the service
     */
    authority?: string;
    /**
     * If the SMART on FHIR proxy is enabled
     */
    smartProxyEnabled?: boolean;
}

/**
 * The settings for the CORS configuration of the service instance.
 */
export interface ServiceCorsConfigurationInfoResponse {
    /**
     * If credentials are allowed via CORS.
     */
    allowCredentials?: boolean;
    /**
     * The headers to be allowed via CORS.
     */
    headers?: string[];
    /**
     * The max age to be allowed via CORS.
     */
    maxAge?: number;
    /**
     * The methods to be allowed via CORS.
     */
    methods?: string[];
    /**
     * The origins to be allowed via CORS.
     */
    origins?: string[];
}

/**
 * The settings for the Cosmos DB database backing the service.
 */
export interface ServiceCosmosDbConfigurationInfoResponse {
    /**
     * The URI of the customer-managed key for the backing database.
     */
    keyVaultKeyUri?: string;
    /**
     * The provisioned throughput for the backing database.
     */
    offerThroughput?: number;
}

/**
 * Export operation configuration information
 */
export interface ServiceExportConfigurationInfoResponse {
    /**
     * The name of the default export storage account.
     */
    storageAccountName?: string;
}

/**
 * The properties of a service instance.
 */
export interface ServicesPropertiesResponse {
    /**
     * The access policies of the service instance.
     */
    accessPolicies?: outputs.healthcareapis.v20200315.ServiceAccessPolicyEntryResponse[];
    /**
     * The authentication configuration for the service instance.
     */
    authenticationConfiguration?: outputs.healthcareapis.v20200315.ServiceAuthenticationConfigurationInfoResponse;
    /**
     * The settings for the CORS configuration of the service instance.
     */
    corsConfiguration?: outputs.healthcareapis.v20200315.ServiceCorsConfigurationInfoResponse;
    /**
     * The settings for the Cosmos DB database backing the service.
     */
    cosmosDbConfiguration?: outputs.healthcareapis.v20200315.ServiceCosmosDbConfigurationInfoResponse;
    /**
     * The settings for the export operation of the service instance.
     */
    exportConfiguration?: outputs.healthcareapis.v20200315.ServiceExportConfigurationInfoResponse;
    /**
     * The provisioning state.
     */
    provisioningState: string;
}

