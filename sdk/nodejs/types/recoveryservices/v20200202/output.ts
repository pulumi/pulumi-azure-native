// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The details of the identity used for CMK
 */
export interface CmkKekIdentityResponse {
    /**
     * Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
     */
    useSystemAssignedIdentity?: boolean;
    /**
     * The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
     */
    userAssignedIdentity?: string;
}

/**
 * The properties of the Key Vault which hosts CMK
 */
export interface CmkKeyVaultPropertiesResponse {
    /**
     * The key uri of the Customer Managed Key
     */
    keyUri?: string;
}

/**
 * Identity for the resource.
 */
export interface IdentityDataResponse {
    /**
     * The principal ID of resource identity.
     */
    principalId: string;
    /**
     * The tenant ID of resource.
     */
    tenantId: string;
    /**
     * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
     */
    type: string;
    /**
     * The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    userAssignedIdentities?: {[key: string]: outputs.recoveryservices.v20200202.UserIdentityResponse};
}

/**
 * Private Endpoint Connection Response Properties
 */
export interface PrivateEndpointConnectionResponse {
    /**
     * Gets or sets private endpoint associated with the private endpoint connection
     */
    privateEndpoint?: outputs.recoveryservices.v20200202.PrivateEndpointResponse;
    /**
     * Gets or sets private link service connection state
     */
    privateLinkServiceConnectionState?: outputs.recoveryservices.v20200202.PrivateLinkServiceConnectionStateResponse;
    /**
     * Gets or sets provisioning state of the private endpoint connection
     */
    provisioningState?: string;
}

/**
 * Information to be stored in Vault properties as an element of privateEndpointConnections List.
 */
export interface PrivateEndpointConnectionVaultPropertiesResponse {
    /**
     * Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
     */
    id: string;
    /**
     * Private Endpoint Connection Response Properties.
     */
    properties: outputs.recoveryservices.v20200202.VaultPrivateEndpointConnectionResponse;
}

/**
 * The Private Endpoint network resource that is linked to the Private Endpoint connection.
 */
export interface PrivateEndpointResponse {
    /**
     * Gets or sets id.
     */
    id: string;
}

/**
 * Private Link Service Connection State
 */
export interface PrivateLinkServiceConnectionStateResponse {
    /**
     * Gets or sets actions required
     */
    actionRequired?: string;
    /**
     * Gets or sets description
     */
    description?: string;
    /**
     * Gets or sets the status
     */
    status?: string;
}

/**
 * Identifies the unique system identifier for each Azure resource.
 */
export interface SkuResponse {
    /**
     * The Sku name.
     */
    name: string;
}

/**
 * Details for upgrading vault.
 */
export interface UpgradeDetailsResponse {
    /**
     * UTC time at which the upgrade operation has ended.
     */
    endTimeUtc: string;
    /**
     * UTC time at which the upgrade operation status was last updated.
     */
    lastUpdatedTimeUtc: string;
    /**
     * Message to the user containing information about the upgrade operation.
     */
    message: string;
    /**
     * ID of the vault upgrade operation.
     */
    operationId: string;
    /**
     * Resource ID of the vault before the upgrade.
     */
    previousResourceId: string;
    /**
     * UTC time at which the upgrade operation has started.
     */
    startTimeUtc: string;
    /**
     * Status of the vault upgrade operation.
     */
    status: string;
    /**
     * The way the vault upgrade was triggered.
     */
    triggerType: string;
    /**
     * Resource ID of the upgraded vault.
     */
    upgradedResourceId: string;
}

/**
 * A resource identity that is managed by the user of the service.
 */
export interface UserIdentityResponse {
    /**
     * The client ID of the user-assigned identity.
     */
    clientId: string;
    /**
     * The principal ID of the user-assigned identity.
     */
    principalId: string;
}

/**
 * Private Endpoint Connection Response Properties.
 */
export interface VaultPrivateEndpointConnectionResponse {
    /**
     * The Private Endpoint network resource that is linked to the Private Endpoint connection.
     */
    privateEndpoint: outputs.recoveryservices.v20200202.PrivateEndpointResponse;
    /**
     * Gets or sets private link service connection state.
     */
    privateLinkServiceConnectionState: outputs.recoveryservices.v20200202.VaultPrivateLinkServiceConnectionStateResponse;
    /**
     * Gets or sets provisioning state of the private endpoint connection.
     */
    provisioningState: string;
}

/**
 * Gets or sets private link service connection state.
 */
export interface VaultPrivateLinkServiceConnectionStateResponse {
    /**
     * Gets or sets actions required.
     */
    actionsRequired: string;
    /**
     * Gets or sets description.
     */
    description: string;
    /**
     * Gets or sets the status.
     */
    status: string;
}

/**
 * Properties of the vault.
 */
export interface VaultPropertiesResponse {
    /**
     * Customer Managed Key details of the resource.
     */
    encryption?: outputs.recoveryservices.v20200202.VaultPropertiesResponseEncryption;
    /**
     * List of private endpoint connection.
     */
    privateEndpointConnections: outputs.recoveryservices.v20200202.PrivateEndpointConnectionVaultPropertiesResponse[];
    /**
     * Private endpoint state for backup.
     */
    privateEndpointStateForBackup: string;
    /**
     * Private endpoint state for site recovery.
     */
    privateEndpointStateForSiteRecovery: string;
    /**
     * Provisioning State.
     */
    provisioningState: string;
    /**
     * Details for upgrading vault.
     */
    upgradeDetails?: outputs.recoveryservices.v20200202.UpgradeDetailsResponse;
}

/**
 * Customer Managed Key details of the resource.
 */
export interface VaultPropertiesResponseEncryption {
    /**
     * Enabling/Disabling the Double Encryption state
     */
    infrastructureEncryption?: string;
    /**
     * The details of the identity used for CMK
     */
    kekIdentity?: outputs.recoveryservices.v20200202.CmkKekIdentityResponse;
    /**
     * The properties of the Key Vault which hosts CMK
     */
    keyVaultProperties?: outputs.recoveryservices.v20200202.CmkKeyVaultPropertiesResponse;
}

