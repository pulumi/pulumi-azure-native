// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * AzureBackupServer (DPMVenus) workload-specific protection container.
 */
export interface AzureBackupServerContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Specifies whether the container is re-registrable.
     */
    canReRegister?: pulumi.Input<boolean>;
    /**
     * ID of container.
     */
    containerId?: pulumi.Input<string>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'AzureBackupServerContainer'.
     */
    containerType?: pulumi.Input<"AzureBackupServerContainer">;
    /**
     * Backup engine Agent version
     */
    dpmAgentVersion?: pulumi.Input<string>;
    /**
     * List of BackupEngines protecting the container
     */
    dpmServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Extended Info of the container.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20161201.DPMContainerExtendedInfoArgs>;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Number of protected items in the BackupEngine
     */
    protectedItemCount?: pulumi.Input<number>;
    /**
     * Protection status of the container.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
    /**
     * To check if upgrade available
     */
    upgradeAvailable?: pulumi.Input<boolean>;
}

/**
 * IaaS VM workload-specific backup item representing a classic virtual machine.
 */
export interface AzureIaaSClassicComputeVMContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
     */
    containerType?: pulumi.Input<"Microsoft.ClassicCompute/virtualMachines">;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
    /**
     * Resource group name of Recovery Services Vault.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
     */
    virtualMachineId?: pulumi.Input<string>;
    /**
     * Specifies whether the container represents a Classic or an Azure Resource Manager VM.
     */
    virtualMachineVersion?: pulumi.Input<string>;
}

/**
 * IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
 */
export interface AzureIaaSComputeVMContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'Microsoft.Compute/virtualMachines'.
     */
    containerType?: pulumi.Input<"Microsoft.Compute/virtualMachines">;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
    /**
     * Resource group name of Recovery Services Vault.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
     */
    virtualMachineId?: pulumi.Input<string>;
    /**
     * Specifies whether the container represents a Classic or an Azure Resource Manager VM.
     */
    virtualMachineVersion?: pulumi.Input<string>;
}

/**
 * Container for SQL workloads under SQL Availability Group.
 */
export interface AzureSQLAGWorkloadContainerProtectionContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'SQLAGWorkLoadContainer'.
     */
    containerType?: pulumi.Input<"SQLAGWorkLoadContainer">;
    /**
     * Additional details of a workload container.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20161201.AzureWorkloadContainerExtendedInfoArgs>;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Time stamp when this container was updated.
     */
    lastUpdatedTime?: pulumi.Input<string>;
    /**
     * Re-Do Operation
     */
    operationType?: pulumi.Input<string | enums.recoveryservices.v20161201.OperationType>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
    /**
     * ARM ID of the virtual machine represented by this Azure Workload Container
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Workload type for which registration was sent.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20161201.WorkloadType>;
}

/**
 * Azure Sql workload-specific container.
 */
export interface AzureSqlContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'AzureSqlContainer'.
     */
    containerType?: pulumi.Input<"AzureSqlContainer">;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
}

/**
 * Azure Storage Account workload-specific container.
 */
export interface AzureStorageContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'StorageContainer'.
     */
    containerType?: pulumi.Input<"StorageContainer">;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Number of items backed up in this container.
     */
    protectedItemCount?: pulumi.Input<number>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
    /**
     * Resource group name of Recovery Services Vault.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * Fully qualified ARM url.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Storage account version.
     */
    storageAccountVersion?: pulumi.Input<string>;
}

/**
 * Container for SQL workloads under Azure Virtual Machines.
 */
export interface AzureVMAppContainerProtectionContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'VMAppContainer'.
     */
    containerType?: pulumi.Input<"VMAppContainer">;
    /**
     * Additional details of a workload container.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20161201.AzureWorkloadContainerExtendedInfoArgs>;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Time stamp when this container was updated.
     */
    lastUpdatedTime?: pulumi.Input<string>;
    /**
     * Re-Do Operation
     */
    operationType?: pulumi.Input<string | enums.recoveryservices.v20161201.OperationType>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
    /**
     * ARM ID of the virtual machine represented by this Azure Workload Container
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Workload type for which registration was sent.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20161201.WorkloadType>;
}

/**
 * Container for the workloads running inside Azure Compute or Classic Compute.
 */
export interface AzureWorkloadContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'AzureWorkloadContainer'.
     */
    containerType?: pulumi.Input<"AzureWorkloadContainer">;
    /**
     * Additional details of a workload container.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20161201.AzureWorkloadContainerExtendedInfoArgs>;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Time stamp when this container was updated.
     */
    lastUpdatedTime?: pulumi.Input<string>;
    /**
     * Re-Do Operation
     */
    operationType?: pulumi.Input<string | enums.recoveryservices.v20161201.OperationType>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
    /**
     * ARM ID of the virtual machine represented by this Azure Workload Container
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Workload type for which registration was sent.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20161201.WorkloadType>;
}

/**
 * Extended information of the container.
 */
export interface AzureWorkloadContainerExtendedInfoArgs {
    /**
     * Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
     */
    hostServerName?: pulumi.Input<string>;
    /**
     * Inquiry Status for the container.
     */
    inquiryInfo?: pulumi.Input<inputs.recoveryservices.v20161201.InquiryInfoArgs>;
    /**
     * List of the nodes in case of distributed container.
     */
    nodesList?: pulumi.Input<pulumi.Input<inputs.recoveryservices.v20161201.DistributedNodesInfoArgs>[]>;
}

/**
 * Container identity information
 */
export interface ContainerIdentityInfoArgs {
    /**
     * Protection container identity - AAD Tenant
     */
    aadTenantId?: pulumi.Input<string>;
    /**
     * Protection container identity - Audience
     */
    audience?: pulumi.Input<string>;
    /**
     * Protection container identity - AAD Service Principal
     */
    servicePrincipalClientId?: pulumi.Input<string>;
    /**
     * Unique name of the container
     */
    uniqueName?: pulumi.Input<string>;
}

/**
 * Additional information of the DPMContainer.
 */
export interface DPMContainerExtendedInfoArgs {
    /**
     * Last refresh time of the DPMContainer.
     */
    lastRefreshedAt?: pulumi.Input<string>;
}

/**
 * This is used to represent the various nodes of the distributed container.
 */
export interface DistributedNodesInfoArgs {
    /**
     * Name of the node under a distributed container.
     */
    nodeName?: pulumi.Input<string>;
    /**
     * Status of this Node.
     * Failed | Succeeded
     */
    status?: pulumi.Input<string>;
}

/**
 * DPM workload-specific protection container.
 */
export interface DpmContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Specifies whether the container is re-registrable.
     */
    canReRegister?: pulumi.Input<boolean>;
    /**
     * ID of container.
     */
    containerId?: pulumi.Input<string>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'DPMContainer'.
     */
    containerType?: pulumi.Input<"DPMContainer">;
    /**
     * Backup engine Agent version
     */
    dpmAgentVersion?: pulumi.Input<string>;
    /**
     * List of BackupEngines protecting the container
     */
    dpmServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Extended Info of the container.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20161201.DPMContainerExtendedInfoArgs>;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Number of protected items in the BackupEngine
     */
    protectedItemCount?: pulumi.Input<number>;
    /**
     * Protection status of the container.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
    /**
     * To check if upgrade available
     */
    upgradeAvailable?: pulumi.Input<boolean>;
}

/**
 * Base class for generic container of backup items
 */
export interface GenericContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'GenericContainer'.
     */
    containerType?: pulumi.Input<"GenericContainer">;
    /**
     * Extended information (not returned in List container API calls)
     */
    extendedInformation?: pulumi.Input<inputs.recoveryservices.v20161201.GenericContainerExtendedInfoArgs>;
    /**
     * Name of the container's fabric
     */
    fabricName?: pulumi.Input<string>;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
}

/**
 * Container extended information
 */
export interface GenericContainerExtendedInfoArgs {
    /**
     * Container identity information
     */
    containerIdentityInfo?: pulumi.Input<inputs.recoveryservices.v20161201.ContainerIdentityInfoArgs>;
    /**
     * Public key of container cert
     */
    rawCertData?: pulumi.Input<string>;
    /**
     * Azure Backup Service Endpoints for the container
     */
    serviceEndpoints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * IaaS VM workload-specific container.
 */
export interface IaaSVMContainerArgs {
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'IaaSVMContainer'.
     */
    containerType?: pulumi.Input<"IaaSVMContainer">;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
    /**
     * Resource group name of Recovery Services Vault.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
     */
    virtualMachineId?: pulumi.Input<string>;
    /**
     * Specifies whether the container represents a Classic or an Azure Resource Manager VM.
     */
    virtualMachineVersion?: pulumi.Input<string>;
}

/**
 * Details about inquired protectable items under a given container.
 */
export interface InquiryInfoArgs {
    /**
     * Inquiry Details which will have workload specific details.
     * For e.g. - For SQL and oracle this will contain different details.
     */
    inquiryDetails?: pulumi.Input<pulumi.Input<inputs.recoveryservices.v20161201.WorkloadInquiryDetailsArgs>[]>;
    /**
     * Inquiry Status for this container such as
     * InProgress | Failed | Succeeded
     */
    status?: pulumi.Input<string>;
}

/**
 * Validation for inquired protectable items under a given container.
 */
export interface InquiryValidationArgs {
    /**
     * Status for the Inquiry Validation.
     */
    status?: pulumi.Input<string>;
}

/**
 * MAB workload-specific Health Details.
 */
export interface MABContainerHealthDetailsArgs {
    /**
     * Health Code
     */
    code?: pulumi.Input<number>;
    /**
     * Health Message
     */
    message?: pulumi.Input<string>;
    /**
     * Health Recommended Actions
     */
    recommendations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Health Title
     */
    title?: pulumi.Input<string>;
}

/**
 * Container with items backed up using MAB backup engine.
 */
export interface MabContainerArgs {
    /**
     * Agent version of this container.
     */
    agentVersion?: pulumi.Input<string>;
    /**
     * Type of backup management for the container.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupManagementType>;
    /**
     * Can the container be registered one more time.
     */
    canReRegister?: pulumi.Input<boolean>;
    /**
     * Health state of mab container.
     */
    containerHealthState?: pulumi.Input<string>;
    /**
     * ContainerID represents the container.
     */
    containerId?: pulumi.Input<number>;
    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is 'Windows'.
     */
    containerType?: pulumi.Input<"Windows">;
    /**
     * Additional information for this container
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20161201.MabContainerExtendedInfoArgs>;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Status of health of the container.
     */
    healthStatus?: pulumi.Input<string>;
    /**
     * Health details on this mab container.
     */
    mabContainerHealthDetails?: pulumi.Input<pulumi.Input<inputs.recoveryservices.v20161201.MABContainerHealthDetailsArgs>[]>;
    /**
     * Number of items backed up in this container.
     */
    protectedItemCount?: pulumi.Input<number>;
    /**
     * Status of registration of the container with the Recovery Services Vault.
     */
    registrationStatus?: pulumi.Input<string>;
}

/**
 * Additional information of the container.
 */
export interface MabContainerExtendedInfoArgs {
    /**
     * Type of backup items associated with this container.
     */
    backupItemType?: pulumi.Input<string | enums.recoveryservices.v20161201.BackupItemType>;
    /**
     * List of backup items associated with this container.
     */
    backupItems?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Latest backup status of this container.
     */
    lastBackupStatus?: pulumi.Input<string>;
    /**
     * Time stamp when this container was refreshed.
     */
    lastRefreshedAt?: pulumi.Input<string>;
    /**
     * Backup policy associated with this container.
     */
    policyName?: pulumi.Input<string>;
}

/**
 * Details of an inquired protectable item.
 */
export interface WorkloadInquiryDetailsArgs {
    /**
     * Inquiry validation such as permissions and other backup validations.
     */
    inquiryValidation?: pulumi.Input<inputs.recoveryservices.v20161201.InquiryValidationArgs>;
    /**
     * Contains the protectable item Count inside this Container.
     */
    itemCount?: pulumi.Input<number>;
    /**
     * Type of the Workload such as SQL, Oracle etc.
     */
    type?: pulumi.Input<string>;
}

