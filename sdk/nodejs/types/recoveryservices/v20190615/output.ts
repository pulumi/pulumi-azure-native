// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Additional information about Azure File Share backup item.
 */
export interface AzureFileshareProtectedItemExtendedInfoResponse {
    /**
     * The oldest backup copy available for this item in the service.
     */
    oldestRecoveryPoint?: string;
    /**
     * Indicates consistency of policy object and policy applied to this backup item.
     */
    policyState?: string;
    /**
     * Number of available backup copies associated with this backup item.
     */
    recoveryPointCount?: number;
    /**
     * Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
     */
    resourceState: string;
    /**
     * The resource state sync time for this backup item.
     */
    resourceStateSyncTime: string;
}

/**
 * Azure File Share workload-specific backup item.
 */
export interface AzureFileshareProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information with this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.AzureFileshareProtectedItemExtendedInfoResponse;
    /**
     * Friendly name of the fileshare represented by this backup item.
     */
    friendlyName?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Health details of different KPIs
     */
    kpisHealths?: {[key: string]: outputs.recoveryservices.v20190615.KPIResourceHealthDetailsResponse};
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: string;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * backup item type.
     * Expected value is 'AzureFileShareProtectedItem'.
     */
    protectedItemType: "AzureFileShareProtectedItem";
    /**
     * Backup state of this backup item.
     */
    protectionState?: string;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * IaaS VM workload-specific backup item representing the Classic Compute VM.
 */
export interface AzureIaaSClassicComputeVMProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.AzureIaaSVMProtectedItemExtendedInfoResponse;
    /**
     * Extended Properties for Azure IaasVM Backup.
     */
    extendedProperties?: outputs.recoveryservices.v20190615.ExtendedPropertiesResponse;
    /**
     * Friendly name of the VM represented by this backup item.
     */
    friendlyName?: string;
    /**
     * Health details on this backup item.
     */
    healthDetails?: outputs.recoveryservices.v20190615.AzureIaaSVMHealthDetailsResponse[];
    /**
     * Health status of protected item.
     */
    healthStatus?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Health details of different KPIs
     */
    kpisHealths?: {[key: string]: outputs.recoveryservices.v20190615.KPIResourceHealthDetailsResponse};
    /**
     * Last backup operation status.
     */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: string;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataId?: string;
    /**
     * backup item type.
     * Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
     */
    protectedItemType: "Microsoft.ClassicCompute/virtualMachines";
    /**
     * Backup state of this backup item.
     */
    protectionState?: string;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Fully qualified ARM ID of the virtual machine represented by this item.
     */
    virtualMachineId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
 */
export interface AzureIaaSComputeVMProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.AzureIaaSVMProtectedItemExtendedInfoResponse;
    /**
     * Extended Properties for Azure IaasVM Backup.
     */
    extendedProperties?: outputs.recoveryservices.v20190615.ExtendedPropertiesResponse;
    /**
     * Friendly name of the VM represented by this backup item.
     */
    friendlyName?: string;
    /**
     * Health details on this backup item.
     */
    healthDetails?: outputs.recoveryservices.v20190615.AzureIaaSVMHealthDetailsResponse[];
    /**
     * Health status of protected item.
     */
    healthStatus?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Health details of different KPIs
     */
    kpisHealths?: {[key: string]: outputs.recoveryservices.v20190615.KPIResourceHealthDetailsResponse};
    /**
     * Last backup operation status.
     */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: string;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataId?: string;
    /**
     * backup item type.
     * Expected value is 'Microsoft.Compute/virtualMachines'.
     */
    protectedItemType: "Microsoft.Compute/virtualMachines";
    /**
     * Backup state of this backup item.
     */
    protectionState?: string;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Fully qualified ARM ID of the virtual machine represented by this item.
     */
    virtualMachineId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * Azure IaaS VM workload-specific Health Details.
 */
export interface AzureIaaSVMHealthDetailsResponse {
    /**
     * Health Code
     */
    code: number;
    /**
     * Health Message
     */
    message: string;
    /**
     * Health Recommended Actions
     */
    recommendations: string[];
    /**
     * Health Title
     */
    title: string;
}

/**
 * Additional information on Azure IaaS VM specific backup item.
 */
export interface AzureIaaSVMProtectedItemExtendedInfoResponse {
    /**
     * The oldest backup copy available for this backup item.
     */
    oldestRecoveryPoint?: string;
    /**
     * Specifies if backup policy associated with the backup item is inconsistent.
     */
    policyInconsistent?: boolean;
    /**
     * Number of backup copies available for this backup item.
     */
    recoveryPointCount?: number;
}

/**
 * IaaS VM workload-specific backup item.
 */
export interface AzureIaaSVMProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.AzureIaaSVMProtectedItemExtendedInfoResponse;
    /**
     * Extended Properties for Azure IaasVM Backup.
     */
    extendedProperties?: outputs.recoveryservices.v20190615.ExtendedPropertiesResponse;
    /**
     * Friendly name of the VM represented by this backup item.
     */
    friendlyName?: string;
    /**
     * Health details on this backup item.
     */
    healthDetails?: outputs.recoveryservices.v20190615.AzureIaaSVMHealthDetailsResponse[];
    /**
     * Health status of protected item.
     */
    healthStatus?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Health details of different KPIs
     */
    kpisHealths?: {[key: string]: outputs.recoveryservices.v20190615.KPIResourceHealthDetailsResponse};
    /**
     * Last backup operation status.
     */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: string;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataId?: string;
    /**
     * backup item type.
     * Expected value is 'AzureIaaSVMProtectedItem'.
     */
    protectedItemType: "AzureIaaSVMProtectedItem";
    /**
     * Backup state of this backup item.
     */
    protectionState?: string;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Fully qualified ARM ID of the virtual machine represented by this item.
     */
    virtualMachineId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * Additional information on Azure Sql specific protected item.
 */
export interface AzureSqlProtectedItemExtendedInfoResponse {
    /**
     * The oldest backup copy available for this item in the service.
     */
    oldestRecoveryPoint?: string;
    /**
     * State of the backup policy associated with this backup item.
     */
    policyState?: string;
    /**
     * Number of available backup copies associated with this backup item.
     */
    recoveryPointCount?: number;
}

/**
 * Azure SQL workload-specific backup item.
 */
export interface AzureSqlProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.AzureSqlProtectedItemExtendedInfoResponse;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
     */
    protectedItemDataId?: string;
    /**
     * backup item type.
     * Expected value is 'Microsoft.Sql/servers/databases'.
     */
    protectedItemType: "Microsoft.Sql/servers/databases";
    /**
     * Backup state of the backed up item.
     */
    protectionState?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * Additional information on Azure Workload for SQL specific backup item.
 */
export interface AzureVmWorkloadProtectedItemExtendedInfoResponse {
    /**
     * The oldest backup copy available for this backup item.
     */
    oldestRecoveryPoint?: string;
    /**
     * Indicates consistency of policy object and policy applied to this backup item.
     */
    policyState?: string;
    /**
     * Number of backup copies available for this backup item.
     */
    recoveryPointCount?: number;
}

/**
 * Azure VM workload-specific protected item.
 */
export interface AzureVmWorkloadProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.AzureVmWorkloadProtectedItemExtendedInfoResponse;
    /**
     * Friendly name of the DB represented by this backup item.
     */
    friendlyName?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Health details of different KPIs
     */
    kpisHealths?: {[key: string]: outputs.recoveryservices.v20190615.KPIResourceHealthDetailsResponse};
    /**
     * Error details in last backup
     */
    lastBackupErrorDetail?: outputs.recoveryservices.v20190615.ErrorDetailResponse;
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: string;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * Parent name of the DB such as Instance or Availability Group.
     */
    parentName?: string;
    /**
     * Parent type of protected item, example: for a DB, standalone server or distributed
     */
    parentType?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataSourceId?: string;
    /**
     * Health status of the backup item, evaluated based on last heartbeat received
     */
    protectedItemHealthStatus?: string;
    /**
     * backup item type.
     * Expected value is 'AzureVmWorkloadProtectedItem'.
     */
    protectedItemType: "AzureVmWorkloadProtectedItem";
    /**
     * Backup state of this backup item.
     */
    protectionState?: string;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: string;
    /**
     * Host/Cluster Name for instance or AG
     */
    serverName?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * Azure VM workload-specific protected item representing SAP ASE Database.
 */
export interface AzureVmWorkloadSAPAseDatabaseProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.AzureVmWorkloadProtectedItemExtendedInfoResponse;
    /**
     * Friendly name of the DB represented by this backup item.
     */
    friendlyName?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Health details of different KPIs
     */
    kpisHealths?: {[key: string]: outputs.recoveryservices.v20190615.KPIResourceHealthDetailsResponse};
    /**
     * Error details in last backup
     */
    lastBackupErrorDetail?: outputs.recoveryservices.v20190615.ErrorDetailResponse;
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: string;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * Parent name of the DB such as Instance or Availability Group.
     */
    parentName?: string;
    /**
     * Parent type of protected item, example: for a DB, standalone server or distributed
     */
    parentType?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataSourceId?: string;
    /**
     * Health status of the backup item, evaluated based on last heartbeat received
     */
    protectedItemHealthStatus?: string;
    /**
     * backup item type.
     * Expected value is 'AzureVmWorkloadSAPAseDatabase'.
     */
    protectedItemType: "AzureVmWorkloadSAPAseDatabase";
    /**
     * Backup state of this backup item.
     */
    protectionState?: string;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: string;
    /**
     * Host/Cluster Name for instance or AG
     */
    serverName?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * Azure VM workload-specific protected item representing SAP HANA Database.
 */
export interface AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.AzureVmWorkloadProtectedItemExtendedInfoResponse;
    /**
     * Friendly name of the DB represented by this backup item.
     */
    friendlyName?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Health details of different KPIs
     */
    kpisHealths?: {[key: string]: outputs.recoveryservices.v20190615.KPIResourceHealthDetailsResponse};
    /**
     * Error details in last backup
     */
    lastBackupErrorDetail?: outputs.recoveryservices.v20190615.ErrorDetailResponse;
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: string;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * Parent name of the DB such as Instance or Availability Group.
     */
    parentName?: string;
    /**
     * Parent type of protected item, example: for a DB, standalone server or distributed
     */
    parentType?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataSourceId?: string;
    /**
     * Health status of the backup item, evaluated based on last heartbeat received
     */
    protectedItemHealthStatus?: string;
    /**
     * backup item type.
     * Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
     */
    protectedItemType: "AzureVmWorkloadSAPHanaDatabase";
    /**
     * Backup state of this backup item.
     */
    protectionState?: string;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: string;
    /**
     * Host/Cluster Name for instance or AG
     */
    serverName?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * Azure VM workload-specific protected item representing SQL Database.
 */
export interface AzureVmWorkloadSQLDatabaseProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.AzureVmWorkloadProtectedItemExtendedInfoResponse;
    /**
     * Friendly name of the DB represented by this backup item.
     */
    friendlyName?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Health details of different KPIs
     */
    kpisHealths?: {[key: string]: outputs.recoveryservices.v20190615.KPIResourceHealthDetailsResponse};
    /**
     * Error details in last backup
     */
    lastBackupErrorDetail?: outputs.recoveryservices.v20190615.ErrorDetailResponse;
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: string;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * Parent name of the DB such as Instance or Availability Group.
     */
    parentName?: string;
    /**
     * Parent type of protected item, example: for a DB, standalone server or distributed
     */
    parentType?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataSourceId?: string;
    /**
     * Health status of the backup item, evaluated based on last heartbeat received
     */
    protectedItemHealthStatus?: string;
    /**
     * backup item type.
     * Expected value is 'AzureVmWorkloadSQLDatabase'.
     */
    protectedItemType: "AzureVmWorkloadSQLDatabase";
    /**
     * Backup state of this backup item.
     */
    protectionState?: string;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: string;
    /**
     * Host/Cluster Name for instance or AG
     */
    serverName?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * Additional information of DPM Protected item.
 */
export interface DPMProtectedItemExtendedInfoResponse {
    /**
     * Used Disk storage in bytes.
     */
    diskStorageUsedInBytes?: string;
    /**
     * To check if backup item is collocated.
     */
    isCollocated?: boolean;
    /**
     * To check if backup item is cloud protected.
     */
    isPresentOnCloud?: boolean;
    /**
     * Last backup status information on backup item.
     */
    lastBackupStatus?: string;
    /**
     * Last refresh time on backup item.
     */
    lastRefreshedAt?: string;
    /**
     * Oldest cloud recovery point time.
     */
    oldestRecoveryPoint?: string;
    /**
     * latest disk recovery point time.
     */
    onPremiseLatestRecoveryPoint?: string;
    /**
     * Oldest disk recovery point time.
     */
    onPremiseOldestRecoveryPoint?: string;
    /**
     * disk recovery point count.
     */
    onPremiseRecoveryPointCount?: number;
    /**
     * Attribute to provide information on various DBs.
     */
    protectableObjectLoadPath?: {[key: string]: string};
    /**
     * To check if backup item is disk protected.
     */
    protected?: boolean;
    /**
     * Protection group name of the backup item.
     */
    protectionGroupName?: string;
    /**
     * cloud recovery point count.
     */
    recoveryPointCount?: number;
    /**
     * total Disk storage in bytes.
     */
    totalDiskStorageSizeInBytes?: string;
}

/**
 * Additional information on Backup engine specific backup item.
 */
export interface DPMProtectedItemResponse {
    /**
     * Backup Management server protecting this backup item
     */
    backupEngineName?: string;
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Extended info of the backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.DPMProtectedItemExtendedInfoResponse;
    /**
     * Friendly name of the managed item
     */
    friendlyName?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * backup item type.
     * Expected value is 'DPMProtectedItem'.
     */
    protectedItemType: "DPMProtectedItem";
    /**
     * Protection state of the backup engine
     */
    protectionState?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

export interface DiskExclusionPropertiesResponse {
    /**
     * List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
     */
    diskLunList?: number[];
    /**
     * Flag to indicate whether DiskLunList is to be included/ excluded from backup.
     */
    isInclusionList?: boolean;
}

/**
 * Error Detail class which encapsulates Code, Message and Recommendations.
 */
export interface ErrorDetailResponse {
    /**
     * Error code.
     */
    code: string;
    /**
     * Error Message related to the Code.
     */
    message: string;
    /**
     * List of recommendation strings.
     */
    recommendations: string[];
}

/**
 * Extended Properties for Azure IaasVM Backup.
 */
export interface ExtendedPropertiesResponse {
    /**
     * Extended Properties for Disk Exclusion.
     */
    diskExclusionProperties?: outputs.recoveryservices.v20190615.DiskExclusionPropertiesResponse;
}

/**
 * Base class for backup items.
 */
export interface GenericProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Name of this backup item's fabric.
     */
    fabricName?: string;
    /**
     * Friendly name of the container.
     */
    friendlyName?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * Indicates consistency of policy object and policy applied to this backup item.
     */
    policyState?: string;
    /**
     * Data Plane Service ID of the protected item.
     */
    protectedItemId?: number;
    /**
     * backup item type.
     * Expected value is 'GenericProtectedItem'.
     */
    protectedItemType: "GenericProtectedItem";
    /**
     * Backup state of this backup item.
     */
    protectionState?: string;
    /**
     * Loosely coupled (type, value) associations (example - parent of a protected item)
     */
    sourceAssociations?: {[key: string]: string};
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * KPI Resource Health Details
 */
export interface KPIResourceHealthDetailsResponse {
    /**
     * Resource Health Status
     */
    resourceHealthDetails?: outputs.recoveryservices.v20190615.ResourceHealthDetailsResponse[];
    /**
     * Resource Health Status
     */
    resourceHealthStatus?: string;
}

/**
 * Additional information on the backed up item.
 */
export interface MabFileFolderProtectedItemExtendedInfoResponse {
    /**
     * Last time when the agent data synced to service.
     */
    lastRefreshedAt?: string;
    /**
     * The oldest backup copy available.
     */
    oldestRecoveryPoint?: string;
    /**
     * Number of backup copies associated with the backup item.
     */
    recoveryPointCount?: number;
}

/**
 * MAB workload-specific backup item.
 */
export interface MabFileFolderProtectedItemResponse {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: string;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: string;
    /**
     * Name of the computer associated with this backup item.
     */
    computerName?: string;
    /**
     * Unique name of container
     */
    containerName?: string;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: string;
    /**
     * Sync time for deferred deletion in UTC
     */
    deferredDeleteSyncTimeInUTC?: number;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: string;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: string;
    /**
     * Additional information with this backup item.
     */
    extendedInfo?: outputs.recoveryservices.v20190615.MabFileFolderProtectedItemExtendedInfoResponse;
    /**
     * Friendly name of this backup item.
     */
    friendlyName?: string;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: boolean;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: boolean;
    /**
     * Status of last backup operation.
     */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: string;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: string;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: string;
    /**
     * backup item type.
     * Expected value is 'MabFileFolderProtectedItem'.
     */
    protectedItemType: "MabFileFolderProtectedItem";
    /**
     * Protected, ProtectionStopped, IRPending or ProtectionError
     */
    protectionState?: string;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: string;
    /**
     * Type of workload this item represents.
     */
    workloadType?: string;
}

/**
 * Health Details for backup items.
 */
export interface ResourceHealthDetailsResponse {
    /**
     * Health Code
     */
    code: number;
    /**
     * Health Message
     */
    message: string;
    /**
     * Health Recommended Actions
     */
    recommendations: string[];
    /**
     * Health Title
     */
    title: string;
}

