// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Azure File Share workload-specific backup item.
 */
export interface AzureFileshareProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information with this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.AzureFileshareProtectedItemExtendedInfoArgs>;
    /**
     * Friendly name of the fileshare represented by this backup item.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * backups running status for this backup item.
     */
    healthStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.HealthStatus>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: pulumi.Input<string>;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: pulumi.Input<string>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * backup item type.
     * Expected value is 'AzureFileShareProtectedItem'.
     */
    protectedItemType?: pulumi.Input<"AzureFileShareProtectedItem">;
    /**
     * Backup state of this backup item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectionState>;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * Additional information about Azure File Share backup item.
 */
export interface AzureFileshareProtectedItemExtendedInfoArgs {
    /**
     * The oldest backup copy available for this item in the service.
     */
    oldestRecoveryPoint?: pulumi.Input<string>;
    /**
     * Indicates consistency of policy object and policy applied to this backup item.
     */
    policyState?: pulumi.Input<string>;
    /**
     * Number of available backup copies associated with this backup item.
     */
    recoveryPointCount?: pulumi.Input<number>;
}

/**
 * IaaS VM workload-specific backup item representing the Classic Compute VM.
 */
export interface AzureIaaSClassicComputeVMProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.AzureIaaSVMProtectedItemExtendedInfoArgs>;
    /**
     * Extended Properties for Azure IaasVM Backup.
     */
    extendedProperties?: pulumi.Input<inputs.recoveryservices.v20190513.ExtendedPropertiesArgs>;
    /**
     * Friendly name of the VM represented by this backup item.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Health status of protected item
     */
    healthStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.HealthStatus>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Last backup operation status.
     */
    lastBackupStatus?: pulumi.Input<string>;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: pulumi.Input<string>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataId?: pulumi.Input<string>;
    /**
     * backup item type.
     * Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
     */
    protectedItemType?: pulumi.Input<"Microsoft.ClassicCompute/virtualMachines">;
    /**
     * Backup state of this backup item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectionState>;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Fully qualified ARM ID of the virtual machine represented by this item.
     */
    virtualMachineId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
 */
export interface AzureIaaSComputeVMProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.AzureIaaSVMProtectedItemExtendedInfoArgs>;
    /**
     * Extended Properties for Azure IaasVM Backup.
     */
    extendedProperties?: pulumi.Input<inputs.recoveryservices.v20190513.ExtendedPropertiesArgs>;
    /**
     * Friendly name of the VM represented by this backup item.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Health status of protected item
     */
    healthStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.HealthStatus>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Last backup operation status.
     */
    lastBackupStatus?: pulumi.Input<string>;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: pulumi.Input<string>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataId?: pulumi.Input<string>;
    /**
     * backup item type.
     * Expected value is 'Microsoft.Compute/virtualMachines'.
     */
    protectedItemType?: pulumi.Input<"Microsoft.Compute/virtualMachines">;
    /**
     * Backup state of this backup item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectionState>;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Fully qualified ARM ID of the virtual machine represented by this item.
     */
    virtualMachineId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * IaaS VM workload-specific backup item.
 */
export interface AzureIaaSVMProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.AzureIaaSVMProtectedItemExtendedInfoArgs>;
    /**
     * Extended Properties for Azure IaasVM Backup.
     */
    extendedProperties?: pulumi.Input<inputs.recoveryservices.v20190513.ExtendedPropertiesArgs>;
    /**
     * Friendly name of the VM represented by this backup item.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Health status of protected item
     */
    healthStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.HealthStatus>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Last backup operation status.
     */
    lastBackupStatus?: pulumi.Input<string>;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: pulumi.Input<string>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataId?: pulumi.Input<string>;
    /**
     * backup item type.
     * Expected value is 'AzureIaaSVMProtectedItem'.
     */
    protectedItemType?: pulumi.Input<"AzureIaaSVMProtectedItem">;
    /**
     * Backup state of this backup item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectionState>;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Fully qualified ARM ID of the virtual machine represented by this item.
     */
    virtualMachineId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * Additional information on Azure IaaS VM specific backup item.
 */
export interface AzureIaaSVMProtectedItemExtendedInfoArgs {
    /**
     * The oldest backup copy available for this backup item.
     */
    oldestRecoveryPoint?: pulumi.Input<string>;
    /**
     * Specifies if backup policy associated with the backup item is inconsistent.
     */
    policyInconsistent?: pulumi.Input<boolean>;
    /**
     * Number of backup copies available for this backup item.
     */
    recoveryPointCount?: pulumi.Input<number>;
}

/**
 * Azure SQL workload-specific backup item.
 */
export interface AzureSqlProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.AzureSqlProtectedItemExtendedInfoArgs>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
     */
    protectedItemDataId?: pulumi.Input<string>;
    /**
     * backup item type.
     * Expected value is 'Microsoft.Sql/servers/databases'.
     */
    protectedItemType?: pulumi.Input<"Microsoft.Sql/servers/databases">;
    /**
     * Backup state of the backed up item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectedItemState>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * Additional information on Azure Sql specific protected item.
 */
export interface AzureSqlProtectedItemExtendedInfoArgs {
    /**
     * The oldest backup copy available for this item in the service.
     */
    oldestRecoveryPoint?: pulumi.Input<string>;
    /**
     * State of the backup policy associated with this backup item.
     */
    policyState?: pulumi.Input<string>;
    /**
     * Number of available backup copies associated with this backup item.
     */
    recoveryPointCount?: pulumi.Input<number>;
}

/**
 * Azure VM workload-specific protected item.
 */
export interface AzureVmWorkloadProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.AzureVmWorkloadProtectedItemExtendedInfoArgs>;
    /**
     * Friendly name of the DB represented by this backup item.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.LastBackupStatus>;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: pulumi.Input<string>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * Parent name of the DB such as Instance or Availability Group.
     */
    parentName?: pulumi.Input<string>;
    /**
     * Parent type of protected item, example: for a DB, standalone server or distributed
     */
    parentType?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataSourceId?: pulumi.Input<string>;
    /**
     * Health status of the backup item, evaluated based on last heartbeat received
     */
    protectedItemHealthStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectedItemHealthStatus>;
    /**
     * backup item type.
     * Expected value is 'AzureVmWorkloadProtectedItem'.
     */
    protectedItemType?: pulumi.Input<"AzureVmWorkloadProtectedItem">;
    /**
     * Backup state of this backup item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectionState>;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * Host/Cluster Name for instance or AG
     */
    serverName?: pulumi.Input<string>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * Additional information on Azure Workload for SQL specific backup item.
 */
export interface AzureVmWorkloadProtectedItemExtendedInfoArgs {
    /**
     * The oldest backup copy available for this backup item.
     */
    oldestRecoveryPoint?: pulumi.Input<string>;
    /**
     * Indicates consistency of policy object and policy applied to this backup item.
     */
    policyState?: pulumi.Input<string>;
    /**
     * Number of backup copies available for this backup item.
     */
    recoveryPointCount?: pulumi.Input<number>;
}

/**
 * Azure VM workload-specific protected item representing SAP ASE Database.
 */
export interface AzureVmWorkloadSAPAseDatabaseProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.AzureVmWorkloadProtectedItemExtendedInfoArgs>;
    /**
     * Friendly name of the DB represented by this backup item.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.LastBackupStatus>;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: pulumi.Input<string>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * Parent name of the DB such as Instance or Availability Group.
     */
    parentName?: pulumi.Input<string>;
    /**
     * Parent type of protected item, example: for a DB, standalone server or distributed
     */
    parentType?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataSourceId?: pulumi.Input<string>;
    /**
     * Health status of the backup item, evaluated based on last heartbeat received
     */
    protectedItemHealthStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectedItemHealthStatus>;
    /**
     * backup item type.
     * Expected value is 'AzureVmWorkloadSAPAseDatabase'.
     */
    protectedItemType?: pulumi.Input<"AzureVmWorkloadSAPAseDatabase">;
    /**
     * Backup state of this backup item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectionState>;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * Host/Cluster Name for instance or AG
     */
    serverName?: pulumi.Input<string>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * Azure VM workload-specific protected item representing SAP HANA Database.
 */
export interface AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.AzureVmWorkloadProtectedItemExtendedInfoArgs>;
    /**
     * Friendly name of the DB represented by this backup item.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.LastBackupStatus>;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: pulumi.Input<string>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * Parent name of the DB such as Instance or Availability Group.
     */
    parentName?: pulumi.Input<string>;
    /**
     * Parent type of protected item, example: for a DB, standalone server or distributed
     */
    parentType?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataSourceId?: pulumi.Input<string>;
    /**
     * Health status of the backup item, evaluated based on last heartbeat received
     */
    protectedItemHealthStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectedItemHealthStatus>;
    /**
     * backup item type.
     * Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
     */
    protectedItemType?: pulumi.Input<"AzureVmWorkloadSAPHanaDatabase">;
    /**
     * Backup state of this backup item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectionState>;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * Host/Cluster Name for instance or AG
     */
    serverName?: pulumi.Input<string>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * Azure VM workload-specific protected item representing SQL Database.
 */
export interface AzureVmWorkloadSQLDatabaseProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information for this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.AzureVmWorkloadProtectedItemExtendedInfoArgs>;
    /**
     * Friendly name of the DB represented by this backup item.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Last backup operation status. Possible values: Healthy, Unhealthy.
     */
    lastBackupStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.LastBackupStatus>;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: pulumi.Input<string>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * Parent name of the DB such as Instance or Availability Group.
     */
    parentName?: pulumi.Input<string>;
    /**
     * Parent type of protected item, example: for a DB, standalone server or distributed
     */
    parentType?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Data ID of the protected item.
     */
    protectedItemDataSourceId?: pulumi.Input<string>;
    /**
     * Health status of the backup item, evaluated based on last heartbeat received
     */
    protectedItemHealthStatus?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectedItemHealthStatus>;
    /**
     * backup item type.
     * Expected value is 'AzureVmWorkloadSQLDatabase'.
     */
    protectedItemType?: pulumi.Input<"AzureVmWorkloadSQLDatabase">;
    /**
     * Backup state of this backup item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectionState>;
    /**
     * Backup status of this backup item.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * Host/Cluster Name for instance or AG
     */
    serverName?: pulumi.Input<string>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * Additional information on Backup engine specific backup item.
 */
export interface DPMProtectedItemArgs {
    /**
     * Backup Management server protecting this backup item
     */
    backupEngineName?: pulumi.Input<string>;
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Extended info of the backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.DPMProtectedItemExtendedInfoArgs>;
    /**
     * Friendly name of the managed item
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * backup item type.
     * Expected value is 'DPMProtectedItem'.
     */
    protectedItemType?: pulumi.Input<"DPMProtectedItem">;
    /**
     * Protection state of the backup engine
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectedItemState>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * Additional information of DPM Protected item.
 */
export interface DPMProtectedItemExtendedInfoArgs {
    /**
     * Used Disk storage in bytes.
     */
    diskStorageUsedInBytes?: pulumi.Input<string>;
    /**
     * To check if backup item is collocated.
     */
    isCollocated?: pulumi.Input<boolean>;
    /**
     * To check if backup item is cloud protected.
     */
    isPresentOnCloud?: pulumi.Input<boolean>;
    /**
     * Last backup status information on backup item.
     */
    lastBackupStatus?: pulumi.Input<string>;
    /**
     * Last refresh time on backup item.
     */
    lastRefreshedAt?: pulumi.Input<string>;
    /**
     * Oldest cloud recovery point time.
     */
    oldestRecoveryPoint?: pulumi.Input<string>;
    /**
     * latest disk recovery point time.
     */
    onPremiseLatestRecoveryPoint?: pulumi.Input<string>;
    /**
     * Oldest disk recovery point time.
     */
    onPremiseOldestRecoveryPoint?: pulumi.Input<string>;
    /**
     * disk recovery point count.
     */
    onPremiseRecoveryPointCount?: pulumi.Input<number>;
    /**
     * Attribute to provide information on various DBs.
     */
    protectableObjectLoadPath?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * To check if backup item is disk protected.
     */
    protected?: pulumi.Input<boolean>;
    /**
     * Protection group name of the backup item.
     */
    protectionGroupName?: pulumi.Input<string>;
    /**
     * cloud recovery point count.
     */
    recoveryPointCount?: pulumi.Input<number>;
    /**
     * total Disk storage in bytes.
     */
    totalDiskStorageSizeInBytes?: pulumi.Input<string>;
}

export interface DiskExclusionPropertiesArgs {
    /**
     * List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
     */
    diskLunList?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Flag to indicate whether DiskLunList is to be included/ excluded from backup.
     */
    isInclusionList?: pulumi.Input<boolean>;
}

/**
 * Extended Properties for Azure IaasVM Backup.
 */
export interface ExtendedPropertiesArgs {
    /**
     * Extended Properties for Disk Exclusion.
     */
    diskExclusionProperties?: pulumi.Input<inputs.recoveryservices.v20190513.DiskExclusionPropertiesArgs>;
}

/**
 * Base class for backup items.
 */
export interface GenericProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Name of this backup item's fabric.
     */
    fabricName?: pulumi.Input<string>;
    /**
     * Friendly name of the container.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Indicates consistency of policy object and policy applied to this backup item.
     */
    policyState?: pulumi.Input<string>;
    /**
     * Data Plane Service ID of the protected item.
     */
    protectedItemId?: pulumi.Input<number>;
    /**
     * backup item type.
     * Expected value is 'GenericProtectedItem'.
     */
    protectedItemType?: pulumi.Input<"GenericProtectedItem">;
    /**
     * Backup state of this backup item.
     */
    protectionState?: pulumi.Input<string | enums.recoveryservices.v20190513.ProtectionState>;
    /**
     * Loosely coupled (type, value) associations (example - parent of a protected item)
     */
    sourceAssociations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * MAB workload-specific backup item.
 */
export interface MabFileFolderProtectedItemArgs {
    /**
     * Type of backup management for the backed up item.
     */
    backupManagementType?: pulumi.Input<string | enums.recoveryservices.v20190513.BackupManagementType>;
    /**
     * Name of the backup set the backup item belongs to
     */
    backupSetName?: pulumi.Input<string>;
    /**
     * Name of the computer associated with this backup item.
     */
    computerName?: pulumi.Input<string>;
    /**
     * Unique name of container
     */
    containerName?: pulumi.Input<string>;
    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     */
    createMode?: pulumi.Input<string | enums.recoveryservices.v20190513.CreateMode>;
    /**
     * Sync time for deferred deletion in UTC
     */
    deferredDeleteSyncTimeInUTC?: pulumi.Input<number>;
    /**
     * Time for deferred deletion in UTC
     */
    deferredDeleteTimeInUTC?: pulumi.Input<string>;
    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     */
    deferredDeleteTimeRemaining?: pulumi.Input<string>;
    /**
     * Additional information with this backup item.
     */
    extendedInfo?: pulumi.Input<inputs.recoveryservices.v20190513.MabFileFolderProtectedItemExtendedInfoArgs>;
    /**
     * Friendly name of this backup item.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     */
    isDeferredDeleteScheduleUpcoming?: pulumi.Input<boolean>;
    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     */
    isRehydrate?: pulumi.Input<boolean>;
    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     */
    isScheduledForDeferredDelete?: pulumi.Input<boolean>;
    /**
     * Status of last backup operation.
     */
    lastBackupStatus?: pulumi.Input<string>;
    /**
     * Timestamp of the last backup operation on this backup item.
     */
    lastBackupTime?: pulumi.Input<string>;
    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     */
    lastRecoveryPoint?: pulumi.Input<string>;
    /**
     * ID of the backup policy with which this item is backed up.
     */
    policyId?: pulumi.Input<string>;
    /**
     * backup item type.
     * Expected value is 'MabFileFolderProtectedItem'.
     */
    protectedItemType?: pulumi.Input<"MabFileFolderProtectedItem">;
    /**
     * Protected, ProtectionStopped, IRPending or ProtectionError
     */
    protectionState?: pulumi.Input<string>;
    /**
     * ARM ID of the resource to be backed up.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Type of workload this item represents.
     */
    workloadType?: pulumi.Input<string | enums.recoveryservices.v20190513.DataSourceType>;
}

/**
 * Additional information on the backed up item.
 */
export interface MabFileFolderProtectedItemExtendedInfoArgs {
    /**
     * Last time when the agent data synced to service.
     */
    lastRefreshedAt?: pulumi.Input<string>;
    /**
     * The oldest backup copy available.
     */
    oldestRecoveryPoint?: pulumi.Input<string>;
    /**
     * Number of backup copies associated with the backup item.
     */
    recoveryPointCount?: pulumi.Input<number>;
}

