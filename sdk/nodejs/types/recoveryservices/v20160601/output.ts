// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Azure VM (also known as IaaS VM) workload-specific backup policy.
 */
export interface AzureIaaSVMProtectionPolicyResponse {
    /**
     * This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is 'AzureIaasVM'.
     */
    backupManagementType?: "AzureIaasVM";
    /**
     * The number of items associated with this policy.
     */
    protectedItemsCount?: number;
    /**
     * The retention policy with the details on backup copy retention ranges.
     */
    retentionPolicy?: outputs.recoveryservices.v20160601.LongTermRetentionPolicyResponse | outputs.recoveryservices.v20160601.SimpleRetentionPolicyResponse;
    /**
     * The backup schedule specified as part of backup policy.
     */
    schedulePolicy?: outputs.recoveryservices.v20160601.LongTermSchedulePolicyResponse | outputs.recoveryservices.v20160601.SimpleSchedulePolicyResponse;
}

/**
 *  The Azure SQL workload-specific backup policy.
 */
export interface AzureSqlProtectionPolicyResponse {
    /**
     * This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is 'AzureSql'.
     */
    backupManagementType?: "AzureSql";
    /**
     * The number of items associated with this policy.
     */
    protectedItemsCount?: number;
    /**
     * The retention policy details.
     */
    retentionPolicy?: outputs.recoveryservices.v20160601.LongTermRetentionPolicyResponse | outputs.recoveryservices.v20160601.SimpleRetentionPolicyResponse;
}

/**
 * Daily retention format.
 */
export interface DailyRetentionFormatResponse {
    /**
     * List of days of the month.
     */
    daysOfTheMonth?: outputs.recoveryservices.v20160601.DayResponse[];
}

/**
 * Daily retention schedule.
 */
export interface DailyRetentionScheduleResponse {
    /**
     * The retention duration of retention policy.
     */
    retentionDuration?: outputs.recoveryservices.v20160601.RetentionDurationResponse;
    /**
     * The retention times of retention policy.
     */
    retentionTimes?: string[];
}

/**
 * Day of the week.
 */
export interface DayResponse {
    date?: number;
    isLast?: boolean;
}

/**
 * Identity for the resource.
 */
export interface IdentityDataResponse {
    /**
     * The principal ID of resource identity.
     */
    principalId: string;
    /**
     * The tenant ID of resource.
     */
    tenantId: string;
    /**
     * The identity type.
     */
    type: string;
}

/**
 * Long-term retention policy.
 */
export interface LongTermRetentionPolicyResponse {
    /**
     * Daily retention schedule of the backup policy.
     */
    dailySchedule?: outputs.recoveryservices.v20160601.DailyRetentionScheduleResponse;
    /**
     * Monthly retention schedule of the backup policy.
     */
    monthlySchedule?: outputs.recoveryservices.v20160601.MonthlyRetentionScheduleResponse;
    /**
     * This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is 'LongTermRetentionPolicy'.
     */
    retentionPolicyType?: "LongTermRetentionPolicy";
    /**
     * Weekly retention schedule of the backup policy.
     */
    weeklySchedule?: outputs.recoveryservices.v20160601.WeeklyRetentionScheduleResponse;
    /**
     * Yearly retention schedule of the backup policy.
     */
    yearlySchedule?: outputs.recoveryservices.v20160601.YearlyRetentionScheduleResponse;
}

/**
 * Long-term policy schedule.
 */
export interface LongTermSchedulePolicyResponse {
    /**
     * This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is 'LongTermSchedulePolicy'.
     */
    schedulePolicyType?: "LongTermSchedulePolicy";
}

/**
 * The backup policy for the file or folder container.
 */
export interface MabProtectionPolicyResponse {
    /**
     * This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is 'MAB'.
     */
    backupManagementType?: "MAB";
    /**
     * The number of items associated with this policy.
     */
    protectedItemsCount?: number;
    /**
     * The details specified in the Retention policy.
     */
    retentionPolicy?: outputs.recoveryservices.v20160601.LongTermRetentionPolicyResponse | outputs.recoveryservices.v20160601.SimpleRetentionPolicyResponse;
    /**
     * The schedule specified in the backup policy.
     */
    schedulePolicy?: outputs.recoveryservices.v20160601.LongTermSchedulePolicyResponse | outputs.recoveryservices.v20160601.SimpleSchedulePolicyResponse;
}

/**
 * The monthly retention schedule.
 */
export interface MonthlyRetentionScheduleResponse {
    /**
     * Retention duration of the retention policy.
     */
    retentionDuration?: outputs.recoveryservices.v20160601.RetentionDurationResponse;
    /**
     * Daily retention format for the monthly retention policy.
     */
    retentionScheduleDaily?: outputs.recoveryservices.v20160601.DailyRetentionFormatResponse;
    /**
     * Retention schedule format type for monthly retention policy.
     */
    retentionScheduleFormatType?: string;
    /**
     * Weekly retention format for the monthly retention policy.
     */
    retentionScheduleWeekly?: outputs.recoveryservices.v20160601.WeeklyRetentionFormatResponse;
    /**
     * Retention times of the retention policy.
     */
    retentionTimes?: string[];
}

/**
 * Information to be stored in Vault properties as an element of privateEndpointConnections List.
 */
export interface PrivateEndpointConnectionVaultPropertiesResponse {
    /**
     * Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
     */
    id: string;
    /**
     * Private Endpoint Connection Response Properties.
     */
    properties: outputs.recoveryservices.v20160601.VaultPrivateEndpointConnectionResponse;
}

/**
 * The Private Endpoint network resource that is linked to the Private Endpoint connection.
 */
export interface PrivateEndpointResponse {
    /**
     * Gets or sets id.
     */
    id: string;
}

/**
 * Retention duration.
 */
export interface RetentionDurationResponse {
    /**
     * Count of the duration types. Retention duration is determined by the combining the Count times and durationType. 
     *    For example, if Count = 3 and durationType = Weeks, then the retention duration is three weeks.
     */
    count?: number;
    /**
     * The retention duration type of the retention policy.
     */
    durationType?: string;
}

/**
 * Simple policy retention.
 */
export interface SimpleRetentionPolicyResponse {
    /**
     * Retention duration of the protection policy.
     */
    retentionDuration?: outputs.recoveryservices.v20160601.RetentionDurationResponse;
    /**
     * This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is 'SimpleRetentionPolicy'.
     */
    retentionPolicyType?: "SimpleRetentionPolicy";
}

/**
 * Simple policy schedule.
 */
export interface SimpleSchedulePolicyResponse {
    /**
     * This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is 'SimpleSchedulePolicy'.
     */
    schedulePolicyType?: "SimpleSchedulePolicy";
    /**
     * This list is the days of the week when the schedule runs.
     */
    scheduleRunDays?: string[];
    /**
     * Defines the frequency interval (daily or weekly) for the schedule policy.
     */
    scheduleRunFrequency?: string;
    /**
     * List of times, during a day, when the schedule runs.
     */
    scheduleRunTimes?: string[];
    /**
     * The number of times per week the schedule runs.
     */
    scheduleWeeklyFrequency?: number;
}

/**
 * Identifies the unique system identifier for each Azure resource.
 */
export interface SkuResponse {
    /**
     * The Sku name.
     */
    name: string;
}

/**
 * Details for upgrading vault.
 */
export interface UpgradeDetailsResponse {
    /**
     * UTC time at which the upgrade operation has ended.
     */
    endTimeUtc: string;
    /**
     * UTC time at which the upgrade operation status was last updated.
     */
    lastUpdatedTimeUtc: string;
    /**
     * Message to the user containing information about the upgrade operation.
     */
    message: string;
    /**
     * ID of the vault upgrade operation.
     */
    operationId: string;
    /**
     * Resource ID of the vault before the upgrade.
     */
    previousResourceId: string;
    /**
     * UTC time at which the upgrade operation has started.
     */
    startTimeUtc: string;
    /**
     * Status of the vault upgrade operation.
     */
    status: string;
    /**
     * The way the vault upgrade was triggered.
     */
    triggerType: string;
    /**
     * Resource ID of the upgraded vault.
     */
    upgradedResourceId: string;
}

/**
 * Private Endpoint Connection Response Properties.
 */
export interface VaultPrivateEndpointConnectionResponse {
    /**
     * The Private Endpoint network resource that is linked to the Private Endpoint connection.
     */
    privateEndpoint: outputs.recoveryservices.v20160601.PrivateEndpointResponse;
    /**
     * Gets or sets private link service connection state.
     */
    privateLinkServiceConnectionState: outputs.recoveryservices.v20160601.VaultPrivateLinkServiceConnectionStateResponse;
    /**
     * Gets or sets provisioning state of the private endpoint connection.
     */
    provisioningState: string;
}

/**
 * Gets or sets private link service connection state.
 */
export interface VaultPrivateLinkServiceConnectionStateResponse {
    /**
     * Gets or sets actions required.
     */
    actionsRequired: string;
    /**
     * Gets or sets description.
     */
    description: string;
    /**
     * Gets or sets the status.
     */
    status: string;
}

/**
 * Properties of the vault.
 */
export interface VaultPropertiesResponse {
    /**
     * List of private endpoint connection.
     */
    privateEndpointConnections: outputs.recoveryservices.v20160601.PrivateEndpointConnectionVaultPropertiesResponse[];
    /**
     * Private endpoint state for backup.
     */
    privateEndpointStateForBackup: string;
    /**
     * Private endpoint state for site recovery.
     */
    privateEndpointStateForSiteRecovery: string;
    /**
     * Provisioning State.
     */
    provisioningState: string;
    /**
     * Details for upgrading vault.
     */
    upgradeDetails?: outputs.recoveryservices.v20160601.UpgradeDetailsResponse;
}

/**
 * Weekly retention format.
 */
export interface WeeklyRetentionFormatResponse {
    /**
     * List of days of the week.
     */
    daysOfTheWeek?: string[];
    /**
     * List of weeks of the month.
     */
    weeksOfTheMonth?: string[];
}

/**
 * Weekly retention schedule.
 */
export interface WeeklyRetentionScheduleResponse {
    /**
     * List of the days of the week for the weekly retention policy.
     */
    daysOfTheWeek?: string[];
    /**
     * Retention duration of retention policy.
     */
    retentionDuration?: outputs.recoveryservices.v20160601.RetentionDurationResponse;
    /**
     * Retention times of the retention policy.
     */
    retentionTimes?: string[];
}

/**
 * Yearly retention schedule.
 */
export interface YearlyRetentionScheduleResponse {
    /**
     * List of the months of year for the yearly retention policy.
     */
    monthsOfYear?: string[];
    /**
     * Retention duration for the retention policy.
     */
    retentionDuration?: outputs.recoveryservices.v20160601.RetentionDurationResponse;
    /**
     * Daily retention format for the yearly retention policy.
     */
    retentionScheduleDaily?: outputs.recoveryservices.v20160601.DailyRetentionFormatResponse;
    /**
     * Retention schedule format for the yearly retention policy.
     */
    retentionScheduleFormatType?: string;
    /**
     * Weekly retention format for the yearly retention policy.
     */
    retentionScheduleWeekly?: outputs.recoveryservices.v20160601.WeeklyRetentionFormatResponse;
    /**
     * Retention times for the retention policy.
     */
    retentionTimes?: string[];
}

