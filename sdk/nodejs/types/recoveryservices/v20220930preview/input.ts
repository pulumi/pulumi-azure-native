// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Settings for Azure Monitor based alerts
 */
export interface AzureMonitorAlertSettingsArgs {
    alertsForAllJobFailures?: pulumi.Input<string | enums.recoveryservices.v20220930preview.AlertsState>;
}

/**
 * Settings for classic alerts
 */
export interface ClassicAlertSettingsArgs {
    alertsForCriticalOperations?: pulumi.Input<string | enums.recoveryservices.v20220930preview.AlertsState>;
}

/**
 * The details of the identity used for CMK
 */
export interface CmkKekIdentityArgs {
    /**
     * Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
     */
    useSystemAssignedIdentity?: pulumi.Input<boolean>;
    /**
     * The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
     */
    userAssignedIdentity?: pulumi.Input<string>;
}

/**
 * The properties of the Key Vault which hosts CMK
 */
export interface CmkKeyVaultPropertiesArgs {
    /**
     * The key uri of the Customer Managed Key
     */
    keyUri?: pulumi.Input<string>;
}

/**
 * Identity for the resource.
 */
export interface IdentityDataArgs {
    /**
     * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
     */
    type: pulumi.Input<string | enums.recoveryservices.v20220930preview.ResourceIdentityType>;
    /**
     * The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    userAssignedIdentities?: pulumi.Input<{[key: string]: any}>;
}

/**
 * Immutability Settings of vault
 */
export interface ImmutabilitySettingsArgs {
    state?: pulumi.Input<string | enums.recoveryservices.v20220930preview.ImmutabilityState>;
}

/**
 * Monitoring Settings of the vault
 */
export interface MonitoringSettingsArgs {
    /**
     * Settings for Azure Monitor based alerts
     */
    azureMonitorAlertSettings?: pulumi.Input<inputs.recoveryservices.v20220930preview.AzureMonitorAlertSettingsArgs>;
    /**
     * Settings for classic alerts
     */
    classicAlertSettings?: pulumi.Input<inputs.recoveryservices.v20220930preview.ClassicAlertSettingsArgs>;
}

/**
 * Security Settings of the vault
 */
export interface SecuritySettingsArgs {
    /**
     * Immutability Settings of a vault
     */
    immutabilitySettings?: pulumi.Input<inputs.recoveryservices.v20220930preview.ImmutabilitySettingsArgs>;
}

/**
 * Identifies the unique system identifier for each Azure resource.
 */
export interface SkuArgs {
    /**
     * The sku capacity
     */
    capacity?: pulumi.Input<string>;
    /**
     * The sku family
     */
    family?: pulumi.Input<string>;
    /**
     * Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
     */
    name: pulumi.Input<string | enums.recoveryservices.v20220930preview.SkuName>;
    /**
     * The sku size
     */
    size?: pulumi.Input<string>;
    /**
     * The Sku tier.
     */
    tier?: pulumi.Input<string>;
}

/**
 * Properties of the vault.
 */
export interface VaultPropertiesArgs {
    /**
     * Customer Managed Key details of the resource.
     */
    encryption?: pulumi.Input<inputs.recoveryservices.v20220930preview.VaultPropertiesEncryptionArgs>;
    /**
     * Monitoring Settings of the vault
     */
    monitoringSettings?: pulumi.Input<inputs.recoveryservices.v20220930preview.MonitoringSettingsArgs>;
    /**
     * property to enable or disable resource provider inbound network traffic from public clients
     */
    publicNetworkAccess?: pulumi.Input<string | enums.recoveryservices.v20220930preview.PublicNetworkAccess>;
    /**
     * Security Settings of the vault
     */
    securitySettings?: pulumi.Input<inputs.recoveryservices.v20220930preview.SecuritySettingsArgs>;
}

/**
 * Customer Managed Key details of the resource.
 */
export interface VaultPropertiesEncryptionArgs {
    /**
     * Enabling/Disabling the Double Encryption state
     */
    infrastructureEncryption?: pulumi.Input<string | enums.recoveryservices.v20220930preview.InfrastructureEncryptionState>;
    /**
     * The details of the identity used for CMK
     */
    kekIdentity?: pulumi.Input<inputs.recoveryservices.v20220930preview.CmkKekIdentityArgs>;
    /**
     * The properties of the Key Vault which hosts CMK
     */
    keyVaultProperties?: pulumi.Input<inputs.recoveryservices.v20220930preview.CmkKeyVaultPropertiesArgs>;
}

