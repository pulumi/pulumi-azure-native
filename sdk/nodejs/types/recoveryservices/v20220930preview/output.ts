// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Settings for Azure Monitor based alerts
 */
export interface AzureMonitorAlertSettingsResponse {
    alertsForAllJobFailures?: string;
}

/**
 * Settings for classic alerts
 */
export interface ClassicAlertSettingsResponse {
    alertsForCriticalOperations?: string;
}

/**
 * The details of the identity used for CMK
 */
export interface CmkKekIdentityResponse {
    /**
     * Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
     */
    useSystemAssignedIdentity?: boolean;
    /**
     * The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
     */
    userAssignedIdentity?: string;
}

/**
 * The properties of the Key Vault which hosts CMK
 */
export interface CmkKeyVaultPropertiesResponse {
    /**
     * The key uri of the Customer Managed Key
     */
    keyUri?: string;
}

/**
 * Identity for the resource.
 */
export interface IdentityDataResponse {
    /**
     * The principal ID of resource identity.
     */
    principalId: string;
    /**
     * The tenant ID of resource.
     */
    tenantId: string;
    /**
     * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
     */
    type: string;
    /**
     * The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    userAssignedIdentities?: {[key: string]: outputs.recoveryservices.v20220930preview.UserIdentityResponse};
}

/**
 * Immutability Settings of vault
 */
export interface ImmutabilitySettingsResponse {
    state?: string;
}

/**
 * Monitoring Settings of the vault
 */
export interface MonitoringSettingsResponse {
    /**
     * Settings for Azure Monitor based alerts
     */
    azureMonitorAlertSettings?: outputs.recoveryservices.v20220930preview.AzureMonitorAlertSettingsResponse;
    /**
     * Settings for classic alerts
     */
    classicAlertSettings?: outputs.recoveryservices.v20220930preview.ClassicAlertSettingsResponse;
}

/**
 * Information to be stored in Vault properties as an element of privateEndpointConnections List.
 */
export interface PrivateEndpointConnectionVaultPropertiesResponse {
    /**
     * Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
     */
    id: string;
    /**
     * The location of the private Endpoint connection
     */
    location: string;
    /**
     * The name of the private Endpoint Connection
     */
    name: string;
    /**
     * Private Endpoint Connection Response Properties.
     */
    properties: outputs.recoveryservices.v20220930preview.VaultPrivateEndpointConnectionResponse;
    /**
     * The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections
     */
    type: string;
}

/**
 * The Private Endpoint network resource that is linked to the Private Endpoint connection.
 */
export interface PrivateEndpointResponse {
    /**
     * Gets or sets id.
     */
    id: string;
}

/**
 * Security Settings of the vault
 */
export interface SecuritySettingsResponse {
    /**
     * Immutability Settings of a vault
     */
    immutabilitySettings?: outputs.recoveryservices.v20220930preview.ImmutabilitySettingsResponse;
}

/**
 * Identifies the unique system identifier for each Azure resource.
 */
export interface SkuResponse {
    /**
     * The sku capacity
     */
    capacity?: string;
    /**
     * The sku family
     */
    family?: string;
    /**
     * Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
     */
    name: string;
    /**
     * The sku size
     */
    size?: string;
    /**
     * The Sku tier.
     */
    tier?: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC).
     */
    createdAt?: string;
    /**
     * The identity that created the resource.
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource.
     */
    createdByType?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedAt?: string;
    /**
     * The identity that last modified the resource.
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedByType?: string;
}

/**
 * Details for upgrading vault.
 */
export interface UpgradeDetailsResponse {
    /**
     * UTC time at which the upgrade operation has ended.
     */
    endTimeUtc: string;
    /**
     * UTC time at which the upgrade operation status was last updated.
     */
    lastUpdatedTimeUtc: string;
    /**
     * Message to the user containing information about the upgrade operation.
     */
    message: string;
    /**
     * ID of the vault upgrade operation.
     */
    operationId: string;
    /**
     * Resource ID of the vault before the upgrade.
     */
    previousResourceId: string;
    /**
     * UTC time at which the upgrade operation has started.
     */
    startTimeUtc: string;
    /**
     * Status of the vault upgrade operation.
     */
    status: string;
    /**
     * The way the vault upgrade was triggered.
     */
    triggerType: string;
    /**
     * Resource ID of the upgraded vault.
     */
    upgradedResourceId: string;
}

/**
 * A resource identity that is managed by the user of the service.
 */
export interface UserIdentityResponse {
    /**
     * The client ID of the user-assigned identity.
     */
    clientId: string;
    /**
     * The principal ID of the user-assigned identity.
     */
    principalId: string;
}

/**
 * Private Endpoint Connection Response Properties.
 */
export interface VaultPrivateEndpointConnectionResponse {
    /**
     * Group Ids for the Private Endpoint
     */
    groupIds?: string[];
    /**
     * The Private Endpoint network resource that is linked to the Private Endpoint connection.
     */
    privateEndpoint: outputs.recoveryservices.v20220930preview.PrivateEndpointResponse;
    /**
     * Gets or sets private link service connection state.
     */
    privateLinkServiceConnectionState: outputs.recoveryservices.v20220930preview.VaultPrivateLinkServiceConnectionStateResponse;
    /**
     * Gets or sets provisioning state of the private endpoint connection.
     */
    provisioningState: string;
}

/**
 * Gets or sets private link service connection state.
 */
export interface VaultPrivateLinkServiceConnectionStateResponse {
    /**
     * Gets or sets actions required.
     */
    actionsRequired: string;
    /**
     * Gets or sets description.
     */
    description: string;
    /**
     * Gets or sets the status.
     */
    status: string;
}

/**
 * Properties of the vault.
 */
export interface VaultPropertiesResponse {
    /**
     * Backup storage version
     */
    backupStorageVersion: string;
    /**
     * Customer Managed Key details of the resource.
     */
    encryption?: outputs.recoveryservices.v20220930preview.VaultPropertiesResponseEncryption;
    /**
     * Monitoring Settings of the vault
     */
    monitoringSettings?: outputs.recoveryservices.v20220930preview.MonitoringSettingsResponse;
    /**
     * The details of the latest move operation performed on the Azure Resource
     */
    moveDetails?: outputs.recoveryservices.v20220930preview.VaultPropertiesResponseMoveDetails;
    /**
     * The State of the Resource after the move operation
     */
    moveState: string;
    /**
     * List of private endpoint connection.
     */
    privateEndpointConnections: outputs.recoveryservices.v20220930preview.PrivateEndpointConnectionVaultPropertiesResponse[];
    /**
     * Private endpoint state for backup.
     */
    privateEndpointStateForBackup: string;
    /**
     * Private endpoint state for site recovery.
     */
    privateEndpointStateForSiteRecovery: string;
    /**
     * Provisioning State.
     */
    provisioningState: string;
    /**
     * property to enable or disable resource provider inbound network traffic from public clients
     */
    publicNetworkAccess?: string;
    /**
     * The redundancy Settings of a Vault
     */
    redundancySettings?: outputs.recoveryservices.v20220930preview.VaultPropertiesResponseRedundancySettings;
    /**
     * Security Settings of the vault
     */
    securitySettings?: outputs.recoveryservices.v20220930preview.SecuritySettingsResponse;
    /**
     * Details for upgrading vault.
     */
    upgradeDetails?: outputs.recoveryservices.v20220930preview.UpgradeDetailsResponse;
}

/**
 * Customer Managed Key details of the resource.
 */
export interface VaultPropertiesResponseEncryption {
    /**
     * Enabling/Disabling the Double Encryption state
     */
    infrastructureEncryption?: string;
    /**
     * The details of the identity used for CMK
     */
    kekIdentity?: outputs.recoveryservices.v20220930preview.CmkKekIdentityResponse;
    /**
     * The properties of the Key Vault which hosts CMK
     */
    keyVaultProperties?: outputs.recoveryservices.v20220930preview.CmkKeyVaultPropertiesResponse;
}

/**
 * The details of the latest move operation performed on the Azure Resource
 */
export interface VaultPropertiesResponseMoveDetails {
    /**
     * End Time of the Resource Move Operation
     */
    completionTimeUtc: string;
    /**
     * OperationId of the Resource Move Operation
     */
    operationId: string;
    /**
     * Source Resource of the Resource Move Operation
     */
    sourceResourceId: string;
    /**
     * Start Time of the Resource Move Operation
     */
    startTimeUtc: string;
    /**
     * Target Resource of the Resource Move Operation
     */
    targetResourceId: string;
}

/**
 * The redundancy Settings of a Vault
 */
export interface VaultPropertiesResponseRedundancySettings {
    /**
     * Flag to show if Cross Region Restore is enabled on the Vault or not
     */
    crossRegionRestore: string;
    /**
     * The storage redundancy setting of a vault
     */
    standardTierStorageRedundancy: string;
}

