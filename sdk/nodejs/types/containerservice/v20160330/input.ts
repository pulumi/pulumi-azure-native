// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Profile for the container service agent pool.
 */
export interface ContainerServiceAgentPoolProfileArgs {
    /**
     * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
     */
    count?: pulumi.Input<number>;
    /**
     * DNS prefix to be used to create the FQDN for the agent pool.
     */
    dnsPrefix: pulumi.Input<string>;
    /**
     * Unique name of the agent pool profile in the context of the subscription and resource group.
     */
    name: pulumi.Input<string>;
    /**
     * Size of agent VMs.
     */
    vmSize: pulumi.Input<string | enums.containerservice.v20160330.ContainerServiceVMSizeTypes>;
}

export interface ContainerServiceDiagnosticsProfileArgs {
    /**
     * Profile for the container service VM diagnostic agent.
     */
    vmDiagnostics: pulumi.Input<inputs.containerservice.v20160330.ContainerServiceVMDiagnosticsArgs>;
}

/**
 * Profile for Linux VMs in the container service cluster.
 */
export interface ContainerServiceLinuxProfileArgs {
    /**
     * The administrator username to use for all Linux VMs
     */
    adminUsername: pulumi.Input<string>;
    /**
     * The ssh key configuration for Linux VMs.
     */
    ssh: pulumi.Input<inputs.containerservice.v20160330.ContainerServiceSshConfigurationArgs>;
}

/**
 * Profile for the container service master.
 */
export interface ContainerServiceMasterProfileArgs {
    /**
     * Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
     */
    count?: pulumi.Input<number>;
    /**
     * DNS prefix to be used to create the FQDN for master.
     */
    dnsPrefix: pulumi.Input<string>;
}
/**
 * containerServiceMasterProfileArgsProvideDefaults sets the appropriate defaults for ContainerServiceMasterProfileArgs
 */
export function containerServiceMasterProfileArgsProvideDefaults(val: ContainerServiceMasterProfileArgs): ContainerServiceMasterProfileArgs {
    return {
        ...val,
        count: (val.count) ?? 1,
    };
}

/**
 * Profile for the container service orchestrator.
 */
export interface ContainerServiceOrchestratorProfileArgs {
    /**
     * The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
     */
    orchestratorType: pulumi.Input<enums.containerservice.v20160330.ContainerServiceOchestratorTypes>;
}

/**
 * SSH configuration for Linux-based VMs running on Azure.
 */
export interface ContainerServiceSshConfigurationArgs {
    /**
     * the list of SSH public keys used to authenticate with Linux-based VMs.
     */
    publicKeys: pulumi.Input<pulumi.Input<inputs.containerservice.v20160330.ContainerServiceSshPublicKeyArgs>[]>;
}

/**
 * Contains information about SSH certificate public key data.
 */
export interface ContainerServiceSshPublicKeyArgs {
    /**
     * Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
     */
    keyData: pulumi.Input<string>;
}

/**
 * Profile for diagnostics on the container service VMs.
 */
export interface ContainerServiceVMDiagnosticsArgs {
    /**
     * Whether the VM diagnostic agent is provisioned on the VM.
     */
    enabled: pulumi.Input<boolean>;
}

/**
 * Profile for Windows VMs in the container service cluster.
 */
export interface ContainerServiceWindowsProfileArgs {
    /**
     * The administrator password to use for Windows VMs
     */
    adminPassword: pulumi.Input<string>;
    /**
     * The administrator username to use for Windows VMs
     */
    adminUsername: pulumi.Input<string>;
}

