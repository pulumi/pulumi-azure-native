// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Profile for container service agent pool
 */
export interface ContainerServiceAgentPoolProfileResponse {
    /**
     * No. of agents (VMs) that will host docker containers
     */
    count?: number;
    /**
     * DNS prefix to be used to create FQDN for this agent pool
     */
    dnsPrefix: string;
    /**
     * FQDN for the agent pool
     */
    fqdn: string;
    /**
     * Unique name of the agent pool profile within the context of the subscription and resource group
     */
    name: string;
    /**
     * Size of agent VMs
     */
    vmSize?: string;
}

export interface ContainerServiceDiagnosticsProfileResponse {
    /**
     * Profile for container service VM diagnostic agent
     */
    vmDiagnostics?: outputs.containerservice.v20151101preview.ContainerServiceVMDiagnosticsResponse;
}

/**
 * Profile for Linux VM
 */
export interface ContainerServiceLinuxProfileResponse {
    /**
     * The administrator username to use for all Linux VMs
     */
    adminUsername: string;
    /**
     * Specifies the ssh key configuration for Linux VMs
     */
    ssh: outputs.containerservice.v20151101preview.ContainerServiceSshConfigurationResponse;
}

/**
 * Profile for container service master
 */
export interface ContainerServiceMasterProfileResponse {
    /**
     * Number of masters (VMs) in the container cluster
     */
    count?: number;
    /**
     * DNS prefix to be used to create FQDN for master
     */
    dnsPrefix: string;
    /**
     * FQDN for the master
     */
    fqdn: string;
}

/**
 * Profile for Orchestrator
 */
export interface ContainerServiceOrchestratorProfileResponse {
    /**
     * Specifies what orchestrator will be used to manage container cluster resources.
     */
    orchestratorType?: string;
}

/**
 * SSH configuration for Linux based VMs running on Azure
 */
export interface ContainerServiceSshConfigurationResponse {
    /**
     * Gets or sets the list of SSH public keys used to authenticate with Linux based VMs
     */
    publicKeys?: outputs.containerservice.v20151101preview.ContainerServiceSshPublicKeyResponse[];
}

/**
 * Contains information about SSH certificate public key data.
 */
export interface ContainerServiceSshPublicKeyResponse {
    /**
     * Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.
     */
    keyData: string;
}

/**
 * Describes VM Diagnostics.
 */
export interface ContainerServiceVMDiagnosticsResponse {
    /**
     * Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.
     */
    enabled?: boolean;
    /**
     * Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.
     */
    storageUri: string;
}

/**
 * Profile for Windows jumpbox
 */
export interface ContainerServiceWindowsProfileResponse {
    /**
     * The administrator password to use for Windows jumpbox
     */
    adminPassword: string;
    /**
     * The administrator username to use for Windows jumpbox
     */
    adminUsername: string;
}

