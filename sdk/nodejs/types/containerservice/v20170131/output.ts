// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Profile for the container service agent pool.
 */
export interface ContainerServiceAgentPoolProfileResponse {
    /**
     * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
     */
    count: number;
    /**
     * DNS prefix to be used to create the FQDN for the agent pool.
     */
    dnsPrefix: string;
    /**
     * FQDN for the agent pool.
     */
    fqdn: string;
    /**
     * Unique name of the agent pool profile in the context of the subscription and resource group.
     */
    name: string;
    /**
     * Size of agent VMs.
     */
    vmSize: string;
}
/**
 * containerServiceAgentPoolProfileResponseProvideDefaults sets the appropriate defaults for ContainerServiceAgentPoolProfileResponse
 */
export function containerServiceAgentPoolProfileResponseProvideDefaults(val: ContainerServiceAgentPoolProfileResponse): ContainerServiceAgentPoolProfileResponse {
    return {
        ...val,
        count: (val.count) ?? 1,
    };
}

/**
 * Properties to configure a custom container service cluster.
 */
export interface ContainerServiceCustomProfileResponse {
    /**
     * The name of the custom orchestrator to use.
     */
    orchestrator: string;
}

export interface ContainerServiceDiagnosticsProfileResponse {
    /**
     * Profile for the container service VM diagnostic agent.
     */
    vmDiagnostics: outputs.containerservice.v20170131.ContainerServiceVMDiagnosticsResponse;
}

/**
 * Profile for Linux VMs in the container service cluster.
 */
export interface ContainerServiceLinuxProfileResponse {
    /**
     * The administrator username to use for Linux VMs.
     */
    adminUsername: string;
    /**
     * The ssh key configuration for Linux VMs.
     */
    ssh: outputs.containerservice.v20170131.ContainerServiceSshConfigurationResponse;
}

/**
 * Profile for the container service master.
 */
export interface ContainerServiceMasterProfileResponse {
    /**
     * Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
     */
    count?: number;
    /**
     * DNS prefix to be used to create the FQDN for master.
     */
    dnsPrefix: string;
    /**
     * FQDN for the master.
     */
    fqdn: string;
}
/**
 * containerServiceMasterProfileResponseProvideDefaults sets the appropriate defaults for ContainerServiceMasterProfileResponse
 */
export function containerServiceMasterProfileResponseProvideDefaults(val: ContainerServiceMasterProfileResponse): ContainerServiceMasterProfileResponse {
    return {
        ...val,
        count: (val.count) ?? 1,
    };
}

/**
 * Profile for the container service orchestrator.
 */
export interface ContainerServiceOrchestratorProfileResponse {
    /**
     * The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
     */
    orchestratorType: string;
}

/**
 * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
 */
export interface ContainerServiceServicePrincipalProfileResponse {
    /**
     * The ID for the service principal.
     */
    clientId: string;
    /**
     * The secret password associated with the service principal.
     */
    secret: string;
}

/**
 * SSH configuration for Linux-based VMs running on Azure.
 */
export interface ContainerServiceSshConfigurationResponse {
    /**
     * the list of SSH public keys used to authenticate with Linux-based VMs.
     */
    publicKeys: outputs.containerservice.v20170131.ContainerServiceSshPublicKeyResponse[];
}

/**
 * Contains information about SSH certificate public key data.
 */
export interface ContainerServiceSshPublicKeyResponse {
    /**
     * Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
     */
    keyData: string;
}

/**
 * Profile for diagnostics on the container service VMs.
 */
export interface ContainerServiceVMDiagnosticsResponse {
    /**
     * Whether the VM diagnostic agent is provisioned on the VM.
     */
    enabled: boolean;
    /**
     * The URI of the storage account where diagnostics are stored.
     */
    storageUri: string;
}

/**
 * Profile for Windows VMs in the container service cluster.
 */
export interface ContainerServiceWindowsProfileResponse {
    /**
     * The administrator password to use for Windows VMs.
     */
    adminPassword: string;
    /**
     * The administrator username to use for Windows VMs.
     */
    adminUsername: string;
}

