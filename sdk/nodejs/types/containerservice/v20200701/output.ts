// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Settings for upgrading an agentpool
 */
export interface AgentPoolUpgradeSettingsResponse {
    /**
     * Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
     */
    maxSurge?: string;
}

/**
 * Profile for Linux VMs in the container service cluster.
 */
export interface ContainerServiceLinuxProfileResponse {
    /**
     * The administrator username to use for Linux VMs.
     */
    adminUsername: string;
    /**
     * SSH configuration for Linux-based VMs running on Azure.
     */
    ssh: outputs.containerservice.v20200701.ContainerServiceSshConfigurationResponse;
}

/**
 * Profile of network configuration.
 */
export interface ContainerServiceNetworkProfileResponse {
    /**
     * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
     */
    dnsServiceIP?: string;
    /**
     * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
     */
    dockerBridgeCidr?: string;
    /**
     * Profile of the cluster load balancer.
     */
    loadBalancerProfile?: outputs.containerservice.v20200701.ManagedClusterLoadBalancerProfileResponse;
    /**
     * The load balancer sku for the managed cluster.
     */
    loadBalancerSku?: string;
    /**
     * Network mode used for building Kubernetes network.
     */
    networkMode?: string;
    /**
     * Network plugin used for building Kubernetes network.
     */
    networkPlugin?: string;
    /**
     * Network policy used for building Kubernetes network.
     */
    networkPolicy?: string;
    /**
     * The outbound (egress) routing method.
     */
    outboundType?: string;
    /**
     * A CIDR notation IP range from which to assign pod IPs when kubenet is used.
     */
    podCidr?: string;
    /**
     * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
     */
    serviceCidr?: string;
}
/**
 * containerServiceNetworkProfileResponseProvideDefaults sets the appropriate defaults for ContainerServiceNetworkProfileResponse
 */
export function containerServiceNetworkProfileResponseProvideDefaults(val: ContainerServiceNetworkProfileResponse): ContainerServiceNetworkProfileResponse {
    return {
        ...val,
        dnsServiceIP: (val.dnsServiceIP) ?? "10.0.0.10",
        dockerBridgeCidr: (val.dockerBridgeCidr) ?? "172.17.0.1/16",
        loadBalancerProfile: (val.loadBalancerProfile ? outputs.containerservice.v20200701.managedClusterLoadBalancerProfileResponseProvideDefaults(val.loadBalancerProfile) : undefined),
        networkPlugin: (val.networkPlugin) ?? "kubenet",
        outboundType: (val.outboundType) ?? "loadBalancer",
        podCidr: (val.podCidr) ?? "10.244.0.0/16",
        serviceCidr: (val.serviceCidr) ?? "10.0.0.0/16",
    };
}

/**
 * SSH configuration for Linux-based VMs running on Azure.
 */
export interface ContainerServiceSshConfigurationResponse {
    /**
     * The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
     */
    publicKeys: outputs.containerservice.v20200701.ContainerServiceSshPublicKeyResponse[];
}

/**
 * Contains information about SSH certificate public key data.
 */
export interface ContainerServiceSshPublicKeyResponse {
    /**
     * Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
     */
    keyData: string;
}

/**
 * The credential result response.
 */
export interface CredentialResultResponse {
    /**
     * The name of the credential.
     */
    name: string;
    /**
     * Base64-encoded Kubernetes configuration file.
     */
    value: string;
}

/**
 * AADProfile specifies attributes for Azure Active Directory integration.
 */
export interface ManagedClusterAADProfileResponse {
    /**
     * AAD group object IDs that will have admin role of the cluster.
     */
    adminGroupObjectIDs?: string[];
    /**
     * The client AAD application ID.
     */
    clientAppID?: string;
    /**
     * Whether to enable Azure RBAC for Kubernetes authorization.
     */
    enableAzureRBAC?: boolean;
    /**
     * Whether to enable managed AAD.
     */
    managed?: boolean;
    /**
     * The server AAD application ID.
     */
    serverAppID?: string;
    /**
     * The server AAD application secret.
     */
    serverAppSecret?: string;
    /**
     * The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
     */
    tenantID?: string;
}

/**
 * Access profile for managed cluster API server.
 */
export interface ManagedClusterAPIServerAccessProfileResponse {
    /**
     * Authorized IP Ranges to kubernetes API server.
     */
    authorizedIPRanges?: string[];
    /**
     * Whether to create the cluster as a private cluster or not.
     */
    enablePrivateCluster?: boolean;
}

/**
 * A Kubernetes add-on profile for a managed cluster.
 */
export interface ManagedClusterAddonProfileResponse {
    /**
     * Key-value pairs for configuring an add-on.
     */
    config?: {[key: string]: string};
    /**
     * Whether the add-on is enabled or not.
     */
    enabled: boolean;
    /**
     * Information of user assigned identity used by this add-on.
     */
    identity: outputs.containerservice.v20200701.ManagedClusterAddonProfileResponseIdentity;
}

/**
 * Information of user assigned identity used by this add-on.
 */
export interface ManagedClusterAddonProfileResponseIdentity {
    /**
     * The client id of the user assigned identity.
     */
    clientId?: string;
    /**
     * The object id of the user assigned identity.
     */
    objectId?: string;
    /**
     * The resource id of the user assigned identity.
     */
    resourceId?: string;
}

/**
 * Profile for the container service agent pool.
 */
export interface ManagedClusterAgentPoolProfileResponse {
    /**
     * Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
     */
    availabilityZones?: string[];
    /**
     * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
     */
    count?: number;
    /**
     * Whether to enable auto-scaler
     */
    enableAutoScaling?: boolean;
    /**
     * Enable public IP for nodes
     */
    enableNodePublicIP?: boolean;
    /**
     * Maximum number of nodes for auto-scaling
     */
    maxCount?: number;
    /**
     * Maximum number of pods that can run on a node.
     */
    maxPods?: number;
    /**
     * Minimum number of nodes for auto-scaling
     */
    minCount?: number;
    /**
     * AgentPoolMode represents mode of an agent pool
     */
    mode?: string;
    /**
     * Unique name of the agent pool profile in the context of the subscription and resource group.
     */
    name: string;
    /**
     * Version of node image
     */
    nodeImageVersion: string;
    /**
     * Agent pool node labels to be persisted across all nodes in agent pool.
     */
    nodeLabels?: {[key: string]: string};
    /**
     * Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
     */
    nodeTaints?: string[];
    /**
     * Version of orchestrator specified when creating the managed cluster.
     */
    orchestratorVersion?: string;
    /**
     * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
     */
    osDiskSizeGB?: number;
    /**
     * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
     */
    osType?: string;
    /**
     * The current deployment or provisioning state, which only appears in the response.
     */
    provisioningState: string;
    /**
     * The ID for Proximity Placement Group.
     */
    proximityPlacementGroupID?: string;
    /**
     * ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
     */
    scaleSetEvictionPolicy?: string;
    /**
     * ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
     */
    scaleSetPriority?: string;
    /**
     * SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
     */
    spotMaxPrice?: number;
    /**
     * Agent pool tags to be persisted on the agent pool virtual machine scale set.
     */
    tags?: {[key: string]: string};
    /**
     * AgentPoolType represents types of an agent pool
     */
    type?: string;
    /**
     * Settings for upgrading the agentpool
     */
    upgradeSettings?: outputs.containerservice.v20200701.AgentPoolUpgradeSettingsResponse;
    /**
     * Size of agent VMs.
     */
    vmSize?: string;
    /**
     * VNet SubnetID specifies the VNet's subnet identifier.
     */
    vnetSubnetID?: string;
}

/**
 * Identity for the managed cluster.
 */
export interface ManagedClusterIdentityResponse {
    /**
     * The principal id of the system assigned identity which is used by master components.
     */
    principalId: string;
    /**
     * The tenant id of the system assigned identity which is used by master components.
     */
    tenantId: string;
    /**
     * The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
     */
    type?: string;
    /**
     * The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    userAssignedIdentities?: {[key: string]: outputs.containerservice.v20200701.ManagedClusterIdentityResponseUserAssignedIdentities};
}

export interface ManagedClusterIdentityResponseUserAssignedIdentities {
    /**
     * The client id of user assigned identity.
     */
    clientId: string;
    /**
     * The principal id of user assigned identity.
     */
    principalId: string;
}

/**
 * Profile of the managed cluster load balancer.
 */
export interface ManagedClusterLoadBalancerProfileResponse {
    /**
     * Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
     */
    allocatedOutboundPorts?: number;
    /**
     * The effective outbound IP resources of the cluster load balancer.
     */
    effectiveOutboundIPs?: outputs.containerservice.v20200701.ResourceReferenceResponse[];
    /**
     * Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
     */
    idleTimeoutInMinutes?: number;
    /**
     * Desired managed outbound IPs for the cluster load balancer.
     */
    managedOutboundIPs?: outputs.containerservice.v20200701.ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs;
    /**
     * Desired outbound IP Prefix resources for the cluster load balancer.
     */
    outboundIPPrefixes?: outputs.containerservice.v20200701.ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes;
    /**
     * Desired outbound IP resources for the cluster load balancer.
     */
    outboundIPs?: outputs.containerservice.v20200701.ManagedClusterLoadBalancerProfileResponseOutboundIPs;
}
/**
 * managedClusterLoadBalancerProfileResponseProvideDefaults sets the appropriate defaults for ManagedClusterLoadBalancerProfileResponse
 */
export function managedClusterLoadBalancerProfileResponseProvideDefaults(val: ManagedClusterLoadBalancerProfileResponse): ManagedClusterLoadBalancerProfileResponse {
    return {
        ...val,
        allocatedOutboundPorts: (val.allocatedOutboundPorts) ?? 0,
        idleTimeoutInMinutes: (val.idleTimeoutInMinutes) ?? 30,
        managedOutboundIPs: (val.managedOutboundIPs ? outputs.containerservice.v20200701.managedClusterLoadBalancerProfileResponseManagedOutboundIPsProvideDefaults(val.managedOutboundIPs) : undefined),
    };
}

/**
 * Desired managed outbound IPs for the cluster load balancer.
 */
export interface ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs {
    /**
     * Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
     */
    count?: number;
}
/**
 * managedClusterLoadBalancerProfileResponseManagedOutboundIPsProvideDefaults sets the appropriate defaults for ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs
 */
export function managedClusterLoadBalancerProfileResponseManagedOutboundIPsProvideDefaults(val: ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs): ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs {
    return {
        ...val,
        count: (val.count) ?? 1,
    };
}

/**
 * Desired outbound IP Prefix resources for the cluster load balancer.
 */
export interface ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes {
    /**
     * A list of public IP prefix resources.
     */
    publicIPPrefixes?: outputs.containerservice.v20200701.ResourceReferenceResponse[];
}

/**
 * Desired outbound IP resources for the cluster load balancer.
 */
export interface ManagedClusterLoadBalancerProfileResponseOutboundIPs {
    /**
     * A list of public IP resources.
     */
    publicIPs?: outputs.containerservice.v20200701.ResourceReferenceResponse[];
}

/**
 * Parameters to be applied to the cluster-autoscaler when enabled
 */
export interface ManagedClusterPropertiesResponseAutoScalerProfile {
    balanceSimilarNodeGroups?: string;
    maxGracefulTerminationSec?: string;
    scaleDownDelayAfterAdd?: string;
    scaleDownDelayAfterDelete?: string;
    scaleDownDelayAfterFailure?: string;
    scaleDownUnneededTime?: string;
    scaleDownUnreadyTime?: string;
    scaleDownUtilizationThreshold?: string;
    scanInterval?: string;
}

export interface ManagedClusterPropertiesResponseIdentityProfile {
    /**
     * The client id of the user assigned identity.
     */
    clientId?: string;
    /**
     * The object id of the user assigned identity.
     */
    objectId?: string;
    /**
     * The resource id of the user assigned identity.
     */
    resourceId?: string;
}

export interface ManagedClusterSKUResponse {
    /**
     * Name of a managed cluster SKU.
     */
    name?: string;
    /**
     * Tier of a managed cluster SKU.
     */
    tier?: string;
}

/**
 * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
 */
export interface ManagedClusterServicePrincipalProfileResponse {
    /**
     * The ID for the service principal.
     */
    clientId: string;
    /**
     * The secret password associated with the service principal in plain text.
     */
    secret?: string;
}

/**
 * Profile for Windows VMs in the container service cluster.
 */
export interface ManagedClusterWindowsProfileResponse {
    /**
     * Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
     */
    adminPassword?: string;
    /**
     * Specifies the name of the administrator account. <br><br> **restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
     */
    adminUsername: string;
    /**
     * The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs.
     */
    licenseType?: string;
}

/**
 * Private endpoint which a connection belongs to.
 */
export interface PrivateEndpointResponse {
    /**
     * The resource Id for private endpoint
     */
    id?: string;
}

/**
 * The state of a private link service connection.
 */
export interface PrivateLinkServiceConnectionStateResponse {
    /**
     * The private link service connection description.
     */
    description?: string;
    /**
     * The private link service connection status.
     */
    status?: string;
}

/**
 * A reference to an Azure resource.
 */
export interface ResourceReferenceResponse {
    /**
     * The fully qualified Azure resource id.
     */
    id?: string;
}

