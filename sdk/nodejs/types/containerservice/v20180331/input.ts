// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Profile for Linux VMs in the container service cluster.
 */
export interface ContainerServiceLinuxProfileArgs {
    /**
     * The administrator username to use for Linux VMs.
     */
    adminUsername: pulumi.Input<string>;
    /**
     * SSH configuration for Linux-based VMs running on Azure.
     */
    ssh: pulumi.Input<inputs.containerservice.v20180331.ContainerServiceSshConfigurationArgs>;
}

/**
 * Profile of network configuration.
 */
export interface ContainerServiceNetworkProfileArgs {
    /**
     * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
     */
    dnsServiceIP?: pulumi.Input<string>;
    /**
     * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
     */
    dockerBridgeCidr?: pulumi.Input<string>;
    /**
     * Network plugin used for building Kubernetes network.
     */
    networkPlugin?: pulumi.Input<string | enums.containerservice.v20180331.NetworkPlugin>;
    /**
     * Network policy used for building Kubernetes network.
     */
    networkPolicy?: pulumi.Input<string | enums.containerservice.v20180331.NetworkPolicy>;
    /**
     * A CIDR notation IP range from which to assign pod IPs when kubenet is used.
     */
    podCidr?: pulumi.Input<string>;
    /**
     * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
     */
    serviceCidr?: pulumi.Input<string>;
}
/**
 * containerServiceNetworkProfileArgsProvideDefaults sets the appropriate defaults for ContainerServiceNetworkProfileArgs
 */
export function containerServiceNetworkProfileArgsProvideDefaults(val: ContainerServiceNetworkProfileArgs): ContainerServiceNetworkProfileArgs {
    return {
        ...val,
        dnsServiceIP: (val.dnsServiceIP) ?? "10.0.0.10",
        dockerBridgeCidr: (val.dockerBridgeCidr) ?? "172.17.0.1/16",
        networkPlugin: (val.networkPlugin) ?? "kubenet",
        podCidr: (val.podCidr) ?? "10.244.0.0/16",
        serviceCidr: (val.serviceCidr) ?? "10.0.0.0/16",
    };
}

/**
 * SSH configuration for Linux-based VMs running on Azure.
 */
export interface ContainerServiceSshConfigurationArgs {
    /**
     * The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
     */
    publicKeys: pulumi.Input<pulumi.Input<inputs.containerservice.v20180331.ContainerServiceSshPublicKeyArgs>[]>;
}

/**
 * Contains information about SSH certificate public key data.
 */
export interface ContainerServiceSshPublicKeyArgs {
    /**
     * Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
     */
    keyData: pulumi.Input<string>;
}

/**
 * AADProfile specifies attributes for Azure Active Directory integration.
 */
export interface ManagedClusterAADProfileArgs {
    /**
     * The client AAD application ID.
     */
    clientAppID: pulumi.Input<string>;
    /**
     * The server AAD application ID.
     */
    serverAppID: pulumi.Input<string>;
    /**
     * The server AAD application secret.
     */
    serverAppSecret?: pulumi.Input<string>;
    /**
     * The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
     */
    tenantID?: pulumi.Input<string>;
}

/**
 * A Kubernetes add-on profile for a managed cluster.
 */
export interface ManagedClusterAddonProfileArgs {
    /**
     * Key-value pairs for configuring an add-on.
     */
    config?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether the add-on is enabled or not.
     */
    enabled: pulumi.Input<boolean>;
}

/**
 * Profile for the container service agent pool.
 */
export interface ManagedClusterAgentPoolProfileArgs {
    /**
     * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
     */
    count?: pulumi.Input<number>;
    /**
     * Maximum number of pods that can run on a node.
     */
    maxPods?: pulumi.Input<number>;
    /**
     * Unique name of the agent pool profile in the context of the subscription and resource group.
     */
    name: pulumi.Input<string>;
    /**
     * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
     */
    osDiskSizeGB?: pulumi.Input<number>;
    /**
     * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
     */
    osType?: pulumi.Input<string | enums.containerservice.v20180331.OSType>;
    /**
     * Size of agent VMs.
     */
    vmSize: pulumi.Input<string | enums.containerservice.v20180331.ContainerServiceVMSizeTypes>;
    /**
     * VNet SubnetID specifies the VNet's subnet identifier.
     */
    vnetSubnetID?: pulumi.Input<string>;
}
/**
 * managedClusterAgentPoolProfileArgsProvideDefaults sets the appropriate defaults for ManagedClusterAgentPoolProfileArgs
 */
export function managedClusterAgentPoolProfileArgsProvideDefaults(val: ManagedClusterAgentPoolProfileArgs): ManagedClusterAgentPoolProfileArgs {
    return {
        ...val,
        count: (val.count) ?? 1,
    };
}

/**
 * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
 */
export interface ManagedClusterServicePrincipalProfileArgs {
    /**
     * The ID for the service principal.
     */
    clientId: pulumi.Input<string>;
    /**
     * The secret password associated with the service principal in plain text.
     */
    secret?: pulumi.Input<string>;
}

