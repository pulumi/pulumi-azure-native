// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20180901preview from "./v20180901preview/output";
export * as v20191001 from "./v20191001/output";
export * as v20191001preview from "./v20191001preview/output";
export * as v20200501 from "./v20200501/output";
export * as v20210101 from "./v20210101/output";
export * as v20210801 from "./v20210801/output";
/**
 * Properties of an assessment.
 */
export interface AssessmentPropertiesResponse {
    /**
     * Storage type selected for this disk.
     */
    azureDiskType: string;
    /**
     * AHUB discount on windows virtual machines.
     */
    azureHybridUseBenefit: string;
    /**
     * Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
     */
    azureLocation: string;
    /**
     * Offer code according to which cost estimation is done.
     */
    azureOfferCode: string;
    /**
     * Pricing tier for Size evaluation.
     */
    azurePricingTier: string;
    /**
     * Storage Redundancy type offered by Azure.
     */
    azureStorageRedundancy: string;
    /**
     * List of azure VM families.
     */
    azureVmFamilies: string[];
    /**
     * Confidence rating percentage for assessment. Can be in the range [0, 100].
     */
    confidenceRatingInPercentage: number;
    /**
     * Time when this project was created. Date-Time represented in ISO-8601 format.
     */
    createdTimestamp: string;
    /**
     * Currency to report prices in.
     */
    currency: string;
    /**
     * Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
     */
    discountPercentage: number;
    /**
     * Enterprise agreement subscription arm id.
     */
    eaSubscriptionId: string;
    /**
     * Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     */
    monthlyBandwidthCost: number;
    /**
     * Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     */
    monthlyComputeCost: number;
    /**
     * Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     */
    monthlyPremiumStorageCost: number;
    /**
     * Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     */
    monthlyStandardSSDStorageCost: number;
    /**
     * Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     */
    monthlyStorageCost: number;
    /**
     * Number of assessed machines part of this assessment.
     */
    numberOfMachines: number;
    /**
     * Percentile of performance data used to recommend Azure size.
     */
    percentile: string;
    /**
     * End time to consider performance data for assessment
     */
    perfDataEndTime: string;
    /**
     * Start time to consider performance data for assessment
     */
    perfDataStartTime: string;
    /**
     * Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
     */
    pricesTimestamp: string;
    /**
     * Azure reserved instance.
     */
    reservedInstance: string;
    /**
     * Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
     */
    scalingFactor: number;
    /**
     * Assessment sizing criterion.
     */
    sizingCriterion: string;
    /**
     * User configurable setting that describes the status of the assessment.
     */
    stage: string;
    /**
     * Whether the assessment has been created and is valid.
     */
    status: string;
    /**
     * Time range of performance data used to recommend a size.
     */
    timeRange: string;
    /**
     * Time when this project was last updated. Date-Time represented in ISO-8601 format.
     */
    updatedTimestamp: string;
    /**
     * Specify the duration for which the VMs are up in the on-premises environment.
     */
    vmUptime: outputs.migrate.VmUptimeResponse;
}

/**
 * Defines the properties for automatic resolution.
 */
export interface AutomaticResolutionPropertiesResponse {
    /**
     * Gets the MoveResource ARM ID of
     * the dependent resource if the resolution type is Automatic.
     */
    moveResourceId?: string;
}

/**
 * Gets or sets the availability set resource settings.
 */
export interface AvailabilitySetResourceSettingsResponse {
    /**
     * Gets or sets the target fault domain.
     */
    faultDomain?: number;
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Compute/availabilitySets'.
     */
    resourceType: "Microsoft.Compute/availabilitySets";
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
    /**
     * Gets or sets the target update domain.
     */
    updateDomain?: number;
}

export interface CollectorAgentPropertiesResponse {
    id: string;
    lastHeartbeatUtc: string;
    spnDetails?: outputs.migrate.CollectorBodyAgentSpnPropertiesResponse;
    version: string;
}

export interface CollectorBodyAgentSpnPropertiesResponse {
    /**
     * Application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     */
    applicationId?: string;
    /**
     * Intended audience for the service principal.
     */
    audience?: string;
    /**
     * AAD Authority URL which was used to request the token for the service principal.
     */
    authority?: string;
    /**
     * Object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     */
    objectId?: string;
    /**
     * Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     */
    tenantId?: string;
}

export interface CollectorPropertiesResponse {
    agentProperties?: outputs.migrate.CollectorAgentPropertiesResponse;
    /**
     * Time when this collector was created. Date-Time represented in ISO-8601 format.
     */
    createdTimestamp: string;
    /**
     * The ARM id of the discovery service site.
     */
    discoverySiteId?: string;
    /**
     * Time when this collector was updated. Date-Time represented in ISO-8601 format.
     */
    updatedTimestamp: string;
}

/**
 * The database project summary class.
 */
export interface DatabaseProjectSummaryResponse {
    /**
     * Gets or sets the extended summary.
     */
    extendedSummary?: {[key: string]: string};
    /**
     * Gets the Instance type.
     * Expected value is 'Databases'.
     */
    instanceType: "Databases";
    /**
     * Gets or sets the time when summary was last refreshed.
     */
    lastSummaryRefreshedTime?: string;
    /**
     * Gets or sets the state of refresh summary.
     */
    refreshSummaryState?: string;
}

/**
 * Class representing the databases solution summary.
 */
export interface DatabasesSolutionSummaryResponse {
    /**
     * Gets or sets the count of database instances assessed.
     */
    databaseInstancesAssessedCount?: number;
    /**
     * Gets or sets the count of databases assessed.
     */
    databasesAssessedCount?: number;
    /**
     * Gets the Instance type.
     * Expected value is 'Databases'.
     */
    instanceType: "Databases";
    /**
     * Gets or sets the count of databases ready for migration.
     */
    migrationReadyCount?: number;
}

/**
 * Defines the disk encryption set resource settings.
 */
export interface DiskEncryptionSetResourceSettingsResponse {
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Compute/diskEncryptionSets'.
     */
    resourceType: "Microsoft.Compute/diskEncryptionSets";
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
}

/**
 * Properties of group resource.
 */
export interface GroupPropertiesResponse {
    /**
     * If the assessments are in running state.
     */
    areAssessmentsRunning: boolean;
    /**
     * List of References to Assessments created on this group.
     */
    assessments: string[];
    /**
     * Time when this group was created. Date-Time represented in ISO-8601 format.
     */
    createdTimestamp: string;
    /**
     * Whether the group has been created and is valid.
     */
    groupStatus: string;
    /**
     * The type of group.
     */
    groupType?: string;
    /**
     * Number of machines part of this group.
     */
    machineCount: number;
    /**
     * Time when this group was last updated. Date-Time represented in ISO-8601 format.
     */
    updatedTimestamp: string;
}

/**
 * Defines the MSI properties of the Move Collection.
 */
export interface IdentityResponse {
    /**
     * Gets or sets the principal id.
     */
    principalId?: string;
    /**
     * Gets or sets the tenant id.
     */
    tenantId?: string;
    /**
     * The type of identity used for the resource mover service.
     */
    type?: string;
}

export interface ImportCollectorPropertiesResponse {
    createdTimestamp: string;
    discoverySiteId?: string;
    updatedTimestamp: string;
}

/**
 * Defines the job status.
 */
export interface JobStatusResponse {
    /**
     * Defines the job name.
     */
    jobName: string;
    /**
     * Gets or sets the monitoring job percentage.
     */
    jobProgress: string;
}

/**
 * Defines the key vault resource settings.
 */
export interface KeyVaultResourceSettingsResponse {
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.KeyVault/vaults'.
     */
    resourceType: "Microsoft.KeyVault/vaults";
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
}

/**
 * Defines load balancer backend address pool properties.
 */
export interface LBBackendAddressPoolResourceSettingsResponse {
    /**
     * Gets or sets the backend address pool name.
     */
    name?: string;
}

/**
 * Defines load balancer frontend IP configuration properties.
 */
export interface LBFrontendIPConfigurationResourceSettingsResponse {
    /**
     * Gets or sets the frontend IP configuration name.
     */
    name?: string;
    /**
     * Gets or sets the IP address of the Load Balancer.This is only specified if a specific
     * private IP address shall be allocated from the subnet specified in subnetRef.
     */
    privateIpAddress?: string;
    /**
     * Gets or sets PrivateIP allocation method (Static/Dynamic).
     */
    privateIpAllocationMethod?: string;
    /**
     * Defines reference to subnet.
     */
    subnet?: outputs.migrate.SubnetReferenceResponse;
    /**
     * Gets or sets the csv list of zones.
     */
    zones?: string;
}

/**
 * Defines reference to load balancer backend address pools.
 */
export interface LoadBalancerBackendAddressPoolReferenceResponse {
    /**
     * Gets the name of the proxy resource on the target side.
     */
    name?: string;
    /**
     * Gets the ARM resource ID of the tracked resource being referenced.
     */
    sourceArmResourceId: string;
}

/**
 * Defines reference to load balancer NAT rules.
 */
export interface LoadBalancerNatRuleReferenceResponse {
    /**
     * Gets the name of the proxy resource on the target side.
     */
    name?: string;
    /**
     * Gets the ARM resource ID of the tracked resource being referenced.
     */
    sourceArmResourceId: string;
}

/**
 * Defines the load balancer resource settings.
 */
export interface LoadBalancerResourceSettingsResponse {
    /**
     * Gets or sets the backend address pools of the load balancer.
     */
    backendAddressPools?: outputs.migrate.LBBackendAddressPoolResourceSettingsResponse[];
    /**
     * Gets or sets the frontend IP configurations of the load balancer.
     */
    frontendIPConfigurations?: outputs.migrate.LBFrontendIPConfigurationResourceSettingsResponse[];
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Network/loadBalancers'.
     */
    resourceType: "Microsoft.Network/loadBalancers";
    /**
     * Gets or sets load balancer sku (Basic/Standard).
     */
    sku?: string;
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
    /**
     * Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
     *  precedence only if frontend IP configurations settings are not present.
     */
    zones?: string;
}

/**
 * Defines the properties for manual resolution.
 */
export interface ManualResolutionPropertiesResponse {
    /**
     * Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
     */
    targetId?: string;
}

/**
 * Class for migrate project properties.
 */
export interface MigrateProjectPropertiesResponse {
    /**
     * Gets the last time the project summary was refreshed.
     */
    lastSummaryRefreshedTime: string;
    /**
     * Provisioning state of the migrate project.
     */
    provisioningState?: string;
    /**
     * Gets the refresh summary state.
     */
    refreshSummaryState: string;
    /**
     * Gets or sets the list of tools registered with the migrate project.
     */
    registeredTools?: string[];
    /**
     * Gets the summary of the migrate project.
     */
    summary: {[key: string]: outputs.migrate.DatabaseProjectSummaryResponse | outputs.migrate.ServersProjectSummaryResponse};
}

/**
 * Gets or sets the tags.
 */
export interface MigrateProjectResponseTags {
    additionalProperties?: string;
}

/**
 * Defines the move collection properties.
 */
export interface MoveCollectionPropertiesResponse {
    /**
     * Defines the move collection errors.
     */
    errors: outputs.migrate.MoveCollectionPropertiesResponseErrors;
    /**
     * Defines the provisioning states.
     */
    provisioningState: string;
    /**
     * Gets or sets the source region.
     */
    sourceRegion: string;
    /**
     * Gets or sets the target region.
     */
    targetRegion: string;
}

/**
 * Defines the move collection errors.
 */
export interface MoveCollectionPropertiesResponseErrors {
    /**
     * The move resource error body.
     */
    properties?: outputs.migrate.MoveResourceErrorBodyResponse;
}

/**
 * Defines the dependency override of the move resource.
 */
export interface MoveResourceDependencyOverrideResponse {
    /**
     * Gets or sets the ARM ID of the dependent resource.
     */
    id?: string;
    /**
     * Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
     * the dependent resource.
     */
    targetId?: string;
}

/**
 * Defines the dependency of the move resource.
 */
export interface MoveResourceDependencyResponse {
    /**
     * Defines the properties for automatic resolution.
     */
    automaticResolution?: outputs.migrate.AutomaticResolutionPropertiesResponse;
    /**
     * Defines the dependency type.
     */
    dependencyType?: string;
    /**
     * Gets the source ARM ID of the dependent resource.
     */
    id?: string;
    /**
     * Gets or sets a value indicating whether the dependency is optional.
     */
    isOptional?: string;
    /**
     * Defines the properties for manual resolution.
     */
    manualResolution?: outputs.migrate.ManualResolutionPropertiesResponse;
    /**
     * Gets the dependency resolution status.
     */
    resolutionStatus?: string;
    /**
     * Defines the resolution type.
     */
    resolutionType?: string;
}

/**
 * An error response from the Azure Migrate service.
 */
export interface MoveResourceErrorBodyResponse {
    /**
     * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
     */
    code: string;
    /**
     * A list of additional details about the error.
     */
    details: outputs.migrate.MoveResourceErrorBodyResponse[];
    /**
     * A message describing the error, intended to be suitable for display in a user interface.
     */
    message: string;
    /**
     * The target of the particular error. For example, the name of the property in error.
     */
    target: string;
}

/**
 * An error response from the azure resource mover service.
 */
export interface MoveResourceErrorResponse {
    /**
     * The move resource error body.
     */
    properties?: outputs.migrate.MoveResourceErrorBodyResponse;
}

/**
 * Defines the move resource properties.
 */
export interface MoveResourcePropertiesResponse {
    /**
     * Gets or sets the move resource dependencies.
     */
    dependsOn: outputs.migrate.MoveResourceDependencyResponse[];
    /**
     * Gets or sets the move resource dependencies overrides.
     */
    dependsOnOverrides?: outputs.migrate.MoveResourceDependencyOverrideResponse[];
    /**
     * Defines the move resource errors.
     */
    errors: outputs.migrate.MoveResourcePropertiesResponseErrors;
    /**
     * Gets or sets the existing target ARM Id of the resource.
     */
    existingTargetId?: string;
    /**
     * Gets a value indicating whether the resolve action is required over the move collection.
     */
    isResolveRequired: boolean;
    /**
     * Defines the move resource status.
     */
    moveStatus: outputs.migrate.MoveResourcePropertiesResponseMoveStatus;
    /**
     * Defines the provisioning states.
     */
    provisioningState: string;
    /**
     * Gets or sets the resource settings.
     */
    resourceSettings?: outputs.migrate.AvailabilitySetResourceSettingsResponse | outputs.migrate.DiskEncryptionSetResourceSettingsResponse | outputs.migrate.KeyVaultResourceSettingsResponse | outputs.migrate.LoadBalancerResourceSettingsResponse | outputs.migrate.NetworkInterfaceResourceSettingsResponse | outputs.migrate.NetworkSecurityGroupResourceSettingsResponse | outputs.migrate.PublicIPAddressResourceSettingsResponse | outputs.migrate.ResourceGroupResourceSettingsResponse | outputs.migrate.SqlDatabaseResourceSettingsResponse | outputs.migrate.SqlElasticPoolResourceSettingsResponse | outputs.migrate.SqlServerResourceSettingsResponse | outputs.migrate.VirtualMachineResourceSettingsResponse | outputs.migrate.VirtualNetworkResourceSettingsResponse;
    /**
     * Gets or sets the Source ARM Id of the resource.
     */
    sourceId: string;
    /**
     * Gets or sets the source resource settings.
     */
    sourceResourceSettings: outputs.migrate.AvailabilitySetResourceSettingsResponse | outputs.migrate.DiskEncryptionSetResourceSettingsResponse | outputs.migrate.KeyVaultResourceSettingsResponse | outputs.migrate.LoadBalancerResourceSettingsResponse | outputs.migrate.NetworkInterfaceResourceSettingsResponse | outputs.migrate.NetworkSecurityGroupResourceSettingsResponse | outputs.migrate.PublicIPAddressResourceSettingsResponse | outputs.migrate.ResourceGroupResourceSettingsResponse | outputs.migrate.SqlDatabaseResourceSettingsResponse | outputs.migrate.SqlElasticPoolResourceSettingsResponse | outputs.migrate.SqlServerResourceSettingsResponse | outputs.migrate.VirtualMachineResourceSettingsResponse | outputs.migrate.VirtualNetworkResourceSettingsResponse;
    /**
     * Gets or sets the Target ARM Id of the resource.
     */
    targetId: string;
}

/**
 * Defines the move resource errors.
 */
export interface MoveResourcePropertiesResponseErrors {
    /**
     * The move resource error body.
     */
    properties?: outputs.migrate.MoveResourceErrorBodyResponse;
}

/**
 * Defines the move resource status.
 */
export interface MoveResourcePropertiesResponseMoveStatus {
    /**
     * An error response from the azure resource mover service.
     */
    errors?: outputs.migrate.MoveResourceErrorResponse;
    /**
     * Defines the job status.
     */
    jobStatus?: outputs.migrate.JobStatusResponse;
    /**
     * Defines the MoveResource states.
     */
    moveState: string;
}

/**
 * Defines the network interface resource settings.
 */
export interface NetworkInterfaceResourceSettingsResponse {
    /**
     * Gets or sets a value indicating whether accelerated networking is enabled.
     */
    enableAcceleratedNetworking?: boolean;
    /**
     * Gets or sets the IP configurations of the NIC.
     */
    ipConfigurations?: outputs.migrate.NicIpConfigurationResourceSettingsResponse[];
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Network/networkInterfaces'.
     */
    resourceType: "Microsoft.Network/networkInterfaces";
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
}

/**
 * Defines the NSG resource settings.
 */
export interface NetworkSecurityGroupResourceSettingsResponse {
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Network/networkSecurityGroups'.
     */
    resourceType: "Microsoft.Network/networkSecurityGroups";
    /**
     * Gets or sets Security rules of network security group.
     */
    securityRules?: outputs.migrate.NsgSecurityRuleResponse[];
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
}

/**
 * Defines NIC IP configuration properties.
 */
export interface NicIpConfigurationResourceSettingsResponse {
    /**
     * Gets or sets the references of the load balancer backend address pools.
     */
    loadBalancerBackendAddressPools?: outputs.migrate.LoadBalancerBackendAddressPoolReferenceResponse[];
    /**
     * Gets or sets the references of the load balancer NAT rules.
     */
    loadBalancerNatRules?: outputs.migrate.LoadBalancerNatRuleReferenceResponse[];
    /**
     * Gets or sets the IP configuration name.
     */
    name?: string;
    /**
     * Gets or sets a value indicating whether this IP configuration is the primary.
     */
    primary?: boolean;
    /**
     * Gets or sets the private IP address of the network interface IP Configuration.
     */
    privateIpAddress?: string;
    /**
     * Gets or sets the private IP address allocation method.
     */
    privateIpAllocationMethod?: string;
    /**
     * Defines reference to a public IP.
     */
    publicIp?: outputs.migrate.PublicIpReferenceResponse;
    /**
     * Defines reference to subnet.
     */
    subnet?: outputs.migrate.SubnetReferenceResponse;
}

/**
 * Defines reference to NSG.
 */
export interface NsgReferenceResponse {
    /**
     * Gets the ARM resource ID of the tracked resource being referenced.
     */
    sourceArmResourceId: string;
}

/**
 * Security Rule data model for Network Security Groups.
 */
export interface NsgSecurityRuleResponse {
    /**
     * Gets or sets whether network traffic is allowed or denied.
     * Possible values are “Allow” and “Deny”.
     */
    access?: string;
    /**
     * Gets or sets a description for this rule. Restricted to 140 chars.
     */
    description?: string;
    /**
     * Gets or sets destination address prefix. CIDR or source IP range.
     *  A “*” can also be used to match all source IPs. Default tags such
     * as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
     */
    destinationAddressPrefix?: string;
    /**
     * Gets or sets Destination Port or Range. Integer or range between
     * 0 and 65535. A “*” can also be used to match all ports.
     */
    destinationPortRange?: string;
    /**
     * Gets or sets the direction of the rule.InBound or Outbound. The
     * direction specifies if rule will be evaluated on incoming or outgoing traffic.
     */
    direction?: string;
    /**
     * Gets or sets the Security rule name.
     */
    name?: string;
    /**
     * Gets or sets the priority of the rule. The value can be between
     * 100 and 4096. The priority number must be unique for each rule in the collection.
     * The lower the priority number, the higher the priority of the rule.
     */
    priority?: number;
    /**
     * Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
     */
    protocol?: string;
    /**
     * Gets or sets source address prefix. CIDR or source IP range. A
     * “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
     * ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
     * rule, specifies where network traffic originates from.
     */
    sourceAddressPrefix?: string;
    /**
     * Gets or sets Source Port or Range. Integer or range between 0 and
     * 65535. A “*” can also be used to match all ports.
     */
    sourcePortRange?: string;
}

/**
 * Private endpoint connection properties.
 */
export interface PrivateEndpointConnectionPropertiesResponse {
    /**
     * ARM id for the private endpoint resource corresponding to the connection.
     */
    privateEndpoint: outputs.migrate.ResourceIdResponse;
    /**
     * State of the private endpoint connection.
     */
    privateLinkServiceConnectionState?: outputs.migrate.PrivateLinkServiceConnectionStateResponse;
    /**
     * Indicates whether there is an ongoing operation on the private endpoint.
     */
    provisioningState: string;
}

/**
 * A private endpoint connection for a project.
 */
export interface PrivateEndpointConnectionResponse {
    /**
     * For optimistic concurrency control.
     */
    eTag?: string;
    /**
     * Path reference to this private endpoint endpoint connection. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/privateEndpointConnections/{privateEndpointConnectionName}
     */
    id: string;
    /**
     * Name of the private endpoint endpoint connection.
     */
    name: string;
    /**
     * Properties of the private endpoint endpoint connection.
     */
    properties: outputs.migrate.PrivateEndpointConnectionPropertiesResponse;
    /**
     * Type of the object = [Microsoft.Migrate/assessmentProjects/privateEndpointConnections].
     */
    type: string;
}

/**
 * State of a private endpoint connection.
 */
export interface PrivateLinkServiceConnectionStateResponse {
    /**
     * Actions required on the private endpoint connection.
     */
    actionsRequired?: string;
    /**
     * Description of the private endpoint connection.
     */
    description?: string;
    /**
     * Connection status of the private endpoint connection.
     */
    status?: string;
}

/**
 * Properties of a project.
 */
export interface ProjectPropertiesResponse {
    /**
     * Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
     */
    assessmentSolutionId?: string;
    /**
     * Time when this project was created. Date-Time represented in ISO-8601 format.
     */
    createdTimestamp: string;
    /**
     * The ARM id of the storage account used for interactions when public access is disabled.
     */
    customerStorageAccountArmId?: string;
    /**
     * The ARM id of service map workspace created by customer.
     */
    customerWorkspaceId?: string;
    /**
     * Location of service map workspace created by customer.
     */
    customerWorkspaceLocation?: string;
    /**
     * Time when last assessment was created. Date-Time represented in ISO-8601 format. This value will be null until assessment is created.
     */
    lastAssessmentTimestamp: string;
    /**
     * Number of assessments created in the project.
     */
    numberOfAssessments: number;
    /**
     * Number of groups created in the project.
     */
    numberOfGroups: number;
    /**
     * Number of machines in the project.
     */
    numberOfMachines: number;
    /**
     * The list of private endpoint connections to the project.
     */
    privateEndpointConnections: outputs.migrate.PrivateEndpointConnectionResponse[];
    /**
     * Assessment project status.
     */
    projectStatus?: string;
    /**
     * Provisioning state of the project.
     */
    provisioningState: string;
    /**
     * This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
     */
    publicNetworkAccess?: string;
    /**
     * Endpoint at which the collector agent can call agent REST API.
     */
    serviceEndpoint: string;
    /**
     * Time when this project was last updated. Date-Time represented in ISO-8601 format.
     */
    updatedTimestamp: string;
}

/**
 * Defines the public IP address resource settings.
 */
export interface PublicIPAddressResourceSettingsResponse {
    /**
     * Gets or sets the domain name label.
     */
    domainNameLabel?: string;
    /**
     * Gets or sets the fully qualified domain name.
     */
    fqdn?: string;
    /**
     * Gets or sets public IP allocation method.
     */
    publicIpAllocationMethod?: string;
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Network/publicIPAddresses'.
     */
    resourceType: "Microsoft.Network/publicIPAddresses";
    /**
     * Gets or sets public IP sku.
     */
    sku?: string;
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
    /**
     * Gets or sets public IP zones.
     */
    zones?: string;
}

/**
 * Defines reference to a public IP.
 */
export interface PublicIpReferenceResponse {
    /**
     * Gets the ARM resource ID of the tracked resource being referenced.
     */
    sourceArmResourceId: string;
}

/**
 * Defines the resource group resource settings.
 */
export interface ResourceGroupResourceSettingsResponse {
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'resourceGroups'.
     */
    resourceType: "resourceGroups";
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
}

/**
 * ARM id for a resource.
 */
export interface ResourceIdResponse {
    id: string;
}

/**
 * Class representing the servers project summary.
 */
export interface ServersProjectSummaryResponse {
    /**
     * Gets or sets the count of entities assessed.
     */
    assessedCount?: number;
    /**
     * Gets or sets the count of entities discovered.
     */
    discoveredCount?: number;
    /**
     * Gets or sets the extended summary.
     */
    extendedSummary?: {[key: string]: string};
    /**
     * Gets the Instance type.
     * Expected value is 'Servers'.
     */
    instanceType: "Servers";
    /**
     * Gets or sets the time when summary was last refreshed.
     */
    lastSummaryRefreshedTime?: string;
    /**
     * Gets or sets the count of entities migrated.
     */
    migratedCount?: number;
    /**
     * Gets or sets the state of refresh summary.
     */
    refreshSummaryState?: string;
    /**
     * Gets or sets the count of entities being replicated.
     */
    replicatingCount?: number;
    /**
     * Gets or sets the count of entities test migrated.
     */
    testMigratedCount?: number;
}

/**
 * Class representing the servers solution summary.
 */
export interface ServersSolutionSummaryResponse {
    /**
     * Gets or sets the count of servers assessed.
     */
    assessedCount?: number;
    /**
     * Gets or sets the count of servers discovered.
     */
    discoveredCount?: number;
    /**
     * Gets the Instance type.
     * Expected value is 'Servers'.
     */
    instanceType: "Servers";
    /**
     * Gets or sets the count of servers migrated.
     */
    migratedCount?: number;
    /**
     * Gets or sets the count of servers being replicated.
     */
    replicatingCount?: number;
    /**
     * Gets or sets the count of servers test migrated.
     */
    testMigratedCount?: number;
}

/**
 * Class representing the details of the solution.
 */
export interface SolutionDetailsResponse {
    /**
     * Gets or sets the count of assessments reported by the solution.
     */
    assessmentCount?: number;
    /**
     * Gets or sets the extended details reported by the solution.
     */
    extendedDetails?: {[key: string]: string};
    /**
     * Gets or sets the count of groups reported by the solution.
     */
    groupCount?: number;
}

/**
 * Class for solution properties.
 */
export interface SolutionPropertiesResponse {
    /**
     * Gets or sets the cleanup state of the solution.
     */
    cleanupState?: string;
    /**
     * Gets or sets the details of the solution.
     */
    details?: outputs.migrate.SolutionDetailsResponse;
    /**
     * Gets or sets the goal of the solution.
     */
    goal?: string;
    /**
     * Gets or sets the purpose of the solution.
     */
    purpose?: string;
    /**
     * Gets or sets the current status of the solution.
     */
    status?: string;
    /**
     * Gets or sets the summary of the solution.
     */
    summary?: outputs.migrate.DatabasesSolutionSummaryResponse | outputs.migrate.ServersSolutionSummaryResponse;
    /**
     * Gets or sets the tool being used in the solution.
     */
    tool?: string;
}

/**
 * Defines the Sql Database resource settings.
 */
export interface SqlDatabaseResourceSettingsResponse {
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Sql/servers/databases'.
     */
    resourceType: "Microsoft.Sql/servers/databases";
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
    /**
     * Defines the zone redundant resource setting.
     */
    zoneRedundant?: string;
}

/**
 * Defines the Sql ElasticPool resource settings.
 */
export interface SqlElasticPoolResourceSettingsResponse {
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Sql/servers/elasticPools'.
     */
    resourceType: "Microsoft.Sql/servers/elasticPools";
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
    /**
     * Defines the zone redundant resource setting.
     */
    zoneRedundant?: string;
}

/**
 * Defines the SQL Server resource settings.
 */
export interface SqlServerResourceSettingsResponse {
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Sql/servers'.
     */
    resourceType: "Microsoft.Sql/servers";
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
}

/**
 * Defines reference to subnet.
 */
export interface SubnetReferenceResponse {
    /**
     * Gets the name of the proxy resource on the target side.
     */
    name?: string;
    /**
     * Gets the ARM resource ID of the tracked resource being referenced.
     */
    sourceArmResourceId: string;
}

/**
 * Defines the virtual network subnets resource settings.
 */
export interface SubnetResourceSettingsResponse {
    /**
     * Gets or sets address prefix for the subnet.
     */
    addressPrefix?: string;
    /**
     * Gets or sets the Subnet name.
     */
    name?: string;
    /**
     * Defines reference to NSG.
     */
    networkSecurityGroup?: outputs.migrate.NsgReferenceResponse;
}

/**
 * Gets or sets the virtual machine resource settings.
 */
export interface VirtualMachineResourceSettingsResponse {
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Compute/virtualMachines'.
     */
    resourceType: "Microsoft.Compute/virtualMachines";
    /**
     * Gets or sets the target availability set id for virtual machines not in an availability set at source.
     */
    targetAvailabilitySetId?: string;
    /**
     * Gets or sets the target availability zone.
     */
    targetAvailabilityZone?: string;
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
    /**
     * Gets or sets the target virtual machine size.
     */
    targetVmSize?: string;
}

/**
 * Defines the virtual network resource settings.
 */
export interface VirtualNetworkResourceSettingsResponse {
    /**
     * Gets or sets the address prefixes for the virtual network.
     */
    addressSpace?: string[];
    /**
     * Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
     * deployed in the virtual network.
     */
    dnsServers?: string[];
    /**
     * Gets or sets a value indicating whether gets or sets whether the
     * DDOS protection should be switched on.
     */
    enableDdosProtection?: boolean;
    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Network/virtualNetworks'.
     */
    resourceType: "Microsoft.Network/virtualNetworks";
    /**
     * Gets or sets List of subnets in a VirtualNetwork.
     */
    subnets?: outputs.migrate.SubnetResourceSettingsResponse[];
    /**
     * Gets or sets the target Resource name.
     */
    targetResourceName: string;
}

export interface VmUptimeResponse {
    /**
     * Number of days in a month for VM uptime.
     */
    daysPerMonth?: number;
    /**
     * Number of hours per day for VM uptime.
     */
    hoursPerDay?: number;
}

