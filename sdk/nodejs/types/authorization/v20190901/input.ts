// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Identity for the resource.
 */
export interface IdentityArgs {
    /**
     * The identity type. This is the only required field when adding a system assigned identity to a resource.
     */
    type?: pulumi.Input<enums.authorization.v20190901.ResourceIdentityType>;
}

/**
 * The definition of a parameter that can be provided to the policy.
 */
export interface ParameterDefinitionsValueArgs {
    /**
     * The allowed values for the parameter.
     */
    allowedValues?: pulumi.Input<any[]>;
    /**
     * The default value for the parameter if no value is provided.
     */
    defaultValue?: any;
    /**
     * General metadata for the parameter.
     */
    metadata?: pulumi.Input<inputs.authorization.v20190901.ParameterDefinitionsValueMetadataArgs>;
    /**
     * The data type of the parameter.
     */
    type?: pulumi.Input<string | enums.authorization.v20190901.ParameterType>;
}

/**
 * General metadata for the parameter.
 */
export interface ParameterDefinitionsValueMetadataArgs {
    /**
     * The description of the parameter.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name for the parameter.
     */
    displayName?: pulumi.Input<string>;
}

/**
 * The value of a parameter.
 */
export interface ParameterValuesValueArgs {
    /**
     * The value of the parameter.
     */
    value?: any;
}

/**
 * The policy definition group.
 */
export interface PolicyDefinitionGroupArgs {
    /**
     * A resource ID of a resource that contains additional metadata about the group.
     */
    additionalMetadataId?: pulumi.Input<string>;
    /**
     * The group's category.
     */
    category?: pulumi.Input<string>;
    /**
     * The group's description.
     */
    description?: pulumi.Input<string>;
    /**
     * The group's display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the group.
     */
    name: pulumi.Input<string>;
}

/**
 * The policy definition reference.
 */
export interface PolicyDefinitionReferenceArgs {
    /**
     * The name of the groups that this policy definition reference belongs to.
     */
    groupNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The parameter values for the referenced policy rule. The keys are the parameter names.
     */
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<inputs.authorization.v20190901.ParameterValuesValueArgs>}>;
    /**
     * The ID of the policy definition or policy set definition.
     */
    policyDefinitionId: pulumi.Input<string>;
    /**
     * A unique id (within the policy set definition) for this policy definition reference.
     */
    policyDefinitionReferenceId?: pulumi.Input<string>;
}

/**
 * The policy sku. This property is optional, obsolete, and will be ignored.
 */
export interface PolicySkuArgs {
    /**
     * The name of the policy sku. Possible values are A0 and A1.
     */
    name: pulumi.Input<string>;
    /**
     * The policy sku tier. Possible values are Free and Standard.
     */
    tier?: pulumi.Input<string>;
}

