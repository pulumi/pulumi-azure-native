// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Defines the parameters for the cache expiration action.
 */
export interface CacheExpirationActionParametersArgs {
    /**
     * Caching behavior for the requests that include query strings.
     */
    cacheBehavior: pulumi.Input<string>;
    /**
     * The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
     */
    cacheDuration?: pulumi.Input<string>;
    /**
     * The level at which the content needs to be cached.
     */
    cacheType: pulumi.Input<string>;
    odataType: pulumi.Input<string>;
}

/**
 * The main origin of CDN content which is added when creating a CDN endpoint.
 */
export interface DeepCreatedOriginArgs {
    /**
     * The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
     */
    hostName: pulumi.Input<string>;
    /**
     * The value of the HTTP port. Must be between 1 and 65535
     */
    httpPort?: pulumi.Input<number>;
    /**
     * The value of the HTTPS port. Must be between 1 and 65535
     */
    httpsPort?: pulumi.Input<number>;
    /**
     * Origin name
     */
    name: pulumi.Input<string>;
}

/**
 * A rule that specifies a set of actions and conditions
 */
export interface DeliveryRuleArgs {
    /**
     * A list of actions that are executed when all the conditions of a rule are satisfied.
     */
    actions: pulumi.Input<pulumi.Input<inputs.cdn.v20171012.DeliveryRuleCacheExpirationActionArgs>[]>;
    /**
     * A list of conditions that must be matched for the actions to be executed
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.cdn.v20171012.DeliveryRuleUrlFileExtensionConditionArgs | inputs.cdn.v20171012.DeliveryRuleUrlPathConditionArgs>[]>;
    /**
     * The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
     */
    order: pulumi.Input<number>;
}

/**
 * Defines the cache expiration action for the delivery rule.
 */
export interface DeliveryRuleCacheExpirationActionArgs {
    /**
     * The name of the action for the delivery rule.
     * Expected value is 'CacheExpiration'.
     */
    name: pulumi.Input<"CacheExpiration">;
    /**
     * Defines the parameters for the action.
     */
    parameters: pulumi.Input<inputs.cdn.v20171012.CacheExpirationActionParametersArgs>;
}

/**
 * Defines the URL file extension condition for the delivery rule.
 */
export interface DeliveryRuleUrlFileExtensionConditionArgs {
    /**
     * The name of the condition for the delivery rule.
     * Expected value is 'UrlFileExtension'.
     */
    name: pulumi.Input<"UrlFileExtension">;
    /**
     * Defines the parameters for the condition.
     */
    parameters: pulumi.Input<inputs.cdn.v20171012.UrlFileExtensionConditionParametersArgs>;
}

/**
 * Defines the URL path condition for the delivery rule.
 */
export interface DeliveryRuleUrlPathConditionArgs {
    /**
     * The name of the condition for the delivery rule.
     * Expected value is 'UrlPath'.
     */
    name: pulumi.Input<"UrlPath">;
    /**
     * Defines the parameters for the condition.
     */
    parameters: pulumi.Input<inputs.cdn.v20171012.UrlPathConditionParametersArgs>;
}

/**
 * A policy that specifies the delivery rules to be used for an endpoint.
 */
export interface EndpointPropertiesUpdateParametersDeliveryPolicyArgs {
    /**
     * User-friendly description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of the delivery rules.
     */
    rules: pulumi.Input<pulumi.Input<inputs.cdn.v20171012.DeliveryRuleArgs>[]>;
}

/**
 * Rules defining user's geo access within a CDN endpoint.
 */
export interface GeoFilterArgs {
    /**
     * Action of the geo filter, i.e. allow or block access.
     */
    action: pulumi.Input<enums.cdn.v20171012.GeoFilterActions>;
    /**
     * Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
     */
    countryCodes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
     */
    relativePath: pulumi.Input<string>;
}

/**
 * The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
 */
export interface SkuArgs {
    /**
     * Name of the pricing tier.
     */
    name?: pulumi.Input<string | enums.cdn.v20171012.SkuName>;
}

/**
 * Defines the parameters for the URL file extension condition.
 */
export interface UrlFileExtensionConditionParametersArgs {
    /**
     * A list of extensions for the condition of the delivery rule.
     */
    extensions: pulumi.Input<pulumi.Input<string>[]>;
    odataType: pulumi.Input<string>;
}

/**
 * Defines the parameters for the URL path condition.
 */
export interface UrlPathConditionParametersArgs {
    /**
     * The match type for the condition of the delivery rule
     */
    matchType: pulumi.Input<string>;
    odataType: pulumi.Input<string>;
    /**
     * A URL path for the condition of the delivery rule
     */
    path: pulumi.Input<string>;
}

