// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
 */
export interface AdditionalUnattendContentResponse {
    /**
     * The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
     */
    componentName?: string;
    /**
     * Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
     */
    content?: string;
    /**
     * The pass name. Currently, the only allowable value is OobeSystem.
     */
    passName?: string;
    /**
     * Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
     */
    settingName?: string;
}

/**
 * The API entity reference.
 */
export interface ApiEntityReferenceResponse {
    /**
     * The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
     */
    id?: string;
}

/**
 * The instance view of a virtual machine boot diagnostics.
 */
export interface BootDiagnosticsInstanceViewResponse {
    /**
     * The console screenshot blob URI.
     */
    consoleScreenshotBlobUri: string;
    /**
     * The Linux serial console log blob Uri.
     */
    serialConsoleLogBlobUri: string;
}

/**
 * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
 */
export interface BootDiagnosticsResponse {
    /**
     * Whether boot diagnostics should be enabled on the Virtual Machine.
     */
    enabled?: boolean;
    /**
     * Uri of the storage account to use for placing the console output and screenshot.
     */
    storageUri?: string;
}

/**
 * Data used when creating a disk.
 */
export interface CreationDataResponse {
    /**
     * This enumerates the possible sources of a disk's creation.
     */
    createOption: string;
    /**
     * Disk source information.
     */
    imageReference?: outputs.compute.v20160430preview.ImageDiskReferenceResponse;
    /**
     * If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like id of the source disk restore point.
     */
    sourceResourceId?: string;
    /**
     * If createOption is Import, this is a SAS URI to a blob to be imported into a managed disk. If createOption is Copy, this is a relative Uri containing the id of the source snapshot to be copied into a managed disk.
     */
    sourceUri?: string;
    /**
     * If createOption is Import, the Azure Resource Manager identifier of the storage account containing the blob to import as a disk. Required only if the blob is in a different subscription
     */
    storageAccountId?: string;
}

/**
 * Describes a data disk.
 */
export interface DataDiskResponse {
    /**
     * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
     */
    caching?: string;
    /**
     * Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
     */
    createOption: string;
    /**
     * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
     */
    diskSizeGB?: number;
    /**
     * The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
     */
    image?: outputs.compute.v20160430preview.VirtualHardDiskResponse;
    /**
     * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
     */
    lun: number;
    /**
     * The managed disk parameters.
     */
    managedDisk?: outputs.compute.v20160430preview.ManagedDiskParametersResponse;
    /**
     * The disk name.
     */
    name?: string;
    /**
     * The virtual hard disk.
     */
    vhd?: outputs.compute.v20160430preview.VirtualHardDiskResponse;
}

/**
 * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
 */
export interface DiagnosticsProfileResponse {
    /**
     * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
     */
    bootDiagnostics?: outputs.compute.v20160430preview.BootDiagnosticsResponse;
}

/**
 * Describes a Encryption Settings for a Disk
 */
export interface DiskEncryptionSettingsResponse {
    /**
     * Specifies the location of the disk encryption key, which is a Key Vault Secret.
     */
    diskEncryptionKey?: outputs.compute.v20160430preview.KeyVaultSecretReferenceResponse;
    /**
     * Specifies whether disk encryption should be enabled on the virtual machine.
     */
    enabled?: boolean;
    /**
     * Specifies the location of the key encryption key in Key Vault.
     */
    keyEncryptionKey?: outputs.compute.v20160430preview.KeyVaultKeyReferenceResponse;
}

/**
 * The instance view of the disk.
 */
export interface DiskInstanceViewResponse {
    /**
     * The disk name.
     */
    name?: string;
    /**
     * The resource status information.
     */
    statuses?: outputs.compute.v20160430preview.InstanceViewStatusResponse[];
}

/**
 * Encryption settings for disk or snapshot
 */
export interface EncryptionSettingsResponse {
    /**
     * Key Vault Secret Url and vault id of the disk encryption key
     */
    diskEncryptionKey?: outputs.compute.v20160430preview.KeyVaultAndSecretReferenceResponse;
    /**
     * Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.
     */
    enabled?: boolean;
    /**
     * Key Vault Key Url and vault id of the key encryption key
     */
    keyEncryptionKey?: outputs.compute.v20160430preview.KeyVaultAndKeyReferenceResponse;
}

/**
 * Specifies the hardware settings for the virtual machine.
 */
export interface HardwareProfileResponse {
    /**
     * Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](virtualmachines-list-sizes-availability-set.md) <br><br> [List all available virtual machine sizes in a region](virtualmachines-list-sizes-region.md) <br><br> [List all available virtual machine sizes for resizing](virtualmachines-list-sizes-for-resizing.md)
     */
    vmSize?: string;
}

/**
 * Describes a data disk.
 */
export interface ImageDataDiskResponse {
    /**
     * The Virtual Hard Disk.
     */
    blobUri?: string;
    /**
     * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
     */
    caching?: string;
    /**
     * Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
     */
    diskSizeGB?: number;
    /**
     * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
     */
    lun: number;
    /**
     * The managedDisk.
     */
    managedDisk?: outputs.compute.v20160430preview.SubResourceResponse;
    /**
     * The snapshot.
     */
    snapshot?: outputs.compute.v20160430preview.SubResourceResponse;
}

/**
 * The source image used for creating the disk.
 */
export interface ImageDiskReferenceResponse {
    /**
     * A relative uri containing either a Platform Image Repository or user image reference.
     */
    id: string;
    /**
     * If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.
     */
    lun?: number;
}

/**
 * Describes an Operating System disk.
 */
export interface ImageOSDiskResponse {
    /**
     * The Virtual Hard Disk.
     */
    blobUri?: string;
    /**
     * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
     */
    caching?: string;
    /**
     * Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
     */
    diskSizeGB?: number;
    /**
     * The managedDisk.
     */
    managedDisk?: outputs.compute.v20160430preview.SubResourceResponse;
    /**
     * The OS State.
     */
    osState: string;
    /**
     * This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
     */
    osType: string;
    /**
     * The snapshot.
     */
    snapshot?: outputs.compute.v20160430preview.SubResourceResponse;
}

/**
 * Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
 */
export interface ImageReferenceResponse {
    /**
     * Resource Id
     */
    id?: string;
    /**
     * Specifies the offer of the platform image or marketplace image used to create the virtual machine.
     */
    offer?: string;
    /**
     * The image publisher.
     */
    publisher?: string;
    /**
     * The image SKU.
     */
    sku?: string;
    /**
     * Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
     */
    version?: string;
}

/**
 * Describes a storage profile.
 */
export interface ImageStorageProfileResponse {
    /**
     * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
     */
    dataDisks?: outputs.compute.v20160430preview.ImageDataDiskResponse[];
    /**
     * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
     */
    osDisk: outputs.compute.v20160430preview.ImageOSDiskResponse;
}

/**
 * Instance view status.
 */
export interface InstanceViewStatusResponse {
    /**
     * The status code.
     */
    code?: string;
    /**
     * The short localizable label for the status.
     */
    displayStatus?: string;
    /**
     * The level code.
     */
    level?: string;
    /**
     * The detailed status message, including for alerts and error messages.
     */
    message?: string;
    /**
     * The time of the status.
     */
    time?: string;
}

/**
 * Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey
 */
export interface KeyVaultAndKeyReferenceResponse {
    /**
     * Url pointing to a key or secret in KeyVault
     */
    keyUrl: string;
    /**
     * Resource id of the KeyVault containing the key or secret
     */
    sourceVault: outputs.compute.v20160430preview.SourceVaultResponse;
}

/**
 * Key Vault Secret Url and vault id of the encryption key 
 */
export interface KeyVaultAndSecretReferenceResponse {
    /**
     * Url pointing to a key or secret in KeyVault
     */
    secretUrl: string;
    /**
     * Resource id of the KeyVault containing the key or secret
     */
    sourceVault: outputs.compute.v20160430preview.SourceVaultResponse;
}

/**
 * Describes a reference to Key Vault Key
 */
export interface KeyVaultKeyReferenceResponse {
    /**
     * The URL referencing a key encryption key in Key Vault.
     */
    keyUrl: string;
    /**
     * The relative URL of the Key Vault containing the key.
     */
    sourceVault: outputs.compute.v20160430preview.SubResourceResponse;
}

/**
 * Describes a reference to Key Vault Secret
 */
export interface KeyVaultSecretReferenceResponse {
    /**
     * The URL referencing a secret in a Key Vault.
     */
    secretUrl: string;
    /**
     * The relative URL of the Key Vault containing the secret.
     */
    sourceVault: outputs.compute.v20160430preview.SubResourceResponse;
}

/**
 * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 */
export interface LinuxConfigurationResponse {
    /**
     * Specifies whether password authentication should be disabled.
     */
    disablePasswordAuthentication?: boolean;
    /**
     * Specifies the ssh key configuration for a Linux OS.
     */
    ssh?: outputs.compute.v20160430preview.SshConfigurationResponse;
}

/**
 * The parameters of a managed disk.
 */
export interface ManagedDiskParametersResponse {
    /**
     * Resource Id
     */
    id?: string;
    /**
     * Specifies the storage account type for the managed disk. Possible values are: Standard_LRS or Premium_LRS.
     */
    storageAccountType?: string;
}

/**
 * Describes a network interface reference.
 */
export interface NetworkInterfaceReferenceResponse {
    /**
     * Resource Id
     */
    id?: string;
    /**
     * Specifies the primary network interface in case the virtual machine has more than 1 network interface.
     */
    primary?: boolean;
}

/**
 * Specifies the network interfaces of the virtual machine.
 */
export interface NetworkProfileResponse {
    /**
     * Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
     */
    networkInterfaces?: outputs.compute.v20160430preview.NetworkInterfaceReferenceResponse[];
}

/**
 * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 */
export interface OSDiskResponse {
    /**
     * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
     */
    caching?: string;
    /**
     * Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
     */
    createOption: string;
    /**
     * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
     */
    diskSizeGB?: number;
    /**
     * Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
     */
    encryptionSettings?: outputs.compute.v20160430preview.DiskEncryptionSettingsResponse;
    /**
     * The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
     */
    image?: outputs.compute.v20160430preview.VirtualHardDiskResponse;
    /**
     * The managed disk parameters.
     */
    managedDisk?: outputs.compute.v20160430preview.ManagedDiskParametersResponse;
    /**
     * The disk name.
     */
    name?: string;
    /**
     * This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
     */
    osType?: string;
    /**
     * The virtual hard disk.
     */
    vhd?: outputs.compute.v20160430preview.VirtualHardDiskResponse;
}

/**
 * Specifies the operating system settings for the virtual machine.
 */
export interface OSProfileResponse {
    /**
     * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
     */
    adminPassword?: string;
    /**
     * Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
     */
    adminUsername?: string;
    /**
     * Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
     */
    computerName?: string;
    /**
     * Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
     */
    customData?: string;
    /**
     * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
     */
    linuxConfiguration?: outputs.compute.v20160430preview.LinuxConfigurationResponse;
    /**
     * Specifies set of certificates that should be installed onto the virtual machine.
     */
    secrets?: outputs.compute.v20160430preview.VaultSecretGroupResponse[];
    /**
     * Specifies Windows operating system settings on the virtual machine.
     */
    windowsConfiguration?: outputs.compute.v20160430preview.WindowsConfigurationResponse;
}

/**
 * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
 */
export interface PlanResponse {
    /**
     * The plan ID.
     */
    name?: string;
    /**
     * Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
     */
    product?: string;
    /**
     * The promotion code.
     */
    promotionCode?: string;
    /**
     * The publisher ID.
     */
    publisher?: string;
}

/**
 * Describes a virtual machine scale set sku.
 */
export interface SkuResponse {
    /**
     * Specifies the number of virtual machines in the scale set.
     */
    capacity?: number;
    /**
     * The sku name.
     */
    name?: string;
    /**
     * Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
     */
    tier?: string;
}

/**
 * The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
 */
export interface SourceVaultResponse {
    /**
     * Resource Id
     */
    id?: string;
}

/**
 * SSH configuration for Linux based VMs running on Azure
 */
export interface SshConfigurationResponse {
    /**
     * The list of SSH public keys used to authenticate with linux based VMs.
     */
    publicKeys?: outputs.compute.v20160430preview.SshPublicKeyResponse[];
}

/**
 * Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
 */
export interface SshPublicKeyResponse {
    /**
     * SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
     */
    keyData?: string;
    /**
     * Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
     */
    path?: string;
}

/**
 * Specifies the storage settings for the virtual machine disks.
 */
export interface StorageProfileResponse {
    /**
     * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
     */
    dataDisks?: outputs.compute.v20160430preview.DataDiskResponse[];
    /**
     * Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
     */
    imageReference?: outputs.compute.v20160430preview.ImageReferenceResponse;
    /**
     * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
     */
    osDisk?: outputs.compute.v20160430preview.OSDiskResponse;
}

export interface SubResourceResponse {
    /**
     * Resource Id
     */
    id?: string;
}

/**
 * Describes an upgrade policy - automatic or manual.
 */
export interface UpgradePolicyResponse {
    /**
     * Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
     */
    mode?: string;
}

/**
 * Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
 */
export interface VaultCertificateResponse {
    /**
     * For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted.
     */
    certificateStore?: string;
    /**
     * This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
     */
    certificateUrl?: string;
}

/**
 * Describes a set of certificates which are all in the same Key Vault.
 */
export interface VaultSecretGroupResponse {
    /**
     * The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
     */
    sourceVault?: outputs.compute.v20160430preview.SubResourceResponse;
    /**
     * The list of key vault references in SourceVault which contain certificates.
     */
    vaultCertificates?: outputs.compute.v20160430preview.VaultCertificateResponse[];
}

/**
 * Describes the uri of a disk.
 */
export interface VirtualHardDiskResponse {
    /**
     * Specifies the virtual hard disk's uri.
     */
    uri?: string;
}

/**
 * The instance view of the VM Agent running on the virtual machine.
 */
export interface VirtualMachineAgentInstanceViewResponse {
    /**
     * The virtual machine extension handler instance view.
     */
    extensionHandlers?: outputs.compute.v20160430preview.VirtualMachineExtensionHandlerInstanceViewResponse[];
    /**
     * The resource status information.
     */
    statuses?: outputs.compute.v20160430preview.InstanceViewStatusResponse[];
    /**
     * The VM Agent full version.
     */
    vmAgentVersion?: string;
}

/**
 * The instance view of a virtual machine extension handler.
 */
export interface VirtualMachineExtensionHandlerInstanceViewResponse {
    /**
     * The extension handler status.
     */
    status?: outputs.compute.v20160430preview.InstanceViewStatusResponse;
    /**
     * Specifies the type of the extension; an example is "CustomScriptExtension".
     */
    type?: string;
    /**
     * Specifies the version of the script handler.
     */
    typeHandlerVersion?: string;
}

/**
 * The instance view of a virtual machine extension.
 */
export interface VirtualMachineExtensionInstanceViewResponse {
    /**
     * The virtual machine extension name.
     */
    name?: string;
    /**
     * The resource status information.
     */
    statuses?: outputs.compute.v20160430preview.InstanceViewStatusResponse[];
    /**
     * The resource status information.
     */
    substatuses?: outputs.compute.v20160430preview.InstanceViewStatusResponse[];
    /**
     * Specifies the type of the extension; an example is "CustomScriptExtension".
     */
    type?: string;
    /**
     * Specifies the version of the script handler.
     */
    typeHandlerVersion?: string;
}

/**
 * Describes a Virtual Machine Extension.
 */
export interface VirtualMachineExtensionResponse {
    /**
     * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
     */
    autoUpgradeMinorVersion?: boolean;
    /**
     * How the extension handler should be forced to update even if the extension configuration has not changed.
     */
    forceUpdateTag?: string;
    /**
     * Resource Id
     */
    id: string;
    /**
     * The virtual machine extension instance view.
     */
    instanceView?: outputs.compute.v20160430preview.VirtualMachineExtensionInstanceViewResponse;
    /**
     * Resource location
     */
    location: string;
    /**
     * Resource name
     */
    name: string;
    /**
     * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
     */
    protectedSettings?: any;
    /**
     * The provisioning state, which only appears in the response.
     */
    provisioningState: string;
    /**
     * The name of the extension handler publisher.
     */
    publisher?: string;
    /**
     * Json formatted public settings for the extension.
     */
    settings?: any;
    /**
     * Resource tags
     */
    tags?: {[key: string]: string};
    /**
     * Resource type
     */
    type: string;
    /**
     * Specifies the version of the script handler.
     */
    typeHandlerVersion?: string;
}

/**
 * Identity for the virtual machine.
 */
export interface VirtualMachineIdentityResponse {
    /**
     * The principal id of virtual machine identity.
     */
    principalId: string;
    /**
     * The tenant id associated with the virtual machine.
     */
    tenantId: string;
    /**
     * The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
     */
    type?: string;
}

/**
 * The instance view of a virtual machine.
 */
export interface VirtualMachineInstanceViewResponse {
    /**
     * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
     */
    bootDiagnostics?: outputs.compute.v20160430preview.BootDiagnosticsInstanceViewResponse;
    /**
     * The virtual machine disk information.
     */
    disks?: outputs.compute.v20160430preview.DiskInstanceViewResponse[];
    /**
     * The extensions information.
     */
    extensions?: outputs.compute.v20160430preview.VirtualMachineExtensionInstanceViewResponse[];
    /**
     * Specifies the fault domain of the virtual machine.
     */
    platformFaultDomain?: number;
    /**
     * Specifies the update domain of the virtual machine.
     */
    platformUpdateDomain?: number;
    /**
     * The Remote desktop certificate thumbprint.
     */
    rdpThumbPrint?: string;
    /**
     * The resource status information.
     */
    statuses?: outputs.compute.v20160430preview.InstanceViewStatusResponse[];
    /**
     * The VM Agent running on the virtual machine.
     */
    vmAgent?: outputs.compute.v20160430preview.VirtualMachineAgentInstanceViewResponse;
}

/**
 * Describes a virtual machine scale set data disk.
 */
export interface VirtualMachineScaleSetDataDiskResponse {
    /**
     * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
     */
    caching?: string;
    /**
     * The create option.
     */
    createOption: string;
    /**
     * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
     */
    diskSizeGB?: number;
    /**
     * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
     */
    lun: number;
    /**
     * The managed disk parameters.
     */
    managedDisk?: outputs.compute.v20160430preview.VirtualMachineScaleSetManagedDiskParametersResponse;
    /**
     * The disk name.
     */
    name?: string;
}

/**
 * Describes a virtual machine scale set extension profile.
 */
export interface VirtualMachineScaleSetExtensionProfileResponse {
    /**
     * The virtual machine scale set child extension resources.
     */
    extensions?: outputs.compute.v20160430preview.VirtualMachineScaleSetExtensionResponse[];
}

/**
 * Describes a Virtual Machine Scale Set Extension.
 */
export interface VirtualMachineScaleSetExtensionResponse {
    /**
     * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
     */
    autoUpgradeMinorVersion?: boolean;
    /**
     * Resource Id
     */
    id: string;
    /**
     * The name of the extension.
     */
    name?: string;
    /**
     * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
     */
    protectedSettings?: any;
    /**
     * The provisioning state, which only appears in the response.
     */
    provisioningState: string;
    /**
     * The name of the extension handler publisher.
     */
    publisher?: string;
    /**
     * Json formatted public settings for the extension.
     */
    settings?: any;
    /**
     * Specifies the type of the extension; an example is "CustomScriptExtension".
     */
    type?: string;
    /**
     * Specifies the version of the script handler.
     */
    typeHandlerVersion?: string;
}

/**
 * Describes a virtual machine scale set network profile's IP configuration.
 */
export interface VirtualMachineScaleSetIPConfigurationResponse {
    /**
     * The application gateway backend address pools.
     */
    applicationGatewayBackendAddressPools?: outputs.compute.v20160430preview.SubResourceResponse[];
    /**
     * Resource Id
     */
    id?: string;
    /**
     * The load balancer backend address pools.
     */
    loadBalancerBackendAddressPools?: outputs.compute.v20160430preview.SubResourceResponse[];
    /**
     * The load balancer inbound nat pools.
     */
    loadBalancerInboundNatPools?: outputs.compute.v20160430preview.SubResourceResponse[];
    /**
     * The IP configuration name.
     */
    name: string;
    /**
     * The subnet.
     */
    subnet: outputs.compute.v20160430preview.ApiEntityReferenceResponse;
}

/**
 * Identity for the virtual machine scale set.
 */
export interface VirtualMachineScaleSetIdentityResponse {
    /**
     * The principal id of virtual machine scale set identity.
     */
    principalId: string;
    /**
     * The tenant id associated with the virtual machine scale set.
     */
    tenantId: string;
    /**
     * The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
     */
    type?: string;
}

/**
 * Describes the parameters of a ScaleSet managed disk.
 */
export interface VirtualMachineScaleSetManagedDiskParametersResponse {
    /**
     * Specifies the storage account type for the managed disk. Possible values are: Standard_LRS or Premium_LRS.
     */
    storageAccountType?: string;
}

/**
 * Describes a virtual machine scale set network profile's network configurations.
 */
export interface VirtualMachineScaleSetNetworkConfigurationResponse {
    /**
     * Resource Id
     */
    id?: string;
    /**
     * The virtual machine scale set IP Configuration.
     */
    ipConfigurations: outputs.compute.v20160430preview.VirtualMachineScaleSetIPConfigurationResponse[];
    /**
     * The network configuration name.
     */
    name: string;
    /**
     * Whether this is a primary NIC on a virtual machine.
     */
    primary?: boolean;
}

/**
 * Describes a virtual machine scale set network profile.
 */
export interface VirtualMachineScaleSetNetworkProfileResponse {
    /**
     * The list of network configurations.
     */
    networkInterfaceConfigurations?: outputs.compute.v20160430preview.VirtualMachineScaleSetNetworkConfigurationResponse[];
}

/**
 * Describes a virtual machine scale set operating system disk.
 */
export interface VirtualMachineScaleSetOSDiskResponse {
    /**
     * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
     */
    caching?: string;
    /**
     * Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
     */
    createOption: string;
    /**
     * The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
     */
    image?: outputs.compute.v20160430preview.VirtualHardDiskResponse;
    /**
     * The managed disk parameters.
     */
    managedDisk?: outputs.compute.v20160430preview.VirtualMachineScaleSetManagedDiskParametersResponse;
    /**
     * The disk name.
     */
    name?: string;
    /**
     * This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
     */
    osType?: string;
    /**
     * The list of virtual hard disk container uris.
     */
    vhdContainers?: string[];
}

/**
 * Describes a virtual machine scale set OS profile.
 */
export interface VirtualMachineScaleSetOSProfileResponse {
    /**
     * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
     */
    adminPassword?: string;
    /**
     * Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
     */
    adminUsername?: string;
    /**
     * Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
     */
    computerNamePrefix?: string;
    /**
     * A base-64 encoded string of custom data.
     */
    customData?: string;
    /**
     * The Linux Configuration of the OS profile.
     */
    linuxConfiguration?: outputs.compute.v20160430preview.LinuxConfigurationResponse;
    /**
     * The List of certificates for addition to the VM.
     */
    secrets?: outputs.compute.v20160430preview.VaultSecretGroupResponse[];
    /**
     * The Windows Configuration of the OS profile.
     */
    windowsConfiguration?: outputs.compute.v20160430preview.WindowsConfigurationResponse;
}

/**
 * Describes a virtual machine scale set storage profile.
 */
export interface VirtualMachineScaleSetStorageProfileResponse {
    /**
     * The data disks.
     */
    dataDisks?: outputs.compute.v20160430preview.VirtualMachineScaleSetDataDiskResponse[];
    /**
     * The image reference.
     */
    imageReference?: outputs.compute.v20160430preview.ImageReferenceResponse;
    /**
     * The OS disk.
     */
    osDisk?: outputs.compute.v20160430preview.VirtualMachineScaleSetOSDiskResponse;
}

/**
 * Describes a virtual machine scale set virtual machine profile.
 */
export interface VirtualMachineScaleSetVMProfileResponse {
    /**
     * The virtual machine scale set extension profile.
     */
    extensionProfile?: outputs.compute.v20160430preview.VirtualMachineScaleSetExtensionProfileResponse;
    /**
     * The virtual machine scale set network profile.
     */
    networkProfile?: outputs.compute.v20160430preview.VirtualMachineScaleSetNetworkProfileResponse;
    /**
     * The virtual machine scale set OS profile.
     */
    osProfile?: outputs.compute.v20160430preview.VirtualMachineScaleSetOSProfileResponse;
    /**
     * The virtual machine scale set storage profile.
     */
    storageProfile?: outputs.compute.v20160430preview.VirtualMachineScaleSetStorageProfileResponse;
}

/**
 * Describes Windows Remote Management configuration of the VM
 */
export interface WinRMConfigurationResponse {
    /**
     * The list of Windows Remote Management listeners
     */
    listeners?: outputs.compute.v20160430preview.WinRMListenerResponse[];
}

/**
 * Describes Protocol and thumbprint of Windows Remote Management listener
 */
export interface WinRMListenerResponse {
    /**
     * This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
     */
    certificateUrl?: string;
    /**
     * Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
     */
    protocol?: string;
}

/**
 * Specifies Windows operating system settings on the virtual machine.
 */
export interface WindowsConfigurationResponse {
    /**
     * Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
     */
    additionalUnattendContent?: outputs.compute.v20160430preview.AdditionalUnattendContentResponse[];
    /**
     * Indicates whether virtual machine is enabled for automatic updates.
     */
    enableAutomaticUpdates?: boolean;
    /**
     * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
     */
    provisionVMAgent?: boolean;
    /**
     * Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
     */
    timeZone?: string;
    /**
     * Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
     */
    winRM?: outputs.compute.v20160430preview.WinRMConfigurationResponse;
}

