// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Data used when creating a disk.
 */
export interface CreationDataArgs {
    /**
     * This enumerates the possible sources of a disk's creation.
     */
    createOption: pulumi.Input<string | enums.compute.v20180930.DiskCreateOption>;
    /**
     * Disk source information.
     */
    imageReference?: pulumi.Input<inputs.compute.v20180930.ImageDiskReferenceArgs>;
    /**
     * If createOption is Copy, this is the ARM id of the source snapshot or disk.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * If createOption is Import, this is the URI of a blob to be imported into a managed disk.
     */
    sourceUri?: pulumi.Input<string>;
    /**
     * If createOption is Import, the Azure Resource Manager identifier of the storage account containing the blob to import as a disk. Required only if the blob is in a different subscription
     */
    storageAccountId?: pulumi.Input<string>;
}

/**
 * The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or UltraSSD_LRS.
 */
export interface DiskSkuArgs {
    /**
     * The sku name.
     */
    name?: pulumi.Input<string | enums.compute.v20180930.DiskStorageAccountTypes>;
}

/**
 * Encryption settings for disk or snapshot
 */
export interface EncryptionSettingsCollectionArgs {
    /**
     * Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * A collection of encryption settings, one for each disk volume.
     */
    encryptionSettings?: pulumi.Input<pulumi.Input<inputs.compute.v20180930.EncryptionSettingsElementArgs>[]>;
}

/**
 * Encryption settings for one disk volume.
 */
export interface EncryptionSettingsElementArgs {
    /**
     * Key Vault Secret Url and vault id of the disk encryption key
     */
    diskEncryptionKey?: pulumi.Input<inputs.compute.v20180930.KeyVaultAndSecretReferenceArgs>;
    /**
     * Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.
     */
    keyEncryptionKey?: pulumi.Input<inputs.compute.v20180930.KeyVaultAndKeyReferenceArgs>;
}

/**
 * The source image used for creating the disk.
 */
export interface ImageDiskReferenceArgs {
    /**
     * A relative uri containing either a Platform Image Repository or user image reference.
     */
    id: pulumi.Input<string>;
    /**
     * If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.
     */
    lun?: pulumi.Input<number>;
}

/**
 * Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey
 */
export interface KeyVaultAndKeyReferenceArgs {
    /**
     * Url pointing to a key or secret in KeyVault
     */
    keyUrl: pulumi.Input<string>;
    /**
     * Resource id of the KeyVault containing the key or secret
     */
    sourceVault: pulumi.Input<inputs.compute.v20180930.SourceVaultArgs>;
}

/**
 * Key Vault Secret Url and vault id of the encryption key 
 */
export interface KeyVaultAndSecretReferenceArgs {
    /**
     * Url pointing to a key or secret in KeyVault
     */
    secretUrl: pulumi.Input<string>;
    /**
     * Resource id of the KeyVault containing the key or secret
     */
    sourceVault: pulumi.Input<inputs.compute.v20180930.SourceVaultArgs>;
}

/**
 * The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.
 */
export interface SnapshotSkuArgs {
    /**
     * The sku name.
     */
    name?: pulumi.Input<string | enums.compute.v20180930.SnapshotStorageAccountTypes>;
}

/**
 * The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
 */
export interface SourceVaultArgs {
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
}

