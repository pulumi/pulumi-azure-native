// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Data used when creating a disk.
 */
export interface CreationDataArgs {
    /**
     * This enumerates the possible sources of a disk's creation.
     */
    createOption: pulumi.Input<string | enums.compute.v20191101.DiskCreateOption>;
    /**
     * Required if creating from a Gallery Image. The id of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk.
     */
    galleryImageReference?: pulumi.Input<inputs.compute.v20191101.ImageDiskReferenceArgs>;
    /**
     * Disk source information.
     */
    imageReference?: pulumi.Input<inputs.compute.v20191101.ImageDiskReferenceArgs>;
    /**
     * If createOption is Copy, this is the ARM id of the source snapshot or disk.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * If createOption is Import, this is the URI of a blob to be imported into a managed disk.
     */
    sourceUri?: pulumi.Input<string>;
    /**
     * Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.
     */
    storageAccountId?: pulumi.Input<string>;
    /**
     * If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).
     */
    uploadSizeBytes?: pulumi.Input<number>;
}

/**
 * The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or UltraSSD_LRS.
 */
export interface DiskSkuArgs {
    /**
     * The sku name.
     */
    name?: pulumi.Input<string | enums.compute.v20191101.DiskStorageAccountTypes>;
}

/**
 * Encryption at rest settings for disk or snapshot
 */
export interface EncryptionArgs {
    /**
     * ResourceId of the disk encryption set to use for enabling encryption at rest.
     */
    diskEncryptionSetId?: pulumi.Input<string>;
    /**
     * The type of key used to encrypt the data of the disk.
     */
    type?: pulumi.Input<string | enums.compute.v20191101.EncryptionType>;
}

/**
 * The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks.
 */
export interface EncryptionSetIdentityArgs {
    /**
     * The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported.
     */
    type?: pulumi.Input<string | enums.compute.v20191101.DiskEncryptionSetIdentityType>;
}

/**
 * Encryption settings for disk or snapshot
 */
export interface EncryptionSettingsCollectionArgs {
    /**
     * Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * A collection of encryption settings, one for each disk volume.
     */
    encryptionSettings?: pulumi.Input<pulumi.Input<inputs.compute.v20191101.EncryptionSettingsElementArgs>[]>;
    /**
     * Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption.
     */
    encryptionSettingsVersion?: pulumi.Input<string>;
}

/**
 * Encryption settings for one disk volume.
 */
export interface EncryptionSettingsElementArgs {
    /**
     * Key Vault Secret Url and vault id of the disk encryption key
     */
    diskEncryptionKey?: pulumi.Input<inputs.compute.v20191101.KeyVaultAndSecretReferenceArgs>;
    /**
     * Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.
     */
    keyEncryptionKey?: pulumi.Input<inputs.compute.v20191101.KeyVaultAndKeyReferenceArgs>;
}

/**
 * The source image used for creating the disk.
 */
export interface ImageDiskReferenceArgs {
    /**
     * A relative uri containing either a Platform Image Repository or user image reference.
     */
    id: pulumi.Input<string>;
    /**
     * If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.
     */
    lun?: pulumi.Input<number>;
}

/**
 * Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey
 */
export interface KeyVaultAndKeyReferenceArgs {
    /**
     * Url pointing to a key or secret in KeyVault
     */
    keyUrl: pulumi.Input<string>;
    /**
     * Resource id of the KeyVault containing the key or secret
     */
    sourceVault: pulumi.Input<inputs.compute.v20191101.SourceVaultArgs>;
}

/**
 * Key Vault Secret Url and vault id of the encryption key 
 */
export interface KeyVaultAndSecretReferenceArgs {
    /**
     * Url pointing to a key or secret in KeyVault
     */
    secretUrl: pulumi.Input<string>;
    /**
     * Resource id of the KeyVault containing the key or secret
     */
    sourceVault: pulumi.Input<inputs.compute.v20191101.SourceVaultArgs>;
}

/**
 * The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.
 */
export interface SnapshotSkuArgs {
    /**
     * The sku name.
     */
    name?: pulumi.Input<string | enums.compute.v20191101.SnapshotStorageAccountTypes>;
}

/**
 * The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
 */
export interface SourceVaultArgs {
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
}

