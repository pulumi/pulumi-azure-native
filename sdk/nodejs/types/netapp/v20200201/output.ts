// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Active Directory
 */
export interface ActiveDirectoryResponse {
    /**
     * Id of the Active Directory
     */
    activeDirectoryId?: string;
    /**
     * Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier
     */
    backupOperators?: string[];
    /**
     * Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain
     */
    dns?: string;
    /**
     * Name of the Active Directory domain
     */
    domain?: string;
    /**
     * The Organizational Unit (OU) within the Windows Active Directory
     */
    organizationalUnit?: string;
    /**
     * Plain text password of Active Directory domain administrator
     */
    password?: string;
    /**
     * The Active Directory site the service will limit Domain Controller discovery to
     */
    site?: string;
    /**
     * NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
     */
    smbServerName?: string;
    /**
     * Status of the Active Directory
     */
    status?: string;
    /**
     * Username of Active Directory domain administrator
     */
    username?: string;
}
/**
 * activeDirectoryResponseProvideDefaults sets the appropriate defaults for ActiveDirectoryResponse
 */
export function activeDirectoryResponseProvideDefaults(val: ActiveDirectoryResponse): ActiveDirectoryResponse {
    return {
        ...val,
        activeDirectoryId: (val.activeDirectoryId) ?? "guid id",
        organizationalUnit: (val.organizationalUnit) ?? "CN=Computers",
    };
}

/**
 * Volume Export Policy Rule
 */
export interface ExportPolicyRuleResponse {
    /**
     * Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
     */
    allowedClients?: string;
    /**
     * Allows CIFS protocol
     */
    cifs?: boolean;
    /**
     * Allows NFSv3 protocol. Enable only for NFSv3 type volumes
     */
    nfsv3?: boolean;
    /**
     * Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes
     */
    nfsv41?: boolean;
    /**
     * Order index
     */
    ruleIndex?: number;
    /**
     * Read only access
     */
    unixReadOnly?: boolean;
    /**
     * Read and write access
     */
    unixReadWrite?: boolean;
}
/**
 * exportPolicyRuleResponseProvideDefaults sets the appropriate defaults for ExportPolicyRuleResponse
 */
export function exportPolicyRuleResponseProvideDefaults(val: ExportPolicyRuleResponse): ExportPolicyRuleResponse {
    return {
        ...val,
        cifs: (val.cifs) ?? false,
    };
}

/**
 * Mount target properties
 */
export interface MountTargetPropertiesResponse {
    /**
     * The end of IPv4 address range to use when creating a new mount target
     */
    endIp?: string;
    /**
     * UUID v4 used to identify the MountTarget
     */
    fileSystemId: string;
    /**
     * The gateway of the IPv4 address range to use when creating a new mount target
     */
    gateway?: string;
    /**
     * The mount target's IPv4 address
     */
    ipAddress: string;
    /**
     * UUID v4 used to identify the MountTarget
     */
    mountTargetId: string;
    /**
     * The netmask of the IPv4 address range to use when creating a new mount target
     */
    netmask?: string;
    /**
     * The SMB server's Fully Qualified Domain Name, FQDN
     */
    smbServerFqdn?: string;
    /**
     * The start of IPv4 address range to use when creating a new mount target
     */
    startIp?: string;
    /**
     * The subnet
     */
    subnet?: string;
}

/**
 * Replication properties
 */
export interface ReplicationObjectResponse {
    /**
     * Indicates whether the local volume is the source or destination for the Volume Replication
     */
    endpointType?: string;
    /**
     * The remote region for the other end of the Volume Replication.
     */
    remoteVolumeRegion?: string;
    /**
     * The resource ID of the remote volume.
     */
    remoteVolumeResourceId: string;
    /**
     * Id
     */
    replicationId?: string;
    /**
     * Schedule
     */
    replicationSchedule: string;
}

/**
 * DataProtection type volumes include an object containing details of the replication
 */
export interface VolumePropertiesResponseDataProtection {
    /**
     * Replication properties
     */
    replication?: outputs.netapp.v20200201.ReplicationObjectResponse;
    /**
     * Snapshot properties.
     */
    snapshot?: outputs.netapp.v20200201.VolumeSnapshotPropertiesResponse;
}

/**
 * Set of export policy rules
 */
export interface VolumePropertiesResponseExportPolicy {
    /**
     * Export policy rule
     */
    rules?: outputs.netapp.v20200201.ExportPolicyRuleResponse[];
}

/**
 * Volume Snapshot Properties
 */
export interface VolumeSnapshotPropertiesResponse {
    /**
     * Snapshot Policy ResourceId
     */
    snapshotPolicyId?: string;
}

