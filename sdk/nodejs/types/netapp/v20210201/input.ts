// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Encryption settings
 */
export interface AccountEncryptionArgs {
    /**
     * Encryption Key Source. Possible values are: 'Microsoft.NetApp'.
     */
    keySource?: pulumi.Input<string>;
}

/**
 * Active Directory
 */
export interface ActiveDirectoryArgs {
    /**
     * Id of the Active Directory
     */
    activeDirectoryId?: pulumi.Input<string>;
    /**
     * Name of the active directory machine. This optional parameter is used only while creating kerberos volume
     */
    adName?: pulumi.Input<string>;
    /**
     * If enabled, AES encryption will be enabled for SMB communication.
     */
    aesEncryption?: pulumi.Input<boolean>;
    /**
     *  If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes.
     */
    allowLocalNfsUsersWithLdap?: pulumi.Input<boolean>;
    /**
     * Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier
     */
    backupOperators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain
     */
    dns?: pulumi.Input<string>;
    /**
     * Name of the Active Directory domain
     */
    domain?: pulumi.Input<string>;
    /**
     * kdc server IP addresses for the active directory machine. This optional parameter is used only while creating kerberos volume.
     */
    kdcIP?: pulumi.Input<string>;
    /**
     * Specifies whether or not the LDAP traffic needs to be secured via TLS.
     */
    ldapOverTLS?: pulumi.Input<boolean>;
    /**
     * Specifies whether or not the LDAP traffic needs to be signed.
     */
    ldapSigning?: pulumi.Input<boolean>;
    /**
     * The Organizational Unit (OU) within the Windows Active Directory
     */
    organizationalUnit?: pulumi.Input<string>;
    /**
     * Plain text password of Active Directory domain administrator, value is masked in the response
     */
    password?: pulumi.Input<string>;
    /**
     * Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier
     */
    securityOperators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.
     */
    serverRootCACertificate?: pulumi.Input<string>;
    /**
     * The Active Directory site the service will limit Domain Controller discovery to
     */
    site?: pulumi.Input<string>;
    /**
     * NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
     */
    smbServerName?: pulumi.Input<string>;
    /**
     * Username of Active Directory domain administrator
     */
    username?: pulumi.Input<string>;
}
/**
 * activeDirectoryArgsProvideDefaults sets the appropriate defaults for ActiveDirectoryArgs
 */
export function activeDirectoryArgsProvideDefaults(val: ActiveDirectoryArgs): ActiveDirectoryArgs {
    return {
        ...val,
        organizationalUnit: (val.organizationalUnit) ?? "CN=Computers",
    };
}

/**
 * Daily Schedule properties
 */
export interface DailyScheduleArgs {
    /**
     * Indicates which hour in UTC timezone a snapshot should be taken
     */
    hour?: pulumi.Input<number>;
    /**
     * Indicates which minute snapshot should be taken
     */
    minute?: pulumi.Input<number>;
    /**
     * Daily snapshot count to keep
     */
    snapshotsToKeep?: pulumi.Input<number>;
    /**
     * Resource size in bytes, current storage usage for the volume in bytes
     */
    usedBytes?: pulumi.Input<number>;
}

/**
 * Volume Export Policy Rule
 */
export interface ExportPolicyRuleArgs {
    /**
     * Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
     */
    allowedClients?: pulumi.Input<string>;
    /**
     * Allows CIFS protocol
     */
    cifs?: pulumi.Input<boolean>;
    /**
     * Has root access to volume
     */
    hasRootAccess?: pulumi.Input<boolean>;
    /**
     * Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later
     */
    kerberos5ReadOnly?: pulumi.Input<boolean>;
    /**
     * Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later
     */
    kerberos5ReadWrite?: pulumi.Input<boolean>;
    /**
     * Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later
     */
    kerberos5iReadOnly?: pulumi.Input<boolean>;
    /**
     * Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later
     */
    kerberos5iReadWrite?: pulumi.Input<boolean>;
    /**
     * Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later
     */
    kerberos5pReadOnly?: pulumi.Input<boolean>;
    /**
     * Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later
     */
    kerberos5pReadWrite?: pulumi.Input<boolean>;
    /**
     * Allows NFSv3 protocol. Enable only for NFSv3 type volumes
     */
    nfsv3?: pulumi.Input<boolean>;
    /**
     * Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes
     */
    nfsv41?: pulumi.Input<boolean>;
    /**
     * Order index
     */
    ruleIndex?: pulumi.Input<number>;
    /**
     * Read only access
     */
    unixReadOnly?: pulumi.Input<boolean>;
    /**
     * Read and write access
     */
    unixReadWrite?: pulumi.Input<boolean>;
}
/**
 * exportPolicyRuleArgsProvideDefaults sets the appropriate defaults for ExportPolicyRuleArgs
 */
export function exportPolicyRuleArgsProvideDefaults(val: ExportPolicyRuleArgs): ExportPolicyRuleArgs {
    return {
        ...val,
        hasRootAccess: (val.hasRootAccess) ?? true,
        kerberos5ReadOnly: (val.kerberos5ReadOnly) ?? false,
        kerberos5ReadWrite: (val.kerberos5ReadWrite) ?? false,
        kerberos5iReadOnly: (val.kerberos5iReadOnly) ?? false,
        kerberos5iReadWrite: (val.kerberos5iReadWrite) ?? false,
        kerberos5pReadOnly: (val.kerberos5pReadOnly) ?? false,
        kerberos5pReadWrite: (val.kerberos5pReadWrite) ?? false,
    };
}

/**
 * Hourly Schedule properties
 */
export interface HourlyScheduleArgs {
    /**
     * Indicates which minute snapshot should be taken
     */
    minute?: pulumi.Input<number>;
    /**
     * Hourly snapshot count to keep
     */
    snapshotsToKeep?: pulumi.Input<number>;
    /**
     * Resource size in bytes, current storage usage for the volume in bytes
     */
    usedBytes?: pulumi.Input<number>;
}

/**
 * Monthly Schedule properties
 */
export interface MonthlyScheduleArgs {
    /**
     * Indicates which days of the month snapshot should be taken. A comma delimited string.
     */
    daysOfMonth?: pulumi.Input<string>;
    /**
     * Indicates which hour in UTC timezone a snapshot should be taken
     */
    hour?: pulumi.Input<number>;
    /**
     * Indicates which minute snapshot should be taken
     */
    minute?: pulumi.Input<number>;
    /**
     * Monthly snapshot count to keep
     */
    snapshotsToKeep?: pulumi.Input<number>;
    /**
     * Resource size in bytes, current storage usage for the volume in bytes
     */
    usedBytes?: pulumi.Input<number>;
}

/**
 * Replication properties
 */
export interface ReplicationObjectArgs {
    /**
     * Indicates whether the local volume is the source or destination for the Volume Replication
     */
    endpointType?: pulumi.Input<string | enums.netapp.v20210201.EndpointType>;
    /**
     * The remote region for the other end of the Volume Replication.
     */
    remoteVolumeRegion?: pulumi.Input<string>;
    /**
     * The resource ID of the remote volume.
     */
    remoteVolumeResourceId: pulumi.Input<string>;
    /**
     * Id
     */
    replicationId?: pulumi.Input<string>;
    /**
     * Schedule
     */
    replicationSchedule: pulumi.Input<string | enums.netapp.v20210201.ReplicationSchedule>;
}

/**
 * Volume Backup Properties
 */
export interface VolumeBackupPropertiesArgs {
    /**
     * Backup Enabled
     */
    backupEnabled?: pulumi.Input<boolean>;
    /**
     * Backup Policy Resource ID
     */
    backupPolicyId?: pulumi.Input<string>;
    /**
     * Policy Enforced
     */
    policyEnforced?: pulumi.Input<boolean>;
    /**
     * Vault Resource ID
     */
    vaultId?: pulumi.Input<string>;
}

/**
 * Volume details using the backup policy
 */
export interface VolumeBackupsArgs {
    /**
     * Total count of backups for volume
     */
    backupsCount?: pulumi.Input<number>;
    /**
     * Policy enabled
     */
    policyEnabled?: pulumi.Input<boolean>;
    /**
     * Volume name
     */
    volumeName?: pulumi.Input<string>;
}

/**
 * DataProtection type volumes include an object containing details of the replication
 */
export interface VolumePropertiesDataProtectionArgs {
    /**
     * Backup Properties
     */
    backup?: pulumi.Input<inputs.netapp.v20210201.VolumeBackupPropertiesArgs>;
    /**
     * Replication properties
     */
    replication?: pulumi.Input<inputs.netapp.v20210201.ReplicationObjectArgs>;
    /**
     * Snapshot properties.
     */
    snapshot?: pulumi.Input<inputs.netapp.v20210201.VolumeSnapshotPropertiesArgs>;
}

/**
 * Set of export policy rules
 */
export interface VolumePropertiesExportPolicyArgs {
    /**
     * Export policy rule
     */
    rules?: pulumi.Input<pulumi.Input<inputs.netapp.v20210201.ExportPolicyRuleArgs>[]>;
}

/**
 * Volume Snapshot Properties
 */
export interface VolumeSnapshotPropertiesArgs {
    /**
     * Snapshot Policy ResourceId
     */
    snapshotPolicyId?: pulumi.Input<string>;
}

/**
 * Weekly Schedule properties, make a snapshot every week at a specific day or days
 */
export interface WeeklyScheduleArgs {
    /**
     * Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
     */
    day?: pulumi.Input<string>;
    /**
     * Indicates which hour in UTC timezone a snapshot should be taken
     */
    hour?: pulumi.Input<number>;
    /**
     * Indicates which minute snapshot should be taken
     */
    minute?: pulumi.Input<number>;
    /**
     * Weekly snapshot count to keep
     */
    snapshotsToKeep?: pulumi.Input<number>;
    /**
     * Resource size in bytes, current storage usage for the volume in bytes
     */
    usedBytes?: pulumi.Input<number>;
}

