// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Connectivity related configuration required by arc server.
 */
export interface ArcConnectivityPropertiesResponse {
    /**
     * True indicates ARC connectivity is enabled
     */
    enabled?: boolean;
}

/**
 * Desired properties of the cluster.
 */
export interface ClusterDesiredPropertiesResponse {
    /**
     * Desired level of diagnostic data emitted by the cluster.
     */
    diagnosticLevel?: string;
    /**
     * Desired state of Windows Server Subscription.
     */
    windowsServerSubscription?: string;
}

/**
 * Cluster node details.
 */
export interface ClusterNodeResponse {
    /**
     * Number of physical cores on the cluster node.
     */
    coreCount: number;
    /**
     * Edge Hardware Center Resource Id
     */
    ehcResourceId: string;
    /**
     * Id of the node in the cluster.
     */
    id: number;
    /**
     * Manufacturer of the cluster node hardware.
     */
    manufacturer: string;
    /**
     * Total available memory on the cluster node (in GiB).
     */
    memoryInGiB: number;
    /**
     * Model name of the cluster node hardware.
     */
    model: string;
    /**
     * Name of the cluster node.
     */
    name: string;
    /**
     * Type of the cluster node hardware.
     */
    nodeType: string;
    /**
     * Display version of the operating system running on the cluster node.
     */
    osDisplayVersion: string;
    /**
     * Operating system running on the cluster node.
     */
    osName: string;
    /**
     * Version of the operating system running on the cluster node.
     */
    osVersion: string;
    /**
     * Immutable id of the cluster node.
     */
    serialNumber: string;
    /**
     * State of Windows Server Subscription.
     */
    windowsServerSubscription: string;
}

/**
 * Properties reported by cluster agent.
 */
export interface ClusterReportedPropertiesResponse {
    /**
     * Unique id generated by the on-prem cluster.
     */
    clusterId: string;
    /**
     * Name of the on-prem cluster connected to this resource.
     */
    clusterName: string;
    /**
     * Version of the cluster software.
     */
    clusterVersion: string;
    /**
     * Level of diagnostic data emitted by the cluster.
     */
    diagnosticLevel?: string;
    /**
     * IMDS attestation status of the cluster.
     */
    imdsAttestation: string;
    /**
     * Last time the cluster reported the data.
     */
    lastUpdated: string;
    /**
     * List of nodes reported by the cluster.
     */
    nodes: outputs.azurestackhci.v20221201.ClusterNodeResponse[];
    /**
     * Capabilities supported by the cluster.
     */
    supportedCapabilities: string[];
}

/**
 * Status of Arc Extension for a particular node in HCI Cluster.
 */
export interface PerNodeExtensionStateResponse {
    /**
     * Fully qualified resource ID for the particular Arc Extension on this node.
     */
    extension: string;
    /**
     * Name of the node in HCI Cluster.
     */
    name: string;
    /**
     * State of Arc Extension in this node.
     */
    state: string;
}

/**
 * Status of Arc agent for a particular node in HCI Cluster.
 */
export interface PerNodeStateResponse {
    /**
     * Fully qualified resource ID for the Arc agent of this node.
     */
    arcInstance: string;
    /**
     * Name of the Node in HCI Cluster
     */
    name: string;
    /**
     * State of Arc agent in this node.
     */
    state: string;
}

/**
 * Software Assurance properties of the cluster.
 */
export interface SoftwareAssurancePropertiesResponse {
    /**
     * TimeStamp denoting the latest SA benefit applicability is validated.
     */
    lastUpdated: string;
    /**
     * Customer Intent for Software Assurance Benefit.
     */
    softwareAssuranceIntent?: string;
    /**
     * Status of the Software Assurance for the cluster.
     */
    softwareAssuranceStatus?: string;
}

/**
 * Progress representation of the update run steps.
 */
export interface StepResponse {
    /**
     * More detailed description of the step.
     */
    description?: string;
    /**
     * When the step reached a terminal state.
     */
    endTimeUtc?: string;
    /**
     * Error message, specified if the step is in a failed state.
     */
    errorMessage?: string;
    /**
     * Completion time of this step or the last completed sub-step.
     */
    lastUpdatedTimeUtc?: string;
    /**
     * Name of the step.
     */
    name?: string;
    /**
     * When the step started, or empty if it has not started executing.
     */
    startTimeUtc?: string;
    /**
     * Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
     */
    status?: string;
    /**
     * Recursive model for child steps of this step.
     */
    steps?: outputs.azurestackhci.v20221201.StepResponse[];
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC).
     */
    createdAt?: string;
    /**
     * The identity that created the resource.
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource.
     */
    createdByType?: string;
    /**
     * The timestamp of resource last modification (UTC)
     */
    lastModifiedAt?: string;
    /**
     * The identity that last modified the resource.
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedByType?: string;
}

/**
 * If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
 */
export interface UpdatePrerequisiteResponse {
    /**
     * Friendly name of the prerequisite.
     */
    packageName?: string;
    /**
     * Updatable component type.
     */
    updateType?: string;
    /**
     * Version of the prerequisite.
     */
    version?: string;
}

/**
 * User assigned identity properties
 */
export interface UserAssignedIdentityResponse {
    /**
     * The client ID of the assigned identity.
     */
    clientId: string;
    /**
     * The principal ID of the assigned identity.
     */
    principalId: string;
}

