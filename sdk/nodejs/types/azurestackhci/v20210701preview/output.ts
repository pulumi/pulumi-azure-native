// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The complex type of the extended location.
 */
export interface ExtendedLocationResponse {
    /**
     * The name of the extended location.
     */
    name?: string;
    /**
     * The type of the extended location.
     */
    type?: string;
}

/**
 * GalleryImageStatus defines the observed state of MOCGalleryImage
 */
export interface GalleryImageStatusResponse {
    /**
     * GalleryImage provisioning error code
     */
    errorCode?: string;
    /**
     * Descriptive error message
     */
    errorMessage?: string;
}

export interface IPPoolInfoResponse {
    /**
     * no. of ip addresses available in the ip pool
     */
    available: string;
    /**
     * no. of ip addresses allocated from the ip pool
     */
    used: string;
}

export interface IPPoolResponse {
    /**
     * Last IP in the pool
     */
    end?: string;
    info?: outputs.azurestackhci.v20210701preview.IPPoolInfoResponse;
    /**
     * ip pool type
     */
    ipPoolType?: string;
    /**
     * First IP in the pool
     */
    start?: string;
}

export interface InterfaceDNSSettingsResponse {
    /**
     * List of DNS server IP Addresses for the interface
     */
    dnsServers?: string[];
}

/**
 * InterfaceIPConfiguration iPConfiguration in a network interface.
 */
export interface IpConfigurationResponse {
    /**
     * Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: string;
    /**
     * InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
     */
    properties?: outputs.azurestackhci.v20210701preview.IpConfigurationResponseProperties;
}

/**
 * InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
 */
export interface IpConfigurationResponseProperties {
    /**
     * prefixLength for network interface
     */
    prefixLength?: string;
    /**
     * PrivateIPAddress - Private IP address of the IP configuration.
     */
    privateIPAddress?: string;
    /**
     * PrivateIPAllocationMethod - The private IP address allocation method. Possible values include: 'Static', 'Dynamic'
     */
    privateIPAllocationMethod?: string;
    /**
     * Subnet - Name of Subnet bound to the IP configuration.
     */
    subnet?: outputs.azurestackhci.v20210701preview.IpConfigurationResponseSubnet;
}

/**
 * Subnet - Name of Subnet bound to the IP configuration.
 */
export interface IpConfigurationResponseSubnet {
    /**
     * ID - The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
     */
    id?: string;
}

/**
 * NetworkInterfaceStatus defines the observed state of NetworkInterface
 */
export interface NetworkInterfaceStatusResponse {
    /**
     * NetworkInterface provisioning error code
     */
    errorCode?: string;
    /**
     * Descriptive error message
     */
    errorMessage?: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC).
     */
    createdAt?: string;
    /**
     * The identity that created the resource.
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource.
     */
    createdByType?: string;
    /**
     * The timestamp of resource last modification (UTC)
     */
    lastModifiedAt?: string;
    /**
     * The identity that last modified the resource.
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedByType?: string;
}

/**
 * VirtualHardDiskStatus defines the observed state of VirtualHardDisk
 */
export interface VirtualHardDiskStatusResponse {
    /**
     * NetworkInterface provisioning error code
     */
    errorCode?: string;
    /**
     * Descriptive error message
     */
    errorMessage?: string;
}

/**
 * VirtualMachineStatus defines the observed state of VirtualMachine
 */
export interface VirtualMachineStatusResponse {
    /**
     * VM provisioning error code
     */
    errorCode?: string;
    /**
     * Descriptive error message
     */
    errorMessage?: string;
    /**
     * PowerState of the VM
     */
    powerState?: string;
}

/**
 * VirtualNetworkStatus defines the observed state of VirtualNetwork
 */
export interface VirtualNetworkStatusResponse {
    /**
     * VirtualNetwork provisioning error code
     */
    errorCode?: string;
    /**
     * Descriptive error message
     */
    errorMessage?: string;
}

export interface VirtualmachinesPropertiesResponseDataDisks {
    name?: string;
}

export interface VirtualmachinesPropertiesResponseDynamicMemoryConfig {
    maximumMemoryGB?: number;
    minimumMemoryGB?: number;
    targetMemoryBuffer?: number;
}

/**
 * HardwareProfile - Specifies the hardware settings for the virtual machine.
 */
export interface VirtualmachinesPropertiesResponseHardwareProfile {
    dynamicMemoryConfig?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponseDynamicMemoryConfig;
    /**
     * RAM in gb for the virtual machine
     */
    memoryGB?: number;
    /**
     * number of processors for the virtual machine
     */
    processors?: number;
    vmSize?: string;
}

/**
 * Which Image to use for the virtual machine
 */
export interface VirtualmachinesPropertiesResponseImageReference {
    /**
     * Name - Name of the image
     */
    name?: string;
}

/**
 * LinuxConfiguration - linux specific configuration values for the virtual machine
 */
export interface VirtualmachinesPropertiesResponseLinuxConfiguration {
    /**
     * DisablePasswordAuthentication - whether password authentication should be disabled
     */
    disablePasswordAuthentication?: boolean;
    /**
     * SSH - contains settings related to ssh configuration
     */
    ssh?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponseSsh;
}

export interface VirtualmachinesPropertiesResponseNetworkInterfaces {
    /**
     * Name of the network interface
     */
    id?: string;
}

/**
 * NetworkProfile - describes the network configuration the virtual machine
 */
export interface VirtualmachinesPropertiesResponseNetworkProfile {
    /**
     * NetworkInterfaces - list of network interfaces to be attached to the virtual machine
     */
    networkInterfaces?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponseNetworkInterfaces[];
}

/**
 * OsProfile - describes the configuration of the operating system and sets login data
 */
export interface VirtualmachinesPropertiesResponseOsProfile {
    /**
     * AdminUsername - admin username
     */
    adminUsername?: string;
    /**
     * ComputerName - name of the compute
     */
    computerName?: string;
    /**
     * LinuxConfiguration - linux specific configuration values for the virtual machine
     */
    linuxConfiguration?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponseLinuxConfiguration;
    /**
     * OsType - string specifying whether the OS is Linux or Windows
     */
    osType?: string;
    /**
     * Windows Configuration for the virtual machine 
     */
    windowsConfiguration?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponseWindowsConfiguration;
}

export interface VirtualmachinesPropertiesResponsePublicKeys {
    /**
     * KeyData - SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Li      nux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
     */
    keyData?: string;
    /**
     * Path - Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
     */
    path?: string;
}

export interface VirtualmachinesPropertiesResponsePublicKeysPublicKeys {
    /**
     * KeyData - SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Li      nux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
     */
    keyData?: string;
    /**
     * Path - Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
     */
    path?: string;
}

/**
 * SecurityProfile - Specifies the security settings for the virtual machine.
 */
export interface VirtualmachinesPropertiesResponseSecurityProfile {
    enableTPM?: boolean;
}

/**
 * SSH - contains settings related to ssh configuration
 */
export interface VirtualmachinesPropertiesResponseSsh {
    /**
     * PublicKeys - The list of SSH public keys used to authenticate with linux based VMs.
     */
    publicKeys?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponsePublicKeys[];
}

/**
 * SSH Configuration
 */
export interface VirtualmachinesPropertiesResponseSshSsh {
    /**
     * PublicKeys - The list of SSH public keys used to authenticate with linux based VMs.
     */
    publicKeys?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponsePublicKeysPublicKeys[];
}

/**
 * StorageProfile - contains information about the disks and storage information for the virtual machine
 */
export interface VirtualmachinesPropertiesResponseStorageProfile {
    /**
     * adds data disks to the virtual machine
     */
    dataDisks?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponseDataDisks[];
    /**
     * Which Image to use for the virtual machine
     */
    imageReference?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponseImageReference;
}

/**
 * Windows Configuration for the virtual machine 
 */
export interface VirtualmachinesPropertiesResponseWindowsConfiguration {
    /**
     * Whether to EnableAutomaticUpdates on the machine
     */
    enableAutomaticUpdates?: boolean;
    /**
     * SSH Configuration
     */
    ssh?: outputs.azurestackhci.v20210701preview.VirtualmachinesPropertiesResponseSshSsh;
    /**
     * TimeZone for the virtual machine
     */
    timeZone?: string;
}

/**
 * IPConfigurationReference - Describes a IPConfiguration under the virtual network
 */
export interface VirtualnetworksPropertiesResponseIpConfigurationReferences {
    /**
     * Name of the Ip Configuration
     */
    id?: string;
}

/**
 * RouteTable for the subnet
 */
export interface VirtualnetworksPropertiesResponseRouteTable {
    /**
     * route ID - ID of the IP route
     */
    id?: string;
    /**
     * Name - READ-ONLY; Resource name.
     */
    name?: string;
    /**
     * Routes - Collection of routes contained within a route table.
     */
    routes?: outputs.azurestackhci.v20210701preview.VirtualnetworksPropertiesResponseRoutes[];
    /**
     * Type - READ-ONLY; Resource type.
     */
    type?: string;
}

/**
 * Route is associated with a subnet.
 */
export interface VirtualnetworksPropertiesResponseRoutes {
    /**
     * AddressPrefix - The destination CIDR to which the route applies.
     */
    addressPrefix?: string;
    /**
     * Name - name of the subnet
     */
    name?: string;
    /**
     * NextHopIPAddress - The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
     */
    nextHopIpAddress?: string;
}

/**
 * Subnet subnet in a virtual network resource.
 */
export interface VirtualnetworksPropertiesResponseSubnets {
    /**
     * Cidr for this subnet - IPv4, IPv6
     */
    addressPrefix?: string;
    /**
     * AddressPrefixes - List of address prefixes for the subnet.
     */
    addressPrefixes?: string[];
    /**
     * IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
     */
    ipAllocationMethod?: string;
    /**
     * IPConfigurationReferences - list of IPConfigurationReferences
     */
    ipConfigurationReferences?: outputs.azurestackhci.v20210701preview.VirtualnetworksPropertiesResponseIpConfigurationReferences[];
    /**
     * network associated pool of IP Addresses
     */
    ipPools?: outputs.azurestackhci.v20210701preview.IPPoolResponse[];
    /**
     * Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: string;
    /**
     * RouteTable for the subnet
     */
    routeTable?: outputs.azurestackhci.v20210701preview.VirtualnetworksPropertiesResponseRouteTable;
    /**
     * Vlan to use for the subnet
     */
    vlan?: number;
}

