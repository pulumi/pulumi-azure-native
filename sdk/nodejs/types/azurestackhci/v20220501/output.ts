// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Connectivity related configuration required by arc server.
 */
export interface ArcConnectivityPropertiesResponse {
    /**
     * True indicates ARC connectivity is enabled
     */
    enabled?: boolean;
}

/**
 * Desired properties of the cluster.
 */
export interface ClusterDesiredPropertiesResponse {
    /**
     * Desired level of diagnostic data emitted by the cluster.
     */
    diagnosticLevel?: string;
    /**
     * Desired state of Windows Server Subscription.
     */
    windowsServerSubscription?: string;
}

/**
 * Cluster node details.
 */
export interface ClusterNodeResponse {
    /**
     * Number of physical cores on the cluster node.
     */
    coreCount: number;
    /**
     * Id of the node in the cluster.
     */
    id: number;
    /**
     * Manufacturer of the cluster node hardware.
     */
    manufacturer: string;
    /**
     * Total available memory on the cluster node (in GiB).
     */
    memoryInGiB: number;
    /**
     * Model name of the cluster node hardware.
     */
    model: string;
    /**
     * Name of the cluster node.
     */
    name: string;
    /**
     * Operating system running on the cluster node.
     */
    osName: string;
    /**
     * Version of the operating system running on the cluster node.
     */
    osVersion: string;
    /**
     * Immutable id of the cluster node.
     */
    serialNumber: string;
    /**
     * State of Windows Server Subscription.
     */
    windowsServerSubscription: string;
}

/**
 * Properties reported by cluster agent.
 */
export interface ClusterReportedPropertiesResponse {
    /**
     * Unique id generated by the on-prem cluster.
     */
    clusterId: string;
    /**
     * Name of the on-prem cluster connected to this resource.
     */
    clusterName: string;
    /**
     * Version of the cluster software.
     */
    clusterVersion: string;
    /**
     * Level of diagnostic data emitted by the cluster.
     */
    diagnosticLevel?: string;
    /**
     * IMDS attestation status of the cluster.
     */
    imdsAttestation: string;
    /**
     * Last time the cluster reported the data.
     */
    lastUpdated: string;
    /**
     * List of nodes reported by the cluster.
     */
    nodes: outputs.azurestackhci.v20220501.ClusterNodeResponse[];
}

/**
 * Status of Arc Extension for a particular node in HCI Cluster.
 */
export interface PerNodeExtensionStateResponse {
    /**
     * Fully qualified resource ID for the particular Arc Extension on this node.
     */
    extension: string;
    /**
     * Name of the node in HCI Cluster.
     */
    name: string;
    /**
     * State of Arc Extension in this node.
     */
    state: string;
}

/**
 * Status of Arc agent for a particular node in HCI Cluster.
 */
export interface PerNodeStateResponse {
    /**
     * Fully qualified resource ID for the Arc agent of this node.
     */
    arcInstance: string;
    /**
     * Name of the Node in HCI Cluster
     */
    name: string;
    /**
     * State of Arc agent in this node.
     */
    state: string;
}

