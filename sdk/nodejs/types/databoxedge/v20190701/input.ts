// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The shipping address of the customer.
 */
export interface AddressArgs {
    /**
     * The address line1.
     */
    addressLine1: pulumi.Input<string>;
    /**
     * The address line2.
     */
    addressLine2?: pulumi.Input<string>;
    /**
     * The address line3.
     */
    addressLine3?: pulumi.Input<string>;
    /**
     * The city name.
     */
    city: pulumi.Input<string>;
    /**
     * The country name.
     */
    country: pulumi.Input<string>;
    /**
     * The postal code.
     */
    postalCode: pulumi.Input<string>;
    /**
     * The state name.
     */
    state: pulumi.Input<string>;
}

/**
 * Represent the secrets intended for encryption with asymmetric key pair.
 */
export interface AsymmetricEncryptedSecretArgs {
    /**
     * The algorithm used to encrypt "Value".
     */
    encryptionAlgorithm: pulumi.Input<string | enums.databoxedge.v20190701.EncryptionAlgorithm>;
    /**
     * Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
     */
    encryptionCertThumbprint?: pulumi.Input<string>;
    /**
     * The value of the secret.
     */
    value: pulumi.Input<string>;
}

/**
 * Authentication mechanism for IoT devices.
 */
export interface AuthenticationArgs {
    /**
     * Symmetric key for authentication.
     */
    symmetricKey?: pulumi.Input<inputs.databoxedge.v20190701.SymmetricKeyArgs>;
}

/**
 * Azure container mapping of the endpoint.
 */
export interface AzureContainerInfoArgs {
    /**
     * Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
     */
    containerName: pulumi.Input<string>;
    /**
     * Storage format used for the file represented by the share.
     */
    dataFormat: pulumi.Input<string | enums.databoxedge.v20190701.AzureContainerDataFormat>;
    /**
     * ID of the storage account credential used to access storage.
     */
    storageAccountCredentialId: pulumi.Input<string>;
}

/**
 * The mapping between a particular client IP and the type of access client has on the NFS share.
 */
export interface ClientAccessRightArgs {
    /**
     * Type of access to be allowed for the client.
     */
    accessPermission: pulumi.Input<string | enums.databoxedge.v20190701.ClientPermissionType>;
    /**
     * IP of the client.
     */
    client: pulumi.Input<string>;
}

/**
 * Contains all the contact details of the customer.
 */
export interface ContactDetailsArgs {
    /**
     * The name of the company.
     */
    companyName: pulumi.Input<string>;
    /**
     * The contact person name.
     */
    contactPerson: pulumi.Input<string>;
    /**
     * The email list.
     */
    emailList: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The phone number.
     */
    phone: pulumi.Input<string>;
}

/**
 * File source details.
 */
export interface FileSourceInfoArgs {
    /**
     * File share ID.
     */
    shareId: pulumi.Input<string>;
}

/**
 * Metadata of IoT device/IoT Edge device to be configured.
 */
export interface IoTDeviceInfoArgs {
    /**
     * IoT device authentication info.
     */
    authentication?: pulumi.Input<inputs.databoxedge.v20190701.AuthenticationArgs>;
    /**
     * ID of the IoT device/edge device.
     */
    deviceId: pulumi.Input<string>;
    /**
     * Host name for the IoT hub associated to the device.
     */
    ioTHostHub: pulumi.Input<string>;
    /**
     * Id of the IoT hub associated to the device.
     */
    ioTHostHubId?: pulumi.Input<string>;
}

/**
 * The share mount point.
 */
export interface MountPointMapArgs {
    /**
     * ID of the share mounted to the role VM.
     */
    shareId: pulumi.Input<string>;
}

/**
 * Represents a single status change.
 */
export interface OrderStatusArgs {
    /**
     * Comments related to this status change.
     */
    comments?: pulumi.Input<string>;
    /**
     * Status of the order as per the allowed status types.
     */
    status: pulumi.Input<string | enums.databoxedge.v20190701.OrderState>;
}

/**
 * Periodic timer event source.
 */
export interface PeriodicTimerSourceInfoArgs {
    /**
     * Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
     */
    schedule: pulumi.Input<string>;
    /**
     * The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.
     */
    startTime: pulumi.Input<string>;
    /**
     * Topic where periodic events are published to IoT device.
     */
    topic?: pulumi.Input<string>;
}

/**
 * Fields for tracking refresh job on the share.
 */
export interface RefreshDetailsArgs {
    /**
     * Indicates the relative path of the error xml for the last refresh job on this particular share, if any. This could be a failed job or a successful job.
     */
    errorManifestFile?: pulumi.Input<string>;
    /**
     * If a refresh share job is currently in progress on this share, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
     */
    inProgressRefreshJobId?: pulumi.Input<string>;
    /**
     * Indicates the completed time for the last refresh job on this particular share, if any.This could be a failed job or a successful job.
     */
    lastCompletedRefreshJobTimeInUTC?: pulumi.Input<string>;
    /**
     * Indicates the id of the last refresh job on this particular share,if any. This could be a failed job or a successful job.
     */
    lastJob?: pulumi.Input<string>;
}

/**
 * Compute role against which events will be raised.
 */
export interface RoleSinkInfoArgs {
    /**
     * Compute role ID.
     */
    roleId: pulumi.Input<string>;
}

/**
 * Specifies the mapping between this particular user and the type of access he has on shares on this device.
 */
export interface ShareAccessRightArgs {
    /**
     * Type of access to be allowed on the share for this user.
     */
    accessType: pulumi.Input<string | enums.databoxedge.v20190701.ShareAccessType>;
    /**
     * The share ID.
     */
    shareId: pulumi.Input<string>;
}

/**
 * The SKU type.
 */
export interface SkuArgs {
    /**
     * SKU name.
     */
    name?: pulumi.Input<string | enums.databoxedge.v20190701.SkuName>;
    /**
     * The SKU tier. This is based on the SKU name.
     */
    tier?: pulumi.Input<string | enums.databoxedge.v20190701.SkuTier>;
}

/**
 * Symmetric key for authentication.
 */
export interface SymmetricKeyArgs {
    /**
     * Connection string based on the symmetric key.
     */
    connectionString?: pulumi.Input<inputs.databoxedge.v20190701.AsymmetricEncryptedSecretArgs>;
}

/**
 * The mapping between a particular user and the access type on the SMB share.
 */
export interface UserAccessRightArgs {
    /**
     * Type of access to be allowed for the user.
     */
    accessType: pulumi.Input<string | enums.databoxedge.v20190701.ShareAccessType>;
    /**
     * User ID (already existing in the device).
     */
    userId: pulumi.Input<string>;
}

