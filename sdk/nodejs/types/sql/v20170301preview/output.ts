// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineItemResponse {
    /**
     * The rule baseline result
     */
    result: string[];
}

/**
 * Scheduling properties of a job.
 */
export interface JobScheduleResponse {
    /**
     * Whether or not the schedule is enabled.
     */
    enabled?: boolean;
    /**
     * Schedule end time.
     */
    endTime?: string;
    /**
     * Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
     */
    interval?: string;
    /**
     * Schedule start time.
     */
    startTime?: string;
    /**
     * Schedule interval type
     */
    type?: string;
}
/**
 * jobScheduleResponseProvideDefaults sets the appropriate defaults for JobScheduleResponse
 */
export function jobScheduleResponseProvideDefaults(val: JobScheduleResponse): JobScheduleResponse {
    return {
        ...val,
        endTime: (val.endTime) ?? "9999-12-31T11:59:59Z",
        startTime: (val.startTime) ?? "0001-01-01T00:00:00Z",
        type: (val.type) ?? "Once",
    };
}

/**
 * The action to be executed by a job step.
 */
export interface JobStepActionResponse {
    /**
     * The source of the action to execute.
     */
    source?: string;
    /**
     * Type of action being executed by the job step.
     */
    type?: string;
    /**
     * The action value, for example the text of the T-SQL script to execute.
     */
    value: string;
}
/**
 * jobStepActionResponseProvideDefaults sets the appropriate defaults for JobStepActionResponse
 */
export function jobStepActionResponseProvideDefaults(val: JobStepActionResponse): JobStepActionResponse {
    return {
        ...val,
        source: (val.source) ?? "Inline",
        type: (val.type) ?? "TSql",
    };
}

/**
 * The execution options of a job step.
 */
export interface JobStepExecutionOptionsResponse {
    /**
     * Initial delay between retries for job step execution.
     */
    initialRetryIntervalSeconds?: number;
    /**
     * The maximum amount of time to wait between retries for job step execution.
     */
    maximumRetryIntervalSeconds?: number;
    /**
     * Maximum number of times the job step will be reattempted if the first attempt fails.
     */
    retryAttempts?: number;
    /**
     * The backoff multiplier for the time between retries.
     */
    retryIntervalBackoffMultiplier?: number;
    /**
     * Execution timeout for the job step.
     */
    timeoutSeconds?: number;
}
/**
 * jobStepExecutionOptionsResponseProvideDefaults sets the appropriate defaults for JobStepExecutionOptionsResponse
 */
export function jobStepExecutionOptionsResponseProvideDefaults(val: JobStepExecutionOptionsResponse): JobStepExecutionOptionsResponse {
    return {
        ...val,
        initialRetryIntervalSeconds: (val.initialRetryIntervalSeconds) ?? 1,
        maximumRetryIntervalSeconds: (val.maximumRetryIntervalSeconds) ?? 120,
        retryAttempts: (val.retryAttempts) ?? 10,
        retryIntervalBackoffMultiplier: (val.retryIntervalBackoffMultiplier) ?? 2,
        timeoutSeconds: (val.timeoutSeconds) ?? 43200,
    };
}

/**
 * The output configuration of a job step.
 */
export interface JobStepOutputResponse {
    /**
     * The resource ID of the credential to use to connect to the output destination.
     */
    credential: string;
    /**
     * The output destination database.
     */
    databaseName: string;
    /**
     * The output destination resource group.
     */
    resourceGroupName?: string;
    /**
     * The output destination schema.
     */
    schemaName?: string;
    /**
     * The output destination server name.
     */
    serverName: string;
    /**
     * The output destination subscription id.
     */
    subscriptionId?: string;
    /**
     * The output destination table.
     */
    tableName: string;
    /**
     * The output destination type.
     */
    type?: string;
}
/**
 * jobStepOutputResponseProvideDefaults sets the appropriate defaults for JobStepOutputResponse
 */
export function jobStepOutputResponseProvideDefaults(val: JobStepOutputResponse): JobStepOutputResponse {
    return {
        ...val,
        schemaName: (val.schemaName) ?? "dbo",
        type: (val.type) ?? "SqlDatabase",
    };
}

/**
 * A job target, for example a specific database or a container of databases that is evaluated during job execution.
 */
export interface JobTargetResponse {
    /**
     * The target database name.
     */
    databaseName?: string;
    /**
     * The target elastic pool name.
     */
    elasticPoolName?: string;
    /**
     * Whether the target is included or excluded from the group.
     */
    membershipType?: string;
    /**
     * The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.
     */
    refreshCredential?: string;
    /**
     * The target server name.
     */
    serverName?: string;
    /**
     * The target shard map.
     */
    shardMapName?: string;
    /**
     * The target type.
     */
    type: string;
}
/**
 * jobTargetResponseProvideDefaults sets the appropriate defaults for JobTargetResponse
 */
export function jobTargetResponseProvideDefaults(val: JobTargetResponse): JobTargetResponse {
    return {
        ...val,
        membershipType: (val.membershipType) ?? "Include",
    };
}

/**
 * An ARM Resource SKU.
 */
export interface SkuResponse {
    /**
     * Capacity of the particular SKU.
     */
    capacity?: number;
    /**
     * If the service has different generations of hardware, for the same SKU, then that can be captured here.
     */
    family?: string;
    /**
     * The name of the SKU, typically, a letter + Number code, e.g. P3.
     */
    name: string;
    /**
     * Size of the particular SKU
     */
    size?: string;
    /**
     * The tier or edition of the particular SKU, e.g. Basic, Premium.
     */
    tier?: string;
}

/**
 * Properties of a Vulnerability Assessment recurring scans.
 */
export interface VulnerabilityAssessmentRecurringScansPropertiesResponse {
    /**
     * Specifies that the schedule scan notification will be is sent to the subscription administrators.
     */
    emailSubscriptionAdmins?: boolean;
    /**
     * Specifies an array of e-mail addresses to which the scan notification is sent.
     */
    emails?: string[];
    /**
     * Recurring scans state.
     */
    isEnabled?: boolean;
}
/**
 * vulnerabilityAssessmentRecurringScansPropertiesResponseProvideDefaults sets the appropriate defaults for VulnerabilityAssessmentRecurringScansPropertiesResponse
 */
export function vulnerabilityAssessmentRecurringScansPropertiesResponseProvideDefaults(val: VulnerabilityAssessmentRecurringScansPropertiesResponse): VulnerabilityAssessmentRecurringScansPropertiesResponse {
    return {
        ...val,
        emailSubscriptionAdmins: (val.emailSubscriptionAdmins) ?? true,
    };
}

