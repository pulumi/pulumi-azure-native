// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineItemArgs {
    /**
     * The rule baseline result
     */
    result: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Scheduling properties of a job.
 */
export interface JobScheduleArgs {
    /**
     * Whether or not the schedule is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Schedule end time.
     */
    endTime?: pulumi.Input<string>;
    /**
     * Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
     */
    interval?: pulumi.Input<string>;
    /**
     * Schedule start time.
     */
    startTime?: pulumi.Input<string>;
    /**
     * Schedule interval type
     */
    type?: pulumi.Input<enums.sql.v20170301preview.JobScheduleType>;
}
/**
 * jobScheduleArgsProvideDefaults sets the appropriate defaults for JobScheduleArgs
 */
export function jobScheduleArgsProvideDefaults(val: JobScheduleArgs): JobScheduleArgs {
    return {
        ...val,
        endTime: (val.endTime) ?? "9999-12-31T11:59:59Z",
        startTime: (val.startTime) ?? "0001-01-01T00:00:00Z",
        type: (val.type) ?? "Once",
    };
}

/**
 * The action to be executed by a job step.
 */
export interface JobStepActionArgs {
    /**
     * The source of the action to execute.
     */
    source?: pulumi.Input<string | enums.sql.v20170301preview.JobStepActionSource>;
    /**
     * Type of action being executed by the job step.
     */
    type?: pulumi.Input<string | enums.sql.v20170301preview.JobStepActionType>;
    /**
     * The action value, for example the text of the T-SQL script to execute.
     */
    value: pulumi.Input<string>;
}
/**
 * jobStepActionArgsProvideDefaults sets the appropriate defaults for JobStepActionArgs
 */
export function jobStepActionArgsProvideDefaults(val: JobStepActionArgs): JobStepActionArgs {
    return {
        ...val,
        source: (val.source) ?? "Inline",
        type: (val.type) ?? "TSql",
    };
}

/**
 * The execution options of a job step.
 */
export interface JobStepExecutionOptionsArgs {
    /**
     * Initial delay between retries for job step execution.
     */
    initialRetryIntervalSeconds?: pulumi.Input<number>;
    /**
     * The maximum amount of time to wait between retries for job step execution.
     */
    maximumRetryIntervalSeconds?: pulumi.Input<number>;
    /**
     * Maximum number of times the job step will be reattempted if the first attempt fails.
     */
    retryAttempts?: pulumi.Input<number>;
    /**
     * The backoff multiplier for the time between retries.
     */
    retryIntervalBackoffMultiplier?: pulumi.Input<number>;
    /**
     * Execution timeout for the job step.
     */
    timeoutSeconds?: pulumi.Input<number>;
}
/**
 * jobStepExecutionOptionsArgsProvideDefaults sets the appropriate defaults for JobStepExecutionOptionsArgs
 */
export function jobStepExecutionOptionsArgsProvideDefaults(val: JobStepExecutionOptionsArgs): JobStepExecutionOptionsArgs {
    return {
        ...val,
        initialRetryIntervalSeconds: (val.initialRetryIntervalSeconds) ?? 1,
        maximumRetryIntervalSeconds: (val.maximumRetryIntervalSeconds) ?? 120,
        retryAttempts: (val.retryAttempts) ?? 10,
        retryIntervalBackoffMultiplier: (val.retryIntervalBackoffMultiplier) ?? 2,
        timeoutSeconds: (val.timeoutSeconds) ?? 43200,
    };
}

/**
 * The output configuration of a job step.
 */
export interface JobStepOutputArgs {
    /**
     * The resource ID of the credential to use to connect to the output destination.
     */
    credential: pulumi.Input<string>;
    /**
     * The output destination database.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The output destination resource group.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The output destination schema.
     */
    schemaName?: pulumi.Input<string>;
    /**
     * The output destination server name.
     */
    serverName: pulumi.Input<string>;
    /**
     * The output destination subscription id.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * The output destination table.
     */
    tableName: pulumi.Input<string>;
    /**
     * The output destination type.
     */
    type?: pulumi.Input<string | enums.sql.v20170301preview.JobStepOutputType>;
}
/**
 * jobStepOutputArgsProvideDefaults sets the appropriate defaults for JobStepOutputArgs
 */
export function jobStepOutputArgsProvideDefaults(val: JobStepOutputArgs): JobStepOutputArgs {
    return {
        ...val,
        schemaName: (val.schemaName) ?? "dbo",
        type: (val.type) ?? "SqlDatabase",
    };
}

/**
 * A job target, for example a specific database or a container of databases that is evaluated during job execution.
 */
export interface JobTargetArgs {
    /**
     * The target database name.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The target elastic pool name.
     */
    elasticPoolName?: pulumi.Input<string>;
    /**
     * Whether the target is included or excluded from the group.
     */
    membershipType?: pulumi.Input<enums.sql.v20170301preview.JobTargetGroupMembershipType>;
    /**
     * The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.
     */
    refreshCredential?: pulumi.Input<string>;
    /**
     * The target server name.
     */
    serverName?: pulumi.Input<string>;
    /**
     * The target shard map.
     */
    shardMapName?: pulumi.Input<string>;
    /**
     * The target type.
     */
    type: pulumi.Input<string | enums.sql.v20170301preview.JobTargetType>;
}
/**
 * jobTargetArgsProvideDefaults sets the appropriate defaults for JobTargetArgs
 */
export function jobTargetArgsProvideDefaults(val: JobTargetArgs): JobTargetArgs {
    return {
        ...val,
        membershipType: (val.membershipType) ?? "Include",
    };
}

/**
 * An ARM Resource SKU.
 */
export interface SkuArgs {
    /**
     * Capacity of the particular SKU.
     */
    capacity?: pulumi.Input<number>;
    /**
     * If the service has different generations of hardware, for the same SKU, then that can be captured here.
     */
    family?: pulumi.Input<string>;
    /**
     * The name of the SKU, typically, a letter + Number code, e.g. P3.
     */
    name: pulumi.Input<string>;
    /**
     * Size of the particular SKU
     */
    size?: pulumi.Input<string>;
    /**
     * The tier or edition of the particular SKU, e.g. Basic, Premium.
     */
    tier?: pulumi.Input<string>;
}

/**
 * Properties of a Vulnerability Assessment recurring scans.
 */
export interface VulnerabilityAssessmentRecurringScansPropertiesArgs {
    /**
     * Specifies that the schedule scan notification will be is sent to the subscription administrators.
     */
    emailSubscriptionAdmins?: pulumi.Input<boolean>;
    /**
     * Specifies an array of e-mail addresses to which the scan notification is sent.
     */
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Recurring scans state.
     */
    isEnabled?: pulumi.Input<boolean>;
}
/**
 * vulnerabilityAssessmentRecurringScansPropertiesArgsProvideDefaults sets the appropriate defaults for VulnerabilityAssessmentRecurringScansPropertiesArgs
 */
export function vulnerabilityAssessmentRecurringScansPropertiesArgsProvideDefaults(val: VulnerabilityAssessmentRecurringScansPropertiesArgs): VulnerabilityAssessmentRecurringScansPropertiesArgs {
    return {
        ...val,
        emailSubscriptionAdmins: (val.emailSubscriptionAdmins) ?? true,
    };
}

