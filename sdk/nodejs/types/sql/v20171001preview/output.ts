// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineItemResponse {
    /**
     * The rule baseline result
     */
    result: string[];
}

/**
 * Per database settings of an elastic pool.
 */
export interface ElasticPoolPerDatabaseSettingsResponse {
    /**
     * The maximum capacity any one database can consume.
     */
    maxCapacity?: number;
    /**
     * The minimum capacity all databases are guaranteed.
     */
    minCapacity?: number;
}

/**
 * Read-only endpoint of the failover group instance.
 */
export interface InstanceFailoverGroupReadOnlyEndpointResponse {
    /**
     * Failover policy of the read-only endpoint for the failover group.
     */
    failoverPolicy?: string;
}

/**
 * Read-write endpoint of the failover group instance.
 */
export interface InstanceFailoverGroupReadWriteEndpointResponse {
    /**
     * Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
     */
    failoverPolicy: string;
    /**
     * Grace period before failover with data loss is attempted for the read-write endpoint. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
     */
    failoverWithDataLossGracePeriodMinutes?: number;
}

/**
 * Pairs of Managed Instances in the failover group.
 */
export interface ManagedInstancePairInfoResponse {
    /**
     * Id of Partner Managed Instance in pair.
     */
    partnerManagedInstanceId?: string;
    /**
     * Id of Primary Managed Instance in pair.
     */
    primaryManagedInstanceId?: string;
}

/**
 * Partner region information for the failover group.
 */
export interface PartnerRegionInfoResponse {
    /**
     * Geo location of the partner managed instances.
     */
    location?: string;
    /**
     * Replication role of the partner managed instances.
     */
    replicationRole: string;
}

/**
 * An ARM Resource SKU.
 */
export interface SkuResponse {
    /**
     * Capacity of the particular SKU.
     */
    capacity?: number;
    /**
     * If the service has different generations of hardware, for the same SKU, then that can be captured here.
     */
    family?: string;
    /**
     * The name of the SKU, typically, a letter + Number code, e.g. P3.
     */
    name: string;
    /**
     * Size of the particular SKU
     */
    size?: string;
    /**
     * The tier or edition of the particular SKU, e.g. Basic, Premium.
     */
    tier?: string;
}

/**
 * Properties of a Vulnerability Assessment recurring scans.
 */
export interface VulnerabilityAssessmentRecurringScansPropertiesResponse {
    /**
     * Specifies that the schedule scan notification will be is sent to the subscription administrators.
     */
    emailSubscriptionAdmins?: boolean;
    /**
     * Specifies an array of e-mail addresses to which the scan notification is sent.
     */
    emails?: string[];
    /**
     * Recurring scans state.
     */
    isEnabled?: boolean;
}
/**
 * vulnerabilityAssessmentRecurringScansPropertiesResponseProvideDefaults sets the appropriate defaults for VulnerabilityAssessmentRecurringScansPropertiesResponse
 */
export function vulnerabilityAssessmentRecurringScansPropertiesResponseProvideDefaults(val: VulnerabilityAssessmentRecurringScansPropertiesResponse): VulnerabilityAssessmentRecurringScansPropertiesResponse {
    return {
        ...val,
        emailSubscriptionAdmins: (val.emailSubscriptionAdmins) ?? true,
    };
}

