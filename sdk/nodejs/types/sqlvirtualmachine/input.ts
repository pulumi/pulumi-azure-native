// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20170301preview from "./v20170301preview/input";
export * as v20211101preview from "./v20211101preview/input";
export * as v20220201 from "./v20220201/input";
export * as v20220201preview from "./v20220201preview/input";
export * as v20220701preview from "./v20220701preview/input";
/**
 * Additional SQL Server feature settings.
 */
export interface AdditionalFeaturesServerConfigurationsArgs {
    /**
     * Enable or disable R services (SQL 2016 onwards).
     */
    isRServicesEnabled?: pulumi.Input<boolean>;
}

/**
 * Configure backups for databases in your SQL virtual machine.
 */
export interface AutoBackupSettingsArgs {
    /**
     * Backup schedule type.
     */
    backupScheduleType?: pulumi.Input<string | enums.sqlvirtualmachine.BackupScheduleType>;
    /**
     * Include or exclude system databases from auto backup.
     */
    backupSystemDbs?: pulumi.Input<boolean>;
    /**
     * Enable or disable autobackup on SQL virtual machine.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Enable or disable encryption for backup on SQL virtual machine.
     */
    enableEncryption?: pulumi.Input<boolean>;
    /**
     * Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
     */
    fullBackupFrequency?: pulumi.Input<string | enums.sqlvirtualmachine.FullBackupFrequencyType>;
    /**
     * Start time of a given day during which full backups can take place. 0-23 hours.
     */
    fullBackupStartTime?: pulumi.Input<number>;
    /**
     * Duration of the time window of a given day during which full backups can take place. 1-23 hours.
     */
    fullBackupWindowHours?: pulumi.Input<number>;
    /**
     * Frequency of log backups. 5-60 minutes.
     */
    logBackupFrequency?: pulumi.Input<number>;
    /**
     * Password for encryption on backup.
     */
    password?: pulumi.Input<string>;
    /**
     * Retention period of backup: 1-30 days.
     */
    retentionPeriod?: pulumi.Input<number>;
    /**
     * Storage account key where backup will be taken to.
     */
    storageAccessKey?: pulumi.Input<string>;
    /**
     * Storage account url where backup will be taken to.
     */
    storageAccountUrl?: pulumi.Input<string>;
}

/**
 * Set a patching window during which Windows and SQL patches will be applied.
 */
export interface AutoPatchingSettingsArgs {
    /**
     * Day of week to apply the patch on.
     */
    dayOfWeek?: pulumi.Input<enums.sqlvirtualmachine.DayOfWeek>;
    /**
     * Enable or disable autopatching on SQL virtual machine.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Duration of patching.
     */
    maintenanceWindowDuration?: pulumi.Input<number>;
    /**
     * Hour of the day when patching is initiated. Local VM time.
     */
    maintenanceWindowStartingHour?: pulumi.Input<number>;
}

/**
 * Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
 */
export interface KeyVaultCredentialSettingsArgs {
    /**
     * Azure Key Vault url.
     */
    azureKeyVaultUrl?: pulumi.Input<string>;
    /**
     * Credential name.
     */
    credentialName?: pulumi.Input<string>;
    /**
     * Enable or disable key vault credential setting.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Service principal name to access key vault.
     */
    servicePrincipalName?: pulumi.Input<string>;
    /**
     * Service principal name secret to access key vault.
     */
    servicePrincipalSecret?: pulumi.Input<string>;
}

/**
 * A load balancer configuration for an availability group listener.
 */
export interface LoadBalancerConfigurationArgs {
    /**
     * Resource id of the load balancer.
     */
    loadBalancerResourceId?: pulumi.Input<string>;
    /**
     * Private IP address.
     */
    privateIpAddress?: pulumi.Input<inputs.sqlvirtualmachine.PrivateIPAddressArgs>;
    /**
     * Probe port.
     */
    probePort?: pulumi.Input<number>;
    /**
     * Resource id of the public IP.
     */
    publicIpAddressResourceId?: pulumi.Input<string>;
    /**
     * List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener.
     */
    sqlVirtualMachineInstances?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * A private IP address bound to the availability group listener.
 */
export interface PrivateIPAddressArgs {
    /**
     * Private IP address bound to the availability group listener.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Subnet used to include private IP.
     */
    subnetResourceId?: pulumi.Input<string>;
}

/**
 * Azure Active Directory identity configuration for a resource.
 */
export interface ResourceIdentityArgs {
    /**
     * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
     */
    type?: pulumi.Input<string | enums.sqlvirtualmachine.IdentityType>;
}

/**
 * Set disk storage settings for SQL Server.
 */
export interface SQLStorageSettingsArgs {
    /**
     * SQL Server default file path
     */
    defaultFilePath?: pulumi.Input<string>;
    /**
     * Logical Unit Numbers for the disks.
     */
    luns?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * Set the connectivity, storage and workload settings.
 */
export interface ServerConfigurationsManagementSettingsArgs {
    /**
     * Additional SQL feature settings.
     */
    additionalFeaturesServerConfigurations?: pulumi.Input<inputs.sqlvirtualmachine.AdditionalFeaturesServerConfigurationsArgs>;
    /**
     * SQL connectivity type settings.
     */
    sqlConnectivityUpdateSettings?: pulumi.Input<inputs.sqlvirtualmachine.SqlConnectivityUpdateSettingsArgs>;
    /**
     * SQL storage update settings.
     */
    sqlStorageUpdateSettings?: pulumi.Input<inputs.sqlvirtualmachine.SqlStorageUpdateSettingsArgs>;
    /**
     * SQL workload type settings.
     */
    sqlWorkloadTypeUpdateSettings?: pulumi.Input<inputs.sqlvirtualmachine.SqlWorkloadTypeUpdateSettingsArgs>;
}

/**
 * Set the access level and network port settings for SQL Server.
 */
export interface SqlConnectivityUpdateSettingsArgs {
    /**
     * SQL Server connectivity option.
     */
    connectivityType?: pulumi.Input<string | enums.sqlvirtualmachine.ConnectivityType>;
    /**
     * SQL Server port.
     */
    port?: pulumi.Input<number>;
    /**
     * SQL Server sysadmin login password.
     */
    sqlAuthUpdatePassword?: pulumi.Input<string>;
    /**
     * SQL Server sysadmin login to create.
     */
    sqlAuthUpdateUserName?: pulumi.Input<string>;
}

/**
 * Set disk storage settings for SQL Server.
 */
export interface SqlStorageUpdateSettingsArgs {
    /**
     * Disk configuration to apply to SQL Server.
     */
    diskConfigurationType?: pulumi.Input<string | enums.sqlvirtualmachine.DiskConfigurationType>;
    /**
     * Virtual machine disk count.
     */
    diskCount?: pulumi.Input<number>;
    /**
     * Device id of the first disk to be updated.
     */
    startingDeviceId?: pulumi.Input<number>;
}

/**
 * Set workload type to optimize storage for SQL Server.
 */
export interface SqlWorkloadTypeUpdateSettingsArgs {
    /**
     * SQL Server workload type.
     */
    sqlWorkloadType?: pulumi.Input<string | enums.sqlvirtualmachine.SqlWorkloadType>;
}

/**
 * Storage Configurations for SQL Data, Log and TempDb.
 */
export interface StorageConfigurationSettingsArgs {
    /**
     * Disk configuration to apply to SQL Server.
     */
    diskConfigurationType?: pulumi.Input<string | enums.sqlvirtualmachine.DiskConfigurationType>;
    /**
     * SQL Server Data Storage Settings.
     */
    sqlDataSettings?: pulumi.Input<inputs.sqlvirtualmachine.SQLStorageSettingsArgs>;
    /**
     * SQL Server Log Storage Settings.
     */
    sqlLogSettings?: pulumi.Input<inputs.sqlvirtualmachine.SQLStorageSettingsArgs>;
    /**
     * SQL Server TempDb Storage Settings.
     */
    sqlTempDbSettings?: pulumi.Input<inputs.sqlvirtualmachine.SQLStorageSettingsArgs>;
    /**
     * Storage workload type.
     */
    storageWorkloadType?: pulumi.Input<string | enums.sqlvirtualmachine.StorageWorkloadType>;
}

/**
 * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
 */
export interface WsfcDomainCredentialsArgs {
    /**
     * Cluster bootstrap account password.
     */
    clusterBootstrapAccountPassword?: pulumi.Input<string>;
    /**
     * Cluster operator account password.
     */
    clusterOperatorAccountPassword?: pulumi.Input<string>;
    /**
     * SQL service account password.
     */
    sqlServiceAccountPassword?: pulumi.Input<string>;
}

/**
 * Active Directory account details to operate Windows Server Failover Cluster.
 */
export interface WsfcDomainProfileArgs {
    /**
     * Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
     */
    clusterBootstrapAccount?: pulumi.Input<string>;
    /**
     * Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
     */
    clusterOperatorAccount?: pulumi.Input<string>;
    /**
     * Fully qualified name of the domain.
     */
    domainFqdn?: pulumi.Input<string>;
    /**
     * Optional path for fileshare witness.
     */
    fileShareWitnessPath?: pulumi.Input<string>;
    /**
     * Organizational Unit path in which the nodes and cluster will be present.
     */
    ouPath?: pulumi.Input<string>;
    /**
     * Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
     */
    sqlServiceAccount?: pulumi.Input<string>;
    /**
     * Primary key of the witness storage account.
     */
    storageAccountPrimaryKey?: pulumi.Input<string>;
    /**
     * Fully qualified ARM resource id of the witness storage account.
     */
    storageAccountUrl?: pulumi.Input<string>;
}

