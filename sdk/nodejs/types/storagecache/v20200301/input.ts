// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Cache encryption settings.
 */
export interface CacheEncryptionSettingsArgs {
    /**
     * Specifies the location of the key encryption key in Key Vault.
     */
    keyEncryptionKey?: pulumi.Input<inputs.storagecache.v20200301.KeyVaultKeyReferenceArgs>;
}

/**
 * Cache identity properties.
 */
export interface CacheIdentityArgs {
    /**
     * The type of identity used for the cache
     */
    type?: pulumi.Input<enums.storagecache.v20200301.CacheIdentityType>;
}

/**
 * Cache network settings.
 */
export interface CacheNetworkSettingsArgs {
    /**
     * The IPv4 maximum transmission unit configured for the subnet.
     */
    mtu?: pulumi.Input<number>;
}
/**
 * cacheNetworkSettingsArgsProvideDefaults sets the appropriate defaults for CacheNetworkSettingsArgs
 */
export function cacheNetworkSettingsArgsProvideDefaults(val: CacheNetworkSettingsArgs): CacheNetworkSettingsArgs {
    return {
        ...val,
        mtu: (val.mtu) ?? 1500,
    };
}

/**
 * Cache security settings.
 */
export interface CacheSecuritySettingsArgs {
    /**
     * root squash of cache property.
     */
    rootSquash?: pulumi.Input<boolean>;
}

/**
 * SKU for the Cache.
 */
export interface CacheSkuArgs {
    /**
     * SKU name for this Cache.
     */
    name?: pulumi.Input<string>;
}

/**
 * Properties pertained to ClfsTarget
 */
export interface ClfsTargetArgs {
    /**
     * Resource ID of storage container.
     */
    target?: pulumi.Input<string>;
}

/**
 * Describes a reference to Key Vault Key.
 */
export interface KeyVaultKeyReferenceArgs {
    /**
     * The URL referencing a key encryption key in Key Vault.
     */
    keyUrl: pulumi.Input<string>;
    /**
     * Describes a resource Id to source Key Vault.
     */
    sourceVault: pulumi.Input<inputs.storagecache.v20200301.KeyVaultKeyReferenceSourceVaultArgs>;
}

/**
 * Describes a resource Id to source Key Vault.
 */
export interface KeyVaultKeyReferenceSourceVaultArgs {
    /**
     * Resource Id.
     */
    id?: pulumi.Input<string>;
}

/**
 * A namespace junction.
 */
export interface NamespaceJunctionArgs {
    /**
     * Namespace path on a Cache for a Storage Target.
     */
    namespacePath?: pulumi.Input<string>;
    /**
     * NFS export where targetPath exists.
     */
    nfsExport?: pulumi.Input<string>;
    /**
     * Path in Storage Target to which namespacePath points.
     */
    targetPath?: pulumi.Input<string>;
}

/**
 * Properties pertained to Nfs3Target
 */
export interface Nfs3TargetArgs {
    /**
     * IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
     */
    target?: pulumi.Input<string>;
    /**
     * Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
     */
    usageModel?: pulumi.Input<string>;
}

/**
 * Properties pertained to UnknownTarget
 */
export interface UnknownTargetArgs {
    /**
     * Dictionary of string->string pairs containing information about the Storage Target.
     */
    unknownMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

