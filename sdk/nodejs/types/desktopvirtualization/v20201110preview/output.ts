// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Schema for MSIX Package Application properties.
 */
export interface MsixPackageApplicationsResponse {
    /**
     * Package Application Id, found in appxmanifest.xml.
     */
    appId?: string;
    /**
     * Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml.
     */
    appUserModelID?: string;
    /**
     * Description of Package Application.
     */
    description?: string;
    /**
     * User friendly name.
     */
    friendlyName?: string;
    /**
     * User friendly name.
     */
    iconImageName?: string;
    /**
     * the icon a 64 bit string as a byte array.
     */
    rawIcon?: string;
    /**
     * the icon a 64 bit string as a byte array.
     */
    rawPng?: string;
}

/**
 * Schema for MSIX Package Dependencies properties.
 */
export interface MsixPackageDependenciesResponse {
    /**
     * Name of package dependency.
     */
    dependencyName?: string;
    /**
     * Dependency version required.
     */
    minVersion?: string;
    /**
     * Name of dependency publisher.
     */
    publisher?: string;
}

/**
 * Represents a RegistrationInfo definition.
 */
export interface RegistrationInfoResponse {
    /**
     * Expiration time of registration token.
     */
    expirationTime?: string;
    /**
     * The type of resetting the token.
     */
    registrationTokenOperation?: string;
    /**
     * The registration token base64 encoded string.
     */
    token?: string;
}

/**
 * Scaling plan reference to hostpool.
 */
export interface ScalingHostPoolReferenceResponse {
    /**
     * Arm path of referenced hostpool.
     */
    hostPoolArmPath?: string;
    /**
     * Is the scaling plan enabled for this hostpool.
     */
    scalingPlanEnabled?: boolean;
}

/**
 * Scaling plan schedule.
 */
export interface ScalingScheduleResponse {
    /**
     * Set of days of the week on which this schedule is active.
     */
    daysOfWeek?: string[];
    /**
     * Name of the scaling schedule.
     */
    name?: string;
    /**
     * Load balancing algorithm for off-peak period.
     */
    offPeakLoadBalancingAlgorithm?: string;
    /**
     * Starting time for off-peak period.
     */
    offPeakStartTime?: string;
    /**
     * Load balancing algorithm for peak period.
     */
    peakLoadBalancingAlgorithm?: string;
    /**
     * Starting time for peak period.
     */
    peakStartTime?: string;
    /**
     * Capacity threshold for ramp down period.
     */
    rampDownCapacityThresholdPct?: number;
    /**
     * Should users be logged off forcefully from hosts.
     */
    rampDownForceLogoffUsers?: boolean;
    /**
     * Load balancing algorithm for ramp down period.
     */
    rampDownLoadBalancingAlgorithm?: string;
    /**
     * Minimum host percentage for ramp down period.
     */
    rampDownMinimumHostsPct?: number;
    /**
     * Notification message for users during ramp down period.
     */
    rampDownNotificationMessage?: string;
    /**
     * Starting time for ramp down period.
     */
    rampDownStartTime?: string;
    /**
     * Specifies when to stop hosts during ramp down period.
     */
    rampDownStopHostsWhen?: string;
    /**
     * Number of minutes to wait to stop hosts during ramp down period.
     */
    rampDownWaitTimeMinutes?: number;
    /**
     * Capacity threshold for ramp up period.
     */
    rampUpCapacityThresholdPct?: number;
    /**
     * Load balancing algorithm for ramp up period.
     */
    rampUpLoadBalancingAlgorithm?: string;
    /**
     * Minimum host percentage for ramp up period.
     */
    rampUpMinimumHostsPct?: number;
    /**
     * Starting time for ramp up period.
     */
    rampUpStartTime?: string;
}

