// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20190101preview from "./v20190101preview/output";
export * as v20200101 from "./v20200101/output";
export * as v20210301preview from "./v20210301preview/output";
export * as v20210401 from "./v20210401/output";
export * as v20210901preview from "./v20210901preview/output";
export * as v20211001 from "./v20211001/output";
export * as v20211001preview from "./v20211001preview/output";
export * as v20220101preview from "./v20220101preview/output";
export * as v20220401preview from "./v20220401preview/output";
export * as v20220501preview from "./v20220501preview/output";
export * as v20220601preview from "./v20220601preview/output";
export * as v20220701preview from "./v20220701preview/output";
export * as v20220801 from "./v20220801/output";
export * as v20220801preview from "./v20220801preview/output";
export * as v20220901preview from "./v20220901preview/output";
export * as v20221001preview from "./v20221001preview/output";
export * as v20221101 from "./v20221101/output";
export * as v20221101preview from "./v20221101preview/output";
/**
 * The Activity query definitions
 */
export interface ActivityEntityQueriesPropertiesResponseQueryDefinitions {
    /**
     * The Activity query to run on a given entity
     */
    query?: string;
}

/**
 * Represents Activity timeline item.
 */
export interface ActivityTimelineItemResponse {
    /**
     * The grouping bucket end time.
     */
    bucketEndTimeUTC: string;
    /**
     * The grouping bucket start time.
     */
    bucketStartTimeUTC: string;
    /**
     * The activity timeline content.
     */
    content: string;
    /**
     * The time of the first activity in the grouping bucket.
     */
    firstActivityTimeUTC: string;
    /**
     * The entity query kind
     * Expected value is 'Activity'.
     */
    kind: "Activity";
    /**
     * The time of the last activity in the grouping bucket.
     */
    lastActivityTimeUTC: string;
    /**
     * The activity query id.
     */
    queryId: string;
    /**
     * The activity timeline title.
     */
    title: string;
}

/**
 * Alerts data type for data connectors.
 */
export interface AlertsDataTypeOfDataConnectorResponse {
    /**
     * Alerts data type connection.
     */
    alerts?: outputs.securityinsights.DataConnectorDataTypeCommonResponse;
}

/**
 * Describes an automation rule action to modify an object's properties
 */
export interface AutomationRuleModifyPropertiesActionResponse {
    /**
     * The configuration of the modify properties automation rule action
     */
    actionConfiguration: outputs.securityinsights.AutomationRuleModifyPropertiesActionResponseActionConfiguration;
    /**
     * The type of the automation rule action
     * Expected value is 'ModifyProperties'.
     */
    actionType: "ModifyProperties";
    /**
     * The order of execution of the automation rule action
     */
    order: number;
}

/**
 * The configuration of the modify properties automation rule action
 */
export interface AutomationRuleModifyPropertiesActionResponseActionConfiguration {
    /**
     * The reason the incident was closed
     */
    classification?: string;
    /**
     * Describes the reason the incident was closed
     */
    classificationComment?: string;
    /**
     * The classification reason to close the incident with
     */
    classificationReason?: string;
    /**
     * List of labels to add to the incident
     */
    labels?: outputs.securityinsights.IncidentLabelResponse[];
    /**
     * Describes a user that the incident is assigned to
     */
    owner?: outputs.securityinsights.IncidentOwnerInfoResponse;
    /**
     * The severity of the incident
     */
    severity?: string;
    /**
     * The status of the incident
     */
    status?: string;
}

/**
 * Describes an automation rule condition that evaluates a property's value
 */
export interface AutomationRulePropertyValuesConditionResponse {
    /**
     * The configuration of the automation rule condition
     */
    conditionProperties: outputs.securityinsights.AutomationRulePropertyValuesConditionResponseConditionProperties;
    /**
     * The type of the automation rule condition
     * Expected value is 'Property'.
     */
    conditionType: "Property";
}

/**
 * The configuration of the automation rule condition
 */
export interface AutomationRulePropertyValuesConditionResponseConditionProperties {
    /**
     * The operator to use for evaluation the condition
     */
    operator?: string;
    /**
     * The property to evaluate
     */
    propertyName?: string;
    /**
     * The values to use for evaluating the condition
     */
    propertyValues?: string[];
}

/**
 * Describes an automation rule action to run a playbook
 */
export interface AutomationRuleRunPlaybookActionResponse {
    /**
     * The configuration of the run playbook automation rule action
     */
    actionConfiguration: outputs.securityinsights.AutomationRuleRunPlaybookActionResponseActionConfiguration;
    /**
     * The type of the automation rule action
     * Expected value is 'RunPlaybook'.
     */
    actionType: "RunPlaybook";
    /**
     * The order of execution of the automation rule action
     */
    order: number;
}

/**
 * The configuration of the run playbook automation rule action
 */
export interface AutomationRuleRunPlaybookActionResponseActionConfiguration {
    /**
     * The resource id of the playbook resource
     */
    logicAppResourceId?: string;
    /**
     * The tenant id of the playbook resource
     */
    tenantId?: string;
}

/**
 * Describes automation rule triggering logic
 */
export interface AutomationRuleTriggeringLogicResponse {
    /**
     * The conditions to evaluate to determine if the automation rule should be triggered on a given object
     */
    conditions?: outputs.securityinsights.AutomationRulePropertyValuesConditionResponse[];
    /**
     * Determines when the automation rule should automatically expire and be disabled.
     */
    expirationTimeUtc?: string;
    /**
     * Determines whether the automation rule is enabled or disabled.
     */
    isEnabled: boolean;
    /**
     * The type of object the automation rule triggers on
     */
    triggersOn: string;
    /**
     * The type of event the automation rule triggers on
     */
    triggersWhen: string;
}

/**
 * The available data types for Amazon Web Services CloudTrail data connector.
 */
export interface AwsCloudTrailDataConnectorDataTypesResponse {
    /**
     * Logs data type.
     */
    logs?: outputs.securityinsights.AwsCloudTrailDataConnectorDataTypesResponseLogs;
}

/**
 * Logs data type.
 */
export interface AwsCloudTrailDataConnectorDataTypesResponseLogs {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * Represents bookmark timeline item.
 */
export interface BookmarkTimelineItemResponse {
    /**
     * The bookmark azure resource id.
     */
    azureResourceId: string;
    /**
     * Describes a user that created the bookmark
     */
    createdBy?: outputs.securityinsights.UserInfoResponse;
    /**
     * The bookmark display name.
     */
    displayName?: string;
    /**
     * The bookmark end time.
     */
    endTimeUtc?: string;
    /**
     * The bookmark event time.
     */
    eventTime?: string;
    /**
     * The entity query kind
     * Expected value is 'Bookmark'.
     */
    kind: "Bookmark";
    /**
     * List of labels relevant to this bookmark
     */
    labels?: string[];
    /**
     * The notes of the bookmark
     */
    notes?: string;
    /**
     * The bookmark start time.
     */
    startTimeUtc?: string;
}

/**
 * Information on the client (user or application) that made some action
 */
export interface ClientInfoResponse {
    /**
     * The email of the client.
     */
    email?: string;
    /**
     * The name of the client.
     */
    name?: string;
    /**
     * The object id of the client.
     */
    objectId?: string;
    /**
     * The user principal name of the client.
     */
    userPrincipalName?: string;
}

/**
 * The mapping of content type to a repo path.
 */
export interface ContentPathMapResponse {
    /**
     * Content type.
     */
    contentType?: string;
    /**
     * The path to the content.
     */
    path?: string;
}

/**
 * Common field for data type in data connectors.
 */
export interface DataConnectorDataTypeCommonResponse {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * Entity insight Item.
 */
export interface EntityInsightItemResponse {
    /**
     * Query results for table insights query.
     */
    chartQueryResults?: outputs.securityinsights.InsightsTableResultResponse[];
    /**
     * The query id of the insight
     */
    queryId?: string;
    /**
     * The Time interval that the query actually executed on.
     */
    queryTimeInterval?: outputs.securityinsights.EntityInsightItemResponseQueryTimeInterval;
    /**
     * Query results for table insights query.
     */
    tableQueryResults?: outputs.securityinsights.InsightsTableResultResponse;
}

/**
 * The Time interval that the query actually executed on.
 */
export interface EntityInsightItemResponseQueryTimeInterval {
    /**
     * Insight query end time
     */
    endTime?: string;
    /**
     * Insight query start time
     */
    startTime?: string;
}

/**
 * GetInsights Query Errors.
 */
export interface GetInsightsErrorResponse {
    /**
     * the error message
     */
    errorMessage: string;
    /**
     * the query kind
     */
    kind: string;
    /**
     * the query id
     */
    queryId?: string;
}

/**
 * Get Insights result metadata.
 */
export interface GetInsightsResultsMetadataResponse {
    /**
     * information about the failed queries
     */
    errors?: outputs.securityinsights.GetInsightsErrorResponse[];
    /**
     * the total items found for the insights request
     */
    totalCount: number;
}

/**
 * Incident additional data property bag.
 */
export interface IncidentAdditionalDataResponse {
    /**
     * List of product names of alerts in the incident
     */
    alertProductNames: string[];
    /**
     * The number of alerts in the incident
     */
    alertsCount: number;
    /**
     * The number of bookmarks in the incident
     */
    bookmarksCount: number;
    /**
     * The number of comments in the incident
     */
    commentsCount: number;
    /**
     * The tactics associated with incident
     */
    tactics: string[];
}

/**
 * Describes related incident information for the bookmark
 */
export interface IncidentInfoResponse {
    /**
     * Incident Id
     */
    incidentId?: string;
    /**
     * Relation Name
     */
    relationName?: string;
    /**
     * The severity of the incident
     */
    severity?: string;
    /**
     * The title of the incident
     */
    title?: string;
}

/**
 * Represents an incident label
 */
export interface IncidentLabelResponse {
    /**
     * The name of the label
     */
    labelName: string;
    /**
     * The type of the label
     */
    labelType: string;
}

/**
 * Information on the user an incident is assigned to
 */
export interface IncidentOwnerInfoResponse {
    /**
     * The name of the user the incident is assigned to.
     */
    assignedTo?: string;
    /**
     * The email of the user the incident is assigned to.
     */
    email?: string;
    /**
     * The object id of the user the incident is assigned to.
     */
    objectId?: string;
    /**
     * The user principal name of the user the incident is assigned to.
     */
    userPrincipalName?: string;
}

/**
 * Query results for table insights query.
 */
export interface InsightsTableResultResponse {
    /**
     * Columns Metadata of the table
     */
    columns?: outputs.securityinsights.InsightsTableResultResponseColumns[];
    /**
     * Rows data of the table
     */
    rows?: string[][];
}

export interface InsightsTableResultResponseColumns {
    /**
     * the name of the colum
     */
    name?: string;
    /**
     * the type of the colum
     */
    type?: string;
}

/**
 * The available data types for MCAS (Microsoft Cloud App Security) data connector.
 */
export interface MCASDataConnectorDataTypesResponse {
    /**
     * Alerts data type connection.
     */
    alerts?: outputs.securityinsights.DataConnectorDataTypeCommonResponse;
    /**
     * Discovery log data type connection.
     */
    discoveryLogs?: outputs.securityinsights.DataConnectorDataTypeCommonResponse;
}

/**
 * Publisher or creator of the content item.
 */
export interface MetadataAuthorResponse {
    /**
     * Email of author contact
     */
    email?: string;
    /**
     * Link for author/vendor page
     */
    link?: string;
    /**
     * Name of the author. Company or person.
     */
    name?: string;
}

/**
 * ies for the solution content item
 */
export interface MetadataCategoriesResponse {
    /**
     * domain for the solution content item
     */
    domains?: string[];
    /**
     * Industry verticals for the solution content item
     */
    verticals?: string[];
}

/**
 * Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
 */
export interface MetadataDependenciesResponse {
    /**
     * Id of the content item we depend on
     */
    contentId?: string;
    /**
     * This is the list of dependencies we must fulfill, according to the AND/OR operator
     */
    criteria?: outputs.securityinsights.MetadataDependenciesResponse[];
    /**
     * Type of the content item we depend on
     */
    kind?: string;
    /**
     * Name of the content item
     */
    name?: string;
    /**
     * Operator used for list of dependencies in criteria array.
     */
    operator?: string;
    /**
     * Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
     */
    version?: string;
}

/**
 * The original source of the content item, where it comes from.
 */
export interface MetadataSourceResponse {
    /**
     * Source type of the content
     */
    kind: string;
    /**
     * Name of the content source.  The repo name, solution name, LA workspace name etc.
     */
    name?: string;
    /**
     * ID of the content source.  The solution ID, workspace ID, etc
     */
    sourceId?: string;
}

/**
 * Support information for the content item.
 */
export interface MetadataSupportResponse {
    /**
     * Email of support contact
     */
    email?: string;
    /**
     * Link for support help, like to support page to open a ticket etc.
     */
    link?: string;
    /**
     * Name of the support contact. Company or person.
     */
    name?: string;
    /**
     * Type of support for content item
     */
    tier: string;
}

/**
 * The available data types for office data connector.
 */
export interface OfficeDataConnectorDataTypesResponse {
    /**
     * Exchange data type connection.
     */
    exchange?: outputs.securityinsights.OfficeDataConnectorDataTypesResponseExchange;
    /**
     * SharePoint data type connection.
     */
    sharePoint?: outputs.securityinsights.OfficeDataConnectorDataTypesResponseSharePoint;
    /**
     * Teams data type connection.
     */
    teams?: outputs.securityinsights.OfficeDataConnectorDataTypesResponseTeams;
}

/**
 * Exchange data type connection.
 */
export interface OfficeDataConnectorDataTypesResponseExchange {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * SharePoint data type connection.
 */
export interface OfficeDataConnectorDataTypesResponseSharePoint {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * Teams data type connection.
 */
export interface OfficeDataConnectorDataTypesResponseTeams {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * Represents a repository.
 */
export interface RepoResponse {
    /**
     * Array of branches.
     */
    branches?: string[];
    /**
     * The name of the repository.
     */
    fullName?: string;
    /**
     * The url to access the repository.
     */
    url?: string;
}

/**
 * metadata of a repository.
 */
export interface RepositoryResponse {
    /**
     * Branch name of repository.
     */
    branch?: string;
    /**
     * Url to access repository action logs.
     */
    deploymentLogsUrl?: string;
    /**
     * Display url of repository.
     */
    displayUrl?: string;
    /**
     * Dictionary of source control content type and path mapping.
     */
    pathMapping?: outputs.securityinsights.ContentPathMapResponse[];
    /**
     * Url of repository.
     */
    url?: string;
}

/**
 * Represents security alert timeline item.
 */
export interface SecurityAlertTimelineItemResponse {
    /**
     * The name of the alert type.
     */
    alertType: string;
    /**
     * The alert azure resource id.
     */
    azureResourceId: string;
    /**
     * The alert description.
     */
    description?: string;
    /**
     * The alert name.
     */
    displayName: string;
    /**
     * The alert end time.
     */
    endTimeUtc: string;
    /**
     * The entity query kind
     * Expected value is 'SecurityAlert'.
     */
    kind: "SecurityAlert";
    /**
     * The alert product name.
     */
    productName?: string;
    /**
     * The alert severity.
     */
    severity: string;
    /**
     * The alert start time.
     */
    startTimeUtc: string;
    /**
     * The alert generated time.
     */
    timeGenerated: string;
}

/**
 * security ml analytics settings data sources
 */
export interface SecurityMLAnalyticsSettingsDataSourceResponse {
    /**
     * The connector id that provides the following data types
     */
    connectorId?: string;
    /**
     * The data types used by the security ml analytics settings
     */
    dataTypes?: string[];
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC).
     */
    createdAt?: string;
    /**
     * The identity that created the resource.
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource.
     */
    createdByType?: string;
    /**
     * The timestamp of resource last modification (UTC)
     */
    lastModifiedAt?: string;
    /**
     * The identity that last modified the resource.
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedByType?: string;
}

/**
 * The available data types for TI (Threat Intelligence) data connector.
 */
export interface TIDataConnectorDataTypesResponse {
    /**
     * Data type for indicators connection.
     */
    indicators?: outputs.securityinsights.TIDataConnectorDataTypesResponseIndicators;
}

/**
 * Data type for indicators connection.
 */
export interface TIDataConnectorDataTypesResponseIndicators {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * timeline aggregation information per kind
 */
export interface TimelineAggregationResponse {
    /**
     * the total items found for a kind
     */
    count: number;
    /**
     * the query kind
     */
    kind: string;
}

/**
 * Timeline Query Errors.
 */
export interface TimelineErrorResponse {
    /**
     * the error message
     */
    errorMessage: string;
    /**
     * the query kind
     */
    kind: string;
    /**
     * the query id
     */
    queryId?: string;
}

/**
 * Expansion result metadata.
 */
export interface TimelineResultsMetadataResponse {
    /**
     * timeline aggregation per kind
     */
    aggregations: outputs.securityinsights.TimelineAggregationResponse[];
    /**
     * information about the failure queries
     */
    errors?: outputs.securityinsights.TimelineErrorResponse[];
    /**
     * the total items found for the timeline request
     */
    totalCount: number;
}

/**
 * User information that made some action
 */
export interface UserInfoResponse {
    /**
     * The email of the user.
     */
    email: string;
    /**
     * The name of the user.
     */
    name: string;
    /**
     * The object id of the user.
     */
    objectId?: string;
}

/**
 * User information that made some action
 */
export interface WatchlistUserInfoResponse {
    /**
     * The email of the user.
     */
    email: string;
    /**
     * The name of the user.
     */
    name: string;
    /**
     * The object id of the user.
     */
    objectId?: string;
}

