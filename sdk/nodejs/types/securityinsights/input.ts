// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20190101preview from "./v20190101preview/input";
export * as v20200101 from "./v20200101/input";
export * as v20210301preview from "./v20210301preview/input";
export * as v20210401 from "./v20210401/input";
export * as v20210901preview from "./v20210901preview/input";
export * as v20211001 from "./v20211001/input";
export * as v20211001preview from "./v20211001preview/input";
export * as v20220101preview from "./v20220101preview/input";
export * as v20220401preview from "./v20220401preview/input";
export * as v20220501preview from "./v20220501preview/input";
export * as v20220601preview from "./v20220601preview/input";
export * as v20220701preview from "./v20220701preview/input";
export * as v20220801 from "./v20220801/input";
export * as v20220801preview from "./v20220801preview/input";
export * as v20220901preview from "./v20220901preview/input";
export * as v20221001preview from "./v20221001preview/input";
export * as v20221101 from "./v20221101/input";
export * as v20221101preview from "./v20221101preview/input";
/**
 * The Activity query definitions
 */
export interface ActivityEntityQueriesPropertiesQueryDefinitionsArgs {
    /**
     * The Activity query to run on a given entity
     */
    query?: pulumi.Input<string>;
}

/**
 * Alerts data type for data connectors.
 */
export interface AlertsDataTypeOfDataConnectorArgs {
    /**
     * Alerts data type connection.
     */
    alerts?: pulumi.Input<inputs.securityinsights.DataConnectorDataTypeCommonArgs>;
}

/**
 * Describes an automation rule action to modify an object's properties
 */
export interface AutomationRuleModifyPropertiesActionArgs {
    /**
     * The configuration of the modify properties automation rule action
     */
    actionConfiguration: pulumi.Input<inputs.securityinsights.AutomationRuleModifyPropertiesActionActionConfigurationArgs>;
    /**
     * The type of the automation rule action
     * Expected value is 'ModifyProperties'.
     */
    actionType: pulumi.Input<"ModifyProperties">;
    /**
     * The order of execution of the automation rule action
     */
    order: pulumi.Input<number>;
}

/**
 * The configuration of the modify properties automation rule action
 */
export interface AutomationRuleModifyPropertiesActionActionConfigurationArgs {
    /**
     * The reason the incident was closed
     */
    classification?: pulumi.Input<string | enums.securityinsights.IncidentClassification>;
    /**
     * Describes the reason the incident was closed
     */
    classificationComment?: pulumi.Input<string>;
    /**
     * The classification reason to close the incident with
     */
    classificationReason?: pulumi.Input<string | enums.securityinsights.IncidentClassificationReason>;
    /**
     * List of labels to add to the incident
     */
    labels?: pulumi.Input<pulumi.Input<inputs.securityinsights.IncidentLabelArgs>[]>;
    /**
     * Describes a user that the incident is assigned to
     */
    owner?: pulumi.Input<inputs.securityinsights.IncidentOwnerInfoArgs>;
    /**
     * The severity of the incident
     */
    severity?: pulumi.Input<string | enums.securityinsights.IncidentSeverity>;
    /**
     * The status of the incident
     */
    status?: pulumi.Input<string | enums.securityinsights.IncidentStatus>;
}

/**
 * Describes an automation rule condition that evaluates a property's value
 */
export interface AutomationRulePropertyValuesConditionArgs {
    /**
     * The configuration of the automation rule condition
     */
    conditionProperties: pulumi.Input<inputs.securityinsights.AutomationRulePropertyValuesConditionConditionPropertiesArgs>;
    /**
     * The type of the automation rule condition
     * Expected value is 'Property'.
     */
    conditionType: pulumi.Input<"Property">;
}

/**
 * The configuration of the automation rule condition
 */
export interface AutomationRulePropertyValuesConditionConditionPropertiesArgs {
    /**
     * The operator to use for evaluation the condition
     */
    operator?: pulumi.Input<string | enums.securityinsights.AutomationRulePropertyConditionSupportedOperator>;
    /**
     * The property to evaluate
     */
    propertyName?: pulumi.Input<string | enums.securityinsights.AutomationRulePropertyConditionSupportedProperty>;
    /**
     * The values to use for evaluating the condition
     */
    propertyValues?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Describes an automation rule action to run a playbook
 */
export interface AutomationRuleRunPlaybookActionArgs {
    /**
     * The configuration of the run playbook automation rule action
     */
    actionConfiguration: pulumi.Input<inputs.securityinsights.AutomationRuleRunPlaybookActionActionConfigurationArgs>;
    /**
     * The type of the automation rule action
     * Expected value is 'RunPlaybook'.
     */
    actionType: pulumi.Input<"RunPlaybook">;
    /**
     * The order of execution of the automation rule action
     */
    order: pulumi.Input<number>;
}

/**
 * The configuration of the run playbook automation rule action
 */
export interface AutomationRuleRunPlaybookActionActionConfigurationArgs {
    /**
     * The resource id of the playbook resource
     */
    logicAppResourceId?: pulumi.Input<string>;
    /**
     * The tenant id of the playbook resource
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * Describes automation rule triggering logic
 */
export interface AutomationRuleTriggeringLogicArgs {
    /**
     * The conditions to evaluate to determine if the automation rule should be triggered on a given object
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.securityinsights.AutomationRulePropertyValuesConditionArgs>[]>;
    /**
     * Determines when the automation rule should automatically expire and be disabled.
     */
    expirationTimeUtc?: pulumi.Input<string>;
    /**
     * Determines whether the automation rule is enabled or disabled.
     */
    isEnabled: pulumi.Input<boolean>;
    /**
     * The type of object the automation rule triggers on
     */
    triggersOn: pulumi.Input<string | enums.securityinsights.TriggersOn>;
    /**
     * The type of event the automation rule triggers on
     */
    triggersWhen: pulumi.Input<string | enums.securityinsights.TriggersWhen>;
}

/**
 * The available data types for Amazon Web Services CloudTrail data connector.
 */
export interface AwsCloudTrailDataConnectorDataTypesArgs {
    /**
     * Logs data type.
     */
    logs?: pulumi.Input<inputs.securityinsights.AwsCloudTrailDataConnectorDataTypesLogsArgs>;
}

/**
 * Logs data type.
 */
export interface AwsCloudTrailDataConnectorDataTypesLogsArgs {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: pulumi.Input<string | enums.securityinsights.DataTypeState>;
}

/**
 * The mapping of content type to a repo path.
 */
export interface ContentPathMapArgs {
    /**
     * Content type.
     */
    contentType?: pulumi.Input<string | enums.securityinsights.ContentType>;
    /**
     * The path to the content.
     */
    path?: pulumi.Input<string>;
}

/**
 * Common field for data type in data connectors.
 */
export interface DataConnectorDataTypeCommonArgs {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: pulumi.Input<string | enums.securityinsights.DataTypeState>;
}

/**
 * Describes related incident information for the bookmark
 */
export interface IncidentInfoArgs {
    /**
     * Incident Id
     */
    incidentId?: pulumi.Input<string>;
    /**
     * Relation Name
     */
    relationName?: pulumi.Input<string>;
    /**
     * The severity of the incident
     */
    severity?: pulumi.Input<string | enums.securityinsights.IncidentSeverity>;
    /**
     * The title of the incident
     */
    title?: pulumi.Input<string>;
}

/**
 * Represents an incident label
 */
export interface IncidentLabelArgs {
    /**
     * The name of the label
     */
    labelName: pulumi.Input<string>;
}

/**
 * Information on the user an incident is assigned to
 */
export interface IncidentOwnerInfoArgs {
    /**
     * The name of the user the incident is assigned to.
     */
    assignedTo?: pulumi.Input<string>;
    /**
     * The email of the user the incident is assigned to.
     */
    email?: pulumi.Input<string>;
    /**
     * The object id of the user the incident is assigned to.
     */
    objectId?: pulumi.Input<string>;
    /**
     * The user principal name of the user the incident is assigned to.
     */
    userPrincipalName?: pulumi.Input<string>;
}

/**
 * The available data types for MCAS (Microsoft Cloud App Security) data connector.
 */
export interface MCASDataConnectorDataTypesArgs {
    /**
     * Alerts data type connection.
     */
    alerts?: pulumi.Input<inputs.securityinsights.DataConnectorDataTypeCommonArgs>;
    /**
     * Discovery log data type connection.
     */
    discoveryLogs?: pulumi.Input<inputs.securityinsights.DataConnectorDataTypeCommonArgs>;
}

/**
 * Publisher or creator of the content item.
 */
export interface MetadataAuthorArgs {
    /**
     * Email of author contact
     */
    email?: pulumi.Input<string>;
    /**
     * Link for author/vendor page
     */
    link?: pulumi.Input<string>;
    /**
     * Name of the author. Company or person.
     */
    name?: pulumi.Input<string>;
}

/**
 * ies for the solution content item
 */
export interface MetadataCategoriesArgs {
    /**
     * domain for the solution content item
     */
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Industry verticals for the solution content item
     */
    verticals?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
 */
export interface MetadataDependenciesArgs {
    /**
     * Id of the content item we depend on
     */
    contentId?: pulumi.Input<string>;
    /**
     * This is the list of dependencies we must fulfill, according to the AND/OR operator
     */
    criteria?: pulumi.Input<pulumi.Input<inputs.securityinsights.MetadataDependenciesArgs>[]>;
    /**
     * Type of the content item we depend on
     */
    kind?: pulumi.Input<string | enums.securityinsights.Kind>;
    /**
     * Name of the content item
     */
    name?: pulumi.Input<string>;
    /**
     * Operator used for list of dependencies in criteria array.
     */
    operator?: pulumi.Input<string | enums.securityinsights.Operator>;
    /**
     * Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
     */
    version?: pulumi.Input<string>;
}

/**
 * The original source of the content item, where it comes from.
 */
export interface MetadataSourceArgs {
    /**
     * Source type of the content
     */
    kind: pulumi.Input<string | enums.securityinsights.SourceKind>;
    /**
     * Name of the content source.  The repo name, solution name, LA workspace name etc.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the content source.  The solution ID, workspace ID, etc
     */
    sourceId?: pulumi.Input<string>;
}

/**
 * Support information for the content item.
 */
export interface MetadataSupportArgs {
    /**
     * Email of support contact
     */
    email?: pulumi.Input<string>;
    /**
     * Link for support help, like to support page to open a ticket etc.
     */
    link?: pulumi.Input<string>;
    /**
     * Name of the support contact. Company or person.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of support for content item
     */
    tier: pulumi.Input<string | enums.securityinsights.SupportTier>;
}

/**
 * The available data types for office data connector.
 */
export interface OfficeDataConnectorDataTypesArgs {
    /**
     * Exchange data type connection.
     */
    exchange?: pulumi.Input<inputs.securityinsights.OfficeDataConnectorDataTypesExchangeArgs>;
    /**
     * SharePoint data type connection.
     */
    sharePoint?: pulumi.Input<inputs.securityinsights.OfficeDataConnectorDataTypesSharePointArgs>;
    /**
     * Teams data type connection.
     */
    teams?: pulumi.Input<inputs.securityinsights.OfficeDataConnectorDataTypesTeamsArgs>;
}

/**
 * Exchange data type connection.
 */
export interface OfficeDataConnectorDataTypesExchangeArgs {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: pulumi.Input<string | enums.securityinsights.DataTypeState>;
}

/**
 * SharePoint data type connection.
 */
export interface OfficeDataConnectorDataTypesSharePointArgs {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: pulumi.Input<string | enums.securityinsights.DataTypeState>;
}

/**
 * Teams data type connection.
 */
export interface OfficeDataConnectorDataTypesTeamsArgs {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: pulumi.Input<string | enums.securityinsights.DataTypeState>;
}

/**
 * metadata of a repository.
 */
export interface RepositoryArgs {
    /**
     * Branch name of repository.
     */
    branch?: pulumi.Input<string>;
    /**
     * Url to access repository action logs.
     */
    deploymentLogsUrl?: pulumi.Input<string>;
    /**
     * Display url of repository.
     */
    displayUrl?: pulumi.Input<string>;
    /**
     * Dictionary of source control content type and path mapping.
     */
    pathMapping?: pulumi.Input<pulumi.Input<inputs.securityinsights.ContentPathMapArgs>[]>;
    /**
     * Url of repository.
     */
    url?: pulumi.Input<string>;
}

/**
 * security ml analytics settings data sources
 */
export interface SecurityMLAnalyticsSettingsDataSourceArgs {
    /**
     * The connector id that provides the following data types
     */
    connectorId?: pulumi.Input<string>;
    /**
     * The data types used by the security ml analytics settings
     */
    dataTypes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The available data types for TI (Threat Intelligence) data connector.
 */
export interface TIDataConnectorDataTypesArgs {
    /**
     * Data type for indicators connection.
     */
    indicators?: pulumi.Input<inputs.securityinsights.TIDataConnectorDataTypesIndicatorsArgs>;
}

/**
 * Data type for indicators connection.
 */
export interface TIDataConnectorDataTypesIndicatorsArgs {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: pulumi.Input<string | enums.securityinsights.DataTypeState>;
}

/**
 * Describes external reference
 */
export interface ThreatIntelligenceExternalReferenceArgs {
    /**
     * External reference description
     */
    description?: pulumi.Input<string>;
    /**
     * External reference ID
     */
    externalId?: pulumi.Input<string>;
    /**
     * External reference hashes
     */
    hashes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * External reference source name
     */
    sourceName?: pulumi.Input<string>;
    /**
     * External reference URL
     */
    url?: pulumi.Input<string>;
}

/**
 * Describes threat granular marking model entity
 */
export interface ThreatIntelligenceGranularMarkingModelArgs {
    /**
     * Language granular marking model
     */
    language?: pulumi.Input<string>;
    /**
     * marking reference granular marking model
     */
    markingRef?: pulumi.Input<number>;
    /**
     * granular marking model selectors
     */
    selectors?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Describes threat kill chain phase entity
 */
export interface ThreatIntelligenceKillChainPhaseArgs {
    /**
     * Kill chainName name
     */
    killChainName?: pulumi.Input<string>;
    /**
     * Phase name
     */
    phaseName?: pulumi.Input<string>;
}

/**
 * Describes parsed pattern entity
 */
export interface ThreatIntelligenceParsedPatternArgs {
    /**
     * Pattern type key
     */
    patternTypeKey?: pulumi.Input<string>;
    /**
     * Pattern type keys
     */
    patternTypeValues?: pulumi.Input<pulumi.Input<inputs.securityinsights.ThreatIntelligenceParsedPatternTypeValueArgs>[]>;
}

/**
 * Describes threat kill chain phase entity
 */
export interface ThreatIntelligenceParsedPatternTypeValueArgs {
    /**
     * Value of parsed pattern
     */
    value?: pulumi.Input<string>;
    /**
     * Type of the value
     */
    valueType?: pulumi.Input<string>;
}

/**
 * User information that made some action
 */
export interface UserInfoArgs {
    /**
     * The object id of the user.
     */
    objectId: pulumi.Input<string>;
}

/**
 * User information that made some action
 */
export interface WatchlistUserInfoArgs {
    /**
     * The object id of the user.
     */
    objectId?: pulumi.Input<string>;
}

