// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Settings for how to dynamically override alert static details
 */
export interface AlertDetailsOverrideResponse {
    /**
     * the format containing columns name(s) to override the alert description
     */
    alertDescriptionFormat?: string;
    /**
     * the format containing columns name(s) to override the alert name
     */
    alertDisplayNameFormat?: string;
    /**
     * the column name to take the alert severity from
     */
    alertSeverityColumnName?: string;
    /**
     * the column name to take the alert tactics from
     */
    alertTacticsColumnName?: string;
}

/**
 * Alerts data type for data connectors.
 */
export interface AlertsDataTypeOfDataConnectorResponse {
    /**
     * Alerts data type connection.
     */
    alerts?: outputs.securityinsights.v20220801.DataConnectorDataTypeCommonResponse;
}

/**
 * Describes an automation rule action to modify an object's properties.
 */
export interface AutomationRuleModifyPropertiesActionResponse {
    actionConfiguration?: outputs.securityinsights.v20220801.IncidentPropertiesActionResponse;
    /**
     * The type of the automation rule action
     * Expected value is 'ModifyProperties'.
     */
    actionType: "ModifyProperties";
    order: number;
}

export interface AutomationRulePropertyValuesConditionResponse {
    operator?: string;
    /**
     * The property to evaluate in an automation rule property condition
     */
    propertyName?: string;
    propertyValues?: string[];
}

/**
 * Describes an automation rule action to run a playbook
 */
export interface AutomationRuleRunPlaybookActionResponse {
    actionConfiguration?: outputs.securityinsights.v20220801.PlaybookActionPropertiesResponse;
    /**
     * The type of the automation rule action
     * Expected value is 'RunPlaybook'.
     */
    actionType: "RunPlaybook";
    order: number;
}

/**
 * Describes automation rule triggering logic
 */
export interface AutomationRuleTriggeringLogicResponse {
    /**
     * The conditions to evaluate to determine if the automation rule should be triggered on a given object
     */
    conditions?: outputs.securityinsights.v20220801.PropertyConditionPropertiesResponse[];
    /**
     * Determines when the automation rule should automatically expire and be disabled.
     */
    expirationTimeUtc?: string;
    /**
     * Determines whether the automation rule is enabled or disabled
     */
    isEnabled: boolean;
    triggersOn: string;
    triggersWhen: string;
}

/**
 * The available data types for Amazon Web Services CloudTrail data connector.
 */
export interface AwsCloudTrailDataConnectorDataTypesResponse {
    /**
     * Logs data type.
     */
    logs?: outputs.securityinsights.v20220801.AwsCloudTrailDataConnectorDataTypesResponseLogs;
}

/**
 * Logs data type.
 */
export interface AwsCloudTrailDataConnectorDataTypesResponseLogs {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * Information on the client (user or application) that made some action
 */
export interface ClientInfoResponse {
    /**
     * The email of the client.
     */
    email?: string;
    /**
     * The name of the client.
     */
    name?: string;
    /**
     * The object id of the client.
     */
    objectId?: string;
    /**
     * The user principal name of the client.
     */
    userPrincipalName?: string;
}

/**
 * Common field for data type in data connectors.
 */
export interface DataConnectorDataTypeCommonResponse {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * Single entity mapping for the alert rule
 */
export interface EntityMappingResponse {
    /**
     * The V3 type of the mapped entity
     */
    entityType?: string;
    /**
     * array of field mappings for the given entity mapping
     */
    fieldMappings?: outputs.securityinsights.v20220801.FieldMappingResponse[];
}

/**
 * Event grouping settings property bag.
 */
export interface EventGroupingSettingsResponse {
    /**
     * The event grouping aggregation kinds
     */
    aggregationKind?: string;
}

/**
 * A single field mapping of the mapped entity
 */
export interface FieldMappingResponse {
    /**
     * the column name to be mapped to the identifier
     */
    columnName?: string;
    /**
     * the V3 identifier of the entity
     */
    identifier?: string;
}

/**
 * Grouping configuration property bag.
 */
export interface GroupingConfigurationResponse {
    /**
     * Grouping enabled
     */
    enabled: boolean;
    /**
     * A list of alert details to group by (when matchingMethod is Selected)
     */
    groupByAlertDetails?: string[];
    /**
     * A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
     */
    groupByCustomDetails?: string[];
    /**
     * A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
     */
    groupByEntities?: string[];
    /**
     * Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
     */
    lookbackDuration: string;
    /**
     * Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
     */
    matchingMethod: string;
    /**
     * Re-open closed matching incidents
     */
    reopenClosedIncident: boolean;
}

/**
 * Incident additional data property bag.
 */
export interface IncidentAdditionalDataResponse {
    /**
     * List of product names of alerts in the incident
     */
    alertProductNames: string[];
    /**
     * The number of alerts in the incident
     */
    alertsCount: number;
    /**
     * The number of bookmarks in the incident
     */
    bookmarksCount: number;
    /**
     * The number of comments in the incident
     */
    commentsCount: number;
    /**
     * The tactics associated with incident
     */
    tactics: string[];
}

/**
 * Incident Configuration property bag.
 */
export interface IncidentConfigurationResponse {
    /**
     * Create incidents from alerts triggered by this analytics rule
     */
    createIncident: boolean;
    /**
     * Set how the alerts that are triggered by this analytics rule, are grouped into incidents
     */
    groupingConfiguration?: outputs.securityinsights.v20220801.GroupingConfigurationResponse;
}

/**
 * Describes related incident information for the bookmark
 */
export interface IncidentInfoResponse {
    /**
     * Incident Id
     */
    incidentId?: string;
    /**
     * Relation Name
     */
    relationName?: string;
    /**
     * The severity of the incident
     */
    severity?: string;
    /**
     * The title of the incident
     */
    title?: string;
}

/**
 * Represents an incident label
 */
export interface IncidentLabelResponse {
    /**
     * The name of the label
     */
    labelName: string;
    /**
     * The type of the label
     */
    labelType: string;
}

/**
 * Information on the user an incident is assigned to
 */
export interface IncidentOwnerInfoResponse {
    /**
     * The name of the user the incident is assigned to.
     */
    assignedTo?: string;
    /**
     * The email of the user the incident is assigned to.
     */
    email?: string;
    /**
     * The object id of the user the incident is assigned to.
     */
    objectId?: string;
    /**
     * The type of the owner the incident is assigned to.
     */
    ownerType?: string;
    /**
     * The user principal name of the user the incident is assigned to.
     */
    userPrincipalName?: string;
}

export interface IncidentPropertiesActionResponse {
    /**
     * The reason the incident was closed
     */
    classification?: string;
    /**
     * Describes the reason the incident was closed
     */
    classificationComment?: string;
    /**
     * The classification reason the incident was closed with
     */
    classificationReason?: string;
    /**
     * List of labels to add to the incident
     */
    labels?: outputs.securityinsights.v20220801.IncidentLabelResponse[];
    /**
     * Information on the user an incident is assigned to
     */
    owner?: outputs.securityinsights.v20220801.IncidentOwnerInfoResponse;
    /**
     * The severity of the incident
     */
    severity?: string;
    /**
     * The status of the incident
     */
    status?: string;
}

/**
 * The available data types for MCAS (Microsoft Cloud App Security) data connector.
 */
export interface MCASDataConnectorDataTypesResponse {
    /**
     * Alerts data type connection.
     */
    alerts?: outputs.securityinsights.v20220801.DataConnectorDataTypeCommonResponse;
    /**
     * Discovery log data type connection.
     */
    discoveryLogs?: outputs.securityinsights.v20220801.DataConnectorDataTypeCommonResponse;
}

/**
 * The available data types for office data connector.
 */
export interface OfficeDataConnectorDataTypesResponse {
    /**
     * Exchange data type connection.
     */
    exchange?: outputs.securityinsights.v20220801.OfficeDataConnectorDataTypesResponseExchange;
    /**
     * SharePoint data type connection.
     */
    sharePoint?: outputs.securityinsights.v20220801.OfficeDataConnectorDataTypesResponseSharePoint;
    /**
     * Teams data type connection.
     */
    teams?: outputs.securityinsights.v20220801.OfficeDataConnectorDataTypesResponseTeams;
}

/**
 * Exchange data type connection.
 */
export interface OfficeDataConnectorDataTypesResponseExchange {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * SharePoint data type connection.
 */
export interface OfficeDataConnectorDataTypesResponseSharePoint {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * Teams data type connection.
 */
export interface OfficeDataConnectorDataTypesResponseTeams {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

export interface PlaybookActionPropertiesResponse {
    /**
     * The resource id of the playbook resource
     */
    logicAppResourceId: string;
    /**
     * The tenant id of the playbook resource
     */
    tenantId?: string;
}

/**
 * Describes an automation rule condition that evaluates a property's value
 */
export interface PropertyConditionPropertiesResponse {
    conditionProperties?: outputs.securityinsights.v20220801.AutomationRulePropertyValuesConditionResponse;
    /**
     *
     * Expected value is 'Property'.
     */
    conditionType: "Property";
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC).
     */
    createdAt?: string;
    /**
     * The identity that created the resource.
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource.
     */
    createdByType?: string;
    /**
     * The timestamp of resource last modification (UTC)
     */
    lastModifiedAt?: string;
    /**
     * The identity that last modified the resource.
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedByType?: string;
}

/**
 * The available data types for TI (Threat Intelligence) data connector.
 */
export interface TIDataConnectorDataTypesResponse {
    /**
     * Data type for indicators connection.
     */
    indicators?: outputs.securityinsights.v20220801.TIDataConnectorDataTypesResponseIndicators;
}

/**
 * Data type for indicators connection.
 */
export interface TIDataConnectorDataTypesResponseIndicators {
    /**
     * Describe whether this data type connection is enabled or not.
     */
    state?: string;
}

/**
 * User information that made some action
 */
export interface UserInfoResponse {
    /**
     * The email of the user.
     */
    email: string;
    /**
     * The name of the user.
     */
    name: string;
    /**
     * The object id of the user.
     */
    objectId?: string;
}

/**
 * User information that made some action
 */
export interface WatchlistUserInfoResponse {
    /**
     * The email of the user.
     */
    email: string;
    /**
     * The name of the user.
     */
    name: string;
    /**
     * The object id of the user.
     */
    objectId?: string;
}

