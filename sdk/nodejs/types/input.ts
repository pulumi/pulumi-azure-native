// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export namespace aad {
    /**
     * Domain Security Settings
     */
    export interface DomainSecuritySettings {
        /**
         * A flag to determine whether or not NtlmV1 is enabled or disabled.
         */
        ntlmV1?: pulumi.Input<string>;
        /**
         * A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
         */
        syncNtlmPasswords?: pulumi.Input<string>;
        /**
         * A flag to determine whether or not TlsV1 is enabled or disabled.
         */
        tlsV1?: pulumi.Input<string>;
    }

    /**
     * Domain Security Settings
     */
    export interface DomainSecuritySettingsResponse {
        /**
         * A flag to determine whether or not NtlmV1 is enabled or disabled.
         */
        ntlmV1?: pulumi.Input<string>;
        /**
         * A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
         */
        syncNtlmPasswords?: pulumi.Input<string>;
        /**
         * A flag to determine whether or not TlsV1 is enabled or disabled.
         */
        tlsV1?: pulumi.Input<string>;
    }

    /**
     * Properties of the Domain Service.
     */
    export interface DomainServiceProperties {
        /**
         * The name of the Azure domain that the user would like to deploy Domain Services to.
         */
        domainName?: pulumi.Input<string>;
        /**
         * DomainSecurity Settings
         */
        domainSecuritySettings?: pulumi.Input<inputs.aad.DomainSecuritySettings>;
        /**
         * Enabled or Disabled flag to turn on Group-based filtered sync
         */
        filteredSync?: pulumi.Input<string>;
        /**
         * Secure LDAP Settings
         */
        ldapsSettings?: pulumi.Input<inputs.aad.LdapsSettings>;
        /**
         * Notification Settings
         */
        notificationSettings?: pulumi.Input<inputs.aad.NotificationSettings>;
        /**
         * List of ReplicaSets
         */
        replicaSets?: pulumi.Input<pulumi.Input<inputs.aad.ReplicaSet>[]>;
    }

    /**
     * Properties of the Domain Service.
     */
    export interface DomainServicePropertiesResponse {
        /**
         * Deployment Id
         */
        deploymentId: pulumi.Input<string>;
        /**
         * The name of the Azure domain that the user would like to deploy Domain Services to.
         */
        domainName?: pulumi.Input<string>;
        /**
         * DomainSecurity Settings
         */
        domainSecuritySettings?: pulumi.Input<inputs.aad.DomainSecuritySettingsResponse>;
        /**
         * Enabled or Disabled flag to turn on Group-based filtered sync
         */
        filteredSync?: pulumi.Input<string>;
        /**
         * Secure LDAP Settings
         */
        ldapsSettings?: pulumi.Input<inputs.aad.LdapsSettingsResponse>;
        /**
         * Notification Settings
         */
        notificationSettings?: pulumi.Input<inputs.aad.NotificationSettingsResponse>;
        /**
         * the current deployment or provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * List of ReplicaSets
         */
        replicaSets?: pulumi.Input<pulumi.Input<inputs.aad.ReplicaSetResponse>[]>;
        /**
         * SyncOwner ReplicaSet Id
         */
        syncOwner: pulumi.Input<string>;
        /**
         * Azure Active Directory Tenant Id
         */
        tenantId: pulumi.Input<string>;
        /**
         * Data Model Version
         */
        version: pulumi.Input<number>;
    }

    /**
     * Health Alert Description
     */
    export interface HealthAlertResponse {
        /**
         * Health Alert Id
         */
        id: pulumi.Input<string>;
        /**
         * Health Alert Issue
         */
        issue: pulumi.Input<string>;
        /**
         * Health Alert Last Detected DateTime
         */
        lastDetected: pulumi.Input<string>;
        /**
         * Health Alert Name
         */
        name: pulumi.Input<string>;
        /**
         * Health Alert Raised DateTime
         */
        raised: pulumi.Input<string>;
        /**
         * Health Alert TSG Link
         */
        resolutionUri: pulumi.Input<string>;
        /**
         * Health Alert Severity
         */
        severity: pulumi.Input<string>;
    }

    /**
     * Health Monitor Description
     */
    export interface HealthMonitorResponse {
        /**
         * Health Monitor Details
         */
        details: pulumi.Input<string>;
        /**
         * Health Monitor Id
         */
        id: pulumi.Input<string>;
        /**
         * Health Monitor Name
         */
        name: pulumi.Input<string>;
    }

    /**
     * Secure LDAP Settings
     */
    export interface LdapsSettings {
        /**
         * A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
         */
        externalAccess?: pulumi.Input<string>;
        /**
         * A flag to determine whether or not Secure LDAP is enabled or disabled.
         */
        ldaps?: pulumi.Input<string>;
        /**
         * The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
         */
        pfxCertificate?: pulumi.Input<string>;
        /**
         * The password to decrypt the provided Secure LDAP certificate pfx file.
         */
        pfxCertificatePassword?: pulumi.Input<string>;
    }

    /**
     * Secure LDAP Settings
     */
    export interface LdapsSettingsResponse {
        /**
         * NotAfter DateTime of configure ldaps certificate.
         */
        certificateNotAfter: pulumi.Input<string>;
        /**
         * Thumbprint of configure ldaps certificate.
         */
        certificateThumbprint: pulumi.Input<string>;
        /**
         * A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
         */
        externalAccess?: pulumi.Input<string>;
        /**
         * A flag to determine whether or not Secure LDAP is enabled or disabled.
         */
        ldaps?: pulumi.Input<string>;
        /**
         * The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
         */
        pfxCertificate?: pulumi.Input<string>;
        /**
         * The password to decrypt the provided Secure LDAP certificate pfx file.
         */
        pfxCertificatePassword?: pulumi.Input<string>;
        /**
         * Public certificate used to configure secure ldap.
         */
        publicCertificate: pulumi.Input<string>;
    }

    /**
     * Settings for notification
     */
    export interface NotificationSettings {
        /**
         * The list of additional recipients
         */
        additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Should domain controller admins be notified
         */
        notifyDcAdmins?: pulumi.Input<string>;
        /**
         * Should global admins be notified
         */
        notifyGlobalAdmins?: pulumi.Input<string>;
    }

    /**
     * Settings for notification
     */
    export interface NotificationSettingsResponse {
        /**
         * The list of additional recipients
         */
        additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Should domain controller admins be notified
         */
        notifyDcAdmins?: pulumi.Input<string>;
        /**
         * Should global admins be notified
         */
        notifyGlobalAdmins?: pulumi.Input<string>;
    }

    /**
     * Replica Set Definition
     */
    export interface ReplicaSet {
        /**
         * Virtual network location
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
         */
        subnetId?: pulumi.Input<string>;
    }

    /**
     * Replica Set Definition
     */
    export interface ReplicaSetResponse {
        /**
         * List of Domain Controller IP Address
         */
        domainControllerIpAddress: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * External access ip address.
         */
        externalAccessIpAddress: pulumi.Input<string>;
        /**
         * List of Domain Health Alerts
         */
        healthAlerts: pulumi.Input<pulumi.Input<inputs.aad.HealthAlertResponse>[]>;
        /**
         * Last domain evaluation run DateTime
         */
        healthLastEvaluated: pulumi.Input<string>;
        /**
         * List of Domain Health Monitors
         */
        healthMonitors: pulumi.Input<pulumi.Input<inputs.aad.HealthMonitorResponse>[]>;
        /**
         * Virtual network location
         */
        location?: pulumi.Input<string>;
        /**
         * ReplicaSet Id
         */
        replicaSetId: pulumi.Input<string>;
        /**
         * Status of Domain Service instance
         */
        serviceStatus: pulumi.Input<string>;
        /**
         * The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Virtual network site id
         */
        vnetSiteId: pulumi.Input<string>;
    }
}

export namespace analysisservices {
    /**
     * Properties of Analysis Services resource.
     */
    export interface AnalysisServicesServerProperties {
        /**
         * A collection of AS server administrators
         */
        asAdministrators?: pulumi.Input<inputs.analysisservices.ServerAdministrators>;
        /**
         * The SAS container URI to the backup container.
         */
        backupBlobContainerUri?: pulumi.Input<string>;
        /**
         * The gateway details configured for the AS server.
         */
        gatewayDetails?: pulumi.Input<inputs.analysisservices.GatewayDetails>;
        /**
         * The firewall settings for the AS server.
         */
        ipV4FirewallSettings?: pulumi.Input<inputs.analysisservices.IPv4FirewallSettings>;
        /**
         * How the read-write server's participation in the query pool is controlled.<br/>It can have the following values: <ul><li>readOnly - indicates that the read-write server is intended not to participate in query operations</li><li>all - indicates that the read-write server can participate in query operations</li></ul>Specifying readOnly when capacity is 1 results in error.
         */
        querypoolConnectionMode?: pulumi.Input<string>;
    }

    /**
     * Properties of Analysis Services resource.
     */
    export interface AnalysisServicesServerPropertiesResponse {
        /**
         * A collection of AS server administrators
         */
        asAdministrators?: pulumi.Input<inputs.analysisservices.ServerAdministratorsResponse>;
        /**
         * The SAS container URI to the backup container.
         */
        backupBlobContainerUri?: pulumi.Input<string>;
        /**
         * The gateway details configured for the AS server.
         */
        gatewayDetails?: pulumi.Input<inputs.analysisservices.GatewayDetailsResponse>;
        /**
         * The firewall settings for the AS server.
         */
        ipV4FirewallSettings?: pulumi.Input<inputs.analysisservices.IPv4FirewallSettingsResponse>;
        /**
         * The current deployment state of Analysis Services resource. The provisioningState is to indicate states for resource provisioning.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * How the read-write server's participation in the query pool is controlled.<br/>It can have the following values: <ul><li>readOnly - indicates that the read-write server is intended not to participate in query operations</li><li>all - indicates that the read-write server can participate in query operations</li></ul>Specifying readOnly when capacity is 1 results in error.
         */
        querypoolConnectionMode?: pulumi.Input<string>;
        /**
         * The full name of the Analysis Services resource.
         */
        serverFullName: pulumi.Input<string>;
        /**
         * The current state of Analysis Services resource. The state is to indicate more states outside of resource provisioning.
         */
        state: pulumi.Input<string>;
    }

    /**
     * The gateway details.
     */
    export interface GatewayDetails {
        /**
         * Gateway resource to be associated with the server.
         */
        gatewayResourceId?: pulumi.Input<string>;
    }

    /**
     * The gateway details.
     */
    export interface GatewayDetailsResponse {
        /**
         * Uri of the DMTS cluster.
         */
        dmtsClusterUri: pulumi.Input<string>;
        /**
         * Gateway object id from in the DMTS cluster for the gateway resource.
         */
        gatewayObjectId: pulumi.Input<string>;
        /**
         * Gateway resource to be associated with the server.
         */
        gatewayResourceId?: pulumi.Input<string>;
    }

    /**
     * The detail of firewall rule.
     */
    export interface IPv4FirewallRule {
        /**
         * The rule name.
         */
        firewallRuleName?: pulumi.Input<string>;
        /**
         * The end range of IPv4.
         */
        rangeEnd?: pulumi.Input<string>;
        /**
         * The start range of IPv4.
         */
        rangeStart?: pulumi.Input<string>;
    }

    /**
     * The detail of firewall rule.
     */
    export interface IPv4FirewallRuleResponse {
        /**
         * The rule name.
         */
        firewallRuleName?: pulumi.Input<string>;
        /**
         * The end range of IPv4.
         */
        rangeEnd?: pulumi.Input<string>;
        /**
         * The start range of IPv4.
         */
        rangeStart?: pulumi.Input<string>;
    }

    /**
     * An array of firewall rules.
     */
    export interface IPv4FirewallSettings {
        /**
         * The indicator of enabling PBI service.
         */
        enablePowerBIService?: pulumi.Input<boolean>;
        /**
         * An array of firewall rules.
         */
        firewallRules?: pulumi.Input<pulumi.Input<inputs.analysisservices.IPv4FirewallRule>[]>;
    }

    /**
     * An array of firewall rules.
     */
    export interface IPv4FirewallSettingsResponse {
        /**
         * The indicator of enabling PBI service.
         */
        enablePowerBIService?: pulumi.Input<boolean>;
        /**
         * An array of firewall rules.
         */
        firewallRules?: pulumi.Input<pulumi.Input<inputs.analysisservices.IPv4FirewallRuleResponse>[]>;
    }

    /**
     * Represents the SKU name and Azure pricing tier for Analysis Services resource.
     */
    export interface ResourceSku {
        /**
         * The number of instances in the read only query pool.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Name of the SKU level.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the Azure pricing tier to which the SKU applies.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Represents the SKU name and Azure pricing tier for Analysis Services resource.
     */
    export interface ResourceSkuResponse {
        /**
         * The number of instances in the read only query pool.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Name of the SKU level.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the Azure pricing tier to which the SKU applies.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * An array of administrator user identities.
     */
    export interface ServerAdministrators {
        /**
         * An array of administrator user identities.
         */
        members?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * An array of administrator user identities.
     */
    export interface ServerAdministratorsResponse {
        /**
         * An array of administrator user identities.
         */
        members?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace apimanagement {
    /**
     * Description of an additional API Management resource location.
     */
    export interface AdditionalLocation {
        /**
         * Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
         */
        disableGateway?: pulumi.Input<boolean>;
        /**
         * The location name of the additional region among Azure Data center regions.
         */
        location: pulumi.Input<string>;
        /**
         * SKU properties of the API Management service.
         */
        sku: pulumi.Input<inputs.apimanagement.ApiManagementServiceSkuProperties>;
        /**
         * Virtual network configuration for the location.
         */
        virtualNetworkConfiguration?: pulumi.Input<inputs.apimanagement.VirtualNetworkConfiguration>;
    }

    /**
     * Description of an additional API Management resource location.
     */
    export interface AdditionalLocationResponse {
        /**
         * Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
         */
        disableGateway?: pulumi.Input<boolean>;
        /**
         * Gateway URL of the API Management service in the Region.
         */
        gatewayRegionalUrl: pulumi.Input<string>;
        /**
         * The location name of the additional region among Azure Data center regions.
         */
        location: pulumi.Input<string>;
        /**
         * Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard and Premium SKU.
         */
        privateIPAddresses: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
         */
        publicIPAddresses: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SKU properties of the API Management service.
         */
        sku: pulumi.Input<inputs.apimanagement.ApiManagementServiceSkuPropertiesResponse>;
        /**
         * Virtual network configuration for the location.
         */
        virtualNetworkConfiguration?: pulumi.Input<inputs.apimanagement.VirtualNetworkConfigurationResponse>;
    }

    /**
     * Api Entity Properties
     */
    export interface ApiContractPropertiesResponse {
        /**
         * Describes the Revision of the Api. If no value is provided, default revision 1 is created
         */
        apiRevision?: pulumi.Input<string>;
        /**
         * Description of the Api Revision.
         */
        apiRevisionDescription?: pulumi.Input<string>;
        /**
         * Indicates the Version identifier of the API if the API is versioned
         */
        apiVersion?: pulumi.Input<string>;
        /**
         * Description of the Api Version.
         */
        apiVersionDescription?: pulumi.Input<string>;
        /**
         * Version set details
         */
        apiVersionSet?: pulumi.Input<inputs.apimanagement.ApiVersionSetContractDetailsResponse>;
        /**
         * A resource identifier for the related ApiVersionSet.
         */
        apiVersionSetId?: pulumi.Input<string>;
        /**
         * Collection of authentication settings included into this API.
         */
        authenticationSettings?: pulumi.Input<inputs.apimanagement.AuthenticationSettingsContractResponse>;
        /**
         * Description of the API. May include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        /**
         * API name. Must be 1 to 300 characters long.
         */
        displayName?: pulumi.Input<string>;
        /**
         * Indicates if API revision is current api revision.
         */
        isCurrent?: pulumi.Input<boolean>;
        /**
         * Indicates if API revision is accessible via the gateway.
         */
        isOnline: pulumi.Input<boolean>;
        /**
         * Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
         */
        path: pulumi.Input<string>;
        /**
         * Describes on which protocols the operations in this API can be invoked.
         */
        protocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
         */
        serviceUrl?: pulumi.Input<string>;
        /**
         * API identifier of the source API.
         */
        sourceApiId?: pulumi.Input<string>;
        /**
         * Protocols over which API is made available.
         */
        subscriptionKeyParameterNames?: pulumi.Input<inputs.apimanagement.SubscriptionKeyParameterNamesContractResponse>;
        /**
         * Specifies whether an API or Product subscription is required for accessing the API.
         */
        subscriptionRequired?: pulumi.Input<boolean>;
        /**
         * Type of API.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Api Create or Update Properties.
     */
    export interface ApiCreateOrUpdateProperties {
        /**
         * Describes the Revision of the Api. If no value is provided, default revision 1 is created
         */
        apiRevision?: pulumi.Input<string>;
        /**
         * Description of the Api Revision.
         */
        apiRevisionDescription?: pulumi.Input<string>;
        /**
         * Type of Api to create. 
         *  * `http` creates a SOAP to REST API 
         *  * `soap` creates a SOAP pass-through API .
         */
        apiType?: pulumi.Input<string>;
        /**
         * Indicates the Version identifier of the API if the API is versioned
         */
        apiVersion?: pulumi.Input<string>;
        /**
         * Description of the Api Version.
         */
        apiVersionDescription?: pulumi.Input<string>;
        /**
         * Version set details
         */
        apiVersionSet?: pulumi.Input<inputs.apimanagement.ApiVersionSetContractDetails>;
        /**
         * A resource identifier for the related ApiVersionSet.
         */
        apiVersionSetId?: pulumi.Input<string>;
        /**
         * Collection of authentication settings included into this API.
         */
        authenticationSettings?: pulumi.Input<inputs.apimanagement.AuthenticationSettingsContract>;
        /**
         * Description of the API. May include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        /**
         * API name. Must be 1 to 300 characters long.
         */
        displayName?: pulumi.Input<string>;
        /**
         * Format of the Content in which the API is getting imported.
         */
        format?: pulumi.Input<string>;
        /**
         * Indicates if API revision is current api revision.
         */
        isCurrent?: pulumi.Input<boolean>;
        /**
         * Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
         */
        path: pulumi.Input<string>;
        /**
         * Describes on which protocols the operations in this API can be invoked.
         */
        protocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
         */
        serviceUrl?: pulumi.Input<string>;
        /**
         * API identifier of the source API.
         */
        sourceApiId?: pulumi.Input<string>;
        /**
         * Protocols over which API is made available.
         */
        subscriptionKeyParameterNames?: pulumi.Input<inputs.apimanagement.SubscriptionKeyParameterNamesContract>;
        /**
         * Specifies whether an API or Product subscription is required for accessing the API.
         */
        subscriptionRequired?: pulumi.Input<boolean>;
        /**
         * Type of API.
         */
        type?: pulumi.Input<string>;
        /**
         * Content value when Importing an API.
         */
        value?: pulumi.Input<string>;
        /**
         * Criteria to limit import of WSDL to a subset of the document.
         */
        wsdlSelector?: pulumi.Input<inputs.apimanagement.ApiCreateOrUpdatePropertiesProperties>;
    }

    /**
     * Criteria to limit import of WSDL to a subset of the document.
     */
    export interface ApiCreateOrUpdatePropertiesProperties {
        /**
         * Name of endpoint(port) to import from WSDL
         */
        wsdlEndpointName?: pulumi.Input<string>;
        /**
         * Name of service to import from WSDL
         */
        wsdlServiceName?: pulumi.Input<string>;
    }

    /**
     * Identity properties of the Api Management service resource.
     */
    export interface ApiManagementServiceIdentity {
        /**
         * The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
         */
        type: pulumi.Input<string>;
        /**
         * The list of user identities associated with the resource. The user identity 
         * dictionary key references will be ARM resource ids in the form: 
         * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
         *     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity properties of the Api Management service resource.
     */
    export interface ApiManagementServiceIdentityResponse {
        /**
         * The principal id of the identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The client tenant id of the identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
         */
        type: pulumi.Input<string>;
        /**
         * The list of user identities associated with the resource. The user identity 
         * dictionary key references will be ARM resource ids in the form: 
         * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
         *     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Properties of an API Management service resource description.
     */
    export interface ApiManagementServiceProperties {
        /**
         * Additional datacenter locations of the API Management service.
         */
        additionalLocations?: pulumi.Input<pulumi.Input<inputs.apimanagement.AdditionalLocation>[]>;
        /**
         * Control Plane Apis version constraint for the API Management service.
         */
        apiVersionConstraint?: pulumi.Input<inputs.apimanagement.ApiVersionConstraint>;
        /**
         * List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
         */
        certificates?: pulumi.Input<pulumi.Input<inputs.apimanagement.CertificateConfiguration>[]>;
        /**
         * Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can't be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384
         */
        customProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region.
         */
        disableGateway?: pulumi.Input<boolean>;
        /**
         * Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.
         */
        enableClientCertificate?: pulumi.Input<boolean>;
        /**
         * Custom hostname configuration of the API Management service.
         */
        hostnameConfigurations?: pulumi.Input<pulumi.Input<inputs.apimanagement.HostnameConfiguration>[]>;
        /**
         * Email address from which the notification will be sent.
         */
        notificationSenderEmail?: pulumi.Input<string>;
        /**
         * Publisher email.
         */
        publisherEmail: pulumi.Input<string>;
        /**
         * Publisher name.
         */
        publisherName: pulumi.Input<string>;
        /**
         * Virtual network configuration of the API Management service.
         */
        virtualNetworkConfiguration?: pulumi.Input<inputs.apimanagement.VirtualNetworkConfiguration>;
        /**
         * The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
         */
        virtualNetworkType?: pulumi.Input<string>;
    }

    /**
     * Properties of an API Management service resource description.
     */
    export interface ApiManagementServicePropertiesResponse {
        /**
         * Additional datacenter locations of the API Management service.
         */
        additionalLocations?: pulumi.Input<pulumi.Input<inputs.apimanagement.AdditionalLocationResponse>[]>;
        /**
         * Control Plane Apis version constraint for the API Management service.
         */
        apiVersionConstraint?: pulumi.Input<inputs.apimanagement.ApiVersionConstraintResponse>;
        /**
         * List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
         */
        certificates?: pulumi.Input<pulumi.Input<inputs.apimanagement.CertificateConfigurationResponse>[]>;
        /**
         * Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        createdAtUtc: pulumi.Input<string>;
        /**
         * Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can't be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384
         */
        customProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * DEveloper Portal endpoint URL of the API Management service.
         */
        developerPortalUrl: pulumi.Input<string>;
        /**
         * Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region.
         */
        disableGateway?: pulumi.Input<boolean>;
        /**
         * Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.
         */
        enableClientCertificate?: pulumi.Input<boolean>;
        /**
         * Gateway URL of the API Management service in the Default Region.
         */
        gatewayRegionalUrl: pulumi.Input<string>;
        /**
         * Gateway URL of the API Management service.
         */
        gatewayUrl: pulumi.Input<string>;
        /**
         * Custom hostname configuration of the API Management service.
         */
        hostnameConfigurations?: pulumi.Input<pulumi.Input<inputs.apimanagement.HostnameConfigurationResponse>[]>;
        /**
         * Management API endpoint URL of the API Management service.
         */
        managementApiUrl: pulumi.Input<string>;
        /**
         * Email address from which the notification will be sent.
         */
        notificationSenderEmail?: pulumi.Input<string>;
        /**
         * Publisher portal endpoint Url of the API Management service.
         */
        portalUrl: pulumi.Input<string>;
        /**
         * Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard and Premium SKU.
         */
        privateIPAddresses: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard and Premium SKU.
         */
        publicIPAddresses: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Publisher email.
         */
        publisherEmail: pulumi.Input<string>;
        /**
         * Publisher name.
         */
        publisherName: pulumi.Input<string>;
        /**
         * SCM endpoint URL of the API Management service.
         */
        scmUrl: pulumi.Input<string>;
        /**
         * The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
         */
        targetProvisioningState: pulumi.Input<string>;
        /**
         * Virtual network configuration of the API Management service.
         */
        virtualNetworkConfiguration?: pulumi.Input<inputs.apimanagement.VirtualNetworkConfigurationResponse>;
        /**
         * The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
         */
        virtualNetworkType?: pulumi.Input<string>;
    }

    /**
     * API Management service resource SKU properties.
     */
    export interface ApiManagementServiceSkuProperties {
        /**
         * Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
         */
        capacity: pulumi.Input<number>;
        /**
         * Name of the Sku.
         */
        name: pulumi.Input<string>;
    }

    /**
     * API Management service resource SKU properties.
     */
    export interface ApiManagementServiceSkuPropertiesResponse {
        /**
         * Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
         */
        capacity: pulumi.Input<number>;
        /**
         * Name of the Sku.
         */
        name: pulumi.Input<string>;
    }

    /**
     * API Release details
     */
    export interface ApiReleaseContractProperties {
        /**
         * Identifier of the API the release belongs to.
         */
        apiId?: pulumi.Input<string>;
        /**
         * Release Notes
         */
        notes?: pulumi.Input<string>;
    }

    /**
     * API Release details
     */
    export interface ApiReleaseContractPropertiesResponse {
        /**
         * Identifier of the API the release belongs to.
         */
        apiId?: pulumi.Input<string>;
        /**
         * The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
         */
        createdDateTime: pulumi.Input<string>;
        /**
         * Release Notes
         */
        notes?: pulumi.Input<string>;
        /**
         * The time the API release was updated.
         */
        updatedDateTime: pulumi.Input<string>;
    }

    /**
     * Control Plane Apis version constraint for the API Management service.
     */
    export interface ApiVersionConstraint {
        /**
         * Limit control plane API calls to API Management service with version equal to or newer than this value.
         */
        minApiVersion?: pulumi.Input<string>;
    }

    /**
     * Control Plane Apis version constraint for the API Management service.
     */
    export interface ApiVersionConstraintResponse {
        /**
         * Limit control plane API calls to API Management service with version equal to or newer than this value.
         */
        minApiVersion?: pulumi.Input<string>;
    }

    /**
     * An API Version Set contains the common configuration for a set of API Versions relating 
     */
    export interface ApiVersionSetContractDetails {
        /**
         * Description of API Version Set.
         */
        description?: pulumi.Input<string>;
        /**
         * Identifier for existing API Version Set. Omit this value to create a new Version Set.
         */
        id?: pulumi.Input<string>;
        /**
         * The display Name of the API Version Set.
         */
        name?: pulumi.Input<string>;
        /**
         * Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
         */
        versionHeaderName?: pulumi.Input<string>;
        /**
         * Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
         */
        versionQueryName?: pulumi.Input<string>;
        /**
         * An value that determines where the API Version identifer will be located in a HTTP request.
         */
        versioningScheme?: pulumi.Input<string>;
    }

    /**
     * An API Version Set contains the common configuration for a set of API Versions relating 
     */
    export interface ApiVersionSetContractDetailsResponse {
        /**
         * Description of API Version Set.
         */
        description?: pulumi.Input<string>;
        /**
         * Identifier for existing API Version Set. Omit this value to create a new Version Set.
         */
        id?: pulumi.Input<string>;
        /**
         * The display Name of the API Version Set.
         */
        name?: pulumi.Input<string>;
        /**
         * Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
         */
        versionHeaderName?: pulumi.Input<string>;
        /**
         * Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
         */
        versionQueryName?: pulumi.Input<string>;
        /**
         * An value that determines where the API Version identifer will be located in a HTTP request.
         */
        versioningScheme?: pulumi.Input<string>;
    }

    /**
     * Properties of an API Version Set.
     */
    export interface ApiVersionSetContractProperties {
        /**
         * Description of API Version Set.
         */
        description?: pulumi.Input<string>;
        /**
         * Name of API Version Set
         */
        displayName: pulumi.Input<string>;
        /**
         * Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
         */
        versionHeaderName?: pulumi.Input<string>;
        /**
         * Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
         */
        versionQueryName?: pulumi.Input<string>;
        /**
         * An value that determines where the API Version identifer will be located in a HTTP request.
         */
        versioningScheme: pulumi.Input<string>;
    }

    /**
     * Properties of an API Version Set.
     */
    export interface ApiVersionSetContractPropertiesResponse {
        /**
         * Description of API Version Set.
         */
        description?: pulumi.Input<string>;
        /**
         * Name of API Version Set
         */
        displayName: pulumi.Input<string>;
        /**
         * Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
         */
        versionHeaderName?: pulumi.Input<string>;
        /**
         * Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
         */
        versionQueryName?: pulumi.Input<string>;
        /**
         * An value that determines where the API Version identifer will be located in a HTTP request.
         */
        versioningScheme: pulumi.Input<string>;
    }

    /**
     * API Authentication Settings.
     */
    export interface AuthenticationSettingsContract {
        /**
         * OAuth2 Authentication settings
         */
        oAuth2?: pulumi.Input<inputs.apimanagement.OAuth2AuthenticationSettingsContract>;
        /**
         * OpenID Connect Authentication Settings
         */
        openid?: pulumi.Input<inputs.apimanagement.OpenIdAuthenticationSettingsContract>;
    }

    /**
     * API Authentication Settings.
     */
    export interface AuthenticationSettingsContractResponse {
        /**
         * OAuth2 Authentication settings
         */
        oAuth2?: pulumi.Input<inputs.apimanagement.OAuth2AuthenticationSettingsContractResponse>;
        /**
         * OpenID Connect Authentication Settings
         */
        openid?: pulumi.Input<inputs.apimanagement.OpenIdAuthenticationSettingsContractResponse>;
    }

    /**
     * External OAuth authorization server settings Properties.
     */
    export interface AuthorizationServerContractProperties {
        /**
         * OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
         */
        authorizationEndpoint: pulumi.Input<string>;
        /**
         * HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
         */
        authorizationMethods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the mechanism by which access token is passed to the API. 
         */
        bearerTokenSendingMethods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.
         */
        clientAuthenticationMethod?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Client or app id registered with this authorization server.
         */
        clientId: pulumi.Input<string>;
        /**
         * Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
         */
        clientRegistrationEndpoint: pulumi.Input<string>;
        /**
         * Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
         */
        clientSecret?: pulumi.Input<string>;
        /**
         * Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
         */
        defaultScope?: pulumi.Input<string>;
        /**
         * Description of the authorization server. Can contain HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        /**
         * User-friendly authorization server name.
         */
        displayName: pulumi.Input<string>;
        /**
         * Form of an authorization grant, which the client uses to request the access token.
         */
        grantTypes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
         */
        resourceOwnerPassword?: pulumi.Input<string>;
        /**
         * Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
         */
        resourceOwnerUsername?: pulumi.Input<string>;
        /**
         * If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.
         */
        supportState?: pulumi.Input<boolean>;
        /**
         * Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.
         */
        tokenBodyParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.TokenBodyParameterContract>[]>;
        /**
         * OAuth token endpoint. Contains absolute URI to entity being referenced.
         */
        tokenEndpoint?: pulumi.Input<string>;
    }

    /**
     * External OAuth authorization server settings Properties.
     */
    export interface AuthorizationServerContractPropertiesResponse {
        /**
         * OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
         */
        authorizationEndpoint: pulumi.Input<string>;
        /**
         * HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
         */
        authorizationMethods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the mechanism by which access token is passed to the API. 
         */
        bearerTokenSendingMethods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.
         */
        clientAuthenticationMethod?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Client or app id registered with this authorization server.
         */
        clientId: pulumi.Input<string>;
        /**
         * Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
         */
        clientRegistrationEndpoint: pulumi.Input<string>;
        /**
         * Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
         */
        clientSecret?: pulumi.Input<string>;
        /**
         * Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
         */
        defaultScope?: pulumi.Input<string>;
        /**
         * Description of the authorization server. Can contain HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        /**
         * User-friendly authorization server name.
         */
        displayName: pulumi.Input<string>;
        /**
         * Form of an authorization grant, which the client uses to request the access token.
         */
        grantTypes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
         */
        resourceOwnerPassword?: pulumi.Input<string>;
        /**
         * Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
         */
        resourceOwnerUsername?: pulumi.Input<string>;
        /**
         * If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.
         */
        supportState?: pulumi.Input<boolean>;
        /**
         * Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.
         */
        tokenBodyParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.TokenBodyParameterContractResponse>[]>;
        /**
         * OAuth token endpoint. Contains absolute URI to entity being referenced.
         */
        tokenEndpoint?: pulumi.Input<string>;
    }

    /**
     * Authorization header information.
     */
    export interface BackendAuthorizationHeaderCredentials {
        /**
         * Authentication Parameter value.
         */
        parameter: pulumi.Input<string>;
        /**
         * Authentication Scheme name.
         */
        scheme: pulumi.Input<string>;
    }

    /**
     * Authorization header information.
     */
    export interface BackendAuthorizationHeaderCredentialsResponse {
        /**
         * Authentication Parameter value.
         */
        parameter: pulumi.Input<string>;
        /**
         * Authentication Scheme name.
         */
        scheme: pulumi.Input<string>;
    }

    /**
     * Parameters supplied to the Create Backend operation.
     */
    export interface BackendContractProperties {
        /**
         * Backend Credentials Contract Properties
         */
        credentials?: pulumi.Input<inputs.apimanagement.BackendCredentialsContract>;
        /**
         * Backend Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Backend Properties contract
         */
        properties?: pulumi.Input<inputs.apimanagement.BackendProperties>;
        /**
         * Backend communication protocol.
         */
        protocol: pulumi.Input<string>;
        /**
         * Backend Proxy Contract Properties
         */
        proxy?: pulumi.Input<inputs.apimanagement.BackendProxyContract>;
        /**
         * Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
         */
        resourceId?: pulumi.Input<string>;
        /**
         * Backend Title.
         */
        title?: pulumi.Input<string>;
        /**
         * Backend TLS Properties
         */
        tls?: pulumi.Input<inputs.apimanagement.BackendTlsProperties>;
        /**
         * Runtime Url of the Backend.
         */
        url: pulumi.Input<string>;
    }

    /**
     * Parameters supplied to the Create Backend operation.
     */
    export interface BackendContractPropertiesResponse {
        /**
         * Backend Credentials Contract Properties
         */
        credentials?: pulumi.Input<inputs.apimanagement.BackendCredentialsContractResponse>;
        /**
         * Backend Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Backend Properties contract
         */
        properties?: pulumi.Input<inputs.apimanagement.BackendPropertiesResponse>;
        /**
         * Backend communication protocol.
         */
        protocol: pulumi.Input<string>;
        /**
         * Backend Proxy Contract Properties
         */
        proxy?: pulumi.Input<inputs.apimanagement.BackendProxyContractResponse>;
        /**
         * Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
         */
        resourceId?: pulumi.Input<string>;
        /**
         * Backend Title.
         */
        title?: pulumi.Input<string>;
        /**
         * Backend TLS Properties
         */
        tls?: pulumi.Input<inputs.apimanagement.BackendTlsPropertiesResponse>;
        /**
         * Runtime Url of the Backend.
         */
        url: pulumi.Input<string>;
    }

    /**
     * Details of the Credentials used to connect to Backend.
     */
    export interface BackendCredentialsContract {
        /**
         * Authorization header authentication
         */
        authorization?: pulumi.Input<inputs.apimanagement.BackendAuthorizationHeaderCredentials>;
        /**
         * List of Client Certificate Thumbprint.
         */
        certificate?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Header Parameter description.
         */
        header?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Query Parameter description.
         */
        query?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Details of the Credentials used to connect to Backend.
     */
    export interface BackendCredentialsContractResponse {
        /**
         * Authorization header authentication
         */
        authorization?: pulumi.Input<inputs.apimanagement.BackendAuthorizationHeaderCredentialsResponse>;
        /**
         * List of Client Certificate Thumbprint.
         */
        certificate?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Header Parameter description.
         */
        header?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Query Parameter description.
         */
        query?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Properties specific to the Backend Type.
     */
    export interface BackendProperties {
        /**
         * Backend Service Fabric Cluster Properties
         */
        serviceFabricCluster?: pulumi.Input<inputs.apimanagement.BackendServiceFabricClusterProperties>;
    }

    /**
     * Properties specific to the Backend Type.
     */
    export interface BackendPropertiesResponse {
        /**
         * Backend Service Fabric Cluster Properties
         */
        serviceFabricCluster?: pulumi.Input<inputs.apimanagement.BackendServiceFabricClusterPropertiesResponse>;
    }

    /**
     * Details of the Backend WebProxy Server to use in the Request to Backend.
     */
    export interface BackendProxyContract {
        /**
         * Password to connect to the WebProxy Server
         */
        password?: pulumi.Input<string>;
        /**
         * WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
         */
        url: pulumi.Input<string>;
        /**
         * Username to connect to the WebProxy server
         */
        username?: pulumi.Input<string>;
    }

    /**
     * Details of the Backend WebProxy Server to use in the Request to Backend.
     */
    export interface BackendProxyContractResponse {
        /**
         * Password to connect to the WebProxy Server
         */
        password?: pulumi.Input<string>;
        /**
         * WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
         */
        url: pulumi.Input<string>;
        /**
         * Username to connect to the WebProxy server
         */
        username?: pulumi.Input<string>;
    }

    /**
     * Properties of the Service Fabric Type Backend.
     */
    export interface BackendServiceFabricClusterProperties {
        /**
         * The client certificate thumbprint for the management endpoint.
         */
        clientCertificatethumbprint: pulumi.Input<string>;
        /**
         * The cluster management endpoint.
         */
        managementEndpoints: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Maximum number of retries while attempting resolve the partition.
         */
        maxPartitionResolutionRetries?: pulumi.Input<number>;
        /**
         * Thumbprints of certificates cluster management service uses for tls communication
         */
        serverCertificateThumbprints?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Server X509 Certificate Names Collection
         */
        serverX509Names?: pulumi.Input<pulumi.Input<inputs.apimanagement.X509CertificateName>[]>;
    }

    /**
     * Properties of the Service Fabric Type Backend.
     */
    export interface BackendServiceFabricClusterPropertiesResponse {
        /**
         * The client certificate thumbprint for the management endpoint.
         */
        clientCertificatethumbprint: pulumi.Input<string>;
        /**
         * The cluster management endpoint.
         */
        managementEndpoints: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Maximum number of retries while attempting resolve the partition.
         */
        maxPartitionResolutionRetries?: pulumi.Input<number>;
        /**
         * Thumbprints of certificates cluster management service uses for tls communication
         */
        serverCertificateThumbprints?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Server X509 Certificate Names Collection
         */
        serverX509Names?: pulumi.Input<pulumi.Input<inputs.apimanagement.X509CertificateNameResponse>[]>;
    }

    /**
     * Properties controlling TLS Certificate Validation.
     */
    export interface BackendTlsProperties {
        /**
         * Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
         */
        validateCertificateChain?: pulumi.Input<boolean>;
        /**
         * Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
         */
        validateCertificateName?: pulumi.Input<boolean>;
    }

    /**
     * Properties controlling TLS Certificate Validation.
     */
    export interface BackendTlsPropertiesResponse {
        /**
         * Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
         */
        validateCertificateChain?: pulumi.Input<boolean>;
        /**
         * Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
         */
        validateCertificateName?: pulumi.Input<boolean>;
    }

    /**
     * Body logging settings.
     */
    export interface BodyDiagnosticSettings {
        /**
         * Number of request body bytes to log.
         */
        bytes?: pulumi.Input<number>;
    }

    /**
     * Body logging settings.
     */
    export interface BodyDiagnosticSettingsResponse {
        /**
         * Number of request body bytes to log.
         */
        bytes?: pulumi.Input<number>;
    }

    /**
     * Properties of the Cache contract.
     */
    export interface CacheContractProperties {
        /**
         * Runtime connection string to cache
         */
        connectionString: pulumi.Input<string>;
        /**
         * Cache description
         */
        description?: pulumi.Input<string>;
        /**
         * Original uri of entity in external system cache points to
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * Properties of the Cache contract.
     */
    export interface CacheContractPropertiesResponse {
        /**
         * Runtime connection string to cache
         */
        connectionString: pulumi.Input<string>;
        /**
         * Cache description
         */
        description?: pulumi.Input<string>;
        /**
         * Original uri of entity in external system cache points to
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * Certificate configuration which consist of non-trusted intermediates and root certificates.
     */
    export interface CertificateConfiguration {
        /**
         * Certificate information.
         */
        certificate?: pulumi.Input<inputs.apimanagement.CertificateInformation>;
        /**
         * Certificate Password.
         */
        certificatePassword?: pulumi.Input<string>;
        /**
         * Base64 Encoded certificate.
         */
        encodedCertificate?: pulumi.Input<string>;
        /**
         * The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
         */
        storeName: pulumi.Input<string>;
    }

    /**
     * Certificate configuration which consist of non-trusted intermediates and root certificates.
     */
    export interface CertificateConfigurationResponse {
        /**
         * Certificate information.
         */
        certificate?: pulumi.Input<inputs.apimanagement.CertificateInformationResponse>;
        /**
         * Certificate Password.
         */
        certificatePassword?: pulumi.Input<string>;
        /**
         * Base64 Encoded certificate.
         */
        encodedCertificate?: pulumi.Input<string>;
        /**
         * The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
         */
        storeName: pulumi.Input<string>;
    }

    /**
     * Properties of the Certificate contract.
     */
    export interface CertificateContractPropertiesResponse {
        /**
         * Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        expirationDate: pulumi.Input<string>;
        /**
         * Subject attribute of the certificate.
         */
        subject: pulumi.Input<string>;
        /**
         * Thumbprint of the certificate.
         */
        thumbprint: pulumi.Input<string>;
    }

    /**
     * Parameters supplied to the CreateOrUpdate certificate operation.
     */
    export interface CertificateCreateOrUpdateProperties {
        /**
         * Base 64 encoded certificate using the application/x-pkcs12 representation.
         */
        data: pulumi.Input<string>;
        /**
         * Password for the Certificate
         */
        password: pulumi.Input<string>;
    }

    /**
     * SSL certificate information.
     */
    export interface CertificateInformation {
        /**
         * Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        expiry: pulumi.Input<string>;
        /**
         * Subject of the certificate.
         */
        subject: pulumi.Input<string>;
        /**
         * Thumbprint of the certificate.
         */
        thumbprint: pulumi.Input<string>;
    }

    /**
     * SSL certificate information.
     */
    export interface CertificateInformationResponse {
        /**
         * Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        expiry: pulumi.Input<string>;
        /**
         * Subject of the certificate.
         */
        subject: pulumi.Input<string>;
        /**
         * Thumbprint of the certificate.
         */
        thumbprint: pulumi.Input<string>;
    }

    /**
     * Diagnostic Entity Properties
     */
    export interface DiagnosticContractProperties {
        /**
         * Specifies for what type of messages sampling settings should not apply.
         */
        alwaysLog?: pulumi.Input<string>;
        /**
         * Diagnostic settings for incoming/outgoing HTTP messages to the Backend
         */
        backend?: pulumi.Input<inputs.apimanagement.PipelineDiagnosticSettings>;
        /**
         * Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
         */
        frontend?: pulumi.Input<inputs.apimanagement.PipelineDiagnosticSettings>;
        /**
         * Sets correlation protocol to use for Application Insights diagnostics.
         */
        httpCorrelationProtocol?: pulumi.Input<string>;
        /**
         * Log the ClientIP. Default is false.
         */
        logClientIp?: pulumi.Input<boolean>;
        /**
         * Resource Id of a target logger.
         */
        loggerId: pulumi.Input<string>;
        /**
         * Sampling settings for Diagnostic.
         */
        sampling?: pulumi.Input<inputs.apimanagement.SamplingSettings>;
        /**
         * The verbosity level applied to traces emitted by trace policies.
         */
        verbosity?: pulumi.Input<string>;
    }

    /**
     * Diagnostic Entity Properties
     */
    export interface DiagnosticContractPropertiesResponse {
        /**
         * Specifies for what type of messages sampling settings should not apply.
         */
        alwaysLog?: pulumi.Input<string>;
        /**
         * Diagnostic settings for incoming/outgoing HTTP messages to the Backend
         */
        backend?: pulumi.Input<inputs.apimanagement.PipelineDiagnosticSettingsResponse>;
        /**
         * Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
         */
        frontend?: pulumi.Input<inputs.apimanagement.PipelineDiagnosticSettingsResponse>;
        /**
         * Sets correlation protocol to use for Application Insights diagnostics.
         */
        httpCorrelationProtocol?: pulumi.Input<string>;
        /**
         * Log the ClientIP. Default is false.
         */
        logClientIp?: pulumi.Input<boolean>;
        /**
         * Resource Id of a target logger.
         */
        loggerId: pulumi.Input<string>;
        /**
         * Sampling settings for Diagnostic.
         */
        sampling?: pulumi.Input<inputs.apimanagement.SamplingSettingsResponse>;
        /**
         * The verbosity level applied to traces emitted by trace policies.
         */
        verbosity?: pulumi.Input<string>;
    }

    /**
     * Email Template Contract properties.
     */
    export interface EmailTemplateContractPropertiesResponse {
        /**
         * Email Template Body. This should be a valid XDocument
         */
        body: pulumi.Input<string>;
        /**
         * Description of the Email Template.
         */
        description?: pulumi.Input<string>;
        /**
         * Whether the template is the default template provided by Api Management or has been edited.
         */
        isDefault: pulumi.Input<boolean>;
        /**
         * Email Template Parameter values.
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.EmailTemplateParametersContractPropertiesResponse>[]>;
        /**
         * Subject of the Template.
         */
        subject: pulumi.Input<string>;
        /**
         * Title of the Template.
         */
        title?: pulumi.Input<string>;
    }

    /**
     * Email Template Parameter contract.
     */
    export interface EmailTemplateParametersContractProperties {
        /**
         * Template parameter description.
         */
        description?: pulumi.Input<string>;
        /**
         * Template parameter name.
         */
        name?: pulumi.Input<string>;
        /**
         * Template parameter title.
         */
        title?: pulumi.Input<string>;
    }

    /**
     * Email Template Parameter contract.
     */
    export interface EmailTemplateParametersContractPropertiesResponse {
        /**
         * Template parameter description.
         */
        description?: pulumi.Input<string>;
        /**
         * Template parameter name.
         */
        name?: pulumi.Input<string>;
        /**
         * Template parameter title.
         */
        title?: pulumi.Input<string>;
    }

    /**
     * Email Template Update Contract properties.
     */
    export interface EmailTemplateUpdateParameterProperties {
        /**
         * Email Template Body. This should be a valid XDocument
         */
        body?: pulumi.Input<string>;
        /**
         * Description of the Email Template.
         */
        description?: pulumi.Input<string>;
        /**
         * Email Template Parameter values.
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.EmailTemplateParametersContractProperties>[]>;
        /**
         * Subject of the Template.
         */
        subject?: pulumi.Input<string>;
        /**
         * Title of the Template.
         */
        title?: pulumi.Input<string>;
    }

    /**
     * Properties of the Gateway contract.
     */
    export interface GatewayContractProperties {
        /**
         * Gateway description
         */
        description?: pulumi.Input<string>;
        /**
         * Gateway location.
         */
        locationData?: pulumi.Input<inputs.apimanagement.ResourceLocationDataContract>;
    }

    /**
     * Properties of the Gateway contract.
     */
    export interface GatewayContractPropertiesResponse {
        /**
         * Gateway description
         */
        description?: pulumi.Input<string>;
        /**
         * Gateway location.
         */
        locationData?: pulumi.Input<inputs.apimanagement.ResourceLocationDataContractResponse>;
    }

    /**
     * Gateway hostname configuration details.
     */
    export interface GatewayHostnameConfigurationContractProperties {
        /**
         * Identifier of Certificate entity that will be used for TLS connection establishment
         */
        certificateId?: pulumi.Input<string>;
        /**
         * Hostname value. Supports valid domain name, partial or full wildcard
         */
        hostname?: pulumi.Input<string>;
        /**
         * Determines whether gateway requests client certificate
         */
        negotiateClientCertificate?: pulumi.Input<boolean>;
    }

    /**
     * Gateway hostname configuration details.
     */
    export interface GatewayHostnameConfigurationContractPropertiesResponse {
        /**
         * Identifier of Certificate entity that will be used for TLS connection establishment
         */
        certificateId?: pulumi.Input<string>;
        /**
         * Hostname value. Supports valid domain name, partial or full wildcard
         */
        hostname?: pulumi.Input<string>;
        /**
         * Determines whether gateway requests client certificate
         */
        negotiateClientCertificate?: pulumi.Input<boolean>;
    }

    /**
     * Group contract Properties.
     */
    export interface GroupContractPropertiesResponse {
        /**
         * true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
         */
        builtIn: pulumi.Input<boolean>;
        /**
         * Group description. Can contain HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        /**
         * Group name.
         */
        displayName: pulumi.Input<string>;
        /**
         * For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
         */
        externalId?: pulumi.Input<string>;
        /**
         * Group type.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Parameters supplied to the Create Group operation.
     */
    export interface GroupCreateParametersProperties {
        /**
         * Group description.
         */
        description?: pulumi.Input<string>;
        /**
         * Group name.
         */
        displayName: pulumi.Input<string>;
        /**
         * Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
         */
        externalId?: pulumi.Input<string>;
        /**
         * Group type.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Custom hostname configuration.
     */
    export interface HostnameConfiguration {
        /**
         * Certificate information.
         */
        certificate?: pulumi.Input<inputs.apimanagement.CertificateInformation>;
        /**
         * Certificate Password.
         */
        certificatePassword?: pulumi.Input<string>;
        /**
         * Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
         */
        defaultSslBinding?: pulumi.Input<boolean>;
        /**
         * Base64 Encoded certificate.
         */
        encodedCertificate?: pulumi.Input<string>;
        /**
         * Hostname to configure on the Api Management service.
         */
        hostName: pulumi.Input<string>;
        /**
         * Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * Specify true to always negotiate client certificate on the hostname. Default Value is false.
         */
        negotiateClientCertificate?: pulumi.Input<boolean>;
        /**
         * Hostname type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Custom hostname configuration.
     */
    export interface HostnameConfigurationResponse {
        /**
         * Certificate information.
         */
        certificate?: pulumi.Input<inputs.apimanagement.CertificateInformationResponse>;
        /**
         * Certificate Password.
         */
        certificatePassword?: pulumi.Input<string>;
        /**
         * Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
         */
        defaultSslBinding?: pulumi.Input<boolean>;
        /**
         * Base64 Encoded certificate.
         */
        encodedCertificate?: pulumi.Input<string>;
        /**
         * Hostname to configure on the Api Management service.
         */
        hostName: pulumi.Input<string>;
        /**
         * Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * Specify true to always negotiate client certificate on the hostname. Default Value is false.
         */
        negotiateClientCertificate?: pulumi.Input<boolean>;
        /**
         * Hostname type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Http message diagnostic settings.
     */
    export interface HttpMessageDiagnostic {
        /**
         * Body logging settings.
         */
        body?: pulumi.Input<inputs.apimanagement.BodyDiagnosticSettings>;
        /**
         * Array of HTTP Headers to log.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Http message diagnostic settings.
     */
    export interface HttpMessageDiagnosticResponse {
        /**
         * Body logging settings.
         */
        body?: pulumi.Input<inputs.apimanagement.BodyDiagnosticSettingsResponse>;
        /**
         * Array of HTTP Headers to log.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.
     */
    export interface IdentityProviderContractPropertiesResponse {
        /**
         * List of Allowed Tenants when configuring Azure Active Directory login.
         */
        allowedTenants?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
         */
        authority?: pulumi.Input<string>;
        /**
         * Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
         */
        clientId: pulumi.Input<string>;
        /**
         * Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
         */
        clientSecret?: pulumi.Input<string>;
        /**
         * Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
         */
        passwordResetPolicyName?: pulumi.Input<string>;
        /**
         * Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
         */
        profileEditingPolicyName?: pulumi.Input<string>;
        /**
         * Signin Policy Name. Only applies to AAD B2C Identity Provider.
         */
        signinPolicyName?: pulumi.Input<string>;
        /**
         * The TenantId to use instead of Common when logging into Active Directory
         */
        signinTenant?: pulumi.Input<string>;
        /**
         * Signup Policy Name. Only applies to AAD B2C Identity Provider.
         */
        signupPolicyName?: pulumi.Input<string>;
        /**
         * Identity Provider Type identifier.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.
     */
    export interface IdentityProviderCreateContractProperties {
        /**
         * List of Allowed Tenants when configuring Azure Active Directory login.
         */
        allowedTenants?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
         */
        authority?: pulumi.Input<string>;
        /**
         * Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
         */
        clientId: pulumi.Input<string>;
        /**
         * Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
         */
        clientSecret: pulumi.Input<string>;
        /**
         * Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
         */
        passwordResetPolicyName?: pulumi.Input<string>;
        /**
         * Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
         */
        profileEditingPolicyName?: pulumi.Input<string>;
        /**
         * Signin Policy Name. Only applies to AAD B2C Identity Provider.
         */
        signinPolicyName?: pulumi.Input<string>;
        /**
         * The TenantId to use instead of Common when logging into Active Directory
         */
        signinTenant?: pulumi.Input<string>;
        /**
         * Signup Policy Name. Only applies to AAD B2C Identity Provider.
         */
        signupPolicyName?: pulumi.Input<string>;
        /**
         * Identity Provider Type identifier.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Issue Attachment contract Properties.
     */
    export interface IssueAttachmentContractProperties {
        /**
         * An HTTP link or Base64-encoded binary data.
         */
        content: pulumi.Input<string>;
        /**
         * Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.
         */
        contentFormat: pulumi.Input<string>;
        /**
         * Filename by which the binary data will be saved.
         */
        title: pulumi.Input<string>;
    }

    /**
     * Issue Attachment contract Properties.
     */
    export interface IssueAttachmentContractPropertiesResponse {
        /**
         * An HTTP link or Base64-encoded binary data.
         */
        content: pulumi.Input<string>;
        /**
         * Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.
         */
        contentFormat: pulumi.Input<string>;
        /**
         * Filename by which the binary data will be saved.
         */
        title: pulumi.Input<string>;
    }

    /**
     * Issue Comment contract Properties.
     */
    export interface IssueCommentContractProperties {
        /**
         * Date and time when the comment was created.
         */
        createdDate?: pulumi.Input<string>;
        /**
         * Comment text.
         */
        text: pulumi.Input<string>;
        /**
         * A resource identifier for the user who left the comment.
         */
        userId: pulumi.Input<string>;
    }

    /**
     * Issue Comment contract Properties.
     */
    export interface IssueCommentContractPropertiesResponse {
        /**
         * Date and time when the comment was created.
         */
        createdDate?: pulumi.Input<string>;
        /**
         * Comment text.
         */
        text: pulumi.Input<string>;
        /**
         * A resource identifier for the user who left the comment.
         */
        userId: pulumi.Input<string>;
    }

    /**
     * Issue contract Properties.
     */
    export interface IssueContractProperties {
        /**
         * A resource identifier for the API the issue was created for.
         */
        apiId?: pulumi.Input<string>;
        /**
         * Date and time when the issue was created.
         */
        createdDate?: pulumi.Input<string>;
        /**
         * Text describing the issue.
         */
        description: pulumi.Input<string>;
        /**
         * Status of the issue.
         */
        state?: pulumi.Input<string>;
        /**
         * The issue title.
         */
        title: pulumi.Input<string>;
        /**
         * A resource identifier for the user created the issue.
         */
        userId: pulumi.Input<string>;
    }

    /**
     * Issue contract Properties.
     */
    export interface IssueContractPropertiesResponse {
        /**
         * A resource identifier for the API the issue was created for.
         */
        apiId?: pulumi.Input<string>;
        /**
         * Date and time when the issue was created.
         */
        createdDate?: pulumi.Input<string>;
        /**
         * Text describing the issue.
         */
        description: pulumi.Input<string>;
        /**
         * Status of the issue.
         */
        state?: pulumi.Input<string>;
        /**
         * The issue title.
         */
        title: pulumi.Input<string>;
        /**
         * A resource identifier for the user created the issue.
         */
        userId: pulumi.Input<string>;
    }

    /**
     * The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.
     */
    export interface LoggerContractProperties {
        /**
         * The name and SendRule connection string of the event hub for azureEventHub logger.
         * Instrumentation key for applicationInsights logger.
         */
        credentials: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Logger description.
         */
        description?: pulumi.Input<string>;
        /**
         * Whether records are buffered in the logger before publishing. Default is assumed to be true.
         */
        isBuffered?: pulumi.Input<boolean>;
        /**
         * Logger type.
         */
        loggerType: pulumi.Input<string>;
        /**
         * Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.
     */
    export interface LoggerContractPropertiesResponse {
        /**
         * The name and SendRule connection string of the event hub for azureEventHub logger.
         * Instrumentation key for applicationInsights logger.
         */
        credentials: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Logger description.
         */
        description?: pulumi.Input<string>;
        /**
         * Whether records are buffered in the logger before publishing. Default is assumed to be true.
         */
        isBuffered?: pulumi.Input<boolean>;
        /**
         * Logger type.
         */
        loggerType: pulumi.Input<string>;
        /**
         * Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * NamedValue Contract properties.
     */
    export interface NamedValueContractPropertiesResponse {
        /**
         * Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
         */
        displayName: pulumi.Input<string>;
        /**
         * Determines whether the value is a secret and should be encrypted or not. Default value is false.
         */
        secret?: pulumi.Input<boolean>;
        /**
         * Optional tags that when provided can be used to filter the NamedValue list.
         */
        tags?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * NamedValue Contract properties.
     */
    export interface NamedValueCreateContractProperties {
        /**
         * Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
         */
        displayName: pulumi.Input<string>;
        /**
         * Determines whether the value is a secret and should be encrypted or not. Default value is false.
         */
        secret?: pulumi.Input<boolean>;
        /**
         * Optional tags that when provided can be used to filter the NamedValue list.
         */
        tags?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * API OAuth2 Authentication settings details.
     */
    export interface OAuth2AuthenticationSettingsContract {
        /**
         * OAuth authorization server identifier.
         */
        authorizationServerId?: pulumi.Input<string>;
        /**
         * operations scope.
         */
        scope?: pulumi.Input<string>;
    }

    /**
     * API OAuth2 Authentication settings details.
     */
    export interface OAuth2AuthenticationSettingsContractResponse {
        /**
         * OAuth authorization server identifier.
         */
        authorizationServerId?: pulumi.Input<string>;
        /**
         * operations scope.
         */
        scope?: pulumi.Input<string>;
    }

    /**
     * API OAuth2 Authentication settings details.
     */
    export interface OpenIdAuthenticationSettingsContract {
        /**
         * How to send token to the server.
         */
        bearerTokenSendingMethods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * OAuth authorization server identifier.
         */
        openidProviderId?: pulumi.Input<string>;
    }

    /**
     * API OAuth2 Authentication settings details.
     */
    export interface OpenIdAuthenticationSettingsContractResponse {
        /**
         * How to send token to the server.
         */
        bearerTokenSendingMethods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * OAuth authorization server identifier.
         */
        openidProviderId?: pulumi.Input<string>;
    }

    /**
     * OpenID Connect Providers Contract.
     */
    export interface OpenidConnectProviderContractProperties {
        /**
         * Client ID of developer console which is the client application.
         */
        clientId: pulumi.Input<string>;
        /**
         * Client Secret of developer console which is the client application.
         */
        clientSecret?: pulumi.Input<string>;
        /**
         * User-friendly description of OpenID Connect Provider.
         */
        description?: pulumi.Input<string>;
        /**
         * User-friendly OpenID Connect Provider name.
         */
        displayName: pulumi.Input<string>;
        /**
         * Metadata endpoint URI.
         */
        metadataEndpoint: pulumi.Input<string>;
    }

    /**
     * OpenID Connect Providers Contract.
     */
    export interface OpenidConnectProviderContractPropertiesResponse {
        /**
         * Client ID of developer console which is the client application.
         */
        clientId: pulumi.Input<string>;
        /**
         * Client Secret of developer console which is the client application.
         */
        clientSecret?: pulumi.Input<string>;
        /**
         * User-friendly description of OpenID Connect Provider.
         */
        description?: pulumi.Input<string>;
        /**
         * User-friendly OpenID Connect Provider name.
         */
        displayName: pulumi.Input<string>;
        /**
         * Metadata endpoint URI.
         */
        metadataEndpoint: pulumi.Input<string>;
    }

    /**
     * Operation Contract Properties
     */
    export interface OperationContractProperties {
        /**
         * Description of the operation. May include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        /**
         * Operation Name.
         */
        displayName: pulumi.Input<string>;
        /**
         * A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
         */
        method: pulumi.Input<string>;
        /**
         * Operation Policies
         */
        policies?: pulumi.Input<string>;
        /**
         * An entity containing request details.
         */
        request?: pulumi.Input<inputs.apimanagement.RequestContract>;
        /**
         * Array of Operation responses.
         */
        responses?: pulumi.Input<pulumi.Input<inputs.apimanagement.ResponseContract>[]>;
        /**
         * Collection of URL template parameters.
         */
        templateParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContract>[]>;
        /**
         * Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
         */
        urlTemplate: pulumi.Input<string>;
    }

    /**
     * Operation Contract Properties
     */
    export interface OperationContractPropertiesResponse {
        /**
         * Description of the operation. May include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        /**
         * Operation Name.
         */
        displayName: pulumi.Input<string>;
        /**
         * A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
         */
        method: pulumi.Input<string>;
        /**
         * Operation Policies
         */
        policies?: pulumi.Input<string>;
        /**
         * An entity containing request details.
         */
        request?: pulumi.Input<inputs.apimanagement.RequestContractResponse>;
        /**
         * Array of Operation responses.
         */
        responses?: pulumi.Input<pulumi.Input<inputs.apimanagement.ResponseContractResponse>[]>;
        /**
         * Collection of URL template parameters.
         */
        templateParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContractResponse>[]>;
        /**
         * Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
         */
        urlTemplate: pulumi.Input<string>;
    }

    /**
     * Operation parameters details.
     */
    export interface ParameterContract {
        /**
         * Default parameter value.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Parameter description.
         */
        description?: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies whether parameter is required or not.
         */
        required?: pulumi.Input<boolean>;
        /**
         * Parameter type.
         */
        type: pulumi.Input<string>;
        /**
         * Parameter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Operation parameters details.
     */
    export interface ParameterContractResponse {
        /**
         * Default parameter value.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Parameter description.
         */
        description?: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies whether parameter is required or not.
         */
        required?: pulumi.Input<boolean>;
        /**
         * Parameter type.
         */
        type: pulumi.Input<string>;
        /**
         * Parameter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
     */
    export interface PipelineDiagnosticSettings {
        /**
         * Diagnostic settings for request.
         */
        request?: pulumi.Input<inputs.apimanagement.HttpMessageDiagnostic>;
        /**
         * Diagnostic settings for response.
         */
        response?: pulumi.Input<inputs.apimanagement.HttpMessageDiagnostic>;
    }

    /**
     * Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
     */
    export interface PipelineDiagnosticSettingsResponse {
        /**
         * Diagnostic settings for request.
         */
        request?: pulumi.Input<inputs.apimanagement.HttpMessageDiagnosticResponse>;
        /**
         * Diagnostic settings for response.
         */
        response?: pulumi.Input<inputs.apimanagement.HttpMessageDiagnosticResponse>;
    }

    /**
     * Policy contract Properties.
     */
    export interface PolicyContractProperties {
        /**
         * Format of the policyContent.
         */
        format?: pulumi.Input<string>;
        /**
         * Contents of the Policy as defined by the format.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Policy contract Properties.
     */
    export interface PolicyContractPropertiesResponse {
        /**
         * Format of the policyContent.
         */
        format?: pulumi.Input<string>;
        /**
         * Contents of the Policy as defined by the format.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Product profile.
     */
    export interface ProductContractProperties {
        /**
         * whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.
         */
        approvalRequired?: pulumi.Input<boolean>;
        /**
         * Product description. May include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        /**
         * Product name.
         */
        displayName: pulumi.Input<string>;
        /**
         * whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
         */
        state?: pulumi.Input<string>;
        /**
         * Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.
         */
        subscriptionRequired?: pulumi.Input<boolean>;
        /**
         * Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
         */
        subscriptionsLimit?: pulumi.Input<number>;
        /**
         * Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
         */
        terms?: pulumi.Input<string>;
    }

    /**
     * Product profile.
     */
    export interface ProductContractPropertiesResponse {
        /**
         * whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.
         */
        approvalRequired?: pulumi.Input<boolean>;
        /**
         * Product description. May include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        /**
         * Product name.
         */
        displayName: pulumi.Input<string>;
        /**
         * whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
         */
        state?: pulumi.Input<string>;
        /**
         * Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.
         */
        subscriptionRequired?: pulumi.Input<boolean>;
        /**
         * Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
         */
        subscriptionsLimit?: pulumi.Input<number>;
        /**
         * Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
         */
        terms?: pulumi.Input<string>;
    }

    /**
     * Property Contract properties.
     */
    export interface PropertyContractProperties {
        /**
         * Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
         */
        displayName: pulumi.Input<string>;
        /**
         * Determines whether the value is a secret and should be encrypted or not. Default value is false.
         */
        secret?: pulumi.Input<boolean>;
        /**
         * Optional tags that when provided can be used to filter the property list.
         */
        tags?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Property Contract properties.
     */
    export interface PropertyContractPropertiesResponse {
        /**
         * Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
         */
        displayName: pulumi.Input<string>;
        /**
         * Determines whether the value is a secret and should be encrypted or not. Default value is false.
         */
        secret?: pulumi.Input<boolean>;
        /**
         * Optional tags that when provided can be used to filter the property list.
         */
        tags?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Operation request/response representation details.
     */
    export interface RepresentationContract {
        /**
         * Specifies a registered or custom content type for this representation, e.g. application/xml.
         */
        contentType: pulumi.Input<string>;
        /**
         * Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
         */
        formParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContract>[]>;
        /**
         * An example of the representation.
         */
        sample?: pulumi.Input<string>;
        /**
         * Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
         */
        schemaId?: pulumi.Input<string>;
        /**
         * Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
         */
        typeName?: pulumi.Input<string>;
    }

    /**
     * Operation request/response representation details.
     */
    export interface RepresentationContractResponse {
        /**
         * Specifies a registered or custom content type for this representation, e.g. application/xml.
         */
        contentType: pulumi.Input<string>;
        /**
         * Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
         */
        formParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContractResponse>[]>;
        /**
         * An example of the representation.
         */
        sample?: pulumi.Input<string>;
        /**
         * Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
         */
        schemaId?: pulumi.Input<string>;
        /**
         * Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
         */
        typeName?: pulumi.Input<string>;
    }

    /**
     * Operation request details.
     */
    export interface RequestContract {
        /**
         * Operation request description.
         */
        description?: pulumi.Input<string>;
        /**
         * Collection of operation request headers.
         */
        headers?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContract>[]>;
        /**
         * Collection of operation request query parameters.
         */
        queryParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContract>[]>;
        /**
         * Collection of operation request representations.
         */
        representations?: pulumi.Input<pulumi.Input<inputs.apimanagement.RepresentationContract>[]>;
    }

    /**
     * Operation request details.
     */
    export interface RequestContractResponse {
        /**
         * Operation request description.
         */
        description?: pulumi.Input<string>;
        /**
         * Collection of operation request headers.
         */
        headers?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContractResponse>[]>;
        /**
         * Collection of operation request query parameters.
         */
        queryParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContractResponse>[]>;
        /**
         * Collection of operation request representations.
         */
        representations?: pulumi.Input<pulumi.Input<inputs.apimanagement.RepresentationContractResponse>[]>;
    }

    /**
     * Resource location data properties.
     */
    export interface ResourceLocationDataContract {
        /**
         * The city or locality where the resource is located.
         */
        city?: pulumi.Input<string>;
        /**
         * The country or region where the resource is located.
         */
        countryOrRegion?: pulumi.Input<string>;
        /**
         * The district, state, or province where the resource is located.
         */
        district?: pulumi.Input<string>;
        /**
         * A canonical name for the geographic or physical location.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Resource location data properties.
     */
    export interface ResourceLocationDataContractResponse {
        /**
         * The city or locality where the resource is located.
         */
        city?: pulumi.Input<string>;
        /**
         * The country or region where the resource is located.
         */
        countryOrRegion?: pulumi.Input<string>;
        /**
         * The district, state, or province where the resource is located.
         */
        district?: pulumi.Input<string>;
        /**
         * A canonical name for the geographic or physical location.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Operation response details.
     */
    export interface ResponseContract {
        /**
         * Operation response description.
         */
        description?: pulumi.Input<string>;
        /**
         * Collection of operation response headers.
         */
        headers?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContract>[]>;
        /**
         * Collection of operation response representations.
         */
        representations?: pulumi.Input<pulumi.Input<inputs.apimanagement.RepresentationContract>[]>;
        /**
         * Operation response HTTP status code.
         */
        statusCode: pulumi.Input<number>;
    }

    /**
     * Operation response details.
     */
    export interface ResponseContractResponse {
        /**
         * Operation response description.
         */
        description?: pulumi.Input<string>;
        /**
         * Collection of operation response headers.
         */
        headers?: pulumi.Input<pulumi.Input<inputs.apimanagement.ParameterContractResponse>[]>;
        /**
         * Collection of operation response representations.
         */
        representations?: pulumi.Input<pulumi.Input<inputs.apimanagement.RepresentationContractResponse>[]>;
        /**
         * Operation response HTTP status code.
         */
        statusCode: pulumi.Input<number>;
    }

    /**
     * Sampling settings for Diagnostic.
     */
    export interface SamplingSettings {
        /**
         * Rate of sampling for fixed-rate sampling.
         */
        percentage?: pulumi.Input<number>;
        /**
         * Sampling type.
         */
        samplingType?: pulumi.Input<string>;
    }

    /**
     * Sampling settings for Diagnostic.
     */
    export interface SamplingSettingsResponse {
        /**
         * Rate of sampling for fixed-rate sampling.
         */
        percentage?: pulumi.Input<number>;
        /**
         * Sampling type.
         */
        samplingType?: pulumi.Input<string>;
    }

    /**
     * API Schema create or update contract Properties.
     */
    export interface SchemaContractProperties {
        /**
         * Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.
         */
        contentType: pulumi.Input<string>;
        /**
         * Create or update Properties of the Schema Document.
         */
        document?: pulumi.Input<inputs.apimanagement.SchemaDocumentProperties>;
    }

    /**
     * API Schema create or update contract Properties.
     */
    export interface SchemaContractPropertiesResponse {
        /**
         * Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.
         */
        contentType: pulumi.Input<string>;
        /**
         * Create or update Properties of the Schema Document.
         */
        document?: pulumi.Input<inputs.apimanagement.SchemaDocumentPropertiesResponse>;
    }

    /**
     * Schema Document Properties.
     */
    export interface SchemaDocumentProperties {
        /**
         * Types definitions. Used for Swagger/OpenAPI schemas only, null otherwise.
         */
        definitions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Schema Document Properties.
     */
    export interface SchemaDocumentPropertiesResponse {
        /**
         * Types definitions. Used for Swagger/OpenAPI schemas only, null otherwise.
         */
        definitions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Subscription details.
     */
    export interface SubscriptionContractPropertiesResponse {
        /**
         * Determines whether tracing is enabled
         */
        allowTracing?: pulumi.Input<boolean>;
        /**
         * Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        createdDate: pulumi.Input<string>;
        /**
         * The name of the subscription, or null if the subscription has no name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        endDate?: pulumi.Input<string>;
        /**
         * Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        notificationDate?: pulumi.Input<string>;
        /**
         * The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier.
         */
        ownerId?: pulumi.Input<string>;
        /**
         * Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
         */
        primaryKey?: pulumi.Input<string>;
        /**
         * Scope like /products/{productId} or /apis or /apis/{apiId}.
         */
        scope: pulumi.Input<string>;
        /**
         * Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
         */
        secondaryKey?: pulumi.Input<string>;
        /**
         * Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        startDate?: pulumi.Input<string>;
        /**
         * Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
         */
        state: pulumi.Input<string>;
        /**
         * Optional subscription comment added by an administrator.
         */
        stateComment?: pulumi.Input<string>;
    }

    /**
     * Parameters supplied to the Create subscription operation.
     */
    export interface SubscriptionCreateParameterProperties {
        /**
         * Determines whether tracing can be enabled
         */
        allowTracing?: pulumi.Input<boolean>;
        /**
         * Subscription name.
         */
        displayName: pulumi.Input<string>;
        /**
         * User (user id path) for whom subscription is being created in form /users/{userId}
         */
        ownerId?: pulumi.Input<string>;
        /**
         * Primary subscription key. If not specified during request key will be generated automatically.
         */
        primaryKey?: pulumi.Input<string>;
        /**
         * Scope like /products/{productId} or /apis or /apis/{apiId}.
         */
        scope: pulumi.Input<string>;
        /**
         * Secondary subscription key. If not specified during request key will be generated automatically.
         */
        secondaryKey?: pulumi.Input<string>;
        /**
         * Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * Subscription key parameter names details.
     */
    export interface SubscriptionKeyParameterNamesContract {
        /**
         * Subscription key header name.
         */
        header?: pulumi.Input<string>;
        /**
         * Subscription key query string parameter name.
         */
        query?: pulumi.Input<string>;
    }

    /**
     * Subscription key parameter names details.
     */
    export interface SubscriptionKeyParameterNamesContractResponse {
        /**
         * Subscription key header name.
         */
        header?: pulumi.Input<string>;
        /**
         * Subscription key query string parameter name.
         */
        query?: pulumi.Input<string>;
    }

    /**
     * Tag contract Properties.
     */
    export interface TagContractProperties {
        /**
         * Tag name.
         */
        displayName: pulumi.Input<string>;
    }

    /**
     * Tag contract Properties.
     */
    export interface TagContractPropertiesResponse {
        /**
         * Tag name.
         */
        displayName: pulumi.Input<string>;
    }

    /**
     * Parameters supplied to the Create TagDescription operation.
     */
    export interface TagDescriptionBaseProperties {
        /**
         * Description of the Tag.
         */
        description?: pulumi.Input<string>;
        /**
         * Description of the external resources describing the tag.
         */
        externalDocsDescription?: pulumi.Input<string>;
        /**
         * Absolute URL of external resources describing the tag.
         */
        externalDocsUrl?: pulumi.Input<string>;
    }

    /**
     * TagDescription contract Properties.
     */
    export interface TagDescriptionContractPropertiesResponse {
        /**
         * Description of the Tag.
         */
        description?: pulumi.Input<string>;
        /**
         * Tag name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * Description of the external resources describing the tag.
         */
        externalDocsDescription?: pulumi.Input<string>;
        /**
         * Absolute URL of external resources describing the tag.
         */
        externalDocsUrl?: pulumi.Input<string>;
        /**
         * Identifier of the tag in the form of /tags/{tagId}
         */
        tagId?: pulumi.Input<string>;
    }

    /**
     * OAuth acquire token request body parameter (www-url-form-encoded).
     */
    export interface TokenBodyParameterContract {
        /**
         * body parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * body parameter value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * OAuth acquire token request body parameter (www-url-form-encoded).
     */
    export interface TokenBodyParameterContractResponse {
        /**
         * body parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * body parameter value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * User profile.
     */
    export interface UserContractPropertiesResponse {
        /**
         * Email address.
         */
        email?: pulumi.Input<string>;
        /**
         * First name.
         */
        firstName?: pulumi.Input<string>;
        /**
         * Collection of groups user is part of.
         */
        groups: pulumi.Input<pulumi.Input<inputs.apimanagement.GroupContractPropertiesResponse>[]>;
        /**
         * Collection of user identities.
         */
        identities?: pulumi.Input<pulumi.Input<inputs.apimanagement.UserIdentityContractResponse>[]>;
        /**
         * Last name.
         */
        lastName?: pulumi.Input<string>;
        /**
         * Optional note about a user set by the administrator.
         */
        note?: pulumi.Input<string>;
        /**
         * Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
         */
        registrationDate?: pulumi.Input<string>;
        /**
         * Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * Parameters supplied to the Create User operation.
     */
    export interface UserCreateParameterProperties {
        /**
         * Determines the type of application which send the create user request. Default is old publisher portal.
         */
        appType?: pulumi.Input<string>;
        /**
         * Determines the type of confirmation e-mail that will be sent to the newly created user.
         */
        confirmation?: pulumi.Input<string>;
        /**
         * Email address. Must not be empty and must be unique within the service instance.
         */
        email: pulumi.Input<string>;
        /**
         * First name.
         */
        firstName: pulumi.Input<string>;
        /**
         * Collection of user identities.
         */
        identities?: pulumi.Input<pulumi.Input<inputs.apimanagement.UserIdentityContract>[]>;
        /**
         * Last name.
         */
        lastName: pulumi.Input<string>;
        /**
         * Optional note about a user set by the administrator.
         */
        note?: pulumi.Input<string>;
        /**
         * User Password. If no value is provided, a default password is generated.
         */
        password?: pulumi.Input<string>;
        /**
         * Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * User identity details.
     */
    export interface UserIdentityContract {
        /**
         * Identifier value within provider.
         */
        id?: pulumi.Input<string>;
        /**
         * Identity provider name.
         */
        provider?: pulumi.Input<string>;
    }

    /**
     * User identity details.
     */
    export interface UserIdentityContractResponse {
        /**
         * Identifier value within provider.
         */
        id?: pulumi.Input<string>;
        /**
         * Identity provider name.
         */
        provider?: pulumi.Input<string>;
    }

    /**
     * Configuration of a virtual network to which API Management service is deployed.
     */
    export interface VirtualNetworkConfiguration {
        /**
         * The full resource ID of a subnet in a virtual network to deploy the API Management service in.
         */
        subnetResourceId?: pulumi.Input<string>;
    }

    /**
     * Configuration of a virtual network to which API Management service is deployed.
     */
    export interface VirtualNetworkConfigurationResponse {
        /**
         * The full resource ID of a subnet in a virtual network to deploy the API Management service in.
         */
        subnetResourceId?: pulumi.Input<string>;
        /**
         * The name of the subnet.
         */
        subnetname: pulumi.Input<string>;
        /**
         * The virtual network ID. This is typically a GUID. Expect a null GUID by default.
         */
        vnetid: pulumi.Input<string>;
    }

    /**
     * Properties of server X509Names.
     */
    export interface X509CertificateName {
        /**
         * Thumbprint for the Issuer of the Certificate.
         */
        issuerCertificateThumbprint?: pulumi.Input<string>;
        /**
         * Common Name of the Certificate.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Properties of server X509Names.
     */
    export interface X509CertificateNameResponse {
        /**
         * Thumbprint for the Issuer of the Certificate.
         */
        issuerCertificateThumbprint?: pulumi.Input<string>;
        /**
         * Common Name of the Certificate.
         */
        name?: pulumi.Input<string>;
    }
}

export namespace appconfiguration {
    /**
     * The properties of a configuration store.
     */
    export interface ConfigurationStoreProperties {
    }

    /**
     * The properties of a configuration store.
     */
    export interface ConfigurationStorePropertiesResponse {
        /**
         * The creation date of configuration store.
         */
        creationDate: pulumi.Input<string>;
        /**
         * The DNS endpoint where the configuration store API will be available.
         */
        endpoint: pulumi.Input<string>;
        /**
         * The provisioning state of the configuration store.
         */
        provisioningState: pulumi.Input<string>;
    }

    export interface ResourceIdentity {
        /**
         * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    export interface ResourceIdentityResponse {
        /**
         * The principal id of the identity. This property will only be provided for a system-assigned identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Describes a configuration store SKU.
     */
    export interface Sku {
        /**
         * The SKU name of the configuration store.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Describes a configuration store SKU.
     */
    export interface SkuResponse {
        /**
         * The SKU name of the configuration store.
         */
        name: pulumi.Input<string>;
    }
}

export namespace authorization {
    /**
     * Lock owner properties.
     */
    export interface ManagementLockOwner {
        /**
         * The application ID of the lock owner.
         */
        applicationId?: pulumi.Input<string>;
    }

    /**
     * Lock owner properties.
     */
    export interface ManagementLockOwnerResponse {
        /**
         * The application ID of the lock owner.
         */
        applicationId?: pulumi.Input<string>;
    }

    /**
     * The lock properties.
     */
    export interface ManagementLockProperties {
        /**
         * The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized users are able to read and modify the resources, but not delete. ReadOnly means authorized users can only read from a resource, but they can't modify or delete it.
         */
        level: pulumi.Input<string>;
        /**
         * Notes about the lock. Maximum of 512 characters.
         */
        notes?: pulumi.Input<string>;
        /**
         * The owners of the lock.
         */
        owners?: pulumi.Input<pulumi.Input<inputs.authorization.ManagementLockOwner>[]>;
    }

    /**
     * The lock properties.
     */
    export interface ManagementLockPropertiesResponse {
        /**
         * The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized users are able to read and modify the resources, but not delete. ReadOnly means authorized users can only read from a resource, but they can't modify or delete it.
         */
        level: pulumi.Input<string>;
        /**
         * Notes about the lock. Maximum of 512 characters.
         */
        notes?: pulumi.Input<string>;
        /**
         * The owners of the lock.
         */
        owners?: pulumi.Input<pulumi.Input<inputs.authorization.ManagementLockOwnerResponse>[]>;
    }

    /**
     * The parameter definitions for parameters used in the policy. The keys are the parameter names.
     */
    export interface ParameterDefinitions {
    }

    /**
     * The parameter definitions for parameters used in the policy. The keys are the parameter names.
     */
    export interface ParameterDefinitionsResponse {
    }

    /**
     * The parameter values for the policy rule. The keys are the parameter names.
     */
    export interface ParameterValues {
    }

    /**
     * The parameter values for the policy rule. The keys are the parameter names.
     */
    export interface ParameterValuesResponse {
    }

    /**
     * The policy definition group.
     */
    export interface PolicyDefinitionGroup {
        /**
         * A resource ID of a resource that contains additional metadata about the group.
         */
        additionalMetadataId?: pulumi.Input<string>;
        /**
         * The group's category.
         */
        category?: pulumi.Input<string>;
        /**
         * The group's description.
         */
        description?: pulumi.Input<string>;
        /**
         * The group's display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The name of the group.
         */
        name: pulumi.Input<string>;
    }

    /**
     * The policy definition group.
     */
    export interface PolicyDefinitionGroupResponse {
        /**
         * A resource ID of a resource that contains additional metadata about the group.
         */
        additionalMetadataId?: pulumi.Input<string>;
        /**
         * The group's category.
         */
        category?: pulumi.Input<string>;
        /**
         * The group's description.
         */
        description?: pulumi.Input<string>;
        /**
         * The group's display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The name of the group.
         */
        name: pulumi.Input<string>;
    }

    /**
     * The policy definition properties.
     */
    export interface PolicyDefinitionProperties {
        /**
         * The policy definition description.
         */
        description?: pulumi.Input<string>;
        /**
         * The display name of the policy definition.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
         */
        mode?: pulumi.Input<string>;
        /**
         * The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
         */
        parameters?: pulumi.Input<inputs.authorization.ParameterDefinitions>;
        /**
         * The policy rule.
         */
        policyRule?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
         */
        policyType?: pulumi.Input<string>;
    }

    /**
     * The policy definition properties.
     */
    export interface PolicyDefinitionPropertiesResponse {
        /**
         * The policy definition description.
         */
        description?: pulumi.Input<string>;
        /**
         * The display name of the policy definition.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
         */
        mode?: pulumi.Input<string>;
        /**
         * The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
         */
        parameters?: pulumi.Input<inputs.authorization.ParameterDefinitionsResponse>;
        /**
         * The policy rule.
         */
        policyRule?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
         */
        policyType?: pulumi.Input<string>;
    }

    /**
     * The policy definition reference.
     */
    export interface PolicyDefinitionReference {
        /**
         * The name of the groups that this policy definition reference belongs to.
         */
        groupNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The parameter values for the referenced policy rule. The keys are the parameter names.
         */
        parameters?: pulumi.Input<inputs.authorization.ParameterValues>;
        /**
         * The ID of the policy definition or policy set definition.
         */
        policyDefinitionId: pulumi.Input<string>;
        /**
         * A unique id (within the policy set definition) for this policy definition reference.
         */
        policyDefinitionReferenceId?: pulumi.Input<string>;
    }

    /**
     * The policy definition reference.
     */
    export interface PolicyDefinitionReferenceResponse {
        /**
         * The name of the groups that this policy definition reference belongs to.
         */
        groupNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The parameter values for the referenced policy rule. The keys are the parameter names.
         */
        parameters?: pulumi.Input<inputs.authorization.ParameterValuesResponse>;
        /**
         * The ID of the policy definition or policy set definition.
         */
        policyDefinitionId: pulumi.Input<string>;
        /**
         * A unique id (within the policy set definition) for this policy definition reference.
         */
        policyDefinitionReferenceId?: pulumi.Input<string>;
    }

    /**
     * The policy set definition properties.
     */
    export interface PolicySetDefinitionProperties {
        /**
         * The policy set definition description.
         */
        description?: pulumi.Input<string>;
        /**
         * The display name of the policy set definition.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The policy set definition parameters that can be used in policy definition references.
         */
        parameters?: pulumi.Input<inputs.authorization.ParameterDefinitions>;
        /**
         * The metadata describing groups of policy definition references within the policy set definition.
         */
        policyDefinitionGroups?: pulumi.Input<pulumi.Input<inputs.authorization.PolicyDefinitionGroup>[]>;
        /**
         * An array of policy definition references.
         */
        policyDefinitions: pulumi.Input<pulumi.Input<inputs.authorization.PolicyDefinitionReference>[]>;
        /**
         * The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
         */
        policyType?: pulumi.Input<string>;
    }

    /**
     * The policy set definition properties.
     */
    export interface PolicySetDefinitionPropertiesResponse {
        /**
         * The policy set definition description.
         */
        description?: pulumi.Input<string>;
        /**
         * The display name of the policy set definition.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The policy set definition parameters that can be used in policy definition references.
         */
        parameters?: pulumi.Input<inputs.authorization.ParameterDefinitionsResponse>;
        /**
         * The metadata describing groups of policy definition references within the policy set definition.
         */
        policyDefinitionGroups?: pulumi.Input<pulumi.Input<inputs.authorization.PolicyDefinitionGroupResponse>[]>;
        /**
         * An array of policy definition references.
         */
        policyDefinitions: pulumi.Input<pulumi.Input<inputs.authorization.PolicyDefinitionReferenceResponse>[]>;
        /**
         * The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
         */
        policyType?: pulumi.Input<string>;
    }
}

export namespace automation {
    /**
     * The properties of the create Advanced Schedule.
     */
    export interface AdvancedSchedule {
        /**
         * Days of the month that the job should execute on. Must be between 1 and 31.
         */
        monthDays?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Occurrences of days within a month.
         */
        monthlyOccurrences?: pulumi.Input<pulumi.Input<inputs.automation.AdvancedScheduleMonthlyOccurrence>[]>;
        /**
         * Days of the week that the job should execute on.
         */
        weekDays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The properties of the create advanced schedule monthly occurrence.
     */
    export interface AdvancedScheduleMonthlyOccurrence {
        /**
         * Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
         */
        day?: pulumi.Input<string>;
        /**
         * Occurrence of the week within the month. Must be between 1 and 5
         */
        occurrence?: pulumi.Input<number>;
    }

    /**
     * The properties of the create advanced schedule monthly occurrence.
     */
    export interface AdvancedScheduleMonthlyOccurrenceResponse {
        /**
         * Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
         */
        day?: pulumi.Input<string>;
        /**
         * Occurrence of the week within the month. Must be between 1 and 5
         */
        occurrence?: pulumi.Input<number>;
    }

    /**
     * The properties of the create Advanced Schedule.
     */
    export interface AdvancedScheduleResponse {
        /**
         * Days of the month that the job should execute on. Must be between 1 and 31.
         */
        monthDays?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Occurrences of days within a month.
         */
        monthlyOccurrences?: pulumi.Input<pulumi.Input<inputs.automation.AdvancedScheduleMonthlyOccurrenceResponse>[]>;
        /**
         * Days of the week that the job should execute on.
         */
        weekDays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The parameters supplied to the create or update account properties.
     */
    export interface AutomationAccountCreateOrUpdateProperties {
        /**
         * Gets or sets account SKU.
         */
        sku?: pulumi.Input<inputs.automation.Sku>;
    }

    /**
     * Definition of the account property.
     */
    export interface AutomationAccountPropertiesResponse {
        /**
         * Gets the creation time.
         */
        creationTime: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the last modified by.
         */
        lastModifiedBy?: pulumi.Input<string>;
        /**
         * Gets the last modified time.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * Gets or sets the SKU of account.
         */
        sku?: pulumi.Input<inputs.automation.SkuResponse>;
        /**
         * Gets status of account.
         */
        state: pulumi.Input<string>;
    }

    /**
     * The properties of the create certificate operation.
     */
    export interface CertificateCreateOrUpdateProperties {
        /**
         * Gets or sets the base64 encoded value of the certificate.
         */
        base64Value: pulumi.Input<string>;
        /**
         * Gets or sets the description of the certificate.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the is exportable flag of the certificate.
         */
        isExportable?: pulumi.Input<boolean>;
        /**
         * Gets or sets the thumbprint of the certificate.
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * Properties of the certificate.
     */
    export interface CertificatePropertiesResponse {
        /**
         * Gets the creation time.
         */
        creationTime: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets the expiry time of the certificate.
         */
        expiryTime: pulumi.Input<string>;
        /**
         * Gets the is exportable flag of the certificate.
         */
        isExportable: pulumi.Input<boolean>;
        /**
         * Gets the last modified time.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * Gets the thumbprint of the certificate.
         */
        thumbprint: pulumi.Input<string>;
    }

    /**
     * The properties of the create connection properties
     */
    export interface ConnectionCreateOrUpdateProperties {
        /**
         * Gets or sets the connectionType of the connection.
         */
        connectionType: pulumi.Input<inputs.automation.ConnectionTypeAssociationProperty>;
        /**
         * Gets or sets the description of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the field definition properties of the connection.
         */
        fieldDefinitionValues?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Definition of the connection properties.
     */
    export interface ConnectionPropertiesResponse {
        /**
         * Gets or sets the connectionType of the connection.
         */
        connectionType?: pulumi.Input<inputs.automation.ConnectionTypeAssociationPropertyResponse>;
        /**
         * Gets the creation time.
         */
        creationTime: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets the field definition values of the connection.
         */
        fieldDefinitionValues: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets the last modified time.
         */
        lastModifiedTime: pulumi.Input<string>;
    }

    /**
     * The connection type property associated with the entity.
     */
    export interface ConnectionTypeAssociationProperty {
        /**
         * Gets or sets the name of the connection type.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The connection type property associated with the entity.
     */
    export interface ConnectionTypeAssociationPropertyResponse {
        /**
         * Gets or sets the name of the connection type.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The properties of the create connection type.
     */
    export interface ConnectionTypeCreateOrUpdateProperties {
        /**
         * Gets or sets the field definitions of the connection type.
         */
        fieldDefinitions: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets a Boolean value to indicate if the connection type is global.
         */
        isGlobal?: pulumi.Input<boolean>;
    }

    /**
     * Properties of the connection type.
     */
    export interface ConnectionTypePropertiesResponse {
        /**
         * Gets the creation time.
         */
        creationTime: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets the field definitions of the connection type.
         */
        fieldDefinitions: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets a Boolean value to indicate if the connection type is global.
         */
        isGlobal?: pulumi.Input<boolean>;
        /**
         * Gets or sets the last modified time.
         */
        lastModifiedTime?: pulumi.Input<string>;
    }

    /**
     * Definition of the runbook property type.
     */
    export interface ContentHash {
        /**
         * Gets or sets the content hash algorithm used to hash the content.
         */
        algorithm: pulumi.Input<string>;
        /**
         * Gets or sets expected hash value of the content.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Definition of the runbook property type.
     */
    export interface ContentHashResponse {
        /**
         * Gets or sets the content hash algorithm used to hash the content.
         */
        algorithm: pulumi.Input<string>;
        /**
         * Gets or sets expected hash value of the content.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Definition of the content link.
     */
    export interface ContentLink {
        /**
         * Gets or sets the hash.
         */
        contentHash?: pulumi.Input<inputs.automation.ContentHash>;
        /**
         * Gets or sets the uri of the runbook content.
         */
        uri?: pulumi.Input<string>;
        /**
         * Gets or sets the version of the content.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Definition of the content link.
     */
    export interface ContentLinkResponse {
        /**
         * Gets or sets the hash.
         */
        contentHash?: pulumi.Input<inputs.automation.ContentHashResponse>;
        /**
         * Gets or sets the uri of the runbook content.
         */
        uri?: pulumi.Input<string>;
        /**
         * Gets or sets the version of the content.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Definition of the content source.
     */
    export interface ContentSource {
        /**
         * Gets or sets the hash.
         */
        hash?: pulumi.Input<inputs.automation.ContentHash>;
        /**
         * Gets or sets the content source type.
         */
        type?: pulumi.Input<string>;
        /**
         * Gets or sets the value of the content. This is based on the content source type.
         */
        value?: pulumi.Input<string>;
        /**
         * Gets or sets the version of the content.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Definition of the content source.
     */
    export interface ContentSourceResponse {
        /**
         * Gets or sets the hash.
         */
        hash?: pulumi.Input<inputs.automation.ContentHashResponse>;
        /**
         * Gets or sets the content source type.
         */
        type?: pulumi.Input<string>;
        /**
         * Gets or sets the value of the content. This is based on the content source type.
         */
        value?: pulumi.Input<string>;
        /**
         * Gets or sets the version of the content.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * The properties of the create credential operation.
     */
    export interface CredentialCreateOrUpdateProperties {
        /**
         * Gets or sets the description of the credential.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the password of the credential.
         */
        password: pulumi.Input<string>;
        /**
         * Gets or sets the user name of the credential.
         */
        userName: pulumi.Input<string>;
    }

    /**
     * Definition of the credential properties
     */
    export interface CredentialPropertiesResponse {
        /**
         * Gets the creation time.
         */
        creationTime: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets the last modified time.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * Gets the user name of the credential.
         */
        userName: pulumi.Input<string>;
    }

    /**
     * The Dsc configuration property associated with the entity.
     */
    export interface DscConfigurationAssociationProperty {
        /**
         * Gets or sets the name of the Dsc configuration.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The Dsc configuration property associated with the entity.
     */
    export interface DscConfigurationAssociationPropertyResponse {
        /**
         * Gets or sets the name of the Dsc configuration.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The properties to create or update configuration.
     */
    export interface DscConfigurationCreateOrUpdateProperties {
        /**
         * Gets or sets the description of the configuration.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets progress log option.
         */
        logProgress?: pulumi.Input<boolean>;
        /**
         * Gets or sets verbose log option.
         */
        logVerbose?: pulumi.Input<boolean>;
        /**
         * Gets or sets the configuration parameters.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the source.
         */
        source: pulumi.Input<inputs.automation.ContentSource>;
    }

    /**
     * Definition of the configuration property type.
     */
    export interface DscConfigurationPropertiesResponse {
        /**
         * Gets or sets the creation time.
         */
        creationTime?: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the job count of the configuration.
         */
        jobCount?: pulumi.Input<number>;
        /**
         * Gets or sets the last modified time.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * Gets or sets verbose log option.
         */
        logVerbose?: pulumi.Input<boolean>;
        /**
         * Gets the number of compiled node configurations.
         */
        nodeConfigurationCount?: pulumi.Input<number>;
        /**
         * Gets or sets the configuration parameters.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the provisioning state of the configuration.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Gets or sets the source.
         */
        source?: pulumi.Input<inputs.automation.ContentSourceResponse>;
        /**
         * Gets or sets the state of the configuration.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * The parameter properties supplied to the create or update node configuration operation.
     */
    export interface DscNodeConfigurationCreateOrUpdateParametersProperties {
        /**
         * Gets or sets the configuration of the node.
         */
        configuration: pulumi.Input<inputs.automation.DscConfigurationAssociationProperty>;
        /**
         * If a new build version of NodeConfiguration is required.
         */
        incrementNodeConfigurationBuild?: pulumi.Input<boolean>;
        /**
         * Gets or sets the source.
         */
        source: pulumi.Input<inputs.automation.ContentSource>;
    }

    /**
     * Properties for the DscNodeConfiguration
     */
    export interface DscNodeConfigurationPropertiesResponse {
        /**
         * Gets or sets the configuration of the node.
         */
        configuration?: pulumi.Input<inputs.automation.DscConfigurationAssociationPropertyResponse>;
        /**
         * Gets or sets creation time.
         */
        creationTime?: pulumi.Input<string>;
        /**
         * If a new build version of NodeConfiguration is required.
         */
        incrementNodeConfigurationBuild?: pulumi.Input<boolean>;
        /**
         * Gets or sets the last modified time.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * Number of nodes with this node configuration assigned
         */
        nodeCount?: pulumi.Input<number>;
        /**
         * Source of node configuration.
         */
        source?: pulumi.Input<string>;
    }

    /**
     * The parameters supplied to the create job schedule operation.
     */
    export interface JobScheduleCreateProperties {
        /**
         * Gets or sets a list of job properties.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the hybrid worker group that the scheduled job should run on.
         */
        runOn?: pulumi.Input<string>;
        /**
         * Gets or sets the runbook.
         */
        runbook: pulumi.Input<inputs.automation.RunbookAssociationProperty>;
        /**
         * Gets or sets the schedule.
         */
        schedule: pulumi.Input<inputs.automation.ScheduleAssociationProperty>;
    }

    /**
     * Definition of job schedule parameters.
     */
    export interface JobSchedulePropertiesResponse {
        /**
         * Gets or sets the id of job schedule.
         */
        jobScheduleId?: pulumi.Input<string>;
        /**
         * Gets or sets the parameters of the job schedule.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the hybrid worker group that the scheduled job should run on.
         */
        runOn?: pulumi.Input<string>;
        /**
         * Gets or sets the runbook.
         */
        runbook?: pulumi.Input<inputs.automation.RunbookAssociationPropertyResponse>;
        /**
         * Gets or sets the schedule.
         */
        schedule?: pulumi.Input<inputs.automation.ScheduleAssociationPropertyResponse>;
    }

    /**
     * The parameters supplied to the create or update module properties.
     */
    export interface ModuleCreateOrUpdateProperties {
        /**
         * Gets or sets the module content link.
         */
        contentLink: pulumi.Input<inputs.automation.ContentLink>;
    }

    /**
     * Definition of the module error info type.
     */
    export interface ModuleErrorInfoResponse {
        /**
         * Gets or sets the error code.
         */
        code?: pulumi.Input<string>;
        /**
         * Gets or sets the error message.
         */
        message?: pulumi.Input<string>;
    }

    /**
     * Definition of the module property type.
     */
    export interface ModulePropertiesResponse {
        /**
         * Gets or sets the activity count of the module.
         */
        activityCount?: pulumi.Input<number>;
        /**
         * Gets or sets the contentLink of the module.
         */
        contentLink?: pulumi.Input<inputs.automation.ContentLinkResponse>;
        /**
         * Gets or sets the creation time.
         */
        creationTime?: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the error info of the module.
         */
        error?: pulumi.Input<inputs.automation.ModuleErrorInfoResponse>;
        /**
         * Gets or sets type of module, if its composite or not.
         */
        isComposite?: pulumi.Input<boolean>;
        /**
         * Gets or sets the isGlobal flag of the module.
         */
        isGlobal?: pulumi.Input<boolean>;
        /**
         * Gets or sets the last modified time.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * Gets or sets the provisioning state of the module.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Gets or sets the size in bytes of the module.
         */
        sizeInBytes?: pulumi.Input<number>;
        /**
         * Gets or sets the version of the module.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * The parameters supplied to the create or update module properties.
     */
    export interface PythonPackageCreateProperties {
        /**
         * Gets or sets the module content link.
         */
        contentLink: pulumi.Input<inputs.automation.ContentLink>;
    }

    /**
     * The runbook property associated with the entity.
     */
    export interface RunbookAssociationProperty {
        /**
         * Gets or sets the name of the runbook.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The runbook property associated with the entity.
     */
    export interface RunbookAssociationPropertyResponse {
        /**
         * Gets or sets the name of the runbook.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The parameters supplied to the create or update runbook properties.
     */
    export interface RunbookCreateOrUpdateProperties {
        /**
         * Gets or sets the description of the runbook.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the draft runbook properties.
         */
        draft?: pulumi.Input<inputs.automation.RunbookDraft>;
        /**
         * Gets or sets the activity-level tracing options of the runbook.
         */
        logActivityTrace?: pulumi.Input<number>;
        /**
         * Gets or sets progress log option.
         */
        logProgress?: pulumi.Input<boolean>;
        /**
         * Gets or sets verbose log option.
         */
        logVerbose?: pulumi.Input<boolean>;
        /**
         * Gets or sets the published runbook content link.
         */
        publishContentLink?: pulumi.Input<inputs.automation.ContentLink>;
        /**
         * Gets or sets the type of the runbook.
         */
        runbookType: pulumi.Input<string>;
    }

    export interface RunbookDraft {
        /**
         * Gets or sets the creation time of the runbook draft.
         */
        creationTime?: pulumi.Input<string>;
        /**
         * Gets or sets the draft runbook content link.
         */
        draftContentLink?: pulumi.Input<inputs.automation.ContentLink>;
        /**
         * Gets or sets whether runbook is in edit mode.
         */
        inEdit?: pulumi.Input<boolean>;
        /**
         * Gets or sets the last modified time of the runbook draft.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * Gets or sets the runbook output types.
         */
        outputTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Gets or sets the runbook draft parameters.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    export interface RunbookDraftResponse {
        /**
         * Gets or sets the creation time of the runbook draft.
         */
        creationTime?: pulumi.Input<string>;
        /**
         * Gets or sets the draft runbook content link.
         */
        draftContentLink?: pulumi.Input<inputs.automation.ContentLinkResponse>;
        /**
         * Gets or sets whether runbook is in edit mode.
         */
        inEdit?: pulumi.Input<boolean>;
        /**
         * Gets or sets the last modified time of the runbook draft.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * Gets or sets the runbook output types.
         */
        outputTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Gets or sets the runbook draft parameters.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Definition of the runbook property type.
     */
    export interface RunbookPropertiesResponse {
        /**
         * Gets or sets the creation time.
         */
        creationTime?: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the draft runbook properties.
         */
        draft?: pulumi.Input<inputs.automation.RunbookDraftResponse>;
        /**
         * Gets or sets the job count of the runbook.
         */
        jobCount?: pulumi.Input<number>;
        /**
         * Gets or sets the last modified by.
         */
        lastModifiedBy?: pulumi.Input<string>;
        /**
         * Gets or sets the last modified time.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * Gets or sets the option to log activity trace of the runbook.
         */
        logActivityTrace?: pulumi.Input<number>;
        /**
         * Gets or sets progress log option.
         */
        logProgress?: pulumi.Input<boolean>;
        /**
         * Gets or sets verbose log option.
         */
        logVerbose?: pulumi.Input<boolean>;
        /**
         * Gets or sets the runbook output types.
         */
        outputTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Gets or sets the runbook parameters.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the provisioning state of the runbook.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Gets or sets the published runbook content link.
         */
        publishContentLink?: pulumi.Input<inputs.automation.ContentLinkResponse>;
        /**
         * Gets or sets the type of the runbook.
         */
        runbookType?: pulumi.Input<string>;
        /**
         * Gets or sets the state of the runbook.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * The schedule property associated with the entity.
     */
    export interface ScheduleAssociationProperty {
        /**
         * Gets or sets the name of the Schedule.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The schedule property associated with the entity.
     */
    export interface ScheduleAssociationPropertyResponse {
        /**
         * Gets or sets the name of the Schedule.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The parameters supplied to the create or update schedule operation.
     */
    export interface ScheduleCreateOrUpdateProperties {
        /**
         * Gets or sets the AdvancedSchedule.
         */
        advancedSchedule?: pulumi.Input<inputs.automation.AdvancedSchedule>;
        /**
         * Gets or sets the description of the schedule.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the end time of the schedule.
         */
        expiryTime?: pulumi.Input<string>;
        /**
         * Gets or sets the frequency of the schedule.
         */
        frequency: pulumi.Input<string>;
        /**
         * Gets or sets the interval of the schedule.
         */
        interval?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the start time of the schedule.
         */
        startTime: pulumi.Input<string>;
        /**
         * Gets or sets the time zone of the schedule.
         */
        timeZone?: pulumi.Input<string>;
    }

    /**
     * Definition of schedule parameters.
     */
    export interface SchedulePropertiesResponse {
        /**
         * Gets or sets the advanced schedule.
         */
        advancedSchedule?: pulumi.Input<inputs.automation.AdvancedScheduleResponse>;
        /**
         * Gets or sets the creation time.
         */
        creationTime?: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the end time of the schedule.
         */
        expiryTime?: pulumi.Input<string>;
        /**
         * Gets or sets the expiry time's offset in minutes.
         */
        expiryTimeOffsetMinutes?: pulumi.Input<number>;
        /**
         * Gets or sets the frequency of the schedule.
         */
        frequency?: pulumi.Input<string>;
        /**
         * Gets or sets the interval of the schedule.
         */
        interval?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets a value indicating whether this schedule is enabled.
         */
        isEnabled?: pulumi.Input<boolean>;
        /**
         * Gets or sets the last modified time.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * Gets or sets the next run time of the schedule.
         */
        nextRun?: pulumi.Input<string>;
        /**
         * Gets or sets the next run time's offset in minutes.
         */
        nextRunOffsetMinutes?: pulumi.Input<number>;
        /**
         * Gets or sets the start time of the schedule.
         */
        startTime?: pulumi.Input<string>;
        /**
         * Gets the start time's offset in minutes.
         */
        startTimeOffsetMinutes: pulumi.Input<number>;
        /**
         * Gets or sets the time zone of the schedule.
         */
        timeZone?: pulumi.Input<string>;
    }

    /**
     * The account SKU.
     */
    export interface Sku {
        /**
         * Gets or sets the SKU capacity.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Gets or sets the SKU family.
         */
        family?: pulumi.Input<string>;
        /**
         * Gets or sets the SKU name of the account.
         */
        name: pulumi.Input<string>;
    }

    /**
     * The account SKU.
     */
    export interface SkuResponse {
        /**
         * Gets or sets the SKU capacity.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Gets or sets the SKU family.
         */
        family?: pulumi.Input<string>;
        /**
         * Gets or sets the SKU name of the account.
         */
        name: pulumi.Input<string>;
    }

    /**
     * The properties of the create variable operation.
     */
    export interface VariableCreateOrUpdateProperties {
        /**
         * Gets or sets the description of the variable.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the encrypted flag of the variable.
         */
        isEncrypted?: pulumi.Input<boolean>;
        /**
         * Gets or sets the value of the variable.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Definition of the variable properties
     */
    export interface VariablePropertiesResponse {
        /**
         * Gets or sets the creation time.
         */
        creationTime?: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the encrypted flag of the variable.
         */
        isEncrypted?: pulumi.Input<boolean>;
        /**
         * Gets or sets the last modified time.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * Gets or sets the value of the variable.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Definition of the watcher properties
     */
    export interface WatcherProperties {
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the frequency at which the watcher is invoked.
         */
        executionFrequencyInSeconds?: pulumi.Input<number>;
        /**
         * Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
         */
        scriptName?: pulumi.Input<string>;
        /**
         * Gets or sets the parameters of the script.
         */
        scriptParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the name of the hybrid worker group the watcher will run on.
         */
        scriptRunOn?: pulumi.Input<string>;
    }

    /**
     * Definition of the watcher properties
     */
    export interface WatcherPropertiesResponse {
        /**
         * Gets or sets the creation time.
         */
        creationTime: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the frequency at which the watcher is invoked.
         */
        executionFrequencyInSeconds?: pulumi.Input<number>;
        /**
         * Details of the user who last modified the watcher.
         */
        lastModifiedBy: pulumi.Input<string>;
        /**
         * Gets or sets the last modified time.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
         */
        scriptName?: pulumi.Input<string>;
        /**
         * Gets or sets the parameters of the script.
         */
        scriptParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the name of the hybrid worker group the watcher will run on.
         */
        scriptRunOn?: pulumi.Input<string>;
        /**
         * Gets the current status of the watcher.
         */
        status: pulumi.Input<string>;
    }

    /**
     * The properties of the create webhook operation.
     */
    export interface WebhookCreateOrUpdateProperties {
        /**
         * Gets or sets the expiry time.
         */
        expiryTime?: pulumi.Input<string>;
        /**
         * Gets or sets the value of the enabled flag of webhook.
         */
        isEnabled?: pulumi.Input<boolean>;
        /**
         * Gets or sets the parameters of the job.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the name of the hybrid worker group the webhook job will run on.
         */
        runOn?: pulumi.Input<string>;
        /**
         * Gets or sets the runbook.
         */
        runbook?: pulumi.Input<inputs.automation.RunbookAssociationProperty>;
        /**
         * Gets or sets the uri.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * Definition of the webhook properties
     */
    export interface WebhookPropertiesResponse {
        /**
         * Gets or sets the creation time.
         */
        creationTime?: pulumi.Input<string>;
        /**
         * Gets or sets the description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the expiry time.
         */
        expiryTime?: pulumi.Input<string>;
        /**
         * Gets or sets the value of the enabled flag of the webhook.
         */
        isEnabled?: pulumi.Input<boolean>;
        /**
         * Gets or sets the last invoked time.
         */
        lastInvokedTime?: pulumi.Input<string>;
        /**
         * Details of the user who last modified the Webhook
         */
        lastModifiedBy?: pulumi.Input<string>;
        /**
         * Gets or sets the last modified time.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * Gets or sets the parameters of the job that is created when the webhook calls the runbook it is associated with.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the name of the hybrid worker group the webhook job will run on.
         */
        runOn?: pulumi.Input<string>;
        /**
         * Gets or sets the runbook the webhook is associated with.
         */
        runbook?: pulumi.Input<inputs.automation.RunbookAssociationPropertyResponse>;
        /**
         * Gets or sets the webhook uri.
         */
        uri?: pulumi.Input<string>;
    }
}

export namespace azurestack {
    /**
     * Customer subscription properties.
     */
    export interface CustomerSubscriptionProperties {
        /**
         * Tenant Id.
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * Customer subscription properties.
     */
    export interface CustomerSubscriptionPropertiesResponse {
        /**
         * Tenant Id.
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * Properties of the Azure Stack registration resource
     */
    export interface RegistrationParameterProperties {
        /**
         * The token identifying registered Azure Stack
         */
        registrationToken: pulumi.Input<string>;
    }

    /**
     * Properties portion of the registration resource.
     */
    export interface RegistrationPropertiesResponse {
        /**
         * Specifies the billing mode for the Azure Stack registration.
         */
        billingModel?: pulumi.Input<string>;
        /**
         * The identifier of the registered Azure Stack.
         */
        cloudId?: pulumi.Input<string>;
        /**
         * The object identifier associated with the Azure Stack connecting to Azure.
         */
        objectId?: pulumi.Input<string>;
    }
}

export namespace batch {
    /**
     * Properties of an application package
     */
    export interface ApplicationPackageProperties {
    }

    /**
     * Properties of an application package
     */
    export interface ApplicationPackagePropertiesResponse {
        /**
         * The format of the application package, if the package is active.
         */
        format: pulumi.Input<string>;
        /**
         * The time at which the package was last activated, if the package is active.
         */
        lastActivationTime: pulumi.Input<string>;
        /**
         * The current state of the application package.
         */
        state: pulumi.Input<string>;
        /**
         * The URL for the application package in Azure Storage.
         */
        storageUrl: pulumi.Input<string>;
        /**
         * The UTC time at which the Azure Storage URL will expire.
         */
        storageUrlExpiry: pulumi.Input<string>;
    }

    export interface ApplicationPackageReference {
        id: pulumi.Input<string>;
        /**
         * If this is omitted, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences. If you are calling the REST API directly, the HTTP status code is 409.
         */
        version?: pulumi.Input<string>;
    }

    export interface ApplicationPackageReferenceResponse {
        id: pulumi.Input<string>;
        /**
         * If this is omitted, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences. If you are calling the REST API directly, the HTTP status code is 409.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * The properties associated with the Application.
     */
    export interface ApplicationProperties {
        /**
         * A value indicating whether packages within the application may be overwritten using the same version string.
         */
        allowUpdates?: pulumi.Input<boolean>;
        /**
         * The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.
         */
        defaultVersion?: pulumi.Input<string>;
        /**
         * The display name for the application.
         */
        displayName?: pulumi.Input<string>;
    }

    /**
     * The properties associated with the Application.
     */
    export interface ApplicationPropertiesResponse {
        /**
         * A value indicating whether packages within the application may be overwritten using the same version string.
         */
        allowUpdates?: pulumi.Input<boolean>;
        /**
         * The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.
         */
        defaultVersion?: pulumi.Input<string>;
        /**
         * The display name for the application.
         */
        displayName?: pulumi.Input<string>;
    }

    export interface AutoScaleRunErrorResponse {
        /**
         * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
         */
        code: pulumi.Input<string>;
        details?: pulumi.Input<pulumi.Input<inputs.batch.AutoScaleRunErrorResponse>[]>;
        /**
         * A message describing the error, intended to be suitable for display in a user interface.
         */
        message: pulumi.Input<string>;
    }

    export interface AutoScaleRunResponse {
        error?: pulumi.Input<inputs.batch.AutoScaleRunErrorResponse>;
        evaluationTime: pulumi.Input<string>;
        /**
         * Each variable value is returned in the form $variable=value, and variables are separated by semicolons.
         */
        results?: pulumi.Input<string>;
    }

    export interface AutoScaleSettings {
        /**
         * If omitted, the default value is 15 minutes (PT15M).
         */
        evaluationInterval?: pulumi.Input<string>;
        formula: pulumi.Input<string>;
    }

    export interface AutoScaleSettingsResponse {
        /**
         * If omitted, the default value is 15 minutes (PT15M).
         */
        evaluationInterval?: pulumi.Input<string>;
        formula: pulumi.Input<string>;
    }

    /**
     * The properties related to the auto-storage account.
     */
    export interface AutoStorageBaseProperties {
        /**
         * The resource ID of the storage account to be used for auto-storage account.
         */
        storageAccountId: pulumi.Input<string>;
    }

    /**
     * Contains information about the auto-storage account associated with a Batch account.
     */
    export interface AutoStoragePropertiesResponse {
        /**
         * The UTC time at which storage keys were last synchronized with the Batch account.
         */
        lastKeySync: pulumi.Input<string>;
        /**
         * The resource ID of the storage account to be used for auto-storage account.
         */
        storageAccountId: pulumi.Input<string>;
    }

    export interface AutoUserSpecification {
        /**
         * The default value is nonAdmin.
         */
        elevationLevel?: pulumi.Input<string>;
        /**
         * The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks.
         */
        scope?: pulumi.Input<string>;
    }

    export interface AutoUserSpecificationResponse {
        /**
         * The default value is nonAdmin.
         */
        elevationLevel?: pulumi.Input<string>;
        /**
         * The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks.
         */
        scope?: pulumi.Input<string>;
    }

    export interface AzureBlobFileSystemConfiguration {
        /**
         * This property is mutually exclusive with sasKey and one must be specified.
         */
        accountKey?: pulumi.Input<string>;
        accountName: pulumi.Input<string>;
        /**
         * These are 'net use' options in Windows and 'mount' options in Linux.
         */
        blobfuseOptions?: pulumi.Input<string>;
        containerName: pulumi.Input<string>;
        /**
         * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
         */
        relativeMountPath: pulumi.Input<string>;
        /**
         * This property is mutually exclusive with accountKey and one must be specified.
         */
        sasKey?: pulumi.Input<string>;
    }

    export interface AzureBlobFileSystemConfigurationResponse {
        /**
         * This property is mutually exclusive with sasKey and one must be specified.
         */
        accountKey?: pulumi.Input<string>;
        accountName: pulumi.Input<string>;
        /**
         * These are 'net use' options in Windows and 'mount' options in Linux.
         */
        blobfuseOptions?: pulumi.Input<string>;
        containerName: pulumi.Input<string>;
        /**
         * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
         */
        relativeMountPath: pulumi.Input<string>;
        /**
         * This property is mutually exclusive with accountKey and one must be specified.
         */
        sasKey?: pulumi.Input<string>;
    }

    export interface AzureFileShareConfiguration {
        accountKey: pulumi.Input<string>;
        accountName: pulumi.Input<string>;
        /**
         * This is of the form 'https://{account}.file.core.windows.net/'.
         */
        azureFileUrl: pulumi.Input<string>;
        /**
         * These are 'net use' options in Windows and 'mount' options in Linux.
         */
        mountOptions?: pulumi.Input<string>;
        /**
         * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
         */
        relativeMountPath: pulumi.Input<string>;
    }

    export interface AzureFileShareConfigurationResponse {
        accountKey: pulumi.Input<string>;
        accountName: pulumi.Input<string>;
        /**
         * This is of the form 'https://{account}.file.core.windows.net/'.
         */
        azureFileUrl: pulumi.Input<string>;
        /**
         * These are 'net use' options in Windows and 'mount' options in Linux.
         */
        mountOptions?: pulumi.Input<string>;
        /**
         * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
         */
        relativeMountPath: pulumi.Input<string>;
    }

    /**
     * The properties of a Batch account.
     */
    export interface BatchAccountCreateProperties {
        /**
         * The properties related to the auto-storage account.
         */
        autoStorage?: pulumi.Input<inputs.batch.AutoStorageBaseProperties>;
        /**
         * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
         */
        encryption?: pulumi.Input<inputs.batch.EncryptionProperties>;
        /**
         * A reference to the Azure key vault associated with the Batch account.
         */
        keyVaultReference?: pulumi.Input<inputs.batch.KeyVaultReference>;
        /**
         * The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
         */
        poolAllocationMode?: pulumi.Input<string>;
        /**
         * If not specified, the default value is 'enabled'.
         */
        publicNetworkAccess?: pulumi.Input<string>;
    }

    /**
     * The identity of the Batch account, if configured. This is only used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration.
     */
    export interface BatchAccountIdentity {
        /**
         * The type of identity used for the Batch account.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The identity of the Batch account, if configured. This is only used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration.
     */
    export interface BatchAccountIdentityResponse {
        /**
         * The principal id of the Batch account. This property will only be provided for a system assigned identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of identity used for the Batch account.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Account specific properties.
     */
    export interface BatchAccountPropertiesResponse {
        /**
         * The account endpoint used to interact with the Batch service.
         */
        accountEndpoint: pulumi.Input<string>;
        activeJobAndJobScheduleQuota: pulumi.Input<number>;
        /**
         * Contains information about the auto-storage account associated with a Batch account.
         */
        autoStorage: pulumi.Input<inputs.batch.AutoStoragePropertiesResponse>;
        /**
         * For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
         */
        dedicatedCoreQuota: pulumi.Input<number>;
        /**
         * A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
         */
        dedicatedCoreQuotaPerVMFamily: pulumi.Input<pulumi.Input<inputs.batch.VirtualMachineFamilyCoreQuotaResponse>[]>;
        /**
         * Batch is transitioning its core quota system for dedicated cores to be enforced per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply.
         */
        dedicatedCoreQuotaPerVMFamilyEnforced: pulumi.Input<boolean>;
        /**
         * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
         */
        encryption: pulumi.Input<inputs.batch.EncryptionPropertiesResponse>;
        /**
         * Identifies the Azure key vault associated with a Batch account.
         */
        keyVaultReference: pulumi.Input<inputs.batch.KeyVaultReferenceResponse>;
        /**
         * For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
         */
        lowPriorityCoreQuota: pulumi.Input<number>;
        /**
         * The allocation mode for creating pools in the Batch account.
         */
        poolAllocationMode: pulumi.Input<string>;
        poolQuota: pulumi.Input<number>;
        /**
         * List of private endpoint connections associated with the Batch account
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.batch.PrivateEndpointConnectionResponse>[]>;
        /**
         * The provisioned state of the resource
         */
        provisioningState: pulumi.Input<string>;
        /**
         * If not specified, the default value is 'enabled'.
         */
        publicNetworkAccess: pulumi.Input<string>;
    }

    export interface CIFSMountConfiguration {
        /**
         * These are 'net use' options in Windows and 'mount' options in Linux.
         */
        mountOptions?: pulumi.Input<string>;
        password: pulumi.Input<string>;
        /**
         * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
         */
        relativeMountPath: pulumi.Input<string>;
        source: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface CIFSMountConfigurationResponse {
        /**
         * These are 'net use' options in Windows and 'mount' options in Linux.
         */
        mountOptions?: pulumi.Input<string>;
        password: pulumi.Input<string>;
        /**
         * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
         */
        relativeMountPath: pulumi.Input<string>;
        source: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    /**
     * Certificate properties for create operations
     */
    export interface CertificateCreateOrUpdateProperties {
        /**
         * The maximum size is 10KB.
         */
        data: pulumi.Input<string>;
        /**
         * The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
         */
        format?: pulumi.Input<string>;
        /**
         * This must not be specified if the certificate format is Cer.
         */
        password?: pulumi.Input<string>;
        /**
         * This must match the thumbprint from the name.
         */
        thumbprint?: pulumi.Input<string>;
        /**
         * This must match the first portion of the certificate name. Currently required to be 'SHA1'.
         */
        thumbprintAlgorithm?: pulumi.Input<string>;
    }

    /**
     * Certificate properties.
     */
    export interface CertificatePropertiesResponse {
        /**
         * This is only returned when the certificate provisioningState is 'Failed'.
         */
        deleteCertificateError: pulumi.Input<inputs.batch.DeleteCertificateErrorResponse>;
        /**
         * The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
         */
        format?: pulumi.Input<string>;
        /**
         * The previous provisioned state of the resource
         */
        previousProvisioningState: pulumi.Input<string>;
        previousProvisioningStateTransitionTime: pulumi.Input<string>;
        provisioningState: pulumi.Input<string>;
        provisioningStateTransitionTime: pulumi.Input<string>;
        /**
         * The public key of the certificate.
         */
        publicData: pulumi.Input<string>;
        /**
         * This must match the thumbprint from the name.
         */
        thumbprint?: pulumi.Input<string>;
        /**
         * This must match the first portion of the certificate name. Currently required to be 'SHA1'.
         */
        thumbprintAlgorithm?: pulumi.Input<string>;
    }

    export interface CertificateReference {
        id: pulumi.Input<string>;
        /**
         * The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
         */
        storeLocation?: pulumi.Input<string>;
        /**
         * This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.
         */
        storeName?: pulumi.Input<string>;
        visibility?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CertificateReferenceResponse {
        id: pulumi.Input<string>;
        /**
         * The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
         */
        storeLocation?: pulumi.Input<string>;
        /**
         * This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.
         */
        storeName?: pulumi.Input<string>;
        visibility?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CloudServiceConfiguration {
        /**
         * Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. 6 - OS Family 6, equivalent to Windows Server 2019. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
         */
        osFamily: pulumi.Input<string>;
        /**
         * The default value is * which specifies the latest operating system version for the specified OS family.
         */
        osVersion?: pulumi.Input<string>;
    }

    export interface CloudServiceConfigurationResponse {
        /**
         * Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. 6 - OS Family 6, equivalent to Windows Server 2019. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
         */
        osFamily: pulumi.Input<string>;
        /**
         * The default value is * which specifies the latest operating system version for the specified OS family.
         */
        osVersion?: pulumi.Input<string>;
    }

    export interface ContainerConfiguration {
        /**
         * This is the full image reference, as would be specified to "docker pull". An image will be sourced from the default Docker registry unless the image is fully qualified with an alternative registry.
         */
        containerImageNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * If any images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.
         */
        containerRegistries?: pulumi.Input<pulumi.Input<inputs.batch.ContainerRegistry>[]>;
        type: pulumi.Input<string>;
    }

    export interface ContainerConfigurationResponse {
        /**
         * This is the full image reference, as would be specified to "docker pull". An image will be sourced from the default Docker registry unless the image is fully qualified with an alternative registry.
         */
        containerImageNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * If any images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.
         */
        containerRegistries?: pulumi.Input<pulumi.Input<inputs.batch.ContainerRegistryResponse>[]>;
        type: pulumi.Input<string>;
    }

    export interface ContainerRegistry {
        password: pulumi.Input<string>;
        /**
         * If omitted, the default is "docker.io".
         */
        registryServer?: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface ContainerRegistryResponse {
        password: pulumi.Input<string>;
        /**
         * If omitted, the default is "docker.io".
         */
        registryServer?: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    /**
     * Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them.
     */
    export interface DataDisk {
        /**
         * Values are:
         *
         *  none - The caching mode for the disk is not enabled.
         *  readOnly - The caching mode for the disk is read only.
         *  readWrite - The caching mode for the disk is read and write.
         *
         *  The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
         */
        caching?: pulumi.Input<string>;
        diskSizeGB: pulumi.Input<number>;
        /**
         * The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.
         */
        lun: pulumi.Input<number>;
        /**
         * If omitted, the default is "Standard_LRS". Values are:
         *
         *  Standard_LRS - The data disk should use standard locally redundant storage.
         *  Premium_LRS - The data disk should use premium locally redundant storage.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them.
     */
    export interface DataDiskResponse {
        /**
         * Values are:
         *
         *  none - The caching mode for the disk is not enabled.
         *  readOnly - The caching mode for the disk is read only.
         *  readWrite - The caching mode for the disk is read and write.
         *
         *  The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
         */
        caching?: pulumi.Input<string>;
        diskSizeGB: pulumi.Input<number>;
        /**
         * The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.
         */
        lun: pulumi.Input<number>;
        /**
         * If omitted, the default is "Standard_LRS". Values are:
         *
         *  Standard_LRS - The data disk should use standard locally redundant storage.
         *  Premium_LRS - The data disk should use premium locally redundant storage.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * An error response from the Batch service.
     */
    export interface DeleteCertificateErrorResponse {
        /**
         * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
         */
        code: pulumi.Input<string>;
        /**
         * A list of additional details about the error.
         */
        details?: pulumi.Input<pulumi.Input<inputs.batch.DeleteCertificateErrorResponse>[]>;
        /**
         * A message describing the error, intended to be suitable for display in a user interface.
         */
        message: pulumi.Input<string>;
        /**
         * The target of the particular error. For example, the name of the property in error.
         */
        target?: pulumi.Input<string>;
    }

    export interface DeploymentConfiguration {
        /**
         * This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.
         */
        cloudServiceConfiguration?: pulumi.Input<inputs.batch.CloudServiceConfiguration>;
        /**
         * This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
         */
        virtualMachineConfiguration?: pulumi.Input<inputs.batch.VirtualMachineConfiguration>;
    }

    export interface DeploymentConfigurationResponse {
        /**
         * This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.
         */
        cloudServiceConfiguration?: pulumi.Input<inputs.batch.CloudServiceConfigurationResponse>;
        /**
         * This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
         */
        virtualMachineConfiguration?: pulumi.Input<inputs.batch.VirtualMachineConfigurationResponse>;
    }

    /**
     * The disk encryption configuration applied on compute nodes in the pool. Disk encryption configuration is not supported on Linux pool created with Virtual Machine Image or Shared Image Gallery Image.
     */
    export interface DiskEncryptionConfiguration {
        /**
         * On Linux pool, only "TemporaryDisk" is supported; on Windows pool, "OsDisk" and "TemporaryDisk" must be specified.
         */
        targets?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The disk encryption configuration applied on compute nodes in the pool. Disk encryption configuration is not supported on Linux pool created with Virtual Machine Image or Shared Image Gallery Image.
     */
    export interface DiskEncryptionConfigurationResponse {
        /**
         * On Linux pool, only "TemporaryDisk" is supported; on Windows pool, "OsDisk" and "TemporaryDisk" must be specified.
         */
        targets?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
     */
    export interface EncryptionProperties {
        /**
         * Type of the key source.
         */
        keySource?: pulumi.Input<string>;
        /**
         * Additional details when using Microsoft.KeyVault
         */
        keyVaultProperties?: pulumi.Input<inputs.batch.KeyVaultProperties>;
    }

    /**
     * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
     */
    export interface EncryptionPropertiesResponse {
        /**
         * Type of the key source.
         */
        keySource?: pulumi.Input<string>;
        /**
         * Additional details when using Microsoft.KeyVault
         */
        keyVaultProperties?: pulumi.Input<inputs.batch.KeyVaultPropertiesResponse>;
    }

    export interface EnvironmentSetting {
        name: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface EnvironmentSettingResponse {
        name: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface FixedScaleSettings {
        /**
         * If omitted, the default value is Requeue.
         */
        nodeDeallocationOption?: pulumi.Input<string>;
        /**
         * The default value is 15 minutes. Timeout values use ISO 8601 format. For example, use PT10M for 10 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
         */
        resizeTimeout?: pulumi.Input<string>;
        /**
         * At least one of targetDedicatedNodes, targetLowPriorityNodes must be set.
         */
        targetDedicatedNodes?: pulumi.Input<number>;
        /**
         * At least one of targetDedicatedNodes, targetLowPriorityNodes must be set.
         */
        targetLowPriorityNodes?: pulumi.Input<number>;
    }

    export interface FixedScaleSettingsResponse {
        /**
         * If omitted, the default value is Requeue.
         */
        nodeDeallocationOption?: pulumi.Input<string>;
        /**
         * The default value is 15 minutes. Timeout values use ISO 8601 format. For example, use PT10M for 10 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
         */
        resizeTimeout?: pulumi.Input<string>;
        /**
         * At least one of targetDedicatedNodes, targetLowPriorityNodes must be set.
         */
        targetDedicatedNodes?: pulumi.Input<number>;
        /**
         * At least one of targetDedicatedNodes, targetLowPriorityNodes must be set.
         */
        targetLowPriorityNodes?: pulumi.Input<number>;
    }

    export interface ImageReference {
        /**
         * This property is mutually exclusive with other properties. The Shared Image Gallery image must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
         */
        id?: pulumi.Input<string>;
        /**
         * For example, UbuntuServer or WindowsServer.
         */
        offer?: pulumi.Input<string>;
        /**
         * For example, Canonical or MicrosoftWindowsServer.
         */
        publisher?: pulumi.Input<string>;
        /**
         * For example, 18.04-LTS or 2019-Datacenter.
         */
        sku?: pulumi.Input<string>;
        /**
         * A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.
         */
        version?: pulumi.Input<string>;
    }

    export interface ImageReferenceResponse {
        /**
         * This property is mutually exclusive with other properties. The Shared Image Gallery image must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
         */
        id?: pulumi.Input<string>;
        /**
         * For example, UbuntuServer or WindowsServer.
         */
        offer?: pulumi.Input<string>;
        /**
         * For example, Canonical or MicrosoftWindowsServer.
         */
        publisher?: pulumi.Input<string>;
        /**
         * For example, 18.04-LTS or 2019-Datacenter.
         */
        sku?: pulumi.Input<string>;
        /**
         * A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.
         */
        version?: pulumi.Input<string>;
    }

    export interface InboundNatPool {
        /**
         * This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.
         */
        backendPort: pulumi.Input<number>;
        /**
         * Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
         */
        frontendPortRangeEnd: pulumi.Input<number>;
        /**
         * Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
         */
        frontendPortRangeStart: pulumi.Input<number>;
        /**
         * The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400.
         */
        name: pulumi.Input<string>;
        /**
         * The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.
         */
        networkSecurityGroupRules?: pulumi.Input<pulumi.Input<inputs.batch.NetworkSecurityGroupRule>[]>;
        protocol: pulumi.Input<string>;
    }

    export interface InboundNatPoolResponse {
        /**
         * This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.
         */
        backendPort: pulumi.Input<number>;
        /**
         * Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
         */
        frontendPortRangeEnd: pulumi.Input<number>;
        /**
         * Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
         */
        frontendPortRangeStart: pulumi.Input<number>;
        /**
         * The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400.
         */
        name: pulumi.Input<string>;
        /**
         * The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.
         */
        networkSecurityGroupRules?: pulumi.Input<pulumi.Input<inputs.batch.NetworkSecurityGroupRuleResponse>[]>;
        protocol: pulumi.Input<string>;
    }

    /**
     * KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
     */
    export interface KeyVaultProperties {
        /**
         * Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:
         *
         *  The Batch Account has a System Assigned identity
         *  The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
         *  The KeyVault has soft-delete and purge protection enabled
         */
        keyIdentifier?: pulumi.Input<string>;
    }

    /**
     * KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
     */
    export interface KeyVaultPropertiesResponse {
        /**
         * Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:
         *
         *  The Batch Account has a System Assigned identity
         *  The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
         *  The KeyVault has soft-delete and purge protection enabled
         */
        keyIdentifier?: pulumi.Input<string>;
    }

    /**
     * Identifies the Azure key vault associated with a Batch account.
     */
    export interface KeyVaultReference {
        /**
         * The resource ID of the Azure key vault associated with the Batch account.
         */
        id: pulumi.Input<string>;
        /**
         * The URL of the Azure key vault associated with the Batch account.
         */
        url: pulumi.Input<string>;
    }

    /**
     * Identifies the Azure key vault associated with a Batch account.
     */
    export interface KeyVaultReferenceResponse {
        /**
         * The resource ID of the Azure key vault associated with the Batch account.
         */
        id: pulumi.Input<string>;
        /**
         * The URL of the Azure key vault associated with the Batch account.
         */
        url: pulumi.Input<string>;
    }

    export interface LinuxUserConfiguration {
        /**
         * The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
         */
        gid?: pulumi.Input<number>;
        /**
         * The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).
         */
        sshPrivateKey?: pulumi.Input<string>;
        /**
         * The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
         */
        uid?: pulumi.Input<number>;
    }

    export interface LinuxUserConfigurationResponse {
        /**
         * The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
         */
        gid?: pulumi.Input<number>;
        /**
         * The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).
         */
        sshPrivateKey?: pulumi.Input<string>;
        /**
         * The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
         */
        uid?: pulumi.Input<number>;
    }

    /**
     * The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
     */
    export interface MetadataItem {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
     */
    export interface MetadataItemResponse {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface MountConfiguration {
        /**
         * This property is mutually exclusive with all other properties.
         */
        azureBlobFileSystemConfiguration?: pulumi.Input<inputs.batch.AzureBlobFileSystemConfiguration>;
        /**
         * This property is mutually exclusive with all other properties.
         */
        azureFileShareConfiguration?: pulumi.Input<inputs.batch.AzureFileShareConfiguration>;
        /**
         * This property is mutually exclusive with all other properties.
         */
        cifsMountConfiguration?: pulumi.Input<inputs.batch.CIFSMountConfiguration>;
        /**
         * This property is mutually exclusive with all other properties.
         */
        nfsMountConfiguration?: pulumi.Input<inputs.batch.NFSMountConfiguration>;
    }

    export interface MountConfigurationResponse {
        /**
         * This property is mutually exclusive with all other properties.
         */
        azureBlobFileSystemConfiguration?: pulumi.Input<inputs.batch.AzureBlobFileSystemConfigurationResponse>;
        /**
         * This property is mutually exclusive with all other properties.
         */
        azureFileShareConfiguration?: pulumi.Input<inputs.batch.AzureFileShareConfigurationResponse>;
        /**
         * This property is mutually exclusive with all other properties.
         */
        cifsMountConfiguration?: pulumi.Input<inputs.batch.CIFSMountConfigurationResponse>;
        /**
         * This property is mutually exclusive with all other properties.
         */
        nfsMountConfiguration?: pulumi.Input<inputs.batch.NFSMountConfigurationResponse>;
    }

    export interface NFSMountConfiguration {
        /**
         * These are 'net use' options in Windows and 'mount' options in Linux.
         */
        mountOptions?: pulumi.Input<string>;
        /**
         * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
         */
        relativeMountPath: pulumi.Input<string>;
        source: pulumi.Input<string>;
    }

    export interface NFSMountConfigurationResponse {
        /**
         * These are 'net use' options in Windows and 'mount' options in Linux.
         */
        mountOptions?: pulumi.Input<string>;
        /**
         * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
         */
        relativeMountPath: pulumi.Input<string>;
        source: pulumi.Input<string>;
    }

    /**
     * The network configuration for a pool.
     */
    export interface NetworkConfiguration {
        /**
         * Pool endpoint configuration is only supported on pools with the virtualMachineConfiguration property.
         */
        endpointConfiguration?: pulumi.Input<inputs.batch.PoolEndpointConfiguration>;
        /**
         * This property is only supported on Pools with the virtualMachineConfiguration property.
         */
        publicIPAddressConfiguration?: pulumi.Input<inputs.batch.PublicIPAddressConfiguration>;
        /**
         * The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For cloudServiceConfiguration pools, only 'classic' VNETs are supported. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
         */
        subnetId?: pulumi.Input<string>;
    }

    /**
     * The network configuration for a pool.
     */
    export interface NetworkConfigurationResponse {
        /**
         * Pool endpoint configuration is only supported on pools with the virtualMachineConfiguration property.
         */
        endpointConfiguration?: pulumi.Input<inputs.batch.PoolEndpointConfigurationResponse>;
        /**
         * This property is only supported on Pools with the virtualMachineConfiguration property.
         */
        publicIPAddressConfiguration?: pulumi.Input<inputs.batch.PublicIPAddressConfigurationResponse>;
        /**
         * The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For cloudServiceConfiguration pools, only 'classic' VNETs are supported. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
         */
        subnetId?: pulumi.Input<string>;
    }

    export interface NetworkSecurityGroupRule {
        access: pulumi.Input<string>;
        /**
         * Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
         */
        priority: pulumi.Input<number>;
        /**
         * Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.
         */
        sourceAddressPrefix: pulumi.Input<string>;
        /**
         * Valid values are '*' (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. 100-200). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be *.
         */
        sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface NetworkSecurityGroupRuleResponse {
        access: pulumi.Input<string>;
        /**
         * Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
         */
        priority: pulumi.Input<number>;
        /**
         * Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.
         */
        sourceAddressPrefix: pulumi.Input<string>;
        /**
         * Valid values are '*' (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. 100-200). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be *.
         */
        sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PoolEndpointConfiguration {
        /**
         * The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400.
         */
        inboundNatPools: pulumi.Input<pulumi.Input<inputs.batch.InboundNatPool>[]>;
    }

    export interface PoolEndpointConfigurationResponse {
        /**
         * The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400.
         */
        inboundNatPools: pulumi.Input<pulumi.Input<inputs.batch.InboundNatPoolResponse>[]>;
    }

    /**
     * Pool properties.
     */
    export interface PoolProperties {
        /**
         * The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.
         */
        applicationLicenses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.
         */
        applicationPackages?: pulumi.Input<pulumi.Input<inputs.batch.ApplicationPackageReference>[]>;
        /**
         * For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
         */
        certificates?: pulumi.Input<pulumi.Input<inputs.batch.CertificateReference>[]>;
        /**
         * Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS).
         */
        deploymentConfiguration?: pulumi.Input<inputs.batch.DeploymentConfiguration>;
        /**
         * The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
         */
        displayName?: pulumi.Input<string>;
        /**
         * This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.
         */
        interNodeCommunication?: pulumi.Input<string>;
        /**
         * The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.
         */
        maxTasksPerNode?: pulumi.Input<number>;
        /**
         * The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
         */
        metadata?: pulumi.Input<pulumi.Input<inputs.batch.MetadataItem>[]>;
        /**
         * This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.
         */
        mountConfiguration?: pulumi.Input<pulumi.Input<inputs.batch.MountConfiguration>[]>;
        /**
         * The network configuration for a pool.
         */
        networkConfiguration?: pulumi.Input<inputs.batch.NetworkConfiguration>;
        /**
         * Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
         */
        scaleSettings?: pulumi.Input<inputs.batch.ScaleSettings>;
        /**
         * In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool.
         */
        startTask?: pulumi.Input<inputs.batch.StartTask>;
        /**
         * If not specified, the default is spread.
         */
        taskSchedulingPolicy?: pulumi.Input<inputs.batch.TaskSchedulingPolicy>;
        userAccounts?: pulumi.Input<pulumi.Input<inputs.batch.UserAccount>[]>;
        /**
         * For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * Pool properties.
     */
    export interface PoolPropertiesResponse {
        allocationState: pulumi.Input<string>;
        allocationStateTransitionTime: pulumi.Input<string>;
        /**
         * The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.
         */
        applicationLicenses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.
         */
        applicationPackages?: pulumi.Input<pulumi.Input<inputs.batch.ApplicationPackageReferenceResponse>[]>;
        /**
         * This property is set only if the pool automatically scales, i.e. autoScaleSettings are used.
         */
        autoScaleRun: pulumi.Input<inputs.batch.AutoScaleRunResponse>;
        /**
         * For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
         */
        certificates?: pulumi.Input<pulumi.Input<inputs.batch.CertificateReferenceResponse>[]>;
        creationTime: pulumi.Input<string>;
        currentDedicatedNodes: pulumi.Input<number>;
        currentLowPriorityNodes: pulumi.Input<number>;
        /**
         * Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS).
         */
        deploymentConfiguration?: pulumi.Input<inputs.batch.DeploymentConfigurationResponse>;
        /**
         * The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
         */
        displayName?: pulumi.Input<string>;
        /**
         * This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.
         */
        interNodeCommunication?: pulumi.Input<string>;
        /**
         * This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state.
         */
        lastModified: pulumi.Input<string>;
        /**
         * The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.
         */
        maxTasksPerNode?: pulumi.Input<number>;
        /**
         * The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
         */
        metadata?: pulumi.Input<pulumi.Input<inputs.batch.MetadataItemResponse>[]>;
        /**
         * This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.
         */
        mountConfiguration?: pulumi.Input<pulumi.Input<inputs.batch.MountConfigurationResponse>[]>;
        /**
         * The network configuration for a pool.
         */
        networkConfiguration?: pulumi.Input<inputs.batch.NetworkConfigurationResponse>;
        provisioningState: pulumi.Input<string>;
        provisioningStateTransitionTime: pulumi.Input<string>;
        /**
         * Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady).
         */
        resizeOperationStatus: pulumi.Input<inputs.batch.ResizeOperationStatusResponse>;
        /**
         * Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
         */
        scaleSettings?: pulumi.Input<inputs.batch.ScaleSettingsResponse>;
        /**
         * In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool.
         */
        startTask?: pulumi.Input<inputs.batch.StartTaskResponse>;
        /**
         * If not specified, the default is spread.
         */
        taskSchedulingPolicy?: pulumi.Input<inputs.batch.TaskSchedulingPolicyResponse>;
        userAccounts?: pulumi.Input<pulumi.Input<inputs.batch.UserAccountResponse>[]>;
        /**
         * For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * Private endpoint connection properties.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The private endpoint of the private endpoint connection.
         */
        privateEndpoint?: pulumi.Input<inputs.batch.PrivateEndpointResponse>;
        /**
         * The private link service connection state of the private endpoint connection
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.batch.PrivateLinkServiceConnectionStateResponse>;
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Contains information about a private link resource.
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * The ETag of the resource, used for concurrency statements.
         */
        etag: pulumi.Input<string>;
        /**
         * The ID of the resource.
         */
        id: pulumi.Input<string>;
        /**
         * The name of the resource.
         */
        name: pulumi.Input<string>;
        /**
         * The properties associated with the private endpoint connection.
         */
        properties?: pulumi.Input<inputs.batch.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The private endpoint of the private endpoint connection.
     */
    export interface PrivateEndpointResponse {
        id: pulumi.Input<string>;
    }

    /**
     * The private link service connection state of the private endpoint connection
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        actionRequired: pulumi.Input<string>;
        description?: pulumi.Input<string>;
        status: pulumi.Input<string>;
    }

    /**
     * The public IP Address configuration of the networking configuration of a Pool.
     */
    export interface PublicIPAddressConfiguration {
        /**
         * The number of IPs specified here limits the maximum size of the Pool - 50 dedicated nodes or 20 low-priority nodes can be allocated for each public IP. For example, a pool needing 150 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
         */
        ipAddressIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The default value is BatchManaged
         */
        provision?: pulumi.Input<string>;
    }

    /**
     * The public IP Address configuration of the networking configuration of a Pool.
     */
    export interface PublicIPAddressConfigurationResponse {
        /**
         * The number of IPs specified here limits the maximum size of the Pool - 50 dedicated nodes or 20 low-priority nodes can be allocated for each public IP. For example, a pool needing 150 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
         */
        ipAddressIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The default value is BatchManaged
         */
        provision?: pulumi.Input<string>;
    }

    export interface ResizeErrorResponse {
        /**
         * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
         */
        code: pulumi.Input<string>;
        details?: pulumi.Input<pulumi.Input<inputs.batch.ResizeErrorResponse>[]>;
        /**
         * A message describing the error, intended to be suitable for display in a user interface.
         */
        message: pulumi.Input<string>;
    }

    /**
     * Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady).
     */
    export interface ResizeOperationStatusResponse {
        /**
         * This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady.
         */
        errors?: pulumi.Input<pulumi.Input<inputs.batch.ResizeErrorResponse>[]>;
        /**
         * The default value is requeue.
         */
        nodeDeallocationOption?: pulumi.Input<string>;
        /**
         * The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
         */
        resizeTimeout?: pulumi.Input<string>;
        startTime?: pulumi.Input<string>;
        targetDedicatedNodes?: pulumi.Input<number>;
        targetLowPriorityNodes?: pulumi.Input<number>;
    }

    export interface ResourceFile {
        /**
         * The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified.
         */
        autoStorageContainerName?: pulumi.Input<string>;
        /**
         * The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
         */
        blobPrefix?: pulumi.Input<string>;
        /**
         * This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.
         */
        fileMode?: pulumi.Input<string>;
        /**
         * If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').
         */
        filePath?: pulumi.Input<string>;
        /**
         * The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL is Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.
         */
        httpUrl?: pulumi.Input<string>;
        /**
         * The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the blob, or set the ACL for the blob or its container to allow public access.
         */
        storageContainerUrl?: pulumi.Input<string>;
    }

    export interface ResourceFileResponse {
        /**
         * The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified.
         */
        autoStorageContainerName?: pulumi.Input<string>;
        /**
         * The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
         */
        blobPrefix?: pulumi.Input<string>;
        /**
         * This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.
         */
        fileMode?: pulumi.Input<string>;
        /**
         * If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').
         */
        filePath?: pulumi.Input<string>;
        /**
         * The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL is Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.
         */
        httpUrl?: pulumi.Input<string>;
        /**
         * The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the blob, or set the ACL for the blob or its container to allow public access.
         */
        storageContainerUrl?: pulumi.Input<string>;
    }

    /**
     * Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
     */
    export interface ScaleSettings {
        /**
         * This property and fixedScale are mutually exclusive and one of the properties must be specified.
         */
        autoScale?: pulumi.Input<inputs.batch.AutoScaleSettings>;
        /**
         * This property and autoScale are mutually exclusive and one of the properties must be specified.
         */
        fixedScale?: pulumi.Input<inputs.batch.FixedScaleSettings>;
    }

    /**
     * Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
     */
    export interface ScaleSettingsResponse {
        /**
         * This property and fixedScale are mutually exclusive and one of the properties must be specified.
         */
        autoScale?: pulumi.Input<inputs.batch.AutoScaleSettingsResponse>;
        /**
         * This property and autoScale are mutually exclusive and one of the properties must be specified.
         */
        fixedScale?: pulumi.Input<inputs.batch.FixedScaleSettingsResponse>;
    }

    /**
     * In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.
     */
    export interface StartTask {
        /**
         * The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. Required if any other properties of the startTask are specified.
         */
        commandLine?: pulumi.Input<string>;
        /**
         * When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.
         */
        containerSettings?: pulumi.Input<inputs.batch.TaskContainerSettings>;
        environmentSettings?: pulumi.Input<pulumi.Input<inputs.batch.EnvironmentSetting>[]>;
        /**
         * The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.
         */
        maxTaskRetryCount?: pulumi.Input<number>;
        resourceFiles?: pulumi.Input<pulumi.Input<inputs.batch.ResourceFile>[]>;
        /**
         * If omitted, the task runs as a non-administrative user unique to the task.
         */
        userIdentity?: pulumi.Input<inputs.batch.UserIdentity>;
        /**
         * If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and scheduling error detail. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is true.
         */
        waitForSuccess?: pulumi.Input<boolean>;
    }

    /**
     * In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.
     */
    export interface StartTaskResponse {
        /**
         * The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. Required if any other properties of the startTask are specified.
         */
        commandLine?: pulumi.Input<string>;
        /**
         * When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.
         */
        containerSettings?: pulumi.Input<inputs.batch.TaskContainerSettingsResponse>;
        environmentSettings?: pulumi.Input<pulumi.Input<inputs.batch.EnvironmentSettingResponse>[]>;
        /**
         * The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.
         */
        maxTaskRetryCount?: pulumi.Input<number>;
        resourceFiles?: pulumi.Input<pulumi.Input<inputs.batch.ResourceFileResponse>[]>;
        /**
         * If omitted, the task runs as a non-administrative user unique to the task.
         */
        userIdentity?: pulumi.Input<inputs.batch.UserIdentityResponse>;
        /**
         * If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and scheduling error detail. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is true.
         */
        waitForSuccess?: pulumi.Input<boolean>;
    }

    export interface TaskContainerSettings {
        /**
         * These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by the Batch Service.
         */
        containerRunOptions?: pulumi.Input<string>;
        /**
         * This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name, the tag ":latest" is used as a default.
         */
        imageName: pulumi.Input<string>;
        /**
         * This setting can be omitted if was already provided at pool creation.
         */
        registry?: pulumi.Input<inputs.batch.ContainerRegistry>;
        workingDirectory?: pulumi.Input<string>;
    }

    export interface TaskContainerSettingsResponse {
        /**
         * These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by the Batch Service.
         */
        containerRunOptions?: pulumi.Input<string>;
        /**
         * This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name, the tag ":latest" is used as a default.
         */
        imageName: pulumi.Input<string>;
        /**
         * This setting can be omitted if was already provided at pool creation.
         */
        registry?: pulumi.Input<inputs.batch.ContainerRegistryResponse>;
        workingDirectory?: pulumi.Input<string>;
    }

    export interface TaskSchedulingPolicy {
        nodeFillType: pulumi.Input<string>;
    }

    export interface TaskSchedulingPolicyResponse {
        nodeFillType: pulumi.Input<string>;
    }

    export interface UserAccount {
        /**
         * nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
         */
        elevationLevel?: pulumi.Input<string>;
        /**
         * This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
         */
        linuxUserConfiguration?: pulumi.Input<inputs.batch.LinuxUserConfiguration>;
        name: pulumi.Input<string>;
        password: pulumi.Input<string>;
        /**
         * This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
         */
        windowsUserConfiguration?: pulumi.Input<inputs.batch.WindowsUserConfiguration>;
    }

    export interface UserAccountResponse {
        /**
         * nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
         */
        elevationLevel?: pulumi.Input<string>;
        /**
         * This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
         */
        linuxUserConfiguration?: pulumi.Input<inputs.batch.LinuxUserConfigurationResponse>;
        name: pulumi.Input<string>;
        password: pulumi.Input<string>;
        /**
         * This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
         */
        windowsUserConfiguration?: pulumi.Input<inputs.batch.WindowsUserConfigurationResponse>;
    }

    /**
     * Specify either the userName or autoUser property, but not both.
     */
    export interface UserIdentity {
        /**
         * The userName and autoUser properties are mutually exclusive; you must specify one but not both.
         */
        autoUser?: pulumi.Input<inputs.batch.AutoUserSpecification>;
        /**
         * The userName and autoUser properties are mutually exclusive; you must specify one but not both.
         */
        userName?: pulumi.Input<string>;
    }

    /**
     * Specify either the userName or autoUser property, but not both.
     */
    export interface UserIdentityResponse {
        /**
         * The userName and autoUser properties are mutually exclusive; you must specify one but not both.
         */
        autoUser?: pulumi.Input<inputs.batch.AutoUserSpecificationResponse>;
        /**
         * The userName and autoUser properties are mutually exclusive; you must specify one but not both.
         */
        userName?: pulumi.Input<string>;
    }

    export interface VirtualMachineConfiguration {
        /**
         * If specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it.
         */
        containerConfiguration?: pulumi.Input<inputs.batch.ContainerConfiguration>;
        /**
         * This property must be specified if the compute nodes in the pool need to have empty data disks attached to them.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.batch.DataDisk>[]>;
        /**
         * If specified, encryption is performed on each node in the pool during node provisioning.
         */
        diskEncryptionConfiguration?: pulumi.Input<inputs.batch.DiskEncryptionConfiguration>;
        imageReference: pulumi.Input<inputs.batch.ImageReference>;
        /**
         * This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:
         *
         *  Windows_Server - The on-premises license is for Windows Server.
         *  Windows_Client - The on-premises license is for Windows Client.
         */
        licenseType?: pulumi.Input<string>;
        /**
         * The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation.
         */
        nodeAgentSkuId: pulumi.Input<string>;
        /**
         * This property must not be specified if the imageReference specifies a Linux OS image.
         */
        windowsConfiguration?: pulumi.Input<inputs.batch.WindowsConfiguration>;
    }

    export interface VirtualMachineConfigurationResponse {
        /**
         * If specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it.
         */
        containerConfiguration?: pulumi.Input<inputs.batch.ContainerConfigurationResponse>;
        /**
         * This property must be specified if the compute nodes in the pool need to have empty data disks attached to them.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.batch.DataDiskResponse>[]>;
        /**
         * If specified, encryption is performed on each node in the pool during node provisioning.
         */
        diskEncryptionConfiguration?: pulumi.Input<inputs.batch.DiskEncryptionConfigurationResponse>;
        imageReference: pulumi.Input<inputs.batch.ImageReferenceResponse>;
        /**
         * This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:
         *
         *  Windows_Server - The on-premises license is for Windows Server.
         *  Windows_Client - The on-premises license is for Windows Client.
         */
        licenseType?: pulumi.Input<string>;
        /**
         * The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation.
         */
        nodeAgentSkuId: pulumi.Input<string>;
        /**
         * This property must not be specified if the imageReference specifies a Linux OS image.
         */
        windowsConfiguration?: pulumi.Input<inputs.batch.WindowsConfigurationResponse>;
    }

    /**
     * A VM Family and its associated core quota for the Batch account.
     */
    export interface VirtualMachineFamilyCoreQuotaResponse {
        /**
         * The core quota for the VM family for the Batch account.
         */
        coreQuota: pulumi.Input<number>;
        /**
         * The Virtual Machine family name.
         */
        name: pulumi.Input<string>;
    }

    export interface WindowsConfiguration {
        /**
         * If omitted, the default value is true.
         */
        enableAutomaticUpdates?: pulumi.Input<boolean>;
    }

    export interface WindowsConfigurationResponse {
        /**
         * If omitted, the default value is true.
         */
        enableAutomaticUpdates?: pulumi.Input<boolean>;
    }

    export interface WindowsUserConfiguration {
        /**
         * Specifies login mode for the user. The default value for VirtualMachineConfiguration pools is interactive mode and for CloudServiceConfiguration pools is batch mode.
         */
        loginMode?: pulumi.Input<string>;
    }

    export interface WindowsUserConfigurationResponse {
        /**
         * Specifies login mode for the user. The default value for VirtualMachineConfiguration pools is interactive mode and for CloudServiceConfiguration pools is batch mode.
         */
        loginMode?: pulumi.Input<string>;
    }
}

export namespace batchai {
    /**
     * Azure Application Insights information for performance counters reporting.
     */
    export interface AppInsightsReference {
        /**
         * Azure Application Insights component resource ID.
         */
        component: pulumi.Input<inputs.batchai.ResourceId>;
        /**
         * Value of the Azure Application Insights instrumentation key.
         */
        instrumentationKey?: pulumi.Input<string>;
        /**
         * KeyVault Store and Secret which contains Azure Application Insights instrumentation key. One of instrumentationKey or instrumentationKeySecretReference must be specified.
         */
        instrumentationKeySecretReference?: pulumi.Input<inputs.batchai.KeyVaultSecretReference>;
    }

    /**
     * Azure Application Insights information for performance counters reporting.
     */
    export interface AppInsightsReferenceResponse {
        /**
         * Azure Application Insights component resource ID.
         */
        component: pulumi.Input<inputs.batchai.ResourceIdResponse>;
        /**
         * Value of the Azure Application Insights instrumentation key.
         */
        instrumentationKey?: pulumi.Input<string>;
        /**
         * KeyVault Store and Secret which contains Azure Application Insights instrumentation key. One of instrumentationKey or instrumentationKeySecretReference must be specified.
         */
        instrumentationKeySecretReference?: pulumi.Input<inputs.batchai.KeyVaultSecretReferenceResponse>;
    }

    /**
     * Auto-scale settings for the cluster. The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the number of queued and running jobs assigned to the cluster.
     */
    export interface AutoScaleSettings {
        /**
         * The number of compute nodes to allocate on cluster creation. Note that this value is used only during cluster creation. Default: 0.
         */
        initialNodeCount?: pulumi.Input<number>;
        /**
         * The maximum number of compute nodes the cluster can have.
         */
        maximumNodeCount: pulumi.Input<number>;
        /**
         * The minimum number of compute nodes the Batch AI service will try to allocate for the cluster. Note, the actual number of nodes can be less than the specified value if the subscription has not enough quota to fulfill the request.
         */
        minimumNodeCount: pulumi.Input<number>;
    }

    /**
     * Auto-scale settings for the cluster. The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the number of queued and running jobs assigned to the cluster.
     */
    export interface AutoScaleSettingsResponse {
        /**
         * The number of compute nodes to allocate on cluster creation. Note that this value is used only during cluster creation. Default: 0.
         */
        initialNodeCount?: pulumi.Input<number>;
        /**
         * The maximum number of compute nodes the cluster can have.
         */
        maximumNodeCount: pulumi.Input<number>;
        /**
         * The minimum number of compute nodes the Batch AI service will try to allocate for the cluster. Note, the actual number of nodes can be less than the specified value if the subscription has not enough quota to fulfill the request.
         */
        minimumNodeCount: pulumi.Input<number>;
    }

    /**
     * Azure Blob Storage Container mounting configuration.
     */
    export interface AzureBlobFileSystemReference {
        /**
         * Name of the Azure storage account.
         */
        accountName: pulumi.Input<string>;
        /**
         * Name of the Azure Blob Storage container to mount on the cluster.
         */
        containerName: pulumi.Input<string>;
        /**
         * Information about the Azure storage credentials.
         */
        credentials: pulumi.Input<inputs.batchai.AzureStorageCredentialsInfo>;
        /**
         * Mount options for mounting blobfuse file system.
         */
        mountOptions?: pulumi.Input<string>;
        /**
         * The relative path on the compute node where the Azure File container will be mounted. Note that all cluster level containers will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level containers will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
         */
        relativeMountPath: pulumi.Input<string>;
    }

    /**
     * Azure Blob Storage Container mounting configuration.
     */
    export interface AzureBlobFileSystemReferenceResponse {
        /**
         * Name of the Azure storage account.
         */
        accountName: pulumi.Input<string>;
        /**
         * Name of the Azure Blob Storage container to mount on the cluster.
         */
        containerName: pulumi.Input<string>;
        /**
         * Information about the Azure storage credentials.
         */
        credentials: pulumi.Input<inputs.batchai.AzureStorageCredentialsInfoResponse>;
        /**
         * Mount options for mounting blobfuse file system.
         */
        mountOptions?: pulumi.Input<string>;
        /**
         * The relative path on the compute node where the Azure File container will be mounted. Note that all cluster level containers will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level containers will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
         */
        relativeMountPath: pulumi.Input<string>;
    }

    /**
     * Azure File Share mounting configuration.
     */
    export interface AzureFileShareReference {
        /**
         * Name of the Azure storage account.
         */
        accountName: pulumi.Input<string>;
        /**
         * URL to access the Azure File.
         */
        azureFileUrl: pulumi.Input<string>;
        /**
         * Information about the Azure storage credentials.
         */
        credentials: pulumi.Input<inputs.batchai.AzureStorageCredentialsInfo>;
        /**
         * File mode for directories on the mounted file share. Default value: 0777.
         */
        directoryMode?: pulumi.Input<string>;
        /**
         * File mode for files on the mounted file share. Default value: 0777.
         */
        fileMode?: pulumi.Input<string>;
        /**
         * The relative path on the compute node where the Azure File share will be mounted. Note that all cluster level file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file shares will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
         */
        relativeMountPath: pulumi.Input<string>;
    }

    /**
     * Azure File Share mounting configuration.
     */
    export interface AzureFileShareReferenceResponse {
        /**
         * Name of the Azure storage account.
         */
        accountName: pulumi.Input<string>;
        /**
         * URL to access the Azure File.
         */
        azureFileUrl: pulumi.Input<string>;
        /**
         * Information about the Azure storage credentials.
         */
        credentials: pulumi.Input<inputs.batchai.AzureStorageCredentialsInfoResponse>;
        /**
         * File mode for directories on the mounted file share. Default value: 0777.
         */
        directoryMode?: pulumi.Input<string>;
        /**
         * File mode for files on the mounted file share. Default value: 0777.
         */
        fileMode?: pulumi.Input<string>;
        /**
         * The relative path on the compute node where the Azure File share will be mounted. Note that all cluster level file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file shares will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
         */
        relativeMountPath: pulumi.Input<string>;
    }

    /**
     * Azure storage account credentials.
     */
    export interface AzureStorageCredentialsInfo {
        /**
         * Storage account key. One of accountKey or accountKeySecretReference must be specified.
         */
        accountKey?: pulumi.Input<string>;
        /**
         * Information about KeyVault secret storing the storage account key. One of accountKey or accountKeySecretReference must be specified.
         */
        accountKeySecretReference?: pulumi.Input<inputs.batchai.KeyVaultSecretReference>;
    }

    /**
     * Azure storage account credentials.
     */
    export interface AzureStorageCredentialsInfoResponse {
        /**
         * Storage account key. One of accountKey or accountKeySecretReference must be specified.
         */
        accountKey?: pulumi.Input<string>;
        /**
         * Information about KeyVault secret storing the storage account key. One of accountKey or accountKeySecretReference must be specified.
         */
        accountKeySecretReference?: pulumi.Input<inputs.batchai.KeyVaultSecretReferenceResponse>;
    }

    /**
     * An error response from the Batch AI service.
     */
    export interface BatchAIErrorResponse {
        /**
         * An identifier of the error. Codes are invariant and are intended to be consumed programmatically.
         */
        code: pulumi.Input<string>;
        /**
         * A list of additional details about the error.
         */
        details: pulumi.Input<pulumi.Input<inputs.batchai.NameValuePairResponse>[]>;
        /**
         * A message describing the error, intended to be suitable for display in a user interface.
         */
        message: pulumi.Input<string>;
    }

    /**
     * CNTK (aka Microsoft Cognitive Toolkit) job settings.
     */
    export interface CNTKsettings {
        /**
         * Command line arguments that need to be passed to the python script or cntk executable.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Specifies the path of the BrainScript config file. This property can be specified only if the languageType is 'BrainScript'.
         */
        configFilePath?: pulumi.Input<string>;
        /**
         * The language to use for launching CNTK (aka Microsoft Cognitive Toolkit) job. Valid values are 'BrainScript' or 'Python'.
         */
        languageType?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter. This property can be specified only if the languageType is 'Python'.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * Python script to execute. This property can be specified only if the languageType is 'Python'.
         */
        pythonScriptFilePath?: pulumi.Input<string>;
    }

    /**
     * CNTK (aka Microsoft Cognitive Toolkit) job settings.
     */
    export interface CNTKsettingsResponse {
        /**
         * Command line arguments that need to be passed to the python script or cntk executable.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Specifies the path of the BrainScript config file. This property can be specified only if the languageType is 'BrainScript'.
         */
        configFilePath?: pulumi.Input<string>;
        /**
         * The language to use for launching CNTK (aka Microsoft Cognitive Toolkit) job. Valid values are 'BrainScript' or 'Python'.
         */
        languageType?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter. This property can be specified only if the languageType is 'Python'.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * Python script to execute. This property can be specified only if the languageType is 'Python'.
         */
        pythonScriptFilePath?: pulumi.Input<string>;
    }

    /**
     * Caffe2 job settings.
     */
    export interface Caffe2Settings {
        /**
         * Command line arguments that need to be passed to the python script.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
    }

    /**
     * Caffe2 job settings.
     */
    export interface Caffe2SettingsResponse {
        /**
         * Command line arguments that need to be passed to the python script.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
    }

    /**
     * Caffe job settings.
     */
    export interface CaffeSettings {
        /**
         * Command line arguments that need to be passed to the Caffe job.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Path of the config file for the job. This property cannot be specified if pythonScriptFilePath is specified.
         */
        configFilePath?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter. The property can be specified only if the pythonScriptFilePath is specified.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * Python script to execute. This property cannot be specified if configFilePath is specified.
         */
        pythonScriptFilePath?: pulumi.Input<string>;
    }

    /**
     * Caffe job settings.
     */
    export interface CaffeSettingsResponse {
        /**
         * Command line arguments that need to be passed to the Caffe job.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Path of the config file for the job. This property cannot be specified if pythonScriptFilePath is specified.
         */
        configFilePath?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter. The property can be specified only if the pythonScriptFilePath is specified.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * Python script to execute. This property cannot be specified if configFilePath is specified.
         */
        pythonScriptFilePath?: pulumi.Input<string>;
    }

    /**
     * Chainer job settings.
     */
    export interface ChainerSettings {
        /**
         * Command line arguments that need to be passed to the python script.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
    }

    /**
     * Chainer job settings.
     */
    export interface ChainerSettingsResponse {
        /**
         * Command line arguments that need to be passed to the python script.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
    }

    /**
     * The properties of a Cluster.
     */
    export interface ClusterBaseProperties {
        /**
         * Setup to be performed on each compute node in the cluster.
         */
        nodeSetup?: pulumi.Input<inputs.batchai.NodeSetup>;
        /**
         * Scale settings for the cluster. Batch AI service supports manual and auto scale clusters.
         */
        scaleSettings?: pulumi.Input<inputs.batchai.ScaleSettings>;
        /**
         * Existing virtual network subnet to put the cluster nodes in. Note, if a File Server mount configured in node setup, the File Server's subnet will be used automatically.
         */
        subnet?: pulumi.Input<inputs.batchai.ResourceId>;
        /**
         * Settings for an administrator user account that will be created on each compute node in the cluster.
         */
        userAccountSettings: pulumi.Input<inputs.batchai.UserAccountSettings>;
        /**
         * OS image configuration for cluster nodes. All nodes in a cluster have the same OS image.
         */
        virtualMachineConfiguration?: pulumi.Input<inputs.batchai.VirtualMachineConfiguration>;
        /**
         * VM priority. Allowed values are: dedicated (default) and lowpriority.
         */
        vmPriority?: pulumi.Input<string>;
        /**
         * The size of the virtual machines in the cluster. All nodes in a cluster have the same VM size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace see Sizes for Virtual Machines (Linux). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
         */
        vmSize: pulumi.Input<string>;
    }

    /**
     * Cluster properties.
     */
    export interface ClusterPropertiesResponse {
        /**
         * Allocation state of the cluster. Possible values are: steady - Indicates that the cluster is not resizing. There are no changes to the number of compute nodes in the cluster in progress. A cluster enters this state when it is created and when no operations are being performed on the cluster to change the number of compute nodes. resizing - Indicates that the cluster is resizing; that is, compute nodes are being added to or removed from the cluster.
         */
        allocationState: pulumi.Input<string>;
        /**
         * The time at which the cluster entered its current allocation state.
         */
        allocationStateTransitionTime: pulumi.Input<string>;
        /**
         * The time when the cluster was created.
         */
        creationTime: pulumi.Input<string>;
        /**
         * The number of compute nodes currently assigned to the cluster.
         */
        currentNodeCount: pulumi.Input<number>;
        /**
         * Collection of errors encountered by various compute nodes during node setup.
         */
        errors: pulumi.Input<pulumi.Input<inputs.batchai.BatchAIErrorResponse>[]>;
        /**
         * Setup (mount file systems, performance counters settings and custom setup task) to be performed on each compute node in the cluster.
         */
        nodeSetup?: pulumi.Input<inputs.batchai.NodeSetupResponse>;
        /**
         * Counts of various node states on the cluster.
         */
        nodeStateCounts: pulumi.Input<inputs.batchai.NodeStateCountsResponse>;
        /**
         * Provisioning state of the cluster. Possible value are: creating - Specifies that the cluster is being created. succeeded - Specifies that the cluster has been created successfully. failed - Specifies that the cluster creation has failed. deleting - Specifies that the cluster is being deleted.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Time when the provisioning state was changed.
         */
        provisioningStateTransitionTime: pulumi.Input<string>;
        /**
         * Scale settings of the cluster.
         */
        scaleSettings?: pulumi.Input<inputs.batchai.ScaleSettingsResponse>;
        /**
         * Virtual network subnet resource ID the cluster nodes belong to.
         */
        subnet?: pulumi.Input<inputs.batchai.ResourceIdResponse>;
        /**
         * Administrator user account settings which can be used to SSH to compute nodes.
         */
        userAccountSettings?: pulumi.Input<inputs.batchai.UserAccountSettingsResponse>;
        /**
         * Virtual machine configuration (OS image) of the compute nodes. All nodes in a cluster have the same OS image configuration.
         */
        virtualMachineConfiguration?: pulumi.Input<inputs.batchai.VirtualMachineConfigurationResponse>;
        /**
         * VM priority of cluster nodes.
         */
        vmPriority?: pulumi.Input<string>;
        /**
         * The size of the virtual machines in the cluster. All nodes in a cluster have the same VM size.
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * Docker container settings.
     */
    export interface ContainerSettings {
        /**
         * Information about docker image and docker registry to download the container from.
         */
        imageSourceRegistry: pulumi.Input<inputs.batchai.ImageSourceRegistry>;
        /**
         * Size of /dev/shm. Please refer to docker documentation for supported argument formats.
         */
        shmSize?: pulumi.Input<string>;
    }

    /**
     * Docker container settings.
     */
    export interface ContainerSettingsResponse {
        /**
         * Information about docker image and docker registry to download the container from.
         */
        imageSourceRegistry: pulumi.Input<inputs.batchai.ImageSourceRegistryResponse>;
        /**
         * Size of /dev/shm. Please refer to docker documentation for supported argument formats.
         */
        shmSize?: pulumi.Input<string>;
    }

    /**
     * Custom MPI job settings.
     */
    export interface CustomMpiSettings {
        /**
         * The command line to be executed by mpi runtime on each compute node.
         */
        commandLine: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
    }

    /**
     * Custom MPI job settings.
     */
    export interface CustomMpiSettingsResponse {
        /**
         * The command line to be executed by mpi runtime on each compute node.
         */
        commandLine: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
    }

    /**
     * Custom tool kit job settings.
     */
    export interface CustomToolkitSettings {
        /**
         * The command line to execute on the master node.
         */
        commandLine?: pulumi.Input<string>;
    }

    /**
     * Custom tool kit job settings.
     */
    export interface CustomToolkitSettingsResponse {
        /**
         * The command line to execute on the master node.
         */
        commandLine?: pulumi.Input<string>;
    }

    /**
     * Data disks settings.
     */
    export interface DataDisks {
        /**
         * Caching type for the disks. Available values are none (default), readonly, readwrite. Caching type can be set only for VM sizes supporting premium storage.
         */
        cachingType?: pulumi.Input<string>;
        /**
         * Number of data disks attached to the File Server. If multiple disks attached, they will be configured in RAID level 0.
         */
        diskCount: pulumi.Input<number>;
        /**
         * Disk size in GB for the blank data disks.
         */
        diskSizeInGB: pulumi.Input<number>;
        /**
         * Type of storage account to be used on the disk. Possible values are: Standard_LRS or Premium_LRS. Premium storage account type can only be used with VM sizes supporting premium storage.
         */
        storageAccountType: pulumi.Input<string>;
    }

    /**
     * Data disks settings.
     */
    export interface DataDisksResponse {
        /**
         * Caching type for the disks. Available values are none (default), readonly, readwrite. Caching type can be set only for VM sizes supporting premium storage.
         */
        cachingType?: pulumi.Input<string>;
        /**
         * Number of data disks attached to the File Server. If multiple disks attached, they will be configured in RAID level 0.
         */
        diskCount: pulumi.Input<number>;
        /**
         * Disk size in GB for the blank data disks.
         */
        diskSizeInGB: pulumi.Input<number>;
        /**
         * Type of storage account to be used on the disk. Possible values are: Standard_LRS or Premium_LRS. Premium storage account type can only be used with VM sizes supporting premium storage.
         */
        storageAccountType: pulumi.Input<string>;
    }

    /**
     * An environment variable definition.
     */
    export interface EnvironmentVariable {
        /**
         * The name of the environment variable.
         */
        name: pulumi.Input<string>;
        /**
         * The value of the environment variable.
         */
        value: pulumi.Input<string>;
    }

    /**
     * An environment variable definition.
     */
    export interface EnvironmentVariableResponse {
        /**
         * The name of the environment variable.
         */
        name: pulumi.Input<string>;
        /**
         * The value of the environment variable.
         */
        value: pulumi.Input<string>;
    }

    /**
     * An environment variable with secret value definition.
     */
    export interface EnvironmentVariableWithSecretValue {
        /**
         * The name of the environment variable to store the secret value.
         */
        name: pulumi.Input<string>;
        /**
         * The value of the environment variable. This value will never be reported back by Batch AI.
         */
        value?: pulumi.Input<string>;
        /**
         * KeyVault store and secret which contains the value for the environment variable. One of value or valueSecretReference must be provided.
         */
        valueSecretReference?: pulumi.Input<inputs.batchai.KeyVaultSecretReference>;
    }

    /**
     * An environment variable with secret value definition.
     */
    export interface EnvironmentVariableWithSecretValueResponse {
        /**
         * The name of the environment variable to store the secret value.
         */
        name: pulumi.Input<string>;
        /**
         * The value of the environment variable. This value will never be reported back by Batch AI.
         */
        value?: pulumi.Input<string>;
        /**
         * KeyVault store and secret which contains the value for the environment variable. One of value or valueSecretReference must be provided.
         */
        valueSecretReference?: pulumi.Input<inputs.batchai.KeyVaultSecretReferenceResponse>;
    }

    /**
     * Experiment properties.
     */
    export interface ExperimentPropertiesResponse {
        /**
         * Time when the Experiment was created.
         */
        creationTime: pulumi.Input<string>;
        /**
         * The provisioned state of the experiment
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The time at which the experiment entered its current provisioning state.
         */
        provisioningStateTransitionTime: pulumi.Input<string>;
    }

    /**
     * The properties of a file server.
     */
    export interface FileServerBaseProperties {
        /**
         * Settings for the data disks which will be created for the File Server.
         */
        dataDisks: pulumi.Input<inputs.batchai.DataDisks>;
        /**
         * SSH configuration for the File Server node.
         */
        sshConfiguration: pulumi.Input<inputs.batchai.SshConfiguration>;
        /**
         * Identifier of an existing virtual network subnet to put the File Server in. If not provided, a new virtual network and subnet will be created.
         */
        subnet?: pulumi.Input<inputs.batchai.ResourceId>;
        /**
         * The size of the virtual machine for the File Server. For information about available VM sizes from the Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux).
         */
        vmSize: pulumi.Input<string>;
    }

    /**
     * File Server properties.
     */
    export interface FileServerPropertiesResponse {
        /**
         * Time when the FileServer was created.
         */
        creationTime: pulumi.Input<string>;
        /**
         * Information about disks attached to File Server VM.
         */
        dataDisks?: pulumi.Input<inputs.batchai.DataDisksResponse>;
        /**
         * File Server mount settings.
         */
        mountSettings: pulumi.Input<inputs.batchai.MountSettingsResponse>;
        /**
         * Provisioning state of the File Server. Possible values: creating - The File Server is getting created; updating - The File Server creation has been accepted and it is getting updated; deleting - The user has requested that the File Server be deleted, and it is in the process of being deleted; failed - The File Server creation has failed with the specified error code. Details about the error code are specified in the message field; succeeded - The File Server creation has succeeded.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Time when the provisioning state was changed.
         */
        provisioningStateTransitionTime: pulumi.Input<string>;
        /**
         * SSH configuration for accessing the File Server node.
         */
        sshConfiguration?: pulumi.Input<inputs.batchai.SshConfigurationResponse>;
        /**
         * File Server virtual network subnet resource ID.
         */
        subnet?: pulumi.Input<inputs.batchai.ResourceIdResponse>;
        /**
         * VM size of the File Server.
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * File Server mounting configuration.
     */
    export interface FileServerReference {
        /**
         * Resource ID of the existing File Server to be mounted.
         */
        fileServer: pulumi.Input<inputs.batchai.ResourceId>;
        /**
         * Mount options to be passed to mount command.
         */
        mountOptions?: pulumi.Input<string>;
        /**
         * The relative path on the compute node where the File Server will be mounted. Note that all cluster level file servers will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file servers will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
         */
        relativeMountPath: pulumi.Input<string>;
        /**
         * File Server directory that needs to be mounted. If this property is not specified, the entire File Server will be mounted.
         */
        sourceDirectory?: pulumi.Input<string>;
    }

    /**
     * File Server mounting configuration.
     */
    export interface FileServerReferenceResponse {
        /**
         * Resource ID of the existing File Server to be mounted.
         */
        fileServer: pulumi.Input<inputs.batchai.ResourceIdResponse>;
        /**
         * Mount options to be passed to mount command.
         */
        mountOptions?: pulumi.Input<string>;
        /**
         * The relative path on the compute node where the File Server will be mounted. Note that all cluster level file servers will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file servers will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
         */
        relativeMountPath: pulumi.Input<string>;
        /**
         * File Server directory that needs to be mounted. If this property is not specified, the entire File Server will be mounted.
         */
        sourceDirectory?: pulumi.Input<string>;
    }

    /**
     * Specifies the settings for Horovod job.
     */
    export interface HorovodSettings {
        /**
         * Command line arguments that need to be passed to the python script.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
    }

    /**
     * Specifies the settings for Horovod job.
     */
    export interface HorovodSettingsResponse {
        /**
         * Command line arguments that need to be passed to the python script.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
    }

    /**
     * The OS image reference.
     */
    export interface ImageReference {
        /**
         * Offer of the image.
         */
        offer: pulumi.Input<string>;
        /**
         * Publisher of the image.
         */
        publisher: pulumi.Input<string>;
        /**
         * SKU of the image.
         */
        sku: pulumi.Input<string>;
        /**
         * Version of the image.
         */
        version?: pulumi.Input<string>;
        /**
         * The ARM resource identifier of the virtual machine image for the compute nodes. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}. The virtual machine image must be in the same region and subscription as the cluster. For information about the firewall settings for the Batch node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration. Note, you need to provide publisher, offer and sku of the base OS image of which the custom image has been derived from.
         */
        virtualMachineImageId?: pulumi.Input<string>;
    }

    /**
     * The OS image reference.
     */
    export interface ImageReferenceResponse {
        /**
         * Offer of the image.
         */
        offer: pulumi.Input<string>;
        /**
         * Publisher of the image.
         */
        publisher: pulumi.Input<string>;
        /**
         * SKU of the image.
         */
        sku: pulumi.Input<string>;
        /**
         * Version of the image.
         */
        version?: pulumi.Input<string>;
        /**
         * The ARM resource identifier of the virtual machine image for the compute nodes. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}. The virtual machine image must be in the same region and subscription as the cluster. For information about the firewall settings for the Batch node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration. Note, you need to provide publisher, offer and sku of the base OS image of which the custom image has been derived from.
         */
        virtualMachineImageId?: pulumi.Input<string>;
    }

    /**
     * Information about docker image for the job.
     */
    export interface ImageSourceRegistry {
        /**
         * Credentials to access the private docker repository.
         */
        credentials?: pulumi.Input<inputs.batchai.PrivateRegistryCredentials>;
        /**
         * The name of the image in the image repository.
         */
        image: pulumi.Input<string>;
        /**
         * URL for image repository.
         */
        serverUrl?: pulumi.Input<string>;
    }

    /**
     * Information about docker image for the job.
     */
    export interface ImageSourceRegistryResponse {
        /**
         * Credentials to access the private docker repository.
         */
        credentials?: pulumi.Input<inputs.batchai.PrivateRegistryCredentialsResponse>;
        /**
         * The name of the image in the image repository.
         */
        image: pulumi.Input<string>;
        /**
         * URL for image repository.
         */
        serverUrl?: pulumi.Input<string>;
    }

    /**
     * Input directory for the job.
     */
    export interface InputDirectory {
        /**
         * The ID for the input directory. The job can use AZ_BATCHAI_INPUT_<id> environment variable to find the directory path, where <id> is the value of id attribute.
         */
        id: pulumi.Input<string>;
        /**
         * The path to the input directory.
         */
        path: pulumi.Input<string>;
    }

    /**
     * Input directory for the job.
     */
    export interface InputDirectoryResponse {
        /**
         * The ID for the input directory. The job can use AZ_BATCHAI_INPUT_<id> environment variable to find the directory path, where <id> is the value of id attribute.
         */
        id: pulumi.Input<string>;
        /**
         * The path to the input directory.
         */
        path: pulumi.Input<string>;
    }

    /**
     * The properties of a Batch AI Job.
     */
    export interface JobBaseProperties {
        /**
         * Settings for Caffe2 job.
         */
        caffe2Settings?: pulumi.Input<inputs.batchai.Caffe2Settings>;
        /**
         * Settings for Caffe job.
         */
        caffeSettings?: pulumi.Input<inputs.batchai.CaffeSettings>;
        /**
         * Settings for Chainer job.
         */
        chainerSettings?: pulumi.Input<inputs.batchai.ChainerSettings>;
        /**
         * Resource ID of the cluster on which this job will run.
         */
        cluster: pulumi.Input<inputs.batchai.ResourceId>;
        /**
         * Settings for CNTK (aka Microsoft Cognitive Toolkit) job.
         */
        cntkSettings?: pulumi.Input<inputs.batchai.CNTKsettings>;
        /**
         * Constraints associated with the Job.
         */
        constraints?: pulumi.Input<inputs.batchai.JobBasePropertiesProperties>;
        /**
         * Docker container settings for the job. If not provided, the job will run directly on the node.
         */
        containerSettings?: pulumi.Input<inputs.batchai.ContainerSettings>;
        /**
         * Settings for custom MPI job.
         */
        customMpiSettings?: pulumi.Input<inputs.batchai.CustomMpiSettings>;
        /**
         * Settings for custom tool kit job.
         */
        customToolkitSettings?: pulumi.Input<inputs.batchai.CustomToolkitSettings>;
        /**
         * A list of user defined environment variables which will be setup for the job.
         */
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.batchai.EnvironmentVariable>[]>;
        /**
         * Settings for Horovod job.
         */
        horovodSettings?: pulumi.Input<inputs.batchai.HorovodSettings>;
        /**
         * A list of input directories for the job.
         */
        inputDirectories?: pulumi.Input<pulumi.Input<inputs.batchai.InputDirectory>[]>;
        /**
         * A command line to be executed on each node allocated for the job before tool kit is launched.
         */
        jobPreparation?: pulumi.Input<inputs.batchai.JobPreparation>;
        /**
         * Information on mount volumes to be used by the job. These volumes will be mounted before the job execution and will be unmounted after the job completion. The volumes will be mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT environment variable.
         */
        mountVolumes?: pulumi.Input<inputs.batchai.MountVolumes>;
        /**
         * Number of compute nodes to run the job on. The job will be gang scheduled on that many compute nodes.
         */
        nodeCount: pulumi.Input<number>;
        /**
         * A list of output directories for the job.
         */
        outputDirectories?: pulumi.Input<pulumi.Input<inputs.batchai.OutputDirectory>[]>;
        /**
         * Settings for pyTorch job.
         */
        pyTorchSettings?: pulumi.Input<inputs.batchai.PyTorchSettings>;
        /**
         * Scheduling priority associated with the job. Possible values: low, normal, high.
         */
        schedulingPriority?: pulumi.Input<string>;
        /**
         * A list of user defined environment variables with secret values which will be setup for the job. Server will never report values of these variables back.
         */
        secrets?: pulumi.Input<pulumi.Input<inputs.batchai.EnvironmentVariableWithSecretValue>[]>;
        /**
         * The path where the Batch AI service will store stdout, stderror and execution log of the job.
         */
        stdOutErrPathPrefix: pulumi.Input<string>;
        /**
         * Settings for Tensor Flow job.
         */
        tensorFlowSettings?: pulumi.Input<inputs.batchai.TensorFlowSettings>;
    }

    /**
     * Constraints associated with the Job.
     */
    export interface JobBasePropertiesProperties {
        /**
         * Max time the job can run. Default value: 1 week.
         */
        maxWallClockTime?: pulumi.Input<string>;
    }

    /**
     * Job preparation settings.
     */
    export interface JobPreparation {
        /**
         * The command line to execute. If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
         */
        commandLine: pulumi.Input<string>;
    }

    /**
     * Job preparation settings.
     */
    export interface JobPreparationResponse {
        /**
         * The command line to execute. If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
         */
        commandLine: pulumi.Input<string>;
    }

    /**
     * Job properties.
     */
    export interface JobPropertiesResponse {
        /**
         * Caffe2 job settings.
         */
        caffe2Settings?: pulumi.Input<inputs.batchai.Caffe2SettingsResponse>;
        /**
         * Caffe job settings.
         */
        caffeSettings?: pulumi.Input<inputs.batchai.CaffeSettingsResponse>;
        /**
         * Chainer job settings.
         */
        chainerSettings?: pulumi.Input<inputs.batchai.ChainerSettingsResponse>;
        /**
         * Resource ID of the cluster associated with the job.
         */
        cluster?: pulumi.Input<inputs.batchai.ResourceIdResponse>;
        /**
         * CNTK (aka Microsoft Cognitive Toolkit) job settings.
         */
        cntkSettings?: pulumi.Input<inputs.batchai.CNTKsettingsResponse>;
        /**
         * Constraints associated with the Job.
         */
        constraints?: pulumi.Input<inputs.batchai.JobPropertiesResponseProperties>;
        /**
         * If the container was downloaded as part of cluster setup then the same container image will be used. If not provided, the job will run on the VM.
         */
        containerSettings?: pulumi.Input<inputs.batchai.ContainerSettingsResponse>;
        /**
         * The creation time of the job.
         */
        creationTime: pulumi.Input<string>;
        /**
         * Custom MPI job settings.
         */
        customMpiSettings?: pulumi.Input<inputs.batchai.CustomMpiSettingsResponse>;
        /**
         * Custom tool kit job settings.
         */
        customToolkitSettings?: pulumi.Input<inputs.batchai.CustomToolkitSettingsResponse>;
        /**
         * A collection of user defined environment variables to be setup for the job.
         */
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.batchai.EnvironmentVariableResponse>[]>;
        /**
         * Information about the execution of a job.
         */
        executionInfo?: pulumi.Input<inputs.batchai.JobPropertiesResponseProperties>;
        /**
         * The current state of the job. Possible values are: queued - The job is queued and able to run. A job enters this state when it is created, or when it is awaiting a retry after a failed run. running - The job is running on a compute cluster. This includes job-level preparation such as downloading resource files or set up container specified on the job - it does not necessarily mean that the job command line has started executing. terminating - The job is terminated by the user, the terminate operation is in progress. succeeded - The job has completed running successfully and exited with exit code 0. failed - The job has finished unsuccessfully (failed with a non-zero exit code) and has exhausted its retry limit. A job is also marked as failed if an error occurred launching the job.
         */
        executionState: pulumi.Input<string>;
        /**
         * The time at which the job entered its current execution state.
         */
        executionStateTransitionTime: pulumi.Input<string>;
        /**
         * Specifies the settings for Horovod job.
         */
        horovodSettings?: pulumi.Input<inputs.batchai.HorovodSettingsResponse>;
        /**
         * A list of input directories for the job.
         */
        inputDirectories?: pulumi.Input<pulumi.Input<inputs.batchai.InputDirectoryResponse>[]>;
        /**
         * A segment of job's output directories path created by Batch AI. Batch AI creates job's output directories under an unique path to avoid conflicts between jobs. This value contains a path segment generated by Batch AI to make the path unique and can be used to find the output directory on the node or mounted filesystem.
         */
        jobOutputDirectoryPathSegment: pulumi.Input<string>;
        /**
         * The specified actions will run on all the nodes that are part of the job
         */
        jobPreparation?: pulumi.Input<inputs.batchai.JobPreparationResponse>;
        /**
         * Collection of mount volumes available to the job during execution. These volumes are mounted before the job execution and unmounted after the job completion. The volumes are mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT environment variable.
         */
        mountVolumes?: pulumi.Input<inputs.batchai.MountVolumesResponse>;
        /**
         * The job will be gang scheduled on that many compute nodes
         */
        nodeCount?: pulumi.Input<number>;
        /**
         * A list of output directories for the job.
         */
        outputDirectories?: pulumi.Input<pulumi.Input<inputs.batchai.OutputDirectoryResponse>[]>;
        /**
         * The provisioned state of the Batch AI job
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The time at which the job entered its current provisioning state.
         */
        provisioningStateTransitionTime: pulumi.Input<string>;
        /**
         * pyTorch job settings.
         */
        pyTorchSettings?: pulumi.Input<inputs.batchai.PyTorchSettingsResponse>;
        /**
         * Scheduling priority associated with the job.
         */
        schedulingPriority?: pulumi.Input<string>;
        /**
         * A collection of user defined environment variables with secret values to be setup for the job. Server will never report values of these variables back.
         */
        secrets?: pulumi.Input<pulumi.Input<inputs.batchai.EnvironmentVariableWithSecretValueResponse>[]>;
        /**
         * The path where the Batch AI service stores stdout, stderror and execution log of the job.
         */
        stdOutErrPathPrefix?: pulumi.Input<string>;
        /**
         * TensorFlow job settings.
         */
        tensorFlowSettings?: pulumi.Input<inputs.batchai.TensorFlowSettingsResponse>;
        /**
         * Possible values are: cntk, tensorflow, caffe, caffe2, chainer, pytorch, custom, custommpi, horovod.
         */
        toolType?: pulumi.Input<string>;
    }

    /**
     * Constraints associated with the Job.
     */
    export interface JobPropertiesResponseProperties {
        /**
         * Max time the job can run. Default value: 1 week.
         */
        maxWallClockTime?: pulumi.Input<string>;
    }

    /**
     * Key Vault Secret reference.
     */
    export interface KeyVaultSecretReference {
        /**
         * The URL referencing a secret in the Key Vault.
         */
        secretUrl: pulumi.Input<string>;
        /**
         * Fully qualified resource identifier of the Key Vault.
         */
        sourceVault: pulumi.Input<inputs.batchai.ResourceId>;
    }

    /**
     * Key Vault Secret reference.
     */
    export interface KeyVaultSecretReferenceResponse {
        /**
         * The URL referencing a secret in the Key Vault.
         */
        secretUrl: pulumi.Input<string>;
        /**
         * Fully qualified resource identifier of the Key Vault.
         */
        sourceVault: pulumi.Input<inputs.batchai.ResourceIdResponse>;
    }

    /**
     * Manual scale settings for the cluster.
     */
    export interface ManualScaleSettings {
        /**
         * An action to be performed when the cluster size is decreasing. The default value is requeue.
         */
        nodeDeallocationOption?: pulumi.Input<string>;
        /**
         * The desired number of compute nodes in the Cluster. Default is 0.
         */
        targetNodeCount: pulumi.Input<number>;
    }

    /**
     * Manual scale settings for the cluster.
     */
    export interface ManualScaleSettingsResponse {
        /**
         * An action to be performed when the cluster size is decreasing. The default value is requeue.
         */
        nodeDeallocationOption?: pulumi.Input<string>;
        /**
         * The desired number of compute nodes in the Cluster. Default is 0.
         */
        targetNodeCount: pulumi.Input<number>;
    }

    /**
     * File Server mount Information.
     */
    export interface MountSettingsResponse {
        /**
         * Internal IP address of the File Server which can be used to access the File Server from within the subnet.
         */
        fileServerInternalIP?: pulumi.Input<string>;
        /**
         * Public IP address of the File Server which can be used to SSH to the node from outside of the subnet.
         */
        fileServerPublicIP?: pulumi.Input<string>;
        /**
         * Path where the data disks are mounted on the File Server.
         */
        mountPoint?: pulumi.Input<string>;
    }

    /**
     * Details of volumes to mount on the cluster.
     */
    export interface MountVolumes {
        /**
         * A collection of Azure Blob Containers that are to be mounted to the cluster nodes.
         */
        azureBlobFileSystems?: pulumi.Input<pulumi.Input<inputs.batchai.AzureBlobFileSystemReference>[]>;
        /**
         * A collection of Azure File Shares that are to be mounted to the cluster nodes.
         */
        azureFileShares?: pulumi.Input<pulumi.Input<inputs.batchai.AzureFileShareReference>[]>;
        /**
         * A collection of Batch AI File Servers that are to be mounted to the cluster nodes.
         */
        fileServers?: pulumi.Input<pulumi.Input<inputs.batchai.FileServerReference>[]>;
        /**
         * A collection of unmanaged file systems that are to be mounted to the cluster nodes.
         */
        unmanagedFileSystems?: pulumi.Input<pulumi.Input<inputs.batchai.UnmanagedFileSystemReference>[]>;
    }

    /**
     * Details of volumes to mount on the cluster.
     */
    export interface MountVolumesResponse {
        /**
         * A collection of Azure Blob Containers that are to be mounted to the cluster nodes.
         */
        azureBlobFileSystems?: pulumi.Input<pulumi.Input<inputs.batchai.AzureBlobFileSystemReferenceResponse>[]>;
        /**
         * A collection of Azure File Shares that are to be mounted to the cluster nodes.
         */
        azureFileShares?: pulumi.Input<pulumi.Input<inputs.batchai.AzureFileShareReferenceResponse>[]>;
        /**
         * A collection of Batch AI File Servers that are to be mounted to the cluster nodes.
         */
        fileServers?: pulumi.Input<pulumi.Input<inputs.batchai.FileServerReferenceResponse>[]>;
        /**
         * A collection of unmanaged file systems that are to be mounted to the cluster nodes.
         */
        unmanagedFileSystems?: pulumi.Input<pulumi.Input<inputs.batchai.UnmanagedFileSystemReferenceResponse>[]>;
    }

    /**
     * Name-value pair.
     */
    export interface NameValuePairResponse {
        /**
         * The name in the name-value pair.
         */
        name?: pulumi.Input<string>;
        /**
         * The value in the name-value pair.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Node setup settings.
     */
    export interface NodeSetup {
        /**
         * Mount volumes to be available to setup task and all jobs executing on the cluster. The volumes will be mounted at location specified by $AZ_BATCHAI_MOUNT_ROOT environment variable.
         */
        mountVolumes?: pulumi.Input<inputs.batchai.MountVolumes>;
        /**
         * Settings for performance counters collecting and uploading.
         */
        performanceCountersSettings?: pulumi.Input<inputs.batchai.PerformanceCountersSettings>;
        /**
         * Setup task to run on cluster nodes when nodes got created or rebooted. The setup task code needs to be idempotent. Generally the setup task is used to download static data that is required for all jobs that run on the cluster VMs and/or to download/install software.
         */
        setupTask?: pulumi.Input<inputs.batchai.SetupTask>;
    }

    /**
     * Node setup settings.
     */
    export interface NodeSetupResponse {
        /**
         * Mount volumes to be available to setup task and all jobs executing on the cluster. The volumes will be mounted at location specified by $AZ_BATCHAI_MOUNT_ROOT environment variable.
         */
        mountVolumes?: pulumi.Input<inputs.batchai.MountVolumesResponse>;
        /**
         * Settings for performance counters collecting and uploading.
         */
        performanceCountersSettings?: pulumi.Input<inputs.batchai.PerformanceCountersSettingsResponse>;
        /**
         * Setup task to run on cluster nodes when nodes got created or rebooted. The setup task code needs to be idempotent. Generally the setup task is used to download static data that is required for all jobs that run on the cluster VMs and/or to download/install software.
         */
        setupTask?: pulumi.Input<inputs.batchai.SetupTaskResponse>;
    }

    /**
     * Counts of various compute node states on the cluster.
     */
    export interface NodeStateCountsResponse {
        /**
         * Number of compute nodes in idle state.
         */
        idleNodeCount: pulumi.Input<number>;
        /**
         * Number of compute nodes which are leaving the cluster.
         */
        leavingNodeCount: pulumi.Input<number>;
        /**
         * Number of compute nodes which are being prepared.
         */
        preparingNodeCount: pulumi.Input<number>;
        /**
         * Number of compute nodes which are running jobs.
         */
        runningNodeCount: pulumi.Input<number>;
        /**
         * Number of compute nodes which are in unusable state.
         */
        unusableNodeCount: pulumi.Input<number>;
    }

    /**
     * Output directory for the job.
     */
    export interface OutputDirectory {
        /**
         * The ID of the output directory. The job can use AZ_BATCHAI_OUTPUT_<id> environment variable to find the directory path, where <id> is the value of id attribute.
         */
        id: pulumi.Input<string>;
        /**
         * The prefix path where the output directory will be created. Note, this is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs. The full path to the output directory by combining pathPrefix, jobOutputDirectoryPathSegment (reported by get job) and pathSuffix.
         */
        pathPrefix: pulumi.Input<string>;
        /**
         * The suffix path where the output directory will be created. E.g. models. You can find the full path to the output directory by combining pathPrefix, jobOutputDirectoryPathSegment (reported by get job) and pathSuffix.
         */
        pathSuffix?: pulumi.Input<string>;
    }

    /**
     * Output directory for the job.
     */
    export interface OutputDirectoryResponse {
        /**
         * The ID of the output directory. The job can use AZ_BATCHAI_OUTPUT_<id> environment variable to find the directory path, where <id> is the value of id attribute.
         */
        id: pulumi.Input<string>;
        /**
         * The prefix path where the output directory will be created. Note, this is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs. The full path to the output directory by combining pathPrefix, jobOutputDirectoryPathSegment (reported by get job) and pathSuffix.
         */
        pathPrefix: pulumi.Input<string>;
        /**
         * The suffix path where the output directory will be created. E.g. models. You can find the full path to the output directory by combining pathPrefix, jobOutputDirectoryPathSegment (reported by get job) and pathSuffix.
         */
        pathSuffix?: pulumi.Input<string>;
    }

    /**
     * Performance counters reporting settings.
     */
    export interface PerformanceCountersSettings {
        /**
         * Azure Application Insights information for performance counters reporting. If provided, Batch AI will upload node performance counters to the corresponding Azure Application Insights account.
         */
        appInsightsReference: pulumi.Input<inputs.batchai.AppInsightsReference>;
    }

    /**
     * Performance counters reporting settings.
     */
    export interface PerformanceCountersSettingsResponse {
        /**
         * Azure Application Insights information for performance counters reporting. If provided, Batch AI will upload node performance counters to the corresponding Azure Application Insights account.
         */
        appInsightsReference: pulumi.Input<inputs.batchai.AppInsightsReferenceResponse>;
    }

    /**
     * Credentials to access a container image in a private repository.
     */
    export interface PrivateRegistryCredentials {
        /**
         * User password to login to the docker repository. One of password or passwordSecretReference must be specified.
         */
        password?: pulumi.Input<string>;
        /**
         * KeyVault Secret storing the password. Users can store their secrets in Azure KeyVault and pass it to the Batch AI service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
         */
        passwordSecretReference?: pulumi.Input<inputs.batchai.KeyVaultSecretReference>;
        /**
         * User name to login to the repository.
         */
        username: pulumi.Input<string>;
    }

    /**
     * Credentials to access a container image in a private repository.
     */
    export interface PrivateRegistryCredentialsResponse {
        /**
         * User password to login to the docker repository. One of password or passwordSecretReference must be specified.
         */
        password?: pulumi.Input<string>;
        /**
         * KeyVault Secret storing the password. Users can store their secrets in Azure KeyVault and pass it to the Batch AI service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
         */
        passwordSecretReference?: pulumi.Input<inputs.batchai.KeyVaultSecretReferenceResponse>;
        /**
         * User name to login to the repository.
         */
        username: pulumi.Input<string>;
    }

    /**
     * pyTorch job settings.
     */
    export interface PyTorchSettings {
        /**
         * Command line arguments that need to be passed to the python script.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Type of the communication backend for distributed jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not required for non-distributed jobs.
         */
        communicationBackend?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
    }

    /**
     * pyTorch job settings.
     */
    export interface PyTorchSettingsResponse {
        /**
         * Command line arguments that need to be passed to the python script.
         */
        commandLineArgs?: pulumi.Input<string>;
        /**
         * Type of the communication backend for distributed jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not required for non-distributed jobs.
         */
        communicationBackend?: pulumi.Input<string>;
        /**
         * Number of processes to launch for the job execution. The default value for this property is equal to nodeCount property
         */
        processCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
    }

    /**
     * Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
     */
    export interface ResourceId {
        /**
         * The ID of the resource
         */
        id: pulumi.Input<string>;
    }

    /**
     * Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
     */
    export interface ResourceIdResponse {
        /**
         * The ID of the resource
         */
        id: pulumi.Input<string>;
    }

    /**
     * At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
     */
    export interface ScaleSettings {
        /**
         * Auto-scale settings for the cluster.
         */
        autoScale?: pulumi.Input<inputs.batchai.AutoScaleSettings>;
        /**
         * Manual scale settings for the cluster.
         */
        manual?: pulumi.Input<inputs.batchai.ManualScaleSettings>;
    }

    /**
     * At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
     */
    export interface ScaleSettingsResponse {
        /**
         * Auto-scale settings for the cluster.
         */
        autoScale?: pulumi.Input<inputs.batchai.AutoScaleSettingsResponse>;
        /**
         * Manual scale settings for the cluster.
         */
        manual?: pulumi.Input<inputs.batchai.ManualScaleSettingsResponse>;
    }

    /**
     * Specifies a setup task which can be used to customize the compute nodes of the cluster.
     */
    export interface SetupTask {
        /**
         * The command line to be executed on each cluster's node after it being allocated or rebooted. The command is executed in a bash subshell as a root.
         */
        commandLine: pulumi.Input<string>;
        /**
         * A collection of user defined environment variables to be set for setup task.
         */
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.batchai.EnvironmentVariable>[]>;
        /**
         * A collection of user defined environment variables with secret values to be set for the setup task. Server will never report values of these variables back.
         */
        secrets?: pulumi.Input<pulumi.Input<inputs.batchai.EnvironmentVariableWithSecretValue>[]>;
        /**
         * The prefix of a path where the Batch AI service will upload the stdout, stderr and execution log of the setup task.
         */
        stdOutErrPathPrefix: pulumi.Input<string>;
    }

    /**
     * Specifies a setup task which can be used to customize the compute nodes of the cluster.
     */
    export interface SetupTaskResponse {
        /**
         * The command line to be executed on each cluster's node after it being allocated or rebooted. The command is executed in a bash subshell as a root.
         */
        commandLine: pulumi.Input<string>;
        /**
         * A collection of user defined environment variables to be set for setup task.
         */
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.batchai.EnvironmentVariableResponse>[]>;
        /**
         * A collection of user defined environment variables with secret values to be set for the setup task. Server will never report values of these variables back.
         */
        secrets?: pulumi.Input<pulumi.Input<inputs.batchai.EnvironmentVariableWithSecretValueResponse>[]>;
        /**
         * The prefix of a path where the Batch AI service will upload the stdout, stderr and execution log of the setup task.
         */
        stdOutErrPathPrefix: pulumi.Input<string>;
        /**
         * A path segment appended by Batch AI to stdOutErrPathPrefix to form a path where stdout, stderr and execution log of the setup task will be uploaded. Batch AI creates the setup task output directories under an unique path to avoid conflicts between different clusters. The full path can be obtained by concatenation of stdOutErrPathPrefix and stdOutErrPathSuffix.
         */
        stdOutErrPathSuffix: pulumi.Input<string>;
    }

    /**
     * SSH configuration.
     */
    export interface SshConfiguration {
        /**
         * List of source IP ranges to allow SSH connection from. The default value is '*' (all source IPs are allowed). Maximum number of IP ranges that can be specified is 400.
         */
        publicIPsToAllow?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Settings for administrator user account to be created on a node. The account can be used to establish SSH connection to the node.
         */
        userAccountSettings: pulumi.Input<inputs.batchai.UserAccountSettings>;
    }

    /**
     * SSH configuration.
     */
    export interface SshConfigurationResponse {
        /**
         * List of source IP ranges to allow SSH connection from. The default value is '*' (all source IPs are allowed). Maximum number of IP ranges that can be specified is 400.
         */
        publicIPsToAllow?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Settings for administrator user account to be created on a node. The account can be used to establish SSH connection to the node.
         */
        userAccountSettings: pulumi.Input<inputs.batchai.UserAccountSettingsResponse>;
    }

    /**
     * TensorFlow job settings.
     */
    export interface TensorFlowSettings {
        /**
         * Command line arguments that need to be passed to the python script for the master task.
         */
        masterCommandLineArgs?: pulumi.Input<string>;
        /**
         * Command line arguments that need to be passed to the python script for the parameter server. Optional for single process jobs.
         */
        parameterServerCommandLineArgs?: pulumi.Input<string>;
        /**
         * The number of parameter server tasks. If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training. This property can be specified only for distributed TensorFlow training.
         */
        parameterServerCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
        /**
         * Command line arguments that need to be passed to the python script for the worker task. Optional for single process jobs.
         */
        workerCommandLineArgs?: pulumi.Input<string>;
        /**
         * The number of worker tasks. If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training.
         */
        workerCount?: pulumi.Input<number>;
    }

    /**
     * TensorFlow job settings.
     */
    export interface TensorFlowSettingsResponse {
        /**
         * Command line arguments that need to be passed to the python script for the master task.
         */
        masterCommandLineArgs?: pulumi.Input<string>;
        /**
         * Command line arguments that need to be passed to the python script for the parameter server. Optional for single process jobs.
         */
        parameterServerCommandLineArgs?: pulumi.Input<string>;
        /**
         * The number of parameter server tasks. If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training. This property can be specified only for distributed TensorFlow training.
         */
        parameterServerCount?: pulumi.Input<number>;
        /**
         * The path to the Python interpreter.
         */
        pythonInterpreterPath?: pulumi.Input<string>;
        /**
         * The python script to execute.
         */
        pythonScriptFilePath: pulumi.Input<string>;
        /**
         * Command line arguments that need to be passed to the python script for the worker task. Optional for single process jobs.
         */
        workerCommandLineArgs?: pulumi.Input<string>;
        /**
         * The number of worker tasks. If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training.
         */
        workerCount?: pulumi.Input<number>;
    }

    /**
     * Unmanaged file system mounting configuration.
     */
    export interface UnmanagedFileSystemReference {
        /**
         * Mount command line. Note, Batch AI will append mount path to the command on its own.
         */
        mountCommand: pulumi.Input<string>;
        /**
         * The relative path on the compute node where the unmanaged file system will be mounted. Note that all cluster level unmanaged file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level unmanaged file systems will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
         */
        relativeMountPath: pulumi.Input<string>;
    }

    /**
     * Unmanaged file system mounting configuration.
     */
    export interface UnmanagedFileSystemReferenceResponse {
        /**
         * Mount command line. Note, Batch AI will append mount path to the command on its own.
         */
        mountCommand: pulumi.Input<string>;
        /**
         * The relative path on the compute node where the unmanaged file system will be mounted. Note that all cluster level unmanaged file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level unmanaged file systems will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
         */
        relativeMountPath: pulumi.Input<string>;
    }

    /**
     * Settings for user account that gets created on each on the nodes of a cluster.
     */
    export interface UserAccountSettings {
        /**
         * Name of the administrator user account which can be used to SSH to nodes.
         */
        adminUserName: pulumi.Input<string>;
        /**
         * Password of the administrator user account.
         */
        adminUserPassword?: pulumi.Input<string>;
        /**
         * SSH public key of the administrator user account.
         */
        adminUserSshPublicKey?: pulumi.Input<string>;
    }

    /**
     * Settings for user account that gets created on each on the nodes of a cluster.
     */
    export interface UserAccountSettingsResponse {
        /**
         * Name of the administrator user account which can be used to SSH to nodes.
         */
        adminUserName: pulumi.Input<string>;
        /**
         * Password of the administrator user account.
         */
        adminUserPassword?: pulumi.Input<string>;
        /**
         * SSH public key of the administrator user account.
         */
        adminUserSshPublicKey?: pulumi.Input<string>;
    }

    /**
     * VM configuration.
     */
    export interface VirtualMachineConfiguration {
        /**
         * OS image reference for cluster nodes.
         */
        imageReference?: pulumi.Input<inputs.batchai.ImageReference>;
    }

    /**
     * VM configuration.
     */
    export interface VirtualMachineConfigurationResponse {
        /**
         * OS image reference for cluster nodes.
         */
        imageReference?: pulumi.Input<inputs.batchai.ImageReferenceResponse>;
    }

    /**
     * Workspace specific properties.
     */
    export interface WorkspacePropertiesResponse {
        /**
         * Time when the Workspace was created.
         */
        creationTime: pulumi.Input<string>;
        /**
         * The provisioned state of the Workspace
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The time at which the workspace entered its current provisioning state.
         */
        provisioningStateTransitionTime: pulumi.Input<string>;
    }
}

export namespace botservice {
    /**
     * The parameters to provide for the Bot.
     */
    export interface BotProperties {
        /**
         * The description of the bot
         */
        description?: pulumi.Input<string>;
        /**
         * The Application Insights key
         */
        developerAppInsightKey?: pulumi.Input<string>;
        /**
         * The Application Insights Api Key
         */
        developerAppInsightsApiKey?: pulumi.Input<string>;
        /**
         * The Application Insights App Id
         */
        developerAppInsightsApplicationId?: pulumi.Input<string>;
        /**
         * The Name of the bot
         */
        displayName: pulumi.Input<string>;
        /**
         * The bot's endpoint
         */
        endpoint: pulumi.Input<string>;
        /**
         * The Icon Url of the bot
         */
        iconUrl?: pulumi.Input<string>;
        /**
         * Collection of LUIS App Ids
         */
        luisAppIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The LUIS Key
         */
        luisKey?: pulumi.Input<string>;
        /**
         * Microsoft App Id for the bot
         */
        msaAppId: pulumi.Input<string>;
    }

    /**
     * The parameters to provide for the Bot.
     */
    export interface BotPropertiesResponse {
        /**
         * Collection of channels for which the bot is configured
         */
        configuredChannels: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The description of the bot
         */
        description?: pulumi.Input<string>;
        /**
         * The Application Insights key
         */
        developerAppInsightKey?: pulumi.Input<string>;
        /**
         * The Application Insights Api Key
         */
        developerAppInsightsApiKey?: pulumi.Input<string>;
        /**
         * The Application Insights App Id
         */
        developerAppInsightsApplicationId?: pulumi.Input<string>;
        /**
         * The Name of the bot
         */
        displayName: pulumi.Input<string>;
        /**
         * Collection of channels for which the bot is enabled
         */
        enabledChannels: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The bot's endpoint
         */
        endpoint: pulumi.Input<string>;
        /**
         * The bot's endpoint version
         */
        endpointVersion: pulumi.Input<string>;
        /**
         * The Icon Url of the bot
         */
        iconUrl?: pulumi.Input<string>;
        /**
         * Collection of LUIS App Ids
         */
        luisAppIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The LUIS Key
         */
        luisKey?: pulumi.Input<string>;
        /**
         * Microsoft App Id for the bot
         */
        msaAppId: pulumi.Input<string>;
    }

    /**
     * Channel definition
     */
    export interface Channel {
        /**
         * The channel name
         */
        channelName: pulumi.Input<string>;
    }

    /**
     * Channel definition
     */
    export interface ChannelResponse {
        /**
         * The channel name
         */
        channelName: pulumi.Input<string>;
    }

    /**
     * Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
     */
    export interface ConnectionSettingParameter {
        /**
         * Key for the Connection Setting Parameter.
         */
        key?: pulumi.Input<string>;
        /**
         * Value associated with the Connection Setting Parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
     */
    export interface ConnectionSettingParameterResponse {
        /**
         * Key for the Connection Setting Parameter.
         */
        key?: pulumi.Input<string>;
        /**
         * Value associated with the Connection Setting Parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Properties for a Connection Setting Item
     */
    export interface ConnectionSettingProperties {
        /**
         * Client Id associated with the Connection Setting.
         */
        clientId?: pulumi.Input<string>;
        /**
         * Client Secret associated with the Connection Setting
         */
        clientSecret?: pulumi.Input<string>;
        /**
         * Service Provider Parameters associated with the Connection Setting
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.botservice.ConnectionSettingParameter>[]>;
        /**
         * Scopes associated with the Connection Setting
         */
        scopes?: pulumi.Input<string>;
        /**
         * Service Provider Display Name associated with the Connection Setting
         */
        serviceProviderDisplayName?: pulumi.Input<string>;
        /**
         * Service Provider Id associated with the Connection Setting
         */
        serviceProviderId?: pulumi.Input<string>;
    }

    /**
     * Properties for a Connection Setting Item
     */
    export interface ConnectionSettingPropertiesResponse {
        /**
         * Client Id associated with the Connection Setting.
         */
        clientId?: pulumi.Input<string>;
        /**
         * Client Secret associated with the Connection Setting
         */
        clientSecret?: pulumi.Input<string>;
        /**
         * Service Provider Parameters associated with the Connection Setting
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.botservice.ConnectionSettingParameterResponse>[]>;
        /**
         * Scopes associated with the Connection Setting
         */
        scopes?: pulumi.Input<string>;
        /**
         * Service Provider Display Name associated with the Connection Setting
         */
        serviceProviderDisplayName?: pulumi.Input<string>;
        /**
         * Service Provider Id associated with the Connection Setting
         */
        serviceProviderId?: pulumi.Input<string>;
        /**
         * Setting Id set by the service for the Connection Setting.
         */
        settingId: pulumi.Input<string>;
    }

    /**
     * The SKU of the cognitive services account.
     */
    export interface Sku {
        /**
         * The sku name
         */
        name: pulumi.Input<string>;
    }

    /**
     * The SKU of the cognitive services account.
     */
    export interface SkuResponse {
        /**
         * The sku name
         */
        name: pulumi.Input<string>;
        /**
         * Gets the sku tier. This is based on the SKU name.
         */
        tier: pulumi.Input<string>;
    }
}

export namespace cache {
    /**
     * Redis cache access keys.
     */
    export interface RedisAccessKeysResponse {
        /**
         * The current primary key that clients can use to authenticate with Redis cache.
         */
        primaryKey: pulumi.Input<string>;
        /**
         * The current secondary key that clients can use to authenticate with Redis cache.
         */
        secondaryKey: pulumi.Input<string>;
    }

    /**
     * Properties supplied to Create Redis operation.
     */
    export interface RedisCreateProperties {
        /**
         * Specifies whether the non-ssl Redis server port (6379) is enabled.
         */
        enableNonSslPort?: pulumi.Input<boolean>;
        /**
         * Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')
         */
        minimumTlsVersion?: pulumi.Input<string>;
        /**
         * All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.
         */
        redisConfiguration?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The number of shards to be created on a Premium Cluster Cache.
         */
        shardCount?: pulumi.Input<number>;
        /**
         * The SKU of the Redis cache to deploy.
         */
        sku: pulumi.Input<inputs.cache.Sku>;
        /**
         * Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network.
         */
        staticIP?: pulumi.Input<string>;
        /**
         * The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
         */
        subnetId?: pulumi.Input<string>;
        /**
         * A dictionary of tenant settings
         */
        tenantSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Specifies a range of IP addresses permitted to connect to the cache
     */
    export interface RedisFirewallRuleProperties {
        /**
         * highest IP address included in the range
         */
        endIP: pulumi.Input<string>;
        /**
         * lowest IP address included in the range
         */
        startIP: pulumi.Input<string>;
    }

    /**
     * Specifies a range of IP addresses permitted to connect to the cache
     */
    export interface RedisFirewallRulePropertiesResponse {
        /**
         * highest IP address included in the range
         */
        endIP: pulumi.Input<string>;
        /**
         * lowest IP address included in the range
         */
        startIP: pulumi.Input<string>;
    }

    /**
     * Create properties for a linked server
     */
    export interface RedisLinkedServerCreateProperties {
        /**
         * Fully qualified resourceId of the linked redis cache.
         */
        linkedRedisCacheId: pulumi.Input<string>;
        /**
         * Location of the linked redis cache.
         */
        linkedRedisCacheLocation: pulumi.Input<string>;
        /**
         * Role of the linked server.
         */
        serverRole: pulumi.Input<string>;
    }

    /**
     * Properties of a linked server to be returned in get/put response
     */
    export interface RedisLinkedServerPropertiesResponse {
        /**
         * Fully qualified resourceId of the linked redis cache.
         */
        linkedRedisCacheId: pulumi.Input<string>;
        /**
         * Location of the linked redis cache.
         */
        linkedRedisCacheLocation: pulumi.Input<string>;
        /**
         * Terminal state of the link between primary and secondary redis cache.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Role of the linked server.
         */
        serverRole: pulumi.Input<string>;
    }

    /**
     * Linked server Id
     */
    export interface RedisLinkedServerResponse {
        /**
         * Linked server Id.
         */
        id: pulumi.Input<string>;
    }

    /**
     * Properties of the redis cache.
     */
    export interface RedisPropertiesResponse {
        /**
         * The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache
         */
        accessKeys: pulumi.Input<inputs.cache.RedisAccessKeysResponse>;
        /**
         * Specifies whether the non-ssl Redis server port (6379) is enabled.
         */
        enableNonSslPort?: pulumi.Input<boolean>;
        /**
         * Redis host name.
         */
        hostName: pulumi.Input<string>;
        /**
         * List of the linked servers associated with the cache
         */
        linkedServers: pulumi.Input<pulumi.Input<inputs.cache.RedisLinkedServerResponse>[]>;
        /**
         * Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')
         */
        minimumTlsVersion?: pulumi.Input<string>;
        /**
         * Redis non-SSL port.
         */
        port: pulumi.Input<number>;
        /**
         * Redis instance provisioning status.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.
         */
        redisConfiguration?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Redis version.
         */
        redisVersion: pulumi.Input<string>;
        /**
         * The number of shards to be created on a Premium Cluster Cache.
         */
        shardCount?: pulumi.Input<number>;
        /**
         * The SKU of the Redis cache to deploy.
         */
        sku: pulumi.Input<inputs.cache.SkuResponse>;
        /**
         * Redis SSL port.
         */
        sslPort: pulumi.Input<number>;
        /**
         * Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network.
         */
        staticIP?: pulumi.Input<string>;
        /**
         * The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
         */
        subnetId?: pulumi.Input<string>;
        /**
         * A dictionary of tenant settings
         */
        tenantSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * List of patch schedules for a Redis cache.
     */
    export interface ScheduleEntries {
        /**
         * List of patch schedules for a Redis cache.
         */
        scheduleEntries: pulumi.Input<pulumi.Input<inputs.cache.ScheduleEntry>[]>;
    }

    /**
     * List of patch schedules for a Redis cache.
     */
    export interface ScheduleEntriesResponse {
        /**
         * List of patch schedules for a Redis cache.
         */
        scheduleEntries: pulumi.Input<pulumi.Input<inputs.cache.ScheduleEntryResponse>[]>;
    }

    /**
     * Patch schedule entry for a Premium Redis Cache.
     */
    export interface ScheduleEntry {
        /**
         * Day of the week when a cache can be patched.
         */
        dayOfWeek: pulumi.Input<string>;
        /**
         * ISO8601 timespan specifying how much time cache patching can take. 
         */
        maintenanceWindow?: pulumi.Input<string>;
        /**
         * Start hour after which cache patching can start.
         */
        startHourUtc: pulumi.Input<number>;
    }

    /**
     * Patch schedule entry for a Premium Redis Cache.
     */
    export interface ScheduleEntryResponse {
        /**
         * Day of the week when a cache can be patched.
         */
        dayOfWeek: pulumi.Input<string>;
        /**
         * ISO8601 timespan specifying how much time cache patching can take. 
         */
        maintenanceWindow?: pulumi.Input<string>;
        /**
         * Start hour after which cache patching can start.
         */
        startHourUtc: pulumi.Input<number>;
    }

    /**
     * SKU parameters supplied to the create Redis operation.
     */
    export interface Sku {
        /**
         * The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).
         */
        capacity: pulumi.Input<number>;
        /**
         * The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).
         */
        family: pulumi.Input<string>;
        /**
         * The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)
         */
        name: pulumi.Input<string>;
    }

    /**
     * SKU parameters supplied to the create Redis operation.
     */
    export interface SkuResponse {
        /**
         * The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).
         */
        capacity: pulumi.Input<number>;
        /**
         * The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).
         */
        family: pulumi.Input<string>;
        /**
         * The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)
         */
        name: pulumi.Input<string>;
    }
}

export namespace cdn {
    /**
     * Defines the ARM Resource ID for the linked endpoints
     */
    export interface CdnEndpointResponse {
        /**
         * ARM Resource ID string.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Defines CDN web application firewall policy properties.
     */
    export interface CdnWebApplicationFirewallPolicyProperties {
        /**
         * Describes custom rules inside the policy.
         */
        customRules?: pulumi.Input<inputs.cdn.CustomRuleList>;
        /**
         * Describes managed rules inside the policy.
         */
        managedRules?: pulumi.Input<inputs.cdn.ManagedRuleSetList>;
        /**
         * Describes  policySettings for policy
         */
        policySettings?: pulumi.Input<inputs.cdn.PolicySettings>;
        /**
         * Describes rate limit rules inside the policy.
         */
        rateLimitRules?: pulumi.Input<inputs.cdn.RateLimitRuleList>;
    }

    /**
     * Defines CDN web application firewall policy properties.
     */
    export interface CdnWebApplicationFirewallPolicyPropertiesResponse {
        /**
         * Describes custom rules inside the policy.
         */
        customRules?: pulumi.Input<inputs.cdn.CustomRuleListResponse>;
        /**
         * Describes Azure CDN endpoints associated with this Web Application Firewall policy.
         */
        endpointLinks: pulumi.Input<pulumi.Input<inputs.cdn.CdnEndpointResponse>[]>;
        /**
         * Describes managed rules inside the policy.
         */
        managedRules?: pulumi.Input<inputs.cdn.ManagedRuleSetListResponse>;
        /**
         * Describes  policySettings for policy
         */
        policySettings?: pulumi.Input<inputs.cdn.PolicySettingsResponse>;
        /**
         * Provisioning state of the WebApplicationFirewallPolicy.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Describes rate limit rules inside the policy.
         */
        rateLimitRules?: pulumi.Input<inputs.cdn.RateLimitRuleListResponse>;
        resourceState: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties of the custom domain to create.
     */
    export interface CustomDomainPropertiesParameters {
        /**
         * The host name of the custom domain. Must be a domain name.
         */
        hostName: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties of the custom domain to create.
     */
    export interface CustomDomainPropertiesResponse {
        /**
         * Provisioning status of Custom Https of the custom domain.
         */
        customHttpsProvisioningState: pulumi.Input<string>;
        /**
         * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
         */
        customHttpsProvisioningSubstate: pulumi.Input<string>;
        /**
         * The host name of the custom domain. Must be a domain name.
         */
        hostName: pulumi.Input<string>;
        /**
         * Provisioning status of the custom domain.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Resource status of the custom domain.
         */
        resourceState: pulumi.Input<string>;
        /**
         * Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
         */
        validationData?: pulumi.Input<string>;
    }

    /**
     * Defines the common attributes for a custom rule that can be included in a waf policy
     */
    export interface CustomRule {
        /**
         * Describes what action to be applied when rule matches
         */
        action: pulumi.Input<string>;
        /**
         * Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
         */
        enabledState?: pulumi.Input<string>;
        /**
         * List of match conditions.
         */
        matchConditions: pulumi.Input<pulumi.Input<inputs.cdn.MatchCondition>[]>;
        /**
         * Defines the name of the custom rule
         */
        name: pulumi.Input<string>;
        /**
         * Defines in what order this rule be evaluated in the overall list of custom rules
         */
        priority: pulumi.Input<number>;
    }

    /**
     * Defines contents of custom rules
     */
    export interface CustomRuleList {
        /**
         * List of rules
         */
        rules?: pulumi.Input<pulumi.Input<inputs.cdn.CustomRule>[]>;
    }

    /**
     * Defines contents of custom rules
     */
    export interface CustomRuleListResponse {
        /**
         * List of rules
         */
        rules?: pulumi.Input<pulumi.Input<inputs.cdn.CustomRuleResponse>[]>;
    }

    /**
     * Defines the common attributes for a custom rule that can be included in a waf policy
     */
    export interface CustomRuleResponse {
        /**
         * Describes what action to be applied when rule matches
         */
        action: pulumi.Input<string>;
        /**
         * Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
         */
        enabledState?: pulumi.Input<string>;
        /**
         * List of match conditions.
         */
        matchConditions: pulumi.Input<pulumi.Input<inputs.cdn.MatchConditionResponse>[]>;
        /**
         * Defines the name of the custom rule
         */
        name: pulumi.Input<string>;
        /**
         * Defines in what order this rule be evaluated in the overall list of custom rules
         */
        priority: pulumi.Input<number>;
    }

    /**
     * The main origin of CDN content which is added when creating a CDN endpoint.
     */
    export interface DeepCreatedOrigin {
        /**
         * Origin name which must be unique within the endpoint. 
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the origin created on the CDN endpoint.
         */
        properties?: pulumi.Input<inputs.cdn.DeepCreatedOriginProperties>;
    }

    /**
     * The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
     */
    export interface DeepCreatedOriginGroup {
        /**
         * Origin group name which must be unique within the endpoint.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the origin group created on the CDN endpoint.
         */
        properties?: pulumi.Input<inputs.cdn.DeepCreatedOriginGroupProperties>;
    }

    /**
     * Properties of the origin group created on the CDN endpoint.
     */
    export interface DeepCreatedOriginGroupProperties {
        /**
         * Health probe settings to the origin that is used to determine the health of the origin.
         */
        healthProbeSettings?: pulumi.Input<inputs.cdn.HealthProbeParameters>;
        /**
         * The source of the content being delivered via CDN within given origin group.
         */
        origins: pulumi.Input<pulumi.Input<inputs.cdn.ResourceReference>[]>;
        /**
         * The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
         */
        responseBasedOriginErrorDetectionSettings?: pulumi.Input<inputs.cdn.ResponseBasedOriginErrorDetectionParameters>;
        /**
         * Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
         */
        trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: pulumi.Input<number>;
    }

    /**
     * Properties of the origin group created on the CDN endpoint.
     */
    export interface DeepCreatedOriginGroupPropertiesResponse {
        /**
         * Health probe settings to the origin that is used to determine the health of the origin.
         */
        healthProbeSettings?: pulumi.Input<inputs.cdn.HealthProbeParametersResponse>;
        /**
         * The source of the content being delivered via CDN within given origin group.
         */
        origins: pulumi.Input<pulumi.Input<inputs.cdn.ResourceReferenceResponse>[]>;
        /**
         * The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
         */
        responseBasedOriginErrorDetectionSettings?: pulumi.Input<inputs.cdn.ResponseBasedOriginErrorDetectionParametersResponse>;
        /**
         * Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
         */
        trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: pulumi.Input<number>;
    }

    /**
     * The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
     */
    export interface DeepCreatedOriginGroupResponse {
        /**
         * Origin group name which must be unique within the endpoint.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the origin group created on the CDN endpoint.
         */
        properties?: pulumi.Input<inputs.cdn.DeepCreatedOriginGroupPropertiesResponse>;
    }

    /**
     * Properties of the origin created on the CDN endpoint.
     */
    export interface DeepCreatedOriginProperties {
        /**
         * Origin is enabled for load balancing or not. By default, origin is always enabled.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
         */
        hostName: pulumi.Input<string>;
        /**
         * The value of the HTTP port. Must be between 1 and 65535.
         */
        httpPort?: pulumi.Input<number>;
        /**
         * The value of the HTTPS port. Must be between 1 and 65535.
         */
        httpsPort?: pulumi.Input<number>;
        /**
         * The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
         */
        originHostHeader?: pulumi.Input<string>;
        /**
         * Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
         */
        priority?: pulumi.Input<number>;
        /**
         * Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
         */
        weight?: pulumi.Input<number>;
    }

    /**
     * Properties of the origin created on the CDN endpoint.
     */
    export interface DeepCreatedOriginPropertiesResponse {
        /**
         * Origin is enabled for load balancing or not. By default, origin is always enabled.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
         */
        hostName: pulumi.Input<string>;
        /**
         * The value of the HTTP port. Must be between 1 and 65535.
         */
        httpPort?: pulumi.Input<number>;
        /**
         * The value of the HTTPS port. Must be between 1 and 65535.
         */
        httpsPort?: pulumi.Input<number>;
        /**
         * The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
         */
        originHostHeader?: pulumi.Input<string>;
        /**
         * Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
         */
        priority?: pulumi.Input<number>;
        /**
         * Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
         */
        weight?: pulumi.Input<number>;
    }

    /**
     * The main origin of CDN content which is added when creating a CDN endpoint.
     */
    export interface DeepCreatedOriginResponse {
        /**
         * Origin name which must be unique within the endpoint. 
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the origin created on the CDN endpoint.
         */
        properties?: pulumi.Input<inputs.cdn.DeepCreatedOriginPropertiesResponse>;
    }

    /**
     * A rule that specifies a set of actions and conditions
     */
    export interface DeliveryRule {
        /**
         * A list of actions that are executed when all the conditions of a rule are satisfied.
         */
        actions: pulumi.Input<pulumi.Input<inputs.cdn.DeliveryRuleAction>[]>;
        /**
         * A list of conditions that must be matched for the actions to be executed
         */
        conditions?: pulumi.Input<pulumi.Input<inputs.cdn.DeliveryRuleCondition>[]>;
        /**
         * Name of the rule
         */
        name?: pulumi.Input<string>;
        /**
         * The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
         */
        order: pulumi.Input<number>;
    }

    /**
     * An action for the delivery rule.
     */
    export interface DeliveryRuleAction {
        /**
         * The name of the action for the delivery rule.
         */
        name: pulumi.Input<string>;
    }

    /**
     * An action for the delivery rule.
     */
    export interface DeliveryRuleActionResponse {
        /**
         * The name of the action for the delivery rule.
         */
        name: pulumi.Input<string>;
    }

    /**
     * A condition for the delivery rule.
     */
    export interface DeliveryRuleCondition {
        /**
         * The name of the condition for the delivery rule.
         */
        name: pulumi.Input<string>;
    }

    /**
     * A condition for the delivery rule.
     */
    export interface DeliveryRuleConditionResponse {
        /**
         * The name of the condition for the delivery rule.
         */
        name: pulumi.Input<string>;
    }

    /**
     * A rule that specifies a set of actions and conditions
     */
    export interface DeliveryRuleResponse {
        /**
         * A list of actions that are executed when all the conditions of a rule are satisfied.
         */
        actions: pulumi.Input<pulumi.Input<inputs.cdn.DeliveryRuleActionResponse>[]>;
        /**
         * A list of conditions that must be matched for the actions to be executed
         */
        conditions?: pulumi.Input<pulumi.Input<inputs.cdn.DeliveryRuleConditionResponse>[]>;
        /**
         * Name of the rule
         */
        name?: pulumi.Input<string>;
        /**
         * The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
         */
        order: pulumi.Input<number>;
    }

    /**
     * The JSON object that contains the properties required to create an endpoint.
     */
    export interface EndpointProperties {
        /**
         * List of content types on which compression applies. The value should be a valid MIME type.
         */
        contentTypesToCompress?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A reference to the origin group.
         */
        defaultOriginGroup?: pulumi.Input<inputs.cdn.ResourceReference>;
        /**
         * A policy that specifies the delivery rules to be used for an endpoint.
         */
        deliveryPolicy?: pulumi.Input<inputs.cdn.EndpointPropertiesUpdateParametersProperties>;
        /**
         * List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
         */
        geoFilters?: pulumi.Input<pulumi.Input<inputs.cdn.GeoFilter>[]>;
        /**
         * Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
         */
        isCompressionEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
         */
        isHttpAllowed?: pulumi.Input<boolean>;
        /**
         * Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
         */
        isHttpsAllowed?: pulumi.Input<boolean>;
        /**
         * Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
         */
        optimizationType?: pulumi.Input<string>;
        /**
         * The origin groups comprising of origins that are used for load balancing the traffic based on availability.
         */
        originGroups?: pulumi.Input<pulumi.Input<inputs.cdn.DeepCreatedOriginGroup>[]>;
        /**
         * The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
         */
        originHostHeader?: pulumi.Input<string>;
        /**
         * A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
         */
        originPath?: pulumi.Input<string>;
        /**
         * The source of the content being delivered via CDN.
         */
        origins: pulumi.Input<pulumi.Input<inputs.cdn.DeepCreatedOrigin>[]>;
        /**
         * Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
         */
        probePath?: pulumi.Input<string>;
        /**
         * Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
         */
        queryStringCachingBehavior?: pulumi.Input<string>;
        /**
         * List of keys used to validate the signed URL hashes.
         */
        urlSigningKeys?: pulumi.Input<inputs.cdn.UrlSigningKey>;
        /**
         * Defines the Web Application Firewall policy for the endpoint (if applicable)
         */
        webApplicationFirewallPolicyLink?: pulumi.Input<inputs.cdn.EndpointPropertiesUpdateParametersProperties>;
    }

    /**
     * The JSON object that contains the properties required to create an endpoint.
     */
    export interface EndpointPropertiesResponse {
        /**
         * List of content types on which compression applies. The value should be a valid MIME type.
         */
        contentTypesToCompress?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A reference to the origin group.
         */
        defaultOriginGroup?: pulumi.Input<inputs.cdn.ResourceReferenceResponse>;
        /**
         * A policy that specifies the delivery rules to be used for an endpoint.
         */
        deliveryPolicy?: pulumi.Input<inputs.cdn.EndpointPropertiesUpdateParametersResponseProperties>;
        /**
         * List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
         */
        geoFilters?: pulumi.Input<pulumi.Input<inputs.cdn.GeoFilterResponse>[]>;
        /**
         * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
         */
        hostName: pulumi.Input<string>;
        /**
         * Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
         */
        isCompressionEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
         */
        isHttpAllowed?: pulumi.Input<boolean>;
        /**
         * Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
         */
        isHttpsAllowed?: pulumi.Input<boolean>;
        /**
         * Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
         */
        optimizationType?: pulumi.Input<string>;
        /**
         * The origin groups comprising of origins that are used for load balancing the traffic based on availability.
         */
        originGroups?: pulumi.Input<pulumi.Input<inputs.cdn.DeepCreatedOriginGroupResponse>[]>;
        /**
         * The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
         */
        originHostHeader?: pulumi.Input<string>;
        /**
         * A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
         */
        originPath?: pulumi.Input<string>;
        /**
         * The source of the content being delivered via CDN.
         */
        origins: pulumi.Input<pulumi.Input<inputs.cdn.DeepCreatedOriginResponse>[]>;
        /**
         * Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
         */
        probePath?: pulumi.Input<string>;
        /**
         * Provisioning status of the endpoint.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
         */
        queryStringCachingBehavior?: pulumi.Input<string>;
        /**
         * Resource status of the endpoint.
         */
        resourceState: pulumi.Input<string>;
        /**
         * List of keys used to validate the signed URL hashes.
         */
        urlSigningKeys?: pulumi.Input<inputs.cdn.UrlSigningKeyResponse>;
        /**
         * Defines the Web Application Firewall policy for the endpoint (if applicable)
         */
        webApplicationFirewallPolicyLink?: pulumi.Input<inputs.cdn.EndpointPropertiesUpdateParametersResponseProperties>;
    }

    /**
     * A policy that specifies the delivery rules to be used for an endpoint.
     */
    export interface EndpointPropertiesUpdateParametersProperties {
        /**
         * User-friendly description of the policy.
         */
        description?: pulumi.Input<string>;
        /**
         * A list of the delivery rules.
         */
        rules: pulumi.Input<pulumi.Input<inputs.cdn.DeliveryRule>[]>;
    }

    /**
     * A policy that specifies the delivery rules to be used for an endpoint.
     */
    export interface EndpointPropertiesUpdateParametersResponseProperties {
        /**
         * User-friendly description of the policy.
         */
        description?: pulumi.Input<string>;
        /**
         * A list of the delivery rules.
         */
        rules: pulumi.Input<pulumi.Input<inputs.cdn.DeliveryRuleResponse>[]>;
    }

    /**
     * Rules defining user's geo access within a CDN endpoint.
     */
    export interface GeoFilter {
        /**
         * Action of the geo filter, i.e. allow or block access.
         */
        action: pulumi.Input<string>;
        /**
         * Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
         */
        countryCodes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
         */
        relativePath: pulumi.Input<string>;
    }

    /**
     * Rules defining user's geo access within a CDN endpoint.
     */
    export interface GeoFilterResponse {
        /**
         * Action of the geo filter, i.e. allow or block access.
         */
        action: pulumi.Input<string>;
        /**
         * Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
         */
        countryCodes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
         */
        relativePath: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties to send health probes to origin.
     */
    export interface HealthProbeParameters {
        /**
         * The number of seconds between health probes.Default is 240sec.
         */
        probeIntervalInSeconds?: pulumi.Input<number>;
        /**
         * The path relative to the origin that is used to determine the health of the origin.
         */
        probePath?: pulumi.Input<string>;
        /**
         * Protocol to use for health probe.
         */
        probeProtocol?: pulumi.Input<string>;
        /**
         * The type of health probe request that is made.
         */
        probeRequestType?: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties to send health probes to origin.
     */
    export interface HealthProbeParametersResponse {
        /**
         * The number of seconds between health probes.Default is 240sec.
         */
        probeIntervalInSeconds?: pulumi.Input<number>;
        /**
         * The path relative to the origin that is used to determine the health of the origin.
         */
        probePath?: pulumi.Input<string>;
        /**
         * Protocol to use for health probe.
         */
        probeProtocol?: pulumi.Input<string>;
        /**
         * The type of health probe request that is made.
         */
        probeRequestType?: pulumi.Input<string>;
    }

    /**
     * The JSON object that represents the range for http status codes
     */
    export interface HttpErrorRangeParameters {
        /**
         * The inclusive start of the http status code range.
         */
        begin?: pulumi.Input<number>;
        /**
         * The inclusive end of the http status code range.
         */
        end?: pulumi.Input<number>;
    }

    /**
     * The JSON object that represents the range for http status codes
     */
    export interface HttpErrorRangeParametersResponse {
        /**
         * The inclusive start of the http status code range.
         */
        begin?: pulumi.Input<number>;
        /**
         * The inclusive end of the http status code range.
         */
        end?: pulumi.Input<number>;
    }

    /**
     * Describes the parameters for using a user's KeyVault for URL Signing Key.
     */
    export interface KeyVaultSigningKeyParameters {
        /**
         * Resource group of the user's Key Vault containing the secret
         */
        resourceGroupName: pulumi.Input<string>;
        /**
         * The name of secret in Key Vault.
         */
        secretName: pulumi.Input<string>;
        /**
         * The version(GUID) of secret in Key Vault.
         */
        secretVersion: pulumi.Input<string>;
        /**
         * Subscription Id of the user's Key Vault containing the secret
         */
        subscriptionId: pulumi.Input<string>;
        /**
         * The name of the user's Key Vault containing the secret
         */
        vaultName: pulumi.Input<string>;
    }

    /**
     * Describes the parameters for using a user's KeyVault for URL Signing Key.
     */
    export interface KeyVaultSigningKeyParametersResponse {
        /**
         * Resource group of the user's Key Vault containing the secret
         */
        resourceGroupName: pulumi.Input<string>;
        /**
         * The name of secret in Key Vault.
         */
        secretName: pulumi.Input<string>;
        /**
         * The version(GUID) of secret in Key Vault.
         */
        secretVersion: pulumi.Input<string>;
        /**
         * Subscription Id of the user's Key Vault containing the secret
         */
        subscriptionId: pulumi.Input<string>;
        /**
         * The name of the user's Key Vault containing the secret
         */
        vaultName: pulumi.Input<string>;
    }

    /**
     * Defines a managed rule group override setting.
     */
    export interface ManagedRuleGroupOverride {
        /**
         * Describes the managed rule group within the rule set to override
         */
        ruleGroupName: pulumi.Input<string>;
        /**
         * List of rules that will be disabled. If none specified, all rules in the group will be disabled.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.cdn.ManagedRuleOverride>[]>;
    }

    /**
     * Defines a managed rule group override setting.
     */
    export interface ManagedRuleGroupOverrideResponse {
        /**
         * Describes the managed rule group within the rule set to override
         */
        ruleGroupName: pulumi.Input<string>;
        /**
         * List of rules that will be disabled. If none specified, all rules in the group will be disabled.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.cdn.ManagedRuleOverrideResponse>[]>;
    }

    /**
     * Defines a managed rule group override setting.
     */
    export interface ManagedRuleOverride {
        /**
         * Describes the override action to be applied when rule matches.
         */
        action?: pulumi.Input<string>;
        /**
         * Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
         */
        enabledState?: pulumi.Input<string>;
        /**
         * Identifier for the managed rule.
         */
        ruleId: pulumi.Input<string>;
    }

    /**
     * Defines a managed rule group override setting.
     */
    export interface ManagedRuleOverrideResponse {
        /**
         * Describes the override action to be applied when rule matches.
         */
        action?: pulumi.Input<string>;
        /**
         * Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
         */
        enabledState?: pulumi.Input<string>;
        /**
         * Identifier for the managed rule.
         */
        ruleId: pulumi.Input<string>;
    }

    /**
     * Defines a managed rule set.
     */
    export interface ManagedRuleSet {
        /**
         * Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
         */
        anomalyScore?: pulumi.Input<number>;
        /**
         * Defines the rule overrides to apply to the rule set.
         */
        ruleGroupOverrides?: pulumi.Input<pulumi.Input<inputs.cdn.ManagedRuleGroupOverride>[]>;
        /**
         * Defines the rule set type to use.
         */
        ruleSetType: pulumi.Input<string>;
        /**
         * Defines the version of the rule set to use.
         */
        ruleSetVersion: pulumi.Input<string>;
    }

    /**
     * Defines the list of managed rule sets for the policy.
     */
    export interface ManagedRuleSetList {
        /**
         * List of rule sets.
         */
        managedRuleSets?: pulumi.Input<pulumi.Input<inputs.cdn.ManagedRuleSet>[]>;
    }

    /**
     * Defines the list of managed rule sets for the policy.
     */
    export interface ManagedRuleSetListResponse {
        /**
         * List of rule sets.
         */
        managedRuleSets?: pulumi.Input<pulumi.Input<inputs.cdn.ManagedRuleSetResponse>[]>;
    }

    /**
     * Defines a managed rule set.
     */
    export interface ManagedRuleSetResponse {
        /**
         * Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
         */
        anomalyScore?: pulumi.Input<number>;
        /**
         * Defines the rule overrides to apply to the rule set.
         */
        ruleGroupOverrides?: pulumi.Input<pulumi.Input<inputs.cdn.ManagedRuleGroupOverrideResponse>[]>;
        /**
         * Defines the rule set type to use.
         */
        ruleSetType: pulumi.Input<string>;
        /**
         * Defines the version of the rule set to use.
         */
        ruleSetVersion: pulumi.Input<string>;
    }

    /**
     * Define match conditions
     */
    export interface MatchCondition {
        /**
         * List of possible match values.
         */
        matchValue: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Match variable to compare against.
         */
        matchVariable: pulumi.Input<string>;
        /**
         * Describes if the result of this condition should be negated.
         */
        negateCondition?: pulumi.Input<boolean>;
        /**
         * Describes operator to be matched
         */
        operator: pulumi.Input<string>;
        /**
         * Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
         */
        selector?: pulumi.Input<string>;
        /**
         * List of transforms.
         */
        transforms?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Define match conditions
     */
    export interface MatchConditionResponse {
        /**
         * List of possible match values.
         */
        matchValue: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Match variable to compare against.
         */
        matchVariable: pulumi.Input<string>;
        /**
         * Describes if the result of this condition should be negated.
         */
        negateCondition?: pulumi.Input<boolean>;
        /**
         * Describes operator to be matched
         */
        operator: pulumi.Input<string>;
        /**
         * Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
         */
        selector?: pulumi.Input<string>;
        /**
         * List of transforms.
         */
        transforms?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The JSON object that contains the properties of the origin group.
     */
    export interface OriginGroupProperties {
        /**
         * Health probe settings to the origin that is used to determine the health of the origin.
         */
        healthProbeSettings?: pulumi.Input<inputs.cdn.HealthProbeParameters>;
        /**
         * The source of the content being delivered via CDN within given origin group.
         */
        origins: pulumi.Input<pulumi.Input<inputs.cdn.ResourceReference>[]>;
        /**
         * The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported.
         */
        responseBasedOriginErrorDetectionSettings?: pulumi.Input<inputs.cdn.ResponseBasedOriginErrorDetectionParameters>;
        /**
         * Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
         */
        trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: pulumi.Input<number>;
    }

    /**
     * The JSON object that contains the properties of the origin group.
     */
    export interface OriginGroupPropertiesResponse {
        /**
         * Health probe settings to the origin that is used to determine the health of the origin.
         */
        healthProbeSettings?: pulumi.Input<inputs.cdn.HealthProbeParametersResponse>;
        /**
         * The source of the content being delivered via CDN within given origin group.
         */
        origins: pulumi.Input<pulumi.Input<inputs.cdn.ResourceReferenceResponse>[]>;
        /**
         * Provisioning status of the origin group.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Resource status of the origin group.
         */
        resourceState: pulumi.Input<string>;
        /**
         * The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported.
         */
        responseBasedOriginErrorDetectionSettings?: pulumi.Input<inputs.cdn.ResponseBasedOriginErrorDetectionParametersResponse>;
        /**
         * Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
         */
        trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: pulumi.Input<number>;
    }

    /**
     * The JSON object that contains the properties of the origin.
     */
    export interface OriginProperties {
        /**
         * Origin is enabled for load balancing or not
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.
         */
        hostName: pulumi.Input<string>;
        /**
         * The value of the HTTP port. Must be between 1 and 65535.
         */
        httpPort?: pulumi.Input<number>;
        /**
         * The value of the HTTPS port. Must be between 1 and 65535.
         */
        httpsPort?: pulumi.Input<number>;
        /**
         * The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
         */
        originHostHeader?: pulumi.Input<string>;
        /**
         * Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
         */
        priority?: pulumi.Input<number>;
        /**
         * Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
         */
        weight?: pulumi.Input<number>;
    }

    /**
     * The JSON object that contains the properties of the origin.
     */
    export interface OriginPropertiesResponse {
        /**
         * Origin is enabled for load balancing or not
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.
         */
        hostName: pulumi.Input<string>;
        /**
         * The value of the HTTP port. Must be between 1 and 65535.
         */
        httpPort?: pulumi.Input<number>;
        /**
         * The value of the HTTPS port. Must be between 1 and 65535.
         */
        httpsPort?: pulumi.Input<number>;
        /**
         * The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
         */
        originHostHeader?: pulumi.Input<string>;
        /**
         * Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
         */
        priority?: pulumi.Input<number>;
        /**
         * Provisioning status of the origin.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Resource status of the origin.
         */
        resourceState: pulumi.Input<string>;
        /**
         * Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
         */
        weight?: pulumi.Input<number>;
    }

    /**
     * Defines contents of a web application firewall global configuration
     */
    export interface PolicySettings {
        /**
         * If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
         */
        defaultCustomBlockResponseBody?: pulumi.Input<string>;
        /**
         * If the action type is block, this field defines the default customer overridable http response status code.
         */
        defaultCustomBlockResponseStatusCode?: pulumi.Input<number>;
        /**
         * If action type is redirect, this field represents the default redirect URL for the client.
         */
        defaultRedirectUrl?: pulumi.Input<string>;
        /**
         * describes if the policy is in enabled state or disabled state
         */
        enabledState?: pulumi.Input<string>;
        /**
         * Describes if it is in detection mode or prevention mode at policy level.
         */
        mode?: pulumi.Input<string>;
    }

    /**
     * Defines contents of a web application firewall global configuration
     */
    export interface PolicySettingsResponse {
        /**
         * If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
         */
        defaultCustomBlockResponseBody?: pulumi.Input<string>;
        /**
         * If the action type is block, this field defines the default customer overridable http response status code.
         */
        defaultCustomBlockResponseStatusCode?: pulumi.Input<number>;
        /**
         * If action type is redirect, this field represents the default redirect URL for the client.
         */
        defaultRedirectUrl?: pulumi.Input<string>;
        /**
         * describes if the policy is in enabled state or disabled state
         */
        enabledState?: pulumi.Input<string>;
        /**
         * Describes if it is in detection mode or prevention mode at policy level.
         */
        mode?: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties required to create a profile.
     */
    export interface ProfileProperties {
    }

    /**
     * The JSON object that contains the properties required to create a profile.
     */
    export interface ProfilePropertiesResponse {
        /**
         * Provisioning status of the profile.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Resource status of the profile.
         */
        resourceState: pulumi.Input<string>;
    }

    /**
     * Defines a rate limiting rule that can be included in a waf policy
     */
    export interface RateLimitRule {
        /**
         * Describes what action to be applied when rule matches
         */
        action: pulumi.Input<string>;
        /**
         * Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
         */
        enabledState?: pulumi.Input<string>;
        /**
         * List of match conditions.
         */
        matchConditions: pulumi.Input<pulumi.Input<inputs.cdn.MatchCondition>[]>;
        /**
         * Defines the name of the custom rule
         */
        name: pulumi.Input<string>;
        /**
         * Defines in what order this rule be evaluated in the overall list of custom rules
         */
        priority: pulumi.Input<number>;
        /**
         * Defines rate limit duration. Default is 1 minute.
         */
        rateLimitDurationInMinutes: pulumi.Input<number>;
        /**
         * Defines rate limit threshold.
         */
        rateLimitThreshold: pulumi.Input<number>;
    }

    /**
     * Defines contents of rate limit rules
     */
    export interface RateLimitRuleList {
        /**
         * List of rules
         */
        rules?: pulumi.Input<pulumi.Input<inputs.cdn.RateLimitRule>[]>;
    }

    /**
     * Defines contents of rate limit rules
     */
    export interface RateLimitRuleListResponse {
        /**
         * List of rules
         */
        rules?: pulumi.Input<pulumi.Input<inputs.cdn.RateLimitRuleResponse>[]>;
    }

    /**
     * Defines a rate limiting rule that can be included in a waf policy
     */
    export interface RateLimitRuleResponse {
        /**
         * Describes what action to be applied when rule matches
         */
        action: pulumi.Input<string>;
        /**
         * Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
         */
        enabledState?: pulumi.Input<string>;
        /**
         * List of match conditions.
         */
        matchConditions: pulumi.Input<pulumi.Input<inputs.cdn.MatchConditionResponse>[]>;
        /**
         * Defines the name of the custom rule
         */
        name: pulumi.Input<string>;
        /**
         * Defines in what order this rule be evaluated in the overall list of custom rules
         */
        priority: pulumi.Input<number>;
        /**
         * Defines rate limit duration. Default is 1 minute.
         */
        rateLimitDurationInMinutes: pulumi.Input<number>;
        /**
         * Defines rate limit threshold.
         */
        rateLimitThreshold: pulumi.Input<number>;
    }

    /**
     * Reference to another resource.
     */
    export interface ResourceReference {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Reference to another resource.
     */
    export interface ResourceReferenceResponse {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties to determine origin health using real requests/responses.
     */
    export interface ResponseBasedOriginErrorDetectionParameters {
        /**
         * The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
         */
        httpErrorRanges?: pulumi.Input<pulumi.Input<inputs.cdn.HttpErrorRangeParameters>[]>;
        /**
         * Type of response errors for real user requests for which origin will be deemed unhealthy
         */
        responseBasedDetectedErrorTypes?: pulumi.Input<string>;
        /**
         * The percentage of failed requests in the sample where failover should trigger.
         */
        responseBasedFailoverThresholdPercentage?: pulumi.Input<number>;
    }

    /**
     * The JSON object that contains the properties to determine origin health using real requests/responses.
     */
    export interface ResponseBasedOriginErrorDetectionParametersResponse {
        /**
         * The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
         */
        httpErrorRanges?: pulumi.Input<pulumi.Input<inputs.cdn.HttpErrorRangeParametersResponse>[]>;
        /**
         * Type of response errors for real user requests for which origin will be deemed unhealthy
         */
        responseBasedDetectedErrorTypes?: pulumi.Input<string>;
        /**
         * The percentage of failed requests in the sample where failover should trigger.
         */
        responseBasedFailoverThresholdPercentage?: pulumi.Input<number>;
    }

    /**
     * The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
     */
    export interface Sku {
        /**
         * Name of the pricing tier.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
     */
    export interface SkuResponse {
        /**
         * Name of the pricing tier.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Url signing key
     */
    export interface UrlSigningKey {
        /**
         * Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
         */
        keyId: pulumi.Input<string>;
        /**
         * Defines the parameters for using customer key vault for Url Signing Key.
         */
        keySourceParameters: pulumi.Input<inputs.cdn.KeyVaultSigningKeyParameters>;
    }

    /**
     * Url signing key
     */
    export interface UrlSigningKeyResponse {
        /**
         * Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
         */
        keyId: pulumi.Input<string>;
        /**
         * Defines the parameters for using customer key vault for Url Signing Key.
         */
        keySourceParameters: pulumi.Input<inputs.cdn.KeyVaultSigningKeyParametersResponse>;
    }
}

export namespace certificateregistration {
    /**
     * Key Vault container for a certificate that is purchased through Azure.
     */
    export interface AppServiceCertificate {
        /**
         * Key Vault resource Id.
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * Key Vault secret name.
         */
        keyVaultSecretName?: pulumi.Input<string>;
    }

    /**
     * AppServiceCertificateOrder resource specific properties
     */
    export interface AppServiceCertificateOrderProperties {
        /**
         * <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
         */
        autoRenew?: pulumi.Input<boolean>;
        /**
         * State of the Key Vault secret.
         */
        certificates?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Last CSR that was created for this order.
         */
        csr?: pulumi.Input<string>;
        /**
         * Certificate distinguished name.
         */
        distinguishedName?: pulumi.Input<string>;
        /**
         * Certificate key size.
         */
        keySize?: pulumi.Input<number>;
        /**
         * Certificate product type.
         */
        productType: pulumi.Input<string>;
        /**
         * Duration in years (must be between 1 and 3).
         */
        validityInYears?: pulumi.Input<number>;
    }

    /**
     * AppServiceCertificateOrder resource specific properties
     */
    export interface AppServiceCertificateOrderResponseProperties {
        /**
         * Reasons why App Service Certificate is not renewable at the current moment.
         */
        appServiceCertificateNotRenewableReasons: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
         */
        autoRenew?: pulumi.Input<boolean>;
        /**
         * State of the Key Vault secret.
         */
        certificates?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Last CSR that was created for this order.
         */
        csr?: pulumi.Input<string>;
        /**
         * Certificate distinguished name.
         */
        distinguishedName?: pulumi.Input<string>;
        /**
         * Domain verification token.
         */
        domainVerificationToken: pulumi.Input<string>;
        /**
         * Certificate expiration time.
         */
        expirationTime: pulumi.Input<string>;
        /**
         * Intermediate certificate.
         */
        intermediate: pulumi.Input<inputs.certificateregistration.CertificateDetailsResponse>;
        /**
         * <code>true</code> if private key is external; otherwise, <code>false</code>.
         */
        isPrivateKeyExternal: pulumi.Input<boolean>;
        /**
         * Certificate key size.
         */
        keySize?: pulumi.Input<number>;
        /**
         * Certificate last issuance time.
         */
        lastCertificateIssuanceTime: pulumi.Input<string>;
        /**
         * Time stamp when the certificate would be auto renewed next
         */
        nextAutoRenewalTimeStamp: pulumi.Input<string>;
        /**
         * Certificate product type.
         */
        productType: pulumi.Input<string>;
        /**
         * Status of certificate order.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Root certificate.
         */
        root: pulumi.Input<inputs.certificateregistration.CertificateDetailsResponse>;
        /**
         * Current serial number of the certificate.
         */
        serialNumber: pulumi.Input<string>;
        /**
         * Signed certificate.
         */
        signedCertificate: pulumi.Input<inputs.certificateregistration.CertificateDetailsResponse>;
        /**
         * Current order status.
         */
        status: pulumi.Input<string>;
        /**
         * Duration in years (must be between 1 and 3).
         */
        validityInYears?: pulumi.Input<number>;
    }

    /**
     * Key Vault container for a certificate that is purchased through Azure.
     */
    export interface AppServiceCertificateResponse {
        /**
         * Key Vault resource Id.
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * Key Vault secret name.
         */
        keyVaultSecretName?: pulumi.Input<string>;
        /**
         * Status of the Key Vault secret.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * SSL certificate details.
     */
    export interface CertificateDetailsResponse {
        /**
         * Certificate Issuer.
         */
        issuer: pulumi.Input<string>;
        /**
         * Date Certificate is valid to.
         */
        notAfter: pulumi.Input<string>;
        /**
         * Date Certificate is valid from.
         */
        notBefore: pulumi.Input<string>;
        /**
         * Raw certificate data.
         */
        rawData: pulumi.Input<string>;
        /**
         * Certificate Serial Number.
         */
        serialNumber: pulumi.Input<string>;
        /**
         * Certificate Signature algorithm.
         */
        signatureAlgorithm: pulumi.Input<string>;
        /**
         * Certificate Subject.
         */
        subject: pulumi.Input<string>;
        /**
         * Certificate Thumbprint.
         */
        thumbprint: pulumi.Input<string>;
        /**
         * Certificate Version.
         */
        version: pulumi.Input<number>;
    }

}

export namespace cognitiveservices {
    /**
     * The api properties for special APIs.
     */
    export interface CognitiveServicesAccountApiProperties {
        /**
         * (Personalization Only) The flag to enable statistics of Bing Search.
         */
        eventHubConnectionString?: pulumi.Input<string>;
        /**
         * (QnAMaker Only) The runtime endpoint of QnAMaker.
         */
        qnaRuntimeEndpoint?: pulumi.Input<string>;
        /**
         * (Bing Search Only) The flag to enable statistics of Bing Search.
         */
        statisticsEnabled?: pulumi.Input<boolean>;
        /**
         * (Personalization Only) The storage account connection string.
         */
        storageAccountConnectionString?: pulumi.Input<string>;
    }

    /**
     * The api properties for special APIs.
     */
    export interface CognitiveServicesAccountApiPropertiesResponse {
        /**
         * (Personalization Only) The flag to enable statistics of Bing Search.
         */
        eventHubConnectionString?: pulumi.Input<string>;
        /**
         * (QnAMaker Only) The runtime endpoint of QnAMaker.
         */
        qnaRuntimeEndpoint?: pulumi.Input<string>;
        /**
         * (Bing Search Only) The flag to enable statistics of Bing Search.
         */
        statisticsEnabled?: pulumi.Input<boolean>;
        /**
         * (Personalization Only) The storage account connection string.
         */
        storageAccountConnectionString?: pulumi.Input<string>;
    }

    /**
     * Properties of Cognitive Services account.
     */
    export interface CognitiveServicesAccountProperties {
        /**
         * The api properties for special APIs.
         */
        apiProperties?: pulumi.Input<inputs.cognitiveservices.CognitiveServicesAccountApiProperties>;
        /**
         * Optional subdomain name used for token-based authentication.
         */
        customSubDomainName?: pulumi.Input<string>;
        /**
         * The encryption properties for this resource.
         */
        encryption?: pulumi.Input<inputs.cognitiveservices.Encryption>;
        /**
         * A collection of rules governing the accessibility from specific network locations.
         */
        networkAcls?: pulumi.Input<inputs.cognitiveservices.NetworkRuleSet>;
        /**
         * The private endpoint connection associated with the Cognitive Services account.
         */
        privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.cognitiveservices.PrivateEndpointConnection>[]>;
        /**
         * Whether or not public endpoint access is allowed for this account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * The storage accounts for this resource.
         */
        userOwnedStorage?: pulumi.Input<pulumi.Input<inputs.cognitiveservices.UserOwnedStorage>[]>;
    }

    /**
     * Properties of Cognitive Services account.
     */
    export interface CognitiveServicesAccountPropertiesResponse {
        /**
         * The api properties for special APIs.
         */
        apiProperties?: pulumi.Input<inputs.cognitiveservices.CognitiveServicesAccountApiPropertiesResponse>;
        /**
         * Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only.
         */
        capabilities: pulumi.Input<pulumi.Input<inputs.cognitiveservices.SkuCapabilityResponse>[]>;
        /**
         * Optional subdomain name used for token-based authentication.
         */
        customSubDomainName?: pulumi.Input<string>;
        /**
         * The encryption properties for this resource.
         */
        encryption?: pulumi.Input<inputs.cognitiveservices.EncryptionResponse>;
        /**
         * Endpoint of the created account.
         */
        endpoint: pulumi.Input<string>;
        /**
         * The internal identifier.
         */
        internalId: pulumi.Input<string>;
        /**
         * A collection of rules governing the accessibility from specific network locations.
         */
        networkAcls?: pulumi.Input<inputs.cognitiveservices.NetworkRuleSetResponse>;
        /**
         * The private endpoint connection associated with the Cognitive Services account.
         */
        privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.cognitiveservices.PrivateEndpointConnectionResponse>[]>;
        /**
         * Gets the status of the cognitive services account at the time the operation was called.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Whether or not public endpoint access is allowed for this account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * The storage accounts for this resource.
         */
        userOwnedStorage?: pulumi.Input<pulumi.Input<inputs.cognitiveservices.UserOwnedStorageResponse>[]>;
    }

    /**
     * Properties to configure Encryption
     */
    export interface Encryption {
        /**
         * Enumerates the possible value of keySource for Encryption
         */
        keySource?: pulumi.Input<string>;
        /**
         * Properties of KeyVault
         */
        keyVaultProperties?: pulumi.Input<inputs.cognitiveservices.KeyVaultProperties>;
    }

    /**
     * Properties to configure Encryption
     */
    export interface EncryptionResponse {
        /**
         * Enumerates the possible value of keySource for Encryption
         */
        keySource?: pulumi.Input<string>;
        /**
         * Properties of KeyVault
         */
        keyVaultProperties?: pulumi.Input<inputs.cognitiveservices.KeyVaultPropertiesResponse>;
    }

    /**
     * Managed service identity.
     */
    export interface Identity {
        /**
         * Type of managed service identity.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Managed service identity.
     */
    export interface IdentityResponse {
        /**
         * Principal Id of managed service identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * Tenant of managed service identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * Type of managed service identity.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * A rule governing the accessibility from a specific ip address or ip range.
     */
    export interface IpRule {
        /**
         * An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
         */
        value: pulumi.Input<string>;
    }

    /**
     * A rule governing the accessibility from a specific ip address or ip range.
     */
    export interface IpRuleResponse {
        /**
         * An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
         */
        value: pulumi.Input<string>;
    }

    /**
     * Properties to configure keyVault Properties
     */
    export interface KeyVaultProperties {
        /**
         * Name of the Key from KeyVault
         */
        keyName?: pulumi.Input<string>;
        /**
         * Uri of KeyVault
         */
        keyVaultUri?: pulumi.Input<string>;
        /**
         * Version of the Key from KeyVault
         */
        keyVersion?: pulumi.Input<string>;
    }

    /**
     * Properties to configure keyVault Properties
     */
    export interface KeyVaultPropertiesResponse {
        /**
         * Name of the Key from KeyVault
         */
        keyName?: pulumi.Input<string>;
        /**
         * Uri of KeyVault
         */
        keyVaultUri?: pulumi.Input<string>;
        /**
         * Version of the Key from KeyVault
         */
        keyVersion?: pulumi.Input<string>;
    }

    /**
     * A set of rules governing the network accessibility.
     */
    export interface NetworkRuleSet {
        /**
         * The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
         */
        defaultAction?: pulumi.Input<string>;
        /**
         * The list of IP address rules.
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.cognitiveservices.IpRule>[]>;
        /**
         * The list of virtual network rules.
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.cognitiveservices.VirtualNetworkRule>[]>;
    }

    /**
     * A set of rules governing the network accessibility.
     */
    export interface NetworkRuleSetResponse {
        /**
         * The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
         */
        defaultAction?: pulumi.Input<string>;
        /**
         * The list of IP address rules.
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.cognitiveservices.IpRuleResponse>[]>;
        /**
         * The list of virtual network rules.
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.cognitiveservices.VirtualNetworkRuleResponse>[]>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpoint {
    }

    /**
     * The Private Endpoint Connection resource.
     */
    export interface PrivateEndpointConnection {
        /**
         * Resource properties.
         */
        properties?: pulumi.Input<inputs.cognitiveservices.PrivateEndpointConnectionProperties>;
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * The private link resource group ids.
         */
        groupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.cognitiveservices.PrivateEndpoint>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.cognitiveservices.PrivateLinkServiceConnectionState>;
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The private link resource group ids.
         */
        groupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.cognitiveservices.PrivateEndpointResponse>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.cognitiveservices.PrivateLinkServiceConnectionStateResponse>;
    }

    /**
     * The Private Endpoint Connection resource.
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
         */
        id: pulumi.Input<string>;
        /**
         * The name of the resource
         */
        name: pulumi.Input<string>;
        /**
         * Resource properties.
         */
        properties?: pulumi.Input<inputs.cognitiveservices.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpointResponse {
        /**
         * The ARM identifier for Private Endpoint
         */
        id: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The SKU of the cognitive services account.
     */
    export interface Sku {
        /**
         * Gets or sets the sku name. Required for account creation, optional for update.
         */
        name: pulumi.Input<string>;
    }

    /**
     * SkuCapability indicates the capability of a certain feature.
     */
    export interface SkuCapabilityResponse {
        /**
         * The name of the SkuCapability.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the SkuCapability.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * The SKU of the cognitive services account.
     */
    export interface SkuResponse {
        /**
         * Gets or sets the sku name. Required for account creation, optional for update.
         */
        name: pulumi.Input<string>;
        /**
         * Gets the sku tier. This is based on the SKU name.
         */
        tier: pulumi.Input<string>;
    }

    /**
     * The user owned storage for Cognitive Services account.
     */
    export interface UserOwnedStorage {
        /**
         * Full resource id of a Microsoft.Storage resource.
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * The user owned storage for Cognitive Services account.
     */
    export interface UserOwnedStorageResponse {
        /**
         * Full resource id of a Microsoft.Storage resource.
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * A rule governing the accessibility from a specific virtual network.
     */
    export interface VirtualNetworkRule {
        /**
         * Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
         */
        id: pulumi.Input<string>;
        /**
         * Ignore missing vnet service endpoint or not.
         */
        ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
        /**
         * Gets the state of virtual network rule.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * A rule governing the accessibility from a specific virtual network.
     */
    export interface VirtualNetworkRuleResponse {
        /**
         * Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
         */
        id: pulumi.Input<string>;
        /**
         * Ignore missing vnet service endpoint or not.
         */
        ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
        /**
         * Gets the state of virtual network rule.
         */
        state?: pulumi.Input<string>;
    }
}

export namespace compute {
    /**
     * Enables or disables a capability on the virtual machine or virtual machine scale set.
     */
    export interface AdditionalCapabilities {
        /**
         * The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.
         */
        ultraSSDEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Enables or disables a capability on the virtual machine or virtual machine scale set.
     */
    export interface AdditionalCapabilitiesResponse {
        /**
         * The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.
         */
        ultraSSDEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
     */
    export interface AdditionalUnattendContent {
        /**
         * The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
         */
        componentName?: pulumi.Input<string>;
        /**
         * Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
         */
        content?: pulumi.Input<string>;
        /**
         * The pass name. Currently, the only allowable value is OobeSystem.
         */
        passName?: pulumi.Input<string>;
        /**
         * Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
         */
        settingName?: pulumi.Input<string>;
    }

    /**
     * Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
     */
    export interface AdditionalUnattendContentResponse {
        /**
         * The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
         */
        componentName?: pulumi.Input<string>;
        /**
         * Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
         */
        content?: pulumi.Input<string>;
        /**
         * The pass name. Currently, the only allowable value is OobeSystem.
         */
        passName?: pulumi.Input<string>;
        /**
         * Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
         */
        settingName?: pulumi.Input<string>;
    }

    /**
     * The API entity reference.
     */
    export interface ApiEntityReference {
        /**
         * The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The API entity reference.
     */
    export interface ApiEntityReferenceResponse {
        /**
         * The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The configuration parameters used for performing automatic OS upgrade.
     */
    export interface AutomaticOSUpgradePolicy {
        /**
         * Whether OS image rollback feature should be disabled. Default value is false.
         */
        disableAutomaticRollback?: pulumi.Input<boolean>;
        /**
         * Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. <br><br> If this is set to true for Windows based scale sets, [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet) is automatically set to false and cannot be set to true.
         */
        enableAutomaticOSUpgrade?: pulumi.Input<boolean>;
    }

    /**
     * The configuration parameters used for performing automatic OS upgrade.
     */
    export interface AutomaticOSUpgradePolicyResponse {
        /**
         * Whether OS image rollback feature should be disabled. Default value is false.
         */
        disableAutomaticRollback?: pulumi.Input<boolean>;
        /**
         * Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. <br><br> If this is set to true for Windows based scale sets, [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet) is automatically set to false and cannot be set to true.
         */
        enableAutomaticOSUpgrade?: pulumi.Input<boolean>;
    }

    /**
     * Specifies the configuration parameters for automatic repairs on the virtual machine scale set.
     */
    export interface AutomaticRepairsPolicy {
        /**
         * Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).
         */
        gracePeriod?: pulumi.Input<string>;
    }

    /**
     * Specifies the configuration parameters for automatic repairs on the virtual machine scale set.
     */
    export interface AutomaticRepairsPolicyResponse {
        /**
         * Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).
         */
        gracePeriod?: pulumi.Input<string>;
    }

    /**
     * The instance view of a resource.
     */
    export interface AvailabilitySetProperties {
        /**
         * Fault Domain count.
         */
        platformFaultDomainCount?: pulumi.Input<number>;
        /**
         * Update Domain count.
         */
        platformUpdateDomainCount?: pulumi.Input<number>;
        /**
         * Specifies information about the proximity placement group that the availability set should be assigned to. <br><br>Minimum api-version: 2018-04-01.
         */
        proximityPlacementGroup?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * A list of references to all virtual machines in the availability set.
         */
        virtualMachines?: pulumi.Input<pulumi.Input<inputs.compute.SubResource>[]>;
    }

    /**
     * The instance view of a resource.
     */
    export interface AvailabilitySetPropertiesResponse {
        /**
         * Fault Domain count.
         */
        platformFaultDomainCount?: pulumi.Input<number>;
        /**
         * Update Domain count.
         */
        platformUpdateDomainCount?: pulumi.Input<number>;
        /**
         * Specifies information about the proximity placement group that the availability set should be assigned to. <br><br>Minimum api-version: 2018-04-01.
         */
        proximityPlacementGroup?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * The resource status information.
         */
        statuses: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatusResponse>[]>;
        /**
         * A list of references to all virtual machines in the availability set.
         */
        virtualMachines?: pulumi.Input<pulumi.Input<inputs.compute.SubResourceResponse>[]>;
    }

    /**
     * Specifies the billing related details of a Azure Spot VM or VMSS. <br><br>Minimum api-version: 2019-03-01.
     */
    export interface BillingProfile {
        /**
         * Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.
         */
        maxPrice?: pulumi.Input<number>;
    }

    /**
     * Specifies the billing related details of a Azure Spot VM or VMSS. <br><br>Minimum api-version: 2019-03-01.
     */
    export interface BillingProfileResponse {
        /**
         * Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.
         */
        maxPrice?: pulumi.Input<number>;
    }

    /**
     * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
     */
    export interface BootDiagnostics {
        /**
         * Whether boot diagnostics should be enabled on the Virtual Machine.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
         */
        storageUri?: pulumi.Input<string>;
    }

    /**
     * The instance view of a virtual machine boot diagnostics.
     */
    export interface BootDiagnosticsInstanceViewResponse {
        /**
         * The console screenshot blob URI. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with managed storage.
         */
        consoleScreenshotBlobUri: pulumi.Input<string>;
        /**
         * The serial console log blob Uri. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with managed storage.
         */
        serialConsoleLogBlobUri: pulumi.Input<string>;
        /**
         * The boot diagnostics status information for the VM. <br><br> NOTE: It will be set only if there are errors encountered in enabling boot diagnostics.
         */
        status: pulumi.Input<inputs.compute.InstanceViewStatusResponse>;
    }

    /**
     * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
     */
    export interface BootDiagnosticsResponse {
        /**
         * Whether boot diagnostics should be enabled on the Virtual Machine.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
         */
        storageUri?: pulumi.Input<string>;
    }

    /**
     * Represents a configuration parameter.
     */
    export interface ConfigurationParameter {
        /**
         * Name of the configuration parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * Value of the configuration parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Represents a configuration parameter.
     */
    export interface ConfigurationParameterResponse {
        /**
         * Name of the configuration parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * Value of the configuration parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Configuration setting of LCM (Local Configuration Manager).
     */
    export interface ConfigurationSetting {
        /**
         * Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration and StopConfiguration
         */
        actionAfterReboot?: pulumi.Input<string>;
        /**
         * If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node. Otherwise, false
         */
        allowModuleOverwrite?: pulumi.Input<string>;
        /**
         * Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
         */
        configurationMode?: pulumi.Input<string>;
        /**
         * How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode property is set to ApplyOnly. The default value is 15.
         */
        configurationModeFrequencyMins?: pulumi.Input<number>;
        /**
         * Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you will have to manually reboot the node for any configuration that requires it. The default value is false. To use this setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting with the xPendingReboot module.
         */
        rebootIfNeeded?: pulumi.Input<string>;
        /**
         * The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored if the LCM is not configured in pull mode. The default value is 30.
         */
        refreshFrequencyMins?: pulumi.Input<number>;
    }

    /**
     * Configuration setting of LCM (Local Configuration Manager).
     */
    export interface ConfigurationSettingResponse {
        /**
         * Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration and StopConfiguration
         */
        actionAfterReboot?: pulumi.Input<string>;
        /**
         * If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node. Otherwise, false
         */
        allowModuleOverwrite?: pulumi.Input<string>;
        /**
         * Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
         */
        configurationMode?: pulumi.Input<string>;
        /**
         * How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode property is set to ApplyOnly. The default value is 15.
         */
        configurationModeFrequencyMins?: pulumi.Input<number>;
        /**
         * Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you will have to manually reboot the node for any configuration that requires it. The default value is false. To use this setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting with the xPendingReboot module.
         */
        rebootIfNeeded?: pulumi.Input<string>;
        /**
         * The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored if the LCM is not configured in pull mode. The default value is 30.
         */
        refreshFrequencyMins?: pulumi.Input<number>;
    }

    /**
     * Data used when creating a disk.
     */
    export interface CreationData {
        /**
         * This enumerates the possible sources of a disk's creation.
         */
        createOption: pulumi.Input<string>;
        /**
         * Required if creating from a Gallery Image. The id of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk.
         */
        galleryImageReference?: pulumi.Input<inputs.compute.ImageDiskReference>;
        /**
         * Disk source information.
         */
        imageReference?: pulumi.Input<inputs.compute.ImageDiskReference>;
        /**
         * If createOption is Copy, this is the ARM id of the source snapshot or disk.
         */
        sourceResourceId?: pulumi.Input<string>;
        /**
         * If createOption is Import, this is the URI of a blob to be imported into a managed disk.
         */
        sourceUri?: pulumi.Input<string>;
        /**
         * Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.
         */
        storageAccountId?: pulumi.Input<string>;
        /**
         * If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).
         */
        uploadSizeBytes?: pulumi.Input<number>;
    }

    /**
     * Data used when creating a disk.
     */
    export interface CreationDataResponse {
        /**
         * This enumerates the possible sources of a disk's creation.
         */
        createOption: pulumi.Input<string>;
        /**
         * Required if creating from a Gallery Image. The id of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk.
         */
        galleryImageReference?: pulumi.Input<inputs.compute.ImageDiskReferenceResponse>;
        /**
         * Disk source information.
         */
        imageReference?: pulumi.Input<inputs.compute.ImageDiskReferenceResponse>;
        /**
         * If createOption is Copy, this is the ARM id of the source snapshot or disk.
         */
        sourceResourceId?: pulumi.Input<string>;
        /**
         * If this field is set, this is the unique id identifying the source of this resource.
         */
        sourceUniqueId: pulumi.Input<string>;
        /**
         * If createOption is Import, this is the URI of a blob to be imported into a managed disk.
         */
        sourceUri?: pulumi.Input<string>;
        /**
         * Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.
         */
        storageAccountId?: pulumi.Input<string>;
        /**
         * If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).
         */
        uploadSizeBytes?: pulumi.Input<number>;
    }

    /**
     * Describes a data disk.
     */
    export interface DataDisk {
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
         */
        image?: pulumi.Input<inputs.compute.VirtualHardDisk>;
        /**
         * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
         */
        lun: pulumi.Input<number>;
        /**
         * The managed disk parameters.
         */
        managedDisk?: pulumi.Input<inputs.compute.ManagedDiskParameters>;
        /**
         * The disk name.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset
         */
        toBeDetached?: pulumi.Input<boolean>;
        /**
         * The virtual hard disk.
         */
        vhd?: pulumi.Input<inputs.compute.VirtualHardDisk>;
        /**
         * Specifies whether writeAccelerator should be enabled or disabled on the disk.
         */
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Contains encryption settings for a data disk image.
     */
    export interface DataDiskImageEncryption {
        /**
         * A relative URI containing the resource ID of the disk encryption set.
         */
        diskEncryptionSetId?: pulumi.Input<string>;
        /**
         * This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
         */
        lun: pulumi.Input<number>;
    }

    /**
     * Contains encryption settings for a data disk image.
     */
    export interface DataDiskImageEncryptionResponse {
        /**
         * A relative URI containing the resource ID of the disk encryption set.
         */
        diskEncryptionSetId?: pulumi.Input<string>;
        /**
         * This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
         */
        lun: pulumi.Input<number>;
    }

    /**
     * Describes a data disk.
     */
    export interface DataDiskResponse {
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
         */
        diskIOPSReadWrite: pulumi.Input<number>;
        /**
         * Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
         */
        diskMBpsReadWrite: pulumi.Input<number>;
        /**
         * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
         */
        image?: pulumi.Input<inputs.compute.VirtualHardDiskResponse>;
        /**
         * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
         */
        lun: pulumi.Input<number>;
        /**
         * The managed disk parameters.
         */
        managedDisk?: pulumi.Input<inputs.compute.ManagedDiskParametersResponse>;
        /**
         * The disk name.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset
         */
        toBeDetached?: pulumi.Input<boolean>;
        /**
         * The virtual hard disk.
         */
        vhd?: pulumi.Input<inputs.compute.VirtualHardDiskResponse>;
        /**
         * Specifies whether writeAccelerator should be enabled or disabled on the disk.
         */
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Represents the dedicated host unutilized capacity in terms of a specific VM size.
     */
    export interface DedicatedHostAllocatableVMResponse {
        /**
         * Maximum number of VMs of size vmSize that can fit in the dedicated host's remaining capacity.
         */
        count?: pulumi.Input<number>;
        /**
         * VM size in terms of which the unutilized capacity is represented.
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * Dedicated host unutilized capacity.
     */
    export interface DedicatedHostAvailableCapacityResponse {
        /**
         * The unutilized capacity of the dedicated host represented in terms of each VM size that is allowed to be deployed to the dedicated host.
         */
        allocatableVMs?: pulumi.Input<pulumi.Input<inputs.compute.DedicatedHostAllocatableVMResponse>[]>;
    }

    export interface DedicatedHostGroupInstanceViewResponse {
        /**
         * List of instance view of the dedicated hosts under the dedicated host group.
         */
        hosts?: pulumi.Input<pulumi.Input<inputs.compute.DedicatedHostInstanceViewWithNameResponse>[]>;
    }

    /**
     * Dedicated Host Group Properties.
     */
    export interface DedicatedHostGroupProperties {
        /**
         * Number of fault domains that the host group can span.
         */
        platformFaultDomainCount: pulumi.Input<number>;
        /**
         * Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to 'true' when not provided. <br><br>Minimum api-version: 2020-06-01.
         */
        supportAutomaticPlacement?: pulumi.Input<boolean>;
    }

    /**
     * Dedicated Host Group Properties.
     */
    export interface DedicatedHostGroupPropertiesResponse {
        /**
         * A list of references to all dedicated hosts in the dedicated host group.
         */
        hosts: pulumi.Input<pulumi.Input<inputs.compute.SubResourceReadOnlyResponse>[]>;
        /**
         * The dedicated host group instance view, which has the list of instance view of the dedicated hosts under the dedicated host group.
         */
        instanceView: pulumi.Input<inputs.compute.DedicatedHostGroupInstanceViewResponse>;
        /**
         * Number of fault domains that the host group can span.
         */
        platformFaultDomainCount: pulumi.Input<number>;
        /**
         * Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to 'true' when not provided. <br><br>Minimum api-version: 2020-06-01.
         */
        supportAutomaticPlacement?: pulumi.Input<boolean>;
    }

    /**
     * The instance view of a dedicated host.
     */
    export interface DedicatedHostInstanceViewResponse {
        /**
         * Specifies the unique id of the dedicated physical machine on which the dedicated host resides.
         */
        assetId: pulumi.Input<string>;
        /**
         * Unutilized capacity of the dedicated host.
         */
        availableCapacity?: pulumi.Input<inputs.compute.DedicatedHostAvailableCapacityResponse>;
        /**
         * The resource status information.
         */
        statuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatusResponse>[]>;
    }

    /**
     * The instance view of a dedicated host that includes the name of the dedicated host. It is used for the response to the instance view of a dedicated host group.
     */
    export interface DedicatedHostInstanceViewWithNameResponse {
        /**
         * Specifies the unique id of the dedicated physical machine on which the dedicated host resides.
         */
        assetId: pulumi.Input<string>;
        /**
         * Unutilized capacity of the dedicated host.
         */
        availableCapacity?: pulumi.Input<inputs.compute.DedicatedHostAvailableCapacityResponse>;
        /**
         * The name of the dedicated host.
         */
        name: pulumi.Input<string>;
        /**
         * The resource status information.
         */
        statuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatusResponse>[]>;
    }

    /**
     * Properties of the dedicated host.
     */
    export interface DedicatedHostProperties {
        /**
         * Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided.
         */
        autoReplaceOnFailure?: pulumi.Input<boolean>;
        /**
         * Specifies the software license type that will be applied to the VMs deployed on the dedicated host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid** <br><br> **Windows_Server_Perpetual** <br><br> Default: **None**
         */
        licenseType?: pulumi.Input<string>;
        /**
         * Fault domain of the dedicated host within a dedicated host group.
         */
        platformFaultDomain?: pulumi.Input<number>;
    }

    /**
     * Properties of the dedicated host.
     */
    export interface DedicatedHostPropertiesResponse {
        /**
         * Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided.
         */
        autoReplaceOnFailure?: pulumi.Input<boolean>;
        /**
         * A unique id generated and assigned to the dedicated host by the platform. <br><br> Does not change throughout the lifetime of the host.
         */
        hostId: pulumi.Input<string>;
        /**
         * The dedicated host instance view.
         */
        instanceView: pulumi.Input<inputs.compute.DedicatedHostInstanceViewResponse>;
        /**
         * Specifies the software license type that will be applied to the VMs deployed on the dedicated host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid** <br><br> **Windows_Server_Perpetual** <br><br> Default: **None**
         */
        licenseType?: pulumi.Input<string>;
        /**
         * Fault domain of the dedicated host within a dedicated host group.
         */
        platformFaultDomain?: pulumi.Input<number>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The date when the host was first provisioned.
         */
        provisioningTime: pulumi.Input<string>;
        /**
         * A list of references to all virtual machines in the Dedicated Host.
         */
        virtualMachines: pulumi.Input<pulumi.Input<inputs.compute.SubResourceReadOnlyResponse>[]>;
    }

    /**
     * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
     */
    export interface DiagnosticsProfile {
        /**
         * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
         */
        bootDiagnostics?: pulumi.Input<inputs.compute.BootDiagnostics>;
    }

    /**
     * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
     */
    export interface DiagnosticsProfileResponse {
        /**
         * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
         */
        bootDiagnostics?: pulumi.Input<inputs.compute.BootDiagnosticsResponse>;
    }

    /**
     * Describes the parameters of ephemeral disk settings that can be specified for operating system disk. <br><br> NOTE: The ephemeral disk settings can only be specified for managed disk.
     */
    export interface DiffDiskSettings {
        /**
         * Specifies the ephemeral disk settings for operating system disk.
         */
        option?: pulumi.Input<string>;
        /**
         * Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are: <br><br> **CacheDisk** <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used.<br><br> Refer to VM size documentation for Windows VM at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.
         */
        placement?: pulumi.Input<string>;
    }

    /**
     * Describes the parameters of ephemeral disk settings that can be specified for operating system disk. <br><br> NOTE: The ephemeral disk settings can only be specified for managed disk.
     */
    export interface DiffDiskSettingsResponse {
        /**
         * Specifies the ephemeral disk settings for operating system disk.
         */
        option?: pulumi.Input<string>;
        /**
         * Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are: <br><br> **CacheDisk** <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used.<br><br> Refer to VM size documentation for Windows VM at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.
         */
        placement?: pulumi.Input<string>;
    }

    /**
     * Describes the disallowed disk types.
     */
    export interface Disallowed {
        /**
         * A list of disk types.
         */
        diskTypes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Describes the disallowed disk types.
     */
    export interface DisallowedResponse {
        /**
         * A list of disk types.
         */
        diskTypes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DiskAccessProperties {
    }

    export interface DiskAccessPropertiesResponse {
        /**
         * A readonly collection of private endpoint connections created on the disk. Currently only one endpoint connection is supported.
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.compute.PrivateEndpointConnectionResponse>[]>;
        /**
         * The disk access resource provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The time when the disk access was created.
         */
        timeCreated: pulumi.Input<string>;
    }

    /**
     * Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. <br><br> NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.
     */
    export interface DiskEncryptionSetParameters {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. <br><br> NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.
     */
    export interface DiskEncryptionSetParametersResponse {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Describes a Encryption Settings for a Disk
     */
    export interface DiskEncryptionSettings {
        /**
         * Specifies the location of the disk encryption key, which is a Key Vault Secret.
         */
        diskEncryptionKey?: pulumi.Input<inputs.compute.KeyVaultSecretReference>;
        /**
         * Specifies whether disk encryption should be enabled on the virtual machine.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Specifies the location of the key encryption key in Key Vault.
         */
        keyEncryptionKey?: pulumi.Input<inputs.compute.KeyVaultKeyReference>;
    }

    /**
     * Describes a Encryption Settings for a Disk
     */
    export interface DiskEncryptionSettingsResponse {
        /**
         * Specifies the location of the disk encryption key, which is a Key Vault Secret.
         */
        diskEncryptionKey?: pulumi.Input<inputs.compute.KeyVaultSecretReferenceResponse>;
        /**
         * Specifies whether disk encryption should be enabled on the virtual machine.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Specifies the location of the key encryption key in Key Vault.
         */
        keyEncryptionKey?: pulumi.Input<inputs.compute.KeyVaultKeyReferenceResponse>;
    }

    /**
     * The instance view of the disk.
     */
    export interface DiskInstanceViewResponse {
        /**
         * Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
         */
        encryptionSettings?: pulumi.Input<pulumi.Input<inputs.compute.DiskEncryptionSettingsResponse>[]>;
        /**
         * The disk name.
         */
        name?: pulumi.Input<string>;
        /**
         * The resource status information.
         */
        statuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatusResponse>[]>;
    }

    /**
     * Disk resource properties.
     */
    export interface DiskProperties {
        /**
         * Disk source information. CreationData information cannot be changed after the disk has been created.
         */
        creationData: pulumi.Input<inputs.compute.CreationData>;
        /**
         * ARM id of the DiskAccess resource for using private endpoints on disks.
         */
        diskAccessId?: pulumi.Input<string>;
        /**
         * The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.
         */
        diskIOPSReadOnly?: pulumi.Input<number>;
        /**
         * The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.
         */
        diskIOPSReadWrite?: pulumi.Input<number>;
        /**
         * The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.
         */
        diskMBpsReadOnly?: pulumi.Input<number>;
        /**
         * The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.
         */
        diskMBpsReadWrite?: pulumi.Input<number>;
        /**
         * If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
         */
        encryption?: pulumi.Input<inputs.compute.Encryption>;
        /**
         * Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
         */
        encryptionSettingsCollection?: pulumi.Input<inputs.compute.EncryptionSettingsCollection>;
        /**
         * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
         */
        hyperVGeneration?: pulumi.Input<string>;
        /**
         * The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.
         */
        maxShares?: pulumi.Input<number>;
        /**
         * Policy for accessing the disk via network.
         */
        networkAccessPolicy?: pulumi.Input<string>;
        /**
         * The Operating System type.
         */
        osType?: pulumi.Input<string>;
    }

    /**
     * Disk resource properties.
     */
    export interface DiskPropertiesResponse {
        /**
         * Disk source information. CreationData information cannot be changed after the disk has been created.
         */
        creationData: pulumi.Input<inputs.compute.CreationDataResponse>;
        /**
         * ARM id of the DiskAccess resource for using private endpoints on disks.
         */
        diskAccessId?: pulumi.Input<string>;
        /**
         * The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.
         */
        diskIOPSReadOnly?: pulumi.Input<number>;
        /**
         * The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.
         */
        diskIOPSReadWrite?: pulumi.Input<number>;
        /**
         * The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.
         */
        diskMBpsReadOnly?: pulumi.Input<number>;
        /**
         * The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.
         */
        diskMBpsReadWrite?: pulumi.Input<number>;
        /**
         * The size of the disk in bytes. This field is read only.
         */
        diskSizeBytes: pulumi.Input<number>;
        /**
         * If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * The state of the disk.
         */
        diskState: pulumi.Input<string>;
        /**
         * Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
         */
        encryption?: pulumi.Input<inputs.compute.EncryptionResponse>;
        /**
         * Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
         */
        encryptionSettingsCollection?: pulumi.Input<inputs.compute.EncryptionSettingsCollectionResponse>;
        /**
         * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
         */
        hyperVGeneration?: pulumi.Input<string>;
        /**
         * The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.
         */
        maxShares?: pulumi.Input<number>;
        /**
         * Policy for accessing the disk via network.
         */
        networkAccessPolicy?: pulumi.Input<string>;
        /**
         * The Operating System type.
         */
        osType?: pulumi.Input<string>;
        /**
         * The disk provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Details of the list of all VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.
         */
        shareInfo: pulumi.Input<pulumi.Input<inputs.compute.ShareInfoElementResponse>[]>;
        /**
         * The time when the disk was created.
         */
        timeCreated: pulumi.Input<string>;
        /**
         * Unique Guid identifying the resource.
         */
        uniqueId: pulumi.Input<string>;
    }

    /**
     * The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or UltraSSD_LRS.
     */
    export interface DiskSku {
        /**
         * The sku name.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or UltraSSD_LRS.
     */
    export interface DiskSkuResponse {
        /**
         * The sku name.
         */
        name?: pulumi.Input<string>;
        /**
         * The sku tier.
         */
        tier: pulumi.Input<string>;
    }

    /**
     * Encryption at rest settings for disk or snapshot
     */
    export interface Encryption {
        /**
         * ResourceId of the disk encryption set to use for enabling encryption at rest.
         */
        diskEncryptionSetId?: pulumi.Input<string>;
        /**
         * The type of key used to encrypt the data of the disk.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
     */
    export interface EncryptionImages {
        /**
         * A list of encryption specifications for data disk images.
         */
        dataDiskImages?: pulumi.Input<pulumi.Input<inputs.compute.DataDiskImageEncryption>[]>;
        /**
         * Contains encryption settings for an OS disk image.
         */
        osDiskImage?: pulumi.Input<inputs.compute.OSDiskImageEncryption>;
    }

    /**
     * Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
     */
    export interface EncryptionImagesResponse {
        /**
         * A list of encryption specifications for data disk images.
         */
        dataDiskImages?: pulumi.Input<pulumi.Input<inputs.compute.DataDiskImageEncryptionResponse>[]>;
        /**
         * Contains encryption settings for an OS disk image.
         */
        osDiskImage?: pulumi.Input<inputs.compute.OSDiskImageEncryptionResponse>;
    }

    /**
     * Encryption at rest settings for disk or snapshot
     */
    export interface EncryptionResponse {
        /**
         * ResourceId of the disk encryption set to use for enabling encryption at rest.
         */
        diskEncryptionSetId?: pulumi.Input<string>;
        /**
         * The type of key used to encrypt the data of the disk.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks.
     */
    export interface EncryptionSetIdentity {
        /**
         * The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks.
     */
    export interface EncryptionSetIdentityResponse {
        /**
         * The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported.
         */
        type?: pulumi.Input<string>;
    }

    export interface EncryptionSetProperties {
        /**
         * The key vault key which is currently used by this disk encryption set.
         */
        activeKey?: pulumi.Input<inputs.compute.KeyVaultAndKeyReference>;
        /**
         * The type of key used to encrypt the data of the disk.
         */
        encryptionType?: pulumi.Input<string>;
    }

    export interface EncryptionSetPropertiesResponse {
        /**
         * The key vault key which is currently used by this disk encryption set.
         */
        activeKey?: pulumi.Input<inputs.compute.KeyVaultAndKeyReferenceResponse>;
        /**
         * The type of key used to encrypt the data of the disk.
         */
        encryptionType?: pulumi.Input<string>;
        /**
         * A readonly collection of key vault keys previously used by this disk encryption set while a key rotation is in progress. It will be empty if there is no ongoing key rotation.
         */
        previousKeys: pulumi.Input<pulumi.Input<inputs.compute.KeyVaultAndKeyReferenceResponse>[]>;
        /**
         * The disk encryption set provisioning state.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Encryption settings for disk or snapshot
     */
    export interface EncryptionSettingsCollection {
        /**
         * Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * A collection of encryption settings, one for each disk volume.
         */
        encryptionSettings?: pulumi.Input<pulumi.Input<inputs.compute.EncryptionSettingsElement>[]>;
        /**
         * Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption.
         */
        encryptionSettingsVersion?: pulumi.Input<string>;
    }

    /**
     * Encryption settings for disk or snapshot
     */
    export interface EncryptionSettingsCollectionResponse {
        /**
         * Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * A collection of encryption settings, one for each disk volume.
         */
        encryptionSettings?: pulumi.Input<pulumi.Input<inputs.compute.EncryptionSettingsElementResponse>[]>;
        /**
         * Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption.
         */
        encryptionSettingsVersion?: pulumi.Input<string>;
    }

    /**
     * Encryption settings for one disk volume.
     */
    export interface EncryptionSettingsElement {
        /**
         * Key Vault Secret Url and vault id of the disk encryption key
         */
        diskEncryptionKey?: pulumi.Input<inputs.compute.KeyVaultAndSecretReference>;
        /**
         * Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.
         */
        keyEncryptionKey?: pulumi.Input<inputs.compute.KeyVaultAndKeyReference>;
    }

    /**
     * Encryption settings for one disk volume.
     */
    export interface EncryptionSettingsElementResponse {
        /**
         * Key Vault Secret Url and vault id of the disk encryption key
         */
        diskEncryptionKey?: pulumi.Input<inputs.compute.KeyVaultAndSecretReferenceResponse>;
        /**
         * Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.
         */
        keyEncryptionKey?: pulumi.Input<inputs.compute.KeyVaultAndKeyReferenceResponse>;
    }

    /**
     * Describes the properties of a gallery Application Definition.
     */
    export interface GalleryApplicationProperties {
        /**
         * The description of this gallery Application Definition resource. This property is updatable.
         */
        description?: pulumi.Input<string>;
        /**
         * The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable.
         */
        endOfLifeDate?: pulumi.Input<string>;
        /**
         * The Eula agreement for the gallery Application Definition.
         */
        eula?: pulumi.Input<string>;
        /**
         * The privacy statement uri.
         */
        privacyStatementUri?: pulumi.Input<string>;
        /**
         * The release note uri.
         */
        releaseNoteUri?: pulumi.Input<string>;
        /**
         * This property allows you to specify the supported type of the OS that application is built for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        supportedOSType: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a gallery Application Definition.
     */
    export interface GalleryApplicationPropertiesResponse {
        /**
         * The description of this gallery Application Definition resource. This property is updatable.
         */
        description?: pulumi.Input<string>;
        /**
         * The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable.
         */
        endOfLifeDate?: pulumi.Input<string>;
        /**
         * The Eula agreement for the gallery Application Definition.
         */
        eula?: pulumi.Input<string>;
        /**
         * The privacy statement uri.
         */
        privacyStatementUri?: pulumi.Input<string>;
        /**
         * The release note uri.
         */
        releaseNoteUri?: pulumi.Input<string>;
        /**
         * This property allows you to specify the supported type of the OS that application is built for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        supportedOSType: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a gallery Image Version.
     */
    export interface GalleryApplicationVersionProperties {
        /**
         * The publishing profile of a gallery Image Version.
         */
        publishingProfile: pulumi.Input<inputs.compute.GalleryApplicationVersionPublishingProfile>;
    }

    /**
     * Describes the properties of a gallery Image Version.
     */
    export interface GalleryApplicationVersionPropertiesResponse {
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The publishing profile of a gallery Image Version.
         */
        publishingProfile: pulumi.Input<inputs.compute.GalleryApplicationVersionPublishingProfileResponse>;
        /**
         * This is the replication status of the gallery Image Version.
         */
        replicationStatus: pulumi.Input<inputs.compute.ReplicationStatusResponse>;
    }

    /**
     * The publishing profile of a gallery Image Version.
     */
    export interface GalleryApplicationVersionPublishingProfile {
        /**
         * Optional. May be used to help process this file. The type of file contained in the source, e.g. zip, json, etc.
         */
        contentType?: pulumi.Input<string>;
        /**
         * Optional. Whether or not this application reports health.
         */
        enableHealthCheck?: pulumi.Input<boolean>;
        /**
         * The end of life date of the gallery Image Version. This property can be used for decommissioning purposes. This property is updatable.
         */
        endOfLifeDate?: pulumi.Input<string>;
        /**
         * If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
         */
        excludeFromLatest?: pulumi.Input<boolean>;
        /**
         * The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
         */
        replicaCount?: pulumi.Input<number>;
        /**
         * The source image from which the Image Version is going to be created.
         */
        source: pulumi.Input<inputs.compute.UserArtifactSource>;
        /**
         * Specifies the storage account type to be used to store the image. This property is not updatable.
         */
        storageAccountType?: pulumi.Input<string>;
        /**
         * The target regions where the Image Version is going to be replicated to. This property is updatable.
         */
        targetRegions?: pulumi.Input<pulumi.Input<inputs.compute.TargetRegion>[]>;
    }

    /**
     * The publishing profile of a gallery Image Version.
     */
    export interface GalleryApplicationVersionPublishingProfileResponse {
        /**
         * Optional. May be used to help process this file. The type of file contained in the source, e.g. zip, json, etc.
         */
        contentType?: pulumi.Input<string>;
        /**
         * Optional. Whether or not this application reports health.
         */
        enableHealthCheck?: pulumi.Input<boolean>;
        /**
         * The end of life date of the gallery Image Version. This property can be used for decommissioning purposes. This property is updatable.
         */
        endOfLifeDate?: pulumi.Input<string>;
        /**
         * If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
         */
        excludeFromLatest?: pulumi.Input<boolean>;
        /**
         * The timestamp for when the gallery Image Version is published.
         */
        publishedDate: pulumi.Input<string>;
        /**
         * The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
         */
        replicaCount?: pulumi.Input<number>;
        /**
         * The source image from which the Image Version is going to be created.
         */
        source: pulumi.Input<inputs.compute.UserArtifactSourceResponse>;
        /**
         * Specifies the storage account type to be used to store the image. This property is not updatable.
         */
        storageAccountType?: pulumi.Input<string>;
        /**
         * The target regions where the Image Version is going to be replicated to. This property is updatable.
         */
        targetRegions?: pulumi.Input<pulumi.Input<inputs.compute.TargetRegionResponse>[]>;
    }

    /**
     * The gallery artifact version source.
     */
    export interface GalleryArtifactVersionSource {
        /**
         * The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, or user image.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The gallery artifact version source.
     */
    export interface GalleryArtifactVersionSourceResponse {
        /**
         * The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, or user image.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * This is the data disk image.
     */
    export interface GalleryDataDiskImage {
        /**
         * The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
         */
        hostCaching?: pulumi.Input<string>;
        /**
         * This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
         */
        lun: pulumi.Input<number>;
        /**
         * The gallery artifact version source.
         */
        source?: pulumi.Input<inputs.compute.GalleryArtifactVersionSource>;
    }

    /**
     * This is the data disk image.
     */
    export interface GalleryDataDiskImageResponse {
        /**
         * The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
         */
        hostCaching?: pulumi.Input<string>;
        /**
         * This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
         */
        lun: pulumi.Input<number>;
        /**
         * This property indicates the size of the VHD to be created.
         */
        sizeInGB: pulumi.Input<number>;
        /**
         * The gallery artifact version source.
         */
        source?: pulumi.Input<inputs.compute.GalleryArtifactVersionSourceResponse>;
    }

    /**
     * Describes the gallery unique name.
     */
    export interface GalleryIdentifier {
    }

    /**
     * Describes the gallery unique name.
     */
    export interface GalleryIdentifierResponse {
        /**
         * The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
         */
        uniqueName: pulumi.Input<string>;
    }

    /**
     * This is the gallery Image Definition identifier.
     */
    export interface GalleryImageIdentifier {
        /**
         * The name of the gallery Image Definition offer.
         */
        offer: pulumi.Input<string>;
        /**
         * The name of the gallery Image Definition publisher.
         */
        publisher: pulumi.Input<string>;
        /**
         * The name of the gallery Image Definition SKU.
         */
        sku: pulumi.Input<string>;
    }

    /**
     * This is the gallery Image Definition identifier.
     */
    export interface GalleryImageIdentifierResponse {
        /**
         * The name of the gallery Image Definition offer.
         */
        offer: pulumi.Input<string>;
        /**
         * The name of the gallery Image Definition publisher.
         */
        publisher: pulumi.Input<string>;
        /**
         * The name of the gallery Image Definition SKU.
         */
        sku: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a gallery Image Definition.
     */
    export interface GalleryImageProperties {
        /**
         * The description of this gallery Image Definition resource. This property is updatable.
         */
        description?: pulumi.Input<string>;
        /**
         * Describes the disallowed disk types.
         */
        disallowed?: pulumi.Input<inputs.compute.Disallowed>;
        /**
         * The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable.
         */
        endOfLifeDate?: pulumi.Input<string>;
        /**
         * The Eula agreement for the gallery Image Definition.
         */
        eula?: pulumi.Input<string>;
        /**
         * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
         */
        hyperVGeneration?: pulumi.Input<string>;
        /**
         * This is the gallery Image Definition identifier.
         */
        identifier: pulumi.Input<inputs.compute.GalleryImageIdentifier>;
        /**
         * This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
         */
        osState: pulumi.Input<string>;
        /**
         * This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        osType: pulumi.Input<string>;
        /**
         * The privacy statement uri.
         */
        privacyStatementUri?: pulumi.Input<string>;
        /**
         * Describes the gallery Image Definition purchase plan. This is used by marketplace images.
         */
        purchasePlan?: pulumi.Input<inputs.compute.ImagePurchasePlan>;
        /**
         * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
         */
        recommended?: pulumi.Input<inputs.compute.RecommendedMachineConfiguration>;
        /**
         * The release note uri.
         */
        releaseNoteUri?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a gallery Image Definition.
     */
    export interface GalleryImagePropertiesResponse {
        /**
         * The description of this gallery Image Definition resource. This property is updatable.
         */
        description?: pulumi.Input<string>;
        /**
         * Describes the disallowed disk types.
         */
        disallowed?: pulumi.Input<inputs.compute.DisallowedResponse>;
        /**
         * The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable.
         */
        endOfLifeDate?: pulumi.Input<string>;
        /**
         * The Eula agreement for the gallery Image Definition.
         */
        eula?: pulumi.Input<string>;
        /**
         * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
         */
        hyperVGeneration?: pulumi.Input<string>;
        /**
         * This is the gallery Image Definition identifier.
         */
        identifier: pulumi.Input<inputs.compute.GalleryImageIdentifierResponse>;
        /**
         * This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
         */
        osState: pulumi.Input<string>;
        /**
         * This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        osType: pulumi.Input<string>;
        /**
         * The privacy statement uri.
         */
        privacyStatementUri?: pulumi.Input<string>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Describes the gallery Image Definition purchase plan. This is used by marketplace images.
         */
        purchasePlan?: pulumi.Input<inputs.compute.ImagePurchasePlanResponse>;
        /**
         * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
         */
        recommended?: pulumi.Input<inputs.compute.RecommendedMachineConfigurationResponse>;
        /**
         * The release note uri.
         */
        releaseNoteUri?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a gallery Image Version.
     */
    export interface GalleryImageVersionProperties {
        /**
         * The publishing profile of a gallery Image Version.
         */
        publishingProfile?: pulumi.Input<inputs.compute.GalleryImageVersionPublishingProfile>;
        /**
         * This is the storage profile of a Gallery Image Version.
         */
        storageProfile: pulumi.Input<inputs.compute.GalleryImageVersionStorageProfile>;
    }

    /**
     * Describes the properties of a gallery Image Version.
     */
    export interface GalleryImageVersionPropertiesResponse {
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The publishing profile of a gallery Image Version.
         */
        publishingProfile?: pulumi.Input<inputs.compute.GalleryImageVersionPublishingProfileResponse>;
        /**
         * This is the replication status of the gallery Image Version.
         */
        replicationStatus: pulumi.Input<inputs.compute.ReplicationStatusResponse>;
        /**
         * This is the storage profile of a Gallery Image Version.
         */
        storageProfile: pulumi.Input<inputs.compute.GalleryImageVersionStorageProfileResponse>;
    }

    /**
     * The publishing profile of a gallery Image Version.
     */
    export interface GalleryImageVersionPublishingProfile {
        /**
         * The end of life date of the gallery Image Version. This property can be used for decommissioning purposes. This property is updatable.
         */
        endOfLifeDate?: pulumi.Input<string>;
        /**
         * If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
         */
        excludeFromLatest?: pulumi.Input<boolean>;
        /**
         * The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
         */
        replicaCount?: pulumi.Input<number>;
        /**
         * Specifies the storage account type to be used to store the image. This property is not updatable.
         */
        storageAccountType?: pulumi.Input<string>;
        /**
         * The target regions where the Image Version is going to be replicated to. This property is updatable.
         */
        targetRegions?: pulumi.Input<pulumi.Input<inputs.compute.TargetRegion>[]>;
    }

    /**
     * The publishing profile of a gallery Image Version.
     */
    export interface GalleryImageVersionPublishingProfileResponse {
        /**
         * The end of life date of the gallery Image Version. This property can be used for decommissioning purposes. This property is updatable.
         */
        endOfLifeDate?: pulumi.Input<string>;
        /**
         * If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
         */
        excludeFromLatest?: pulumi.Input<boolean>;
        /**
         * The timestamp for when the gallery Image Version is published.
         */
        publishedDate: pulumi.Input<string>;
        /**
         * The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
         */
        replicaCount?: pulumi.Input<number>;
        /**
         * Specifies the storage account type to be used to store the image. This property is not updatable.
         */
        storageAccountType?: pulumi.Input<string>;
        /**
         * The target regions where the Image Version is going to be replicated to. This property is updatable.
         */
        targetRegions?: pulumi.Input<pulumi.Input<inputs.compute.TargetRegionResponse>[]>;
    }

    /**
     * This is the storage profile of a Gallery Image Version.
     */
    export interface GalleryImageVersionStorageProfile {
        /**
         * A list of data disk images.
         */
        dataDiskImages?: pulumi.Input<pulumi.Input<inputs.compute.GalleryDataDiskImage>[]>;
        /**
         * This is the OS disk image.
         */
        osDiskImage?: pulumi.Input<inputs.compute.GalleryOSDiskImage>;
        /**
         * The gallery artifact version source.
         */
        source?: pulumi.Input<inputs.compute.GalleryArtifactVersionSource>;
    }

    /**
     * This is the storage profile of a Gallery Image Version.
     */
    export interface GalleryImageVersionStorageProfileResponse {
        /**
         * A list of data disk images.
         */
        dataDiskImages?: pulumi.Input<pulumi.Input<inputs.compute.GalleryDataDiskImageResponse>[]>;
        /**
         * This is the OS disk image.
         */
        osDiskImage?: pulumi.Input<inputs.compute.GalleryOSDiskImageResponse>;
        /**
         * The gallery artifact version source.
         */
        source?: pulumi.Input<inputs.compute.GalleryArtifactVersionSourceResponse>;
    }

    /**
     * This is the OS disk image.
     */
    export interface GalleryOSDiskImage {
        /**
         * The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
         */
        hostCaching?: pulumi.Input<string>;
        /**
         * The gallery artifact version source.
         */
        source?: pulumi.Input<inputs.compute.GalleryArtifactVersionSource>;
    }

    /**
     * This is the OS disk image.
     */
    export interface GalleryOSDiskImageResponse {
        /**
         * The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
         */
        hostCaching?: pulumi.Input<string>;
        /**
         * This property indicates the size of the VHD to be created.
         */
        sizeInGB: pulumi.Input<number>;
        /**
         * The gallery artifact version source.
         */
        source?: pulumi.Input<inputs.compute.GalleryArtifactVersionSourceResponse>;
    }

    /**
     * Describes the properties of a Shared Image Gallery.
     */
    export interface GalleryProperties {
        /**
         * The description of this Shared Image Gallery resource. This property is updatable.
         */
        description?: pulumi.Input<string>;
        /**
         * Describes the gallery unique name.
         */
        identifier?: pulumi.Input<inputs.compute.GalleryIdentifier>;
    }

    /**
     * Describes the properties of a Shared Image Gallery.
     */
    export interface GalleryPropertiesResponse {
        /**
         * The description of this Shared Image Gallery resource. This property is updatable.
         */
        description?: pulumi.Input<string>;
        /**
         * Describes the gallery unique name.
         */
        identifier?: pulumi.Input<inputs.compute.GalleryIdentifierResponse>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Guest configuration assignment properties.
     */
    export interface GuestConfigurationAssignmentProperties {
        /**
         * The source which initiated the guest configuration assignment. Ex: Azure Policy
         */
        context?: pulumi.Input<string>;
        /**
         * The guest configuration to assign.
         */
        guestConfiguration?: pulumi.Input<inputs.compute.GuestConfigurationNavigation>;
    }

    /**
     * Guest configuration assignment properties.
     */
    export interface GuestConfigurationAssignmentPropertiesResponse {
        /**
         * Combined hash of the configuration package and parameters.
         */
        assignmentHash: pulumi.Input<string>;
        /**
         * A value indicating compliance status of the machine for the assigned guest configuration.
         */
        complianceStatus: pulumi.Input<string>;
        /**
         * The source which initiated the guest configuration assignment. Ex: Azure Policy
         */
        context?: pulumi.Input<string>;
        /**
         * The guest configuration to assign.
         */
        guestConfiguration?: pulumi.Input<inputs.compute.GuestConfigurationNavigationResponse>;
        /**
         * Date and time when last compliance status was checked.
         */
        lastComplianceStatusChecked: pulumi.Input<string>;
        /**
         * Id of the latest report for the guest configuration assignment. 
         */
        latestReportId: pulumi.Input<string>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Guest configuration is an artifact that encapsulates DSC configuration and its dependencies. The artifact is a zip file containing DSC configuration (as MOF) and dependent resources and other dependencies like modules.
     */
    export interface GuestConfigurationNavigation {
        /**
         * The configuration parameters for the guest configuration.
         */
        configurationParameter?: pulumi.Input<pulumi.Input<inputs.compute.ConfigurationParameter>[]>;
        /**
         * The configuration setting for the guest configuration.
         */
        configurationSetting?: pulumi.Input<inputs.compute.ConfigurationSetting>;
        /**
         * Kind of the guest configuration. For example:DSC
         */
        kind?: pulumi.Input<string>;
        /**
         * Name of the guest configuration.
         */
        name?: pulumi.Input<string>;
        /**
         * Version of the guest configuration.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Guest configuration is an artifact that encapsulates DSC configuration and its dependencies. The artifact is a zip file containing DSC configuration (as MOF) and dependent resources and other dependencies like modules.
     */
    export interface GuestConfigurationNavigationResponse {
        /**
         * The configuration parameters for the guest configuration.
         */
        configurationParameter?: pulumi.Input<pulumi.Input<inputs.compute.ConfigurationParameterResponse>[]>;
        /**
         * The configuration setting for the guest configuration.
         */
        configurationSetting?: pulumi.Input<inputs.compute.ConfigurationSettingResponse>;
        /**
         * Combined hash of the guest configuration package and configuration parameters.
         */
        contentHash: pulumi.Input<string>;
        /**
         * Uri of the storage where guest configuration package is uploaded.
         */
        contentUri: pulumi.Input<string>;
        /**
         * Kind of the guest configuration. For example:DSC
         */
        kind?: pulumi.Input<string>;
        /**
         * Name of the guest configuration.
         */
        name?: pulumi.Input<string>;
        /**
         * Version of the guest configuration.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Specifies the hardware settings for the virtual machine.
     */
    export interface HardwareProfile {
        /**
         * Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * Specifies the hardware settings for the virtual machine.
     */
    export interface HardwareProfileResponse {
        /**
         * Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * Describes a data disk.
     */
    export interface ImageDataDisk {
        /**
         * The Virtual Hard Disk.
         */
        blobUri?: pulumi.Input<string>;
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies the customer managed disk encryption set resource id for the managed image disk.
         */
        diskEncryptionSet?: pulumi.Input<inputs.compute.DiskEncryptionSetParameters>;
        /**
         * Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
         */
        lun: pulumi.Input<number>;
        /**
         * The managedDisk.
         */
        managedDisk?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * The snapshot.
         */
        snapshot?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * Describes a data disk.
     */
    export interface ImageDataDiskResponse {
        /**
         * The Virtual Hard Disk.
         */
        blobUri?: pulumi.Input<string>;
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies the customer managed disk encryption set resource id for the managed image disk.
         */
        diskEncryptionSet?: pulumi.Input<inputs.compute.DiskEncryptionSetParametersResponse>;
        /**
         * Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
         */
        lun: pulumi.Input<number>;
        /**
         * The managedDisk.
         */
        managedDisk?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * The snapshot.
         */
        snapshot?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * The source image used for creating the disk.
     */
    export interface ImageDiskReference {
        /**
         * A relative uri containing either a Platform Image Repository or user image reference.
         */
        id: pulumi.Input<string>;
        /**
         * If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.
         */
        lun?: pulumi.Input<number>;
    }

    /**
     * The source image used for creating the disk.
     */
    export interface ImageDiskReferenceResponse {
        /**
         * A relative uri containing either a Platform Image Repository or user image reference.
         */
        id: pulumi.Input<string>;
        /**
         * If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.
         */
        lun?: pulumi.Input<number>;
    }

    /**
     * Describes an Operating System disk.
     */
    export interface ImageOSDisk {
        /**
         * The Virtual Hard Disk.
         */
        blobUri?: pulumi.Input<string>;
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies the customer managed disk encryption set resource id for the managed image disk.
         */
        diskEncryptionSet?: pulumi.Input<inputs.compute.DiskEncryptionSetParameters>;
        /**
         * Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * The managedDisk.
         */
        managedDisk?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * The OS State.
         */
        osState: pulumi.Input<string>;
        /**
         * This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        osType: pulumi.Input<string>;
        /**
         * The snapshot.
         */
        snapshot?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * Describes an Operating System disk.
     */
    export interface ImageOSDiskResponse {
        /**
         * The Virtual Hard Disk.
         */
        blobUri?: pulumi.Input<string>;
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies the customer managed disk encryption set resource id for the managed image disk.
         */
        diskEncryptionSet?: pulumi.Input<inputs.compute.DiskEncryptionSetParametersResponse>;
        /**
         * Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * The managedDisk.
         */
        managedDisk?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * The OS State.
         */
        osState: pulumi.Input<string>;
        /**
         * This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        osType: pulumi.Input<string>;
        /**
         * The snapshot.
         */
        snapshot?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of an Image.
     */
    export interface ImageProperties {
        /**
         * Gets the HyperVGenerationType of the VirtualMachine created from the image
         */
        hyperVGeneration?: pulumi.Input<string>;
        /**
         * The source virtual machine from which Image is created.
         */
        sourceVirtualMachine?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies the storage settings for the virtual machine disks.
         */
        storageProfile?: pulumi.Input<inputs.compute.ImageStorageProfile>;
    }

    /**
     * Describes the properties of an Image.
     */
    export interface ImagePropertiesResponse {
        /**
         * Gets the HyperVGenerationType of the VirtualMachine created from the image
         */
        hyperVGeneration?: pulumi.Input<string>;
        /**
         * The provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The source virtual machine from which Image is created.
         */
        sourceVirtualMachine?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies the storage settings for the virtual machine disks.
         */
        storageProfile?: pulumi.Input<inputs.compute.ImageStorageProfileResponse>;
    }

    /**
     * Describes the gallery Image Definition purchase plan. This is used by marketplace images.
     */
    export interface ImagePurchasePlan {
        /**
         * The plan ID.
         */
        name?: pulumi.Input<string>;
        /**
         * The product ID.
         */
        product?: pulumi.Input<string>;
        /**
         * The publisher ID.
         */
        publisher?: pulumi.Input<string>;
    }

    /**
     * Describes the gallery Image Definition purchase plan. This is used by marketplace images.
     */
    export interface ImagePurchasePlanResponse {
        /**
         * The plan ID.
         */
        name?: pulumi.Input<string>;
        /**
         * The product ID.
         */
        product?: pulumi.Input<string>;
        /**
         * The publisher ID.
         */
        publisher?: pulumi.Input<string>;
    }

    /**
     * Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
     */
    export interface ImageReference {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the offer of the platform image or marketplace image used to create the virtual machine.
         */
        offer?: pulumi.Input<string>;
        /**
         * The image publisher.
         */
        publisher?: pulumi.Input<string>;
        /**
         * The image SKU.
         */
        sku?: pulumi.Input<string>;
        /**
         * Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
     */
    export interface ImageReferenceResponse {
        /**
         * Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
         */
        exactVersion: pulumi.Input<string>;
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the offer of the platform image or marketplace image used to create the virtual machine.
         */
        offer?: pulumi.Input<string>;
        /**
         * The image publisher.
         */
        publisher?: pulumi.Input<string>;
        /**
         * The image SKU.
         */
        sku?: pulumi.Input<string>;
        /**
         * Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Describes a storage profile.
     */
    export interface ImageStorageProfile {
        /**
         * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.ImageDataDisk>[]>;
        /**
         * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        osDisk?: pulumi.Input<inputs.compute.ImageOSDisk>;
        /**
         * Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).
         */
        zoneResilient?: pulumi.Input<boolean>;
    }

    /**
     * Describes a storage profile.
     */
    export interface ImageStorageProfileResponse {
        /**
         * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.ImageDataDiskResponse>[]>;
        /**
         * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        osDisk?: pulumi.Input<inputs.compute.ImageOSDiskResponse>;
        /**
         * Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).
         */
        zoneResilient?: pulumi.Input<boolean>;
    }

    /**
     * Instance view status.
     */
    export interface InstanceViewStatus {
        /**
         * The status code.
         */
        code?: pulumi.Input<string>;
        /**
         * The short localizable label for the status.
         */
        displayStatus?: pulumi.Input<string>;
        /**
         * The level code.
         */
        level?: pulumi.Input<string>;
        /**
         * The detailed status message, including for alerts and error messages.
         */
        message?: pulumi.Input<string>;
        /**
         * The time of the status.
         */
        time?: pulumi.Input<string>;
    }

    /**
     * Instance view status.
     */
    export interface InstanceViewStatusResponse {
        /**
         * The status code.
         */
        code?: pulumi.Input<string>;
        /**
         * The short localizable label for the status.
         */
        displayStatus?: pulumi.Input<string>;
        /**
         * The level code.
         */
        level?: pulumi.Input<string>;
        /**
         * The detailed status message, including for alerts and error messages.
         */
        message?: pulumi.Input<string>;
        /**
         * The time of the status.
         */
        time?: pulumi.Input<string>;
    }

    /**
     * Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey
     */
    export interface KeyVaultAndKeyReference {
        /**
         * Url pointing to a key or secret in KeyVault
         */
        keyUrl: pulumi.Input<string>;
        /**
         * Resource id of the KeyVault containing the key or secret
         */
        sourceVault: pulumi.Input<inputs.compute.SourceVault>;
    }

    /**
     * Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey
     */
    export interface KeyVaultAndKeyReferenceResponse {
        /**
         * Url pointing to a key or secret in KeyVault
         */
        keyUrl: pulumi.Input<string>;
        /**
         * Resource id of the KeyVault containing the key or secret
         */
        sourceVault: pulumi.Input<inputs.compute.SourceVaultResponse>;
    }

    /**
     * Key Vault Secret Url and vault id of the encryption key 
     */
    export interface KeyVaultAndSecretReference {
        /**
         * Url pointing to a key or secret in KeyVault
         */
        secretUrl: pulumi.Input<string>;
        /**
         * Resource id of the KeyVault containing the key or secret
         */
        sourceVault: pulumi.Input<inputs.compute.SourceVault>;
    }

    /**
     * Key Vault Secret Url and vault id of the encryption key 
     */
    export interface KeyVaultAndSecretReferenceResponse {
        /**
         * Url pointing to a key or secret in KeyVault
         */
        secretUrl: pulumi.Input<string>;
        /**
         * Resource id of the KeyVault containing the key or secret
         */
        sourceVault: pulumi.Input<inputs.compute.SourceVaultResponse>;
    }

    /**
     * Describes a reference to Key Vault Key
     */
    export interface KeyVaultKeyReference {
        /**
         * The URL referencing a key encryption key in Key Vault.
         */
        keyUrl: pulumi.Input<string>;
        /**
         * The relative URL of the Key Vault containing the key.
         */
        sourceVault: pulumi.Input<inputs.compute.SubResource>;
    }

    /**
     * Describes a reference to Key Vault Key
     */
    export interface KeyVaultKeyReferenceResponse {
        /**
         * The URL referencing a key encryption key in Key Vault.
         */
        keyUrl: pulumi.Input<string>;
        /**
         * The relative URL of the Key Vault containing the key.
         */
        sourceVault: pulumi.Input<inputs.compute.SubResourceResponse>;
    }

    /**
     * Describes a reference to Key Vault Secret
     */
    export interface KeyVaultSecretReference {
        /**
         * The URL referencing a secret in a Key Vault.
         */
        secretUrl: pulumi.Input<string>;
        /**
         * The relative URL of the Key Vault containing the secret.
         */
        sourceVault: pulumi.Input<inputs.compute.SubResource>;
    }

    /**
     * Describes a reference to Key Vault Secret
     */
    export interface KeyVaultSecretReferenceResponse {
        /**
         * The URL referencing a secret in a Key Vault.
         */
        secretUrl: pulumi.Input<string>;
        /**
         * The relative URL of the Key Vault containing the secret.
         */
        sourceVault: pulumi.Input<inputs.compute.SubResourceResponse>;
    }

    /**
     * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
     */
    export interface LinuxConfiguration {
        /**
         * Specifies whether password authentication should be disabled.
         */
        disablePasswordAuthentication?: pulumi.Input<boolean>;
        /**
         * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
         */
        provisionVMAgent?: pulumi.Input<boolean>;
        /**
         * Specifies the ssh key configuration for a Linux OS.
         */
        ssh?: pulumi.Input<inputs.compute.SshConfiguration>;
    }

    /**
     * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
     */
    export interface LinuxConfigurationResponse {
        /**
         * Specifies whether password authentication should be disabled.
         */
        disablePasswordAuthentication?: pulumi.Input<boolean>;
        /**
         * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
         */
        provisionVMAgent?: pulumi.Input<boolean>;
        /**
         * Specifies the ssh key configuration for a Linux OS.
         */
        ssh?: pulumi.Input<inputs.compute.SshConfigurationResponse>;
    }

    /**
     * Maintenance Operation Status.
     */
    export interface MaintenanceRedeployStatusResponse {
        /**
         * True, if customer is allowed to perform Maintenance.
         */
        isCustomerInitiatedMaintenanceAllowed?: pulumi.Input<boolean>;
        /**
         * Message returned for the last Maintenance Operation.
         */
        lastOperationMessage?: pulumi.Input<string>;
        /**
         * The Last Maintenance Operation Result Code.
         */
        lastOperationResultCode?: pulumi.Input<string>;
        /**
         * End Time for the Maintenance Window.
         */
        maintenanceWindowEndTime?: pulumi.Input<string>;
        /**
         * Start Time for the Maintenance Window.
         */
        maintenanceWindowStartTime?: pulumi.Input<string>;
        /**
         * End Time for the Pre Maintenance Window.
         */
        preMaintenanceWindowEndTime?: pulumi.Input<string>;
        /**
         * Start Time for the Pre Maintenance Window.
         */
        preMaintenanceWindowStartTime?: pulumi.Input<string>;
    }

    /**
     * The parameters of a managed disk.
     */
    export interface ManagedDiskParameters {
        /**
         * Specifies the customer managed disk encryption set resource id for the managed disk.
         */
        diskEncryptionSet?: pulumi.Input<inputs.compute.DiskEncryptionSetParameters>;
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * The parameters of a managed disk.
     */
    export interface ManagedDiskParametersResponse {
        /**
         * Specifies the customer managed disk encryption set resource id for the managed disk.
         */
        diskEncryptionSet?: pulumi.Input<inputs.compute.DiskEncryptionSetParametersResponse>;
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * Describes a network interface reference.
     */
    export interface NetworkInterfaceReference {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * Describes a network interface reference properties.
         */
        properties?: pulumi.Input<inputs.compute.NetworkInterfaceReferenceProperties>;
    }

    /**
     * Describes a network interface reference properties.
     */
    export interface NetworkInterfaceReferenceProperties {
        /**
         * Specifies the primary network interface in case the virtual machine has more than 1 network interface.
         */
        primary?: pulumi.Input<boolean>;
    }

    /**
     * Describes a network interface reference properties.
     */
    export interface NetworkInterfaceReferencePropertiesResponse {
        /**
         * Specifies the primary network interface in case the virtual machine has more than 1 network interface.
         */
        primary?: pulumi.Input<boolean>;
    }

    /**
     * Describes a network interface reference.
     */
    export interface NetworkInterfaceReferenceResponse {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * Describes a network interface reference properties.
         */
        properties?: pulumi.Input<inputs.compute.NetworkInterfaceReferencePropertiesResponse>;
    }

    /**
     * Specifies the network interfaces of the virtual machine.
     */
    export interface NetworkProfile {
        /**
         * Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
         */
        networkInterfaces?: pulumi.Input<pulumi.Input<inputs.compute.NetworkInterfaceReference>[]>;
    }

    /**
     * Specifies the network interfaces of the virtual machine.
     */
    export interface NetworkProfileResponse {
        /**
         * Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
         */
        networkInterfaces?: pulumi.Input<pulumi.Input<inputs.compute.NetworkInterfaceReferenceResponse>[]>;
    }

    /**
     * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
     */
    export interface OSDisk {
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None** for Standard storage. **ReadOnly** for Premium storage.
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.
         */
        diffDiskSettings?: pulumi.Input<inputs.compute.DiffDiskSettings>;
        /**
         * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
         */
        encryptionSettings?: pulumi.Input<inputs.compute.DiskEncryptionSettings>;
        /**
         * The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
         */
        image?: pulumi.Input<inputs.compute.VirtualHardDisk>;
        /**
         * The managed disk parameters.
         */
        managedDisk?: pulumi.Input<inputs.compute.ManagedDiskParameters>;
        /**
         * The disk name.
         */
        name?: pulumi.Input<string>;
        /**
         * This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        osType?: pulumi.Input<string>;
        /**
         * The virtual hard disk.
         */
        vhd?: pulumi.Input<inputs.compute.VirtualHardDisk>;
        /**
         * Specifies whether writeAccelerator should be enabled or disabled on the disk.
         */
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Contains encryption settings for an OS disk image.
     */
    export interface OSDiskImageEncryption {
        /**
         * A relative URI containing the resource ID of the disk encryption set.
         */
        diskEncryptionSetId?: pulumi.Input<string>;
    }

    /**
     * Contains encryption settings for an OS disk image.
     */
    export interface OSDiskImageEncryptionResponse {
        /**
         * A relative URI containing the resource ID of the disk encryption set.
         */
        diskEncryptionSetId?: pulumi.Input<string>;
    }

    /**
     * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
     */
    export interface OSDiskResponse {
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None** for Standard storage. **ReadOnly** for Premium storage.
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.
         */
        diffDiskSettings?: pulumi.Input<inputs.compute.DiffDiskSettingsResponse>;
        /**
         * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
         */
        encryptionSettings?: pulumi.Input<inputs.compute.DiskEncryptionSettingsResponse>;
        /**
         * The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
         */
        image?: pulumi.Input<inputs.compute.VirtualHardDiskResponse>;
        /**
         * The managed disk parameters.
         */
        managedDisk?: pulumi.Input<inputs.compute.ManagedDiskParametersResponse>;
        /**
         * The disk name.
         */
        name?: pulumi.Input<string>;
        /**
         * This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        osType?: pulumi.Input<string>;
        /**
         * The virtual hard disk.
         */
        vhd?: pulumi.Input<inputs.compute.VirtualHardDiskResponse>;
        /**
         * Specifies whether writeAccelerator should be enabled or disabled on the disk.
         */
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.
     */
    export interface OSProfile {
        /**
         * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
         */
        adminPassword?: pulumi.Input<string>;
        /**
         * Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
         */
        adminUsername?: pulumi.Input<string>;
        /**
         * Specifies whether extension operations should be allowed on the virtual machine. <br><br>This may only be set to False when no extensions are present on the virtual machine.
         */
        allowExtensionOperations?: pulumi.Input<boolean>;
        /**
         * Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
         */
        computerName?: pulumi.Input<string>;
        /**
         * Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br> customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/en-us/blog/custom-data-and-cloud-init-on-windows-azure/) <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
         */
        customData?: pulumi.Input<string>;
        /**
         * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
         */
        linuxConfiguration?: pulumi.Input<inputs.compute.LinuxConfiguration>;
        /**
         * Specifies whether the guest provision signal is required to infer provision success of the virtual machine.
         */
        requireGuestProvisionSignal?: pulumi.Input<boolean>;
        /**
         * Specifies set of certificates that should be installed onto the virtual machine.
         */
        secrets?: pulumi.Input<pulumi.Input<inputs.compute.VaultSecretGroup>[]>;
        /**
         * Specifies Windows operating system settings on the virtual machine.
         */
        windowsConfiguration?: pulumi.Input<inputs.compute.WindowsConfiguration>;
    }

    /**
     * Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.
     */
    export interface OSProfileResponse {
        /**
         * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
         */
        adminPassword?: pulumi.Input<string>;
        /**
         * Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
         */
        adminUsername?: pulumi.Input<string>;
        /**
         * Specifies whether extension operations should be allowed on the virtual machine. <br><br>This may only be set to False when no extensions are present on the virtual machine.
         */
        allowExtensionOperations?: pulumi.Input<boolean>;
        /**
         * Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
         */
        computerName?: pulumi.Input<string>;
        /**
         * Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br> customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/en-us/blog/custom-data-and-cloud-init-on-windows-azure/) <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
         */
        customData?: pulumi.Input<string>;
        /**
         * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
         */
        linuxConfiguration?: pulumi.Input<inputs.compute.LinuxConfigurationResponse>;
        /**
         * Specifies whether the guest provision signal is required to infer provision success of the virtual machine.
         */
        requireGuestProvisionSignal?: pulumi.Input<boolean>;
        /**
         * Specifies set of certificates that should be installed onto the virtual machine.
         */
        secrets?: pulumi.Input<pulumi.Input<inputs.compute.VaultSecretGroupResponse>[]>;
        /**
         * Specifies Windows operating system settings on the virtual machine.
         */
        windowsConfiguration?: pulumi.Input<inputs.compute.WindowsConfigurationResponse>;
    }

    export interface PatchSettings {
        /**
         * Specifies the mode of in-guest patching to IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> ** AutomaticByPlatform** - the virtual machine will automatically updated by the OS. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true 
         */
        patchMode?: pulumi.Input<string>;
    }

    export interface PatchSettingsResponse {
        /**
         * Specifies the mode of in-guest patching to IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> ** AutomaticByPlatform** - the virtual machine will automatically updated by the OS. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true 
         */
        patchMode?: pulumi.Input<string>;
    }

    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     */
    export interface Plan {
        /**
         * The plan ID.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
         */
        product?: pulumi.Input<string>;
        /**
         * The promotion code.
         */
        promotionCode?: pulumi.Input<string>;
        /**
         * The publisher ID.
         */
        publisher?: pulumi.Input<string>;
    }

    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     */
    export interface PlanResponse {
        /**
         * The plan ID.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
         */
        product?: pulumi.Input<string>;
        /**
         * The promotion code.
         */
        promotionCode?: pulumi.Input<string>;
        /**
         * The publisher ID.
         */
        publisher?: pulumi.Input<string>;
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.compute.PrivateEndpointResponse>;
        /**
         * A collection of information about the state of the connection between DiskAccess and Virtual Network.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.compute.PrivateLinkServiceConnectionStateResponse>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint Connection resource.
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * private endpoint connection Id
         */
        id: pulumi.Input<string>;
        /**
         * private endpoint connection name
         */
        name: pulumi.Input<string>;
        /**
         * Resource properties.
         */
        properties?: pulumi.Input<inputs.compute.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * private endpoint connection type
         */
        type: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpointResponse {
        /**
         * The ARM identifier for Private Endpoint
         */
        id: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a Proximity Placement Group.
     */
    export interface ProximityPlacementGroupProperties {
        /**
         * Describes colocation status of the Proximity Placement Group.
         */
        colocationStatus?: pulumi.Input<inputs.compute.InstanceViewStatus>;
        /**
         * Specifies the type of the proximity placement group. <br><br> Possible values are: <br><br> **Standard** : Co-locate resources within an Azure region or Availability Zone. <br><br> **Ultra** : For future use.
         */
        proximityPlacementGroupType?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a Proximity Placement Group.
     */
    export interface ProximityPlacementGroupPropertiesResponse {
        /**
         * A list of references to all availability sets in the proximity placement group.
         */
        availabilitySets: pulumi.Input<pulumi.Input<inputs.compute.SubResourceWithColocationStatusResponse>[]>;
        /**
         * Describes colocation status of the Proximity Placement Group.
         */
        colocationStatus?: pulumi.Input<inputs.compute.InstanceViewStatusResponse>;
        /**
         * Specifies the type of the proximity placement group. <br><br> Possible values are: <br><br> **Standard** : Co-locate resources within an Azure region or Availability Zone. <br><br> **Ultra** : For future use.
         */
        proximityPlacementGroupType?: pulumi.Input<string>;
        /**
         * A list of references to all virtual machine scale sets in the proximity placement group.
         */
        virtualMachineScaleSets: pulumi.Input<pulumi.Input<inputs.compute.SubResourceWithColocationStatusResponse>[]>;
        /**
         * A list of references to all virtual machines in the proximity placement group.
         */
        virtualMachines: pulumi.Input<pulumi.Input<inputs.compute.SubResourceWithColocationStatusResponse>[]>;
    }

    /**
     * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     */
    export interface RecommendedMachineConfiguration {
        /**
         * Describes the resource range.
         */
        memory?: pulumi.Input<inputs.compute.ResourceRange>;
        /**
         * Describes the resource range.
         */
        vCPUs?: pulumi.Input<inputs.compute.ResourceRange>;
    }

    /**
     * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     */
    export interface RecommendedMachineConfigurationResponse {
        /**
         * Describes the resource range.
         */
        memory?: pulumi.Input<inputs.compute.ResourceRangeResponse>;
        /**
         * Describes the resource range.
         */
        vCPUs?: pulumi.Input<inputs.compute.ResourceRangeResponse>;
    }

    /**
     * This is the regional replication status.
     */
    export interface RegionalReplicationStatusResponse {
        /**
         * The details of the replication status.
         */
        details: pulumi.Input<string>;
        /**
         * It indicates progress of the replication job.
         */
        progress: pulumi.Input<number>;
        /**
         * The region to which the gallery Image Version is being replicated to.
         */
        region: pulumi.Input<string>;
        /**
         * This is the regional replication state.
         */
        state: pulumi.Input<string>;
    }

    /**
     * This is the replication status of the gallery Image Version.
     */
    export interface ReplicationStatusResponse {
        /**
         * This is the aggregated replication status based on all the regional replication status flags.
         */
        aggregatedState: pulumi.Input<string>;
        /**
         * This is a summary of replication status for each region.
         */
        summary: pulumi.Input<pulumi.Input<inputs.compute.RegionalReplicationStatusResponse>[]>;
    }

    /**
     * Describes the resource range.
     */
    export interface ResourceRange {
        /**
         * The maximum number of the resource.
         */
        max?: pulumi.Input<number>;
        /**
         * The minimum number of the resource.
         */
        min?: pulumi.Input<number>;
    }

    /**
     * Describes the resource range.
     */
    export interface ResourceRangeResponse {
        /**
         * The maximum number of the resource.
         */
        max?: pulumi.Input<number>;
        /**
         * The minimum number of the resource.
         */
        min?: pulumi.Input<number>;
    }

    /**
     * The configuration parameters used while performing a rolling upgrade.
     */
    export interface RollingUpgradePolicy {
        /**
         * The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.
         */
        maxBatchInstancePercent?: pulumi.Input<number>;
        /**
         * The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%.
         */
        maxUnhealthyInstancePercent?: pulumi.Input<number>;
        /**
         * The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%.
         */
        maxUnhealthyUpgradedInstancePercent?: pulumi.Input<number>;
        /**
         * The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).
         */
        pauseTimeBetweenBatches?: pulumi.Input<string>;
    }

    /**
     * The configuration parameters used while performing a rolling upgrade.
     */
    export interface RollingUpgradePolicyResponse {
        /**
         * The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.
         */
        maxBatchInstancePercent?: pulumi.Input<number>;
        /**
         * The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%.
         */
        maxUnhealthyInstancePercent?: pulumi.Input<number>;
        /**
         * The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%.
         */
        maxUnhealthyUpgradedInstancePercent?: pulumi.Input<number>;
        /**
         * The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).
         */
        pauseTimeBetweenBatches?: pulumi.Input<string>;
    }

    /**
     * Describes a scale-in policy for a virtual machine scale set.
     */
    export interface ScaleInPolicy {
        /**
         * The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM** When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal. <br><br>
         */
        rules?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Describes a scale-in policy for a virtual machine scale set.
     */
    export interface ScaleInPolicyResponse {
        /**
         * The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM** When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal. <br><br>
         */
        rules?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ScheduledEventsProfile {
        /**
         * Specifies Terminate Scheduled Event related configurations.
         */
        terminateNotificationProfile?: pulumi.Input<inputs.compute.TerminateNotificationProfile>;
    }

    export interface ScheduledEventsProfileResponse {
        /**
         * Specifies Terminate Scheduled Event related configurations.
         */
        terminateNotificationProfile?: pulumi.Input<inputs.compute.TerminateNotificationProfileResponse>;
    }

    /**
     * Specifies the Security profile settings for the virtual machine or virtual machine scale set.
     */
    export interface SecurityProfile {
        /**
         * This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. <br><br> Default: The Encryption at host will be disabled unless this property is set to true for the resource.
         */
        encryptionAtHost?: pulumi.Input<boolean>;
    }

    /**
     * Specifies the Security profile settings for the virtual machine or virtual machine scale set.
     */
    export interface SecurityProfileResponse {
        /**
         * This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. <br><br> Default: The Encryption at host will be disabled unless this property is set to true for the resource.
         */
        encryptionAtHost?: pulumi.Input<boolean>;
    }

    export interface ShareInfoElementResponse {
        /**
         * A relative URI containing the ID of the VM that has the disk attached.
         */
        vmUri: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
     */
    export interface Sku {
        /**
         * Specifies the number of virtual machines in the scale set.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The sku name.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
     */
    export interface SkuResponse {
        /**
         * Specifies the number of virtual machines in the scale set.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The sku name.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Snapshot resource properties.
     */
    export interface SnapshotProperties {
        /**
         * Disk source information. CreationData information cannot be changed after the disk has been created.
         */
        creationData: pulumi.Input<inputs.compute.CreationData>;
        /**
         * ARM id of the DiskAccess resource for using private endpoints on disks.
         */
        diskAccessId?: pulumi.Input<string>;
        /**
         * If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
         */
        encryption?: pulumi.Input<inputs.compute.Encryption>;
        /**
         * Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
         */
        encryptionSettingsCollection?: pulumi.Input<inputs.compute.EncryptionSettingsCollection>;
        /**
         * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
         */
        hyperVGeneration?: pulumi.Input<string>;
        /**
         * Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.
         */
        incremental?: pulumi.Input<boolean>;
        /**
         * Policy for accessing the disk via network.
         */
        networkAccessPolicy?: pulumi.Input<string>;
        /**
         * The Operating System type.
         */
        osType?: pulumi.Input<string>;
    }

    /**
     * Snapshot resource properties.
     */
    export interface SnapshotPropertiesResponse {
        /**
         * Disk source information. CreationData information cannot be changed after the disk has been created.
         */
        creationData: pulumi.Input<inputs.compute.CreationDataResponse>;
        /**
         * ARM id of the DiskAccess resource for using private endpoints on disks.
         */
        diskAccessId?: pulumi.Input<string>;
        /**
         * The size of the disk in bytes. This field is read only.
         */
        diskSizeBytes: pulumi.Input<number>;
        /**
         * If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
         */
        encryption?: pulumi.Input<inputs.compute.EncryptionResponse>;
        /**
         * Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
         */
        encryptionSettingsCollection?: pulumi.Input<inputs.compute.EncryptionSettingsCollectionResponse>;
        /**
         * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
         */
        hyperVGeneration?: pulumi.Input<string>;
        /**
         * Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.
         */
        incremental?: pulumi.Input<boolean>;
        /**
         * Policy for accessing the disk via network.
         */
        networkAccessPolicy?: pulumi.Input<string>;
        /**
         * The Operating System type.
         */
        osType?: pulumi.Input<string>;
        /**
         * The disk provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The time when the snapshot was created.
         */
        timeCreated: pulumi.Input<string>;
        /**
         * Unique Guid identifying the resource.
         */
        uniqueId: pulumi.Input<string>;
    }

    /**
     * The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.
     */
    export interface SnapshotSku {
        /**
         * The sku name.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.
     */
    export interface SnapshotSkuResponse {
        /**
         * The sku name.
         */
        name?: pulumi.Input<string>;
        /**
         * The sku tier.
         */
        tier: pulumi.Input<string>;
    }

    /**
     * The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
     */
    export interface SourceVault {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
     */
    export interface SourceVaultResponse {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
    }

    /**
     * SSH configuration for Linux based VMs running on Azure
     */
    export interface SshConfiguration {
        /**
         * The list of SSH public keys used to authenticate with linux based VMs.
         */
        publicKeys?: pulumi.Input<pulumi.Input<inputs.compute.SshPublicKey>[]>;
    }

    /**
     * SSH configuration for Linux based VMs running on Azure
     */
    export interface SshConfigurationResponse {
        /**
         * The list of SSH public keys used to authenticate with linux based VMs.
         */
        publicKeys?: pulumi.Input<pulumi.Input<inputs.compute.SshPublicKeyResponse>[]>;
    }

    /**
     * Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
     */
    export interface SshPublicKey {
        /**
         * SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
         */
        keyData?: pulumi.Input<string>;
        /**
         * Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
         */
        path?: pulumi.Input<string>;
    }

    /**
     * Properties of the SSH public key.
     */
    export interface SshPublicKeyResourceProperties {
        /**
         * SSH public key used to authenticate to a virtual machine through ssh. If this property is not initially provided when the resource is created, the publicKey property will be populated when generateKeyPair is called. If the public key is provided upon resource creation, the provided public key needs to be at least 2048-bit and in ssh-rsa format.
         */
        publicKey?: pulumi.Input<string>;
    }

    /**
     * Properties of the SSH public key.
     */
    export interface SshPublicKeyResourcePropertiesResponse {
        /**
         * SSH public key used to authenticate to a virtual machine through ssh. If this property is not initially provided when the resource is created, the publicKey property will be populated when generateKeyPair is called. If the public key is provided upon resource creation, the provided public key needs to be at least 2048-bit and in ssh-rsa format.
         */
        publicKey?: pulumi.Input<string>;
    }

    /**
     * Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
     */
    export interface SshPublicKeyResponse {
        /**
         * SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
         */
        keyData?: pulumi.Input<string>;
        /**
         * Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
         */
        path?: pulumi.Input<string>;
    }

    /**
     * Specifies the storage settings for the virtual machine disks.
     */
    export interface StorageProfile {
        /**
         * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.DataDisk>[]>;
        /**
         * Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
         */
        imageReference?: pulumi.Input<inputs.compute.ImageReference>;
        /**
         * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        osDisk?: pulumi.Input<inputs.compute.OSDisk>;
    }

    /**
     * Specifies the storage settings for the virtual machine disks.
     */
    export interface StorageProfileResponse {
        /**
         * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.DataDiskResponse>[]>;
        /**
         * Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
         */
        imageReference?: pulumi.Input<inputs.compute.ImageReferenceResponse>;
        /**
         * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        osDisk?: pulumi.Input<inputs.compute.OSDiskResponse>;
    }

    export interface SubResource {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
    }

    export interface SubResourceReadOnlyResponse {
        /**
         * Resource Id
         */
        id: pulumi.Input<string>;
    }

    export interface SubResourceResponse {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
    }

    export interface SubResourceWithColocationStatusResponse {
        /**
         * Describes colocation status of a resource in the Proximity Placement Group.
         */
        colocationStatus?: pulumi.Input<inputs.compute.InstanceViewStatusResponse>;
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Describes the target region information.
     */
    export interface TargetRegion {
        /**
         * Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
         */
        encryption?: pulumi.Input<inputs.compute.EncryptionImages>;
        /**
         * The name of the region.
         */
        name: pulumi.Input<string>;
        /**
         * The number of replicas of the Image Version to be created per region. This property is updatable.
         */
        regionalReplicaCount?: pulumi.Input<number>;
        /**
         * Specifies the storage account type to be used to store the image. This property is not updatable.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * Describes the target region information.
     */
    export interface TargetRegionResponse {
        /**
         * Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
         */
        encryption?: pulumi.Input<inputs.compute.EncryptionImagesResponse>;
        /**
         * The name of the region.
         */
        name: pulumi.Input<string>;
        /**
         * The number of replicas of the Image Version to be created per region. This property is updatable.
         */
        regionalReplicaCount?: pulumi.Input<number>;
        /**
         * Specifies the storage account type to be used to store the image. This property is not updatable.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    export interface TerminateNotificationProfile {
        /**
         * Specifies whether the Terminate Scheduled event is enabled or disabled.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)
         */
        notBeforeTimeout?: pulumi.Input<string>;
    }

    export interface TerminateNotificationProfileResponse {
        /**
         * Specifies whether the Terminate Scheduled event is enabled or disabled.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)
         */
        notBeforeTimeout?: pulumi.Input<string>;
    }

    /**
     * Describes an upgrade policy - automatic, manual, or rolling.
     */
    export interface UpgradePolicy {
        /**
         * Configuration parameters used for performing automatic OS Upgrade.
         */
        automaticOSUpgradePolicy?: pulumi.Input<inputs.compute.AutomaticOSUpgradePolicy>;
        /**
         * Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
         */
        mode?: pulumi.Input<string>;
        /**
         * The configuration parameters used while performing a rolling upgrade.
         */
        rollingUpgradePolicy?: pulumi.Input<inputs.compute.RollingUpgradePolicy>;
    }

    /**
     * Describes an upgrade policy - automatic, manual, or rolling.
     */
    export interface UpgradePolicyResponse {
        /**
         * Configuration parameters used for performing automatic OS Upgrade.
         */
        automaticOSUpgradePolicy?: pulumi.Input<inputs.compute.AutomaticOSUpgradePolicyResponse>;
        /**
         * Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
         */
        mode?: pulumi.Input<string>;
        /**
         * The configuration parameters used while performing a rolling upgrade.
         */
        rollingUpgradePolicy?: pulumi.Input<inputs.compute.RollingUpgradePolicyResponse>;
    }

    /**
     * The source image from which the Image Version is going to be created.
     */
    export interface UserArtifactSource {
        /**
         * Required. The fileName of the artifact.
         */
        fileName: pulumi.Input<string>;
        /**
         * Required. The mediaLink of the artifact, must be a readable storage blob.
         */
        mediaLink: pulumi.Input<string>;
    }

    /**
     * The source image from which the Image Version is going to be created.
     */
    export interface UserArtifactSourceResponse {
        /**
         * Required. The fileName of the artifact.
         */
        fileName: pulumi.Input<string>;
        /**
         * Required. The mediaLink of the artifact, must be a readable storage blob.
         */
        mediaLink: pulumi.Input<string>;
    }

    /**
     * Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
     */
    export interface VaultCertificate {
        /**
         * For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
         */
        certificateStore?: pulumi.Input<string>;
        /**
         * This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
         */
        certificateUrl?: pulumi.Input<string>;
    }

    /**
     * Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
     */
    export interface VaultCertificateResponse {
        /**
         * For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
         */
        certificateStore?: pulumi.Input<string>;
        /**
         * This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
         */
        certificateUrl?: pulumi.Input<string>;
    }

    /**
     * Describes a set of certificates which are all in the same Key Vault.
     */
    export interface VaultSecretGroup {
        /**
         * The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
         */
        sourceVault?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * The list of key vault references in SourceVault which contain certificates.
         */
        vaultCertificates?: pulumi.Input<pulumi.Input<inputs.compute.VaultCertificate>[]>;
    }

    /**
     * Describes a set of certificates which are all in the same Key Vault.
     */
    export interface VaultSecretGroupResponse {
        /**
         * The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
         */
        sourceVault?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * The list of key vault references in SourceVault which contain certificates.
         */
        vaultCertificates?: pulumi.Input<pulumi.Input<inputs.compute.VaultCertificateResponse>[]>;
    }

    /**
     * Describes the uri of a disk.
     */
    export interface VirtualHardDisk {
        /**
         * Specifies the virtual hard disk's uri.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * Describes the uri of a disk.
     */
    export interface VirtualHardDiskResponse {
        /**
         * Specifies the virtual hard disk's uri.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * The instance view of the VM Agent running on the virtual machine.
     */
    export interface VirtualMachineAgentInstanceViewResponse {
        /**
         * The virtual machine extension handler instance view.
         */
        extensionHandlers?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineExtensionHandlerInstanceViewResponse>[]>;
        /**
         * The resource status information.
         */
        statuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatusResponse>[]>;
        /**
         * The VM Agent full version.
         */
        vmAgentVersion?: pulumi.Input<string>;
    }

    /**
     * The instance view of a virtual machine extension handler.
     */
    export interface VirtualMachineExtensionHandlerInstanceViewResponse {
        /**
         * The extension handler status.
         */
        status?: pulumi.Input<inputs.compute.InstanceViewStatusResponse>;
        /**
         * Specifies the type of the extension; an example is "CustomScriptExtension".
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the version of the script handler.
         */
        typeHandlerVersion?: pulumi.Input<string>;
    }

    /**
     * The instance view of a virtual machine extension.
     */
    export interface VirtualMachineExtensionInstanceView {
        /**
         * The virtual machine extension name.
         */
        name?: pulumi.Input<string>;
        /**
         * The resource status information.
         */
        statuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatus>[]>;
        /**
         * The resource status information.
         */
        substatuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatus>[]>;
        /**
         * Specifies the type of the extension; an example is "CustomScriptExtension".
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the version of the script handler.
         */
        typeHandlerVersion?: pulumi.Input<string>;
    }

    /**
     * The instance view of a virtual machine extension.
     */
    export interface VirtualMachineExtensionInstanceViewResponse {
        /**
         * The virtual machine extension name.
         */
        name?: pulumi.Input<string>;
        /**
         * The resource status information.
         */
        statuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatusResponse>[]>;
        /**
         * The resource status information.
         */
        substatuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatusResponse>[]>;
        /**
         * Specifies the type of the extension; an example is "CustomScriptExtension".
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the version of the script handler.
         */
        typeHandlerVersion?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a Virtual Machine Extension.
     */
    export interface VirtualMachineExtensionProperties {
        /**
         * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
         */
        autoUpgradeMinorVersion?: pulumi.Input<boolean>;
        /**
         * How the extension handler should be forced to update even if the extension configuration has not changed.
         */
        forceUpdateTag?: pulumi.Input<string>;
        /**
         * The virtual machine extension instance view.
         */
        instanceView?: pulumi.Input<inputs.compute.VirtualMachineExtensionInstanceView>;
        /**
         * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
         */
        protectedSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The name of the extension handler publisher.
         */
        publisher?: pulumi.Input<string>;
        /**
         * Json formatted public settings for the extension.
         */
        settings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the type of the extension; an example is "CustomScriptExtension".
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the version of the script handler.
         */
        typeHandlerVersion?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a Virtual Machine Extension.
     */
    export interface VirtualMachineExtensionPropertiesResponse {
        /**
         * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
         */
        autoUpgradeMinorVersion?: pulumi.Input<boolean>;
        /**
         * How the extension handler should be forced to update even if the extension configuration has not changed.
         */
        forceUpdateTag?: pulumi.Input<string>;
        /**
         * The virtual machine extension instance view.
         */
        instanceView?: pulumi.Input<inputs.compute.VirtualMachineExtensionInstanceViewResponse>;
        /**
         * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
         */
        protectedSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The name of the extension handler publisher.
         */
        publisher?: pulumi.Input<string>;
        /**
         * Json formatted public settings for the extension.
         */
        settings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the type of the extension; an example is "CustomScriptExtension".
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the version of the script handler.
         */
        typeHandlerVersion?: pulumi.Input<string>;
    }

    /**
     * Describes a Virtual Machine Extension.
     */
    export interface VirtualMachineExtensionResponse {
        /**
         * Resource Id
         */
        id: pulumi.Input<string>;
        /**
         * Resource location
         */
        location: pulumi.Input<string>;
        /**
         * Resource name
         */
        name: pulumi.Input<string>;
        /**
         * Describes the properties of a Virtual Machine Extension.
         */
        properties?: pulumi.Input<inputs.compute.VirtualMachineExtensionPropertiesResponse>;
        /**
         * Resource tags
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type
         */
        type: pulumi.Input<string>;
    }

    /**
     * The health status of the VM.
     */
    export interface VirtualMachineHealthStatusResponse {
        /**
         * The health status information for the VM.
         */
        status: pulumi.Input<inputs.compute.InstanceViewStatusResponse>;
    }

    /**
     * Identity for the virtual machine.
     */
    export interface VirtualMachineIdentity {
        /**
         * The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the virtual machine.
     */
    export interface VirtualMachineIdentityResponse {
        /**
         * The principal id of virtual machine identity. This property will only be provided for a system assigned identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The instance view of a virtual machine.
     */
    export interface VirtualMachineInstanceViewResponse {
        /**
         * Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.
         */
        assignedHost: pulumi.Input<string>;
        /**
         * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
         */
        bootDiagnostics?: pulumi.Input<inputs.compute.BootDiagnosticsInstanceViewResponse>;
        /**
         * The computer name assigned to the virtual machine.
         */
        computerName?: pulumi.Input<string>;
        /**
         * The virtual machine disk information.
         */
        disks?: pulumi.Input<pulumi.Input<inputs.compute.DiskInstanceViewResponse>[]>;
        /**
         * The extensions information.
         */
        extensions?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineExtensionInstanceViewResponse>[]>;
        /**
         * Specifies the HyperVGeneration Type associated with a resource
         */
        hyperVGeneration?: pulumi.Input<string>;
        /**
         * The Maintenance Operation status on the virtual machine.
         */
        maintenanceRedeployStatus?: pulumi.Input<inputs.compute.MaintenanceRedeployStatusResponse>;
        /**
         * The Operating System running on the virtual machine.
         */
        osName?: pulumi.Input<string>;
        /**
         * The version of Operating System running on the virtual machine.
         */
        osVersion?: pulumi.Input<string>;
        /**
         * Specifies the fault domain of the virtual machine.
         */
        platformFaultDomain?: pulumi.Input<number>;
        /**
         * Specifies the update domain of the virtual machine.
         */
        platformUpdateDomain?: pulumi.Input<number>;
        /**
         * The Remote desktop certificate thumbprint.
         */
        rdpThumbPrint?: pulumi.Input<string>;
        /**
         * The resource status information.
         */
        statuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatusResponse>[]>;
        /**
         * The VM Agent running on the virtual machine.
         */
        vmAgent?: pulumi.Input<inputs.compute.VirtualMachineAgentInstanceViewResponse>;
    }

    /**
     * Describes the properties of a Virtual Machine.
     */
    export interface VirtualMachineProperties {
        /**
         * Specifies additional capabilities enabled or disabled on the virtual machine.
         */
        additionalCapabilities?: pulumi.Input<inputs.compute.AdditionalCapabilities>;
        /**
         * Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. <br><br>This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
         */
        availabilitySet?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum api-version: 2019-03-01.
         */
        billingProfile?: pulumi.Input<inputs.compute.BillingProfile>;
        /**
         * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
         */
        diagnosticsProfile?: pulumi.Input<inputs.compute.DiagnosticsProfile>;
        /**
         * Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
         */
        evictionPolicy?: pulumi.Input<string>;
        /**
         * Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01
         */
        extensionsTimeBudget?: pulumi.Input<string>;
        /**
         * Specifies the hardware settings for the virtual machine.
         */
        hardwareProfile?: pulumi.Input<inputs.compute.HardwareProfile>;
        /**
         * Specifies information about the dedicated host that the virtual machine resides in. <br><br>Minimum api-version: 2018-10-01.
         */
        host?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies information about the dedicated host group that the virtual machine resides in. <br><br>Minimum api-version: 2020-06-01. <br><br>NOTE: User cannot specify both host and hostGroup properties.
         */
        hostGroup?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15
         */
        licenseType?: pulumi.Input<string>;
        /**
         * Specifies the network interfaces of the virtual machine.
         */
        networkProfile?: pulumi.Input<inputs.compute.NetworkProfile>;
        /**
         * Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.
         */
        osProfile?: pulumi.Input<inputs.compute.OSProfile>;
        /**
         * Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01
         */
        priority?: pulumi.Input<string>;
        /**
         * Specifies information about the proximity placement group that the virtual machine should be assigned to. <br><br>Minimum api-version: 2018-04-01.
         */
        proximityPlacementGroup?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies the Security related profile settings for the virtual machine.
         */
        securityProfile?: pulumi.Input<inputs.compute.SecurityProfile>;
        /**
         * Specifies the storage settings for the virtual machine disks.
         */
        storageProfile?: pulumi.Input<inputs.compute.StorageProfile>;
        /**
         * Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. <br><br>This property cannot exist along with a non-null properties.availabilitySet reference. <br><br>Minimum api‐version: 2019‐03‐01
         */
        virtualMachineScaleSet?: pulumi.Input<inputs.compute.SubResource>;
    }

    /**
     * Describes the properties of a Virtual Machine.
     */
    export interface VirtualMachinePropertiesResponse {
        /**
         * Specifies additional capabilities enabled or disabled on the virtual machine.
         */
        additionalCapabilities?: pulumi.Input<inputs.compute.AdditionalCapabilitiesResponse>;
        /**
         * Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. <br><br>This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
         */
        availabilitySet?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum api-version: 2019-03-01.
         */
        billingProfile?: pulumi.Input<inputs.compute.BillingProfileResponse>;
        /**
         * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
         */
        diagnosticsProfile?: pulumi.Input<inputs.compute.DiagnosticsProfileResponse>;
        /**
         * Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
         */
        evictionPolicy?: pulumi.Input<string>;
        /**
         * Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01
         */
        extensionsTimeBudget?: pulumi.Input<string>;
        /**
         * Specifies the hardware settings for the virtual machine.
         */
        hardwareProfile?: pulumi.Input<inputs.compute.HardwareProfileResponse>;
        /**
         * Specifies information about the dedicated host that the virtual machine resides in. <br><br>Minimum api-version: 2018-10-01.
         */
        host?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies information about the dedicated host group that the virtual machine resides in. <br><br>Minimum api-version: 2020-06-01. <br><br>NOTE: User cannot specify both host and hostGroup properties.
         */
        hostGroup?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * The virtual machine instance view.
         */
        instanceView: pulumi.Input<inputs.compute.VirtualMachineInstanceViewResponse>;
        /**
         * Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15
         */
        licenseType?: pulumi.Input<string>;
        /**
         * Specifies the network interfaces of the virtual machine.
         */
        networkProfile?: pulumi.Input<inputs.compute.NetworkProfileResponse>;
        /**
         * Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.
         */
        osProfile?: pulumi.Input<inputs.compute.OSProfileResponse>;
        /**
         * Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01
         */
        priority?: pulumi.Input<string>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Specifies information about the proximity placement group that the virtual machine should be assigned to. <br><br>Minimum api-version: 2018-04-01.
         */
        proximityPlacementGroup?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies the Security related profile settings for the virtual machine.
         */
        securityProfile?: pulumi.Input<inputs.compute.SecurityProfileResponse>;
        /**
         * Specifies the storage settings for the virtual machine disks.
         */
        storageProfile?: pulumi.Input<inputs.compute.StorageProfileResponse>;
        /**
         * Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. <br><br>This property cannot exist along with a non-null properties.availabilitySet reference. <br><br>Minimum api‐version: 2019‐03‐01
         */
        virtualMachineScaleSet?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.
         */
        vmId: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machine scale set data disk.
     */
    export interface VirtualMachineScaleSetDataDisk {
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * The create option.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
         */
        diskIOPSReadWrite?: pulumi.Input<number>;
        /**
         * Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
         */
        diskMBpsReadWrite?: pulumi.Input<number>;
        /**
         * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
         */
        lun: pulumi.Input<number>;
        /**
         * The managed disk parameters.
         */
        managedDisk?: pulumi.Input<inputs.compute.VirtualMachineScaleSetManagedDiskParameters>;
        /**
         * The disk name.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies whether writeAccelerator should be enabled or disabled on the disk.
         */
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Describes a virtual machine scale set data disk.
     */
    export interface VirtualMachineScaleSetDataDiskResponse {
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * The create option.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
         */
        diskIOPSReadWrite?: pulumi.Input<number>;
        /**
         * Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
         */
        diskMBpsReadWrite?: pulumi.Input<number>;
        /**
         * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
         */
        lun: pulumi.Input<number>;
        /**
         * The managed disk parameters.
         */
        managedDisk?: pulumi.Input<inputs.compute.VirtualMachineScaleSetManagedDiskParametersResponse>;
        /**
         * The disk name.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies whether writeAccelerator should be enabled or disabled on the disk.
         */
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Describes a Virtual Machine Scale Set Extension.
     */
    export interface VirtualMachineScaleSetExtension {
        /**
         * The name of the extension.
         */
        name?: pulumi.Input<string>;
        /**
         * Describes the properties of a Virtual Machine Scale Set Extension.
         */
        properties: pulumi.Input<inputs.compute.VirtualMachineScaleSetExtensionPropertiesResponse>;
        /**
         * Resource type
         */
        type: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machine scale set extension profile.
     */
    export interface VirtualMachineScaleSetExtensionProfile {
        /**
         * The virtual machine scale set child extension resources.
         */
        extensions?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetExtension>[]>;
        /**
         * Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01
         */
        extensionsTimeBudget?: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machine scale set extension profile.
     */
    export interface VirtualMachineScaleSetExtensionProfileResponse {
        /**
         * The virtual machine scale set child extension resources.
         */
        extensions?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetExtensionResponse>[]>;
        /**
         * Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01
         */
        extensionsTimeBudget?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a Virtual Machine Scale Set Extension.
     */
    export interface VirtualMachineScaleSetExtensionProperties {
        /**
         * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
         */
        autoUpgradeMinorVersion?: pulumi.Input<boolean>;
        /**
         * If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.
         */
        forceUpdateTag?: pulumi.Input<string>;
        /**
         * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
         */
        protectedSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Collection of extension names after which this extension needs to be provisioned.
         */
        provisionAfterExtensions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the extension handler publisher.
         */
        publisher?: pulumi.Input<string>;
        /**
         * Json formatted public settings for the extension.
         */
        settings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the type of the extension; an example is "CustomScriptExtension".
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the version of the script handler.
         */
        typeHandlerVersion?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a Virtual Machine Scale Set Extension.
     */
    export interface VirtualMachineScaleSetExtensionPropertiesResponse {
        /**
         * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
         */
        autoUpgradeMinorVersion?: pulumi.Input<boolean>;
        /**
         * If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.
         */
        forceUpdateTag?: pulumi.Input<string>;
        /**
         * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
         */
        protectedSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Collection of extension names after which this extension needs to be provisioned.
         */
        provisionAfterExtensions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The name of the extension handler publisher.
         */
        publisher?: pulumi.Input<string>;
        /**
         * Json formatted public settings for the extension.
         */
        settings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the type of the extension; an example is "CustomScriptExtension".
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the version of the script handler.
         */
        typeHandlerVersion?: pulumi.Input<string>;
    }

    /**
     * Describes a Virtual Machine Scale Set Extension.
     */
    export interface VirtualMachineScaleSetExtensionResponse {
        /**
         * Resource Id
         */
        id: pulumi.Input<string>;
        /**
         * The name of the extension.
         */
        name?: pulumi.Input<string>;
        /**
         * Describes the properties of a Virtual Machine Scale Set Extension.
         */
        properties?: pulumi.Input<inputs.compute.VirtualMachineScaleSetExtensionPropertiesResponse>;
        /**
         * Resource type
         */
        type: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machine scale set network profile's IP configuration.
     */
    export interface VirtualMachineScaleSetIPConfiguration {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * The IP configuration name.
         */
        name: pulumi.Input<string>;
        /**
         * Describes a virtual machine scale set network profile's IP configuration properties.
         */
        properties?: pulumi.Input<inputs.compute.VirtualMachineScaleSetIPConfigurationProperties>;
    }

    /**
     * Describes a virtual machine scale set network profile's IP configuration properties.
     */
    export interface VirtualMachineScaleSetIPConfigurationProperties {
        /**
         * Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
         */
        applicationGatewayBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.compute.SubResource>[]>;
        /**
         * Specifies an array of references to application security group.
         */
        applicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.compute.SubResource>[]>;
        /**
         * Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
         */
        loadBalancerBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.compute.SubResource>[]>;
        /**
         * Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
         */
        loadBalancerInboundNatPools?: pulumi.Input<pulumi.Input<inputs.compute.SubResource>[]>;
        /**
         * Specifies the primary network interface in case the virtual machine has more than 1 network interface.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
         */
        privateIPAddressVersion?: pulumi.Input<string>;
        /**
         * The publicIPAddressConfiguration.
         */
        publicIPAddressConfiguration?: pulumi.Input<inputs.compute.VirtualMachineScaleSetPublicIPAddressConfiguration>;
        /**
         * Specifies the identifier of the subnet.
         */
        subnet?: pulumi.Input<inputs.compute.ApiEntityReference>;
    }

    /**
     * Describes a virtual machine scale set network profile's IP configuration properties.
     */
    export interface VirtualMachineScaleSetIPConfigurationPropertiesResponse {
        /**
         * Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
         */
        applicationGatewayBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.compute.SubResourceResponse>[]>;
        /**
         * Specifies an array of references to application security group.
         */
        applicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.compute.SubResourceResponse>[]>;
        /**
         * Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
         */
        loadBalancerBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.compute.SubResourceResponse>[]>;
        /**
         * Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
         */
        loadBalancerInboundNatPools?: pulumi.Input<pulumi.Input<inputs.compute.SubResourceResponse>[]>;
        /**
         * Specifies the primary network interface in case the virtual machine has more than 1 network interface.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
         */
        privateIPAddressVersion?: pulumi.Input<string>;
        /**
         * The publicIPAddressConfiguration.
         */
        publicIPAddressConfiguration?: pulumi.Input<inputs.compute.VirtualMachineScaleSetPublicIPAddressConfigurationResponse>;
        /**
         * Specifies the identifier of the subnet.
         */
        subnet?: pulumi.Input<inputs.compute.ApiEntityReferenceResponse>;
    }

    /**
     * Describes a virtual machine scale set network profile's IP configuration.
     */
    export interface VirtualMachineScaleSetIPConfigurationResponse {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * The IP configuration name.
         */
        name: pulumi.Input<string>;
        /**
         * Describes a virtual machine scale set network profile's IP configuration properties.
         */
        properties?: pulumi.Input<inputs.compute.VirtualMachineScaleSetIPConfigurationPropertiesResponse>;
    }

    /**
     * Identity for the virtual machine scale set.
     */
    export interface VirtualMachineScaleSetIdentity {
        /**
         * The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the virtual machine scale set.
     */
    export interface VirtualMachineScaleSetIdentityResponse {
        /**
         * The principal id of virtual machine scale set identity. This property will only be provided for a system assigned identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id associated with the virtual machine scale set. This property will only be provided for a system assigned identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Contains the IP tag associated with the public IP address.
     */
    export interface VirtualMachineScaleSetIpTag {
        /**
         * IP tag type. Example: FirstPartyUsage.
         */
        ipTagType?: pulumi.Input<string>;
        /**
         * IP tag associated with the public IP. Example: SQL, Storage etc.
         */
        tag?: pulumi.Input<string>;
    }

    /**
     * Contains the IP tag associated with the public IP address.
     */
    export interface VirtualMachineScaleSetIpTagResponse {
        /**
         * IP tag type. Example: FirstPartyUsage.
         */
        ipTagType?: pulumi.Input<string>;
        /**
         * IP tag associated with the public IP. Example: SQL, Storage etc.
         */
        tag?: pulumi.Input<string>;
    }

    /**
     * Describes the parameters of a ScaleSet managed disk.
     */
    export interface VirtualMachineScaleSetManagedDiskParameters {
        /**
         * Specifies the customer managed disk encryption set resource id for the managed disk.
         */
        diskEncryptionSet?: pulumi.Input<inputs.compute.DiskEncryptionSetParameters>;
        /**
         * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * Describes the parameters of a ScaleSet managed disk.
     */
    export interface VirtualMachineScaleSetManagedDiskParametersResponse {
        /**
         * Specifies the customer managed disk encryption set resource id for the managed disk.
         */
        diskEncryptionSet?: pulumi.Input<inputs.compute.DiskEncryptionSetParametersResponse>;
        /**
         * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
         */
        storageAccountType?: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machine scale set network profile's network configurations.
     */
    export interface VirtualMachineScaleSetNetworkConfiguration {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * The network configuration name.
         */
        name: pulumi.Input<string>;
        /**
         * Describes a virtual machine scale set network profile's IP configuration.
         */
        properties?: pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkConfigurationProperties>;
    }

    /**
     * Describes a virtual machines scale sets network configuration's DNS settings.
     */
    export interface VirtualMachineScaleSetNetworkConfigurationDnsSettings {
        /**
         * List of DNS servers IP addresses
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Describes a virtual machines scale sets network configuration's DNS settings.
     */
    export interface VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse {
        /**
         * List of DNS servers IP addresses
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Describes a virtual machine scale set network profile's IP configuration.
     */
    export interface VirtualMachineScaleSetNetworkConfigurationProperties {
        /**
         * The dns settings to be applied on the network interfaces.
         */
        dnsSettings?: pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkConfigurationDnsSettings>;
        /**
         * Specifies whether the network interface is accelerated networking-enabled.
         */
        enableAcceleratedNetworking?: pulumi.Input<boolean>;
        /**
         * Whether IP forwarding enabled on this NIC.
         */
        enableIPForwarding?: pulumi.Input<boolean>;
        /**
         * Specifies the IP configurations of the network interface.
         */
        ipConfigurations: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetIPConfiguration>[]>;
        /**
         * The network security group.
         */
        networkSecurityGroup?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies the primary network interface in case the virtual machine has more than 1 network interface.
         */
        primary?: pulumi.Input<boolean>;
    }

    /**
     * Describes a virtual machine scale set network profile's IP configuration.
     */
    export interface VirtualMachineScaleSetNetworkConfigurationPropertiesResponse {
        /**
         * The dns settings to be applied on the network interfaces.
         */
        dnsSettings?: pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse>;
        /**
         * Specifies whether the network interface is accelerated networking-enabled.
         */
        enableAcceleratedNetworking?: pulumi.Input<boolean>;
        /**
         * Whether IP forwarding enabled on this NIC.
         */
        enableIPForwarding?: pulumi.Input<boolean>;
        /**
         * Specifies the IP configurations of the network interface.
         */
        ipConfigurations: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetIPConfigurationResponse>[]>;
        /**
         * The network security group.
         */
        networkSecurityGroup?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies the primary network interface in case the virtual machine has more than 1 network interface.
         */
        primary?: pulumi.Input<boolean>;
    }

    /**
     * Describes a virtual machine scale set network profile's network configurations.
     */
    export interface VirtualMachineScaleSetNetworkConfigurationResponse {
        /**
         * Resource Id
         */
        id?: pulumi.Input<string>;
        /**
         * The network configuration name.
         */
        name: pulumi.Input<string>;
        /**
         * Describes a virtual machine scale set network profile's IP configuration.
         */
        properties?: pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkConfigurationPropertiesResponse>;
    }

    /**
     * Describes a virtual machine scale set network profile.
     */
    export interface VirtualMachineScaleSetNetworkProfile {
        /**
         * A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
         */
        healthProbe?: pulumi.Input<inputs.compute.ApiEntityReference>;
        /**
         * The list of network configurations.
         */
        networkInterfaceConfigurations?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkConfiguration>[]>;
    }

    /**
     * Describes a virtual machine scale set network profile.
     */
    export interface VirtualMachineScaleSetNetworkProfileResponse {
        /**
         * A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
         */
        healthProbe?: pulumi.Input<inputs.compute.ApiEntityReferenceResponse>;
        /**
         * The list of network configurations.
         */
        networkInterfaceConfigurations?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkConfigurationResponse>[]>;
    }

    /**
     * Describes a virtual machine scale set operating system disk.
     */
    export interface VirtualMachineScaleSetOSDisk {
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set.
         */
        diffDiskSettings?: pulumi.Input<inputs.compute.DiffDiskSettings>;
        /**
         * Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Specifies information about the unmanaged user image to base the scale set on.
         */
        image?: pulumi.Input<inputs.compute.VirtualHardDisk>;
        /**
         * The managed disk parameters.
         */
        managedDisk?: pulumi.Input<inputs.compute.VirtualMachineScaleSetManagedDiskParameters>;
        /**
         * The disk name.
         */
        name?: pulumi.Input<string>;
        /**
         * This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        osType?: pulumi.Input<string>;
        /**
         * Specifies the container urls that are used to store operating system disks for the scale set.
         */
        vhdContainers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies whether writeAccelerator should be enabled or disabled on the disk.
         */
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Describes a virtual machine scale set operating system disk.
     */
    export interface VirtualMachineScaleSetOSDiskResponse {
        /**
         * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set.
         */
        diffDiskSettings?: pulumi.Input<inputs.compute.DiffDiskSettingsResponse>;
        /**
         * Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * Specifies information about the unmanaged user image to base the scale set on.
         */
        image?: pulumi.Input<inputs.compute.VirtualHardDiskResponse>;
        /**
         * The managed disk parameters.
         */
        managedDisk?: pulumi.Input<inputs.compute.VirtualMachineScaleSetManagedDiskParametersResponse>;
        /**
         * The disk name.
         */
        name?: pulumi.Input<string>;
        /**
         * This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
         */
        osType?: pulumi.Input<string>;
        /**
         * Specifies the container urls that are used to store operating system disks for the scale set.
         */
        vhdContainers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies whether writeAccelerator should be enabled or disabled on the disk.
         */
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Describes a virtual machine scale set OS profile.
     */
    export interface VirtualMachineScaleSetOSProfile {
        /**
         * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
         */
        adminPassword?: pulumi.Input<string>;
        /**
         * Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
         */
        adminUsername?: pulumi.Input<string>;
        /**
         * Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
         */
        computerNamePrefix?: pulumi.Input<string>;
        /**
         * Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
         */
        customData?: pulumi.Input<string>;
        /**
         * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
         */
        linuxConfiguration?: pulumi.Input<inputs.compute.LinuxConfiguration>;
        /**
         * Specifies set of certificates that should be installed onto the virtual machines in the scale set.
         */
        secrets?: pulumi.Input<pulumi.Input<inputs.compute.VaultSecretGroup>[]>;
        /**
         * Specifies Windows operating system settings on the virtual machine.
         */
        windowsConfiguration?: pulumi.Input<inputs.compute.WindowsConfiguration>;
    }

    /**
     * Describes a virtual machine scale set OS profile.
     */
    export interface VirtualMachineScaleSetOSProfileResponse {
        /**
         * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
         */
        adminPassword?: pulumi.Input<string>;
        /**
         * Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
         */
        adminUsername?: pulumi.Input<string>;
        /**
         * Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
         */
        computerNamePrefix?: pulumi.Input<string>;
        /**
         * Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
         */
        customData?: pulumi.Input<string>;
        /**
         * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
         */
        linuxConfiguration?: pulumi.Input<inputs.compute.LinuxConfigurationResponse>;
        /**
         * Specifies set of certificates that should be installed onto the virtual machines in the scale set.
         */
        secrets?: pulumi.Input<pulumi.Input<inputs.compute.VaultSecretGroupResponse>[]>;
        /**
         * Specifies Windows operating system settings on the virtual machine.
         */
        windowsConfiguration?: pulumi.Input<inputs.compute.WindowsConfigurationResponse>;
    }

    /**
     * Describes the properties of a Virtual Machine Scale Set.
     */
    export interface VirtualMachineScaleSetProperties {
        /**
         * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
         */
        additionalCapabilities?: pulumi.Input<inputs.compute.AdditionalCapabilities>;
        /**
         * Policy for automatic repairs.
         */
        automaticRepairsPolicy?: pulumi.Input<inputs.compute.AutomaticRepairsPolicy>;
        /**
         * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
         */
        doNotRunExtensionsOnOverprovisionedVMs?: pulumi.Input<boolean>;
        /**
         * Specifies information about the dedicated host group that the virtual machine scale set resides in. <br><br>Minimum api-version: 2020-06-01.
         */
        hostGroup?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
         */
        overprovision?: pulumi.Input<boolean>;
        /**
         * Fault Domain count for each placement group.
         */
        platformFaultDomainCount?: pulumi.Input<number>;
        /**
         * Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01.
         */
        proximityPlacementGroup?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
         */
        scaleInPolicy?: pulumi.Input<inputs.compute.ScaleInPolicy>;
        /**
         * When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
         */
        singlePlacementGroup?: pulumi.Input<boolean>;
        /**
         * The upgrade policy.
         */
        upgradePolicy?: pulumi.Input<inputs.compute.UpgradePolicy>;
        /**
         * The virtual machine profile.
         */
        virtualMachineProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetVMProfile>;
        /**
         * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
         */
        zoneBalance?: pulumi.Input<boolean>;
    }

    /**
     * Describes the properties of a Virtual Machine Scale Set.
     */
    export interface VirtualMachineScaleSetPropertiesResponse {
        /**
         * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
         */
        additionalCapabilities?: pulumi.Input<inputs.compute.AdditionalCapabilitiesResponse>;
        /**
         * Policy for automatic repairs.
         */
        automaticRepairsPolicy?: pulumi.Input<inputs.compute.AutomaticRepairsPolicyResponse>;
        /**
         * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
         */
        doNotRunExtensionsOnOverprovisionedVMs?: pulumi.Input<boolean>;
        /**
         * Specifies information about the dedicated host group that the virtual machine scale set resides in. <br><br>Minimum api-version: 2020-06-01.
         */
        hostGroup?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
         */
        overprovision?: pulumi.Input<boolean>;
        /**
         * Fault Domain count for each placement group.
         */
        platformFaultDomainCount?: pulumi.Input<number>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01.
         */
        proximityPlacementGroup?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
         */
        scaleInPolicy?: pulumi.Input<inputs.compute.ScaleInPolicyResponse>;
        /**
         * When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
         */
        singlePlacementGroup?: pulumi.Input<boolean>;
        /**
         * Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
         */
        uniqueId: pulumi.Input<string>;
        /**
         * The upgrade policy.
         */
        upgradePolicy?: pulumi.Input<inputs.compute.UpgradePolicyResponse>;
        /**
         * The virtual machine profile.
         */
        virtualMachineProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetVMProfileResponse>;
        /**
         * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
         */
        zoneBalance?: pulumi.Input<boolean>;
    }

    /**
     * Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
     */
    export interface VirtualMachineScaleSetPublicIPAddressConfiguration {
        /**
         * The publicIP address configuration name.
         */
        name: pulumi.Input<string>;
        /**
         * Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
         */
        properties?: pulumi.Input<inputs.compute.VirtualMachineScaleSetPublicIPAddressConfigurationProperties>;
    }

    /**
     * Describes a virtual machines scale sets network configuration's DNS settings.
     */
    export interface VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings {
        /**
         * The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created
         */
        domainNameLabel: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machines scale sets network configuration's DNS settings.
     */
    export interface VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse {
        /**
         * The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created
         */
        domainNameLabel: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
     */
    export interface VirtualMachineScaleSetPublicIPAddressConfigurationProperties {
        /**
         * The dns settings to be applied on the publicIP addresses .
         */
        dnsSettings?: pulumi.Input<inputs.compute.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings>;
        /**
         * The idle timeout of the public IP address.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The list of IP tags associated with the public IP address.
         */
        ipTags?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetIpTag>[]>;
        /**
         * Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.
         */
        publicIPAddressVersion?: pulumi.Input<string>;
        /**
         * The PublicIPPrefix from which to allocate publicIP addresses.
         */
        publicIPPrefix?: pulumi.Input<inputs.compute.SubResource>;
    }

    /**
     * Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
     */
    export interface VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse {
        /**
         * The dns settings to be applied on the publicIP addresses .
         */
        dnsSettings?: pulumi.Input<inputs.compute.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse>;
        /**
         * The idle timeout of the public IP address.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The list of IP tags associated with the public IP address.
         */
        ipTags?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetIpTagResponse>[]>;
        /**
         * Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.
         */
        publicIPAddressVersion?: pulumi.Input<string>;
        /**
         * The PublicIPPrefix from which to allocate publicIP addresses.
         */
        publicIPPrefix?: pulumi.Input<inputs.compute.SubResourceResponse>;
    }

    /**
     * Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
     */
    export interface VirtualMachineScaleSetPublicIPAddressConfigurationResponse {
        /**
         * The publicIP address configuration name.
         */
        name: pulumi.Input<string>;
        /**
         * Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
         */
        properties?: pulumi.Input<inputs.compute.VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse>;
    }

    /**
     * Describes a virtual machine scale set storage profile.
     */
    export interface VirtualMachineScaleSetStorageProfile {
        /**
         * Specifies the parameters that are used to add data disks to the virtual machines in the scale set. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetDataDisk>[]>;
        /**
         * Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
         */
        imageReference?: pulumi.Input<inputs.compute.ImageReference>;
        /**
         * Specifies information about the operating system disk used by the virtual machines in the scale set. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        osDisk?: pulumi.Input<inputs.compute.VirtualMachineScaleSetOSDisk>;
    }

    /**
     * Describes a virtual machine scale set storage profile.
     */
    export interface VirtualMachineScaleSetStorageProfileResponse {
        /**
         * Specifies the parameters that are used to add data disks to the virtual machines in the scale set. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetDataDiskResponse>[]>;
        /**
         * Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
         */
        imageReference?: pulumi.Input<inputs.compute.ImageReferenceResponse>;
        /**
         * Specifies information about the operating system disk used by the virtual machines in the scale set. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
         */
        osDisk?: pulumi.Input<inputs.compute.VirtualMachineScaleSetOSDiskResponse>;
    }

    /**
     * The instance view of a virtual machine scale set VM.
     */
    export interface VirtualMachineScaleSetVMInstanceViewResponse {
        /**
         * Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.
         */
        assignedHost: pulumi.Input<string>;
        /**
         * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
         */
        bootDiagnostics?: pulumi.Input<inputs.compute.BootDiagnosticsInstanceViewResponse>;
        /**
         * The disks information.
         */
        disks?: pulumi.Input<pulumi.Input<inputs.compute.DiskInstanceViewResponse>[]>;
        /**
         * The extensions information.
         */
        extensions?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineExtensionInstanceViewResponse>[]>;
        /**
         * The Maintenance Operation status on the virtual machine.
         */
        maintenanceRedeployStatus?: pulumi.Input<inputs.compute.MaintenanceRedeployStatusResponse>;
        /**
         * The placement group in which the VM is running. If the VM is deallocated it will not have a placementGroupId.
         */
        placementGroupId?: pulumi.Input<string>;
        /**
         * The Fault Domain count.
         */
        platformFaultDomain?: pulumi.Input<number>;
        /**
         * The Update Domain count.
         */
        platformUpdateDomain?: pulumi.Input<number>;
        /**
         * The Remote desktop certificate thumbprint.
         */
        rdpThumbPrint?: pulumi.Input<string>;
        /**
         * The resource status information.
         */
        statuses?: pulumi.Input<pulumi.Input<inputs.compute.InstanceViewStatusResponse>[]>;
        /**
         * The VM Agent running on the virtual machine.
         */
        vmAgent?: pulumi.Input<inputs.compute.VirtualMachineAgentInstanceViewResponse>;
        /**
         * The health status for the VM.
         */
        vmHealth: pulumi.Input<inputs.compute.VirtualMachineHealthStatusResponse>;
    }

    /**
     * Describes a virtual machine scale set VM network profile.
     */
    export interface VirtualMachineScaleSetVMNetworkProfileConfiguration {
        /**
         * The list of network configurations.
         */
        networkInterfaceConfigurations?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkConfiguration>[]>;
    }

    /**
     * Describes a virtual machine scale set VM network profile.
     */
    export interface VirtualMachineScaleSetVMNetworkProfileConfigurationResponse {
        /**
         * The list of network configurations.
         */
        networkInterfaceConfigurations?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkConfigurationResponse>[]>;
    }

    /**
     * Describes a virtual machine scale set virtual machine profile.
     */
    export interface VirtualMachineScaleSetVMProfile {
        /**
         * Specifies the billing related details of a Azure Spot VMSS. <br><br>Minimum api-version: 2019-03-01.
         */
        billingProfile?: pulumi.Input<inputs.compute.BillingProfile>;
        /**
         * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
         */
        diagnosticsProfile?: pulumi.Input<inputs.compute.DiagnosticsProfile>;
        /**
         * Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
         */
        evictionPolicy?: pulumi.Input<string>;
        /**
         * Specifies a collection of settings for extensions installed on virtual machines in the scale set.
         */
        extensionProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetExtensionProfile>;
        /**
         * Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15
         */
        licenseType?: pulumi.Input<string>;
        /**
         * Specifies properties of the network interfaces of the virtual machines in the scale set.
         */
        networkProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkProfile>;
        /**
         * Specifies the operating system settings for the virtual machines in the scale set.
         */
        osProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetOSProfile>;
        /**
         * Specifies the priority for the virtual machines in the scale set. <br><br>Minimum api-version: 2017-10-30-preview
         */
        priority?: pulumi.Input<string>;
        /**
         * Specifies Scheduled Event related configurations.
         */
        scheduledEventsProfile?: pulumi.Input<inputs.compute.ScheduledEventsProfile>;
        /**
         * Specifies the Security related profile settings for the virtual machines in the scale set.
         */
        securityProfile?: pulumi.Input<inputs.compute.SecurityProfile>;
        /**
         * Specifies the storage settings for the virtual machine disks.
         */
        storageProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetStorageProfile>;
    }

    /**
     * Describes a virtual machine scale set virtual machine profile.
     */
    export interface VirtualMachineScaleSetVMProfileResponse {
        /**
         * Specifies the billing related details of a Azure Spot VMSS. <br><br>Minimum api-version: 2019-03-01.
         */
        billingProfile?: pulumi.Input<inputs.compute.BillingProfileResponse>;
        /**
         * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
         */
        diagnosticsProfile?: pulumi.Input<inputs.compute.DiagnosticsProfileResponse>;
        /**
         * Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
         */
        evictionPolicy?: pulumi.Input<string>;
        /**
         * Specifies a collection of settings for extensions installed on virtual machines in the scale set.
         */
        extensionProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetExtensionProfileResponse>;
        /**
         * Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15
         */
        licenseType?: pulumi.Input<string>;
        /**
         * Specifies properties of the network interfaces of the virtual machines in the scale set.
         */
        networkProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetNetworkProfileResponse>;
        /**
         * Specifies the operating system settings for the virtual machines in the scale set.
         */
        osProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetOSProfileResponse>;
        /**
         * Specifies the priority for the virtual machines in the scale set. <br><br>Minimum api-version: 2017-10-30-preview
         */
        priority?: pulumi.Input<string>;
        /**
         * Specifies Scheduled Event related configurations.
         */
        scheduledEventsProfile?: pulumi.Input<inputs.compute.ScheduledEventsProfileResponse>;
        /**
         * Specifies the Security related profile settings for the virtual machines in the scale set.
         */
        securityProfile?: pulumi.Input<inputs.compute.SecurityProfileResponse>;
        /**
         * Specifies the storage settings for the virtual machine disks.
         */
        storageProfile?: pulumi.Input<inputs.compute.VirtualMachineScaleSetStorageProfileResponse>;
    }

    /**
     * Describes the properties of a virtual machine scale set virtual machine.
     */
    export interface VirtualMachineScaleSetVMProperties {
        /**
         * Specifies additional capabilities enabled or disabled on the virtual machine in the scale set. For instance: whether the virtual machine has the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
         */
        additionalCapabilities?: pulumi.Input<inputs.compute.AdditionalCapabilities>;
        /**
         * Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.
         */
        availabilitySet?: pulumi.Input<inputs.compute.SubResource>;
        /**
         * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
         */
        diagnosticsProfile?: pulumi.Input<inputs.compute.DiagnosticsProfile>;
        /**
         * Specifies the hardware settings for the virtual machine.
         */
        hardwareProfile?: pulumi.Input<inputs.compute.HardwareProfile>;
        /**
         * Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15
         */
        licenseType?: pulumi.Input<string>;
        /**
         * Specifies the network interfaces of the virtual machine.
         */
        networkProfile?: pulumi.Input<inputs.compute.NetworkProfile>;
        /**
         * Specifies the network profile configuration of the virtual machine.
         */
        networkProfileConfiguration?: pulumi.Input<inputs.compute.VirtualMachineScaleSetVMNetworkProfileConfiguration>;
        /**
         * Specifies the operating system settings for the virtual machine.
         */
        osProfile?: pulumi.Input<inputs.compute.OSProfile>;
        /**
         * Specifies the protection policy of the virtual machine.
         */
        protectionPolicy?: pulumi.Input<inputs.compute.VirtualMachineScaleSetVMProtectionPolicy>;
        /**
         * Specifies the Security related profile settings for the virtual machine.
         */
        securityProfile?: pulumi.Input<inputs.compute.SecurityProfile>;
        /**
         * Specifies the storage settings for the virtual machine disks.
         */
        storageProfile?: pulumi.Input<inputs.compute.StorageProfile>;
    }

    /**
     * Describes the properties of a virtual machine scale set virtual machine.
     */
    export interface VirtualMachineScaleSetVMPropertiesResponse {
        /**
         * Specifies additional capabilities enabled or disabled on the virtual machine in the scale set. For instance: whether the virtual machine has the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
         */
        additionalCapabilities?: pulumi.Input<inputs.compute.AdditionalCapabilitiesResponse>;
        /**
         * Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.
         */
        availabilitySet?: pulumi.Input<inputs.compute.SubResourceResponse>;
        /**
         * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
         */
        diagnosticsProfile?: pulumi.Input<inputs.compute.DiagnosticsProfileResponse>;
        /**
         * Specifies the hardware settings for the virtual machine.
         */
        hardwareProfile?: pulumi.Input<inputs.compute.HardwareProfileResponse>;
        /**
         * The virtual machine instance view.
         */
        instanceView: pulumi.Input<inputs.compute.VirtualMachineScaleSetVMInstanceViewResponse>;
        /**
         * Specifies whether the latest model has been applied to the virtual machine.
         */
        latestModelApplied: pulumi.Input<boolean>;
        /**
         * Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15
         */
        licenseType?: pulumi.Input<string>;
        /**
         * Specifies whether the model applied to the virtual machine is the model of the virtual machine scale set or the customized model for the virtual machine.
         */
        modelDefinitionApplied: pulumi.Input<string>;
        /**
         * Specifies the network interfaces of the virtual machine.
         */
        networkProfile?: pulumi.Input<inputs.compute.NetworkProfileResponse>;
        /**
         * Specifies the network profile configuration of the virtual machine.
         */
        networkProfileConfiguration?: pulumi.Input<inputs.compute.VirtualMachineScaleSetVMNetworkProfileConfigurationResponse>;
        /**
         * Specifies the operating system settings for the virtual machine.
         */
        osProfile?: pulumi.Input<inputs.compute.OSProfileResponse>;
        /**
         * Specifies the protection policy of the virtual machine.
         */
        protectionPolicy?: pulumi.Input<inputs.compute.VirtualMachineScaleSetVMProtectionPolicyResponse>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Specifies the Security related profile settings for the virtual machine.
         */
        securityProfile?: pulumi.Input<inputs.compute.SecurityProfileResponse>;
        /**
         * Specifies the storage settings for the virtual machine disks.
         */
        storageProfile?: pulumi.Input<inputs.compute.StorageProfileResponse>;
        /**
         * Azure VM unique ID.
         */
        vmId: pulumi.Input<string>;
    }

    /**
     * The protection policy of a virtual machine scale set VM.
     */
    export interface VirtualMachineScaleSetVMProtectionPolicy {
        /**
         * Indicates that the virtual machine scale set VM shouldn't be considered for deletion during a scale-in operation.
         */
        protectFromScaleIn?: pulumi.Input<boolean>;
        /**
         * Indicates that model updates or actions (including scale-in) initiated on the virtual machine scale set should not be applied to the virtual machine scale set VM.
         */
        protectFromScaleSetActions?: pulumi.Input<boolean>;
    }

    /**
     * The protection policy of a virtual machine scale set VM.
     */
    export interface VirtualMachineScaleSetVMProtectionPolicyResponse {
        /**
         * Indicates that the virtual machine scale set VM shouldn't be considered for deletion during a scale-in operation.
         */
        protectFromScaleIn?: pulumi.Input<boolean>;
        /**
         * Indicates that model updates or actions (including scale-in) initiated on the virtual machine scale set should not be applied to the virtual machine scale set VM.
         */
        protectFromScaleSetActions?: pulumi.Input<boolean>;
    }

    /**
     * Describes Windows Remote Management configuration of the VM
     */
    export interface WinRMConfiguration {
        /**
         * The list of Windows Remote Management listeners
         */
        listeners?: pulumi.Input<pulumi.Input<inputs.compute.WinRMListener>[]>;
    }

    /**
     * Describes Windows Remote Management configuration of the VM
     */
    export interface WinRMConfigurationResponse {
        /**
         * The list of Windows Remote Management listeners
         */
        listeners?: pulumi.Input<pulumi.Input<inputs.compute.WinRMListenerResponse>[]>;
    }

    /**
     * Describes Protocol and thumbprint of Windows Remote Management listener
     */
    export interface WinRMListener {
        /**
         * This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
         */
        certificateUrl?: pulumi.Input<string>;
        /**
         * Specifies the protocol of WinRM listener. <br><br> Possible values are: <br>**http** <br><br> **https**
         */
        protocol?: pulumi.Input<string>;
    }

    /**
     * Describes Protocol and thumbprint of Windows Remote Management listener
     */
    export interface WinRMListenerResponse {
        /**
         * This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
         */
        certificateUrl?: pulumi.Input<string>;
        /**
         * Specifies the protocol of WinRM listener. <br><br> Possible values are: <br>**http** <br><br> **https**
         */
        protocol?: pulumi.Input<string>;
    }

    /**
     * Specifies Windows operating system settings on the virtual machine.
     */
    export interface WindowsConfiguration {
        /**
         * Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
         */
        additionalUnattendContent?: pulumi.Input<pulumi.Input<inputs.compute.AdditionalUnattendContent>[]>;
        /**
         * Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. <br><br> For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
         */
        enableAutomaticUpdates?: pulumi.Input<boolean>;
        /**
         * Specifies settings related to in-guest patching (KBs).
         */
        patchSettings?: pulumi.Input<inputs.compute.PatchSettings>;
        /**
         * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
         */
        provisionVMAgent?: pulumi.Input<boolean>;
        /**
         * Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". <br><br> Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.getsystemtimezones).
         */
        timeZone?: pulumi.Input<string>;
        /**
         * Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
         */
        winRM?: pulumi.Input<inputs.compute.WinRMConfiguration>;
    }

    /**
     * Specifies Windows operating system settings on the virtual machine.
     */
    export interface WindowsConfigurationResponse {
        /**
         * Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
         */
        additionalUnattendContent?: pulumi.Input<pulumi.Input<inputs.compute.AdditionalUnattendContentResponse>[]>;
        /**
         * Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. <br><br> For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
         */
        enableAutomaticUpdates?: pulumi.Input<boolean>;
        /**
         * Specifies settings related to in-guest patching (KBs).
         */
        patchSettings?: pulumi.Input<inputs.compute.PatchSettingsResponse>;
        /**
         * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
         */
        provisionVMAgent?: pulumi.Input<boolean>;
        /**
         * Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". <br><br> Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.getsystemtimezones).
         */
        timeZone?: pulumi.Input<string>;
        /**
         * Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
         */
        winRM?: pulumi.Input<inputs.compute.WinRMConfigurationResponse>;
    }
}

export namespace containerinstance {
    /**
     * The properties of the Azure File volume. Azure File shares are mounted as volumes.
     */
    export interface AzureFileVolume {
        /**
         * The flag indicating whether the Azure File shared mounted as a volume is read-only.
         */
        readOnly?: pulumi.Input<boolean>;
        /**
         * The name of the Azure File share to be mounted as a volume.
         */
        shareName: pulumi.Input<string>;
        /**
         * The storage account access key used to access the Azure File share.
         */
        storageAccountKey?: pulumi.Input<string>;
        /**
         * The name of the storage account that contains the Azure File share.
         */
        storageAccountName: pulumi.Input<string>;
    }

    /**
     * The properties of the Azure File volume. Azure File shares are mounted as volumes.
     */
    export interface AzureFileVolumeResponse {
        /**
         * The flag indicating whether the Azure File shared mounted as a volume is read-only.
         */
        readOnly?: pulumi.Input<boolean>;
        /**
         * The name of the Azure File share to be mounted as a volume.
         */
        shareName: pulumi.Input<string>;
        /**
         * The storage account access key used to access the Azure File share.
         */
        storageAccountKey?: pulumi.Input<string>;
        /**
         * The name of the storage account that contains the Azure File share.
         */
        storageAccountName: pulumi.Input<string>;
    }

    /**
     * A container instance.
     */
    export interface Container {
        /**
         * The user-provided name of the container instance.
         */
        name: pulumi.Input<string>;
        /**
         * The properties of the container instance.
         */
        properties: pulumi.Input<inputs.containerinstance.ContainerProperties>;
    }

    /**
     * The container execution command, for liveness or readiness probe
     */
    export interface ContainerExec {
        /**
         * The commands to execute within the container.
         */
        command?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The container execution command, for liveness or readiness probe
     */
    export interface ContainerExecResponse {
        /**
         * The commands to execute within the container.
         */
        command?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Container group diagnostic information.
     */
    export interface ContainerGroupDiagnostics {
        /**
         * Container group log analytics information.
         */
        logAnalytics?: pulumi.Input<inputs.containerinstance.LogAnalytics>;
    }

    /**
     * Container group diagnostic information.
     */
    export interface ContainerGroupDiagnosticsResponse {
        /**
         * Container group log analytics information.
         */
        logAnalytics?: pulumi.Input<inputs.containerinstance.LogAnalyticsResponse>;
    }

    /**
     * Identity for the container group.
     */
    export interface ContainerGroupIdentity {
        /**
         * The type of identity used for the container group. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the container group.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the container group. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the container group.
     */
    export interface ContainerGroupIdentityResponse {
        /**
         * The principal id of the container group identity. This property will only be provided for a system assigned identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id associated with the container group. This property will only be provided for a system assigned identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of identity used for the container group. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the container group.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the container group. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Container group network profile information.
     */
    export interface ContainerGroupNetworkProfile {
        /**
         * The identifier for a network profile.
         */
        id: pulumi.Input<string>;
    }

    /**
     * Container group network profile information.
     */
    export interface ContainerGroupNetworkProfileResponse {
        /**
         * The identifier for a network profile.
         */
        id: pulumi.Input<string>;
    }

    /**
     * The container group properties
     */
    export interface ContainerGroupProperties {
        /**
         * The containers within the container group.
         */
        containers: pulumi.Input<pulumi.Input<inputs.containerinstance.Container>[]>;
        /**
         * The diagnostic information for a container group.
         */
        diagnostics?: pulumi.Input<inputs.containerinstance.ContainerGroupDiagnostics>;
        /**
         * The DNS config information for a container group.
         */
        dnsConfig?: pulumi.Input<inputs.containerinstance.DnsConfiguration>;
        /**
         * The encryption properties for a container group.
         */
        encryptionProperties?: pulumi.Input<inputs.containerinstance.EncryptionProperties>;
        /**
         * The image registry credentials by which the container group is created from.
         */
        imageRegistryCredentials?: pulumi.Input<pulumi.Input<inputs.containerinstance.ImageRegistryCredential>[]>;
        /**
         * The init containers for a container group.
         */
        initContainers?: pulumi.Input<pulumi.Input<inputs.containerinstance.InitContainerDefinition>[]>;
        /**
         * The IP address type of the container group.
         */
        ipAddress?: pulumi.Input<inputs.containerinstance.IpAddress>;
        /**
         * The network profile information for a container group.
         */
        networkProfile?: pulumi.Input<inputs.containerinstance.ContainerGroupNetworkProfile>;
        /**
         * The operating system type required by the containers in the container group.
         */
        osType: pulumi.Input<string>;
        /**
         * Restart policy for all containers within the container group. 
         * - `Always` Always restart
         * - `OnFailure` Restart on failure
         * - `Never` Never restart
         */
        restartPolicy?: pulumi.Input<string>;
        /**
         * The SKU for a container group.
         */
        sku?: pulumi.Input<string>;
        /**
         * The list of volumes that can be mounted by containers in this container group.
         */
        volumes?: pulumi.Input<pulumi.Input<inputs.containerinstance.Volume>[]>;
    }

    /**
     * The container group properties
     */
    export interface ContainerGroupResponseProperties {
        /**
         * The containers within the container group.
         */
        containers: pulumi.Input<pulumi.Input<inputs.containerinstance.ContainerResponse>[]>;
        /**
         * The diagnostic information for a container group.
         */
        diagnostics?: pulumi.Input<inputs.containerinstance.ContainerGroupDiagnosticsResponse>;
        /**
         * The DNS config information for a container group.
         */
        dnsConfig?: pulumi.Input<inputs.containerinstance.DnsConfigurationResponse>;
        /**
         * The encryption properties for a container group.
         */
        encryptionProperties?: pulumi.Input<inputs.containerinstance.EncryptionPropertiesResponse>;
        /**
         * The image registry credentials by which the container group is created from.
         */
        imageRegistryCredentials?: pulumi.Input<pulumi.Input<inputs.containerinstance.ImageRegistryCredentialResponse>[]>;
        /**
         * The init containers for a container group.
         */
        initContainers?: pulumi.Input<pulumi.Input<inputs.containerinstance.InitContainerDefinitionResponse>[]>;
        /**
         * The instance view of the container group. Only valid in response.
         */
        instanceView: pulumi.Input<inputs.containerinstance.ContainerGroupResponseProperties>;
        /**
         * The IP address type of the container group.
         */
        ipAddress?: pulumi.Input<inputs.containerinstance.IpAddressResponse>;
        /**
         * The network profile information for a container group.
         */
        networkProfile?: pulumi.Input<inputs.containerinstance.ContainerGroupNetworkProfileResponse>;
        /**
         * The operating system type required by the containers in the container group.
         */
        osType: pulumi.Input<string>;
        /**
         * The provisioning state of the container group. This only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Restart policy for all containers within the container group. 
         * - `Always` Always restart
         * - `OnFailure` Restart on failure
         * - `Never` Never restart
         */
        restartPolicy?: pulumi.Input<string>;
        /**
         * The SKU for a container group.
         */
        sku?: pulumi.Input<string>;
        /**
         * The list of volumes that can be mounted by containers in this container group.
         */
        volumes?: pulumi.Input<pulumi.Input<inputs.containerinstance.VolumeResponse>[]>;
    }

    /**
     * The container Http Get settings, for liveness or readiness probe
     */
    export interface ContainerHttpGet {
        /**
         * The path to probe.
         */
        path?: pulumi.Input<string>;
        /**
         * The port number to probe.
         */
        port: pulumi.Input<number>;
        /**
         * The scheme.
         */
        scheme?: pulumi.Input<string>;
    }

    /**
     * The container Http Get settings, for liveness or readiness probe
     */
    export interface ContainerHttpGetResponse {
        /**
         * The path to probe.
         */
        path?: pulumi.Input<string>;
        /**
         * The port number to probe.
         */
        port: pulumi.Input<number>;
        /**
         * The scheme.
         */
        scheme?: pulumi.Input<string>;
    }

    /**
     * The port exposed on the container instance.
     */
    export interface ContainerPort {
        /**
         * The port number exposed within the container group.
         */
        port: pulumi.Input<number>;
        /**
         * The protocol associated with the port.
         */
        protocol?: pulumi.Input<string>;
    }

    /**
     * The port exposed on the container instance.
     */
    export interface ContainerPortResponse {
        /**
         * The port number exposed within the container group.
         */
        port: pulumi.Input<number>;
        /**
         * The protocol associated with the port.
         */
        protocol?: pulumi.Input<string>;
    }

    /**
     * The container probe, for liveness or readiness
     */
    export interface ContainerProbe {
        /**
         * The execution command to probe
         */
        exec?: pulumi.Input<inputs.containerinstance.ContainerExec>;
        /**
         * The failure threshold.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The Http Get settings to probe
         */
        httpGet?: pulumi.Input<inputs.containerinstance.ContainerHttpGet>;
        /**
         * The initial delay seconds.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The period seconds.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The success threshold.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The timeout seconds.
         */
        timeoutSeconds?: pulumi.Input<number>;
    }

    /**
     * The container probe, for liveness or readiness
     */
    export interface ContainerProbeResponse {
        /**
         * The execution command to probe
         */
        exec?: pulumi.Input<inputs.containerinstance.ContainerExecResponse>;
        /**
         * The failure threshold.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The Http Get settings to probe
         */
        httpGet?: pulumi.Input<inputs.containerinstance.ContainerHttpGetResponse>;
        /**
         * The initial delay seconds.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The period seconds.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The success threshold.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The timeout seconds.
         */
        timeoutSeconds?: pulumi.Input<number>;
    }

    /**
     * The container instance properties.
     */
    export interface ContainerProperties {
        /**
         * The commands to execute within the container instance in exec form.
         */
        command?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The environment variables to set in the container instance.
         */
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.containerinstance.EnvironmentVariable>[]>;
        /**
         * The name of the image used to create the container instance.
         */
        image: pulumi.Input<string>;
        /**
         * The liveness probe.
         */
        livenessProbe?: pulumi.Input<inputs.containerinstance.ContainerProbe>;
        /**
         * The exposed ports on the container instance.
         */
        ports?: pulumi.Input<pulumi.Input<inputs.containerinstance.ContainerPort>[]>;
        /**
         * The readiness probe.
         */
        readinessProbe?: pulumi.Input<inputs.containerinstance.ContainerProbe>;
        /**
         * The resource requirements of the container instance.
         */
        resources: pulumi.Input<inputs.containerinstance.ResourceRequirements>;
        /**
         * The volume mounts available to the container instance.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.containerinstance.VolumeMount>[]>;
    }

    /**
     * The container instance properties.
     */
    export interface ContainerPropertiesResponse {
        /**
         * The commands to execute within the container instance in exec form.
         */
        command?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The environment variables to set in the container instance.
         */
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.containerinstance.EnvironmentVariableResponse>[]>;
        /**
         * The name of the image used to create the container instance.
         */
        image: pulumi.Input<string>;
        /**
         * The instance view of the container instance. Only valid in response.
         */
        instanceView: pulumi.Input<inputs.containerinstance.ContainerPropertiesResponseProperties>;
        /**
         * The liveness probe.
         */
        livenessProbe?: pulumi.Input<inputs.containerinstance.ContainerProbeResponse>;
        /**
         * The exposed ports on the container instance.
         */
        ports?: pulumi.Input<pulumi.Input<inputs.containerinstance.ContainerPortResponse>[]>;
        /**
         * The readiness probe.
         */
        readinessProbe?: pulumi.Input<inputs.containerinstance.ContainerProbeResponse>;
        /**
         * The resource requirements of the container instance.
         */
        resources: pulumi.Input<inputs.containerinstance.ResourceRequirementsResponse>;
        /**
         * The volume mounts available to the container instance.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.containerinstance.VolumeMountResponse>[]>;
    }

    /**
     * The instance view of the container instance. Only valid in response.
     */
    export interface ContainerPropertiesResponseProperties {
        /**
         * Current container instance state.
         */
        currentState: pulumi.Input<inputs.containerinstance.ContainerStateResponse>;
        /**
         * The events of the container instance.
         */
        events: pulumi.Input<pulumi.Input<inputs.containerinstance.EventResponse>[]>;
        /**
         * Previous container instance state.
         */
        previousState: pulumi.Input<inputs.containerinstance.ContainerStateResponse>;
        /**
         * The number of times that the container instance has been restarted.
         */
        restartCount: pulumi.Input<number>;
    }

    /**
     * A container instance.
     */
    export interface ContainerResponse {
        /**
         * The user-provided name of the container instance.
         */
        name: pulumi.Input<string>;
        /**
         * The properties of the container instance.
         */
        properties: pulumi.Input<inputs.containerinstance.ContainerPropertiesResponse>;
    }

    /**
     * The container instance state.
     */
    export interface ContainerStateResponse {
        /**
         * The human-readable status of the container instance state.
         */
        detailStatus: pulumi.Input<string>;
        /**
         * The container instance exit codes correspond to those from the `docker run` command.
         */
        exitCode: pulumi.Input<number>;
        /**
         * The date-time when the container instance state finished.
         */
        finishTime: pulumi.Input<string>;
        /**
         * The date-time when the container instance state started.
         */
        startTime: pulumi.Input<string>;
        /**
         * The state of the container instance.
         */
        state: pulumi.Input<string>;
    }

    /**
     * DNS configuration for the container group.
     */
    export interface DnsConfiguration {
        /**
         * The DNS servers for the container group.
         */
        nameServers: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The DNS options for the container group.
         */
        options?: pulumi.Input<string>;
        /**
         * The DNS search domains for hostname lookup in the container group.
         */
        searchDomains?: pulumi.Input<string>;
    }

    /**
     * DNS configuration for the container group.
     */
    export interface DnsConfigurationResponse {
        /**
         * The DNS servers for the container group.
         */
        nameServers: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The DNS options for the container group.
         */
        options?: pulumi.Input<string>;
        /**
         * The DNS search domains for hostname lookup in the container group.
         */
        searchDomains?: pulumi.Input<string>;
    }

    /**
     * The empty directory volume.
     */
    export interface EmptyDirVolume {
    }

    /**
     * The empty directory volume.
     */
    export interface EmptyDirVolumeResponse {
    }

    /**
     * The container group encryption properties.
     */
    export interface EncryptionProperties {
        /**
         * The encryption key name.
         */
        keyName: pulumi.Input<string>;
        /**
         * The encryption key version.
         */
        keyVersion: pulumi.Input<string>;
        /**
         * The keyvault base url.
         */
        vaultBaseUrl: pulumi.Input<string>;
    }

    /**
     * The container group encryption properties.
     */
    export interface EncryptionPropertiesResponse {
        /**
         * The encryption key name.
         */
        keyName: pulumi.Input<string>;
        /**
         * The encryption key version.
         */
        keyVersion: pulumi.Input<string>;
        /**
         * The keyvault base url.
         */
        vaultBaseUrl: pulumi.Input<string>;
    }

    /**
     * The environment variable to set within the container instance.
     */
    export interface EnvironmentVariable {
        /**
         * The name of the environment variable.
         */
        name: pulumi.Input<string>;
        /**
         * The value of the secure environment variable.
         */
        secureValue?: pulumi.Input<string>;
        /**
         * The value of the environment variable.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * The environment variable to set within the container instance.
     */
    export interface EnvironmentVariableResponse {
        /**
         * The name of the environment variable.
         */
        name: pulumi.Input<string>;
        /**
         * The value of the secure environment variable.
         */
        secureValue?: pulumi.Input<string>;
        /**
         * The value of the environment variable.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * A container group or container instance event.
     */
    export interface EventResponse {
        /**
         * The count of the event.
         */
        count: pulumi.Input<number>;
        /**
         * The date-time of the earliest logged event.
         */
        firstTimestamp: pulumi.Input<string>;
        /**
         * The date-time of the latest logged event.
         */
        lastTimestamp: pulumi.Input<string>;
        /**
         * The event message.
         */
        message: pulumi.Input<string>;
        /**
         * The event name.
         */
        name: pulumi.Input<string>;
        /**
         * The event type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Represents a volume that is populated with the contents of a git repository
     */
    export interface GitRepoVolume {
        /**
         * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
         */
        directory?: pulumi.Input<string>;
        /**
         * Repository URL
         */
        repository: pulumi.Input<string>;
        /**
         * Commit hash for the specified revision.
         */
        revision?: pulumi.Input<string>;
    }

    /**
     * Represents a volume that is populated with the contents of a git repository
     */
    export interface GitRepoVolumeResponse {
        /**
         * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
         */
        directory?: pulumi.Input<string>;
        /**
         * Repository URL
         */
        repository: pulumi.Input<string>;
        /**
         * Commit hash for the specified revision.
         */
        revision?: pulumi.Input<string>;
    }

    /**
     * The GPU resource.
     */
    export interface GpuResource {
        /**
         * The count of the GPU resource.
         */
        count: pulumi.Input<number>;
        /**
         * The SKU of the GPU resource.
         */
        sku: pulumi.Input<string>;
    }

    /**
     * The GPU resource.
     */
    export interface GpuResourceResponse {
        /**
         * The count of the GPU resource.
         */
        count: pulumi.Input<number>;
        /**
         * The SKU of the GPU resource.
         */
        sku: pulumi.Input<string>;
    }

    /**
     * Image registry credential.
     */
    export interface ImageRegistryCredential {
        /**
         * The password for the private registry.
         */
        password?: pulumi.Input<string>;
        /**
         * The Docker image registry server without a protocol such as "http" and "https".
         */
        server: pulumi.Input<string>;
        /**
         * The username for the private registry.
         */
        username: pulumi.Input<string>;
    }

    /**
     * Image registry credential.
     */
    export interface ImageRegistryCredentialResponse {
        /**
         * The password for the private registry.
         */
        password?: pulumi.Input<string>;
        /**
         * The Docker image registry server without a protocol such as "http" and "https".
         */
        server: pulumi.Input<string>;
        /**
         * The username for the private registry.
         */
        username: pulumi.Input<string>;
    }

    /**
     * The init container definition.
     */
    export interface InitContainerDefinition {
        /**
         * The name for the init container.
         */
        name: pulumi.Input<string>;
        /**
         * The properties for the init container.
         */
        properties: pulumi.Input<inputs.containerinstance.InitContainerPropertiesDefinition>;
    }

    /**
     * The init container definition.
     */
    export interface InitContainerDefinitionResponse {
        /**
         * The name for the init container.
         */
        name: pulumi.Input<string>;
        /**
         * The properties for the init container.
         */
        properties: pulumi.Input<inputs.containerinstance.InitContainerPropertiesDefinitionResponse>;
    }

    /**
     * The init container definition properties.
     */
    export interface InitContainerPropertiesDefinition {
        /**
         * The command to execute within the init container in exec form.
         */
        command?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The environment variables to set in the init container.
         */
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.containerinstance.EnvironmentVariable>[]>;
        /**
         * The image of the init container.
         */
        image?: pulumi.Input<string>;
        /**
         * The volume mounts available to the init container.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.containerinstance.VolumeMount>[]>;
    }

    /**
     * The init container definition properties.
     */
    export interface InitContainerPropertiesDefinitionResponse {
        /**
         * The command to execute within the init container in exec form.
         */
        command?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The environment variables to set in the init container.
         */
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.containerinstance.EnvironmentVariableResponse>[]>;
        /**
         * The image of the init container.
         */
        image?: pulumi.Input<string>;
        /**
         * The instance view of the init container. Only valid in response.
         */
        instanceView: pulumi.Input<inputs.containerinstance.InitContainerPropertiesDefinitionResponseProperties>;
        /**
         * The volume mounts available to the init container.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.containerinstance.VolumeMountResponse>[]>;
    }

    /**
     * The instance view of the init container. Only valid in response.
     */
    export interface InitContainerPropertiesDefinitionResponseProperties {
        /**
         * The current state of the init container.
         */
        currentState: pulumi.Input<inputs.containerinstance.ContainerStateResponse>;
        /**
         * The events of the init container.
         */
        events: pulumi.Input<pulumi.Input<inputs.containerinstance.EventResponse>[]>;
        /**
         * The previous state of the init container.
         */
        previousState: pulumi.Input<inputs.containerinstance.ContainerStateResponse>;
        /**
         * The number of times that the init container has been restarted.
         */
        restartCount: pulumi.Input<number>;
    }

    /**
     * IP address for the container group.
     */
    export interface IpAddress {
        /**
         * The Dns name label for the IP.
         */
        dnsNameLabel?: pulumi.Input<string>;
        /**
         * The IP exposed to the public internet.
         */
        ip?: pulumi.Input<string>;
        /**
         * The list of ports exposed on the container group.
         */
        ports: pulumi.Input<pulumi.Input<inputs.containerinstance.Port>[]>;
        /**
         * Specifies if the IP is exposed to the public internet or private VNET.
         */
        type: pulumi.Input<string>;
    }

    /**
     * IP address for the container group.
     */
    export interface IpAddressResponse {
        /**
         * The Dns name label for the IP.
         */
        dnsNameLabel?: pulumi.Input<string>;
        /**
         * The FQDN for the IP.
         */
        fqdn: pulumi.Input<string>;
        /**
         * The IP exposed to the public internet.
         */
        ip?: pulumi.Input<string>;
        /**
         * The list of ports exposed on the container group.
         */
        ports: pulumi.Input<pulumi.Input<inputs.containerinstance.PortResponse>[]>;
        /**
         * Specifies if the IP is exposed to the public internet or private VNET.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Container group log analytics information.
     */
    export interface LogAnalytics {
        /**
         * The log type to be used.
         */
        logType?: pulumi.Input<string>;
        /**
         * Metadata for log analytics.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The workspace id for log analytics
         */
        workspaceId: pulumi.Input<string>;
        /**
         * The workspace key for log analytics
         */
        workspaceKey: pulumi.Input<string>;
    }

    /**
     * Container group log analytics information.
     */
    export interface LogAnalyticsResponse {
        /**
         * The log type to be used.
         */
        logType?: pulumi.Input<string>;
        /**
         * Metadata for log analytics.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The workspace id for log analytics
         */
        workspaceId: pulumi.Input<string>;
        /**
         * The workspace key for log analytics
         */
        workspaceKey: pulumi.Input<string>;
    }

    /**
     * The port exposed on the container group.
     */
    export interface Port {
        /**
         * The port number.
         */
        port: pulumi.Input<number>;
        /**
         * The protocol associated with the port.
         */
        protocol?: pulumi.Input<string>;
    }

    /**
     * The port exposed on the container group.
     */
    export interface PortResponse {
        /**
         * The port number.
         */
        port: pulumi.Input<number>;
        /**
         * The protocol associated with the port.
         */
        protocol?: pulumi.Input<string>;
    }

    /**
     * The resource limits.
     */
    export interface ResourceLimits {
        /**
         * The CPU limit of this container instance.
         */
        cpu?: pulumi.Input<number>;
        /**
         * The GPU limit of this container instance.
         */
        gpu?: pulumi.Input<inputs.containerinstance.GpuResource>;
        /**
         * The memory limit in GB of this container instance.
         */
        memoryInGB?: pulumi.Input<number>;
    }

    /**
     * The resource limits.
     */
    export interface ResourceLimitsResponse {
        /**
         * The CPU limit of this container instance.
         */
        cpu?: pulumi.Input<number>;
        /**
         * The GPU limit of this container instance.
         */
        gpu?: pulumi.Input<inputs.containerinstance.GpuResourceResponse>;
        /**
         * The memory limit in GB of this container instance.
         */
        memoryInGB?: pulumi.Input<number>;
    }

    /**
     * The resource requests.
     */
    export interface ResourceRequests {
        /**
         * The CPU request of this container instance.
         */
        cpu: pulumi.Input<number>;
        /**
         * The GPU request of this container instance.
         */
        gpu?: pulumi.Input<inputs.containerinstance.GpuResource>;
        /**
         * The memory request in GB of this container instance.
         */
        memoryInGB: pulumi.Input<number>;
    }

    /**
     * The resource requests.
     */
    export interface ResourceRequestsResponse {
        /**
         * The CPU request of this container instance.
         */
        cpu: pulumi.Input<number>;
        /**
         * The GPU request of this container instance.
         */
        gpu?: pulumi.Input<inputs.containerinstance.GpuResourceResponse>;
        /**
         * The memory request in GB of this container instance.
         */
        memoryInGB: pulumi.Input<number>;
    }

    /**
     * The resource requirements.
     */
    export interface ResourceRequirements {
        /**
         * The resource limits of this container instance.
         */
        limits?: pulumi.Input<inputs.containerinstance.ResourceLimits>;
        /**
         * The resource requests of this container instance.
         */
        requests: pulumi.Input<inputs.containerinstance.ResourceRequests>;
    }

    /**
     * The resource requirements.
     */
    export interface ResourceRequirementsResponse {
        /**
         * The resource limits of this container instance.
         */
        limits?: pulumi.Input<inputs.containerinstance.ResourceLimitsResponse>;
        /**
         * The resource requests of this container instance.
         */
        requests: pulumi.Input<inputs.containerinstance.ResourceRequestsResponse>;
    }

    /**
     * The secret volume.
     */
    export interface SecretVolume {
    }

    /**
     * The secret volume.
     */
    export interface SecretVolumeResponse {
    }

    /**
     * The properties of the volume.
     */
    export interface Volume {
        /**
         * The Azure File volume.
         */
        azureFile?: pulumi.Input<inputs.containerinstance.AzureFileVolume>;
        /**
         * The empty directory volume.
         */
        emptyDir?: pulumi.Input<inputs.containerinstance.EmptyDirVolume>;
        /**
         * The git repo volume.
         */
        gitRepo?: pulumi.Input<inputs.containerinstance.GitRepoVolume>;
        /**
         * The name of the volume.
         */
        name: pulumi.Input<string>;
        /**
         * The secret volume.
         */
        secret?: pulumi.Input<inputs.containerinstance.SecretVolume>;
    }

    /**
     * The properties of the volume mount.
     */
    export interface VolumeMount {
        /**
         * The path within the container where the volume should be mounted. Must not contain colon (:).
         */
        mountPath: pulumi.Input<string>;
        /**
         * The name of the volume mount.
         */
        name: pulumi.Input<string>;
        /**
         * The flag indicating whether the volume mount is read-only.
         */
        readOnly?: pulumi.Input<boolean>;
    }

    /**
     * The properties of the volume mount.
     */
    export interface VolumeMountResponse {
        /**
         * The path within the container where the volume should be mounted. Must not contain colon (:).
         */
        mountPath: pulumi.Input<string>;
        /**
         * The name of the volume mount.
         */
        name: pulumi.Input<string>;
        /**
         * The flag indicating whether the volume mount is read-only.
         */
        readOnly?: pulumi.Input<boolean>;
    }

    /**
     * The properties of the volume.
     */
    export interface VolumeResponse {
        /**
         * The Azure File volume.
         */
        azureFile?: pulumi.Input<inputs.containerinstance.AzureFileVolumeResponse>;
        /**
         * The empty directory volume.
         */
        emptyDir?: pulumi.Input<inputs.containerinstance.EmptyDirVolumeResponse>;
        /**
         * The git repo volume.
         */
        gitRepo?: pulumi.Input<inputs.containerinstance.GitRepoVolumeResponse>;
        /**
         * The name of the volume.
         */
        name: pulumi.Input<string>;
        /**
         * The secret volume.
         */
        secret?: pulumi.Input<inputs.containerinstance.SecretVolumeResponse>;
    }
}

export namespace containerregistry {
    /**
     * The properties that determine the run agent configuration.
     */
    export interface AgentProperties {
        /**
         * The CPU configuration in terms of number of cores required for the run.
         */
        cpu?: pulumi.Input<number>;
    }

    /**
     * The properties that determine the run agent configuration.
     */
    export interface AgentPropertiesResponse {
        /**
         * The CPU configuration in terms of number of cores required for the run.
         */
        cpu?: pulumi.Input<number>;
    }

    /**
     * The authorization properties for accessing the source code repository.
     */
    export interface AuthInfo {
        /**
         * Time in seconds that the token remains valid
         */
        expiresIn?: pulumi.Input<number>;
        /**
         * The refresh token used to refresh the access token.
         */
        refreshToken?: pulumi.Input<string>;
        /**
         * The scope of the access token.
         */
        scope?: pulumi.Input<string>;
        /**
         * The access token used to access the source control provider.
         */
        token: pulumi.Input<string>;
        /**
         * The type of Auth token.
         */
        tokenType: pulumi.Input<string>;
    }

    /**
     * The authorization properties for accessing the source code repository.
     */
    export interface AuthInfoResponse {
        /**
         * Time in seconds that the token remains valid
         */
        expiresIn?: pulumi.Input<number>;
        /**
         * The refresh token used to refresh the access token.
         */
        refreshToken?: pulumi.Input<string>;
        /**
         * The scope of the access token.
         */
        scope?: pulumi.Input<string>;
        /**
         * The access token used to access the source control provider.
         */
        token: pulumi.Input<string>;
        /**
         * The type of Auth token.
         */
        tokenType: pulumi.Input<string>;
    }

    /**
     * Properties that describe a base image dependency.
     */
    export interface BaseImageDependencyResponse {
        /**
         * The sha256-based digest of the image manifest.
         */
        digest?: pulumi.Input<string>;
        /**
         * The registry login server.
         */
        registry?: pulumi.Input<string>;
        /**
         * The repository name.
         */
        repository?: pulumi.Input<string>;
        /**
         * The tag name.
         */
        tag?: pulumi.Input<string>;
        /**
         * The type of the base image dependency.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The trigger based on base image dependency.
     */
    export interface BaseImageTrigger {
        /**
         * The type of the auto trigger for base image dependency updates.
         */
        baseImageTriggerType: pulumi.Input<string>;
        /**
         * The name of the trigger.
         */
        name: pulumi.Input<string>;
        /**
         * The current status of trigger.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The trigger based on base image dependency.
     */
    export interface BaseImageTriggerResponse {
        /**
         * The type of the auto trigger for base image dependency updates.
         */
        baseImageTriggerType: pulumi.Input<string>;
        /**
         * The name of the trigger.
         */
        name: pulumi.Input<string>;
        /**
         * The current status of trigger.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The parameters that describes a set of credentials that will be used when a run is invoked.
     */
    export interface Credentials {
        /**
         * Describes the credential parameters for accessing other custom registries. The key
         * for the dictionary item will be the registry login server (myregistry.azurecr.io) and
         * the value of the item will be the registry credentials for accessing the registry.
         */
        customRegistries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Describes the credential parameters for accessing the source registry.
         */
        sourceRegistry?: pulumi.Input<inputs.containerregistry.SourceRegistryCredentials>;
    }

    /**
     * The parameters that describes a set of credentials that will be used when a run is invoked.
     */
    export interface CredentialsResponse {
        /**
         * Describes the credential parameters for accessing other custom registries. The key
         * for the dictionary item will be the registry login server (myregistry.azurecr.io) and
         * the value of the item will be the registry credentials for accessing the registry.
         */
        customRegistries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Describes the credential parameters for accessing the source registry.
         */
        sourceRegistry?: pulumi.Input<inputs.containerregistry.SourceRegistryCredentialsResponse>;
    }

    /**
     * IP rule with specific IP or IP range in CIDR format.
     */
    export interface IPRule {
        /**
         * The action of IP ACL rule.
         */
        action?: pulumi.Input<string>;
        /**
         * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
         */
        value: pulumi.Input<string>;
    }

    /**
     * IP rule with specific IP or IP range in CIDR format.
     */
    export interface IPRuleResponse {
        /**
         * The action of IP ACL rule.
         */
        action?: pulumi.Input<string>;
        /**
         * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Managed identity for the resource.
     */
    export interface IdentityProperties {
        /**
         * The principal ID of resource identity.
         */
        principalId?: pulumi.Input<string>;
        /**
         * The tenant ID of resource.
         */
        tenantId?: pulumi.Input<string>;
        /**
         * The identity type.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the resource. The user identity 
         * dictionary key references will be ARM resource ids in the form: 
         * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
         *     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Managed identity for the resource.
     */
    export interface IdentityPropertiesResponse {
        /**
         * The principal ID of resource identity.
         */
        principalId?: pulumi.Input<string>;
        /**
         * The tenant ID of resource.
         */
        tenantId?: pulumi.Input<string>;
        /**
         * The identity type.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the resource. The user identity 
         * dictionary key references will be ARM resource ids in the form: 
         * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
         *     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The network rule set for a container registry.
     */
    export interface NetworkRuleSet {
        /**
         * The default action of allow or deny when no other rules match.
         */
        defaultAction: pulumi.Input<string>;
        /**
         * The IP ACL rules.
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.containerregistry.IPRule>[]>;
        /**
         * The virtual network rules.
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.containerregistry.VirtualNetworkRule>[]>;
    }

    /**
     * The network rule set for a container registry.
     */
    export interface NetworkRuleSetResponse {
        /**
         * The default action of allow or deny when no other rules match.
         */
        defaultAction: pulumi.Input<string>;
        /**
         * The IP ACL rules.
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.containerregistry.IPRuleResponse>[]>;
        /**
         * The virtual network rules.
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.containerregistry.VirtualNetworkRuleResponse>[]>;
    }

    /**
     * The platform properties against which the run has to happen.
     */
    export interface PlatformProperties {
        /**
         * The OS architecture.
         */
        architecture?: pulumi.Input<string>;
        /**
         * The operating system type required for the run.
         */
        os: pulumi.Input<string>;
        /**
         * Variant of the CPU.
         */
        variant?: pulumi.Input<string>;
    }

    /**
     * The platform properties against which the run has to happen.
     */
    export interface PlatformPropertiesResponse {
        /**
         * The OS architecture.
         */
        architecture?: pulumi.Input<string>;
        /**
         * The operating system type required for the run.
         */
        os: pulumi.Input<string>;
        /**
         * Variant of the CPU.
         */
        variant?: pulumi.Input<string>;
    }

    /**
     * The policies for a container registry.
     */
    export interface Policies {
        /**
         * The quarantine policy for a container registry.
         */
        quarantinePolicy?: pulumi.Input<inputs.containerregistry.QuarantinePolicy>;
        /**
         * The retention policy for a container registry.
         */
        retentionPolicy?: pulumi.Input<inputs.containerregistry.RetentionPolicy>;
        /**
         * The content trust policy for a container registry.
         */
        trustPolicy?: pulumi.Input<inputs.containerregistry.TrustPolicy>;
    }

    /**
     * The policies for a container registry.
     */
    export interface PoliciesResponse {
        /**
         * The quarantine policy for a container registry.
         */
        quarantinePolicy?: pulumi.Input<inputs.containerregistry.QuarantinePolicyResponse>;
        /**
         * The retention policy for a container registry.
         */
        retentionPolicy?: pulumi.Input<inputs.containerregistry.RetentionPolicyResponse>;
        /**
         * The content trust policy for a container registry.
         */
        trustPolicy?: pulumi.Input<inputs.containerregistry.TrustPolicyResponse>;
    }

    /**
     * The quarantine policy for a container registry.
     */
    export interface QuarantinePolicy {
        /**
         * The value that indicates whether the policy is enabled or not.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The quarantine policy for a container registry.
     */
    export interface QuarantinePolicyResponse {
        /**
         * The value that indicates whether the policy is enabled or not.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The properties of a container registry.
     */
    export interface RegistryProperties {
        /**
         * The value that indicates whether the admin user is enabled.
         */
        adminUserEnabled?: pulumi.Input<boolean>;
        /**
         * The network rule set for a container registry.
         */
        networkRuleSet?: pulumi.Input<inputs.containerregistry.NetworkRuleSet>;
        /**
         * The policies for a container registry.
         */
        policies?: pulumi.Input<inputs.containerregistry.Policies>;
        /**
         * The properties of the storage account for the container registry. Only applicable to Classic SKU.
         */
        storageAccount?: pulumi.Input<inputs.containerregistry.StorageAccountProperties>;
    }

    /**
     * The properties of a container registry.
     */
    export interface RegistryPropertiesResponse {
        /**
         * The value that indicates whether the admin user is enabled.
         */
        adminUserEnabled?: pulumi.Input<boolean>;
        /**
         * The creation date of the container registry in ISO8601 format.
         */
        creationDate: pulumi.Input<string>;
        /**
         * The URL that can be used to log into the container registry.
         */
        loginServer: pulumi.Input<string>;
        /**
         * The network rule set for a container registry.
         */
        networkRuleSet?: pulumi.Input<inputs.containerregistry.NetworkRuleSetResponse>;
        /**
         * The policies for a container registry.
         */
        policies?: pulumi.Input<inputs.containerregistry.PoliciesResponse>;
        /**
         * The provisioning state of the container registry at the time the operation was called.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The status of the container registry at the time the operation was called.
         */
        status: pulumi.Input<inputs.containerregistry.StatusResponse>;
        /**
         * The properties of the storage account for the container registry. Only applicable to Classic SKU.
         */
        storageAccount?: pulumi.Input<inputs.containerregistry.StorageAccountPropertiesResponse>;
    }

    /**
     * The properties of a replication.
     */
    export interface ReplicationProperties {
    }

    /**
     * The properties of a replication.
     */
    export interface ReplicationPropertiesResponse {
        /**
         * The provisioning state of the replication at the time the operation was called.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The status of the replication at the time the operation was called.
         */
        status: pulumi.Input<inputs.containerregistry.StatusResponse>;
    }

    /**
     * The retention policy for a container registry.
     */
    export interface RetentionPolicy {
        /**
         * The number of days to retain an untagged manifest after which it gets purged.
         */
        days?: pulumi.Input<number>;
        /**
         * The value that indicates whether the policy is enabled or not.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The retention policy for a container registry.
     */
    export interface RetentionPolicyResponse {
        /**
         * The number of days to retain an untagged manifest after which it gets purged.
         */
        days?: pulumi.Input<number>;
        /**
         * The timestamp when the policy was last updated.
         */
        lastUpdatedTime: pulumi.Input<string>;
        /**
         * The value that indicates whether the policy is enabled or not.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The SKU of a container registry.
     */
    export interface Sku {
        /**
         * The SKU name of the container registry. Required for registry creation.
         */
        name: pulumi.Input<string>;
    }

    /**
     * The SKU of a container registry.
     */
    export interface SkuResponse {
        /**
         * The SKU name of the container registry. Required for registry creation.
         */
        name: pulumi.Input<string>;
        /**
         * The SKU tier based on the SKU name.
         */
        tier: pulumi.Input<string>;
    }

    /**
     * The properties of the source code repository.
     */
    export interface SourceProperties {
        /**
         * The branch name of the source code.
         */
        branch?: pulumi.Input<string>;
        /**
         * The full URL to the source code repository
         */
        repositoryUrl: pulumi.Input<string>;
        /**
         * The authorization properties for accessing the source code repository and to set up
         * webhooks for notifications.
         */
        sourceControlAuthProperties?: pulumi.Input<inputs.containerregistry.AuthInfo>;
        /**
         * The type of source control service.
         */
        sourceControlType: pulumi.Input<string>;
    }

    /**
     * The properties of the source code repository.
     */
    export interface SourcePropertiesResponse {
        /**
         * The branch name of the source code.
         */
        branch?: pulumi.Input<string>;
        /**
         * The full URL to the source code repository
         */
        repositoryUrl: pulumi.Input<string>;
        /**
         * The authorization properties for accessing the source code repository and to set up
         * webhooks for notifications.
         */
        sourceControlAuthProperties?: pulumi.Input<inputs.containerregistry.AuthInfoResponse>;
        /**
         * The type of source control service.
         */
        sourceControlType: pulumi.Input<string>;
    }

    /**
     * Describes the credential parameters for accessing the source registry.
     */
    export interface SourceRegistryCredentials {
        /**
         * The authentication mode which determines the source registry login scope. The credentials for the source registry
         * will be generated using the given scope. These credentials will be used to login to
         * the source registry during the run.
         */
        loginMode?: pulumi.Input<string>;
    }

    /**
     * Describes the credential parameters for accessing the source registry.
     */
    export interface SourceRegistryCredentialsResponse {
        /**
         * The authentication mode which determines the source registry login scope. The credentials for the source registry
         * will be generated using the given scope. These credentials will be used to login to
         * the source registry during the run.
         */
        loginMode?: pulumi.Input<string>;
    }

    /**
     * The properties of a source based trigger.
     */
    export interface SourceTrigger {
        /**
         * The name of the trigger.
         */
        name: pulumi.Input<string>;
        /**
         * The properties that describes the source(code) for the task.
         */
        sourceRepository: pulumi.Input<inputs.containerregistry.SourceProperties>;
        /**
         * The source event corresponding to the trigger.
         */
        sourceTriggerEvents: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The current status of trigger.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The properties of a source based trigger.
     */
    export interface SourceTriggerResponse {
        /**
         * The name of the trigger.
         */
        name: pulumi.Input<string>;
        /**
         * The properties that describes the source(code) for the task.
         */
        sourceRepository: pulumi.Input<inputs.containerregistry.SourcePropertiesResponse>;
        /**
         * The source event corresponding to the trigger.
         */
        sourceTriggerEvents: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The current status of trigger.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The status of an Azure resource at the time the operation was called.
     */
    export interface StatusResponse {
        /**
         * The short label for the status.
         */
        displayStatus: pulumi.Input<string>;
        /**
         * The detailed message for the status, including alerts and error messages.
         */
        message: pulumi.Input<string>;
        /**
         * The timestamp when the status was changed to the current value.
         */
        timestamp: pulumi.Input<string>;
    }

    /**
     * The properties of a storage account for a container registry. Only applicable to Classic SKU.
     */
    export interface StorageAccountProperties {
        /**
         * The resource ID of the storage account.
         */
        id: pulumi.Input<string>;
    }

    /**
     * The properties of a storage account for a container registry. Only applicable to Classic SKU.
     */
    export interface StorageAccountPropertiesResponse {
        /**
         * The resource ID of the storage account.
         */
        id: pulumi.Input<string>;
    }

    /**
     * The properties of a task.
     */
    export interface TaskProperties {
        /**
         * The machine configuration of the run agent.
         */
        agentConfiguration?: pulumi.Input<inputs.containerregistry.AgentProperties>;
        /**
         * The properties that describes a set of credentials that will be used when this run is invoked.
         */
        credentials?: pulumi.Input<inputs.containerregistry.Credentials>;
        /**
         * The platform properties against which the run has to happen.
         */
        platform: pulumi.Input<inputs.containerregistry.PlatformProperties>;
        /**
         * The current status of task.
         */
        status?: pulumi.Input<string>;
        /**
         * The properties of a task step.
         */
        step: pulumi.Input<inputs.containerregistry.TaskStepProperties>;
        /**
         * Run timeout in seconds.
         */
        timeout?: pulumi.Input<number>;
        /**
         * The properties that describe all triggers for the task.
         */
        trigger?: pulumi.Input<inputs.containerregistry.TriggerProperties>;
    }

    /**
     * The properties of a task.
     */
    export interface TaskPropertiesResponse {
        /**
         * The machine configuration of the run agent.
         */
        agentConfiguration?: pulumi.Input<inputs.containerregistry.AgentPropertiesResponse>;
        /**
         * The creation date of task.
         */
        creationDate: pulumi.Input<string>;
        /**
         * The properties that describes a set of credentials that will be used when this run is invoked.
         */
        credentials?: pulumi.Input<inputs.containerregistry.CredentialsResponse>;
        /**
         * The platform properties against which the run has to happen.
         */
        platform: pulumi.Input<inputs.containerregistry.PlatformPropertiesResponse>;
        /**
         * The provisioning state of the task.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The current status of task.
         */
        status?: pulumi.Input<string>;
        /**
         * The properties of a task step.
         */
        step: pulumi.Input<inputs.containerregistry.TaskStepPropertiesResponse>;
        /**
         * Run timeout in seconds.
         */
        timeout?: pulumi.Input<number>;
        /**
         * The properties that describe all triggers for the task.
         */
        trigger?: pulumi.Input<inputs.containerregistry.TriggerPropertiesResponse>;
    }

    /**
     * Base properties for any task step.
     */
    export interface TaskStepProperties {
        /**
         * The token (git PAT or SAS token of storage account blob) associated with the context for a step.
         */
        contextAccessToken?: pulumi.Input<string>;
        /**
         * The URL(absolute or relative) of the source context for the task step.
         */
        contextPath?: pulumi.Input<string>;
    }

    /**
     * Base properties for any task step.
     */
    export interface TaskStepPropertiesResponse {
        /**
         * List of base image dependencies for a step.
         */
        baseImageDependencies: pulumi.Input<pulumi.Input<inputs.containerregistry.BaseImageDependencyResponse>[]>;
        /**
         * The token (git PAT or SAS token of storage account blob) associated with the context for a step.
         */
        contextAccessToken?: pulumi.Input<string>;
        /**
         * The URL(absolute or relative) of the source context for the task step.
         */
        contextPath?: pulumi.Input<string>;
        /**
         * The type of the step.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The properties of a timer trigger.
     */
    export interface TimerTrigger {
        /**
         * The name of the trigger.
         */
        name: pulumi.Input<string>;
        /**
         * The CRON expression for the task schedule
         */
        schedule: pulumi.Input<string>;
        /**
         * The current status of trigger.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The properties of a timer trigger.
     */
    export interface TimerTriggerResponse {
        /**
         * The name of the trigger.
         */
        name: pulumi.Input<string>;
        /**
         * The CRON expression for the task schedule
         */
        schedule: pulumi.Input<string>;
        /**
         * The current status of trigger.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The properties of a trigger.
     */
    export interface TriggerProperties {
        /**
         * The trigger based on base image dependencies.
         */
        baseImageTrigger?: pulumi.Input<inputs.containerregistry.BaseImageTrigger>;
        /**
         * The collection of triggers based on source code repository.
         */
        sourceTriggers?: pulumi.Input<pulumi.Input<inputs.containerregistry.SourceTrigger>[]>;
        /**
         * The collection of timer triggers.
         */
        timerTriggers?: pulumi.Input<pulumi.Input<inputs.containerregistry.TimerTrigger>[]>;
    }

    /**
     * The properties of a trigger.
     */
    export interface TriggerPropertiesResponse {
        /**
         * The trigger based on base image dependencies.
         */
        baseImageTrigger?: pulumi.Input<inputs.containerregistry.BaseImageTriggerResponse>;
        /**
         * The collection of triggers based on source code repository.
         */
        sourceTriggers?: pulumi.Input<pulumi.Input<inputs.containerregistry.SourceTriggerResponse>[]>;
        /**
         * The collection of timer triggers.
         */
        timerTriggers?: pulumi.Input<pulumi.Input<inputs.containerregistry.TimerTriggerResponse>[]>;
    }

    /**
     * The content trust policy for a container registry.
     */
    export interface TrustPolicy {
        /**
         * The value that indicates whether the policy is enabled or not.
         */
        status?: pulumi.Input<string>;
        /**
         * The type of trust policy.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The content trust policy for a container registry.
     */
    export interface TrustPolicyResponse {
        /**
         * The value that indicates whether the policy is enabled or not.
         */
        status?: pulumi.Input<string>;
        /**
         * The type of trust policy.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Virtual network rule.
     */
    export interface VirtualNetworkRule {
        /**
         * The action of virtual network rule.
         */
        action?: pulumi.Input<string>;
        /**
         * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
         */
        id: pulumi.Input<string>;
    }

    /**
     * Virtual network rule.
     */
    export interface VirtualNetworkRuleResponse {
        /**
         * The action of virtual network rule.
         */
        action?: pulumi.Input<string>;
        /**
         * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
         */
        id: pulumi.Input<string>;
    }

    /**
     * The parameters for creating the properties of a webhook.
     */
    export interface WebhookPropertiesCreateParameters {
        /**
         * The list of actions that trigger the webhook to post notifications.
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Custom headers that will be added to the webhook notifications.
         */
        customHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
         */
        scope?: pulumi.Input<string>;
        /**
         * The service URI for the webhook to post notifications.
         */
        serviceUri: pulumi.Input<string>;
        /**
         * The status of the webhook at the time the operation was called.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The properties of a webhook.
     */
    export interface WebhookPropertiesResponse {
        /**
         * The list of actions that trigger the webhook to post notifications.
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the webhook at the time the operation was called.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
         */
        scope?: pulumi.Input<string>;
        /**
         * The status of the webhook at the time the operation was called.
         */
        status?: pulumi.Input<string>;
    }
}

export namespace containerservice {
    /**
     * Settings for upgrading an agentpool
     */
    export interface AgentPoolUpgradeSettings {
        /**
         * Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
         */
        maxSurge?: pulumi.Input<string>;
    }

    /**
     * Settings for upgrading an agentpool
     */
    export interface AgentPoolUpgradeSettingsResponse {
        /**
         * Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
         */
        maxSurge?: pulumi.Input<string>;
    }

    /**
     * Profile for the container service agent pool.
     */
    export interface ContainerServiceAgentPoolProfile {
        /**
         * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
         */
        count?: pulumi.Input<number>;
        /**
         * DNS prefix to be used to create the FQDN for the agent pool.
         */
        dnsPrefix?: pulumi.Input<string>;
        /**
         * Unique name of the agent pool profile in the context of the subscription and resource group.
         */
        name: pulumi.Input<string>;
        /**
         * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
         */
        osDiskSizeGB?: pulumi.Input<inputs.containerservice.ContainerServiceOSDisk>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
         */
        ports?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
         */
        storageProfile?: pulumi.Input<string>;
        /**
         * Size of agent VMs.
         */
        vmSize: pulumi.Input<string>;
        /**
         * VNet SubnetID specifies the VNet's subnet identifier.
         */
        vnetSubnetID?: pulumi.Input<string>;
    }

    /**
     * Profile for the container service agent pool.
     */
    export interface ContainerServiceAgentPoolProfileResponse {
        /**
         * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
         */
        count?: pulumi.Input<number>;
        /**
         * DNS prefix to be used to create the FQDN for the agent pool.
         */
        dnsPrefix?: pulumi.Input<string>;
        /**
         * FQDN for the agent pool.
         */
        fqdn: pulumi.Input<string>;
        /**
         * Unique name of the agent pool profile in the context of the subscription and resource group.
         */
        name: pulumi.Input<string>;
        /**
         * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
         */
        osDiskSizeGB?: pulumi.Input<inputs.containerservice.ContainerServiceOSDiskResponse>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
         */
        ports?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
         */
        storageProfile?: pulumi.Input<string>;
        /**
         * Size of agent VMs.
         */
        vmSize: pulumi.Input<string>;
        /**
         * VNet SubnetID specifies the VNet's subnet identifier.
         */
        vnetSubnetID?: pulumi.Input<string>;
    }

    /**
     * Properties to configure a custom container service cluster.
     */
    export interface ContainerServiceCustomProfile {
        /**
         * The name of the custom orchestrator to use.
         */
        orchestrator: pulumi.Input<string>;
    }

    /**
     * Properties to configure a custom container service cluster.
     */
    export interface ContainerServiceCustomProfileResponse {
        /**
         * The name of the custom orchestrator to use.
         */
        orchestrator: pulumi.Input<string>;
    }

    /**
     * Profile for diagnostics on the container service cluster.
     */
    export interface ContainerServiceDiagnosticsProfile {
        /**
         * Profile for diagnostics on the container service VMs.
         */
        vmDiagnostics: pulumi.Input<inputs.containerservice.ContainerServiceVMDiagnostics>;
    }

    /**
     * Profile for diagnostics on the container service cluster.
     */
    export interface ContainerServiceDiagnosticsProfileResponse {
        /**
         * Profile for diagnostics on the container service VMs.
         */
        vmDiagnostics: pulumi.Input<inputs.containerservice.ContainerServiceVMDiagnosticsResponse>;
    }

    /**
     * Profile for Linux VMs in the container service cluster.
     */
    export interface ContainerServiceLinuxProfile {
        /**
         * The administrator username to use for Linux VMs.
         */
        adminUsername: pulumi.Input<string>;
        /**
         * SSH configuration for Linux-based VMs running on Azure.
         */
        ssh: pulumi.Input<inputs.containerservice.ContainerServiceSshConfiguration>;
    }

    /**
     * Profile for Linux VMs in the container service cluster.
     */
    export interface ContainerServiceLinuxProfileResponse {
        /**
         * The administrator username to use for Linux VMs.
         */
        adminUsername: pulumi.Input<string>;
        /**
         * SSH configuration for Linux-based VMs running on Azure.
         */
        ssh: pulumi.Input<inputs.containerservice.ContainerServiceSshConfigurationResponse>;
    }

    /**
     * Profile for the container service master.
     */
    export interface ContainerServiceMasterProfile {
        /**
         * Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
         */
        count?: pulumi.Input<number>;
        /**
         * DNS prefix to be used to create the FQDN for the master pool.
         */
        dnsPrefix: pulumi.Input<string>;
        /**
         * FirstConsecutiveStaticIP used to specify the first static ip of masters.
         */
        firstConsecutiveStaticIP?: pulumi.Input<string>;
        /**
         * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
         */
        osDiskSizeGB?: pulumi.Input<inputs.containerservice.ContainerServiceOSDisk>;
        /**
         * Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
         */
        storageProfile?: pulumi.Input<string>;
        /**
         * Size of agent VMs.
         */
        vmSize: pulumi.Input<string>;
        /**
         * VNet SubnetID specifies the VNet's subnet identifier.
         */
        vnetSubnetID?: pulumi.Input<string>;
    }

    /**
     * Profile for the container service master.
     */
    export interface ContainerServiceMasterProfileResponse {
        /**
         * Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
         */
        count?: pulumi.Input<number>;
        /**
         * DNS prefix to be used to create the FQDN for the master pool.
         */
        dnsPrefix: pulumi.Input<string>;
        /**
         * FirstConsecutiveStaticIP used to specify the first static ip of masters.
         */
        firstConsecutiveStaticIP?: pulumi.Input<string>;
        /**
         * FQDN for the master pool.
         */
        fqdn: pulumi.Input<string>;
        /**
         * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
         */
        osDiskSizeGB?: pulumi.Input<inputs.containerservice.ContainerServiceOSDiskResponse>;
        /**
         * Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
         */
        storageProfile?: pulumi.Input<string>;
        /**
         * Size of agent VMs.
         */
        vmSize: pulumi.Input<string>;
        /**
         * VNet SubnetID specifies the VNet's subnet identifier.
         */
        vnetSubnetID?: pulumi.Input<string>;
    }

    /**
     * Profile of network configuration.
     */
    export interface ContainerServiceNetworkProfile {
        /**
         * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
         */
        dnsServiceIP?: pulumi.Input<string>;
        /**
         * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
         */
        dockerBridgeCidr?: pulumi.Input<string>;
        /**
         * Profile of the cluster load balancer.
         */
        loadBalancerProfile?: pulumi.Input<inputs.containerservice.ManagedClusterLoadBalancerProfile>;
        /**
         * The load balancer sku for the managed cluster.
         */
        loadBalancerSku?: pulumi.Input<string>;
        /**
         * Network mode used for building Kubernetes network.
         */
        networkMode?: pulumi.Input<string>;
        /**
         * Network plugin used for building Kubernetes network.
         */
        networkPlugin?: pulumi.Input<string>;
        /**
         * Network policy used for building Kubernetes network.
         */
        networkPolicy?: pulumi.Input<string>;
        /**
         * The outbound (egress) routing method.
         */
        outboundType?: pulumi.Input<string>;
        /**
         * A CIDR notation IP range from which to assign pod IPs when kubenet is used.
         */
        podCidr?: pulumi.Input<string>;
        /**
         * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
         */
        serviceCidr?: pulumi.Input<string>;
    }

    /**
     * Profile of network configuration.
     */
    export interface ContainerServiceNetworkProfileResponse {
        /**
         * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
         */
        dnsServiceIP?: pulumi.Input<string>;
        /**
         * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
         */
        dockerBridgeCidr?: pulumi.Input<string>;
        /**
         * Profile of the cluster load balancer.
         */
        loadBalancerProfile?: pulumi.Input<inputs.containerservice.ManagedClusterLoadBalancerProfileResponse>;
        /**
         * The load balancer sku for the managed cluster.
         */
        loadBalancerSku?: pulumi.Input<string>;
        /**
         * Network mode used for building Kubernetes network.
         */
        networkMode?: pulumi.Input<string>;
        /**
         * Network plugin used for building Kubernetes network.
         */
        networkPlugin?: pulumi.Input<string>;
        /**
         * Network policy used for building Kubernetes network.
         */
        networkPolicy?: pulumi.Input<string>;
        /**
         * The outbound (egress) routing method.
         */
        outboundType?: pulumi.Input<string>;
        /**
         * A CIDR notation IP range from which to assign pod IPs when kubenet is used.
         */
        podCidr?: pulumi.Input<string>;
        /**
         * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
         */
        serviceCidr?: pulumi.Input<string>;
    }

    /**
     * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
     */
    export interface ContainerServiceOSDisk {
    }

    /**
     * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
     */
    export interface ContainerServiceOSDiskResponse {
    }

    /**
     * Profile for the container service orchestrator.
     */
    export interface ContainerServiceOrchestratorProfile {
        /**
         * The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
         */
        orchestratorType: pulumi.Input<string>;
        /**
         * The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
         */
        orchestratorVersion?: pulumi.Input<string>;
    }

    /**
     * Profile for the container service orchestrator.
     */
    export interface ContainerServiceOrchestratorProfileResponse {
        /**
         * The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
         */
        orchestratorType: pulumi.Input<string>;
        /**
         * The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
         */
        orchestratorVersion?: pulumi.Input<string>;
    }

    /**
     * Properties of the container service.
     */
    export interface ContainerServiceProperties {
        /**
         * Properties of the agent pool.
         */
        agentPoolProfiles?: pulumi.Input<pulumi.Input<inputs.containerservice.ContainerServiceAgentPoolProfile>[]>;
        /**
         * Properties to configure a custom container service cluster.
         */
        customProfile?: pulumi.Input<inputs.containerservice.ContainerServiceCustomProfile>;
        /**
         * Profile for diagnostics in the container service cluster.
         */
        diagnosticsProfile?: pulumi.Input<inputs.containerservice.ContainerServiceDiagnosticsProfile>;
        /**
         * Profile for Linux VMs in the container service cluster.
         */
        linuxProfile: pulumi.Input<inputs.containerservice.ContainerServiceLinuxProfile>;
        /**
         * Profile for the container service master.
         */
        masterProfile: pulumi.Input<inputs.containerservice.ContainerServiceMasterProfile>;
        /**
         * Profile for the container service orchestrator.
         */
        orchestratorProfile: pulumi.Input<inputs.containerservice.ContainerServiceOrchestratorProfile>;
        /**
         * Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
         */
        servicePrincipalProfile?: pulumi.Input<inputs.containerservice.ContainerServiceServicePrincipalProfile>;
        /**
         * Profile for Windows VMs in the container service cluster.
         */
        windowsProfile?: pulumi.Input<inputs.containerservice.ContainerServiceWindowsProfile>;
    }

    /**
     * Properties of the container service.
     */
    export interface ContainerServicePropertiesResponse {
        /**
         * Properties of the agent pool.
         */
        agentPoolProfiles?: pulumi.Input<pulumi.Input<inputs.containerservice.ContainerServiceAgentPoolProfileResponse>[]>;
        /**
         * Properties to configure a custom container service cluster.
         */
        customProfile?: pulumi.Input<inputs.containerservice.ContainerServiceCustomProfileResponse>;
        /**
         * Profile for diagnostics in the container service cluster.
         */
        diagnosticsProfile?: pulumi.Input<inputs.containerservice.ContainerServiceDiagnosticsProfileResponse>;
        /**
         * Profile for Linux VMs in the container service cluster.
         */
        linuxProfile: pulumi.Input<inputs.containerservice.ContainerServiceLinuxProfileResponse>;
        /**
         * Profile for the container service master.
         */
        masterProfile: pulumi.Input<inputs.containerservice.ContainerServiceMasterProfileResponse>;
        /**
         * Profile for the container service orchestrator.
         */
        orchestratorProfile: pulumi.Input<inputs.containerservice.ContainerServiceOrchestratorProfileResponse>;
        /**
         * The current deployment or provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
         */
        servicePrincipalProfile?: pulumi.Input<inputs.containerservice.ContainerServiceServicePrincipalProfileResponse>;
        /**
         * Profile for Windows VMs in the container service cluster.
         */
        windowsProfile?: pulumi.Input<inputs.containerservice.ContainerServiceWindowsProfileResponse>;
    }

    /**
     * Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.
     */
    export interface ContainerServiceServicePrincipalProfile {
        /**
         * The ID for the service principal.
         */
        clientId: pulumi.Input<string>;
        /**
         * Reference to a secret stored in Azure Key Vault.
         */
        keyVaultSecretRef?: pulumi.Input<inputs.containerservice.KeyVaultSecretRef>;
        /**
         * The secret password associated with the service principal in plain text.
         */
        secret?: pulumi.Input<string>;
    }

    /**
     * Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.
     */
    export interface ContainerServiceServicePrincipalProfileResponse {
        /**
         * The ID for the service principal.
         */
        clientId: pulumi.Input<string>;
        /**
         * Reference to a secret stored in Azure Key Vault.
         */
        keyVaultSecretRef?: pulumi.Input<inputs.containerservice.KeyVaultSecretRefResponse>;
        /**
         * The secret password associated with the service principal in plain text.
         */
        secret?: pulumi.Input<string>;
    }

    /**
     * SSH configuration for Linux-based VMs running on Azure.
     */
    export interface ContainerServiceSshConfiguration {
        /**
         * The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
         */
        publicKeys: pulumi.Input<pulumi.Input<inputs.containerservice.ContainerServiceSshPublicKey>[]>;
    }

    /**
     * SSH configuration for Linux-based VMs running on Azure.
     */
    export interface ContainerServiceSshConfigurationResponse {
        /**
         * The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
         */
        publicKeys: pulumi.Input<pulumi.Input<inputs.containerservice.ContainerServiceSshPublicKeyResponse>[]>;
    }

    /**
     * Contains information about SSH certificate public key data.
     */
    export interface ContainerServiceSshPublicKey {
        /**
         * Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
         */
        keyData: pulumi.Input<string>;
    }

    /**
     * Contains information about SSH certificate public key data.
     */
    export interface ContainerServiceSshPublicKeyResponse {
        /**
         * Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
         */
        keyData: pulumi.Input<string>;
    }

    /**
     * Profile for diagnostics on the container service VMs.
     */
    export interface ContainerServiceVMDiagnostics {
        /**
         * Whether the VM diagnostic agent is provisioned on the VM.
         */
        enabled: pulumi.Input<boolean>;
    }

    /**
     * Profile for diagnostics on the container service VMs.
     */
    export interface ContainerServiceVMDiagnosticsResponse {
        /**
         * Whether the VM diagnostic agent is provisioned on the VM.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * The URI of the storage account where diagnostics are stored.
         */
        storageUri: pulumi.Input<string>;
    }

    /**
     * Profile for Windows VMs in the container service cluster.
     */
    export interface ContainerServiceWindowsProfile {
        /**
         * The administrator password to use for Windows VMs.
         */
        adminPassword: pulumi.Input<string>;
        /**
         * The administrator username to use for Windows VMs.
         */
        adminUsername: pulumi.Input<string>;
    }

    /**
     * Profile for Windows VMs in the container service cluster.
     */
    export interface ContainerServiceWindowsProfileResponse {
        /**
         * The administrator password to use for Windows VMs.
         */
        adminPassword: pulumi.Input<string>;
        /**
         * The administrator username to use for Windows VMs.
         */
        adminUsername: pulumi.Input<string>;
    }

    /**
     * Reference to a secret stored in Azure Key Vault.
     */
    export interface KeyVaultSecretRef {
        /**
         * The secret name.
         */
        secretName: pulumi.Input<string>;
        /**
         * Key vault identifier.
         */
        vaultID: pulumi.Input<string>;
        /**
         * The secret version.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Reference to a secret stored in Azure Key Vault.
     */
    export interface KeyVaultSecretRefResponse {
        /**
         * The secret name.
         */
        secretName: pulumi.Input<string>;
        /**
         * Key vault identifier.
         */
        vaultID: pulumi.Input<string>;
        /**
         * The secret version.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * AADProfile specifies attributes for Azure Active Directory integration.
     */
    export interface ManagedClusterAADProfile {
        /**
         * AAD group object IDs that will have admin role of the cluster.
         */
        adminGroupObjectIDs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The client AAD application ID.
         */
        clientAppID?: pulumi.Input<string>;
        /**
         * Whether to enable Azure RBAC for Kubernetes authorization.
         */
        enableAzureRBAC?: pulumi.Input<boolean>;
        /**
         * Whether to enable managed AAD.
         */
        managed?: pulumi.Input<boolean>;
        /**
         * The server AAD application ID.
         */
        serverAppID?: pulumi.Input<string>;
        /**
         * The server AAD application secret.
         */
        serverAppSecret?: pulumi.Input<string>;
        /**
         * The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
         */
        tenantID?: pulumi.Input<string>;
    }

    /**
     * AADProfile specifies attributes for Azure Active Directory integration.
     */
    export interface ManagedClusterAADProfileResponse {
        /**
         * AAD group object IDs that will have admin role of the cluster.
         */
        adminGroupObjectIDs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The client AAD application ID.
         */
        clientAppID?: pulumi.Input<string>;
        /**
         * Whether to enable Azure RBAC for Kubernetes authorization.
         */
        enableAzureRBAC?: pulumi.Input<boolean>;
        /**
         * Whether to enable managed AAD.
         */
        managed?: pulumi.Input<boolean>;
        /**
         * The server AAD application ID.
         */
        serverAppID?: pulumi.Input<string>;
        /**
         * The server AAD application secret.
         */
        serverAppSecret?: pulumi.Input<string>;
        /**
         * The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
         */
        tenantID?: pulumi.Input<string>;
    }

    /**
     * Access profile for managed cluster API server.
     */
    export interface ManagedClusterAPIServerAccessProfile {
        /**
         * Authorized IP Ranges to kubernetes API server.
         */
        authorizedIPRanges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether to create the cluster as a private cluster or not.
         */
        enablePrivateCluster?: pulumi.Input<boolean>;
    }

    /**
     * Access profile for managed cluster API server.
     */
    export interface ManagedClusterAPIServerAccessProfileResponse {
        /**
         * Authorized IP Ranges to kubernetes API server.
         */
        authorizedIPRanges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether to create the cluster as a private cluster or not.
         */
        enablePrivateCluster?: pulumi.Input<boolean>;
    }

    /**
     * Profile for the container service agent pool.
     */
    export interface ManagedClusterAgentPoolProfile {
        /**
         * Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
         */
        availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
         */
        count?: pulumi.Input<number>;
        /**
         * Whether to enable auto-scaler
         */
        enableAutoScaling?: pulumi.Input<boolean>;
        /**
         * Enable public IP for nodes
         */
        enableNodePublicIP?: pulumi.Input<boolean>;
        /**
         * Maximum number of nodes for auto-scaling
         */
        maxCount?: pulumi.Input<number>;
        /**
         * Maximum number of pods that can run on a node.
         */
        maxPods?: pulumi.Input<number>;
        /**
         * Minimum number of nodes for auto-scaling
         */
        minCount?: pulumi.Input<number>;
        /**
         * AgentPoolMode represents mode of an agent pool
         */
        mode?: pulumi.Input<string>;
        /**
         * Unique name of the agent pool profile in the context of the subscription and resource group.
         */
        name: pulumi.Input<string>;
        /**
         * Version of node image
         */
        nodeImageVersion?: pulumi.Input<string>;
        /**
         * Agent pool node labels to be persisted across all nodes in agent pool.
         */
        nodeLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
         */
        nodeTaints?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Version of orchestrator specified when creating the managed cluster.
         */
        orchestratorVersion?: pulumi.Input<string>;
        /**
         * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
         */
        osDiskSizeGB?: pulumi.Input<inputs.containerservice.ContainerServiceOSDisk>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * The ID for Proximity Placement Group.
         */
        proximityPlacementGroupID?: pulumi.Input<string>;
        /**
         * ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
         */
        scaleSetEvictionPolicy?: pulumi.Input<string>;
        /**
         * ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
         */
        scaleSetPriority?: pulumi.Input<string>;
        /**
         * SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
         */
        spotMaxPrice?: pulumi.Input<inputs.containerservice.SpotMaxPrice>;
        /**
         * Agent pool tags to be persisted on the agent pool virtual machine scale set.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * AgentPoolType represents types of an agent pool
         */
        type?: pulumi.Input<string>;
        /**
         * Settings for upgrading the agentpool
         */
        upgradeSettings?: pulumi.Input<inputs.containerservice.AgentPoolUpgradeSettings>;
        /**
         * Size of agent VMs.
         */
        vmSize?: pulumi.Input<string>;
        /**
         * VNet SubnetID specifies the VNet's subnet identifier.
         */
        vnetSubnetID?: pulumi.Input<string>;
    }

    /**
     * Properties for the container service agent pool profile.
     */
    export interface ManagedClusterAgentPoolProfileProperties {
        /**
         * Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
         */
        availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
         */
        count?: pulumi.Input<number>;
        /**
         * Whether to enable auto-scaler
         */
        enableAutoScaling?: pulumi.Input<boolean>;
        /**
         * Enable public IP for nodes
         */
        enableNodePublicIP?: pulumi.Input<boolean>;
        /**
         * Maximum number of nodes for auto-scaling
         */
        maxCount?: pulumi.Input<number>;
        /**
         * Maximum number of pods that can run on a node.
         */
        maxPods?: pulumi.Input<number>;
        /**
         * Minimum number of nodes for auto-scaling
         */
        minCount?: pulumi.Input<number>;
        /**
         * AgentPoolMode represents mode of an agent pool
         */
        mode?: pulumi.Input<string>;
        /**
         * Version of node image
         */
        nodeImageVersion?: pulumi.Input<string>;
        /**
         * Agent pool node labels to be persisted across all nodes in agent pool.
         */
        nodeLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
         */
        nodeTaints?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Version of orchestrator specified when creating the managed cluster.
         */
        orchestratorVersion?: pulumi.Input<string>;
        /**
         * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
         */
        osDiskSizeGB?: pulumi.Input<inputs.containerservice.ContainerServiceOSDisk>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * The ID for Proximity Placement Group.
         */
        proximityPlacementGroupID?: pulumi.Input<string>;
        /**
         * ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
         */
        scaleSetEvictionPolicy?: pulumi.Input<string>;
        /**
         * ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
         */
        scaleSetPriority?: pulumi.Input<string>;
        /**
         * SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
         */
        spotMaxPrice?: pulumi.Input<inputs.containerservice.SpotMaxPrice>;
        /**
         * Agent pool tags to be persisted on the agent pool virtual machine scale set.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * AgentPoolType represents types of an agent pool
         */
        type?: pulumi.Input<string>;
        /**
         * Settings for upgrading the agentpool
         */
        upgradeSettings?: pulumi.Input<inputs.containerservice.AgentPoolUpgradeSettings>;
        /**
         * Size of agent VMs.
         */
        vmSize?: pulumi.Input<string>;
        /**
         * VNet SubnetID specifies the VNet's subnet identifier.
         */
        vnetSubnetID?: pulumi.Input<string>;
    }

    /**
     * Properties for the container service agent pool profile.
     */
    export interface ManagedClusterAgentPoolProfilePropertiesResponse {
        /**
         * Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
         */
        availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
         */
        count?: pulumi.Input<number>;
        /**
         * Whether to enable auto-scaler
         */
        enableAutoScaling?: pulumi.Input<boolean>;
        /**
         * Enable public IP for nodes
         */
        enableNodePublicIP?: pulumi.Input<boolean>;
        /**
         * Maximum number of nodes for auto-scaling
         */
        maxCount?: pulumi.Input<number>;
        /**
         * Maximum number of pods that can run on a node.
         */
        maxPods?: pulumi.Input<number>;
        /**
         * Minimum number of nodes for auto-scaling
         */
        minCount?: pulumi.Input<number>;
        /**
         * AgentPoolMode represents mode of an agent pool
         */
        mode?: pulumi.Input<string>;
        /**
         * Version of node image
         */
        nodeImageVersion?: pulumi.Input<string>;
        /**
         * Agent pool node labels to be persisted across all nodes in agent pool.
         */
        nodeLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
         */
        nodeTaints?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Version of orchestrator specified when creating the managed cluster.
         */
        orchestratorVersion?: pulumi.Input<string>;
        /**
         * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
         */
        osDiskSizeGB?: pulumi.Input<inputs.containerservice.ContainerServiceOSDiskResponse>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * The current deployment or provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The ID for Proximity Placement Group.
         */
        proximityPlacementGroupID?: pulumi.Input<string>;
        /**
         * ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
         */
        scaleSetEvictionPolicy?: pulumi.Input<string>;
        /**
         * ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
         */
        scaleSetPriority?: pulumi.Input<string>;
        /**
         * SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
         */
        spotMaxPrice?: pulumi.Input<inputs.containerservice.SpotMaxPriceResponse>;
        /**
         * Agent pool tags to be persisted on the agent pool virtual machine scale set.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * AgentPoolType represents types of an agent pool
         */
        type?: pulumi.Input<string>;
        /**
         * Settings for upgrading the agentpool
         */
        upgradeSettings?: pulumi.Input<inputs.containerservice.AgentPoolUpgradeSettingsResponse>;
        /**
         * Size of agent VMs.
         */
        vmSize?: pulumi.Input<string>;
        /**
         * VNet SubnetID specifies the VNet's subnet identifier.
         */
        vnetSubnetID?: pulumi.Input<string>;
    }

    /**
     * Profile for the container service agent pool.
     */
    export interface ManagedClusterAgentPoolProfileResponse {
        /**
         * Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
         */
        availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
         */
        count?: pulumi.Input<number>;
        /**
         * Whether to enable auto-scaler
         */
        enableAutoScaling?: pulumi.Input<boolean>;
        /**
         * Enable public IP for nodes
         */
        enableNodePublicIP?: pulumi.Input<boolean>;
        /**
         * Maximum number of nodes for auto-scaling
         */
        maxCount?: pulumi.Input<number>;
        /**
         * Maximum number of pods that can run on a node.
         */
        maxPods?: pulumi.Input<number>;
        /**
         * Minimum number of nodes for auto-scaling
         */
        minCount?: pulumi.Input<number>;
        /**
         * AgentPoolMode represents mode of an agent pool
         */
        mode?: pulumi.Input<string>;
        /**
         * Unique name of the agent pool profile in the context of the subscription and resource group.
         */
        name: pulumi.Input<string>;
        /**
         * Version of node image
         */
        nodeImageVersion?: pulumi.Input<string>;
        /**
         * Agent pool node labels to be persisted across all nodes in agent pool.
         */
        nodeLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
         */
        nodeTaints?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Version of orchestrator specified when creating the managed cluster.
         */
        orchestratorVersion?: pulumi.Input<string>;
        /**
         * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
         */
        osDiskSizeGB?: pulumi.Input<inputs.containerservice.ContainerServiceOSDiskResponse>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * The current deployment or provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The ID for Proximity Placement Group.
         */
        proximityPlacementGroupID?: pulumi.Input<string>;
        /**
         * ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
         */
        scaleSetEvictionPolicy?: pulumi.Input<string>;
        /**
         * ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
         */
        scaleSetPriority?: pulumi.Input<string>;
        /**
         * SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
         */
        spotMaxPrice?: pulumi.Input<inputs.containerservice.SpotMaxPriceResponse>;
        /**
         * Agent pool tags to be persisted on the agent pool virtual machine scale set.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * AgentPoolType represents types of an agent pool
         */
        type?: pulumi.Input<string>;
        /**
         * Settings for upgrading the agentpool
         */
        upgradeSettings?: pulumi.Input<inputs.containerservice.AgentPoolUpgradeSettingsResponse>;
        /**
         * Size of agent VMs.
         */
        vmSize?: pulumi.Input<string>;
        /**
         * VNet SubnetID specifies the VNet's subnet identifier.
         */
        vnetSubnetID?: pulumi.Input<string>;
    }

    /**
     * Identity for the managed cluster.
     */
    export interface ManagedClusterIdentity {
        /**
         * The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
         */
        type?: pulumi.Input<string>;
        /**
         * The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the managed cluster.
     */
    export interface ManagedClusterIdentityResponse {
        /**
         * The principal id of the system assigned identity which is used by master components.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id of the system assigned identity which is used by master components.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
         */
        type?: pulumi.Input<string>;
        /**
         * The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Profile of the managed cluster load balancer.
     */
    export interface ManagedClusterLoadBalancerProfile {
        /**
         * Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
         */
        allocatedOutboundPorts?: pulumi.Input<number>;
        /**
         * The effective outbound IP resources of the cluster load balancer.
         */
        effectiveOutboundIPs?: pulumi.Input<pulumi.Input<inputs.containerservice.ResourceReference>[]>;
        /**
         * Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * Desired managed outbound IPs for the cluster load balancer.
         */
        managedOutboundIPs?: pulumi.Input<inputs.containerservice.ManagedClusterLoadBalancerProfileProperties>;
        /**
         * Desired outbound IP Prefix resources for the cluster load balancer.
         */
        outboundIPPrefixes?: pulumi.Input<inputs.containerservice.ManagedClusterLoadBalancerProfileProperties>;
        /**
         * Desired outbound IP resources for the cluster load balancer.
         */
        outboundIPs?: pulumi.Input<inputs.containerservice.ManagedClusterLoadBalancerProfileProperties>;
    }

    /**
     * Desired managed outbound IPs for the cluster load balancer.
     */
    export interface ManagedClusterLoadBalancerProfileProperties {
        /**
         * Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
         */
        count?: pulumi.Input<number>;
    }

    /**
     * Profile of the managed cluster load balancer.
     */
    export interface ManagedClusterLoadBalancerProfileResponse {
        /**
         * Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
         */
        allocatedOutboundPorts?: pulumi.Input<number>;
        /**
         * The effective outbound IP resources of the cluster load balancer.
         */
        effectiveOutboundIPs?: pulumi.Input<pulumi.Input<inputs.containerservice.ResourceReferenceResponse>[]>;
        /**
         * Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * Desired managed outbound IPs for the cluster load balancer.
         */
        managedOutboundIPs?: pulumi.Input<inputs.containerservice.ManagedClusterLoadBalancerProfileResponseProperties>;
        /**
         * Desired outbound IP Prefix resources for the cluster load balancer.
         */
        outboundIPPrefixes?: pulumi.Input<inputs.containerservice.ManagedClusterLoadBalancerProfileResponseProperties>;
        /**
         * Desired outbound IP resources for the cluster load balancer.
         */
        outboundIPs?: pulumi.Input<inputs.containerservice.ManagedClusterLoadBalancerProfileResponseProperties>;
    }

    /**
     * Desired managed outbound IPs for the cluster load balancer.
     */
    export interface ManagedClusterLoadBalancerProfileResponseProperties {
        /**
         * Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
         */
        count?: pulumi.Input<number>;
    }

    /**
     * Properties of the managed cluster.
     */
    export interface ManagedClusterProperties {
        /**
         * Profile of Azure Active Directory configuration.
         */
        aadProfile?: pulumi.Input<inputs.containerservice.ManagedClusterAADProfile>;
        /**
         * Profile of managed cluster add-on.
         */
        addonProfiles?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Properties of the agent pool.
         */
        agentPoolProfiles?: pulumi.Input<pulumi.Input<inputs.containerservice.ManagedClusterAgentPoolProfile>[]>;
        /**
         * Access profile for managed cluster API server.
         */
        apiServerAccessProfile?: pulumi.Input<inputs.containerservice.ManagedClusterAPIServerAccessProfile>;
        /**
         * Parameters to be applied to the cluster-autoscaler when enabled
         */
        autoScalerProfile?: pulumi.Input<inputs.containerservice.ManagedClusterPropertiesProperties>;
        /**
         * ResourceId of the disk encryption set to use for enabling encryption at rest.
         */
        diskEncryptionSetID?: pulumi.Input<string>;
        /**
         * DNS prefix specified when creating the managed cluster.
         */
        dnsPrefix?: pulumi.Input<string>;
        /**
         * (PREVIEW) Whether to enable Kubernetes Pod security policy.
         */
        enablePodSecurityPolicy?: pulumi.Input<boolean>;
        /**
         * Whether to enable Kubernetes Role-Based Access Control.
         */
        enableRBAC?: pulumi.Input<boolean>;
        /**
         * Identities associated with the cluster.
         */
        identityProfile?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Version of Kubernetes specified when creating the managed cluster.
         */
        kubernetesVersion?: pulumi.Input<string>;
        /**
         * Profile for Linux VMs in the container service cluster.
         */
        linuxProfile?: pulumi.Input<inputs.containerservice.ContainerServiceLinuxProfile>;
        /**
         * Profile of network configuration.
         */
        networkProfile?: pulumi.Input<inputs.containerservice.ContainerServiceNetworkProfile>;
        /**
         * Name of the resource group containing agent pool nodes.
         */
        nodeResourceGroup?: pulumi.Input<string>;
        /**
         * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
         */
        servicePrincipalProfile?: pulumi.Input<inputs.containerservice.ManagedClusterServicePrincipalProfile>;
        /**
         * Profile for Windows VMs in the container service cluster.
         */
        windowsProfile?: pulumi.Input<inputs.containerservice.ManagedClusterWindowsProfile>;
    }

    /**
     * Parameters to be applied to the cluster-autoscaler when enabled
     */
    export interface ManagedClusterPropertiesProperties {
    }

    /**
     * Properties of the managed cluster.
     */
    export interface ManagedClusterPropertiesResponse {
        /**
         * Profile of Azure Active Directory configuration.
         */
        aadProfile?: pulumi.Input<inputs.containerservice.ManagedClusterAADProfileResponse>;
        /**
         * Profile of managed cluster add-on.
         */
        addonProfiles?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Properties of the agent pool.
         */
        agentPoolProfiles?: pulumi.Input<pulumi.Input<inputs.containerservice.ManagedClusterAgentPoolProfileResponse>[]>;
        /**
         * Access profile for managed cluster API server.
         */
        apiServerAccessProfile?: pulumi.Input<inputs.containerservice.ManagedClusterAPIServerAccessProfileResponse>;
        /**
         * Parameters to be applied to the cluster-autoscaler when enabled
         */
        autoScalerProfile?: pulumi.Input<inputs.containerservice.ManagedClusterPropertiesResponseProperties>;
        /**
         * ResourceId of the disk encryption set to use for enabling encryption at rest.
         */
        diskEncryptionSetID?: pulumi.Input<string>;
        /**
         * DNS prefix specified when creating the managed cluster.
         */
        dnsPrefix?: pulumi.Input<string>;
        /**
         * (PREVIEW) Whether to enable Kubernetes Pod security policy.
         */
        enablePodSecurityPolicy?: pulumi.Input<boolean>;
        /**
         * Whether to enable Kubernetes Role-Based Access Control.
         */
        enableRBAC?: pulumi.Input<boolean>;
        /**
         * FQDN for the master pool.
         */
        fqdn: pulumi.Input<string>;
        /**
         * Identities associated with the cluster.
         */
        identityProfile?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Version of Kubernetes specified when creating the managed cluster.
         */
        kubernetesVersion?: pulumi.Input<string>;
        /**
         * Profile for Linux VMs in the container service cluster.
         */
        linuxProfile?: pulumi.Input<inputs.containerservice.ContainerServiceLinuxProfileResponse>;
        /**
         * The max number of agent pools for the managed cluster.
         */
        maxAgentPools: pulumi.Input<number>;
        /**
         * Profile of network configuration.
         */
        networkProfile?: pulumi.Input<inputs.containerservice.ContainerServiceNetworkProfileResponse>;
        /**
         * Name of the resource group containing agent pool nodes.
         */
        nodeResourceGroup?: pulumi.Input<string>;
        /**
         * FQDN of private cluster.
         */
        privateFQDN: pulumi.Input<string>;
        /**
         * The current deployment or provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
         */
        servicePrincipalProfile?: pulumi.Input<inputs.containerservice.ManagedClusterServicePrincipalProfileResponse>;
        /**
         * Profile for Windows VMs in the container service cluster.
         */
        windowsProfile?: pulumi.Input<inputs.containerservice.ManagedClusterWindowsProfileResponse>;
    }

    /**
     * Parameters to be applied to the cluster-autoscaler when enabled
     */
    export interface ManagedClusterPropertiesResponseProperties {
    }

    export interface ManagedClusterSKU {
        /**
         * Name of a managed cluster SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of a managed cluster SKU.
         */
        tier?: pulumi.Input<string>;
    }

    export interface ManagedClusterSKUResponse {
        /**
         * Name of a managed cluster SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of a managed cluster SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     */
    export interface ManagedClusterServicePrincipalProfile {
        /**
         * The ID for the service principal.
         */
        clientId: pulumi.Input<string>;
        /**
         * The secret password associated with the service principal in plain text.
         */
        secret?: pulumi.Input<string>;
    }

    /**
     * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     */
    export interface ManagedClusterServicePrincipalProfileResponse {
        /**
         * The ID for the service principal.
         */
        clientId: pulumi.Input<string>;
        /**
         * The secret password associated with the service principal in plain text.
         */
        secret?: pulumi.Input<string>;
    }

    /**
     * Profile for Windows VMs in the container service cluster.
     */
    export interface ManagedClusterWindowsProfile {
        /**
         * The administrator password to use for Windows VMs.
         */
        adminPassword?: pulumi.Input<string>;
        /**
         * The administrator username to use for Windows VMs.
         */
        adminUsername: pulumi.Input<string>;
    }

    /**
     * Profile for Windows VMs in the container service cluster.
     */
    export interface ManagedClusterWindowsProfileResponse {
        /**
         * The administrator password to use for Windows VMs.
         */
        adminPassword?: pulumi.Input<string>;
        /**
         * The administrator username to use for Windows VMs.
         */
        adminUsername: pulumi.Input<string>;
    }

    /**
     * Represents the OpenShift networking configuration
     */
    export interface NetworkProfile {
        /**
         * CIDR of the Vnet to peer.
         */
        peerVnetId?: pulumi.Input<string>;
        /**
         * CIDR for the OpenShift Vnet.
         */
        vnetCidr?: pulumi.Input<string>;
        /**
         * ID of the Vnet created for OSA cluster.
         */
        vnetId?: pulumi.Input<string>;
    }

    /**
     * Represents the OpenShift networking configuration
     */
    export interface NetworkProfileResponse {
        /**
         * CIDR of the Vnet to peer.
         */
        peerVnetId?: pulumi.Input<string>;
        /**
         * CIDR for the OpenShift Vnet.
         */
        vnetCidr?: pulumi.Input<string>;
        /**
         * ID of the Vnet created for OSA cluster.
         */
        vnetId?: pulumi.Input<string>;
    }

    /**
     * Defines the configuration of the OpenShift cluster VMs.
     */
    export interface OpenShiftManagedClusterAgentPoolProfile {
        /**
         * Number of agents (VMs) to host docker containers.
         */
        count: pulumi.Input<number>;
        /**
         * Unique name of the pool profile in the context of the subscription and resource group.
         */
        name: pulumi.Input<string>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * Define the role of the AgentPoolProfile.
         */
        role?: pulumi.Input<string>;
        /**
         * Subnet CIDR for the peering.
         */
        subnetCidr?: pulumi.Input<string>;
        /**
         * Size of agent VMs.
         */
        vmSize: pulumi.Input<string>;
    }

    /**
     * Defines the configuration of the OpenShift cluster VMs.
     */
    export interface OpenShiftManagedClusterAgentPoolProfileResponse {
        /**
         * Number of agents (VMs) to host docker containers.
         */
        count: pulumi.Input<number>;
        /**
         * Unique name of the pool profile in the context of the subscription and resource group.
         */
        name: pulumi.Input<string>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * Define the role of the AgentPoolProfile.
         */
        role?: pulumi.Input<string>;
        /**
         * Subnet CIDR for the peering.
         */
        subnetCidr?: pulumi.Input<string>;
        /**
         * Size of agent VMs.
         */
        vmSize: pulumi.Input<string>;
    }

    /**
     * Defines all possible authentication profiles for the OpenShift cluster.
     */
    export interface OpenShiftManagedClusterAuthProfile {
        /**
         * Type of authentication profile to use.
         */
        identityProviders?: pulumi.Input<pulumi.Input<inputs.containerservice.OpenShiftManagedClusterIdentityProvider>[]>;
    }

    /**
     * Defines all possible authentication profiles for the OpenShift cluster.
     */
    export interface OpenShiftManagedClusterAuthProfileResponse {
        /**
         * Type of authentication profile to use.
         */
        identityProviders?: pulumi.Input<pulumi.Input<inputs.containerservice.OpenShiftManagedClusterIdentityProviderResponse>[]>;
    }

    /**
     * Structure for any Identity provider.
     */
    export interface OpenShiftManagedClusterBaseIdentityProvider {
        /**
         * The kind of the provider.
         */
        kind: pulumi.Input<string>;
    }

    /**
     * Structure for any Identity provider.
     */
    export interface OpenShiftManagedClusterBaseIdentityProviderResponse {
        /**
         * The kind of the provider.
         */
        kind: pulumi.Input<string>;
    }

    /**
     * Defines the configuration of the identity providers to be used in the OpenShift cluster.
     */
    export interface OpenShiftManagedClusterIdentityProvider {
        /**
         * Name of the provider.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration of the provider.
         */
        provider?: pulumi.Input<inputs.containerservice.OpenShiftManagedClusterBaseIdentityProvider>;
    }

    /**
     * Defines the configuration of the identity providers to be used in the OpenShift cluster.
     */
    export interface OpenShiftManagedClusterIdentityProviderResponse {
        /**
         * Name of the provider.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration of the provider.
         */
        provider?: pulumi.Input<inputs.containerservice.OpenShiftManagedClusterBaseIdentityProviderResponse>;
    }

    /**
     * OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
     */
    export interface OpenShiftManagedClusterMasterPoolProfile {
        /**
         * Number of masters (VMs) to host docker containers. The default value is 3.
         */
        count: pulumi.Input<number>;
        /**
         * Unique name of the master pool profile in the context of the subscription and resource group.
         */
        name?: pulumi.Input<string>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * Subnet CIDR for the peering.
         */
        subnetCidr?: pulumi.Input<string>;
        /**
         * Size of agent VMs.
         */
        vmSize: pulumi.Input<string>;
    }

    /**
     * OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
     */
    export interface OpenShiftManagedClusterMasterPoolProfileResponse {
        /**
         * Number of masters (VMs) to host docker containers. The default value is 3.
         */
        count: pulumi.Input<number>;
        /**
         * Unique name of the master pool profile in the context of the subscription and resource group.
         */
        name?: pulumi.Input<string>;
        /**
         * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * Subnet CIDR for the peering.
         */
        subnetCidr?: pulumi.Input<string>;
        /**
         * Size of agent VMs.
         */
        vmSize: pulumi.Input<string>;
    }

    /**
     * Properties of the OpenShift managed cluster.
     */
    export interface OpenShiftManagedClusterProperties {
        /**
         * Configuration of OpenShift cluster VMs.
         */
        agentPoolProfiles?: pulumi.Input<pulumi.Input<inputs.containerservice.OpenShiftManagedClusterAgentPoolProfile>[]>;
        /**
         * Configures OpenShift authentication.
         */
        authProfile?: pulumi.Input<inputs.containerservice.OpenShiftManagedClusterAuthProfile>;
        /**
         * Configuration for OpenShift master VMs.
         */
        masterPoolProfile?: pulumi.Input<inputs.containerservice.OpenShiftManagedClusterMasterPoolProfile>;
        /**
         * Configuration for OpenShift networking.
         */
        networkProfile?: pulumi.Input<inputs.containerservice.NetworkProfile>;
        /**
         * Version of OpenShift specified when creating the cluster.
         */
        openShiftVersion: pulumi.Input<string>;
        /**
         * Configuration for OpenShift router(s).
         */
        routerProfiles?: pulumi.Input<pulumi.Input<inputs.containerservice.OpenShiftRouterProfile>[]>;
    }

    /**
     * Properties of the OpenShift managed cluster.
     */
    export interface OpenShiftManagedClusterPropertiesResponse {
        /**
         * Configuration of OpenShift cluster VMs.
         */
        agentPoolProfiles?: pulumi.Input<pulumi.Input<inputs.containerservice.OpenShiftManagedClusterAgentPoolProfileResponse>[]>;
        /**
         * Configures OpenShift authentication.
         */
        authProfile?: pulumi.Input<inputs.containerservice.OpenShiftManagedClusterAuthProfileResponse>;
        /**
         * Version of OpenShift specified when creating the cluster.
         */
        clusterVersion: pulumi.Input<string>;
        /**
         * Service generated FQDN for OpenShift API server loadbalancer internal hostname.
         */
        fqdn: pulumi.Input<string>;
        /**
         * Configuration for OpenShift master VMs.
         */
        masterPoolProfile?: pulumi.Input<inputs.containerservice.OpenShiftManagedClusterMasterPoolProfileResponse>;
        /**
         * Configuration for OpenShift networking.
         */
        networkProfile?: pulumi.Input<inputs.containerservice.NetworkProfileResponse>;
        /**
         * Version of OpenShift specified when creating the cluster.
         */
        openShiftVersion: pulumi.Input<string>;
        /**
         * The current deployment or provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Service generated FQDN for OpenShift API server.
         */
        publicHostname: pulumi.Input<string>;
        /**
         * Configuration for OpenShift router(s).
         */
        routerProfiles?: pulumi.Input<pulumi.Input<inputs.containerservice.OpenShiftRouterProfileResponse>[]>;
    }

    /**
     * Represents an OpenShift router
     */
    export interface OpenShiftRouterProfile {
        /**
         * Name of the router profile.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Represents an OpenShift router
     */
    export interface OpenShiftRouterProfileResponse {
        /**
         * Auto-allocated FQDN for the OpenShift router.
         */
        fqdn: pulumi.Input<string>;
        /**
         * Name of the router profile.
         */
        name?: pulumi.Input<string>;
        /**
         * DNS subdomain for OpenShift router.
         */
        publicSubdomain: pulumi.Input<string>;
    }

    /**
     * Private endpoint which a connection belongs to.
     */
    export interface PrivateEndpoint {
        /**
         * The resource Id for private endpoint
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * The resource of private endpoint.
         */
        privateEndpoint?: pulumi.Input<inputs.containerservice.PrivateEndpoint>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.containerservice.PrivateLinkServiceConnectionState>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The resource of private endpoint.
         */
        privateEndpoint?: pulumi.Input<inputs.containerservice.PrivateEndpointResponse>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.containerservice.PrivateLinkServiceConnectionStateResponse>;
        /**
         * The current provisioning state.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Private endpoint which a connection belongs to.
     */
    export interface PrivateEndpointResponse {
        /**
         * The resource Id for private endpoint
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The state of a private link service connection.
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * The private link service connection description.
         */
        description?: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The state of a private link service connection.
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * The private link service connection description.
         */
        description?: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
     */
    export interface PurchasePlan {
        /**
         * The plan ID.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
         */
        product?: pulumi.Input<string>;
        /**
         * The promotion code.
         */
        promotionCode?: pulumi.Input<string>;
        /**
         * The plan ID.
         */
        publisher?: pulumi.Input<string>;
    }

    /**
     * Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
     */
    export interface PurchasePlanResponse {
        /**
         * The plan ID.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
         */
        product?: pulumi.Input<string>;
        /**
         * The promotion code.
         */
        promotionCode?: pulumi.Input<string>;
        /**
         * The plan ID.
         */
        publisher?: pulumi.Input<string>;
    }

    /**
     * A reference to an Azure resource.
     */
    export interface ResourceReference {
        /**
         * The fully qualified Azure resource id.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * A reference to an Azure resource.
     */
    export interface ResourceReferenceResponse {
        /**
         * The fully qualified Azure resource id.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
     */
    export interface SpotMaxPrice {
    }

    /**
     * SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
     */
    export interface SpotMaxPriceResponse {
    }
}

export namespace core {
    /**
     * The resource group properties.
     */
    export interface ResourceGroupProperties {
    }

    /**
     * The resource group properties.
     */
    export interface ResourceGroupPropertiesResponse {
        /**
         * The provisioning state. 
         */
        provisioningState: pulumi.Input<string>;
    }
}

export namespace customerinsights {
    /**
     * The AssignmentPrincipal
     */
    export interface AssignmentPrincipal {
        /**
         * The principal id being assigned to.
         */
        principalId: pulumi.Input<string>;
        /**
         * Other metadata for the principal.
         */
        principalMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The Type of the principal ID.
         */
        principalType: pulumi.Input<string>;
    }

    /**
     * The AssignmentPrincipal
     */
    export interface AssignmentPrincipalResponse {
        /**
         * The principal id being assigned to.
         */
        principalId: pulumi.Input<string>;
        /**
         * Other metadata for the principal.
         */
        principalMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The Type of the principal ID.
         */
        principalType: pulumi.Input<string>;
    }

    /**
     * Properties of connector.
     */
    export interface Connector {
        /**
         * Name of the connector.
         */
        connectorName?: pulumi.Input<string>;
        /**
         * The connector properties.
         */
        connectorProperties: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Type of connector.
         */
        connectorType: pulumi.Input<string>;
        /**
         * Description of the connector.
         */
        description?: pulumi.Input<string>;
        /**
         * Display name of the connector.
         */
        displayName?: pulumi.Input<string>;
        /**
         * If this is an internal connector.
         */
        isInternal?: pulumi.Input<boolean>;
    }

    /**
     * The connector mapping definition.
     */
    export interface ConnectorMapping {
        /**
         * Type of connector.
         */
        connectorType?: pulumi.Input<string>;
        /**
         * The description of the connector mapping.
         */
        description?: pulumi.Input<string>;
        /**
         * Display name for the connector mapping.
         */
        displayName?: pulumi.Input<string>;
        /**
         * Defines which entity type the file should map to.
         */
        entityType: pulumi.Input<string>;
        /**
         * The mapping entity name.
         */
        entityTypeName: pulumi.Input<string>;
        /**
         * The properties of the mapping.
         */
        mappingProperties: pulumi.Input<inputs.customerinsights.ConnectorMappingProperties>;
    }

    /**
     * Connector mapping property availability.
     */
    export interface ConnectorMappingAvailability {
        /**
         * The frequency to update.
         */
        frequency?: pulumi.Input<string>;
        /**
         * The interval of the given frequency to use.
         */
        interval: pulumi.Input<number>;
    }

    /**
     * Connector mapping property availability.
     */
    export interface ConnectorMappingAvailabilityResponse {
        /**
         * The frequency to update.
         */
        frequency?: pulumi.Input<string>;
        /**
         * The interval of the given frequency to use.
         */
        interval: pulumi.Input<number>;
    }

    /**
     * The complete operation.
     */
    export interface ConnectorMappingCompleteOperation {
        /**
         * The type of completion operation.
         */
        completionOperationType?: pulumi.Input<string>;
        /**
         * The destination folder where files will be moved to once the import is done.
         */
        destinationFolder?: pulumi.Input<string>;
    }

    /**
     * The complete operation.
     */
    export interface ConnectorMappingCompleteOperationResponse {
        /**
         * The type of completion operation.
         */
        completionOperationType?: pulumi.Input<string>;
        /**
         * The destination folder where files will be moved to once the import is done.
         */
        destinationFolder?: pulumi.Input<string>;
    }

    /**
     * The error management.
     */
    export interface ConnectorMappingErrorManagement {
        /**
         * The error limit allowed while importing data.
         */
        errorLimit?: pulumi.Input<number>;
        /**
         * The type of error management to use for the mapping.
         */
        errorManagementType: pulumi.Input<string>;
    }

    /**
     * The error management.
     */
    export interface ConnectorMappingErrorManagementResponse {
        /**
         * The error limit allowed while importing data.
         */
        errorLimit?: pulumi.Input<number>;
        /**
         * The type of error management to use for the mapping.
         */
        errorManagementType: pulumi.Input<string>;
    }

    /**
     * Connector mapping property format.
     */
    export interface ConnectorMappingFormat {
        /**
         * The oData language.
         */
        acceptLanguage?: pulumi.Input<string>;
        /**
         * Character separating array elements.
         */
        arraySeparator?: pulumi.Input<string>;
        /**
         * The character that signifies a break between columns.
         */
        columnDelimiter?: pulumi.Input<string>;
        /**
         * The type mapping format.
         */
        formatType: pulumi.Input<string>;
        /**
         * Quote character, used to indicate enquoted fields.
         */
        quoteCharacter?: pulumi.Input<string>;
        /**
         * Escape character for quotes, can be the same as the quoteCharacter.
         */
        quoteEscapeCharacter?: pulumi.Input<string>;
    }

    /**
     * Connector mapping property format.
     */
    export interface ConnectorMappingFormatResponse {
        /**
         * The oData language.
         */
        acceptLanguage?: pulumi.Input<string>;
        /**
         * Character separating array elements.
         */
        arraySeparator?: pulumi.Input<string>;
        /**
         * The character that signifies a break between columns.
         */
        columnDelimiter?: pulumi.Input<string>;
        /**
         * The type mapping format.
         */
        formatType: pulumi.Input<string>;
        /**
         * Quote character, used to indicate enquoted fields.
         */
        quoteCharacter?: pulumi.Input<string>;
        /**
         * Escape character for quotes, can be the same as the quoteCharacter.
         */
        quoteEscapeCharacter?: pulumi.Input<string>;
    }

    /**
     * The connector mapping properties.
     */
    export interface ConnectorMappingProperties {
        /**
         * The availability of mapping property.
         */
        availability: pulumi.Input<inputs.customerinsights.ConnectorMappingAvailability>;
        /**
         * The operation after import is done.
         */
        completeOperation: pulumi.Input<inputs.customerinsights.ConnectorMappingCompleteOperation>;
        /**
         * The error management setting for the mapping.
         */
        errorManagement: pulumi.Input<inputs.customerinsights.ConnectorMappingErrorManagement>;
        /**
         * The file filter for the mapping.
         */
        fileFilter?: pulumi.Input<string>;
        /**
         * The folder path for the mapping.
         */
        folderPath?: pulumi.Input<string>;
        /**
         * The format of mapping property.
         */
        format: pulumi.Input<inputs.customerinsights.ConnectorMappingFormat>;
        /**
         * If the file contains a header or not.
         */
        hasHeader?: pulumi.Input<boolean>;
        /**
         * Ingestion mapping information at property level.
         */
        structure: pulumi.Input<pulumi.Input<inputs.customerinsights.ConnectorMappingStructure>[]>;
    }

    /**
     * The connector mapping properties.
     */
    export interface ConnectorMappingPropertiesResponse {
        /**
         * The availability of mapping property.
         */
        availability: pulumi.Input<inputs.customerinsights.ConnectorMappingAvailabilityResponse>;
        /**
         * The operation after import is done.
         */
        completeOperation: pulumi.Input<inputs.customerinsights.ConnectorMappingCompleteOperationResponse>;
        /**
         * The error management setting for the mapping.
         */
        errorManagement: pulumi.Input<inputs.customerinsights.ConnectorMappingErrorManagementResponse>;
        /**
         * The file filter for the mapping.
         */
        fileFilter?: pulumi.Input<string>;
        /**
         * The folder path for the mapping.
         */
        folderPath?: pulumi.Input<string>;
        /**
         * The format of mapping property.
         */
        format: pulumi.Input<inputs.customerinsights.ConnectorMappingFormatResponse>;
        /**
         * If the file contains a header or not.
         */
        hasHeader?: pulumi.Input<boolean>;
        /**
         * Ingestion mapping information at property level.
         */
        structure: pulumi.Input<pulumi.Input<inputs.customerinsights.ConnectorMappingStructureResponse>[]>;
    }

    /**
     * The connector mapping definition.
     */
    export interface ConnectorMappingResponse {
        /**
         * The connector mapping name
         */
        connectorMappingName: pulumi.Input<string>;
        /**
         * The connector name.
         */
        connectorName: pulumi.Input<string>;
        /**
         * Type of connector.
         */
        connectorType?: pulumi.Input<string>;
        /**
         * The created time.
         */
        created: pulumi.Input<string>;
        /**
         * The DataFormat ID.
         */
        dataFormatId: pulumi.Input<string>;
        /**
         * The description of the connector mapping.
         */
        description?: pulumi.Input<string>;
        /**
         * Display name for the connector mapping.
         */
        displayName?: pulumi.Input<string>;
        /**
         * Defines which entity type the file should map to.
         */
        entityType: pulumi.Input<string>;
        /**
         * The mapping entity name.
         */
        entityTypeName: pulumi.Input<string>;
        /**
         * The last modified time.
         */
        lastModified: pulumi.Input<string>;
        /**
         * The properties of the mapping.
         */
        mappingProperties: pulumi.Input<inputs.customerinsights.ConnectorMappingPropertiesResponse>;
        /**
         * The next run time based on customer's settings.
         */
        nextRunTime: pulumi.Input<string>;
        /**
         * The RunId.
         */
        runId: pulumi.Input<string>;
        /**
         * State of connector mapping.
         */
        state: pulumi.Input<string>;
        /**
         * The hub name.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * Connector mapping property structure.
     */
    export interface ConnectorMappingStructure {
        /**
         * The column name of the import file.
         */
        columnName: pulumi.Input<string>;
        /**
         * Custom format specifier for input parsing.
         */
        customFormatSpecifier?: pulumi.Input<string>;
        /**
         * Indicates if the column is encrypted.
         */
        isEncrypted?: pulumi.Input<boolean>;
        /**
         * The property name of the mapping entity.
         */
        propertyName: pulumi.Input<string>;
    }

    /**
     * Connector mapping property structure.
     */
    export interface ConnectorMappingStructureResponse {
        /**
         * The column name of the import file.
         */
        columnName: pulumi.Input<string>;
        /**
         * Custom format specifier for input parsing.
         */
        customFormatSpecifier?: pulumi.Input<string>;
        /**
         * Indicates if the column is encrypted.
         */
        isEncrypted?: pulumi.Input<boolean>;
        /**
         * The property name of the mapping entity.
         */
        propertyName: pulumi.Input<string>;
    }

    /**
     * Properties of connector.
     */
    export interface ConnectorResponse {
        /**
         * ID of the connector.
         */
        connectorId: pulumi.Input<number>;
        /**
         * Name of the connector.
         */
        connectorName?: pulumi.Input<string>;
        /**
         * The connector properties.
         */
        connectorProperties: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Type of connector.
         */
        connectorType: pulumi.Input<string>;
        /**
         * The created time.
         */
        created: pulumi.Input<string>;
        /**
         * Description of the connector.
         */
        description?: pulumi.Input<string>;
        /**
         * Display name of the connector.
         */
        displayName?: pulumi.Input<string>;
        /**
         * If this is an internal connector.
         */
        isInternal?: pulumi.Input<boolean>;
        /**
         * The last modified time.
         */
        lastModified: pulumi.Input<string>;
        /**
         * State of connector.
         */
        state: pulumi.Input<string>;
        /**
         * The hub name.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * The data source precedence is a way to know the precedence of each data source.
     */
    export interface DataSourcePrecedenceResponse {
        /**
         * Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules.
         */
        dataSource?: pulumi.Input<inputs.customerinsights.DataSourceResponse>;
        /**
         * the precedence value.
         */
        precedence?: pulumi.Input<number>;
    }

    /**
     * Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules.
     */
    export interface DataSourceResponse {
        /**
         * The data source reference id.
         */
        dataSourceReferenceId: pulumi.Input<string>;
        /**
         * The data source type.
         */
        dataSourceType: pulumi.Input<string>;
        /**
         * The data source ID.
         */
        id: pulumi.Input<number>;
        /**
         * The data source name
         */
        name: pulumi.Input<string>;
        /**
         * The data source status.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Hub billing info.
     */
    export interface HubBillingInfoFormat {
        /**
         * The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions.
         */
        maxUnits?: pulumi.Input<number>;
        /**
         * The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions.
         */
        minUnits?: pulumi.Input<number>;
        /**
         * The sku name.
         */
        skuName?: pulumi.Input<string>;
    }

    /**
     * Hub billing info.
     */
    export interface HubBillingInfoFormatResponse {
        /**
         * The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions.
         */
        maxUnits?: pulumi.Input<number>;
        /**
         * The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions.
         */
        minUnits?: pulumi.Input<number>;
        /**
         * The sku name.
         */
        skuName?: pulumi.Input<string>;
    }

    /**
     * Properties of hub.
     */
    export interface HubPropertiesFormat {
        /**
         * Billing settings of the hub.
         */
        hubBillingInfo?: pulumi.Input<inputs.customerinsights.HubBillingInfoFormat>;
        /**
         * The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
         */
        tenantFeatures?: pulumi.Input<number>;
    }

    /**
     * Properties of hub.
     */
    export interface HubPropertiesFormatResponse {
        /**
         * API endpoint URL of the hub.
         */
        apiEndpoint: pulumi.Input<string>;
        /**
         * Billing settings of the hub.
         */
        hubBillingInfo?: pulumi.Input<inputs.customerinsights.HubBillingInfoFormatResponse>;
        /**
         * Provisioning state of the hub.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
         */
        tenantFeatures?: pulumi.Input<number>;
        /**
         * Web endpoint URL of the hub.
         */
        webEndpoint: pulumi.Input<string>;
    }

    /**
     * The KPI alias.
     */
    export interface KpiAlias {
        /**
         * KPI alias name.
         */
        aliasName: pulumi.Input<string>;
        /**
         * The expression.
         */
        expression: pulumi.Input<string>;
    }

    /**
     * The KPI alias.
     */
    export interface KpiAliasResponse {
        /**
         * KPI alias name.
         */
        aliasName: pulumi.Input<string>;
        /**
         * The expression.
         */
        expression: pulumi.Input<string>;
    }

    /**
     * Defines the KPI Threshold limits.
     */
    export interface KpiDefinition {
        /**
         * The aliases.
         */
        aliases?: pulumi.Input<pulumi.Input<inputs.customerinsights.KpiAlias>[]>;
        /**
         * The calculation window.
         */
        calculationWindow: pulumi.Input<string>;
        /**
         * Name of calculation window field.
         */
        calculationWindowFieldName?: pulumi.Input<string>;
        /**
         * Localized description for the KPI.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name for the KPI.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The mapping entity type.
         */
        entityType: pulumi.Input<string>;
        /**
         * The mapping entity name.
         */
        entityTypeName: pulumi.Input<string>;
        /**
         * The computation expression for the KPI.
         */
        expression: pulumi.Input<string>;
        /**
         * The KPI extracts.
         */
        extracts?: pulumi.Input<pulumi.Input<inputs.customerinsights.KpiExtract>[]>;
        /**
         * The filter expression for the KPI.
         */
        filter?: pulumi.Input<string>;
        /**
         * The computation function for the KPI.
         */
        function: pulumi.Input<string>;
        /**
         * the group by properties for the KPI.
         */
        groupBy?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The KPI thresholds.
         */
        thresHolds?: pulumi.Input<inputs.customerinsights.KpiThresholds>;
        /**
         * The unit of measurement for the KPI.
         */
        unit?: pulumi.Input<string>;
    }

    /**
     * Defines the KPI Threshold limits.
     */
    export interface KpiDefinitionResponse {
        /**
         * The aliases.
         */
        aliases?: pulumi.Input<pulumi.Input<inputs.customerinsights.KpiAliasResponse>[]>;
        /**
         * The calculation window.
         */
        calculationWindow: pulumi.Input<string>;
        /**
         * Name of calculation window field.
         */
        calculationWindowFieldName?: pulumi.Input<string>;
        /**
         * Localized description for the KPI.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name for the KPI.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The mapping entity type.
         */
        entityType: pulumi.Input<string>;
        /**
         * The mapping entity name.
         */
        entityTypeName: pulumi.Input<string>;
        /**
         * The computation expression for the KPI.
         */
        expression: pulumi.Input<string>;
        /**
         * The KPI extracts.
         */
        extracts?: pulumi.Input<pulumi.Input<inputs.customerinsights.KpiExtractResponse>[]>;
        /**
         * The filter expression for the KPI.
         */
        filter?: pulumi.Input<string>;
        /**
         * The computation function for the KPI.
         */
        function: pulumi.Input<string>;
        /**
         * the group by properties for the KPI.
         */
        groupBy?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The KPI GroupByMetadata.
         */
        groupByMetadata: pulumi.Input<pulumi.Input<inputs.customerinsights.KpiGroupByMetadataResponse>[]>;
        /**
         * The KPI name.
         */
        kpiName: pulumi.Input<string>;
        /**
         * The participant profiles.
         */
        participantProfilesMetadata: pulumi.Input<pulumi.Input<inputs.customerinsights.KpiParticipantProfilesMetadataResponse>[]>;
        /**
         * Provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The hub name.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The KPI thresholds.
         */
        thresHolds?: pulumi.Input<inputs.customerinsights.KpiThresholdsResponse>;
        /**
         * The unit of measurement for the KPI.
         */
        unit?: pulumi.Input<string>;
    }

    /**
     * The KPI extract.
     */
    export interface KpiExtract {
        /**
         * The expression.
         */
        expression: pulumi.Input<string>;
        /**
         * KPI extract name.
         */
        extractName: pulumi.Input<string>;
    }

    /**
     * The KPI extract.
     */
    export interface KpiExtractResponse {
        /**
         * The expression.
         */
        expression: pulumi.Input<string>;
        /**
         * KPI extract name.
         */
        extractName: pulumi.Input<string>;
    }

    /**
     * The KPI GroupBy field metadata.
     */
    export interface KpiGroupByMetadataResponse {
        /**
         * The display name.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The name of the field.
         */
        fieldName?: pulumi.Input<string>;
        /**
         * The type of the field.
         */
        fieldType?: pulumi.Input<string>;
    }

    /**
     * The KPI participant profile metadata.
     */
    export interface KpiParticipantProfilesMetadataResponse {
        /**
         * Name of the type.
         */
        typeName: pulumi.Input<string>;
    }

    /**
     * Defines the KPI Threshold limits.
     */
    export interface KpiThresholds {
        /**
         * Whether or not the KPI is an increasing KPI.
         */
        increasingKpi: pulumi.Input<boolean>;
        /**
         * The lower threshold limit.
         */
        lowerLimit: pulumi.Input<number>;
        /**
         * The upper threshold limit.
         */
        upperLimit: pulumi.Input<number>;
    }

    /**
     * Defines the KPI Threshold limits.
     */
    export interface KpiThresholdsResponse {
        /**
         * Whether or not the KPI is an increasing KPI.
         */
        increasingKpi: pulumi.Input<boolean>;
        /**
         * The lower threshold limit.
         */
        lowerLimit: pulumi.Input<number>;
        /**
         * The upper threshold limit.
         */
        upperLimit: pulumi.Input<number>;
    }

    /**
     * The definition of Link.
     */
    export interface LinkDefinition {
        /**
         * Localized descriptions for the Link.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name for the Link.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The set of properties mappings between the source and target Types.
         */
        mappings?: pulumi.Input<pulumi.Input<inputs.customerinsights.TypePropertiesMapping>[]>;
        /**
         * Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only.
         */
        operationType?: pulumi.Input<string>;
        /**
         * The properties that represent the participating profile.
         */
        participantPropertyReferences: pulumi.Input<pulumi.Input<inputs.customerinsights.ParticipantPropertyReference>[]>;
        /**
         * Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles.
         */
        referenceOnly?: pulumi.Input<boolean>;
        /**
         * Type of source entity.
         */
        sourceEntityType: pulumi.Input<string>;
        /**
         * Name of the source Entity Type.
         */
        sourceEntityTypeName: pulumi.Input<string>;
        /**
         * Type of target entity.
         */
        targetEntityType: pulumi.Input<string>;
        /**
         * Name of the target Entity Type.
         */
        targetEntityTypeName: pulumi.Input<string>;
    }

    /**
     * The definition of Link.
     */
    export interface LinkDefinitionResponse {
        /**
         * Localized descriptions for the Link.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name for the Link.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The link name.
         */
        linkName: pulumi.Input<string>;
        /**
         * The set of properties mappings between the source and target Types.
         */
        mappings?: pulumi.Input<pulumi.Input<inputs.customerinsights.TypePropertiesMappingResponse>[]>;
        /**
         * Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only.
         */
        operationType?: pulumi.Input<string>;
        /**
         * The properties that represent the participating profile.
         */
        participantPropertyReferences: pulumi.Input<pulumi.Input<inputs.customerinsights.ParticipantPropertyReferenceResponse>[]>;
        /**
         * Provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles.
         */
        referenceOnly?: pulumi.Input<boolean>;
        /**
         * Type of source entity.
         */
        sourceEntityType: pulumi.Input<string>;
        /**
         * Name of the source Entity Type.
         */
        sourceEntityTypeName: pulumi.Input<string>;
        /**
         * Type of target entity.
         */
        targetEntityType: pulumi.Input<string>;
        /**
         * Name of the target Entity Type.
         */
        targetEntityTypeName: pulumi.Input<string>;
        /**
         * The hub name.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * The participant profile property reference.
     */
    export interface ParticipantProfilePropertyReference {
        /**
         * The source interaction property that maps to the target profile property.
         */
        interactionPropertyName: pulumi.Input<string>;
        /**
         * The target profile property that maps to the source interaction property.
         */
        profilePropertyName: pulumi.Input<string>;
    }

    /**
     * The participant profile property reference.
     */
    export interface ParticipantProfilePropertyReferenceResponse {
        /**
         * The source interaction property that maps to the target profile property.
         */
        interactionPropertyName: pulumi.Input<string>;
        /**
         * The target profile property that maps to the source interaction property.
         */
        profilePropertyName: pulumi.Input<string>;
    }

    /**
     * The participant property reference.
     */
    export interface ParticipantPropertyReference {
        /**
         * The source property that maps to the target property.
         */
        sourcePropertyName: pulumi.Input<string>;
        /**
         * The target property that maps to the source property.
         */
        targetPropertyName: pulumi.Input<string>;
    }

    /**
     * The participant property reference.
     */
    export interface ParticipantPropertyReferenceResponse {
        /**
         * The source property that maps to the target property.
         */
        sourcePropertyName: pulumi.Input<string>;
        /**
         * The target property that maps to the source property.
         */
        targetPropertyName: pulumi.Input<string>;
    }

    /**
     * The prediction definition.
     */
    export interface Prediction {
        /**
         * Whether do auto analyze.
         */
        autoAnalyze: pulumi.Input<boolean>;
        /**
         * Description of the prediction.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Display name of the prediction.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The prediction grades.
         */
        grades?: pulumi.Input<pulumi.Input<inputs.customerinsights.PredictionProperties>[]>;
        /**
         * Interaction types involved in the prediction.
         */
        involvedInteractionTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * KPI types involved in the prediction.
         */
        involvedKpiTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Relationships involved in the prediction.
         */
        involvedRelationships?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Definition of the link mapping of prediction.
         */
        mappings: pulumi.Input<inputs.customerinsights.PredictionProperties>;
        /**
         * Negative outcome expression.
         */
        negativeOutcomeExpression: pulumi.Input<string>;
        /**
         * Positive outcome expression.
         */
        positiveOutcomeExpression: pulumi.Input<string>;
        /**
         * Name of the prediction.
         */
        predictionName?: pulumi.Input<string>;
        /**
         * Primary profile type.
         */
        primaryProfileType: pulumi.Input<string>;
        /**
         * Scope expression.
         */
        scopeExpression: pulumi.Input<string>;
        /**
         * Score label.
         */
        scoreLabel: pulumi.Input<string>;
    }

    /**
     * The definition of a prediction grade.
     */
    export interface PredictionProperties {
        /**
         * Name of the grade.
         */
        gradeName?: pulumi.Input<string>;
        /**
         * Maximum score threshold.
         */
        maxScoreThreshold?: pulumi.Input<number>;
        /**
         * Minimum score threshold.
         */
        minScoreThreshold?: pulumi.Input<number>;
    }

    /**
     * The prediction definition.
     */
    export interface PredictionResponse {
        /**
         * Whether do auto analyze.
         */
        autoAnalyze: pulumi.Input<boolean>;
        /**
         * Description of the prediction.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Display name of the prediction.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The prediction grades.
         */
        grades?: pulumi.Input<pulumi.Input<inputs.customerinsights.PredictionResponseProperties>[]>;
        /**
         * Interaction types involved in the prediction.
         */
        involvedInteractionTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * KPI types involved in the prediction.
         */
        involvedKpiTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Relationships involved in the prediction.
         */
        involvedRelationships?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Definition of the link mapping of prediction.
         */
        mappings: pulumi.Input<inputs.customerinsights.PredictionResponseProperties>;
        /**
         * Negative outcome expression.
         */
        negativeOutcomeExpression: pulumi.Input<string>;
        /**
         * Positive outcome expression.
         */
        positiveOutcomeExpression: pulumi.Input<string>;
        /**
         * Name of the prediction.
         */
        predictionName?: pulumi.Input<string>;
        /**
         * Primary profile type.
         */
        primaryProfileType: pulumi.Input<string>;
        /**
         * Provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Scope expression.
         */
        scopeExpression: pulumi.Input<string>;
        /**
         * Score label.
         */
        scoreLabel: pulumi.Input<string>;
        /**
         * System generated entities.
         */
        systemGeneratedEntities: pulumi.Input<inputs.customerinsights.PredictionResponseProperties>;
        /**
         * The hub name.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * The definition of a prediction grade.
     */
    export interface PredictionResponseProperties {
        /**
         * Name of the grade.
         */
        gradeName?: pulumi.Input<string>;
        /**
         * Maximum score threshold.
         */
        maxScoreThreshold?: pulumi.Input<number>;
        /**
         * Minimum score threshold.
         */
        minScoreThreshold?: pulumi.Input<number>;
    }

    /**
     * Valid enum values in case of an enum property.
     */
    export interface ProfileEnumValidValuesFormat {
        /**
         * Localized names of the enum member.
         */
        localizedValueNames?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The integer value of the enum member.
         */
        value?: pulumi.Input<number>;
    }

    /**
     * Valid enum values in case of an enum property.
     */
    export interface ProfileEnumValidValuesFormatResponse {
        /**
         * Localized names of the enum member.
         */
        localizedValueNames?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The integer value of the enum member.
         */
        value?: pulumi.Input<number>;
    }

    /**
     * The profile type definition.
     */
    export interface ProfileTypeDefinition {
        /**
         * The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object.
         */
        apiEntitySetName?: pulumi.Input<string>;
        /**
         * The attributes for the Type.
         */
        attributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized descriptions for the property.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display names for the property.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Type of entity.
         */
        entityType?: pulumi.Input<string>;
        /**
         * The properties of the Profile.
         */
        fields?: pulumi.Input<pulumi.Input<inputs.customerinsights.PropertyDefinition>[]>;
        /**
         * The instance count.
         */
        instancesCount?: pulumi.Input<number>;
        /**
         * Large Image associated with the Property or EntityType.
         */
        largeImage?: pulumi.Input<string>;
        /**
         * Any custom localized attributes for the Type.
         */
        localizedAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Medium Image associated with the Property or EntityType.
         */
        mediumImage?: pulumi.Input<string>;
        /**
         * The schema org link. This helps ACI identify and suggest semantic models.
         */
        schemaItemTypeLink?: pulumi.Input<string>;
        /**
         * Small Image associated with the Property or EntityType.
         */
        smallImage?: pulumi.Input<string>;
        /**
         * The strong IDs.
         */
        strongIds?: pulumi.Input<pulumi.Input<inputs.customerinsights.StrongId>[]>;
        /**
         * The timestamp property name. Represents the time when the interaction or profile update happened.
         */
        timestampFieldName?: pulumi.Input<string>;
        /**
         * The name of the entity.
         */
        typeName?: pulumi.Input<string>;
    }

    /**
     * The profile type definition.
     */
    export interface ProfileTypeDefinitionResponse {
        /**
         * The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object.
         */
        apiEntitySetName?: pulumi.Input<string>;
        /**
         * The attributes for the Type.
         */
        attributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized descriptions for the property.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display names for the property.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Type of entity.
         */
        entityType?: pulumi.Input<string>;
        /**
         * The properties of the Profile.
         */
        fields?: pulumi.Input<pulumi.Input<inputs.customerinsights.PropertyDefinitionResponse>[]>;
        /**
         * The instance count.
         */
        instancesCount?: pulumi.Input<number>;
        /**
         * Large Image associated with the Property or EntityType.
         */
        largeImage?: pulumi.Input<string>;
        /**
         * The last changed time for the type definition.
         */
        lastChangedUtc: pulumi.Input<string>;
        /**
         * Any custom localized attributes for the Type.
         */
        localizedAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Medium Image associated with the Property or EntityType.
         */
        mediumImage?: pulumi.Input<string>;
        /**
         * Provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The schema org link. This helps ACI identify and suggest semantic models.
         */
        schemaItemTypeLink?: pulumi.Input<string>;
        /**
         * Small Image associated with the Property or EntityType.
         */
        smallImage?: pulumi.Input<string>;
        /**
         * The strong IDs.
         */
        strongIds?: pulumi.Input<pulumi.Input<inputs.customerinsights.StrongIdResponse>[]>;
        /**
         * The hub name.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The timestamp property name. Represents the time when the interaction or profile update happened.
         */
        timestampFieldName?: pulumi.Input<string>;
        /**
         * The name of the entity.
         */
        typeName?: pulumi.Input<string>;
    }

    /**
     * Property definition.
     */
    export interface PropertyDefinition {
        /**
         * Array value separator for properties with isArray set.
         */
        arrayValueSeparator?: pulumi.Input<string>;
        /**
         * Describes valid values for an enum property.
         */
        enumValidValues?: pulumi.Input<pulumi.Input<inputs.customerinsights.ProfileEnumValidValuesFormat>[]>;
        /**
         * Name of the property.
         */
        fieldName: pulumi.Input<string>;
        /**
         * Type of the property.
         */
        fieldType: pulumi.Input<string>;
        /**
         * Indicates if the property is actually an array of the fieldType above on the data api.
         */
        isArray?: pulumi.Input<boolean>;
        /**
         * Whether property is available in graph or not.
         */
        isAvailableInGraph?: pulumi.Input<boolean>;
        /**
         * Indicates if the property is an enum.
         */
        isEnum?: pulumi.Input<boolean>;
        /**
         * Indicates if the property is an flag enum.
         */
        isFlagEnum?: pulumi.Input<boolean>;
        /**
         * Whether the property is an Image.
         */
        isImage?: pulumi.Input<boolean>;
        /**
         * Whether the property is a localized string.
         */
        isLocalizedString?: pulumi.Input<boolean>;
        /**
         * Whether the property is a name or a part of name.
         */
        isName?: pulumi.Input<boolean>;
        /**
         * Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field.
         */
        isRequired?: pulumi.Input<boolean>;
        /**
         * Max length of string. Used only if type is string.
         */
        maxLength?: pulumi.Input<number>;
        /**
         * The ID associated with the property.
         */
        propertyId?: pulumi.Input<string>;
        /**
         * URL encoded schema.org item prop link for the property.
         */
        schemaItemPropLink?: pulumi.Input<string>;
    }

    /**
     * Property definition.
     */
    export interface PropertyDefinitionResponse {
        /**
         * Array value separator for properties with isArray set.
         */
        arrayValueSeparator?: pulumi.Input<string>;
        /**
         * This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.
         */
        dataSourcePrecedenceRules: pulumi.Input<pulumi.Input<inputs.customerinsights.DataSourcePrecedenceResponse>[]>;
        /**
         * Describes valid values for an enum property.
         */
        enumValidValues?: pulumi.Input<pulumi.Input<inputs.customerinsights.ProfileEnumValidValuesFormatResponse>[]>;
        /**
         * Name of the property.
         */
        fieldName: pulumi.Input<string>;
        /**
         * Type of the property.
         */
        fieldType: pulumi.Input<string>;
        /**
         * Indicates if the property is actually an array of the fieldType above on the data api.
         */
        isArray?: pulumi.Input<boolean>;
        /**
         * Whether property is available in graph or not.
         */
        isAvailableInGraph?: pulumi.Input<boolean>;
        /**
         * Indicates if the property is an enum.
         */
        isEnum?: pulumi.Input<boolean>;
        /**
         * Indicates if the property is an flag enum.
         */
        isFlagEnum?: pulumi.Input<boolean>;
        /**
         * Whether the property is an Image.
         */
        isImage?: pulumi.Input<boolean>;
        /**
         * Whether the property is a localized string.
         */
        isLocalizedString?: pulumi.Input<boolean>;
        /**
         * Whether the property is a name or a part of name.
         */
        isName?: pulumi.Input<boolean>;
        /**
         * Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field.
         */
        isRequired?: pulumi.Input<boolean>;
        /**
         * Max length of string. Used only if type is string.
         */
        maxLength?: pulumi.Input<number>;
        /**
         * The ID associated with the property.
         */
        propertyId?: pulumi.Input<string>;
        /**
         * URL encoded schema.org item prop link for the property.
         */
        schemaItemPropLink?: pulumi.Input<string>;
    }

    /**
     * The definition of Relationship.
     */
    export interface RelationshipDefinition {
        /**
         * The Relationship Cardinality.
         */
        cardinality?: pulumi.Input<string>;
        /**
         * Localized descriptions for the Relationship.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name for the Relationship.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The expiry date time in UTC.
         */
        expiryDateTimeUtc?: pulumi.Input<string>;
        /**
         * The properties of the Relationship.
         */
        fields?: pulumi.Input<pulumi.Input<inputs.customerinsights.PropertyDefinition>[]>;
        /**
         * Optional property to be used to map fields in profile to their strong ids in related profile.
         */
        lookupMappings?: pulumi.Input<pulumi.Input<inputs.customerinsights.RelationshipTypeMapping>[]>;
        /**
         * Profile type.
         */
        profileType: pulumi.Input<string>;
        /**
         * Related profile being referenced.
         */
        relatedProfileType: pulumi.Input<string>;
    }

    /**
     * The definition of Relationship.
     */
    export interface RelationshipDefinitionResponse {
        /**
         * The Relationship Cardinality.
         */
        cardinality?: pulumi.Input<string>;
        /**
         * Localized descriptions for the Relationship.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name for the Relationship.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The expiry date time in UTC.
         */
        expiryDateTimeUtc?: pulumi.Input<string>;
        /**
         * The properties of the Relationship.
         */
        fields?: pulumi.Input<pulumi.Input<inputs.customerinsights.PropertyDefinitionResponse>[]>;
        /**
         * Optional property to be used to map fields in profile to their strong ids in related profile.
         */
        lookupMappings?: pulumi.Input<pulumi.Input<inputs.customerinsights.RelationshipTypeMappingResponse>[]>;
        /**
         * Profile type.
         */
        profileType: pulumi.Input<string>;
        /**
         * Provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Related profile being referenced.
         */
        relatedProfileType: pulumi.Input<string>;
        /**
         * The relationship guid id.
         */
        relationshipGuidId: pulumi.Input<string>;
        /**
         * The Relationship name.
         */
        relationshipName: pulumi.Input<string>;
        /**
         * The hub name.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * The definition of relationship link.
     */
    export interface RelationshipLinkDefinition {
        /**
         * Localized descriptions for the Relationship Link.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name for the Relationship Link.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The InteractionType associated with the Relationship Link.
         */
        interactionType: pulumi.Input<string>;
        /**
         * The mappings between Interaction and Relationship fields.
         */
        mappings?: pulumi.Input<pulumi.Input<inputs.customerinsights.RelationshipLinkFieldMapping>[]>;
        /**
         * The property references for the Profile of the Relationship.
         */
        profilePropertyReferences: pulumi.Input<pulumi.Input<inputs.customerinsights.ParticipantProfilePropertyReference>[]>;
        /**
         * The property references for the Related Profile of the Relationship.
         */
        relatedProfilePropertyReferences: pulumi.Input<pulumi.Input<inputs.customerinsights.ParticipantProfilePropertyReference>[]>;
        /**
         * The Relationship associated with the Link.
         */
        relationshipName: pulumi.Input<string>;
    }

    /**
     * The definition of relationship link.
     */
    export interface RelationshipLinkDefinitionResponse {
        /**
         * Localized descriptions for the Relationship Link.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name for the Relationship Link.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The InteractionType associated with the Relationship Link.
         */
        interactionType: pulumi.Input<string>;
        /**
         * The name of the Relationship Link.
         */
        linkName: pulumi.Input<string>;
        /**
         * The mappings between Interaction and Relationship fields.
         */
        mappings?: pulumi.Input<pulumi.Input<inputs.customerinsights.RelationshipLinkFieldMappingResponse>[]>;
        /**
         * The property references for the Profile of the Relationship.
         */
        profilePropertyReferences: pulumi.Input<pulumi.Input<inputs.customerinsights.ParticipantProfilePropertyReferenceResponse>[]>;
        /**
         * Provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The property references for the Related Profile of the Relationship.
         */
        relatedProfilePropertyReferences: pulumi.Input<pulumi.Input<inputs.customerinsights.ParticipantProfilePropertyReferenceResponse>[]>;
        /**
         * The relationship guid id.
         */
        relationshipGuidId: pulumi.Input<string>;
        /**
         * The Relationship associated with the Link.
         */
        relationshipName: pulumi.Input<string>;
        /**
         * The hub name.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * The fields mapping for Relationships.
     */
    export interface RelationshipLinkFieldMapping {
        /**
         * The field name on the Interaction Type.
         */
        interactionFieldName: pulumi.Input<string>;
        /**
         * Link type.
         */
        linkType?: pulumi.Input<string>;
        /**
         * The field name on the Relationship metadata.
         */
        relationshipFieldName: pulumi.Input<string>;
    }

    /**
     * The fields mapping for Relationships.
     */
    export interface RelationshipLinkFieldMappingResponse {
        /**
         * The field name on the Interaction Type.
         */
        interactionFieldName: pulumi.Input<string>;
        /**
         * Link type.
         */
        linkType?: pulumi.Input<string>;
        /**
         * The field name on the Relationship metadata.
         */
        relationshipFieldName: pulumi.Input<string>;
    }

    /**
     * Map a field of profile to its corresponding StrongId in Related Profile.
     */
    export interface RelationshipTypeFieldMapping {
        /**
         * Specifies the fieldName in profile.
         */
        profileFieldName: pulumi.Input<string>;
        /**
         * Specifies the KeyProperty (from StrongId) of the related profile.
         */
        relatedProfileKeyProperty: pulumi.Input<string>;
    }

    /**
     * Map a field of profile to its corresponding StrongId in Related Profile.
     */
    export interface RelationshipTypeFieldMappingResponse {
        /**
         * Specifies the fieldName in profile.
         */
        profileFieldName: pulumi.Input<string>;
        /**
         * Specifies the KeyProperty (from StrongId) of the related profile.
         */
        relatedProfileKeyProperty: pulumi.Input<string>;
    }

    /**
     * Maps fields in Profile to their corresponding StrongIds in Related Profile.
     */
    export interface RelationshipTypeMapping {
        /**
         * Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well.
         */
        fieldMappings: pulumi.Input<pulumi.Input<inputs.customerinsights.RelationshipTypeFieldMapping>[]>;
    }

    /**
     * Maps fields in Profile to their corresponding StrongIds in Related Profile.
     */
    export interface RelationshipTypeMappingResponse {
        /**
         * Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well.
         */
        fieldMappings: pulumi.Input<pulumi.Input<inputs.customerinsights.RelationshipTypeFieldMappingResponse>[]>;
    }

    /**
     * The resource set description.
     */
    export interface ResourceSetDescription {
        /**
         * The elements included in the set.
         */
        elements?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The elements that are not included in the set, in case elements contains '*' indicating 'all'.
         */
        exceptions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The resource set description.
     */
    export interface ResourceSetDescriptionResponse {
        /**
         * The elements included in the set.
         */
        elements?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The elements that are not included in the set, in case elements contains '*' indicating 'all'.
         */
        exceptions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The Role Assignment definition.
     */
    export interface RoleAssignment {
        /**
         * Widget types set for the assignment.
         */
        conflationPolicies?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * Connectors set for the assignment.
         */
        connectors?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * Localized description for the metadata.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display names for the metadata.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Interactions set for the assignment.
         */
        interactions?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * Kpis set for the assignment.
         */
        kpis?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * Links set for the assignment.
         */
        links?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * The principals being assigned to.
         */
        principals: pulumi.Input<pulumi.Input<inputs.customerinsights.AssignmentPrincipal>[]>;
        /**
         * Profiles set for the assignment.
         */
        profiles?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * The Role assignments set for the relationship links.
         */
        relationshipLinks?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * The Role assignments set for the relationships.
         */
        relationships?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * Type of roles.
         */
        role: pulumi.Input<string>;
        /**
         * The Role assignments set for the assignment.
         */
        roleAssignments?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * Sas Policies set for the assignment.
         */
        sasPolicies?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * The Role assignments set for the assignment.
         */
        segments?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * Views set for the assignment.
         */
        views?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
        /**
         * Widget types set for the assignment.
         */
        widgetTypes?: pulumi.Input<inputs.customerinsights.ResourceSetDescription>;
    }

    /**
     * The Role Assignment definition.
     */
    export interface RoleAssignmentResponse {
        /**
         * The name of the metadata object.
         */
        assignmentName: pulumi.Input<string>;
        /**
         * Widget types set for the assignment.
         */
        conflationPolicies?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * Connectors set for the assignment.
         */
        connectors?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * Localized description for the metadata.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display names for the metadata.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Interactions set for the assignment.
         */
        interactions?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * Kpis set for the assignment.
         */
        kpis?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * Links set for the assignment.
         */
        links?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * The principals being assigned to.
         */
        principals: pulumi.Input<pulumi.Input<inputs.customerinsights.AssignmentPrincipalResponse>[]>;
        /**
         * Profiles set for the assignment.
         */
        profiles?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * Provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The Role assignments set for the relationship links.
         */
        relationshipLinks?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * The Role assignments set for the relationships.
         */
        relationships?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * Type of roles.
         */
        role: pulumi.Input<string>;
        /**
         * The Role assignments set for the assignment.
         */
        roleAssignments?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * Sas Policies set for the assignment.
         */
        sasPolicies?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * The Role assignments set for the assignment.
         */
        segments?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * The hub name.
         */
        tenantId: pulumi.Input<string>;
        /**
         * Views set for the assignment.
         */
        views?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
        /**
         * Widget types set for the assignment.
         */
        widgetTypes?: pulumi.Input<inputs.customerinsights.ResourceSetDescriptionResponse>;
    }

    /**
     * Property/Properties which represent a unique ID.
     */
    export interface StrongId {
        /**
         * Localized descriptions.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The properties which make up the unique ID.
         */
        keyPropertyNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Name identifying the strong ID.
         */
        strongIdName: pulumi.Input<string>;
    }

    /**
     * Property/Properties which represent a unique ID.
     */
    export interface StrongIdResponse {
        /**
         * Localized descriptions.
         */
        description?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Localized display name.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The properties which make up the unique ID.
         */
        keyPropertyNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Name identifying the strong ID.
         */
        strongIdName: pulumi.Input<string>;
    }

    /**
     * Metadata for a Link's property mapping.
     */
    export interface TypePropertiesMapping {
        /**
         * Link type.
         */
        linkType?: pulumi.Input<string>;
        /**
         *  Property name on the source Entity Type.
         */
        sourcePropertyName: pulumi.Input<string>;
        /**
         * Property name on the target Entity Type.
         */
        targetPropertyName: pulumi.Input<string>;
    }

    /**
     * Metadata for a Link's property mapping.
     */
    export interface TypePropertiesMappingResponse {
        /**
         * Link type.
         */
        linkType?: pulumi.Input<string>;
        /**
         *  Property name on the source Entity Type.
         */
        sourcePropertyName: pulumi.Input<string>;
        /**
         * Property name on the target Entity Type.
         */
        targetPropertyName: pulumi.Input<string>;
    }

    /**
     * The view in Customer 360 web application.
     */
    export interface View {
        /**
         * View definition.
         */
        definition: pulumi.Input<string>;
        /**
         * Localized display name for the view.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * the user ID.
         */
        userId?: pulumi.Input<string>;
    }

    /**
     * The view in Customer 360 web application.
     */
    export interface ViewResponse {
        /**
         * Date time when view was last modified.
         */
        changed: pulumi.Input<string>;
        /**
         * Date time when view was created.
         */
        created: pulumi.Input<string>;
        /**
         * View definition.
         */
        definition: pulumi.Input<string>;
        /**
         * Localized display name for the view.
         */
        displayName?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * the hub name.
         */
        tenantId: pulumi.Input<string>;
        /**
         * the user ID.
         */
        userId?: pulumi.Input<string>;
        /**
         * Name of the view.
         */
        viewName: pulumi.Input<string>;
    }
}

export namespace databox {
    /**
     * Contact Details.
     */
    export interface ContactDetails {
        /**
         * Contact name of the person.
         */
        contactName: pulumi.Input<string>;
        /**
         * List of Email-ids to be notified about job progress.
         */
        emailList: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Mobile number of the contact person.
         */
        mobile?: pulumi.Input<string>;
        /**
         * Notification preference for a job stage.
         */
        notificationPreference?: pulumi.Input<pulumi.Input<inputs.databox.NotificationPreference>[]>;
        /**
         * Phone number of the contact person.
         */
        phone: pulumi.Input<string>;
        /**
         * Phone extension number of the contact person.
         */
        phoneExtension?: pulumi.Input<string>;
    }

    /**
     * Contact Details.
     */
    export interface ContactDetailsResponse {
        /**
         * Contact name of the person.
         */
        contactName: pulumi.Input<string>;
        /**
         * List of Email-ids to be notified about job progress.
         */
        emailList: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Mobile number of the contact person.
         */
        mobile?: pulumi.Input<string>;
        /**
         * Notification preference for a job stage.
         */
        notificationPreference?: pulumi.Input<pulumi.Input<inputs.databox.NotificationPreferenceResponse>[]>;
        /**
         * Phone number of the contact person.
         */
        phone: pulumi.Input<string>;
        /**
         * Phone extension number of the contact person.
         */
        phoneExtension?: pulumi.Input<string>;
    }

    /**
     * Details for log generated during copy.
     */
    export interface CopyLogDetailsResponse {
        /**
         * Indicates the type of job details.
         */
        copyLogDetailsType: pulumi.Input<string>;
    }

    /**
     * Details of the destination storage accounts.
     */
    export interface DestinationAccountDetails {
        /**
         * Arm Id of the destination where the data has to be moved.
         */
        accountId?: pulumi.Input<string>;
        /**
         * Data Destination Type.
         */
        dataDestinationType: pulumi.Input<string>;
        /**
         * Share password to be shared by all shares in SA.
         */
        sharePassword?: pulumi.Input<string>;
    }

    /**
     * Details of the destination storage accounts.
     */
    export interface DestinationAccountDetailsResponse {
        /**
         * Arm Id of the destination where the data has to be moved.
         */
        accountId?: pulumi.Input<string>;
        /**
         * Data Destination Type.
         */
        dataDestinationType: pulumi.Input<string>;
        /**
         * Share password to be shared by all shares in SA.
         */
        sharePassword?: pulumi.Input<string>;
    }

    /**
     * Top level error for the job.
     */
    export interface ErrorResponse {
        /**
         * Error code that can be used to programmatically identify the error.
         */
        code: pulumi.Input<string>;
        /**
         * Describes the error in detail and provides debugging information.
         */
        message: pulumi.Input<string>;
    }

    /**
     * Additional delivery info.
     */
    export interface JobDeliveryInfo {
        /**
         * Scheduled date time.
         */
        scheduledDateTime?: pulumi.Input<string>;
    }

    /**
     * Additional delivery info.
     */
    export interface JobDeliveryInfoResponse {
        /**
         * Scheduled date time.
         */
        scheduledDateTime?: pulumi.Input<string>;
    }

    /**
     * Job details.
     */
    export interface JobDetails {
        /**
         * Contact details for notification and shipping.
         */
        contactDetails: pulumi.Input<inputs.databox.ContactDetails>;
        /**
         * Destination account details.
         */
        destinationAccountDetails: pulumi.Input<pulumi.Input<inputs.databox.DestinationAccountDetails>[]>;
        /**
         * The expected size of the data, which needs to be transferred in this job, in terabytes.
         */
        expectedDataSizeInTerabytes?: pulumi.Input<number>;
        /**
         * Indicates the type of job details.
         */
        jobDetailsType: pulumi.Input<string>;
        /**
         * Preferences for the order.
         */
        preferences?: pulumi.Input<inputs.databox.Preferences>;
        /**
         * Shipping address of the customer.
         */
        shippingAddress: pulumi.Input<inputs.databox.ShippingAddress>;
    }

    /**
     * Job details.
     */
    export interface JobDetailsResponse {
        /**
         * Shared access key to download the chain of custody logs
         */
        chainOfCustodySasKey: pulumi.Input<string>;
        /**
         * Contact details for notification and shipping.
         */
        contactDetails: pulumi.Input<inputs.databox.ContactDetailsResponse>;
        /**
         * List of copy log details.
         */
        copyLogDetails: pulumi.Input<pulumi.Input<inputs.databox.CopyLogDetailsResponse>[]>;
        /**
         * Delivery package shipping details.
         */
        deliveryPackage: pulumi.Input<inputs.databox.PackageShippingDetailsResponse>;
        /**
         * Destination account details.
         */
        destinationAccountDetails: pulumi.Input<pulumi.Input<inputs.databox.DestinationAccountDetailsResponse>[]>;
        /**
         * Error details for failure. This is optional.
         */
        errorDetails: pulumi.Input<pulumi.Input<inputs.databox.JobErrorDetailsResponse>[]>;
        /**
         * The expected size of the data, which needs to be transferred in this job, in terabytes.
         */
        expectedDataSizeInTerabytes?: pulumi.Input<number>;
        /**
         * Indicates the type of job details.
         */
        jobDetailsType: pulumi.Input<string>;
        /**
         * List of stages that run in the job.
         */
        jobStages: pulumi.Input<pulumi.Input<inputs.databox.JobStagesResponse>[]>;
        /**
         * Preferences for the order.
         */
        preferences?: pulumi.Input<inputs.databox.PreferencesResponse>;
        /**
         * Return package shipping details.
         */
        returnPackage: pulumi.Input<inputs.databox.PackageShippingDetailsResponse>;
        /**
         * Shared access key to download the return shipment label
         */
        reverseShipmentLabelSasKey: pulumi.Input<string>;
        /**
         * Shipping address of the customer.
         */
        shippingAddress: pulumi.Input<inputs.databox.ShippingAddressResponse>;
    }

    /**
     * Job Error Details for providing the information and recommended action.
     */
    export interface JobErrorDetailsResponse {
        /**
         * Code for the error.
         */
        errorCode: pulumi.Input<number>;
        /**
         * Message for the error.
         */
        errorMessage: pulumi.Input<string>;
        /**
         * Contains the non localized exception message
         */
        exceptionMessage: pulumi.Input<string>;
        /**
         * Recommended action for the error.
         */
        recommendedAction: pulumi.Input<string>;
    }

    /**
     * Job Properties
     */
    export interface JobProperties {
        /**
         * Delivery Info of Job.
         */
        deliveryInfo?: pulumi.Input<inputs.databox.JobDeliveryInfo>;
        /**
         * Delivery type of Job.
         */
        deliveryType?: pulumi.Input<string>;
        /**
         * Details of a job run. This field will only be sent for expand details filter.
         */
        details?: pulumi.Input<inputs.databox.JobDetails>;
    }

    /**
     * Job Properties
     */
    export interface JobPropertiesResponse {
        /**
         * Reason for cancellation.
         */
        cancellationReason: pulumi.Input<string>;
        /**
         * Delivery Info of Job.
         */
        deliveryInfo?: pulumi.Input<inputs.databox.JobDeliveryInfoResponse>;
        /**
         * Delivery type of Job.
         */
        deliveryType?: pulumi.Input<string>;
        /**
         * Details of a job run. This field will only be sent for expand details filter.
         */
        details?: pulumi.Input<inputs.databox.JobDetailsResponse>;
        /**
         * Top level error for the job.
         */
        error: pulumi.Input<inputs.databox.ErrorResponse>;
        /**
         * Describes whether the job is cancellable or not.
         */
        isCancellable: pulumi.Input<boolean>;
        /**
         * Flag to indicate cancellation of scheduled job.
         */
        isCancellableWithoutFee: pulumi.Input<boolean>;
        /**
         * Describes whether the job is deletable or not.
         */
        isDeletable: pulumi.Input<boolean>;
        /**
         * Describes whether the shipping address is editable or not.
         */
        isShippingAddressEditable: pulumi.Input<boolean>;
        /**
         * Time at which the job was started in UTC ISO 8601 format.
         */
        startTime: pulumi.Input<string>;
        /**
         * Name of the stage which is in progress.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Job stages.
     */
    export interface JobStagesResponse {
        /**
         * Display name of the job stage.
         */
        displayName: pulumi.Input<string>;
        /**
         * Error details for the stage.
         */
        errorDetails: pulumi.Input<pulumi.Input<inputs.databox.JobErrorDetailsResponse>[]>;
        /**
         * Job Stage Details
         */
        jobStageDetails: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Name of the job stage.
         */
        stageName: pulumi.Input<string>;
        /**
         * Status of the job stage.
         */
        stageStatus: pulumi.Input<string>;
        /**
         * Time for the job stage in UTC ISO 8601 format.
         */
        stageTime: pulumi.Input<string>;
    }

    /**
     * Notification preference for a job stage.
     */
    export interface NotificationPreference {
        /**
         * Notification is required or not.
         */
        sendNotification: pulumi.Input<boolean>;
        /**
         * Name of the stage.
         */
        stageName: pulumi.Input<string>;
    }

    /**
     * Notification preference for a job stage.
     */
    export interface NotificationPreferenceResponse {
        /**
         * Notification is required or not.
         */
        sendNotification: pulumi.Input<boolean>;
        /**
         * Name of the stage.
         */
        stageName: pulumi.Input<string>;
    }

    /**
     * Shipping details.
     */
    export interface PackageShippingDetailsResponse {
        /**
         * Name of the carrier.
         */
        carrierName: pulumi.Input<string>;
        /**
         * Tracking Id of shipment.
         */
        trackingId: pulumi.Input<string>;
        /**
         * Url where shipment can be tracked.
         */
        trackingUrl: pulumi.Input<string>;
    }

    /**
     * Preferences related to the order
     */
    export interface Preferences {
        /**
         * Preferred Data Center Region.
         */
        preferredDataCenterRegion?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Preferences related to the shipment logistics of the sku.
         */
        transportPreferences?: pulumi.Input<inputs.databox.TransportPreferences>;
    }

    /**
     * Preferences related to the order
     */
    export interface PreferencesResponse {
        /**
         * Preferred Data Center Region.
         */
        preferredDataCenterRegion?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Preferences related to the shipment logistics of the sku.
         */
        transportPreferences?: pulumi.Input<inputs.databox.TransportPreferencesResponse>;
    }

    /**
     * Shipping address where customer wishes to receive the device.
     */
    export interface ShippingAddress {
        /**
         * Type of address.
         */
        addressType?: pulumi.Input<string>;
        /**
         * Name of the City.
         */
        city?: pulumi.Input<string>;
        /**
         * Name of the company.
         */
        companyName?: pulumi.Input<string>;
        /**
         * Name of the Country.
         */
        country: pulumi.Input<string>;
        /**
         * Postal code.
         */
        postalCode: pulumi.Input<string>;
        /**
         * Name of the State or Province.
         */
        stateOrProvince?: pulumi.Input<string>;
        /**
         * Street Address line 1.
         */
        streetAddress1: pulumi.Input<string>;
        /**
         * Street Address line 2.
         */
        streetAddress2?: pulumi.Input<string>;
        /**
         * Street Address line 3.
         */
        streetAddress3?: pulumi.Input<string>;
        /**
         * Extended Zip Code.
         */
        zipExtendedCode?: pulumi.Input<string>;
    }

    /**
     * Shipping address where customer wishes to receive the device.
     */
    export interface ShippingAddressResponse {
        /**
         * Type of address.
         */
        addressType?: pulumi.Input<string>;
        /**
         * Name of the City.
         */
        city?: pulumi.Input<string>;
        /**
         * Name of the company.
         */
        companyName?: pulumi.Input<string>;
        /**
         * Name of the Country.
         */
        country: pulumi.Input<string>;
        /**
         * Postal code.
         */
        postalCode: pulumi.Input<string>;
        /**
         * Name of the State or Province.
         */
        stateOrProvince?: pulumi.Input<string>;
        /**
         * Street Address line 1.
         */
        streetAddress1: pulumi.Input<string>;
        /**
         * Street Address line 2.
         */
        streetAddress2?: pulumi.Input<string>;
        /**
         * Street Address line 3.
         */
        streetAddress3?: pulumi.Input<string>;
        /**
         * Extended Zip Code.
         */
        zipExtendedCode?: pulumi.Input<string>;
    }

    /**
     * The Sku.
     */
    export interface Sku {
        /**
         * The display name of the sku.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The sku family.
         */
        family?: pulumi.Input<string>;
        /**
         * The sku name.
         */
        name: pulumi.Input<string>;
    }

    /**
     * The Sku.
     */
    export interface SkuResponse {
        /**
         * The display name of the sku.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The sku family.
         */
        family?: pulumi.Input<string>;
        /**
         * The sku name.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Preferences related to the shipment logistics of the sku
     */
    export interface TransportPreferences {
        /**
         * Indicates Shipment Logistics type that the customer preferred.
         */
        preferredShipmentType: pulumi.Input<string>;
    }

    /**
     * Preferences related to the shipment logistics of the sku
     */
    export interface TransportPreferencesResponse {
        /**
         * Indicates Shipment Logistics type that the customer preferred.
         */
        preferredShipmentType: pulumi.Input<string>;
    }
}

export namespace databoxedge {
    /**
     * The shipping address of the customer.
     */
    export interface Address {
        /**
         * The address line1.
         */
        addressLine1: pulumi.Input<string>;
        /**
         * The address line2.
         */
        addressLine2?: pulumi.Input<string>;
        /**
         * The address line3.
         */
        addressLine3?: pulumi.Input<string>;
        /**
         * The city name.
         */
        city: pulumi.Input<string>;
        /**
         * The country name.
         */
        country: pulumi.Input<string>;
        /**
         * The postal code.
         */
        postalCode: pulumi.Input<string>;
        /**
         * The state name.
         */
        state: pulumi.Input<string>;
    }

    /**
     * The shipping address of the customer.
     */
    export interface AddressResponse {
        /**
         * The address line1.
         */
        addressLine1: pulumi.Input<string>;
        /**
         * The address line2.
         */
        addressLine2?: pulumi.Input<string>;
        /**
         * The address line3.
         */
        addressLine3?: pulumi.Input<string>;
        /**
         * The city name.
         */
        city: pulumi.Input<string>;
        /**
         * The country name.
         */
        country: pulumi.Input<string>;
        /**
         * The postal code.
         */
        postalCode: pulumi.Input<string>;
        /**
         * The state name.
         */
        state: pulumi.Input<string>;
    }

    /**
     * Represent the secrets intended for encryption with asymmetric key pair.
     */
    export interface AsymmetricEncryptedSecret {
        /**
         * The algorithm used to encrypt "Value".
         */
        encryptionAlgorithm: pulumi.Input<string>;
        /**
         * Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
         */
        encryptionCertThumbprint?: pulumi.Input<string>;
        /**
         * The value of the secret.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Represent the secrets intended for encryption with asymmetric key pair.
     */
    export interface AsymmetricEncryptedSecretResponse {
        /**
         * The algorithm used to encrypt "Value".
         */
        encryptionAlgorithm: pulumi.Input<string>;
        /**
         * Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
         */
        encryptionCertThumbprint?: pulumi.Input<string>;
        /**
         * The value of the secret.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Azure container mapping of the endpoint.
     */
    export interface AzureContainerInfo {
        /**
         * Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
         */
        containerName: pulumi.Input<string>;
        /**
         * Storage format used for the file represented by the share.
         */
        dataFormat: pulumi.Input<string>;
        /**
         * ID of the storage account credential used to access storage.
         */
        storageAccountCredentialId: pulumi.Input<string>;
    }

    /**
     * Azure container mapping of the endpoint.
     */
    export interface AzureContainerInfoResponse {
        /**
         * Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
         */
        containerName: pulumi.Input<string>;
        /**
         * Storage format used for the file represented by the share.
         */
        dataFormat: pulumi.Input<string>;
        /**
         * ID of the storage account credential used to access storage.
         */
        storageAccountCredentialId: pulumi.Input<string>;
    }

    /**
     * The properties of the bandwidth schedule.
     */
    export interface BandwidthScheduleProperties {
        /**
         * The days of the week when this schedule is applicable.
         */
        days: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The bandwidth rate in Mbps.
         */
        rateInMbps: pulumi.Input<number>;
        /**
         * The start time of the schedule in UTC.
         */
        start: pulumi.Input<string>;
        /**
         * The stop time of the schedule in UTC.
         */
        stop: pulumi.Input<string>;
    }

    /**
     * The properties of the bandwidth schedule.
     */
    export interface BandwidthSchedulePropertiesResponse {
        /**
         * The days of the week when this schedule is applicable.
         */
        days: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The bandwidth rate in Mbps.
         */
        rateInMbps: pulumi.Input<number>;
        /**
         * The start time of the schedule in UTC.
         */
        start: pulumi.Input<string>;
        /**
         * The stop time of the schedule in UTC.
         */
        stop: pulumi.Input<string>;
    }

    /**
     * The mapping between a particular client IP and the type of access client has on the NFS share.
     */
    export interface ClientAccessRight {
        /**
         * Type of access to be allowed for the client.
         */
        accessPermission: pulumi.Input<string>;
        /**
         * IP of the client.
         */
        client: pulumi.Input<string>;
    }

    /**
     * The mapping between a particular client IP and the type of access client has on the NFS share.
     */
    export interface ClientAccessRightResponse {
        /**
         * Type of access to be allowed for the client.
         */
        accessPermission: pulumi.Input<string>;
        /**
         * IP of the client.
         */
        client: pulumi.Input<string>;
    }

    /**
     * Contains all the contact details of the customer.
     */
    export interface ContactDetails {
        /**
         * The name of the company.
         */
        companyName: pulumi.Input<string>;
        /**
         * The contact person name.
         */
        contactPerson: pulumi.Input<string>;
        /**
         * The email list.
         */
        emailList: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The phone number.
         */
        phone: pulumi.Input<string>;
    }

    /**
     * Contains all the contact details of the customer.
     */
    export interface ContactDetailsResponse {
        /**
         * The name of the company.
         */
        companyName: pulumi.Input<string>;
        /**
         * The contact person name.
         */
        contactPerson: pulumi.Input<string>;
        /**
         * The email list.
         */
        emailList: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The phone number.
         */
        phone: pulumi.Input<string>;
    }

    /**
     * The container properties.
     */
    export interface ContainerProperties {
        /**
         * DataFormat for Container
         */
        dataFormat: pulumi.Input<string>;
    }

    /**
     * The container properties.
     */
    export interface ContainerPropertiesResponse {
        /**
         * Current status of the container.
         */
        containerStatus: pulumi.Input<string>;
        /**
         * The UTC time when container got created.
         */
        createdDateTime: pulumi.Input<string>;
        /**
         * DataFormat for Container
         */
        dataFormat: pulumi.Input<string>;
        /**
         * Details of the refresh job on this container.
         */
        refreshDetails: pulumi.Input<inputs.databoxedge.RefreshDetailsResponse>;
    }

    /**
     * The properties of the Data Box Edge/Gateway device.
     */
    export interface DataBoxEdgeDeviceProperties {
        /**
         * The status of the Data Box Edge/Gateway device.
         */
        dataBoxEdgeDeviceStatus?: pulumi.Input<string>;
        /**
         * The Description of the Data Box Edge/Gateway device.
         */
        description?: pulumi.Input<string>;
        /**
         * The Data Box Edge/Gateway device name.
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The description of the Data Box Edge/Gateway device model.
         */
        modelDescription?: pulumi.Input<string>;
    }

    /**
     * The properties of the Data Box Edge/Gateway device.
     */
    export interface DataBoxEdgeDevicePropertiesResponse {
        /**
         * Type of compute roles configured.
         */
        configuredRoleTypes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Data Box Edge/Gateway device culture.
         */
        culture: pulumi.Input<string>;
        /**
         * The status of the Data Box Edge/Gateway device.
         */
        dataBoxEdgeDeviceStatus?: pulumi.Input<string>;
        /**
         * The Description of the Data Box Edge/Gateway device.
         */
        description?: pulumi.Input<string>;
        /**
         * The device software version number of the device (eg: 1.2.18105.6).
         */
        deviceHcsVersion: pulumi.Input<string>;
        /**
         * The Data Box Edge/Gateway device local capacity in MB.
         */
        deviceLocalCapacity: pulumi.Input<number>;
        /**
         * The Data Box Edge/Gateway device model.
         */
        deviceModel: pulumi.Input<string>;
        /**
         * The Data Box Edge/Gateway device software version.
         */
        deviceSoftwareVersion: pulumi.Input<string>;
        /**
         * The type of the Data Box Edge/Gateway device.
         */
        deviceType: pulumi.Input<string>;
        /**
         * The Data Box Edge/Gateway device name.
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The description of the Data Box Edge/Gateway device model.
         */
        modelDescription?: pulumi.Input<string>;
        /**
         * The number of nodes in the cluster.
         */
        nodeCount: pulumi.Input<number>;
        /**
         * The Serial Number of Data Box Edge/Gateway device.
         */
        serialNumber: pulumi.Input<string>;
        /**
         * The Data Box Edge/Gateway device timezone.
         */
        timeZone: pulumi.Input<string>;
    }

    /**
     * The share mount point.
     */
    export interface MountPointMapResponse {
        /**
         * Mount point for the share.
         */
        mountPoint: pulumi.Input<string>;
        /**
         * ID of the role to which share is mounted.
         */
        roleId: pulumi.Input<string>;
        /**
         * Role type.
         */
        roleType: pulumi.Input<string>;
        /**
         * ID of the share mounted to the role VM.
         */
        shareId: pulumi.Input<string>;
    }

    /**
     * Order properties.
     */
    export interface OrderProperties {
        /**
         * The contact details.
         */
        contactInformation: pulumi.Input<inputs.databoxedge.ContactDetails>;
        /**
         * Current status of the order.
         */
        currentStatus?: pulumi.Input<inputs.databoxedge.OrderStatus>;
        /**
         * The shipping address.
         */
        shippingAddress: pulumi.Input<inputs.databoxedge.Address>;
    }

    /**
     * Order properties.
     */
    export interface OrderPropertiesResponse {
        /**
         * The contact details.
         */
        contactInformation: pulumi.Input<inputs.databoxedge.ContactDetailsResponse>;
        /**
         * Current status of the order.
         */
        currentStatus?: pulumi.Input<inputs.databoxedge.OrderStatusResponse>;
        /**
         * Tracking information for the package delivered to the customer whether it has an original or a replacement device.
         */
        deliveryTrackingInfo: pulumi.Input<pulumi.Input<inputs.databoxedge.TrackingInfoResponse>[]>;
        /**
         * List of status changes in the order.
         */
        orderHistory: pulumi.Input<pulumi.Input<inputs.databoxedge.OrderStatusResponse>[]>;
        /**
         * Tracking information for the package returned from the customer whether it has an original or a replacement device.
         */
        returnTrackingInfo: pulumi.Input<pulumi.Input<inputs.databoxedge.TrackingInfoResponse>[]>;
        /**
         * Serial number of the device.
         */
        serialNumber: pulumi.Input<string>;
        /**
         * The shipping address.
         */
        shippingAddress: pulumi.Input<inputs.databoxedge.AddressResponse>;
    }

    /**
     * Represents a single status change.
     */
    export interface OrderStatus {
        /**
         * Comments related to this status change.
         */
        comments?: pulumi.Input<string>;
        /**
         * Status of the order as per the allowed status types.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Represents a single status change.
     */
    export interface OrderStatusResponse {
        /**
         * Dictionary to hold generic information which is not stored
         * by the already existing properties
         */
        additionalOrderDetails: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Comments related to this status change.
         */
        comments?: pulumi.Input<string>;
        /**
         * Status of the order as per the allowed status types.
         */
        status: pulumi.Input<string>;
        /**
         * Time of status update.
         */
        updateDateTime: pulumi.Input<string>;
    }

    /**
     * Fields for tracking refresh job on the share or container.
     */
    export interface RefreshDetails {
        /**
         * Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
         */
        errorManifestFile?: pulumi.Input<string>;
        /**
         * If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
         */
        inProgressRefreshJobId?: pulumi.Input<string>;
        /**
         * Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
         */
        lastCompletedRefreshJobTimeInUTC?: pulumi.Input<string>;
        /**
         * Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
         */
        lastJob?: pulumi.Input<string>;
    }

    /**
     * Fields for tracking refresh job on the share or container.
     */
    export interface RefreshDetailsResponse {
        /**
         * Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
         */
        errorManifestFile?: pulumi.Input<string>;
        /**
         * If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
         */
        inProgressRefreshJobId?: pulumi.Input<string>;
        /**
         * Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
         */
        lastCompletedRefreshJobTimeInUTC?: pulumi.Input<string>;
        /**
         * Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
         */
        lastJob?: pulumi.Input<string>;
    }

    /**
     * Specifies the mapping between this particular user and the type of access he has on shares on this device.
     */
    export interface ShareAccessRight {
        /**
         * Type of access to be allowed on the share for this user.
         */
        accessType: pulumi.Input<string>;
        /**
         * The share ID.
         */
        shareId: pulumi.Input<string>;
    }

    /**
     * Specifies the mapping between this particular user and the type of access he has on shares on this device.
     */
    export interface ShareAccessRightResponse {
        /**
         * Type of access to be allowed on the share for this user.
         */
        accessType: pulumi.Input<string>;
        /**
         * The share ID.
         */
        shareId: pulumi.Input<string>;
    }

    /**
     * The share properties.
     */
    export interface ShareProperties {
        /**
         * Access protocol to be used by the share.
         */
        accessProtocol: pulumi.Input<string>;
        /**
         * Azure container mapping for the share.
         */
        azureContainerInfo?: pulumi.Input<inputs.databoxedge.AzureContainerInfo>;
        /**
         * List of IP addresses and corresponding access rights on the share(required for NFS protocol).
         */
        clientAccessRights?: pulumi.Input<pulumi.Input<inputs.databoxedge.ClientAccessRight>[]>;
        /**
         * Data policy of the share.
         */
        dataPolicy?: pulumi.Input<string>;
        /**
         * Description for the share.
         */
        description?: pulumi.Input<string>;
        /**
         * Current monitoring status of the share.
         */
        monitoringStatus: pulumi.Input<string>;
        /**
         * Details of the refresh job on this share.
         */
        refreshDetails?: pulumi.Input<inputs.databoxedge.RefreshDetails>;
        /**
         * Current status of the share.
         */
        shareStatus: pulumi.Input<string>;
        /**
         * Mapping of users and corresponding access rights on the share (required for SMB protocol).
         */
        userAccessRights?: pulumi.Input<pulumi.Input<inputs.databoxedge.UserAccessRight>[]>;
    }

    /**
     * The share properties.
     */
    export interface SharePropertiesResponse {
        /**
         * Access protocol to be used by the share.
         */
        accessProtocol: pulumi.Input<string>;
        /**
         * Azure container mapping for the share.
         */
        azureContainerInfo?: pulumi.Input<inputs.databoxedge.AzureContainerInfoResponse>;
        /**
         * List of IP addresses and corresponding access rights on the share(required for NFS protocol).
         */
        clientAccessRights?: pulumi.Input<pulumi.Input<inputs.databoxedge.ClientAccessRightResponse>[]>;
        /**
         * Data policy of the share.
         */
        dataPolicy?: pulumi.Input<string>;
        /**
         * Description for the share.
         */
        description?: pulumi.Input<string>;
        /**
         * Current monitoring status of the share.
         */
        monitoringStatus: pulumi.Input<string>;
        /**
         * Details of the refresh job on this share.
         */
        refreshDetails?: pulumi.Input<inputs.databoxedge.RefreshDetailsResponse>;
        /**
         * Share mount point to the role.
         */
        shareMappings: pulumi.Input<pulumi.Input<inputs.databoxedge.MountPointMapResponse>[]>;
        /**
         * Current status of the share.
         */
        shareStatus: pulumi.Input<string>;
        /**
         * Mapping of users and corresponding access rights on the share (required for SMB protocol).
         */
        userAccessRights?: pulumi.Input<pulumi.Input<inputs.databoxedge.UserAccessRightResponse>[]>;
    }

    /**
     * The SKU type.
     */
    export interface Sku {
        /**
         * SKU name.
         */
        name?: pulumi.Input<string>;
        /**
         * The SKU tier. This is based on the SKU name.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The SKU type.
     */
    export interface SkuResponse {
        /**
         * SKU name.
         */
        name?: pulumi.Input<string>;
        /**
         * The SKU tier. This is based on the SKU name.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The storage account credential properties.
     */
    export interface StorageAccountCredentialProperties {
        /**
         * Encrypted storage key.
         */
        accountKey?: pulumi.Input<inputs.databoxedge.AsymmetricEncryptedSecret>;
        /**
         * Type of storage accessed on the storage account.
         */
        accountType: pulumi.Input<string>;
        /**
         * Alias for the storage account.
         */
        alias: pulumi.Input<string>;
        /**
         * Blob end point for private clouds.
         */
        blobDomainName?: pulumi.Input<string>;
        /**
         * Connection string for the storage account. Use this string if username and account key are not specified.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * Signifies whether SSL needs to be enabled or not.
         */
        sslStatus: pulumi.Input<string>;
        /**
         * Id of the storage account.
         */
        storageAccountId?: pulumi.Input<string>;
        /**
         * Username for the storage account.
         */
        userName?: pulumi.Input<string>;
    }

    /**
     * The storage account credential properties.
     */
    export interface StorageAccountCredentialPropertiesResponse {
        /**
         * Encrypted storage key.
         */
        accountKey?: pulumi.Input<inputs.databoxedge.AsymmetricEncryptedSecretResponse>;
        /**
         * Type of storage accessed on the storage account.
         */
        accountType: pulumi.Input<string>;
        /**
         * Alias for the storage account.
         */
        alias: pulumi.Input<string>;
        /**
         * Blob end point for private clouds.
         */
        blobDomainName?: pulumi.Input<string>;
        /**
         * Connection string for the storage account. Use this string if username and account key are not specified.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * Signifies whether SSL needs to be enabled or not.
         */
        sslStatus: pulumi.Input<string>;
        /**
         * Id of the storage account.
         */
        storageAccountId?: pulumi.Input<string>;
        /**
         * Username for the storage account.
         */
        userName?: pulumi.Input<string>;
    }

    /**
     * The storage account properties.
     */
    export interface StorageAccountProperties {
        /**
         * Data policy of the storage Account.
         */
        dataPolicy?: pulumi.Input<string>;
        /**
         * Description for the storage Account.
         */
        description?: pulumi.Input<string>;
        /**
         * Storage Account Credential Id
         */
        storageAccountCredentialId?: pulumi.Input<string>;
        /**
         * Current status of the storage account
         */
        storageAccountStatus?: pulumi.Input<string>;
    }

    /**
     * The storage account properties.
     */
    export interface StorageAccountPropertiesResponse {
        /**
         * BlobEndpoint of Storage Account
         */
        blobEndpoint: pulumi.Input<string>;
        /**
         * The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
         */
        containerCount: pulumi.Input<number>;
        /**
         * Data policy of the storage Account.
         */
        dataPolicy?: pulumi.Input<string>;
        /**
         * Description for the storage Account.
         */
        description?: pulumi.Input<string>;
        /**
         * Storage Account Credential Id
         */
        storageAccountCredentialId?: pulumi.Input<string>;
        /**
         * Current status of the storage account
         */
        storageAccountStatus?: pulumi.Input<string>;
    }

    /**
     * Tracking courier information.
     */
    export interface TrackingInfoResponse {
        /**
         * Name of the carrier used in the delivery.
         */
        carrierName?: pulumi.Input<string>;
        /**
         * Serial number of the device being tracked.
         */
        serialNumber?: pulumi.Input<string>;
        /**
         * Tracking ID of the shipment.
         */
        trackingId?: pulumi.Input<string>;
        /**
         * Tracking URL of the shipment.
         */
        trackingUrl?: pulumi.Input<string>;
    }

    /**
     * The mapping between a particular user and the access type on the SMB share.
     */
    export interface UserAccessRight {
        /**
         * Type of access to be allowed for the user.
         */
        accessType: pulumi.Input<string>;
        /**
         * User ID (already existing in the device).
         */
        userId: pulumi.Input<string>;
    }

    /**
     * The mapping between a particular user and the access type on the SMB share.
     */
    export interface UserAccessRightResponse {
        /**
         * Type of access to be allowed for the user.
         */
        accessType: pulumi.Input<string>;
        /**
         * User ID (already existing in the device).
         */
        userId: pulumi.Input<string>;
    }

    /**
     * The user properties.
     */
    export interface UserProperties {
        /**
         * The password details.
         */
        encryptedPassword?: pulumi.Input<inputs.databoxedge.AsymmetricEncryptedSecret>;
        /**
         * List of shares that the user has rights on. This field should not be specified during user creation.
         */
        shareAccessRights?: pulumi.Input<pulumi.Input<inputs.databoxedge.ShareAccessRight>[]>;
        /**
         * Type of the user.
         */
        userType: pulumi.Input<string>;
    }

    /**
     * The user properties.
     */
    export interface UserPropertiesResponse {
        /**
         * The password details.
         */
        encryptedPassword?: pulumi.Input<inputs.databoxedge.AsymmetricEncryptedSecretResponse>;
        /**
         * List of shares that the user has rights on. This field should not be specified during user creation.
         */
        shareAccessRights?: pulumi.Input<pulumi.Input<inputs.databoxedge.ShareAccessRightResponse>[]>;
        /**
         * Type of the user.
         */
        userType: pulumi.Input<string>;
    }
}

export namespace databricks {
    /**
     * AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
     */
    export interface AddressSpace {
        /**
         * A list of address blocks reserved for this virtual network in CIDR notation.
         */
        addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
     */
    export interface AddressSpaceResponse {
        /**
         * A list of address blocks reserved for this virtual network in CIDR notation.
         */
        addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Provides details of the entity that created/updated the workspace.
     */
    export interface CreatedBy {
    }

    /**
     * Provides details of the entity that created/updated the workspace.
     */
    export interface CreatedByResponse {
        /**
         * The application ID of the application that initiated the creation of the workspace. For example, Azure Portal.
         */
        applicationId: pulumi.Input<string>;
        /**
         * The Object ID that created the workspace.
         */
        oid: pulumi.Input<string>;
        /**
         * The Personal Object ID corresponding to the object ID above
         */
        puid: pulumi.Input<string>;
    }

    /**
     * The object that contains details of encryption used on the workspace.
     */
    export interface Encryption {
        /**
         * The name of KeyVault key.
         */
        KeyName?: pulumi.Input<string>;
        /**
         * The encryption keySource (provider). Possible values (case-insensitive):  Default, Microsoft.Keyvault
         */
        keySource?: pulumi.Input<string>;
        /**
         * The Uri of KeyVault.
         */
        keyvaulturi?: pulumi.Input<string>;
        /**
         * The version of KeyVault key.
         */
        keyversion?: pulumi.Input<string>;
    }

    /**
     * The object that contains details of encryption used on the workspace.
     */
    export interface EncryptionResponse {
        /**
         * The name of KeyVault key.
         */
        KeyName?: pulumi.Input<string>;
        /**
         * The encryption keySource (provider). Possible values (case-insensitive):  Default, Microsoft.Keyvault
         */
        keySource?: pulumi.Input<string>;
        /**
         * The Uri of KeyVault.
         */
        keyvaulturi?: pulumi.Input<string>;
        /**
         * The version of KeyVault key.
         */
        keyversion?: pulumi.Input<string>;
    }

    /**
     * The Managed Identity details for storage account.
     */
    export interface ManagedIdentityConfiguration {
    }

    /**
     * The Managed Identity details for storage account.
     */
    export interface ManagedIdentityConfigurationResponse {
        /**
         * The objectId of the Managed Identity that is linked to the Managed Storage account.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant Id where the Managed Identity is created.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of Identity created. It can be either SystemAssigned or UserAssigned.
         */
        type: pulumi.Input<string>;
    }

    /**
     * SKU for the resource.
     */
    export interface Sku {
        /**
         * The SKU name.
         */
        name: pulumi.Input<string>;
        /**
         * The SKU tier.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * SKU for the resource.
     */
    export interface SkuResponse {
        /**
         * The SKU name.
         */
        name: pulumi.Input<string>;
        /**
         * The SKU tier.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Properties of the virtual network peering.
     */
    export interface VirtualNetworkPeeringPropertiesFormat {
        /**
         * Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
         */
        allowForwardedTraffic?: pulumi.Input<boolean>;
        /**
         * If gateway links can be used in remote virtual networking to link to this virtual network.
         */
        allowGatewayTransit?: pulumi.Input<boolean>;
        /**
         * Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
         */
        allowVirtualNetworkAccess?: pulumi.Input<boolean>;
        /**
         * The reference to the databricks virtual network address space.
         */
        databricksAddressSpace?: pulumi.Input<inputs.databricks.AddressSpace>;
        /**
         *  The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).
         */
        databricksVirtualNetwork?: pulumi.Input<inputs.databricks.VirtualNetworkPeeringPropertiesFormatProperties>;
        /**
         * The reference to the remote virtual network address space.
         */
        remoteAddressSpace?: pulumi.Input<inputs.databricks.AddressSpace>;
        /**
         *  The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).
         */
        remoteVirtualNetwork: pulumi.Input<inputs.databricks.VirtualNetworkPeeringPropertiesFormatProperties>;
        /**
         * If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
         */
        useRemoteGateways?: pulumi.Input<boolean>;
    }

    /**
     *  The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).
     */
    export interface VirtualNetworkPeeringPropertiesFormatProperties {
        /**
         * The Id of the databricks virtual network.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Properties of the virtual network peering.
     */
    export interface VirtualNetworkPeeringPropertiesFormatResponse {
        /**
         * Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
         */
        allowForwardedTraffic?: pulumi.Input<boolean>;
        /**
         * If gateway links can be used in remote virtual networking to link to this virtual network.
         */
        allowGatewayTransit?: pulumi.Input<boolean>;
        /**
         * Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
         */
        allowVirtualNetworkAccess?: pulumi.Input<boolean>;
        /**
         * The reference to the databricks virtual network address space.
         */
        databricksAddressSpace?: pulumi.Input<inputs.databricks.AddressSpaceResponse>;
        /**
         *  The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).
         */
        databricksVirtualNetwork?: pulumi.Input<inputs.databricks.VirtualNetworkPeeringPropertiesFormatResponseProperties>;
        /**
         * The status of the virtual network peering.
         */
        peeringState: pulumi.Input<string>;
        /**
         * The provisioning state of the virtual network peering resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the remote virtual network address space.
         */
        remoteAddressSpace?: pulumi.Input<inputs.databricks.AddressSpaceResponse>;
        /**
         *  The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).
         */
        remoteVirtualNetwork: pulumi.Input<inputs.databricks.VirtualNetworkPeeringPropertiesFormatResponseProperties>;
        /**
         * If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
         */
        useRemoteGateways?: pulumi.Input<boolean>;
    }

    /**
     *  The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).
     */
    export interface VirtualNetworkPeeringPropertiesFormatResponseProperties {
        /**
         * The Id of the databricks virtual network.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The value which should be used for this field.
     */
    export interface WorkspaceCustomBooleanParameter {
        /**
         * The type of variable that this is
         */
        type?: pulumi.Input<string>;
        /**
         * The value which should be used for this field.
         */
        value: pulumi.Input<boolean>;
    }

    /**
     * The value which should be used for this field.
     */
    export interface WorkspaceCustomBooleanParameterResponse {
        /**
         * The type of variable that this is
         */
        type?: pulumi.Input<string>;
        /**
         * The value which should be used for this field.
         */
        value: pulumi.Input<boolean>;
    }

    /**
     * Custom Parameters used for Cluster Creation.
     */
    export interface WorkspaceCustomParameters {
        /**
         * The name of the Private Subnet within the Virtual Network
         */
        customPrivateSubnetName?: pulumi.Input<inputs.databricks.WorkspaceCustomStringParameter>;
        /**
         * The name of a Public Subnet within the Virtual Network
         */
        customPublicSubnetName?: pulumi.Input<inputs.databricks.WorkspaceCustomStringParameter>;
        /**
         * The ID of a Virtual Network where this Databricks Cluster should be created
         */
        customVirtualNetworkId?: pulumi.Input<inputs.databricks.WorkspaceCustomStringParameter>;
        /**
         * Should the Public IP be Disabled?
         */
        enableNoPublicIp?: pulumi.Input<inputs.databricks.WorkspaceCustomBooleanParameter>;
        /**
         * Contains the encryption details for Customer-Managed Key (CMK) enabled workspace.
         */
        encryption?: pulumi.Input<inputs.databricks.WorkspaceEncryptionParameter>;
        /**
         * Prepare the workspace for encryption. Enables the Managed Identity for managed storage account.
         */
        prepareEncryption?: pulumi.Input<inputs.databricks.WorkspaceCustomBooleanParameter>;
    }

    /**
     * Custom Parameters used for Cluster Creation.
     */
    export interface WorkspaceCustomParametersResponse {
        /**
         * The name of the Private Subnet within the Virtual Network
         */
        customPrivateSubnetName?: pulumi.Input<inputs.databricks.WorkspaceCustomStringParameterResponse>;
        /**
         * The name of a Public Subnet within the Virtual Network
         */
        customPublicSubnetName?: pulumi.Input<inputs.databricks.WorkspaceCustomStringParameterResponse>;
        /**
         * The ID of a Virtual Network where this Databricks Cluster should be created
         */
        customVirtualNetworkId?: pulumi.Input<inputs.databricks.WorkspaceCustomStringParameterResponse>;
        /**
         * Should the Public IP be Disabled?
         */
        enableNoPublicIp?: pulumi.Input<inputs.databricks.WorkspaceCustomBooleanParameterResponse>;
        /**
         * Contains the encryption details for Customer-Managed Key (CMK) enabled workspace.
         */
        encryption?: pulumi.Input<inputs.databricks.WorkspaceEncryptionParameterResponse>;
        /**
         * Prepare the workspace for encryption. Enables the Managed Identity for managed storage account.
         */
        prepareEncryption?: pulumi.Input<inputs.databricks.WorkspaceCustomBooleanParameterResponse>;
    }

    /**
     * The Value.
     */
    export interface WorkspaceCustomStringParameter {
        /**
         * The type of variable that this is
         */
        type?: pulumi.Input<string>;
        /**
         * The value which should be used for this field.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The Value.
     */
    export interface WorkspaceCustomStringParameterResponse {
        /**
         * The type of variable that this is
         */
        type?: pulumi.Input<string>;
        /**
         * The value which should be used for this field.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The object that contains details of encryption used on the workspace.
     */
    export interface WorkspaceEncryptionParameter {
        /**
         * The type of variable that this is
         */
        type?: pulumi.Input<string>;
        /**
         * The value which should be used for this field.
         */
        value?: pulumi.Input<inputs.databricks.Encryption>;
    }

    /**
     * The object that contains details of encryption used on the workspace.
     */
    export interface WorkspaceEncryptionParameterResponse {
        /**
         * The type of variable that this is
         */
        type?: pulumi.Input<string>;
        /**
         * The value which should be used for this field.
         */
        value?: pulumi.Input<inputs.databricks.EncryptionResponse>;
    }

    /**
     * The workspace properties.
     */
    export interface WorkspaceProperties {
        /**
         * The workspace provider authorizations.
         */
        authorizations?: pulumi.Input<pulumi.Input<inputs.databricks.WorkspaceProviderAuthorization>[]>;
        /**
         * Indicates the Object ID, PUID and Application ID of entity that created the workspace.
         */
        createdBy?: pulumi.Input<inputs.databricks.CreatedBy>;
        /**
         * Specifies the date and time when the workspace is created.
         */
        createdDateTime?: pulumi.Input<string>;
        /**
         * The managed resource group Id.
         */
        managedResourceGroupId: pulumi.Input<string>;
        /**
         * The workspace's custom parameters.
         */
        parameters?: pulumi.Input<inputs.databricks.WorkspaceCustomParameters>;
        /**
         * The details of Managed Identity of Storage Account
         */
        storageAccountIdentity?: pulumi.Input<inputs.databricks.ManagedIdentityConfiguration>;
        /**
         * The blob URI where the UI definition file is located.
         */
        uiDefinitionUri?: pulumi.Input<string>;
        /**
         * Indicates the Object ID, PUID and Application ID of entity that last updated the workspace.
         */
        updatedBy?: pulumi.Input<inputs.databricks.CreatedBy>;
    }

    /**
     * The workspace properties.
     */
    export interface WorkspacePropertiesResponse {
        /**
         * The workspace provider authorizations.
         */
        authorizations?: pulumi.Input<pulumi.Input<inputs.databricks.WorkspaceProviderAuthorizationResponse>[]>;
        /**
         * Indicates the Object ID, PUID and Application ID of entity that created the workspace.
         */
        createdBy?: pulumi.Input<inputs.databricks.CreatedByResponse>;
        /**
         * Specifies the date and time when the workspace is created.
         */
        createdDateTime?: pulumi.Input<string>;
        /**
         * The managed resource group Id.
         */
        managedResourceGroupId: pulumi.Input<string>;
        /**
         * The workspace's custom parameters.
         */
        parameters?: pulumi.Input<inputs.databricks.WorkspaceCustomParametersResponse>;
        /**
         * The workspace provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The details of Managed Identity of Storage Account
         */
        storageAccountIdentity?: pulumi.Input<inputs.databricks.ManagedIdentityConfigurationResponse>;
        /**
         * The blob URI where the UI definition file is located.
         */
        uiDefinitionUri?: pulumi.Input<string>;
        /**
         * Indicates the Object ID, PUID and Application ID of entity that last updated the workspace.
         */
        updatedBy?: pulumi.Input<inputs.databricks.CreatedByResponse>;
        /**
         * The unique identifier of the databricks workspace in databricks control plane.
         */
        workspaceId: pulumi.Input<string>;
        /**
         * The workspace URL which is of the format 'adb-{workspaceId}.{random}.azuredatabricks.net'
         */
        workspaceUrl: pulumi.Input<string>;
    }

    /**
     * The workspace provider authorization.
     */
    export interface WorkspaceProviderAuthorization {
        /**
         * The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the workspace resources.
         */
        principalId: pulumi.Input<string>;
        /**
         * The provider's role definition identifier. This role will define all the permissions that the provider must have on the workspace's container resource group. This role definition cannot have permission to delete the resource group.
         */
        roleDefinitionId: pulumi.Input<string>;
    }

    /**
     * The workspace provider authorization.
     */
    export interface WorkspaceProviderAuthorizationResponse {
        /**
         * The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the workspace resources.
         */
        principalId: pulumi.Input<string>;
        /**
         * The provider's role definition identifier. This role will define all the permissions that the provider must have on the workspace's container resource group. This role definition cannot have permission to delete the resource group.
         */
        roleDefinitionId: pulumi.Input<string>;
    }

}

export namespace datacatalog {
    /**
     * Properties of the data catalog.
     */
    export interface ADCCatalogProperties {
        /**
         * Azure data catalog admin list.
         */
        admins?: pulumi.Input<pulumi.Input<inputs.datacatalog.Principals>[]>;
        /**
         * Automatic unit adjustment enabled or not.
         */
        enableAutomaticUnitAdjustment?: pulumi.Input<boolean>;
        /**
         * Azure data catalog SKU.
         */
        sku?: pulumi.Input<string>;
        /**
         * Azure data catalog provision status.
         */
        successfullyProvisioned?: pulumi.Input<boolean>;
        /**
         * Azure data catalog units.
         */
        units?: pulumi.Input<number>;
        /**
         * Azure data catalog user list.
         */
        users?: pulumi.Input<pulumi.Input<inputs.datacatalog.Principals>[]>;
    }

    /**
     * Properties of the data catalog.
     */
    export interface ADCCatalogPropertiesResponse {
        /**
         * Azure data catalog admin list.
         */
        admins?: pulumi.Input<pulumi.Input<inputs.datacatalog.PrincipalsResponse>[]>;
        /**
         * Automatic unit adjustment enabled or not.
         */
        enableAutomaticUnitAdjustment?: pulumi.Input<boolean>;
        /**
         * Azure data catalog SKU.
         */
        sku?: pulumi.Input<string>;
        /**
         * Azure data catalog provision status.
         */
        successfullyProvisioned?: pulumi.Input<boolean>;
        /**
         * Azure data catalog units.
         */
        units?: pulumi.Input<number>;
        /**
         * Azure data catalog user list.
         */
        users?: pulumi.Input<pulumi.Input<inputs.datacatalog.PrincipalsResponse>[]>;
    }

    /**
     * User principals.
     */
    export interface Principals {
        /**
         * Object Id for the user
         */
        objectId?: pulumi.Input<string>;
        /**
         * UPN of the user.
         */
        upn?: pulumi.Input<string>;
    }

    /**
     * User principals.
     */
    export interface PrincipalsResponse {
        /**
         * Object Id for the user
         */
        objectId?: pulumi.Input<string>;
        /**
         * UPN of the user.
         */
        upn?: pulumi.Input<string>;
    }
}

export namespace datafactory {
    /**
     * A pipeline activity.
     */
    export interface Activity {
        /**
         * Activity depends on condition.
         */
        dependsOn?: pulumi.Input<pulumi.Input<inputs.datafactory.ActivityDependency>[]>;
        /**
         * Activity description.
         */
        description?: pulumi.Input<string>;
        /**
         * Activity name.
         */
        name: pulumi.Input<string>;
        /**
         * Type of activity.
         */
        type: pulumi.Input<string>;
        /**
         * Activity user properties.
         */
        userProperties?: pulumi.Input<pulumi.Input<inputs.datafactory.UserProperty>[]>;
    }

    /**
     * Activity dependency information.
     */
    export interface ActivityDependency {
        /**
         * Activity name.
         */
        activity: pulumi.Input<string>;
        /**
         * Match-Condition for the dependency.
         */
        dependencyConditions: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Activity dependency information.
     */
    export interface ActivityDependencyResponse {
        /**
         * Activity name.
         */
        activity: pulumi.Input<string>;
        /**
         * Match-Condition for the dependency.
         */
        dependencyConditions: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A pipeline activity.
     */
    export interface ActivityResponse {
        /**
         * Activity depends on condition.
         */
        dependsOn?: pulumi.Input<pulumi.Input<inputs.datafactory.ActivityDependencyResponse>[]>;
        /**
         * Activity description.
         */
        description?: pulumi.Input<string>;
        /**
         * Activity name.
         */
        name: pulumi.Input<string>;
        /**
         * Type of activity.
         */
        type: pulumi.Input<string>;
        /**
         * Activity user properties.
         */
        userProperties?: pulumi.Input<pulumi.Input<inputs.datafactory.UserPropertyResponse>[]>;
    }

    /**
     * Azure Data Factory nested object which contains a flow with data movements and transformations.
     */
    export interface DataFlow {
        /**
         * List of tags that can be used for describing the data flow.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * The description of the data flow.
         */
        description?: pulumi.Input<string>;
        /**
         * The folder that this data flow is in. If not specified, Data flow will appear at the root level.
         */
        folder?: pulumi.Input<inputs.datafactory.DataFlowProperties>;
        /**
         * Type of data flow.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The folder that this data flow is in. If not specified, Data flow will appear at the root level.
     */
    export interface DataFlowProperties {
        /**
         * The name of the folder that this data flow is in.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Azure Data Factory nested object which contains a flow with data movements and transformations.
     */
    export interface DataFlowResponse {
        /**
         * List of tags that can be used for describing the data flow.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * The description of the data flow.
         */
        description?: pulumi.Input<string>;
        /**
         * The folder that this data flow is in. If not specified, Data flow will appear at the root level.
         */
        folder?: pulumi.Input<inputs.datafactory.DataFlowResponseProperties>;
        /**
         * Type of data flow.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The folder that this data flow is in. If not specified, Data flow will appear at the root level.
     */
    export interface DataFlowResponseProperties {
        /**
         * The name of the folder that this data flow is in.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents.
     */
    export interface Dataset {
        /**
         * List of tags that can be used for describing the Dataset.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * Dataset description.
         */
        description?: pulumi.Input<string>;
        /**
         * The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
         */
        folder?: pulumi.Input<inputs.datafactory.DatasetProperties>;
        /**
         * Linked service reference.
         */
        linkedServiceName: pulumi.Input<inputs.datafactory.LinkedServiceReference>;
        /**
         * Parameters for dataset.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterDefinitionSpecification>;
        /**
         * Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.
         */
        schema?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
         */
        structure?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Type of dataset.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
     */
    export interface DatasetProperties {
        /**
         * The name of the folder that this Dataset is in.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents.
     */
    export interface DatasetResponse {
        /**
         * List of tags that can be used for describing the Dataset.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * Dataset description.
         */
        description?: pulumi.Input<string>;
        /**
         * The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
         */
        folder?: pulumi.Input<inputs.datafactory.DatasetResponseProperties>;
        /**
         * Linked service reference.
         */
        linkedServiceName: pulumi.Input<inputs.datafactory.LinkedServiceReferenceResponse>;
        /**
         * Parameters for dataset.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterDefinitionSpecificationResponse>;
        /**
         * Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.
         */
        schema?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
         */
        structure?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Type of dataset.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
     */
    export interface DatasetResponseProperties {
        /**
         * The name of the folder that this Dataset is in.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Identity properties of the factory resource.
     */
    export interface FactoryIdentity {
        /**
         * The identity type. Currently the only supported type is 'SystemAssigned'.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Identity properties of the factory resource.
     */
    export interface FactoryIdentityResponse {
        /**
         * The principal id of the identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The client tenant id of the identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type. Currently the only supported type is 'SystemAssigned'.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Factory resource properties.
     */
    export interface FactoryProperties {
        /**
         * List of parameters for factory.
         */
        globalParameters?: pulumi.Input<inputs.datafactory.GlobalParameterDefinitionSpecification>;
        /**
         * Git repo information of the factory.
         */
        repoConfiguration?: pulumi.Input<inputs.datafactory.FactoryRepoConfiguration>;
    }

    /**
     * Factory resource properties.
     */
    export interface FactoryPropertiesResponse {
        /**
         * Time the factory was created in ISO8601 format.
         */
        createTime: pulumi.Input<string>;
        /**
         * List of parameters for factory.
         */
        globalParameters?: pulumi.Input<inputs.datafactory.GlobalParameterDefinitionSpecificationResponse>;
        /**
         * Factory provisioning state, example Succeeded.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Git repo information of the factory.
         */
        repoConfiguration?: pulumi.Input<inputs.datafactory.FactoryRepoConfigurationResponse>;
        /**
         * Version of the factory.
         */
        version: pulumi.Input<string>;
    }

    /**
     * Factory's git repo information.
     */
    export interface FactoryRepoConfiguration {
        /**
         * Account name.
         */
        accountName: pulumi.Input<string>;
        /**
         * Collaboration branch.
         */
        collaborationBranch: pulumi.Input<string>;
        /**
         * Last commit id.
         */
        lastCommitId?: pulumi.Input<string>;
        /**
         * Repository name.
         */
        repositoryName: pulumi.Input<string>;
        /**
         * Root folder.
         */
        rootFolder: pulumi.Input<string>;
        /**
         * Type of repo configuration.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Factory's git repo information.
     */
    export interface FactoryRepoConfigurationResponse {
        /**
         * Account name.
         */
        accountName: pulumi.Input<string>;
        /**
         * Collaboration branch.
         */
        collaborationBranch: pulumi.Input<string>;
        /**
         * Last commit id.
         */
        lastCommitId?: pulumi.Input<string>;
        /**
         * Repository name.
         */
        repositoryName: pulumi.Input<string>;
        /**
         * Root folder.
         */
        rootFolder: pulumi.Input<string>;
        /**
         * Type of repo configuration.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Definition of all parameters for an entity.
     */
    export interface GlobalParameterDefinitionSpecification {
    }

    /**
     * Definition of all parameters for an entity.
     */
    export interface GlobalParameterDefinitionSpecificationResponse {
    }

    /**
     * Azure Data Factory nested object which serves as a compute resource for activities.
     */
    export interface IntegrationRuntime {
        /**
         * Integration runtime description.
         */
        description?: pulumi.Input<string>;
        /**
         * Type of integration runtime.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Integration runtime reference type.
     */
    export interface IntegrationRuntimeReference {
        /**
         * Arguments for integration runtime.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterValueSpecification>;
        /**
         * Reference integration runtime name.
         */
        referenceName: pulumi.Input<string>;
        /**
         * Type of integration runtime.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Integration runtime reference type.
     */
    export interface IntegrationRuntimeReferenceResponse {
        /**
         * Arguments for integration runtime.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterValueSpecificationResponse>;
        /**
         * Reference integration runtime name.
         */
        referenceName: pulumi.Input<string>;
        /**
         * Type of integration runtime.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Azure Data Factory nested object which serves as a compute resource for activities.
     */
    export interface IntegrationRuntimeResponse {
        /**
         * Integration runtime description.
         */
        description?: pulumi.Input<string>;
        /**
         * Type of integration runtime.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.
     */
    export interface LinkedService {
        /**
         * List of tags that can be used for describing the linked service.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * The integration runtime reference.
         */
        connectVia?: pulumi.Input<inputs.datafactory.IntegrationRuntimeReference>;
        /**
         * Linked service description.
         */
        description?: pulumi.Input<string>;
        /**
         * Parameters for linked service.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterDefinitionSpecification>;
        /**
         * Type of linked service.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Linked service reference type.
     */
    export interface LinkedServiceReference {
        /**
         * Arguments for LinkedService.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterValueSpecification>;
        /**
         * Reference LinkedService name.
         */
        referenceName: pulumi.Input<string>;
        /**
         * Linked service reference type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Linked service reference type.
     */
    export interface LinkedServiceReferenceResponse {
        /**
         * Arguments for LinkedService.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterValueSpecificationResponse>;
        /**
         * Reference LinkedService name.
         */
        referenceName: pulumi.Input<string>;
        /**
         * Linked service reference type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.
     */
    export interface LinkedServiceResponse {
        /**
         * List of tags that can be used for describing the linked service.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * The integration runtime reference.
         */
        connectVia?: pulumi.Input<inputs.datafactory.IntegrationRuntimeReferenceResponse>;
        /**
         * Linked service description.
         */
        description?: pulumi.Input<string>;
        /**
         * Parameters for linked service.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterDefinitionSpecificationResponse>;
        /**
         * Type of linked service.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Definition of all parameters for an entity.
     */
    export interface ParameterDefinitionSpecification {
    }

    /**
     * Definition of all parameters for an entity.
     */
    export interface ParameterDefinitionSpecificationResponse {
    }

    /**
     * An object mapping parameter names to argument values.
     */
    export interface ParameterValueSpecification {
    }

    /**
     * An object mapping parameter names to argument values.
     */
    export interface ParameterValueSpecificationResponse {
    }

    /**
     * A data factory pipeline.
     */
    export interface Pipeline {
        /**
         * List of activities in pipeline.
         */
        activities?: pulumi.Input<pulumi.Input<inputs.datafactory.Activity>[]>;
        /**
         * List of tags that can be used for describing the Pipeline.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * The max number of concurrent runs for the pipeline.
         */
        concurrency?: pulumi.Input<number>;
        /**
         * The description of the pipeline.
         */
        description?: pulumi.Input<string>;
        /**
         * The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
         */
        folder?: pulumi.Input<inputs.datafactory.PipelineProperties>;
        /**
         * List of parameters for pipeline.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterDefinitionSpecification>;
        /**
         * Dimensions emitted by Pipeline.
         */
        runDimensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * List of variables for pipeline.
         */
        variables?: pulumi.Input<inputs.datafactory.VariableDefinitionSpecification>;
    }

    /**
     * The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
     */
    export interface PipelineProperties {
        /**
         * The name of the folder that this Pipeline is in.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * A data factory pipeline.
     */
    export interface PipelineResponse {
        /**
         * List of activities in pipeline.
         */
        activities?: pulumi.Input<pulumi.Input<inputs.datafactory.ActivityResponse>[]>;
        /**
         * List of tags that can be used for describing the Pipeline.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * The max number of concurrent runs for the pipeline.
         */
        concurrency?: pulumi.Input<number>;
        /**
         * The description of the pipeline.
         */
        description?: pulumi.Input<string>;
        /**
         * The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
         */
        folder?: pulumi.Input<inputs.datafactory.PipelineResponseProperties>;
        /**
         * List of parameters for pipeline.
         */
        parameters?: pulumi.Input<inputs.datafactory.ParameterDefinitionSpecificationResponse>;
        /**
         * Dimensions emitted by Pipeline.
         */
        runDimensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * List of variables for pipeline.
         */
        variables?: pulumi.Input<inputs.datafactory.VariableDefinitionSpecificationResponse>;
    }

    /**
     * The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
     */
    export interface PipelineResponseProperties {
        /**
         * The name of the folder that this Pipeline is in.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Azure data factory nested object which contains information about creating pipeline run
     */
    export interface Trigger {
        /**
         * List of tags that can be used for describing the trigger.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * Trigger description.
         */
        description?: pulumi.Input<string>;
        /**
         * Trigger type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Azure data factory nested object which contains information about creating pipeline run
     */
    export interface TriggerResponse {
        /**
         * List of tags that can be used for describing the trigger.
         */
        annotations?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * Trigger description.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
         */
        runtimeState: pulumi.Input<string>;
        /**
         * Trigger type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * User property.
     */
    export interface UserProperty {
        /**
         * User property name.
         */
        name: pulumi.Input<string>;
        /**
         * User property value. Type: string (or Expression with resultType string).
         */
        value: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * User property.
     */
    export interface UserPropertyResponse {
        /**
         * User property name.
         */
        name: pulumi.Input<string>;
        /**
         * User property value. Type: string (or Expression with resultType string).
         */
        value: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Definition of variable for a Pipeline.
     */
    export interface VariableDefinitionSpecification {
    }

    /**
     * Definition of variable for a Pipeline.
     */
    export interface VariableDefinitionSpecificationResponse {
    }
}

export namespace datalakeanalytics {
    /**
     * The Data Lake Store account properties to use when adding a new Data Lake Store account.
     */
    export interface AddDataLakeStoreProperties {
        /**
         * The optional suffix for the Data Lake Store account.
         */
        suffix?: pulumi.Input<string>;
    }

    /**
     * The parameters used to add a new Data Lake Store account while creating a new Data Lake Analytics account.
     */
    export interface AddDataLakeStoreWithAccountParameters {
        /**
         * The unique name of the Data Lake Store account to add.
         */
        name: pulumi.Input<string>;
        /**
         * The Data Lake Store account properties to use when adding a new Data Lake Store account.
         */
        properties?: pulumi.Input<inputs.datalakeanalytics.AddDataLakeStoreProperties>;
    }

    /**
     * The Azure Storage account properties to use when adding a new Azure Storage account.
     */
    export interface AddStorageAccountProperties {
        /**
         * The access key associated with this Azure Storage account that will be used to connect to it.
         */
        accessKey: pulumi.Input<string>;
        /**
         * The optional suffix for the storage account.
         */
        suffix?: pulumi.Input<string>;
    }

    /**
     * The parameters used to add a new Azure Storage account while creating a new Data Lake Analytics account.
     */
    export interface AddStorageAccountWithAccountParameters {
        /**
         * The unique name of the Azure Storage account to add.
         */
        name: pulumi.Input<string>;
        /**
         * The Azure Storage account properties to use when adding a new Azure Storage account.
         */
        properties: pulumi.Input<inputs.datalakeanalytics.AddStorageAccountProperties>;
    }

    /**
     * The compute policy properties.
     */
    export interface ComputePolicyPropertiesResponse {
        /**
         * The maximum degree of parallelism per job this user can use to submit jobs.
         */
        maxDegreeOfParallelismPerJob: pulumi.Input<number>;
        /**
         * The minimum priority per job this user can use to submit jobs.
         */
        minPriorityPerJob: pulumi.Input<number>;
        /**
         * The AAD object identifier for the entity to create a policy for.
         */
        objectId: pulumi.Input<string>;
        /**
         * The type of AAD object the object identifier refers to.
         */
        objectType: pulumi.Input<string>;
    }

    /**
     * Data Lake Analytics compute policy information.
     */
    export interface ComputePolicyResponse {
        /**
         * The resource identifier.
         */
        id: pulumi.Input<string>;
        /**
         * The resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The compute policy properties.
         */
        properties: pulumi.Input<inputs.datalakeanalytics.ComputePolicyPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The parameters used to create a new compute policy while creating a new Data Lake Analytics account.
     */
    export interface CreateComputePolicyWithAccountParameters {
        /**
         * The unique name of the compute policy to create.
         */
        name: pulumi.Input<string>;
        /**
         * The compute policy properties to use when creating a new compute policy.
         */
        properties: pulumi.Input<inputs.datalakeanalytics.CreateOrUpdateComputePolicyProperties>;
    }

    export interface CreateDataLakeAnalyticsAccountProperties {
        /**
         * The list of compute policies associated with this account.
         */
        computePolicies?: pulumi.Input<pulumi.Input<inputs.datalakeanalytics.CreateComputePolicyWithAccountParameters>[]>;
        /**
         * The list of Data Lake Store accounts associated with this account.
         */
        dataLakeStoreAccounts: pulumi.Input<pulumi.Input<inputs.datalakeanalytics.AddDataLakeStoreWithAccountParameters>[]>;
        /**
         * The default Data Lake Store account associated with this account.
         */
        defaultDataLakeStoreAccount: pulumi.Input<string>;
        /**
         * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
         */
        firewallAllowAzureIps?: pulumi.Input<string>;
        /**
         * The list of firewall rules associated with this account.
         */
        firewallRules?: pulumi.Input<pulumi.Input<inputs.datalakeanalytics.CreateFirewallRuleWithAccountParameters>[]>;
        /**
         * The current state of the IP address firewall for this account.
         */
        firewallState?: pulumi.Input<string>;
        /**
         * The maximum supported degree of parallelism for this account.
         */
        maxDegreeOfParallelism?: pulumi.Input<number>;
        /**
         * The maximum supported degree of parallelism per job for this account.
         */
        maxDegreeOfParallelismPerJob?: pulumi.Input<number>;
        /**
         * The maximum supported jobs running under the account at the same time.
         */
        maxJobCount?: pulumi.Input<number>;
        /**
         * The minimum supported priority per job for this account.
         */
        minPriorityPerJob?: pulumi.Input<number>;
        /**
         * The commitment tier for the next month.
         */
        newTier?: pulumi.Input<string>;
        /**
         * The number of days that job metadata is retained.
         */
        queryStoreRetention?: pulumi.Input<number>;
        /**
         * The list of Azure Blob Storage accounts associated with this account.
         */
        storageAccounts?: pulumi.Input<pulumi.Input<inputs.datalakeanalytics.AddStorageAccountWithAccountParameters>[]>;
    }

    /**
     * The parameters used to create a new firewall rule while creating a new Data Lake Analytics account.
     */
    export interface CreateFirewallRuleWithAccountParameters {
        /**
         * The unique name of the firewall rule to create.
         */
        name: pulumi.Input<string>;
        /**
         * The firewall rule properties to use when creating a new firewall rule.
         */
        properties: pulumi.Input<inputs.datalakeanalytics.CreateOrUpdateFirewallRuleProperties>;
    }

    /**
     * The compute policy properties to use when creating a new compute policy.
     */
    export interface CreateOrUpdateComputePolicyProperties {
        /**
         * The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
         */
        maxDegreeOfParallelismPerJob?: pulumi.Input<number>;
        /**
         * The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
         */
        minPriorityPerJob?: pulumi.Input<number>;
        /**
         * The AAD object identifier for the entity to create a policy for.
         */
        objectId: pulumi.Input<string>;
        /**
         * The type of AAD object the object identifier refers to.
         */
        objectType: pulumi.Input<string>;
    }

    /**
     * The firewall rule properties to use when creating a new firewall rule.
     */
    export interface CreateOrUpdateFirewallRuleProperties {
        /**
         * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * The account specific properties that are associated with an underlying Data Lake Analytics account. Returned only when retrieving a specific account.
     */
    export interface DataLakeAnalyticsAccountPropertiesResponse {
        /**
         * The unique identifier associated with this Data Lake Analytics account.
         */
        accountId: pulumi.Input<string>;
        /**
         * The list of compute policies associated with this account.
         */
        computePolicies: pulumi.Input<pulumi.Input<inputs.datalakeanalytics.ComputePolicyResponse>[]>;
        /**
         * The account creation time.
         */
        creationTime: pulumi.Input<string>;
        /**
         * The commitment tier in use for the current month.
         */
        currentTier: pulumi.Input<string>;
        /**
         * The list of Data Lake Store accounts associated with this account.
         */
        dataLakeStoreAccounts: pulumi.Input<pulumi.Input<inputs.datalakeanalytics.DataLakeStoreAccountInformationResponse>[]>;
        /**
         * The default Data Lake Store account associated with this account.
         */
        defaultDataLakeStoreAccount: pulumi.Input<string>;
        /**
         * The full CName endpoint for this account.
         */
        endpoint: pulumi.Input<string>;
        /**
         * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
         */
        firewallAllowAzureIps: pulumi.Input<string>;
        /**
         * The list of firewall rules associated with this account.
         */
        firewallRules: pulumi.Input<pulumi.Input<inputs.datalakeanalytics.FirewallRuleResponse>[]>;
        /**
         * The current state of the IP address firewall for this account.
         */
        firewallState: pulumi.Input<string>;
        /**
         * The account last modified time.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * The maximum supported degree of parallelism for this account.
         */
        maxDegreeOfParallelism: pulumi.Input<number>;
        /**
         * The maximum supported degree of parallelism per job for this account.
         */
        maxDegreeOfParallelismPerJob: pulumi.Input<number>;
        /**
         * The maximum supported jobs running under the account at the same time.
         */
        maxJobCount: pulumi.Input<number>;
        /**
         * The minimum supported priority per job for this account.
         */
        minPriorityPerJob: pulumi.Input<number>;
        /**
         * The commitment tier for the next month.
         */
        newTier: pulumi.Input<string>;
        /**
         * The provisioning status of the Data Lake Analytics account.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The number of days that job metadata is retained.
         */
        queryStoreRetention: pulumi.Input<number>;
        /**
         * The state of the Data Lake Analytics account.
         */
        state: pulumi.Input<string>;
        /**
         * The list of Azure Blob Storage accounts associated with this account.
         */
        storageAccounts: pulumi.Input<pulumi.Input<inputs.datalakeanalytics.StorageAccountInformationResponse>[]>;
        /**
         * The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.
         */
        systemMaxDegreeOfParallelism: pulumi.Input<number>;
        /**
         * The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.
         */
        systemMaxJobCount: pulumi.Input<number>;
    }

    /**
     * The Data Lake Store account properties.
     */
    export interface DataLakeStoreAccountInformationPropertiesResponse {
        /**
         * The optional suffix for the Data Lake Store account.
         */
        suffix: pulumi.Input<string>;
    }

    /**
     * Data Lake Store account information.
     */
    export interface DataLakeStoreAccountInformationResponse {
        /**
         * The resource identifier.
         */
        id: pulumi.Input<string>;
        /**
         * The resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The Data Lake Store account properties.
         */
        properties: pulumi.Input<inputs.datalakeanalytics.DataLakeStoreAccountInformationPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The firewall rule properties.
     */
    export interface FirewallRulePropertiesResponse {
        /**
         * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * Data Lake Analytics firewall rule information.
     */
    export interface FirewallRuleResponse {
        /**
         * The resource identifier.
         */
        id: pulumi.Input<string>;
        /**
         * The resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The firewall rule properties.
         */
        properties: pulumi.Input<inputs.datalakeanalytics.FirewallRulePropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The Azure Storage account properties.
     */
    export interface StorageAccountInformationPropertiesResponse {
        /**
         * The optional suffix for the storage account.
         */
        suffix: pulumi.Input<string>;
    }

    /**
     * Azure Storage account information.
     */
    export interface StorageAccountInformationResponse {
        /**
         * The resource identifier.
         */
        id: pulumi.Input<string>;
        /**
         * The resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The Azure Storage account properties.
         */
        properties: pulumi.Input<inputs.datalakeanalytics.StorageAccountInformationPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }
}

export namespace datalakestore {
    export interface CreateDataLakeStoreAccountProperties {
        /**
         * The default owner group for all new folders and files created in the Data Lake Store account.
         */
        defaultGroup?: pulumi.Input<string>;
        /**
         * The Key Vault encryption configuration.
         */
        encryptionConfig?: pulumi.Input<inputs.datalakestore.EncryptionConfig>;
        /**
         * The current state of encryption for this Data Lake Store account.
         */
        encryptionState?: pulumi.Input<string>;
        /**
         * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
         */
        firewallAllowAzureIps?: pulumi.Input<string>;
        /**
         * The list of firewall rules associated with this Data Lake Store account.
         */
        firewallRules?: pulumi.Input<pulumi.Input<inputs.datalakestore.CreateFirewallRuleWithAccountParameters>[]>;
        /**
         * The current state of the IP address firewall for this Data Lake Store account.
         */
        firewallState?: pulumi.Input<string>;
        /**
         * The commitment tier to use for next month.
         */
        newTier?: pulumi.Input<string>;
        /**
         * The current state of the trusted identity provider feature for this Data Lake Store account.
         */
        trustedIdProviderState?: pulumi.Input<string>;
        /**
         * The list of trusted identity providers associated with this Data Lake Store account.
         */
        trustedIdProviders?: pulumi.Input<pulumi.Input<inputs.datalakestore.CreateTrustedIdProviderWithAccountParameters>[]>;
        /**
         * The list of virtual network rules associated with this Data Lake Store account.
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.datalakestore.CreateVirtualNetworkRuleWithAccountParameters>[]>;
    }

    /**
     * The parameters used to create a new firewall rule while creating a new Data Lake Store account.
     */
    export interface CreateFirewallRuleWithAccountParameters {
        /**
         * The unique name of the firewall rule to create.
         */
        name: pulumi.Input<string>;
        /**
         * The firewall rule properties to use when creating a new firewall rule.
         */
        properties: pulumi.Input<inputs.datalakestore.CreateOrUpdateFirewallRuleProperties>;
    }

    /**
     * The firewall rule properties to use when creating a new firewall rule.
     */
    export interface CreateOrUpdateFirewallRuleProperties {
        /**
         * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * The trusted identity provider properties to use when creating a new trusted identity provider.
     */
    export interface CreateOrUpdateTrustedIdProviderProperties {
        /**
         * The URL of this trusted identity provider.
         */
        idProvider: pulumi.Input<string>;
    }

    /**
     * The virtual network rule properties to use when creating a new virtual network rule.
     */
    export interface CreateOrUpdateVirtualNetworkRuleProperties {
        /**
         * The resource identifier for the subnet.
         */
        subnetId: pulumi.Input<string>;
    }

    /**
     * The parameters used to create a new trusted identity provider while creating a new Data Lake Store account.
     */
    export interface CreateTrustedIdProviderWithAccountParameters {
        /**
         * The unique name of the trusted identity provider to create.
         */
        name: pulumi.Input<string>;
        /**
         * The trusted identity provider properties to use when creating a new trusted identity provider.
         */
        properties: pulumi.Input<inputs.datalakestore.CreateOrUpdateTrustedIdProviderProperties>;
    }

    /**
     * The parameters used to create a new virtual network rule while creating a new Data Lake Store account.
     */
    export interface CreateVirtualNetworkRuleWithAccountParameters {
        /**
         * The unique name of the virtual network rule to create.
         */
        name: pulumi.Input<string>;
        /**
         * The virtual network rule properties to use when creating a new virtual network rule.
         */
        properties: pulumi.Input<inputs.datalakestore.CreateOrUpdateVirtualNetworkRuleProperties>;
    }

    /**
     * Data Lake Store account properties information.
     */
    export interface DataLakeStoreAccountPropertiesResponse {
        /**
         * The unique identifier associated with this Data Lake Store account.
         */
        accountId: pulumi.Input<string>;
        /**
         * The account creation time.
         */
        creationTime: pulumi.Input<string>;
        /**
         * The commitment tier in use for the current month.
         */
        currentTier: pulumi.Input<string>;
        /**
         * The default owner group for all new folders and files created in the Data Lake Store account.
         */
        defaultGroup: pulumi.Input<string>;
        /**
         * The Key Vault encryption configuration.
         */
        encryptionConfig: pulumi.Input<inputs.datalakestore.EncryptionConfigResponse>;
        /**
         * The current state of encryption provisioning for this Data Lake Store account.
         */
        encryptionProvisioningState: pulumi.Input<string>;
        /**
         * The current state of encryption for this Data Lake Store account.
         */
        encryptionState: pulumi.Input<string>;
        /**
         * The full CName endpoint for this account.
         */
        endpoint: pulumi.Input<string>;
        /**
         * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
         */
        firewallAllowAzureIps: pulumi.Input<string>;
        /**
         * The list of firewall rules associated with this Data Lake Store account.
         */
        firewallRules: pulumi.Input<pulumi.Input<inputs.datalakestore.FirewallRuleResponse>[]>;
        /**
         * The current state of the IP address firewall for this Data Lake Store account.
         */
        firewallState: pulumi.Input<string>;
        /**
         * The account last modified time.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * The commitment tier to use for next month.
         */
        newTier: pulumi.Input<string>;
        /**
         * The provisioning status of the Data Lake Store account.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The state of the Data Lake Store account.
         */
        state: pulumi.Input<string>;
        /**
         * The current state of the trusted identity provider feature for this Data Lake Store account.
         */
        trustedIdProviderState: pulumi.Input<string>;
        /**
         * The list of trusted identity providers associated with this Data Lake Store account.
         */
        trustedIdProviders: pulumi.Input<pulumi.Input<inputs.datalakestore.TrustedIdProviderResponse>[]>;
        /**
         * The list of virtual network rules associated with this Data Lake Store account.
         */
        virtualNetworkRules: pulumi.Input<pulumi.Input<inputs.datalakestore.VirtualNetworkRuleResponse>[]>;
    }

    /**
     * The encryption configuration for the account.
     */
    export interface EncryptionConfig {
        /**
         * The Key Vault information for connecting to user managed encryption keys.
         */
        keyVaultMetaInfo?: pulumi.Input<inputs.datalakestore.KeyVaultMetaInfo>;
        /**
         * The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The encryption configuration for the account.
     */
    export interface EncryptionConfigResponse {
        /**
         * The Key Vault information for connecting to user managed encryption keys.
         */
        keyVaultMetaInfo?: pulumi.Input<inputs.datalakestore.KeyVaultMetaInfoResponse>;
        /**
         * The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The encryption identity properties.
     */
    export interface EncryptionIdentity {
        /**
         * The type of encryption being used. Currently the only supported type is 'SystemAssigned'.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The encryption identity properties.
     */
    export interface EncryptionIdentityResponse {
        /**
         * The principal identifier associated with the encryption.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant identifier associated with the encryption.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of encryption being used. Currently the only supported type is 'SystemAssigned'.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The firewall rule properties.
     */
    export interface FirewallRulePropertiesResponse {
        /**
         * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * Data Lake Store firewall rule information.
     */
    export interface FirewallRuleResponse {
        /**
         * The resource identifier.
         */
        id: pulumi.Input<string>;
        /**
         * The resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The firewall rule properties.
         */
        properties: pulumi.Input<inputs.datalakestore.FirewallRulePropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Metadata information used by account encryption.
     */
    export interface KeyVaultMetaInfo {
        /**
         * The name of the user managed encryption key.
         */
        encryptionKeyName: pulumi.Input<string>;
        /**
         * The version of the user managed encryption key.
         */
        encryptionKeyVersion: pulumi.Input<string>;
        /**
         * The resource identifier for the user managed Key Vault being used to encrypt.
         */
        keyVaultResourceId: pulumi.Input<string>;
    }

    /**
     * Metadata information used by account encryption.
     */
    export interface KeyVaultMetaInfoResponse {
        /**
         * The name of the user managed encryption key.
         */
        encryptionKeyName: pulumi.Input<string>;
        /**
         * The version of the user managed encryption key.
         */
        encryptionKeyVersion: pulumi.Input<string>;
        /**
         * The resource identifier for the user managed Key Vault being used to encrypt.
         */
        keyVaultResourceId: pulumi.Input<string>;
    }

    /**
     * The trusted identity provider properties.
     */
    export interface TrustedIdProviderPropertiesResponse {
        /**
         * The URL of this trusted identity provider.
         */
        idProvider: pulumi.Input<string>;
    }

    /**
     * Data Lake Store trusted identity provider information.
     */
    export interface TrustedIdProviderResponse {
        /**
         * The resource identifier.
         */
        id: pulumi.Input<string>;
        /**
         * The resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The trusted identity provider properties.
         */
        properties: pulumi.Input<inputs.datalakestore.TrustedIdProviderPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The virtual network rule properties.
     */
    export interface VirtualNetworkRulePropertiesResponse {
        /**
         * The resource identifier for the subnet.
         */
        subnetId: pulumi.Input<string>;
    }

    /**
     * Data Lake Store virtual network rule information.
     */
    export interface VirtualNetworkRuleResponse {
        /**
         * The resource identifier.
         */
        id: pulumi.Input<string>;
        /**
         * The resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The virtual network rule properties.
         */
        properties: pulumi.Input<inputs.datalakestore.VirtualNetworkRulePropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }
}

export namespace datamigration {
}

export namespace datashare {
    /**
     * Account property bag.
     */
    export interface AccountProperties {
    }

    /**
     * Account property bag.
     */
    export interface AccountPropertiesResponse {
        /**
         * Time at which the account was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * Provisioning state of the Account
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Email of the user who created the resource
         */
        userEmail: pulumi.Input<string>;
        /**
         * Name of the user who created the resource
         */
        userName: pulumi.Input<string>;
    }

    /**
     * Identity of resource
     */
    export interface Identity {
        /**
         * Identity Type
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Identity of resource
     */
    export interface IdentityResponse {
        /**
         * service principal Id
         */
        principalId: pulumi.Input<string>;
        /**
         * Tenant Id
         */
        tenantId: pulumi.Input<string>;
        /**
         * Identity Type
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Invitation property bag.
     */
    export interface InvitationProperties {
        /**
         * The target Azure AD Id. Can't be combined with email.
         */
        targetActiveDirectoryId?: pulumi.Input<string>;
        /**
         * The email the invitation is directed to.
         */
        targetEmail?: pulumi.Input<string>;
        /**
         * The target user or application Id that invitation is being sent to.
         * Must be specified along TargetActiveDirectoryId. This enables sending
         * invitations to specific users or applications in an AD tenant.
         */
        targetObjectId?: pulumi.Input<string>;
    }

    /**
     * Invitation property bag.
     */
    export interface InvitationPropertiesResponse {
        /**
         * unique invitation id
         */
        invitationId: pulumi.Input<string>;
        /**
         * The status of the invitation.
         */
        invitationStatus: pulumi.Input<string>;
        /**
         * The time the recipient responded to the invitation.
         */
        respondedAt: pulumi.Input<string>;
        /**
         * Gets the time at which the invitation was sent.
         */
        sentAt: pulumi.Input<string>;
        /**
         * The target Azure AD Id. Can't be combined with email.
         */
        targetActiveDirectoryId?: pulumi.Input<string>;
        /**
         * The email the invitation is directed to.
         */
        targetEmail?: pulumi.Input<string>;
        /**
         * The target user or application Id that invitation is being sent to.
         * Must be specified along TargetActiveDirectoryId. This enables sending
         * invitations to specific users or applications in an AD tenant.
         */
        targetObjectId?: pulumi.Input<string>;
        /**
         * Email of the user who created the resource
         */
        userEmail: pulumi.Input<string>;
        /**
         * Name of the user who created the resource
         */
        userName: pulumi.Input<string>;
    }

    /**
     * Share property bag.
     */
    export interface ShareProperties {
        /**
         * Share description.
         */
        description?: pulumi.Input<string>;
        /**
         * Share kind.
         */
        shareKind?: pulumi.Input<string>;
        /**
         * Share terms.
         */
        terms?: pulumi.Input<string>;
    }

    /**
     * Share property bag.
     */
    export interface SharePropertiesResponse {
        /**
         * Time at which the share was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * Share description.
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the provisioning state
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Share kind.
         */
        shareKind?: pulumi.Input<string>;
        /**
         * Share terms.
         */
        terms?: pulumi.Input<string>;
        /**
         * Email of the user who created the resource
         */
        userEmail: pulumi.Input<string>;
        /**
         * Name of the user who created the resource
         */
        userName: pulumi.Input<string>;
    }

    /**
     * Share subscription property bag.
     */
    export interface ShareSubscriptionProperties {
        /**
         * The invitation id.
         */
        invitationId: pulumi.Input<string>;
        /**
         * Source share location.
         */
        sourceShareLocation: pulumi.Input<string>;
    }

    /**
     * Share subscription property bag.
     */
    export interface ShareSubscriptionPropertiesResponse {
        /**
         * Time at which the share subscription was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * The invitation id.
         */
        invitationId: pulumi.Input<string>;
        /**
         * Email of the provider who created the resource
         */
        providerEmail: pulumi.Input<string>;
        /**
         * Name of the provider who created the resource
         */
        providerName: pulumi.Input<string>;
        /**
         * Tenant name of the provider who created the resource
         */
        providerTenantName: pulumi.Input<string>;
        /**
         * Provisioning state of the share subscription
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Description of share
         */
        shareDescription: pulumi.Input<string>;
        /**
         * Kind of share
         */
        shareKind: pulumi.Input<string>;
        /**
         * Name of the share
         */
        shareName: pulumi.Input<string>;
        /**
         * Gets the current status of share subscription.
         */
        shareSubscriptionStatus: pulumi.Input<string>;
        /**
         * Terms of a share
         */
        shareTerms: pulumi.Input<string>;
        /**
         * Source share location.
         */
        sourceShareLocation: pulumi.Input<string>;
        /**
         * Email of the user who created the resource
         */
        userEmail: pulumi.Input<string>;
        /**
         * Name of the user who created the resource
         */
        userName: pulumi.Input<string>;
    }
}

export namespace dbformariadb {
    /**
     * The properties of a database.
     */
    export interface DatabaseProperties {
        /**
         * The charset of the database.
         */
        charset?: pulumi.Input<string>;
        /**
         * The collation of the database.
         */
        collation?: pulumi.Input<string>;
    }

    /**
     * The properties of a database.
     */
    export interface DatabasePropertiesResponse {
        /**
         * The charset of the database.
         */
        charset?: pulumi.Input<string>;
        /**
         * The collation of the database.
         */
        collation?: pulumi.Input<string>;
    }

    /**
     * The properties of a server firewall rule.
     */
    export interface FirewallRuleProperties {
        /**
         * The end IP address of the server firewall rule. Must be IPv4 format.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address of the server firewall rule. Must be IPv4 format.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * The properties of a server firewall rule.
     */
    export interface FirewallRulePropertiesResponse {
        /**
         * The end IP address of the server firewall rule. Must be IPv4 format.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address of the server firewall rule. Must be IPv4 format.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.dbformariadb.PrivateEndpointProperty>;
        /**
         * Connection state of the private endpoint connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.dbformariadb.PrivateLinkServiceConnectionStateProperty>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.dbformariadb.PrivateEndpointPropertyResponse>;
        /**
         * Connection state of the private endpoint connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.dbformariadb.PrivateLinkServiceConnectionStatePropertyResponse>;
        /**
         * State of the private endpoint connection.
         */
        provisioningState: pulumi.Input<string>;
    }

    export interface PrivateEndpointProperty {
        /**
         * Resource id of the private endpoint.
         */
        id?: pulumi.Input<string>;
    }

    export interface PrivateEndpointPropertyResponse {
        /**
         * Resource id of the private endpoint.
         */
        id?: pulumi.Input<string>;
    }

    export interface PrivateLinkServiceConnectionStateProperty {
        /**
         * The private link service connection description.
         */
        description: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status: pulumi.Input<string>;
    }

    export interface PrivateLinkServiceConnectionStatePropertyResponse {
        /**
         * The actions required for private link service connection.
         */
        actionsRequired: pulumi.Input<string>;
        /**
         * The private link service connection description.
         */
        description: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface ServerPrivateEndpointConnectionPropertiesResponse {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.dbformariadb.PrivateEndpointPropertyResponse>;
        /**
         * Connection state of the private endpoint connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.dbformariadb.ServerPrivateLinkServiceConnectionStatePropertyResponse>;
        /**
         * State of the private endpoint connection.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * A private endpoint connection under a server
     */
    export interface ServerPrivateEndpointConnectionResponse {
        /**
         * Resource Id of the private endpoint connection.
         */
        id: pulumi.Input<string>;
        /**
         * Private endpoint connection properties
         */
        properties: pulumi.Input<inputs.dbformariadb.ServerPrivateEndpointConnectionPropertiesResponse>;
    }

    export interface ServerPrivateLinkServiceConnectionStatePropertyResponse {
        /**
         * The actions required for private link service connection.
         */
        actionsRequired: pulumi.Input<string>;
        /**
         * The private link service connection description.
         */
        description: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status: pulumi.Input<string>;
    }

    /**
     * The properties used to create a new server.
     */
    export interface ServerPropertiesForCreate {
        /**
         * The mode to create a new server.
         */
        createMode: pulumi.Input<string>;
        /**
         * Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * Enable ssl enforcement or not when connect to server.
         */
        sslEnforcement?: pulumi.Input<string>;
        /**
         * Storage profile of a server.
         */
        storageProfile?: pulumi.Input<inputs.dbformariadb.StorageProfile>;
        /**
         * Server version.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * The properties of a server.
     */
    export interface ServerPropertiesResponse {
        /**
         * The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
         */
        administratorLogin?: pulumi.Input<string>;
        /**
         * Earliest restore point creation time (ISO8601 format)
         */
        earliestRestoreDate?: pulumi.Input<string>;
        /**
         * The fully qualified domain name of a server.
         */
        fullyQualifiedDomainName?: pulumi.Input<string>;
        /**
         * The master server id of a replica server.
         */
        masterServerId?: pulumi.Input<string>;
        /**
         * List of private endpoint connections on a server
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.dbformariadb.ServerPrivateEndpointConnectionResponse>[]>;
        /**
         * Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * The maximum number of replicas that a master server can have.
         */
        replicaCapacity?: pulumi.Input<number>;
        /**
         * The replication role of the server.
         */
        replicationRole?: pulumi.Input<string>;
        /**
         * Enable ssl enforcement or not when connect to server.
         */
        sslEnforcement?: pulumi.Input<string>;
        /**
         * Storage profile of a server.
         */
        storageProfile?: pulumi.Input<inputs.dbformariadb.StorageProfileResponse>;
        /**
         * A state of a server that is visible to user.
         */
        userVisibleState?: pulumi.Input<string>;
        /**
         * Server version.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Billing information related properties of a server.
     */
    export interface Sku {
        /**
         * The scale up/out capacity, representing server's compute units.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The family of hardware.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
         */
        name?: pulumi.Input<string>;
        /**
         * The size code, to be interpreted by resource as appropriate.
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of the particular SKU, e.g. Basic.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Billing information related properties of a server.
     */
    export interface SkuResponse {
        /**
         * The scale up/out capacity, representing server's compute units.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The family of hardware.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
         */
        name?: pulumi.Input<string>;
        /**
         * The size code, to be interpreted by resource as appropriate.
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of the particular SKU, e.g. Basic.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Storage Profile properties of a server
     */
    export interface StorageProfile {
        /**
         * Backup retention days for the server.
         */
        backupRetentionDays?: pulumi.Input<number>;
        /**
         * Enable Geo-redundant or not for server backup.
         */
        geoRedundantBackup?: pulumi.Input<string>;
        /**
         * Enable Storage Auto Grow.
         */
        storageAutogrow?: pulumi.Input<string>;
        /**
         * Max storage allowed for a server.
         */
        storageMB?: pulumi.Input<number>;
    }

    /**
     * Storage Profile properties of a server
     */
    export interface StorageProfileResponse {
        /**
         * Backup retention days for the server.
         */
        backupRetentionDays?: pulumi.Input<number>;
        /**
         * Enable Geo-redundant or not for server backup.
         */
        geoRedundantBackup?: pulumi.Input<string>;
        /**
         * Enable Storage Auto Grow.
         */
        storageAutogrow?: pulumi.Input<string>;
        /**
         * Max storage allowed for a server.
         */
        storageMB?: pulumi.Input<number>;
    }

    /**
     * Properties of a virtual network rule.
     */
    export interface VirtualNetworkRuleProperties {
        /**
         * Create firewall rule before the virtual network has vnet service endpoint enabled.
         */
        ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
        /**
         * The ARM resource id of the virtual network subnet.
         */
        virtualNetworkSubnetId: pulumi.Input<string>;
    }

    /**
     * Properties of a virtual network rule.
     */
    export interface VirtualNetworkRulePropertiesResponse {
        /**
         * Create firewall rule before the virtual network has vnet service endpoint enabled.
         */
        ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
        /**
         * Virtual Network Rule State
         */
        state: pulumi.Input<string>;
        /**
         * The ARM resource id of the virtual network subnet.
         */
        virtualNetworkSubnetId: pulumi.Input<string>;
    }
}

export namespace dbformysql {
    /**
     * The properties of a database.
     */
    export interface DatabaseProperties {
        /**
         * The charset of the database.
         */
        charset?: pulumi.Input<string>;
        /**
         * The collation of the database.
         */
        collation?: pulumi.Input<string>;
    }

    /**
     * The properties of a database.
     */
    export interface DatabasePropertiesResponse {
        /**
         * The charset of the database.
         */
        charset?: pulumi.Input<string>;
        /**
         * The collation of the database.
         */
        collation?: pulumi.Input<string>;
    }

    /**
     * The properties of a server firewall rule.
     */
    export interface FirewallRuleProperties {
        /**
         * The end IP address of the server firewall rule. Must be IPv4 format.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address of the server firewall rule. Must be IPv4 format.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * The properties of a server firewall rule.
     */
    export interface FirewallRulePropertiesResponse {
        /**
         * The end IP address of the server firewall rule. Must be IPv4 format.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address of the server firewall rule. Must be IPv4 format.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.dbformysql.PrivateEndpointProperty>;
        /**
         * Connection state of the private endpoint connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.dbformysql.PrivateLinkServiceConnectionStateProperty>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.dbformysql.PrivateEndpointPropertyResponse>;
        /**
         * Connection state of the private endpoint connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.dbformysql.PrivateLinkServiceConnectionStatePropertyResponse>;
        /**
         * State of the private endpoint connection.
         */
        provisioningState: pulumi.Input<string>;
    }

    export interface PrivateEndpointProperty {
        /**
         * Resource id of the private endpoint.
         */
        id?: pulumi.Input<string>;
    }

    export interface PrivateEndpointPropertyResponse {
        /**
         * Resource id of the private endpoint.
         */
        id?: pulumi.Input<string>;
    }

    export interface PrivateLinkServiceConnectionStateProperty {
        /**
         * The private link service connection description.
         */
        description: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status: pulumi.Input<string>;
    }

    export interface PrivateLinkServiceConnectionStatePropertyResponse {
        /**
         * The actions required for private link service connection.
         */
        actionsRequired: pulumi.Input<string>;
        /**
         * The private link service connection description.
         */
        description: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Azure Active Directory identity configuration for a resource.
     */
    export interface ResourceIdentity {
        /**
         * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Azure Active Directory identity configuration for a resource.
     */
    export interface ResourceIdentityResponse {
        /**
         * The Azure Active Directory principal id.
         */
        principalId: pulumi.Input<string>;
        /**
         * The Azure Active Directory tenant id.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The properties of an server Administrator.
     */
    export interface ServerAdministratorProperties {
        /**
         * The type of administrator.
         */
        administratorType: pulumi.Input<string>;
        /**
         * The server administrator login account name.
         */
        login: pulumi.Input<string>;
        /**
         * The server administrator Sid (Secure ID).
         */
        sid: pulumi.Input<string>;
        /**
         * The server Active Directory Administrator tenant id.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * The properties of an server Administrator.
     */
    export interface ServerAdministratorPropertiesResponse {
        /**
         * The type of administrator.
         */
        administratorType: pulumi.Input<string>;
        /**
         * The server administrator login account name.
         */
        login: pulumi.Input<string>;
        /**
         * The server administrator Sid (Secure ID).
         */
        sid: pulumi.Input<string>;
        /**
         * The server Active Directory Administrator tenant id.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * Properties for a key execution.
     */
    export interface ServerKeyProperties {
        /**
         * The key type like 'AzureKeyVault'.
         */
        serverKeyType: pulumi.Input<string>;
        /**
         * The URI of the key.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * Properties for a key execution.
     */
    export interface ServerKeyPropertiesResponse {
        /**
         * The key creation date.
         */
        creationDate: pulumi.Input<string>;
        /**
         * The key type like 'AzureKeyVault'.
         */
        serverKeyType: pulumi.Input<string>;
        /**
         * The URI of the key.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface ServerPrivateEndpointConnectionPropertiesResponse {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.dbformysql.PrivateEndpointPropertyResponse>;
        /**
         * Connection state of the private endpoint connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.dbformysql.ServerPrivateLinkServiceConnectionStatePropertyResponse>;
        /**
         * State of the private endpoint connection.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * A private endpoint connection under a server
     */
    export interface ServerPrivateEndpointConnectionResponse {
        /**
         * Resource Id of the private endpoint connection.
         */
        id: pulumi.Input<string>;
        /**
         * Private endpoint connection properties
         */
        properties: pulumi.Input<inputs.dbformysql.ServerPrivateEndpointConnectionPropertiesResponse>;
    }

    export interface ServerPrivateLinkServiceConnectionStatePropertyResponse {
        /**
         * The actions required for private link service connection.
         */
        actionsRequired: pulumi.Input<string>;
        /**
         * The private link service connection description.
         */
        description: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status: pulumi.Input<string>;
    }

    /**
     * The properties used to create a new server.
     */
    export interface ServerPropertiesForCreate {
        /**
         * The mode to create a new server.
         */
        createMode: pulumi.Input<string>;
        /**
         * Status showing whether the server enabled infrastructure encryption.
         */
        infrastructureEncryption?: pulumi.Input<string>;
        /**
         * Enforce a minimal Tls version for the server.
         */
        minimalTlsVersion?: pulumi.Input<string>;
        /**
         * Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * Enable ssl enforcement or not when connect to server.
         */
        sslEnforcement?: pulumi.Input<string>;
        /**
         * Storage profile of a server.
         */
        storageProfile?: pulumi.Input<inputs.dbformysql.StorageProfile>;
        /**
         * Server version.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * The properties of a server.
     */
    export interface ServerPropertiesResponse {
        /**
         * The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
         */
        administratorLogin?: pulumi.Input<string>;
        /**
         * Status showing whether the server data encryption is enabled with customer-managed keys.
         */
        byokEnforcement: pulumi.Input<string>;
        /**
         * Earliest restore point creation time (ISO8601 format)
         */
        earliestRestoreDate?: pulumi.Input<string>;
        /**
         * The fully qualified domain name of a server.
         */
        fullyQualifiedDomainName?: pulumi.Input<string>;
        /**
         * Status showing whether the server enabled infrastructure encryption.
         */
        infrastructureEncryption?: pulumi.Input<string>;
        /**
         * The master server id of a replica server.
         */
        masterServerId?: pulumi.Input<string>;
        /**
         * Enforce a minimal Tls version for the server.
         */
        minimalTlsVersion?: pulumi.Input<string>;
        /**
         * List of private endpoint connections on a server
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.dbformysql.ServerPrivateEndpointConnectionResponse>[]>;
        /**
         * Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * The maximum number of replicas that a master server can have.
         */
        replicaCapacity?: pulumi.Input<number>;
        /**
         * The replication role of the server.
         */
        replicationRole?: pulumi.Input<string>;
        /**
         * Enable ssl enforcement or not when connect to server.
         */
        sslEnforcement?: pulumi.Input<string>;
        /**
         * Storage profile of a server.
         */
        storageProfile?: pulumi.Input<inputs.dbformysql.StorageProfileResponse>;
        /**
         * A state of a server that is visible to user.
         */
        userVisibleState?: pulumi.Input<string>;
        /**
         * Server version.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Billing information related properties of a server.
     */
    export interface Sku {
        /**
         * The scale up/out capacity, representing server's compute units.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The family of hardware.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
         */
        name?: pulumi.Input<string>;
        /**
         * The size code, to be interpreted by resource as appropriate.
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of the particular SKU, e.g. Basic.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Billing information related properties of a server.
     */
    export interface SkuResponse {
        /**
         * The scale up/out capacity, representing server's compute units.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The family of hardware.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
         */
        name?: pulumi.Input<string>;
        /**
         * The size code, to be interpreted by resource as appropriate.
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of the particular SKU, e.g. Basic.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Storage Profile properties of a server
     */
    export interface StorageProfile {
        /**
         * Backup retention days for the server.
         */
        backupRetentionDays?: pulumi.Input<number>;
        /**
         * Enable Geo-redundant or not for server backup.
         */
        geoRedundantBackup?: pulumi.Input<string>;
        /**
         * Enable Storage Auto Grow.
         */
        storageAutogrow?: pulumi.Input<string>;
        /**
         * Max storage allowed for a server.
         */
        storageMB?: pulumi.Input<number>;
    }

    /**
     * Storage Profile properties of a server
     */
    export interface StorageProfileResponse {
        /**
         * Backup retention days for the server.
         */
        backupRetentionDays?: pulumi.Input<number>;
        /**
         * Enable Geo-redundant or not for server backup.
         */
        geoRedundantBackup?: pulumi.Input<string>;
        /**
         * Enable Storage Auto Grow.
         */
        storageAutogrow?: pulumi.Input<string>;
        /**
         * Max storage allowed for a server.
         */
        storageMB?: pulumi.Input<number>;
    }

    /**
     * Properties of a virtual network rule.
     */
    export interface VirtualNetworkRuleProperties {
        /**
         * Create firewall rule before the virtual network has vnet service endpoint enabled.
         */
        ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
        /**
         * The ARM resource id of the virtual network subnet.
         */
        virtualNetworkSubnetId: pulumi.Input<string>;
    }

    /**
     * Properties of a virtual network rule.
     */
    export interface VirtualNetworkRulePropertiesResponse {
        /**
         * Create firewall rule before the virtual network has vnet service endpoint enabled.
         */
        ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
        /**
         * Virtual Network Rule State
         */
        state: pulumi.Input<string>;
        /**
         * The ARM resource id of the virtual network subnet.
         */
        virtualNetworkSubnetId: pulumi.Input<string>;
    }
}

export namespace dbforpostgresql {
    /**
     * The properties of a database.
     */
    export interface DatabaseProperties {
        /**
         * The charset of the database.
         */
        charset?: pulumi.Input<string>;
        /**
         * The collation of the database.
         */
        collation?: pulumi.Input<string>;
    }

    /**
     * The properties of a database.
     */
    export interface DatabasePropertiesResponse {
        /**
         * The charset of the database.
         */
        charset?: pulumi.Input<string>;
        /**
         * The collation of the database.
         */
        collation?: pulumi.Input<string>;
    }

    /**
     * The properties of a server firewall rule.
     */
    export interface FirewallRuleProperties {
        /**
         * The end IP address of the server firewall rule. Must be IPv4 format.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address of the server firewall rule. Must be IPv4 format.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * The properties of a server firewall rule.
     */
    export interface FirewallRulePropertiesResponse {
        /**
         * The end IP address of the server firewall rule. Must be IPv4 format.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address of the server firewall rule. Must be IPv4 format.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.dbforpostgresql.PrivateEndpointProperty>;
        /**
         * Connection state of the private endpoint connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.dbforpostgresql.PrivateLinkServiceConnectionStateProperty>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.dbforpostgresql.PrivateEndpointPropertyResponse>;
        /**
         * Connection state of the private endpoint connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.dbforpostgresql.PrivateLinkServiceConnectionStatePropertyResponse>;
        /**
         * State of the private endpoint connection.
         */
        provisioningState: pulumi.Input<string>;
    }

    export interface PrivateEndpointProperty {
        /**
         * Resource id of the private endpoint.
         */
        id?: pulumi.Input<string>;
    }

    export interface PrivateEndpointPropertyResponse {
        /**
         * Resource id of the private endpoint.
         */
        id?: pulumi.Input<string>;
    }

    export interface PrivateLinkServiceConnectionStateProperty {
        /**
         * The private link service connection description.
         */
        description: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status: pulumi.Input<string>;
    }

    export interface PrivateLinkServiceConnectionStatePropertyResponse {
        /**
         * The actions required for private link service connection.
         */
        actionsRequired: pulumi.Input<string>;
        /**
         * The private link service connection description.
         */
        description: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Azure Active Directory identity configuration for a resource.
     */
    export interface ResourceIdentity {
        /**
         * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Azure Active Directory identity configuration for a resource.
     */
    export interface ResourceIdentityResponse {
        /**
         * The Azure Active Directory principal id.
         */
        principalId: pulumi.Input<string>;
        /**
         * The Azure Active Directory tenant id.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The properties of an server Administrator.
     */
    export interface ServerAdministratorProperties {
        /**
         * The type of administrator.
         */
        administratorType: pulumi.Input<string>;
        /**
         * The server administrator login account name.
         */
        login: pulumi.Input<string>;
        /**
         * The server administrator Sid (Secure ID).
         */
        sid: pulumi.Input<string>;
        /**
         * The server Active Directory Administrator tenant id.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * The properties of an server Administrator.
     */
    export interface ServerAdministratorPropertiesResponse {
        /**
         * The type of administrator.
         */
        administratorType: pulumi.Input<string>;
        /**
         * The server administrator login account name.
         */
        login: pulumi.Input<string>;
        /**
         * The server administrator Sid (Secure ID).
         */
        sid: pulumi.Input<string>;
        /**
         * The server Active Directory Administrator tenant id.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * Properties for a key execution.
     */
    export interface ServerKeyProperties {
        /**
         * The key type like 'AzureKeyVault'.
         */
        serverKeyType: pulumi.Input<string>;
        /**
         * The URI of the key.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * Properties for a key execution.
     */
    export interface ServerKeyPropertiesResponse {
        /**
         * The key creation date.
         */
        creationDate: pulumi.Input<string>;
        /**
         * The key type like 'AzureKeyVault'.
         */
        serverKeyType: pulumi.Input<string>;
        /**
         * The URI of the key.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface ServerPrivateEndpointConnectionPropertiesResponse {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.dbforpostgresql.PrivateEndpointPropertyResponse>;
        /**
         * Connection state of the private endpoint connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.dbforpostgresql.ServerPrivateLinkServiceConnectionStatePropertyResponse>;
        /**
         * State of the private endpoint connection.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * A private endpoint connection under a server
     */
    export interface ServerPrivateEndpointConnectionResponse {
        /**
         * Resource ID of the Private Endpoint Connection.
         */
        id: pulumi.Input<string>;
        /**
         * Private endpoint connection properties
         */
        properties: pulumi.Input<inputs.dbforpostgresql.ServerPrivateEndpointConnectionPropertiesResponse>;
    }

    export interface ServerPrivateLinkServiceConnectionStatePropertyResponse {
        /**
         * The actions required for private link service connection.
         */
        actionsRequired: pulumi.Input<string>;
        /**
         * The private link service connection description.
         */
        description: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status: pulumi.Input<string>;
    }

    /**
     * The properties used to create a new server.
     */
    export interface ServerPropertiesForCreate {
        /**
         * The mode to create a new server.
         */
        createMode: pulumi.Input<string>;
        /**
         * Status showing whether the server enabled infrastructure encryption.
         */
        infrastructureEncryption?: pulumi.Input<string>;
        /**
         * Enforce a minimal Tls version for the server.
         */
        minimalTlsVersion?: pulumi.Input<string>;
        /**
         * Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * Enable ssl enforcement or not when connect to server.
         */
        sslEnforcement?: pulumi.Input<string>;
        /**
         * Storage profile of a server.
         */
        storageProfile?: pulumi.Input<inputs.dbforpostgresql.StorageProfile>;
        /**
         * Server version.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * The properties of a server.
     */
    export interface ServerPropertiesResponse {
        /**
         * The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
         */
        administratorLogin?: pulumi.Input<string>;
        /**
         * Status showing whether the server data encryption is enabled with customer-managed keys.
         */
        byokEnforcement: pulumi.Input<string>;
        /**
         * Earliest restore point creation time (ISO8601 format)
         */
        earliestRestoreDate?: pulumi.Input<string>;
        /**
         * The fully qualified domain name of a server.
         */
        fullyQualifiedDomainName?: pulumi.Input<string>;
        /**
         * Status showing whether the server enabled infrastructure encryption.
         */
        infrastructureEncryption?: pulumi.Input<string>;
        /**
         * The master server id of a replica server.
         */
        masterServerId?: pulumi.Input<string>;
        /**
         * Enforce a minimal Tls version for the server.
         */
        minimalTlsVersion?: pulumi.Input<string>;
        /**
         * List of private endpoint connections on a server
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.dbforpostgresql.ServerPrivateEndpointConnectionResponse>[]>;
        /**
         * Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * The maximum number of replicas that a master server can have.
         */
        replicaCapacity?: pulumi.Input<number>;
        /**
         * The replication role of the server.
         */
        replicationRole?: pulumi.Input<string>;
        /**
         * Enable ssl enforcement or not when connect to server.
         */
        sslEnforcement?: pulumi.Input<string>;
        /**
         * Storage profile of a server.
         */
        storageProfile?: pulumi.Input<inputs.dbforpostgresql.StorageProfileResponse>;
        /**
         * A state of a server that is visible to user.
         */
        userVisibleState?: pulumi.Input<string>;
        /**
         * Server version.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Billing information related properties of a server.
     */
    export interface Sku {
        /**
         * The scale up/out capacity, representing server's compute units.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The family of hardware.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
         */
        name?: pulumi.Input<string>;
        /**
         * The size code, to be interpreted by resource as appropriate.
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of the particular SKU, e.g. Basic.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Billing information related properties of a server.
     */
    export interface SkuResponse {
        /**
         * The scale up/out capacity, representing server's compute units.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The family of hardware.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
         */
        name?: pulumi.Input<string>;
        /**
         * The size code, to be interpreted by resource as appropriate.
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of the particular SKU, e.g. Basic.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Storage Profile properties of a server
     */
    export interface StorageProfile {
        /**
         * Backup retention days for the server.
         */
        backupRetentionDays?: pulumi.Input<number>;
        /**
         * Enable Geo-redundant or not for server backup.
         */
        geoRedundantBackup?: pulumi.Input<string>;
        /**
         * Enable Storage Auto Grow.
         */
        storageAutogrow?: pulumi.Input<string>;
        /**
         * Max storage allowed for a server.
         */
        storageMB?: pulumi.Input<number>;
    }

    /**
     * Storage Profile properties of a server
     */
    export interface StorageProfileResponse {
        /**
         * Backup retention days for the server.
         */
        backupRetentionDays?: pulumi.Input<number>;
        /**
         * Enable Geo-redundant or not for server backup.
         */
        geoRedundantBackup?: pulumi.Input<string>;
        /**
         * Enable Storage Auto Grow.
         */
        storageAutogrow?: pulumi.Input<string>;
        /**
         * Max storage allowed for a server.
         */
        storageMB?: pulumi.Input<number>;
    }

    /**
     * Properties of a virtual network rule.
     */
    export interface VirtualNetworkRuleProperties {
        /**
         * Create firewall rule before the virtual network has vnet service endpoint enabled.
         */
        ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
        /**
         * The ARM resource id of the virtual network subnet.
         */
        virtualNetworkSubnetId: pulumi.Input<string>;
    }

    /**
     * Properties of a virtual network rule.
     */
    export interface VirtualNetworkRulePropertiesResponse {
        /**
         * Create firewall rule before the virtual network has vnet service endpoint enabled.
         */
        ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
        /**
         * Virtual Network Rule State
         */
        state: pulumi.Input<string>;
        /**
         * The ARM resource id of the virtual network subnet.
         */
        virtualNetworkSubnetId: pulumi.Input<string>;
    }
}

export namespace devices {
    /**
     * The description of an X509 CA Certificate.
     */
    export interface CertificatePropertiesResponse {
        /**
         * The certificate content
         */
        certificate?: pulumi.Input<string>;
        /**
         * The certificate's create date and time.
         */
        created: pulumi.Input<string>;
        /**
         * The certificate's expiration date and time.
         */
        expiry: pulumi.Input<string>;
        /**
         * Determines whether certificate has been verified.
         */
        isVerified: pulumi.Input<boolean>;
        /**
         * The certificate's subject name.
         */
        subject: pulumi.Input<string>;
        /**
         * The certificate's thumbprint.
         */
        thumbprint: pulumi.Input<string>;
        /**
         * The certificate's last update date and time.
         */
        updated: pulumi.Input<string>;
    }

    /**
     * The IoT hub cloud-to-device messaging properties.
     */
    export interface CloudToDeviceProperties {
        /**
         * The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        defaultTtlAsIso8601?: pulumi.Input<string>;
        /**
         * The properties of the feedback queue for cloud-to-device messages.
         */
        feedback?: pulumi.Input<inputs.devices.FeedbackProperties>;
        /**
         * The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        maxDeliveryCount?: pulumi.Input<number>;
    }

    /**
     * The IoT hub cloud-to-device messaging properties.
     */
    export interface CloudToDevicePropertiesResponse {
        /**
         * The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        defaultTtlAsIso8601?: pulumi.Input<string>;
        /**
         * The properties of the feedback queue for cloud-to-device messages.
         */
        feedback?: pulumi.Input<inputs.devices.FeedbackPropertiesResponse>;
        /**
         * The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        maxDeliveryCount?: pulumi.Input<number>;
    }

    /**
     * The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.
     */
    export interface EnrichmentProperties {
        /**
         * The list of endpoints for which the enrichment is applied to the message.
         */
        endpointNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The key or name for the enrichment property.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the enrichment property.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.
     */
    export interface EnrichmentPropertiesResponse {
        /**
         * The list of endpoints for which the enrichment is applied to the message.
         */
        endpointNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The key or name for the enrichment property.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the enrichment property.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
     */
    export interface FallbackRouteProperties {
        /**
         * The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
         */
        condition?: pulumi.Input<string>;
        /**
         * The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
         */
        endpointNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Used to specify whether the fallback route is enabled.
         */
        isEnabled: pulumi.Input<boolean>;
        /**
         * The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
         */
        name?: pulumi.Input<string>;
        /**
         * The source to which the routing rule is to be applied to. For example, DeviceMessages
         */
        source: pulumi.Input<string>;
    }

    /**
     * The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
     */
    export interface FallbackRoutePropertiesResponse {
        /**
         * The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
         */
        condition?: pulumi.Input<string>;
        /**
         * The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
         */
        endpointNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Used to specify whether the fallback route is enabled.
         */
        isEnabled: pulumi.Input<boolean>;
        /**
         * The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
         */
        name?: pulumi.Input<string>;
        /**
         * The source to which the routing rule is to be applied to. For example, DeviceMessages
         */
        source: pulumi.Input<string>;
    }

    /**
     * The properties of the feedback queue for cloud-to-device messages.
     */
    export interface FeedbackProperties {
        /**
         * The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        lockDurationAsIso8601?: pulumi.Input<string>;
        /**
         * The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        maxDeliveryCount?: pulumi.Input<number>;
        /**
         * The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        ttlAsIso8601?: pulumi.Input<string>;
    }

    /**
     * The properties of the feedback queue for cloud-to-device messages.
     */
    export interface FeedbackPropertiesResponse {
        /**
         * The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        lockDurationAsIso8601?: pulumi.Input<string>;
        /**
         * The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        maxDeliveryCount?: pulumi.Input<number>;
        /**
         * The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         */
        ttlAsIso8601?: pulumi.Input<string>;
    }

    /**
     * the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
     */
    export interface IotDpsPropertiesDescription {
        /**
         * Allocation policy to be used by this provisioning service.
         */
        allocationPolicy?: pulumi.Input<string>;
        /**
         * List of authorization keys for a provisioning service.
         */
        authorizationPolicies?: pulumi.Input<pulumi.Input<inputs.devices.SharedAccessSignatureAuthorizationRuleAccessRightsDescription>[]>;
        /**
         * List of IoT hubs associated with this provisioning service.
         */
        iotHubs?: pulumi.Input<pulumi.Input<inputs.devices.IotHubDefinitionDescription>[]>;
        /**
         * The IP filter rules.
         */
        ipFilterRules?: pulumi.Input<pulumi.Input<inputs.devices.IpFilterRule>[]>;
        /**
         * The ARM provisioning state of the provisioning service.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Current state of the provisioning service.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
     */
    export interface IotDpsPropertiesDescriptionResponse {
        /**
         * Allocation policy to be used by this provisioning service.
         */
        allocationPolicy?: pulumi.Input<string>;
        /**
         * List of authorization keys for a provisioning service.
         */
        authorizationPolicies?: pulumi.Input<pulumi.Input<inputs.devices.SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse>[]>;
        /**
         * Device endpoint for this provisioning service.
         */
        deviceProvisioningHostName: pulumi.Input<string>;
        /**
         * Unique identifier of this provisioning service.
         */
        idScope: pulumi.Input<string>;
        /**
         * List of IoT hubs associated with this provisioning service.
         */
        iotHubs?: pulumi.Input<pulumi.Input<inputs.devices.IotHubDefinitionDescriptionResponse>[]>;
        /**
         * The IP filter rules.
         */
        ipFilterRules?: pulumi.Input<pulumi.Input<inputs.devices.IpFilterRuleResponse>[]>;
        /**
         * The ARM provisioning state of the provisioning service.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Service endpoint for provisioning service.
         */
        serviceOperationsHostName: pulumi.Input<string>;
        /**
         * Current state of the provisioning service.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * List of possible provisioning service SKUs.
     */
    export interface IotDpsSkuInfo {
        /**
         * The number of units to provision
         */
        capacity?: pulumi.Input<number>;
        /**
         * Sku name.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * List of possible provisioning service SKUs.
     */
    export interface IotDpsSkuInfoResponse {
        /**
         * The number of units to provision
         */
        capacity?: pulumi.Input<number>;
        /**
         * Sku name.
         */
        name?: pulumi.Input<string>;
        /**
         * Pricing tier name of the provisioning service.
         */
        tier: pulumi.Input<string>;
    }

    /**
     * Description of the IoT hub.
     */
    export interface IotHubDefinitionDescription {
        /**
         * weight to apply for a given iot h.
         */
        allocationWeight?: pulumi.Input<number>;
        /**
         * flag for applying allocationPolicy or not for a given iot hub.
         */
        applyAllocationPolicy?: pulumi.Input<boolean>;
        /**
         * Connection string og the IoT hub.
         */
        connectionString: pulumi.Input<string>;
        /**
         * ARM region of the IoT hub.
         */
        location: pulumi.Input<string>;
    }

    /**
     * Description of the IoT hub.
     */
    export interface IotHubDefinitionDescriptionResponse {
        /**
         * weight to apply for a given iot h.
         */
        allocationWeight?: pulumi.Input<number>;
        /**
         * flag for applying allocationPolicy or not for a given iot hub.
         */
        applyAllocationPolicy?: pulumi.Input<boolean>;
        /**
         * Connection string og the IoT hub.
         */
        connectionString: pulumi.Input<string>;
        /**
         * ARM region of the IoT hub.
         */
        location: pulumi.Input<string>;
        /**
         * Host name of the IoT hub.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Public representation of one of the locations where a resource is provisioned.
     */
    export interface IotHubLocationDescriptionResponse {
        /**
         * The name of the Azure region
         */
        location?: pulumi.Input<string>;
        /**
         * The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.
         */
        role?: pulumi.Input<string>;
    }

    /**
     * The properties of an IoT hub.
     */
    export interface IotHubProperties {
        /**
         * The shared access policies you can use to secure a connection to the IoT hub.
         */
        authorizationPolicies?: pulumi.Input<pulumi.Input<inputs.devices.SharedAccessSignatureAuthorizationRule>[]>;
        /**
         * The IoT hub cloud-to-device messaging properties.
         */
        cloudToDevice?: pulumi.Input<inputs.devices.CloudToDeviceProperties>;
        /**
         * IoT hub comments.
         */
        comments?: pulumi.Input<string>;
        /**
         * If True, file upload notifications are enabled.
         */
        enableFileUploadNotifications?: pulumi.Input<boolean>;
        /**
         * The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.
         */
        eventHubEndpoints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The capabilities and features enabled for the IoT hub.
         */
        features?: pulumi.Input<string>;
        /**
         * The IP filter rules.
         */
        ipFilterRules?: pulumi.Input<pulumi.Input<inputs.devices.IpFilterRule>[]>;
        /**
         * The messaging endpoint properties for the file upload notification queue.
         */
        messagingEndpoints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the minimum TLS version to support for this hub. Can be set to "1.2" to have clients that use a TLS version below 1.2 to be rejected.
         */
        minTlsVersion?: pulumi.Input<string>;
        /**
         * Private endpoint connections created on this IotHub
         */
        privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.devices.PrivateEndpointConnection>[]>;
        /**
         * Whether requests from Public Network are allowed
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
         */
        routing?: pulumi.Input<inputs.devices.RoutingProperties>;
        /**
         * The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
         */
        storageEndpoints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The properties of an IoT hub.
     */
    export interface IotHubPropertiesResponse {
        /**
         * The shared access policies you can use to secure a connection to the IoT hub.
         */
        authorizationPolicies?: pulumi.Input<pulumi.Input<inputs.devices.SharedAccessSignatureAuthorizationRuleResponse>[]>;
        /**
         * The IoT hub cloud-to-device messaging properties.
         */
        cloudToDevice?: pulumi.Input<inputs.devices.CloudToDevicePropertiesResponse>;
        /**
         * IoT hub comments.
         */
        comments?: pulumi.Input<string>;
        /**
         * If True, file upload notifications are enabled.
         */
        enableFileUploadNotifications?: pulumi.Input<boolean>;
        /**
         * The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.
         */
        eventHubEndpoints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The capabilities and features enabled for the IoT hub.
         */
        features?: pulumi.Input<string>;
        /**
         * The name of the host.
         */
        hostName: pulumi.Input<string>;
        /**
         * The IP filter rules.
         */
        ipFilterRules?: pulumi.Input<pulumi.Input<inputs.devices.IpFilterRuleResponse>[]>;
        /**
         * Primary and secondary location for iot hub
         */
        locations: pulumi.Input<pulumi.Input<inputs.devices.IotHubLocationDescriptionResponse>[]>;
        /**
         * The messaging endpoint properties for the file upload notification queue.
         */
        messagingEndpoints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the minimum TLS version to support for this hub. Can be set to "1.2" to have clients that use a TLS version below 1.2 to be rejected.
         */
        minTlsVersion?: pulumi.Input<string>;
        /**
         * Private endpoint connections created on this IotHub
         */
        privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.devices.PrivateEndpointConnectionResponse>[]>;
        /**
         * The provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Whether requests from Public Network are allowed
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
         */
        routing?: pulumi.Input<inputs.devices.RoutingPropertiesResponse>;
        /**
         * The hub state.
         */
        state: pulumi.Input<string>;
        /**
         * The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
         */
        storageEndpoints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Information about the SKU of the IoT hub.
     */
    export interface IotHubSkuInfo {
        /**
         * The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The name of the SKU.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Information about the SKU of the IoT hub.
     */
    export interface IotHubSkuInfoResponse {
        /**
         * The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The name of the SKU.
         */
        name: pulumi.Input<string>;
        /**
         * The billing tier for the IoT hub.
         */
        tier: pulumi.Input<string>;
    }

    /**
     * The IP filter rules for the IoT hub.
     */
    export interface IpFilterRule {
        /**
         * The desired action for requests captured by this rule.
         */
        action: pulumi.Input<string>;
        /**
         * The name of the IP filter rule.
         */
        filterName: pulumi.Input<string>;
        /**
         * A string that contains the IP address range in CIDR notation for the rule.
         */
        ipMask: pulumi.Input<string>;
    }

    /**
     * The IP filter rules for the IoT hub.
     */
    export interface IpFilterRuleResponse {
        /**
         * The desired action for requests captured by this rule.
         */
        action: pulumi.Input<string>;
        /**
         * The name of the IP filter rule.
         */
        filterName: pulumi.Input<string>;
        /**
         * A string that contains the IP address range in CIDR notation for the rule.
         */
        ipMask: pulumi.Input<string>;
    }

    /**
     * The private endpoint property of a private endpoint connection
     */
    export interface PrivateEndpoint {
    }

    /**
     * The private endpoint connection of an IotHub
     */
    export interface PrivateEndpointConnection {
        /**
         * The properties of a private endpoint connection
         */
        properties: pulumi.Input<inputs.devices.PrivateEndpointConnectionProperties>;
    }

    /**
     * The properties of a private endpoint connection
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * The private endpoint property of a private endpoint connection
         */
        privateEndpoint?: pulumi.Input<inputs.devices.PrivateEndpoint>;
        /**
         * The current state of a private endpoint connection
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.devices.PrivateLinkServiceConnectionState>;
    }

    /**
     * The properties of a private endpoint connection
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The private endpoint property of a private endpoint connection
         */
        privateEndpoint?: pulumi.Input<inputs.devices.PrivateEndpointResponse>;
        /**
         * The current state of a private endpoint connection
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.devices.PrivateLinkServiceConnectionStateResponse>;
    }

    /**
     * The private endpoint connection of an IotHub
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * The resource identifier.
         */
        id: pulumi.Input<string>;
        /**
         * The resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The properties of a private endpoint connection
         */
        properties: pulumi.Input<inputs.devices.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The private endpoint property of a private endpoint connection
     */
    export interface PrivateEndpointResponse {
        /**
         * The resource identifier.
         */
        id: pulumi.Input<string>;
    }

    /**
     * The current state of a private endpoint connection
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * Actions required for a private endpoint connection
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The description for the current state of a private endpoint connection
         */
        description: pulumi.Input<string>;
        /**
         * The status of a private endpoint connection
         */
        status: pulumi.Input<string>;
    }

    /**
     * The current state of a private endpoint connection
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * Actions required for a private endpoint connection
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The description for the current state of a private endpoint connection
         */
        description: pulumi.Input<string>;
        /**
         * The status of a private endpoint connection
         */
        status: pulumi.Input<string>;
    }

    /**
     * The properties of a routing rule that your IoT hub uses to route messages to endpoints.
     */
    export interface RouteProperties {
        /**
         * The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
         */
        condition?: pulumi.Input<string>;
        /**
         * The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
         */
        endpointNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Used to specify whether a route is enabled.
         */
        isEnabled: pulumi.Input<boolean>;
        /**
         * The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
         */
        name: pulumi.Input<string>;
        /**
         * The source that the routing rule is to be applied to, such as DeviceMessages.
         */
        source: pulumi.Input<string>;
    }

    /**
     * The properties of a routing rule that your IoT hub uses to route messages to endpoints.
     */
    export interface RoutePropertiesResponse {
        /**
         * The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
         */
        condition?: pulumi.Input<string>;
        /**
         * The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
         */
        endpointNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Used to specify whether a route is enabled.
         */
        isEnabled: pulumi.Input<boolean>;
        /**
         * The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
         */
        name: pulumi.Input<string>;
        /**
         * The source that the routing rule is to be applied to, such as DeviceMessages.
         */
        source: pulumi.Input<string>;
    }

    /**
     * The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
     */
    export interface RoutingEndpoints {
        /**
         * The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
         */
        eventHubs?: pulumi.Input<pulumi.Input<inputs.devices.RoutingEventHubProperties>[]>;
        /**
         * The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
         */
        serviceBusQueues?: pulumi.Input<pulumi.Input<inputs.devices.RoutingServiceBusQueueEndpointProperties>[]>;
        /**
         * The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
         */
        serviceBusTopics?: pulumi.Input<pulumi.Input<inputs.devices.RoutingServiceBusTopicEndpointProperties>[]>;
        /**
         * The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
         */
        storageContainers?: pulumi.Input<pulumi.Input<inputs.devices.RoutingStorageContainerProperties>[]>;
    }

    /**
     * The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
     */
    export interface RoutingEndpointsResponse {
        /**
         * The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
         */
        eventHubs?: pulumi.Input<pulumi.Input<inputs.devices.RoutingEventHubPropertiesResponse>[]>;
        /**
         * The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
         */
        serviceBusQueues?: pulumi.Input<pulumi.Input<inputs.devices.RoutingServiceBusQueueEndpointPropertiesResponse>[]>;
        /**
         * The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
         */
        serviceBusTopics?: pulumi.Input<pulumi.Input<inputs.devices.RoutingServiceBusTopicEndpointPropertiesResponse>[]>;
        /**
         * The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
         */
        storageContainers?: pulumi.Input<pulumi.Input<inputs.devices.RoutingStorageContainerPropertiesResponse>[]>;
    }

    /**
     * The properties related to an event hub endpoint.
     */
    export interface RoutingEventHubProperties {
        /**
         * Method used to authenticate against the event hub endpoint
         */
        authenticationType?: pulumi.Input<string>;
        /**
         * The connection string of the event hub endpoint. 
         */
        connectionString?: pulumi.Input<string>;
        /**
         * The url of the event hub endpoint. It must include the protocol sb://
         */
        endpointUri?: pulumi.Input<string>;
        /**
         * Event hub name on the event hub namespace
         */
        entityPath?: pulumi.Input<string>;
        /**
         * Id of the event hub endpoint
         */
        id?: pulumi.Input<string>;
        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the resource group of the event hub endpoint.
         */
        resourceGroup?: pulumi.Input<string>;
        /**
         * The subscription identifier of the event hub endpoint.
         */
        subscriptionId?: pulumi.Input<string>;
    }

    /**
     * The properties related to an event hub endpoint.
     */
    export interface RoutingEventHubPropertiesResponse {
        /**
         * Method used to authenticate against the event hub endpoint
         */
        authenticationType?: pulumi.Input<string>;
        /**
         * The connection string of the event hub endpoint. 
         */
        connectionString?: pulumi.Input<string>;
        /**
         * The url of the event hub endpoint. It must include the protocol sb://
         */
        endpointUri?: pulumi.Input<string>;
        /**
         * Event hub name on the event hub namespace
         */
        entityPath?: pulumi.Input<string>;
        /**
         * Id of the event hub endpoint
         */
        id?: pulumi.Input<string>;
        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the resource group of the event hub endpoint.
         */
        resourceGroup?: pulumi.Input<string>;
        /**
         * The subscription identifier of the event hub endpoint.
         */
        subscriptionId?: pulumi.Input<string>;
    }

    /**
     * The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
     */
    export interface RoutingProperties {
        /**
         * The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
         */
        endpoints?: pulumi.Input<inputs.devices.RoutingEndpoints>;
        /**
         * The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid
         */
        enrichments?: pulumi.Input<pulumi.Input<inputs.devices.EnrichmentProperties>[]>;
        /**
         * The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
         */
        fallbackRoute?: pulumi.Input<inputs.devices.FallbackRouteProperties>;
        /**
         * The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
         */
        routes?: pulumi.Input<pulumi.Input<inputs.devices.RouteProperties>[]>;
    }

    /**
     * The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
     */
    export interface RoutingPropertiesResponse {
        /**
         * The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
         */
        endpoints?: pulumi.Input<inputs.devices.RoutingEndpointsResponse>;
        /**
         * The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid
         */
        enrichments?: pulumi.Input<pulumi.Input<inputs.devices.EnrichmentPropertiesResponse>[]>;
        /**
         * The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
         */
        fallbackRoute?: pulumi.Input<inputs.devices.FallbackRoutePropertiesResponse>;
        /**
         * The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
         */
        routes?: pulumi.Input<pulumi.Input<inputs.devices.RoutePropertiesResponse>[]>;
    }

    /**
     * The properties related to service bus queue endpoint types.
     */
    export interface RoutingServiceBusQueueEndpointProperties {
        /**
         * Method used to authenticate against the service bus queue endpoint
         */
        authenticationType?: pulumi.Input<string>;
        /**
         * The connection string of the service bus queue endpoint.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * The url of the service bus queue endpoint. It must include the protocol sb://
         */
        endpointUri?: pulumi.Input<string>;
        /**
         * Queue name on the service bus namespace
         */
        entityPath?: pulumi.Input<string>;
        /**
         * Id of the service bus queue endpoint
         */
        id?: pulumi.Input<string>;
        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the resource group of the service bus queue endpoint.
         */
        resourceGroup?: pulumi.Input<string>;
        /**
         * The subscription identifier of the service bus queue endpoint.
         */
        subscriptionId?: pulumi.Input<string>;
    }

    /**
     * The properties related to service bus queue endpoint types.
     */
    export interface RoutingServiceBusQueueEndpointPropertiesResponse {
        /**
         * Method used to authenticate against the service bus queue endpoint
         */
        authenticationType?: pulumi.Input<string>;
        /**
         * The connection string of the service bus queue endpoint.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * The url of the service bus queue endpoint. It must include the protocol sb://
         */
        endpointUri?: pulumi.Input<string>;
        /**
         * Queue name on the service bus namespace
         */
        entityPath?: pulumi.Input<string>;
        /**
         * Id of the service bus queue endpoint
         */
        id?: pulumi.Input<string>;
        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the resource group of the service bus queue endpoint.
         */
        resourceGroup?: pulumi.Input<string>;
        /**
         * The subscription identifier of the service bus queue endpoint.
         */
        subscriptionId?: pulumi.Input<string>;
    }

    /**
     * The properties related to service bus topic endpoint types.
     */
    export interface RoutingServiceBusTopicEndpointProperties {
        /**
         * Method used to authenticate against the service bus topic endpoint
         */
        authenticationType?: pulumi.Input<string>;
        /**
         * The connection string of the service bus topic endpoint.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * The url of the service bus topic endpoint. It must include the protocol sb://
         */
        endpointUri?: pulumi.Input<string>;
        /**
         * Queue name on the service bus topic
         */
        entityPath?: pulumi.Input<string>;
        /**
         * Id of the service bus topic endpoint
         */
        id?: pulumi.Input<string>;
        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the resource group of the service bus topic endpoint.
         */
        resourceGroup?: pulumi.Input<string>;
        /**
         * The subscription identifier of the service bus topic endpoint.
         */
        subscriptionId?: pulumi.Input<string>;
    }

    /**
     * The properties related to service bus topic endpoint types.
     */
    export interface RoutingServiceBusTopicEndpointPropertiesResponse {
        /**
         * Method used to authenticate against the service bus topic endpoint
         */
        authenticationType?: pulumi.Input<string>;
        /**
         * The connection string of the service bus topic endpoint.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * The url of the service bus topic endpoint. It must include the protocol sb://
         */
        endpointUri?: pulumi.Input<string>;
        /**
         * Queue name on the service bus topic
         */
        entityPath?: pulumi.Input<string>;
        /**
         * Id of the service bus topic endpoint
         */
        id?: pulumi.Input<string>;
        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the resource group of the service bus topic endpoint.
         */
        resourceGroup?: pulumi.Input<string>;
        /**
         * The subscription identifier of the service bus topic endpoint.
         */
        subscriptionId?: pulumi.Input<string>;
    }

    /**
     * The properties related to a storage container endpoint.
     */
    export interface RoutingStorageContainerProperties {
        /**
         * Method used to authenticate against the storage endpoint
         */
        authenticationType?: pulumi.Input<string>;
        /**
         * Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
         */
        batchFrequencyInSeconds?: pulumi.Input<number>;
        /**
         * The connection string of the storage account.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * The name of storage container in the storage account.
         */
        containerName: pulumi.Input<string>;
        /**
         * Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.
         */
        encoding?: pulumi.Input<string>;
        /**
         * The url of the storage endpoint. It must include the protocol https://
         */
        endpointUri?: pulumi.Input<string>;
        /**
         * File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
         */
        fileNameFormat?: pulumi.Input<string>;
        /**
         * Id of the storage container endpoint
         */
        id?: pulumi.Input<string>;
        /**
         * Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
         */
        maxChunkSizeInBytes?: pulumi.Input<number>;
        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the resource group of the storage account.
         */
        resourceGroup?: pulumi.Input<string>;
        /**
         * The subscription identifier of the storage account.
         */
        subscriptionId?: pulumi.Input<string>;
    }

    /**
     * The properties related to a storage container endpoint.
     */
    export interface RoutingStorageContainerPropertiesResponse {
        /**
         * Method used to authenticate against the storage endpoint
         */
        authenticationType?: pulumi.Input<string>;
        /**
         * Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
         */
        batchFrequencyInSeconds?: pulumi.Input<number>;
        /**
         * The connection string of the storage account.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * The name of storage container in the storage account.
         */
        containerName: pulumi.Input<string>;
        /**
         * Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.
         */
        encoding?: pulumi.Input<string>;
        /**
         * The url of the storage endpoint. It must include the protocol https://
         */
        endpointUri?: pulumi.Input<string>;
        /**
         * File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
         */
        fileNameFormat?: pulumi.Input<string>;
        /**
         * Id of the storage container endpoint
         */
        id?: pulumi.Input<string>;
        /**
         * Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
         */
        maxChunkSizeInBytes?: pulumi.Input<number>;
        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the resource group of the storage account.
         */
        resourceGroup?: pulumi.Input<string>;
        /**
         * The subscription identifier of the storage account.
         */
        subscriptionId?: pulumi.Input<string>;
    }

    /**
     * The properties of an IoT hub shared access policy.
     */
    export interface SharedAccessSignatureAuthorizationRule {
        /**
         * The name of the shared access policy.
         */
        keyName: pulumi.Input<string>;
        /**
         * The primary key.
         */
        primaryKey?: pulumi.Input<string>;
        /**
         * The permissions assigned to the shared access policy.
         */
        rights: pulumi.Input<string>;
        /**
         * The secondary key.
         */
        secondaryKey?: pulumi.Input<string>;
    }

    /**
     * Description of the shared access key.
     */
    export interface SharedAccessSignatureAuthorizationRuleAccessRightsDescription {
        /**
         * Name of the key.
         */
        keyName: pulumi.Input<string>;
        /**
         * Primary SAS key value.
         */
        primaryKey?: pulumi.Input<string>;
        /**
         * Rights that this key has.
         */
        rights: pulumi.Input<string>;
        /**
         * Secondary SAS key value.
         */
        secondaryKey?: pulumi.Input<string>;
    }

    /**
     * Description of the shared access key.
     */
    export interface SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse {
        /**
         * Name of the key.
         */
        keyName: pulumi.Input<string>;
        /**
         * Primary SAS key value.
         */
        primaryKey?: pulumi.Input<string>;
        /**
         * Rights that this key has.
         */
        rights: pulumi.Input<string>;
        /**
         * Secondary SAS key value.
         */
        secondaryKey?: pulumi.Input<string>;
    }

    /**
     * The properties of an IoT hub shared access policy.
     */
    export interface SharedAccessSignatureAuthorizationRuleResponse {
        /**
         * The name of the shared access policy.
         */
        keyName: pulumi.Input<string>;
        /**
         * The primary key.
         */
        primaryKey?: pulumi.Input<string>;
        /**
         * The permissions assigned to the shared access policy.
         */
        rights: pulumi.Input<string>;
        /**
         * The secondary key.
         */
        secondaryKey?: pulumi.Input<string>;
    }
}

export namespace devspaces {
    export interface ControllerProperties {
        /**
         * Credentials of the target container host (base64).
         */
        targetContainerHostCredentialsBase64: pulumi.Input<string>;
        /**
         * Resource ID of the target container host
         */
        targetContainerHostResourceId: pulumi.Input<string>;
    }

    export interface ControllerPropertiesResponse {
        /**
         * DNS name for accessing DataPlane services
         */
        dataPlaneFqdn: pulumi.Input<string>;
        /**
         * DNS suffix for public endpoints running in the Azure Dev Spaces Controller.
         */
        hostSuffix: pulumi.Input<string>;
        /**
         * Provisioning state of the Azure Dev Spaces Controller.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * DNS of the target container host's API server
         */
        targetContainerHostApiServerFqdn: pulumi.Input<string>;
        /**
         * Credentials of the target container host (base64).
         */
        targetContainerHostCredentialsBase64: pulumi.Input<string>;
        /**
         * Resource ID of the target container host
         */
        targetContainerHostResourceId: pulumi.Input<string>;
    }

    /**
     * Model representing SKU for Azure Dev Spaces Controller.
     */
    export interface Sku {
        /**
         * The name of the SKU for Azure Dev Spaces Controller.
         */
        name: pulumi.Input<string>;
        /**
         * The tier of the SKU for Azure Dev Spaces Controller.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Model representing SKU for Azure Dev Spaces Controller.
     */
    export interface SkuResponse {
        /**
         * The name of the SKU for Azure Dev Spaces Controller.
         */
        name: pulumi.Input<string>;
        /**
         * The tier of the SKU for Azure Dev Spaces Controller.
         */
        tier?: pulumi.Input<string>;
    }
}

export namespace devtestlab {
    /**
     * Properties of a schedules applicable to a virtual machine.
     */
    export interface ApplicableSchedulePropertiesResponse {
        /**
         * The auto-shutdown schedule, if one has been set at the lab or lab resource level.
         */
        labVmsShutdown?: pulumi.Input<inputs.devtestlab.ScheduleResponse>;
        /**
         * The auto-startup schedule, if one has been set at the lab or lab resource level.
         */
        labVmsStartup?: pulumi.Input<inputs.devtestlab.ScheduleResponse>;
    }

    /**
     * Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
     */
    export interface ApplicableScheduleResponse {
        /**
         * The identifier of the resource.
         */
        id: pulumi.Input<string>;
        /**
         * The location of the resource.
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the resource.
         */
        name: pulumi.Input<string>;
        /**
         * The properties of the resource.
         */
        properties: pulumi.Input<inputs.devtestlab.ApplicableSchedulePropertiesResponse>;
        /**
         * The tags of the resource.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of an Azure Resource Manager template parameter.
     */
    export interface ArmTemplateParameterProperties {
        /**
         * The name of the template parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the template parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Properties of an Azure Resource Manager template parameter.
     */
    export interface ArmTemplateParameterPropertiesResponse {
        /**
         * The name of the template parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the template parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Properties of an artifact deployment.
     */
    export interface ArtifactDeploymentStatusProperties {
        /**
         * The total count of the artifacts that were successfully applied.
         */
        artifactsApplied?: pulumi.Input<number>;
        /**
         * The deployment status of the artifact.
         */
        deploymentStatus?: pulumi.Input<string>;
        /**
         * The total count of the artifacts that were tentatively applied.
         */
        totalArtifacts?: pulumi.Input<number>;
    }

    /**
     * Properties of an artifact deployment.
     */
    export interface ArtifactDeploymentStatusPropertiesResponse {
        /**
         * The total count of the artifacts that were successfully applied.
         */
        artifactsApplied?: pulumi.Input<number>;
        /**
         * The deployment status of the artifact.
         */
        deploymentStatus?: pulumi.Input<string>;
        /**
         * The total count of the artifacts that were tentatively applied.
         */
        totalArtifacts?: pulumi.Input<number>;
    }

    /**
     * Properties of an artifact.
     */
    export interface ArtifactInstallProperties {
        /**
         * The artifact's identifier.
         */
        artifactId?: pulumi.Input<string>;
        /**
         * The artifact's title.
         */
        artifactTitle?: pulumi.Input<string>;
        /**
         * The status message from the deployment.
         */
        deploymentStatusMessage?: pulumi.Input<string>;
        /**
         * The time that the artifact starts to install on the virtual machine.
         */
        installTime?: pulumi.Input<string>;
        /**
         * The parameters of the artifact.
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.ArtifactParameterProperties>[]>;
        /**
         * The status of the artifact.
         */
        status?: pulumi.Input<string>;
        /**
         * The status message from the virtual machine extension.
         */
        vmExtensionStatusMessage?: pulumi.Input<string>;
    }

    /**
     * Properties of an artifact.
     */
    export interface ArtifactInstallPropertiesResponse {
        /**
         * The artifact's identifier.
         */
        artifactId?: pulumi.Input<string>;
        /**
         * The artifact's title.
         */
        artifactTitle?: pulumi.Input<string>;
        /**
         * The status message from the deployment.
         */
        deploymentStatusMessage?: pulumi.Input<string>;
        /**
         * The time that the artifact starts to install on the virtual machine.
         */
        installTime?: pulumi.Input<string>;
        /**
         * The parameters of the artifact.
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.ArtifactParameterPropertiesResponse>[]>;
        /**
         * The status of the artifact.
         */
        status?: pulumi.Input<string>;
        /**
         * The status message from the virtual machine extension.
         */
        vmExtensionStatusMessage?: pulumi.Input<string>;
    }

    /**
     * Properties of an artifact parameter.
     */
    export interface ArtifactParameterProperties {
        /**
         * The name of the artifact parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the artifact parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Properties of an artifact parameter.
     */
    export interface ArtifactParameterPropertiesResponse {
        /**
         * The name of the artifact parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the artifact parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Properties of an artifact source.
     */
    export interface ArtifactSourceProperties {
        /**
         * The folder containing Azure Resource Manager templates.
         */
        armTemplateFolderPath?: pulumi.Input<string>;
        /**
         * The artifact source's branch reference.
         */
        branchRef?: pulumi.Input<string>;
        /**
         * The artifact source's display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The folder containing artifacts.
         */
        folderPath?: pulumi.Input<string>;
        /**
         * The security token to authenticate to the artifact source.
         */
        securityToken?: pulumi.Input<string>;
        /**
         * The artifact source's type.
         */
        sourceType?: pulumi.Input<string>;
        /**
         * Indicates if the artifact source is enabled (values: Enabled, Disabled).
         */
        status?: pulumi.Input<string>;
        /**
         * The artifact source's URI.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * Properties of an artifact source.
     */
    export interface ArtifactSourcePropertiesResponse {
        /**
         * The folder containing Azure Resource Manager templates.
         */
        armTemplateFolderPath?: pulumi.Input<string>;
        /**
         * The artifact source's branch reference.
         */
        branchRef?: pulumi.Input<string>;
        /**
         * The artifact source's creation date.
         */
        createdDate: pulumi.Input<string>;
        /**
         * The artifact source's display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The folder containing artifacts.
         */
        folderPath?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The security token to authenticate to the artifact source.
         */
        securityToken?: pulumi.Input<string>;
        /**
         * The artifact source's type.
         */
        sourceType?: pulumi.Input<string>;
        /**
         * Indicates if the artifact source is enabled (values: Enabled, Disabled).
         */
        status?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
        /**
         * The artifact source's URI.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * Properties to attach new disk to the Virtual Machine.
     */
    export interface AttachNewDataDiskOptions {
        /**
         * The name of the disk to be attached.
         */
        diskName?: pulumi.Input<string>;
        /**
         * Size of the disk to be attached in GibiBytes.
         */
        diskSizeGiB?: pulumi.Input<number>;
        /**
         * The storage type for the disk (i.e. Standard, Premium).
         */
        diskType?: pulumi.Input<string>;
    }

    /**
     * Properties to attach new disk to the Virtual Machine.
     */
    export interface AttachNewDataDiskOptionsResponse {
        /**
         * The name of the disk to be attached.
         */
        diskName?: pulumi.Input<string>;
        /**
         * Size of the disk to be attached in GibiBytes.
         */
        diskSizeGiB?: pulumi.Input<number>;
        /**
         * The storage type for the disk (i.e. Standard, Premium).
         */
        diskType?: pulumi.Input<string>;
    }

    /**
     * Parameters for creating multiple virtual machines as a single action.
     */
    export interface BulkCreationParameters {
        /**
         * The number of virtual machine instances to create.
         */
        instanceCount?: pulumi.Input<number>;
    }

    /**
     * Parameters for creating multiple virtual machines as a single action.
     */
    export interface BulkCreationParametersResponse {
        /**
         * The number of virtual machine instances to create.
         */
        instanceCount?: pulumi.Input<number>;
    }

    /**
     * A data disks attached to a virtual machine.
     */
    export interface ComputeDataDiskResponse {
        /**
         * Gets data disk size in GiB.
         */
        diskSizeGiB?: pulumi.Input<number>;
        /**
         * When backed by a blob, the URI of underlying blob.
         */
        diskUri?: pulumi.Input<string>;
        /**
         * When backed by managed disk, this is the ID of the compute disk resource.
         */
        managedDiskId?: pulumi.Input<string>;
        /**
         * Gets data disk name.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Status information about a virtual machine.
     */
    export interface ComputeVmInstanceViewStatusResponse {
        /**
         * Gets the status Code.
         */
        code?: pulumi.Input<string>;
        /**
         * Gets the short localizable label for the status.
         */
        displayStatus?: pulumi.Input<string>;
        /**
         * Gets the message associated with the status.
         */
        message?: pulumi.Input<string>;
    }

    /**
     * Properties of a virtual machine returned by the Microsoft.Compute API.
     */
    export interface ComputeVmPropertiesResponse {
        /**
         * Gets data disks blob uri for the virtual machine.
         */
        dataDiskIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Gets all data disks attached to the virtual machine.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.devtestlab.ComputeDataDiskResponse>[]>;
        /**
         * Gets the network interface ID of the virtual machine.
         */
        networkInterfaceId?: pulumi.Input<string>;
        /**
         * Gets OS disk blob uri for the virtual machine.
         */
        osDiskId?: pulumi.Input<string>;
        /**
         * Gets the OS type of the virtual machine.
         */
        osType?: pulumi.Input<string>;
        /**
         * Gets the statuses of the virtual machine.
         */
        statuses?: pulumi.Input<pulumi.Input<inputs.devtestlab.ComputeVmInstanceViewStatusResponse>[]>;
        /**
         * Gets the size of the virtual machine.
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * Properties of a custom image.
     */
    export interface CustomImageProperties {
        /**
         * The author of the custom image.
         */
        author?: pulumi.Input<string>;
        /**
         * Storage information about the plan related to this custom image
         */
        customImagePlan?: pulumi.Input<inputs.devtestlab.CustomImagePropertiesFromPlan>;
        /**
         * Storage information about the data disks present in the custom image
         */
        dataDiskStorageInfo?: pulumi.Input<pulumi.Input<inputs.devtestlab.DataDiskStorageTypeInfo>[]>;
        /**
         * The description of the custom image.
         */
        description?: pulumi.Input<string>;
        /**
         * Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
         */
        isPlanAuthorized?: pulumi.Input<boolean>;
        /**
         * The Managed Image Id backing the custom image.
         */
        managedImageId?: pulumi.Input<string>;
        /**
         * The Managed Snapshot Id backing the custom image.
         */
        managedSnapshotId?: pulumi.Input<string>;
        /**
         * The VHD from which the image is to be created.
         */
        vhd?: pulumi.Input<inputs.devtestlab.CustomImagePropertiesCustom>;
        /**
         * The virtual machine from which the image is to be created.
         */
        vm?: pulumi.Input<inputs.devtestlab.CustomImagePropertiesFromVm>;
    }

    /**
     * Properties for creating a custom image from a VHD.
     */
    export interface CustomImagePropertiesCustom {
        /**
         * The image name.
         */
        imageName?: pulumi.Input<string>;
        /**
         * The OS type of the custom image (i.e. Windows, Linux)
         */
        osType: pulumi.Input<string>;
        /**
         * Indicates whether sysprep has been run on the VHD.
         */
        sysPrep?: pulumi.Input<boolean>;
    }

    /**
     * Properties for creating a custom image from a VHD.
     */
    export interface CustomImagePropertiesCustomResponse {
        /**
         * The image name.
         */
        imageName?: pulumi.Input<string>;
        /**
         * The OS type of the custom image (i.e. Windows, Linux)
         */
        osType: pulumi.Input<string>;
        /**
         * Indicates whether sysprep has been run on the VHD.
         */
        sysPrep?: pulumi.Input<boolean>;
    }

    /**
     * Properties for plan on a custom image.
     */
    export interface CustomImagePropertiesFromPlan {
        /**
         * The id of the plan, equivalent to name of the plan
         */
        id?: pulumi.Input<string>;
        /**
         * The offer for the plan from the marketplace image the custom image is derived from
         */
        offer?: pulumi.Input<string>;
        /**
         * The publisher for the plan from the marketplace image the custom image is derived from
         */
        publisher?: pulumi.Input<string>;
    }

    /**
     * Properties for plan on a custom image.
     */
    export interface CustomImagePropertiesFromPlanResponse {
        /**
         * The id of the plan, equivalent to name of the plan
         */
        id?: pulumi.Input<string>;
        /**
         * The offer for the plan from the marketplace image the custom image is derived from
         */
        offer?: pulumi.Input<string>;
        /**
         * The publisher for the plan from the marketplace image the custom image is derived from
         */
        publisher?: pulumi.Input<string>;
    }

    /**
     * Properties for creating a custom image from a virtual machine.
     */
    export interface CustomImagePropertiesFromVm {
        /**
         * The Linux OS information of the VM.
         */
        linuxOsInfo?: pulumi.Input<inputs.devtestlab.LinuxOsInfo>;
        /**
         * The source vm identifier.
         */
        sourceVmId?: pulumi.Input<string>;
        /**
         * The Windows OS information of the VM.
         */
        windowsOsInfo?: pulumi.Input<inputs.devtestlab.WindowsOsInfo>;
    }

    /**
     * Properties for creating a custom image from a virtual machine.
     */
    export interface CustomImagePropertiesFromVmResponse {
        /**
         * The Linux OS information of the VM.
         */
        linuxOsInfo?: pulumi.Input<inputs.devtestlab.LinuxOsInfoResponse>;
        /**
         * The source vm identifier.
         */
        sourceVmId?: pulumi.Input<string>;
        /**
         * The Windows OS information of the VM.
         */
        windowsOsInfo?: pulumi.Input<inputs.devtestlab.WindowsOsInfoResponse>;
    }

    /**
     * Properties of a custom image.
     */
    export interface CustomImagePropertiesResponse {
        /**
         * The author of the custom image.
         */
        author?: pulumi.Input<string>;
        /**
         * The creation date of the custom image.
         */
        creationDate: pulumi.Input<string>;
        /**
         * Storage information about the plan related to this custom image
         */
        customImagePlan?: pulumi.Input<inputs.devtestlab.CustomImagePropertiesFromPlanResponse>;
        /**
         * Storage information about the data disks present in the custom image
         */
        dataDiskStorageInfo?: pulumi.Input<pulumi.Input<inputs.devtestlab.DataDiskStorageTypeInfoResponse>[]>;
        /**
         * The description of the custom image.
         */
        description?: pulumi.Input<string>;
        /**
         * Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
         */
        isPlanAuthorized?: pulumi.Input<boolean>;
        /**
         * The Managed Image Id backing the custom image.
         */
        managedImageId?: pulumi.Input<string>;
        /**
         * The Managed Snapshot Id backing the custom image.
         */
        managedSnapshotId?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
        /**
         * The VHD from which the image is to be created.
         */
        vhd?: pulumi.Input<inputs.devtestlab.CustomImagePropertiesCustomResponse>;
        /**
         * The virtual machine from which the image is to be created.
         */
        vm?: pulumi.Input<inputs.devtestlab.CustomImagePropertiesFromVmResponse>;
    }

    /**
     * Request body for adding a new or existing data disk to a virtual machine.
     */
    export interface DataDiskProperties {
        /**
         * Specifies options to attach a new disk to the virtual machine.
         */
        attachNewDataDiskOptions?: pulumi.Input<inputs.devtestlab.AttachNewDataDiskOptions>;
        /**
         * Specifies the existing lab disk id to attach to virtual machine.
         */
        existingLabDiskId?: pulumi.Input<string>;
        /**
         * Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
         */
        hostCaching?: pulumi.Input<string>;
    }

    /**
     * Request body for adding a new or existing data disk to a virtual machine.
     */
    export interface DataDiskPropertiesResponse {
        /**
         * Specifies options to attach a new disk to the virtual machine.
         */
        attachNewDataDiskOptions?: pulumi.Input<inputs.devtestlab.AttachNewDataDiskOptionsResponse>;
        /**
         * Specifies the existing lab disk id to attach to virtual machine.
         */
        existingLabDiskId?: pulumi.Input<string>;
        /**
         * Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
         */
        hostCaching?: pulumi.Input<string>;
    }

    /**
     * Storage information about the data disks present in the custom image
     */
    export interface DataDiskStorageTypeInfo {
        /**
         * Disk Lun
         */
        lun?: pulumi.Input<string>;
        /**
         * Disk Storage Type
         */
        storageType?: pulumi.Input<string>;
    }

    /**
     * Storage information about the data disks present in the custom image
     */
    export interface DataDiskStorageTypeInfoResponse {
        /**
         * Disk Lun
         */
        lun?: pulumi.Input<string>;
        /**
         * Disk Storage Type
         */
        storageType?: pulumi.Input<string>;
    }

    /**
     * Properties of a daily schedule.
     */
    export interface DayDetails {
        /**
         * The time of day the schedule will occur.
         */
        time?: pulumi.Input<string>;
    }

    /**
     * Properties of a daily schedule.
     */
    export interface DayDetailsResponse {
        /**
         * The time of day the schedule will occur.
         */
        time?: pulumi.Input<string>;
    }

    /**
     * Properties of a disk.
     */
    export interface DiskProperties {
        /**
         * When backed by a blob, the name of the VHD blob without extension.
         */
        diskBlobName?: pulumi.Input<string>;
        /**
         * The size of the disk in GibiBytes.
         */
        diskSizeGiB?: pulumi.Input<number>;
        /**
         * The storage type for the disk (i.e. Standard, Premium).
         */
        diskType?: pulumi.Input<string>;
        /**
         * When backed by a blob, the URI of underlying blob.
         */
        diskUri?: pulumi.Input<string>;
        /**
         * The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).
         */
        hostCaching?: pulumi.Input<string>;
        /**
         * The resource ID of the VM to which this disk is leased.
         */
        leasedByLabVmId?: pulumi.Input<string>;
        /**
         * When backed by managed disk, this is the ID of the compute disk resource.
         */
        managedDiskId?: pulumi.Input<string>;
    }

    /**
     * Properties of a disk.
     */
    export interface DiskPropertiesResponse {
        /**
         * The creation date of the disk.
         */
        createdDate: pulumi.Input<string>;
        /**
         * When backed by a blob, the name of the VHD blob without extension.
         */
        diskBlobName?: pulumi.Input<string>;
        /**
         * The size of the disk in GibiBytes.
         */
        diskSizeGiB?: pulumi.Input<number>;
        /**
         * The storage type for the disk (i.e. Standard, Premium).
         */
        diskType?: pulumi.Input<string>;
        /**
         * When backed by a blob, the URI of underlying blob.
         */
        diskUri?: pulumi.Input<string>;
        /**
         * The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).
         */
        hostCaching?: pulumi.Input<string>;
        /**
         * The resource ID of the VM to which this disk is leased.
         */
        leasedByLabVmId?: pulumi.Input<string>;
        /**
         * When backed by managed disk, this is the ID of the compute disk resource.
         */
        managedDiskId?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
    }

    /**
     * Properties of an environment deployment.
     */
    export interface EnvironmentDeploymentProperties {
        /**
         * The Azure Resource Manager template's identifier.
         */
        armTemplateId?: pulumi.Input<string>;
        /**
         * The parameters of the Azure Resource Manager template.
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.ArmTemplateParameterProperties>[]>;
    }

    /**
     * Properties of an environment deployment.
     */
    export interface EnvironmentDeploymentPropertiesResponse {
        /**
         * The Azure Resource Manager template's identifier.
         */
        armTemplateId?: pulumi.Input<string>;
        /**
         * The parameters of the Azure Resource Manager template.
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.ArmTemplateParameterPropertiesResponse>[]>;
    }

    /**
     * Properties of an environment.
     */
    export interface EnvironmentProperties {
        /**
         * The display name of the Azure Resource Manager template that produced the environment.
         */
        armTemplateDisplayName?: pulumi.Input<string>;
        /**
         * The deployment properties of the environment.
         */
        deploymentProperties?: pulumi.Input<inputs.devtestlab.EnvironmentDeploymentProperties>;
    }

    /**
     * Properties of an environment.
     */
    export interface EnvironmentPropertiesResponse {
        /**
         * The display name of the Azure Resource Manager template that produced the environment.
         */
        armTemplateDisplayName?: pulumi.Input<string>;
        /**
         * The creator of the environment.
         */
        createdByUser: pulumi.Input<string>;
        /**
         * The deployment properties of the environment.
         */
        deploymentProperties?: pulumi.Input<inputs.devtestlab.EnvironmentDeploymentPropertiesResponse>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The identifier of the resource group containing the environment's resources.
         */
        resourceGroupId: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
    }

    /**
     * An event to be notified for.
     */
    export interface Event {
        /**
         * The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
         */
        eventName?: pulumi.Input<string>;
    }

    /**
     * An event to be notified for.
     */
    export interface EventResponse {
        /**
         * The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
         */
        eventName?: pulumi.Input<string>;
    }

    /**
     * Subnet information as returned by the Microsoft.Network API.
     */
    export interface ExternalSubnetResponse {
        /**
         * Gets or sets the identifier.
         */
        id?: pulumi.Input<string>;
        /**
         * Gets or sets the name.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Properties of a formula.
     */
    export interface FormulaProperties {
        /**
         * The author of the formula.
         */
        author?: pulumi.Input<string>;
        /**
         * The description of the formula.
         */
        description?: pulumi.Input<string>;
        /**
         * The content of the formula.
         */
        formulaContent?: pulumi.Input<inputs.devtestlab.LabVirtualMachineCreationParameter>;
        /**
         * The OS type of the formula.
         */
        osType?: pulumi.Input<string>;
        /**
         * Information about a VM from which a formula is to be created.
         */
        vm?: pulumi.Input<inputs.devtestlab.FormulaPropertiesFromVm>;
    }

    /**
     * Information about a VM from which a formula is to be created.
     */
    export interface FormulaPropertiesFromVm {
        /**
         * The identifier of the VM from which a formula is to be created.
         */
        labVmId?: pulumi.Input<string>;
    }

    /**
     * Information about a VM from which a formula is to be created.
     */
    export interface FormulaPropertiesFromVmResponse {
        /**
         * The identifier of the VM from which a formula is to be created.
         */
        labVmId?: pulumi.Input<string>;
    }

    /**
     * Properties of a formula.
     */
    export interface FormulaPropertiesResponse {
        /**
         * The author of the formula.
         */
        author?: pulumi.Input<string>;
        /**
         * The creation date of the formula.
         */
        creationDate: pulumi.Input<string>;
        /**
         * The description of the formula.
         */
        description?: pulumi.Input<string>;
        /**
         * The content of the formula.
         */
        formulaContent?: pulumi.Input<inputs.devtestlab.LabVirtualMachineCreationParameterResponse>;
        /**
         * The OS type of the formula.
         */
        osType?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
        /**
         * Information about a VM from which a formula is to be created.
         */
        vm?: pulumi.Input<inputs.devtestlab.FormulaPropertiesFromVmResponse>;
    }

    /**
     * The reference information for an Azure Marketplace image.
     */
    export interface GalleryImageReference {
        /**
         * The offer of the gallery image.
         */
        offer?: pulumi.Input<string>;
        /**
         * The OS type of the gallery image.
         */
        osType?: pulumi.Input<string>;
        /**
         * The publisher of the gallery image.
         */
        publisher?: pulumi.Input<string>;
        /**
         * The SKU of the gallery image.
         */
        sku?: pulumi.Input<string>;
        /**
         * The version of the gallery image.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * The reference information for an Azure Marketplace image.
     */
    export interface GalleryImageReferenceResponse {
        /**
         * The offer of the gallery image.
         */
        offer?: pulumi.Input<string>;
        /**
         * The OS type of the gallery image.
         */
        osType?: pulumi.Input<string>;
        /**
         * The publisher of the gallery image.
         */
        publisher?: pulumi.Input<string>;
        /**
         * The SKU of the gallery image.
         */
        sku?: pulumi.Input<string>;
        /**
         * The version of the gallery image.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Properties of an hourly schedule.
     */
    export interface HourDetails {
        /**
         * Minutes of the hour the schedule will run.
         */
        minute?: pulumi.Input<number>;
    }

    /**
     * Properties of an hourly schedule.
     */
    export interface HourDetailsResponse {
        /**
         * Minutes of the hour the schedule will run.
         */
        minute?: pulumi.Input<number>;
    }

    /**
     * Properties of a managed identity
     */
    export interface IdentityProperties {
        /**
         * The client secret URL of the identity.
         */
        clientSecretUrl?: pulumi.Input<string>;
        /**
         * The principal id of resource identity.
         */
        principalId?: pulumi.Input<string>;
        /**
         * The tenant identifier of resource.
         */
        tenantId?: pulumi.Input<string>;
        /**
         * Managed identity.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Properties of a managed identity
     */
    export interface IdentityPropertiesResponse {
        /**
         * The client secret URL of the identity.
         */
        clientSecretUrl?: pulumi.Input<string>;
        /**
         * The principal id of resource identity.
         */
        principalId?: pulumi.Input<string>;
        /**
         * The tenant identifier of resource.
         */
        tenantId?: pulumi.Input<string>;
        /**
         * Managed identity.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
     */
    export interface InboundNatRule {
        /**
         * The port to which the external traffic will be redirected.
         */
        backendPort?: pulumi.Input<number>;
        /**
         * The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
         */
        frontendPort?: pulumi.Input<number>;
        /**
         * The transport protocol for the endpoint.
         */
        transportProtocol?: pulumi.Input<string>;
    }

    /**
     * A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
     */
    export interface InboundNatRuleResponse {
        /**
         * The port to which the external traffic will be redirected.
         */
        backendPort?: pulumi.Input<number>;
        /**
         * The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
         */
        frontendPort?: pulumi.Input<number>;
        /**
         * The transport protocol for the endpoint.
         */
        transportProtocol?: pulumi.Input<string>;
    }

    /**
     * Properties of a lab's announcement banner
     */
    export interface LabAnnouncementProperties {
        /**
         * Is the lab announcement active/enabled at this time?
         */
        enabled?: pulumi.Input<string>;
        /**
         * The time at which the announcement expires (null for never)
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * Has this announcement expired?
         */
        expired?: pulumi.Input<boolean>;
        /**
         * The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
         */
        markdown?: pulumi.Input<string>;
        /**
         * The plain text title for the lab announcement
         */
        title?: pulumi.Input<string>;
    }

    /**
     * Properties of a lab's announcement banner
     */
    export interface LabAnnouncementPropertiesResponse {
        /**
         * Is the lab announcement active/enabled at this time?
         */
        enabled?: pulumi.Input<string>;
        /**
         * The time at which the announcement expires (null for never)
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * Has this announcement expired?
         */
        expired?: pulumi.Input<boolean>;
        /**
         * The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
         */
        markdown?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The plain text title for the lab announcement
         */
        title?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
    }

    /**
     * Properties of a lab.
     */
    export interface LabProperties {
        /**
         * The properties of any lab announcement associated with this lab
         */
        announcement?: pulumi.Input<inputs.devtestlab.LabAnnouncementProperties>;
        /**
         * The access rights to be granted to the user when provisioning an environment
         */
        environmentPermission?: pulumi.Input<string>;
        /**
         * Extended properties of the lab used for experimental features
         */
        extendedProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
         */
        labStorageType?: pulumi.Input<string>;
        /**
         * The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.
         */
        mandatoryArtifactsResourceIdsLinux?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.
         */
        mandatoryArtifactsResourceIdsWindows?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The setting to enable usage of premium data disks.
         * When its value is 'Enabled', creation of standard or premium data disks is allowed.
         * When its value is 'Disabled', only creation of standard data disks is allowed.
         */
        premiumDataDisks?: pulumi.Input<string>;
        /**
         * The properties of any lab support message associated with this lab
         */
        support?: pulumi.Input<inputs.devtestlab.LabSupportProperties>;
    }

    /**
     * Properties of a lab.
     */
    export interface LabPropertiesResponse {
        /**
         * The properties of any lab announcement associated with this lab
         */
        announcement?: pulumi.Input<inputs.devtestlab.LabAnnouncementPropertiesResponse>;
        /**
         * The lab's artifact storage account.
         */
        artifactsStorageAccount: pulumi.Input<string>;
        /**
         * The creation date of the lab.
         */
        createdDate: pulumi.Input<string>;
        /**
         * The lab's default premium storage account.
         */
        defaultPremiumStorageAccount: pulumi.Input<string>;
        /**
         * The lab's default storage account.
         */
        defaultStorageAccount: pulumi.Input<string>;
        /**
         * The access rights to be granted to the user when provisioning an environment
         */
        environmentPermission?: pulumi.Input<string>;
        /**
         * Extended properties of the lab used for experimental features
         */
        extendedProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
         */
        labStorageType?: pulumi.Input<string>;
        /**
         * The load balancer used to for lab VMs that use shared IP address.
         */
        loadBalancerId: pulumi.Input<string>;
        /**
         * The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.
         */
        mandatoryArtifactsResourceIdsLinux?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.
         */
        mandatoryArtifactsResourceIdsWindows?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.
         */
        networkSecurityGroupId: pulumi.Input<string>;
        /**
         * The lab's premium data disk storage account.
         */
        premiumDataDiskStorageAccount: pulumi.Input<string>;
        /**
         * The setting to enable usage of premium data disks.
         * When its value is 'Enabled', creation of standard or premium data disks is allowed.
         * When its value is 'Disabled', only creation of standard data disks is allowed.
         */
        premiumDataDisks?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The public IP address for the lab's load balancer.
         */
        publicIpId: pulumi.Input<string>;
        /**
         * The properties of any lab support message associated with this lab
         */
        support?: pulumi.Input<inputs.devtestlab.LabSupportPropertiesResponse>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
        /**
         * The lab's Key vault.
         */
        vaultName: pulumi.Input<string>;
        /**
         * The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.
         */
        vmCreationResourceGroup: pulumi.Input<string>;
    }

    /**
     * Properties of a lab's support banner
     */
    export interface LabSupportProperties {
        /**
         * Is the lab support banner active/enabled at this time?
         */
        enabled?: pulumi.Input<string>;
        /**
         * The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
         */
        markdown?: pulumi.Input<string>;
    }

    /**
     * Properties of a lab's support banner
     */
    export interface LabSupportPropertiesResponse {
        /**
         * Is the lab support banner active/enabled at this time?
         */
        enabled?: pulumi.Input<string>;
        /**
         * The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
         */
        markdown?: pulumi.Input<string>;
    }

    /**
     * Properties for creating a virtual machine.
     */
    export interface LabVirtualMachineCreationParameter {
        /**
         * The location of the new virtual machine or environment
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the virtual machine or environment
         */
        name?: pulumi.Input<string>;
        /**
         * The properties of the resource.
         */
        properties?: pulumi.Input<inputs.devtestlab.LabVirtualMachineCreationParameterProperties>;
        /**
         * The tags of the resource.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Properties for virtual machine creation.
     */
    export interface LabVirtualMachineCreationParameterProperties {
        /**
         * Indicates whether another user can take ownership of the virtual machine
         */
        allowClaim?: pulumi.Input<boolean>;
        /**
         * The artifact deployment status for the virtual machine.
         */
        artifactDeploymentStatus?: pulumi.Input<inputs.devtestlab.ArtifactDeploymentStatusProperties>;
        /**
         * The artifacts to be installed on the virtual machine.
         */
        artifacts?: pulumi.Input<pulumi.Input<inputs.devtestlab.ArtifactInstallProperties>[]>;
        /**
         * The number of virtual machine instances to create.
         */
        bulkCreationParameters?: pulumi.Input<inputs.devtestlab.BulkCreationParameters>;
        /**
         * The resource identifier (Microsoft.Compute) of the virtual machine.
         */
        computeId?: pulumi.Input<string>;
        /**
         * The email address of creator of the virtual machine.
         */
        createdByUser?: pulumi.Input<string>;
        /**
         * The object identifier of the creator of the virtual machine.
         */
        createdByUserId?: pulumi.Input<string>;
        /**
         * The creation date of the virtual machine.
         */
        createdDate?: pulumi.Input<string>;
        /**
         * The custom image identifier of the virtual machine.
         */
        customImageId?: pulumi.Input<string>;
        /**
         * New or existing data disks to attach to the virtual machine after creation
         */
        dataDiskParameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.DataDiskProperties>[]>;
        /**
         * Indicates whether the virtual machine is to be created without a public IP address.
         */
        disallowPublicIpAddress?: pulumi.Input<boolean>;
        /**
         * The resource ID of the environment that contains this virtual machine, if any.
         */
        environmentId?: pulumi.Input<string>;
        /**
         * The expiration date for VM.
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * The fully-qualified domain name of the virtual machine.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The Microsoft Azure Marketplace image reference of the virtual machine.
         */
        galleryImageReference?: pulumi.Input<inputs.devtestlab.GalleryImageReference>;
        /**
         * Indicates whether this virtual machine uses an SSH key for authentication.
         */
        isAuthenticationWithSshKey?: pulumi.Input<boolean>;
        /**
         * The lab subnet name of the virtual machine.
         */
        labSubnetName?: pulumi.Input<string>;
        /**
         * The lab virtual network identifier of the virtual machine.
         */
        labVirtualNetworkId?: pulumi.Input<string>;
        /**
         * Last known compute power state captured in DTL
         */
        lastKnownPowerState?: pulumi.Input<string>;
        /**
         * The network interface properties.
         */
        networkInterface?: pulumi.Input<inputs.devtestlab.NetworkInterfaceProperties>;
        /**
         * The notes of the virtual machine.
         */
        notes?: pulumi.Input<string>;
        /**
         * The OS type of the virtual machine.
         */
        osType?: pulumi.Input<string>;
        /**
         * The object identifier of the owner of the virtual machine.
         */
        ownerObjectId?: pulumi.Input<string>;
        /**
         * The user principal name of the virtual machine owner.
         */
        ownerUserPrincipalName?: pulumi.Input<string>;
        /**
         * The password of the virtual machine administrator.
         */
        password?: pulumi.Input<string>;
        /**
         * The id of the plan associated with the virtual machine image
         */
        planId?: pulumi.Input<string>;
        /**
         * Virtual Machine schedules to be created
         */
        scheduleParameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.ScheduleCreationParameter>[]>;
        /**
         * The size of the virtual machine.
         */
        size?: pulumi.Input<string>;
        /**
         * The SSH key of the virtual machine administrator.
         */
        sshKey?: pulumi.Input<string>;
        /**
         * Storage type to use for virtual machine (i.e. Standard, Premium).
         */
        storageType?: pulumi.Input<string>;
        /**
         * The user name of the virtual machine.
         */
        userName?: pulumi.Input<string>;
        /**
         * Tells source of creation of lab virtual machine. Output property only.
         */
        virtualMachineCreationSource?: pulumi.Input<string>;
    }

    /**
     * Properties for virtual machine creation.
     */
    export interface LabVirtualMachineCreationParameterPropertiesResponse {
        /**
         * Indicates whether another user can take ownership of the virtual machine
         */
        allowClaim?: pulumi.Input<boolean>;
        /**
         * The artifact deployment status for the virtual machine.
         */
        artifactDeploymentStatus?: pulumi.Input<inputs.devtestlab.ArtifactDeploymentStatusPropertiesResponse>;
        /**
         * The artifacts to be installed on the virtual machine.
         */
        artifacts?: pulumi.Input<pulumi.Input<inputs.devtestlab.ArtifactInstallPropertiesResponse>[]>;
        /**
         * The number of virtual machine instances to create.
         */
        bulkCreationParameters?: pulumi.Input<inputs.devtestlab.BulkCreationParametersResponse>;
        /**
         * The resource identifier (Microsoft.Compute) of the virtual machine.
         */
        computeId?: pulumi.Input<string>;
        /**
         * The email address of creator of the virtual machine.
         */
        createdByUser?: pulumi.Input<string>;
        /**
         * The object identifier of the creator of the virtual machine.
         */
        createdByUserId?: pulumi.Input<string>;
        /**
         * The creation date of the virtual machine.
         */
        createdDate?: pulumi.Input<string>;
        /**
         * The custom image identifier of the virtual machine.
         */
        customImageId?: pulumi.Input<string>;
        /**
         * New or existing data disks to attach to the virtual machine after creation
         */
        dataDiskParameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.DataDiskPropertiesResponse>[]>;
        /**
         * Indicates whether the virtual machine is to be created without a public IP address.
         */
        disallowPublicIpAddress?: pulumi.Input<boolean>;
        /**
         * The resource ID of the environment that contains this virtual machine, if any.
         */
        environmentId?: pulumi.Input<string>;
        /**
         * The expiration date for VM.
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * The fully-qualified domain name of the virtual machine.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The Microsoft Azure Marketplace image reference of the virtual machine.
         */
        galleryImageReference?: pulumi.Input<inputs.devtestlab.GalleryImageReferenceResponse>;
        /**
         * Indicates whether this virtual machine uses an SSH key for authentication.
         */
        isAuthenticationWithSshKey?: pulumi.Input<boolean>;
        /**
         * The lab subnet name of the virtual machine.
         */
        labSubnetName?: pulumi.Input<string>;
        /**
         * The lab virtual network identifier of the virtual machine.
         */
        labVirtualNetworkId?: pulumi.Input<string>;
        /**
         * Last known compute power state captured in DTL
         */
        lastKnownPowerState?: pulumi.Input<string>;
        /**
         * The network interface properties.
         */
        networkInterface?: pulumi.Input<inputs.devtestlab.NetworkInterfacePropertiesResponse>;
        /**
         * The notes of the virtual machine.
         */
        notes?: pulumi.Input<string>;
        /**
         * The OS type of the virtual machine.
         */
        osType?: pulumi.Input<string>;
        /**
         * The object identifier of the owner of the virtual machine.
         */
        ownerObjectId?: pulumi.Input<string>;
        /**
         * The user principal name of the virtual machine owner.
         */
        ownerUserPrincipalName?: pulumi.Input<string>;
        /**
         * The password of the virtual machine administrator.
         */
        password?: pulumi.Input<string>;
        /**
         * The id of the plan associated with the virtual machine image
         */
        planId?: pulumi.Input<string>;
        /**
         * Virtual Machine schedules to be created
         */
        scheduleParameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.ScheduleCreationParameterResponse>[]>;
        /**
         * The size of the virtual machine.
         */
        size?: pulumi.Input<string>;
        /**
         * The SSH key of the virtual machine administrator.
         */
        sshKey?: pulumi.Input<string>;
        /**
         * Storage type to use for virtual machine (i.e. Standard, Premium).
         */
        storageType?: pulumi.Input<string>;
        /**
         * The user name of the virtual machine.
         */
        userName?: pulumi.Input<string>;
        /**
         * Tells source of creation of lab virtual machine. Output property only.
         */
        virtualMachineCreationSource?: pulumi.Input<string>;
    }

    /**
     * Properties for creating a virtual machine.
     */
    export interface LabVirtualMachineCreationParameterResponse {
        /**
         * The location of the new virtual machine or environment
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the virtual machine or environment
         */
        name?: pulumi.Input<string>;
        /**
         * The properties of the resource.
         */
        properties?: pulumi.Input<inputs.devtestlab.LabVirtualMachineCreationParameterPropertiesResponse>;
        /**
         * The tags of the resource.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Properties of a virtual machine.
     */
    export interface LabVirtualMachineProperties {
        /**
         * Indicates whether another user can take ownership of the virtual machine
         */
        allowClaim?: pulumi.Input<boolean>;
        /**
         * The artifact deployment status for the virtual machine.
         */
        artifactDeploymentStatus?: pulumi.Input<inputs.devtestlab.ArtifactDeploymentStatusProperties>;
        /**
         * The artifacts to be installed on the virtual machine.
         */
        artifacts?: pulumi.Input<pulumi.Input<inputs.devtestlab.ArtifactInstallProperties>[]>;
        /**
         * The resource identifier (Microsoft.Compute) of the virtual machine.
         */
        computeId?: pulumi.Input<string>;
        /**
         * The email address of creator of the virtual machine.
         */
        createdByUser?: pulumi.Input<string>;
        /**
         * The object identifier of the creator of the virtual machine.
         */
        createdByUserId?: pulumi.Input<string>;
        /**
         * The creation date of the virtual machine.
         */
        createdDate?: pulumi.Input<string>;
        /**
         * The custom image identifier of the virtual machine.
         */
        customImageId?: pulumi.Input<string>;
        /**
         * New or existing data disks to attach to the virtual machine after creation
         */
        dataDiskParameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.DataDiskProperties>[]>;
        /**
         * Indicates whether the virtual machine is to be created without a public IP address.
         */
        disallowPublicIpAddress?: pulumi.Input<boolean>;
        /**
         * The resource ID of the environment that contains this virtual machine, if any.
         */
        environmentId?: pulumi.Input<string>;
        /**
         * The expiration date for VM.
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * The fully-qualified domain name of the virtual machine.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The Microsoft Azure Marketplace image reference of the virtual machine.
         */
        galleryImageReference?: pulumi.Input<inputs.devtestlab.GalleryImageReference>;
        /**
         * Indicates whether this virtual machine uses an SSH key for authentication.
         */
        isAuthenticationWithSshKey?: pulumi.Input<boolean>;
        /**
         * The lab subnet name of the virtual machine.
         */
        labSubnetName?: pulumi.Input<string>;
        /**
         * The lab virtual network identifier of the virtual machine.
         */
        labVirtualNetworkId?: pulumi.Input<string>;
        /**
         * Last known compute power state captured in DTL
         */
        lastKnownPowerState?: pulumi.Input<string>;
        /**
         * The network interface properties.
         */
        networkInterface?: pulumi.Input<inputs.devtestlab.NetworkInterfaceProperties>;
        /**
         * The notes of the virtual machine.
         */
        notes?: pulumi.Input<string>;
        /**
         * The OS type of the virtual machine.
         */
        osType?: pulumi.Input<string>;
        /**
         * The object identifier of the owner of the virtual machine.
         */
        ownerObjectId?: pulumi.Input<string>;
        /**
         * The user principal name of the virtual machine owner.
         */
        ownerUserPrincipalName?: pulumi.Input<string>;
        /**
         * The password of the virtual machine administrator.
         */
        password?: pulumi.Input<string>;
        /**
         * The id of the plan associated with the virtual machine image
         */
        planId?: pulumi.Input<string>;
        /**
         * Virtual Machine schedules to be created
         */
        scheduleParameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.ScheduleCreationParameter>[]>;
        /**
         * The size of the virtual machine.
         */
        size?: pulumi.Input<string>;
        /**
         * The SSH key of the virtual machine administrator.
         */
        sshKey?: pulumi.Input<string>;
        /**
         * Storage type to use for virtual machine (i.e. Standard, Premium).
         */
        storageType?: pulumi.Input<string>;
        /**
         * The user name of the virtual machine.
         */
        userName?: pulumi.Input<string>;
        /**
         * Tells source of creation of lab virtual machine. Output property only.
         */
        virtualMachineCreationSource?: pulumi.Input<string>;
    }

    /**
     * Properties of a virtual machine.
     */
    export interface LabVirtualMachinePropertiesResponse {
        /**
         * Indicates whether another user can take ownership of the virtual machine
         */
        allowClaim?: pulumi.Input<boolean>;
        /**
         * The applicable schedule for the virtual machine.
         */
        applicableSchedule: pulumi.Input<inputs.devtestlab.ApplicableScheduleResponse>;
        /**
         * The artifact deployment status for the virtual machine.
         */
        artifactDeploymentStatus?: pulumi.Input<inputs.devtestlab.ArtifactDeploymentStatusPropertiesResponse>;
        /**
         * The artifacts to be installed on the virtual machine.
         */
        artifacts?: pulumi.Input<pulumi.Input<inputs.devtestlab.ArtifactInstallPropertiesResponse>[]>;
        /**
         * The resource identifier (Microsoft.Compute) of the virtual machine.
         */
        computeId?: pulumi.Input<string>;
        /**
         * The compute virtual machine properties.
         */
        computeVm: pulumi.Input<inputs.devtestlab.ComputeVmPropertiesResponse>;
        /**
         * The email address of creator of the virtual machine.
         */
        createdByUser?: pulumi.Input<string>;
        /**
         * The object identifier of the creator of the virtual machine.
         */
        createdByUserId?: pulumi.Input<string>;
        /**
         * The creation date of the virtual machine.
         */
        createdDate?: pulumi.Input<string>;
        /**
         * The custom image identifier of the virtual machine.
         */
        customImageId?: pulumi.Input<string>;
        /**
         * New or existing data disks to attach to the virtual machine after creation
         */
        dataDiskParameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.DataDiskPropertiesResponse>[]>;
        /**
         * Indicates whether the virtual machine is to be created without a public IP address.
         */
        disallowPublicIpAddress?: pulumi.Input<boolean>;
        /**
         * The resource ID of the environment that contains this virtual machine, if any.
         */
        environmentId?: pulumi.Input<string>;
        /**
         * The expiration date for VM.
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * The fully-qualified domain name of the virtual machine.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The Microsoft Azure Marketplace image reference of the virtual machine.
         */
        galleryImageReference?: pulumi.Input<inputs.devtestlab.GalleryImageReferenceResponse>;
        /**
         * Indicates whether this virtual machine uses an SSH key for authentication.
         */
        isAuthenticationWithSshKey?: pulumi.Input<boolean>;
        /**
         * The lab subnet name of the virtual machine.
         */
        labSubnetName?: pulumi.Input<string>;
        /**
         * The lab virtual network identifier of the virtual machine.
         */
        labVirtualNetworkId?: pulumi.Input<string>;
        /**
         * Last known compute power state captured in DTL
         */
        lastKnownPowerState?: pulumi.Input<string>;
        /**
         * The network interface properties.
         */
        networkInterface?: pulumi.Input<inputs.devtestlab.NetworkInterfacePropertiesResponse>;
        /**
         * The notes of the virtual machine.
         */
        notes?: pulumi.Input<string>;
        /**
         * The OS type of the virtual machine.
         */
        osType?: pulumi.Input<string>;
        /**
         * The object identifier of the owner of the virtual machine.
         */
        ownerObjectId?: pulumi.Input<string>;
        /**
         * The user principal name of the virtual machine owner.
         */
        ownerUserPrincipalName?: pulumi.Input<string>;
        /**
         * The password of the virtual machine administrator.
         */
        password?: pulumi.Input<string>;
        /**
         * The id of the plan associated with the virtual machine image
         */
        planId?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Virtual Machine schedules to be created
         */
        scheduleParameters?: pulumi.Input<pulumi.Input<inputs.devtestlab.ScheduleCreationParameterResponse>[]>;
        /**
         * The size of the virtual machine.
         */
        size?: pulumi.Input<string>;
        /**
         * The SSH key of the virtual machine administrator.
         */
        sshKey?: pulumi.Input<string>;
        /**
         * Storage type to use for virtual machine (i.e. Standard, Premium).
         */
        storageType?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
        /**
         * The user name of the virtual machine.
         */
        userName?: pulumi.Input<string>;
        /**
         * Tells source of creation of lab virtual machine. Output property only.
         */
        virtualMachineCreationSource?: pulumi.Input<string>;
    }

    /**
     * Information about a Linux OS.
     */
    export interface LinuxOsInfo {
        /**
         * The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
         */
        linuxOsState?: pulumi.Input<string>;
    }

    /**
     * Information about a Linux OS.
     */
    export interface LinuxOsInfoResponse {
        /**
         * The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
         */
        linuxOsState?: pulumi.Input<string>;
    }

    /**
     * Properties of a network interface.
     */
    export interface NetworkInterfaceProperties {
        /**
         * The DNS name.
         */
        dnsName?: pulumi.Input<string>;
        /**
         * The private IP address.
         */
        privateIpAddress?: pulumi.Input<string>;
        /**
         * The public IP address.
         */
        publicIpAddress?: pulumi.Input<string>;
        /**
         * The resource ID of the public IP address.
         */
        publicIpAddressId?: pulumi.Input<string>;
        /**
         * The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
         */
        rdpAuthority?: pulumi.Input<string>;
        /**
         * The configuration for sharing a public IP address across multiple virtual machines.
         */
        sharedPublicIpAddressConfiguration?: pulumi.Input<inputs.devtestlab.SharedPublicIpAddressConfiguration>;
        /**
         * The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
         */
        sshAuthority?: pulumi.Input<string>;
        /**
         * The resource ID of the sub net.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * The resource ID of the virtual network.
         */
        virtualNetworkId?: pulumi.Input<string>;
    }

    /**
     * Properties of a network interface.
     */
    export interface NetworkInterfacePropertiesResponse {
        /**
         * The DNS name.
         */
        dnsName?: pulumi.Input<string>;
        /**
         * The private IP address.
         */
        privateIpAddress?: pulumi.Input<string>;
        /**
         * The public IP address.
         */
        publicIpAddress?: pulumi.Input<string>;
        /**
         * The resource ID of the public IP address.
         */
        publicIpAddressId?: pulumi.Input<string>;
        /**
         * The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
         */
        rdpAuthority?: pulumi.Input<string>;
        /**
         * The configuration for sharing a public IP address across multiple virtual machines.
         */
        sharedPublicIpAddressConfiguration?: pulumi.Input<inputs.devtestlab.SharedPublicIpAddressConfigurationResponse>;
        /**
         * The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
         */
        sshAuthority?: pulumi.Input<string>;
        /**
         * The resource ID of the sub net.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * The resource ID of the virtual network.
         */
        virtualNetworkId?: pulumi.Input<string>;
    }

    /**
     * Properties of a schedule.
     */
    export interface NotificationChannelProperties {
        /**
         * Description of notification.
         */
        description?: pulumi.Input<string>;
        /**
         * The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
         */
        emailRecipient?: pulumi.Input<string>;
        /**
         * The list of event for which this notification is enabled.
         */
        events?: pulumi.Input<pulumi.Input<inputs.devtestlab.Event>[]>;
        /**
         * The locale to use when sending a notification (fallback for unsupported languages is EN).
         */
        notificationLocale?: pulumi.Input<string>;
        /**
         * The webhook URL to send notifications to.
         */
        webHookUrl?: pulumi.Input<string>;
    }

    /**
     * Properties of a schedule.
     */
    export interface NotificationChannelPropertiesResponse {
        /**
         * The creation date of the notification channel.
         */
        createdDate: pulumi.Input<string>;
        /**
         * Description of notification.
         */
        description?: pulumi.Input<string>;
        /**
         * The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
         */
        emailRecipient?: pulumi.Input<string>;
        /**
         * The list of event for which this notification is enabled.
         */
        events?: pulumi.Input<pulumi.Input<inputs.devtestlab.EventResponse>[]>;
        /**
         * The locale to use when sending a notification (fallback for unsupported languages is EN).
         */
        notificationLocale?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
        /**
         * The webhook URL to send notifications to.
         */
        webHookUrl?: pulumi.Input<string>;
    }

    /**
     * Notification settings for a schedule.
     */
    export interface NotificationSettings {
        /**
         * The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
         */
        emailRecipient?: pulumi.Input<string>;
        /**
         * The locale to use when sending a notification (fallback for unsupported languages is EN).
         */
        notificationLocale?: pulumi.Input<string>;
        /**
         * If notifications are enabled for this schedule (i.e. Enabled, Disabled).
         */
        status?: pulumi.Input<string>;
        /**
         * Time in minutes before event at which notification will be sent.
         */
        timeInMinutes?: pulumi.Input<number>;
        /**
         * The webhook URL to which the notification will be sent.
         */
        webhookUrl?: pulumi.Input<string>;
    }

    /**
     * Notification settings for a schedule.
     */
    export interface NotificationSettingsResponse {
        /**
         * The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
         */
        emailRecipient?: pulumi.Input<string>;
        /**
         * The locale to use when sending a notification (fallback for unsupported languages is EN).
         */
        notificationLocale?: pulumi.Input<string>;
        /**
         * If notifications are enabled for this schedule (i.e. Enabled, Disabled).
         */
        status?: pulumi.Input<string>;
        /**
         * Time in minutes before event at which notification will be sent.
         */
        timeInMinutes?: pulumi.Input<number>;
        /**
         * The webhook URL to which the notification will be sent.
         */
        webhookUrl?: pulumi.Input<string>;
    }

    /**
     * Properties of a Policy.
     */
    export interface PolicyProperties {
        /**
         * The description of the policy.
         */
        description?: pulumi.Input<string>;
        /**
         * The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
         */
        evaluatorType?: pulumi.Input<string>;
        /**
         * The fact data of the policy.
         */
        factData?: pulumi.Input<string>;
        /**
         * The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
         */
        factName?: pulumi.Input<string>;
        /**
         * The status of the policy.
         */
        status?: pulumi.Input<string>;
        /**
         * The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
         */
        threshold?: pulumi.Input<string>;
    }

    /**
     * Properties of a Policy.
     */
    export interface PolicyPropertiesResponse {
        /**
         * The creation date of the policy.
         */
        createdDate: pulumi.Input<string>;
        /**
         * The description of the policy.
         */
        description?: pulumi.Input<string>;
        /**
         * The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
         */
        evaluatorType?: pulumi.Input<string>;
        /**
         * The fact data of the policy.
         */
        factData?: pulumi.Input<string>;
        /**
         * The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
         */
        factName?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The status of the policy.
         */
        status?: pulumi.Input<string>;
        /**
         * The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
         */
        threshold?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
    }

    /**
     * Properties of a network port.
     */
    export interface Port {
        /**
         * Backend port of the target virtual machine.
         */
        backendPort?: pulumi.Input<number>;
        /**
         * Protocol type of the port.
         */
        transportProtocol?: pulumi.Input<string>;
    }

    /**
     * Properties of a network port.
     */
    export interface PortResponse {
        /**
         * Backend port of the target virtual machine.
         */
        backendPort?: pulumi.Input<number>;
        /**
         * Protocol type of the port.
         */
        transportProtocol?: pulumi.Input<string>;
    }

    /**
     * Properties for creating a schedule.
     */
    export interface ScheduleCreationParameter {
        /**
         * The location of the new virtual machine or environment
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the virtual machine or environment
         */
        name?: pulumi.Input<string>;
        /**
         * The properties of the schedule.
         */
        properties?: pulumi.Input<inputs.devtestlab.ScheduleCreationParameterProperties>;
        /**
         * The tags of the resource.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Properties for schedule creation.
     */
    export interface ScheduleCreationParameterProperties {
        /**
         * If the schedule will occur once each day of the week, specify the daily recurrence.
         */
        dailyRecurrence?: pulumi.Input<inputs.devtestlab.DayDetails>;
        /**
         * If the schedule will occur multiple times a day, specify the hourly recurrence.
         */
        hourlyRecurrence?: pulumi.Input<inputs.devtestlab.HourDetails>;
        /**
         * Notification settings.
         */
        notificationSettings?: pulumi.Input<inputs.devtestlab.NotificationSettings>;
        /**
         * The status of the schedule (i.e. Enabled, Disabled)
         */
        status?: pulumi.Input<string>;
        /**
         * The resource ID to which the schedule belongs
         */
        targetResourceId?: pulumi.Input<string>;
        /**
         * The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
         */
        taskType?: pulumi.Input<string>;
        /**
         * The time zone ID (e.g. Pacific Standard time).
         */
        timeZoneId?: pulumi.Input<string>;
        /**
         * If the schedule will occur only some days of the week, specify the weekly recurrence.
         */
        weeklyRecurrence?: pulumi.Input<inputs.devtestlab.WeekDetails>;
    }

    /**
     * Properties for schedule creation.
     */
    export interface ScheduleCreationParameterPropertiesResponse {
        /**
         * If the schedule will occur once each day of the week, specify the daily recurrence.
         */
        dailyRecurrence?: pulumi.Input<inputs.devtestlab.DayDetailsResponse>;
        /**
         * If the schedule will occur multiple times a day, specify the hourly recurrence.
         */
        hourlyRecurrence?: pulumi.Input<inputs.devtestlab.HourDetailsResponse>;
        /**
         * Notification settings.
         */
        notificationSettings?: pulumi.Input<inputs.devtestlab.NotificationSettingsResponse>;
        /**
         * The status of the schedule (i.e. Enabled, Disabled)
         */
        status?: pulumi.Input<string>;
        /**
         * The resource ID to which the schedule belongs
         */
        targetResourceId?: pulumi.Input<string>;
        /**
         * The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
         */
        taskType?: pulumi.Input<string>;
        /**
         * The time zone ID (e.g. Pacific Standard time).
         */
        timeZoneId?: pulumi.Input<string>;
        /**
         * If the schedule will occur only some days of the week, specify the weekly recurrence.
         */
        weeklyRecurrence?: pulumi.Input<inputs.devtestlab.WeekDetailsResponse>;
    }

    /**
     * Properties for creating a schedule.
     */
    export interface ScheduleCreationParameterResponse {
        /**
         * The location of the new virtual machine or environment
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the virtual machine or environment
         */
        name?: pulumi.Input<string>;
        /**
         * The properties of the schedule.
         */
        properties?: pulumi.Input<inputs.devtestlab.ScheduleCreationParameterPropertiesResponse>;
        /**
         * The tags of the resource.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Properties of a schedule.
     */
    export interface ScheduleProperties {
        /**
         * If the schedule will occur once each day of the week, specify the daily recurrence.
         */
        dailyRecurrence?: pulumi.Input<inputs.devtestlab.DayDetails>;
        /**
         * If the schedule will occur multiple times a day, specify the hourly recurrence.
         */
        hourlyRecurrence?: pulumi.Input<inputs.devtestlab.HourDetails>;
        /**
         * Notification settings.
         */
        notificationSettings?: pulumi.Input<inputs.devtestlab.NotificationSettings>;
        /**
         * The status of the schedule (i.e. Enabled, Disabled)
         */
        status?: pulumi.Input<string>;
        /**
         * The resource ID to which the schedule belongs
         */
        targetResourceId?: pulumi.Input<string>;
        /**
         * The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
         */
        taskType?: pulumi.Input<string>;
        /**
         * The time zone ID (e.g. Pacific Standard time).
         */
        timeZoneId?: pulumi.Input<string>;
        /**
         * If the schedule will occur only some days of the week, specify the weekly recurrence.
         */
        weeklyRecurrence?: pulumi.Input<inputs.devtestlab.WeekDetails>;
    }

    /**
     * Properties of a schedule.
     */
    export interface SchedulePropertiesResponse {
        /**
         * The creation date of the schedule.
         */
        createdDate: pulumi.Input<string>;
        /**
         * If the schedule will occur once each day of the week, specify the daily recurrence.
         */
        dailyRecurrence?: pulumi.Input<inputs.devtestlab.DayDetailsResponse>;
        /**
         * If the schedule will occur multiple times a day, specify the hourly recurrence.
         */
        hourlyRecurrence?: pulumi.Input<inputs.devtestlab.HourDetailsResponse>;
        /**
         * Notification settings.
         */
        notificationSettings?: pulumi.Input<inputs.devtestlab.NotificationSettingsResponse>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The status of the schedule (i.e. Enabled, Disabled)
         */
        status?: pulumi.Input<string>;
        /**
         * The resource ID to which the schedule belongs
         */
        targetResourceId?: pulumi.Input<string>;
        /**
         * The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
         */
        taskType?: pulumi.Input<string>;
        /**
         * The time zone ID (e.g. Pacific Standard time).
         */
        timeZoneId?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
        /**
         * If the schedule will occur only some days of the week, specify the weekly recurrence.
         */
        weeklyRecurrence?: pulumi.Input<inputs.devtestlab.WeekDetailsResponse>;
    }

    /**
     * A schedule.
     */
    export interface ScheduleResponse {
        /**
         * The identifier of the resource.
         */
        id: pulumi.Input<string>;
        /**
         * The location of the resource.
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the resource.
         */
        name: pulumi.Input<string>;
        /**
         * The properties of the resource.
         */
        properties: pulumi.Input<inputs.devtestlab.SchedulePropertiesResponse>;
        /**
         * The tags of the resource.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of a secret.
     */
    export interface SecretProperties {
        /**
         * The value of the secret for secret creation.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Properties of a secret.
     */
    export interface SecretPropertiesResponse {
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
        /**
         * The value of the secret for secret creation.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Properties of a service fabric.
     */
    export interface ServiceFabricProperties {
        /**
         * The resource id of the environment under which the service fabric resource is present
         */
        environmentId?: pulumi.Input<string>;
        /**
         * The backing service fabric resource's id
         */
        externalServiceFabricId?: pulumi.Input<string>;
    }

    /**
     * Properties of a service fabric.
     */
    export interface ServiceFabricPropertiesResponse {
        /**
         * The applicable schedule for the virtual machine.
         */
        applicableSchedule: pulumi.Input<inputs.devtestlab.ApplicableScheduleResponse>;
        /**
         * The resource id of the environment under which the service fabric resource is present
         */
        environmentId?: pulumi.Input<string>;
        /**
         * The backing service fabric resource's id
         */
        externalServiceFabricId?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
    }

    /**
     * Properties of a virtual machine that determine how it is connected to a load balancer.
     */
    export interface SharedPublicIpAddressConfiguration {
        /**
         * The incoming NAT rules
         */
        inboundNatRules?: pulumi.Input<pulumi.Input<inputs.devtestlab.InboundNatRule>[]>;
    }

    /**
     * Properties of a virtual machine that determine how it is connected to a load balancer.
     */
    export interface SharedPublicIpAddressConfigurationResponse {
        /**
         * The incoming NAT rules
         */
        inboundNatRules?: pulumi.Input<pulumi.Input<inputs.devtestlab.InboundNatRuleResponse>[]>;
    }

    /**
     * Subnet information.
     */
    export interface Subnet {
        /**
         * The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
         */
        allowPublicIp?: pulumi.Input<string>;
        /**
         * The name of the subnet as seen in the lab.
         */
        labSubnetName?: pulumi.Input<string>;
        /**
         * The resource ID of the subnet.
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * Property overrides on a subnet of a virtual network.
     */
    export interface SubnetOverride {
        /**
         * The name given to the subnet within the lab.
         */
        labSubnetName?: pulumi.Input<string>;
        /**
         * The resource ID of the subnet.
         */
        resourceId?: pulumi.Input<string>;
        /**
         * Properties that virtual machines on this subnet will share.
         */
        sharedPublicIpAddressConfiguration?: pulumi.Input<inputs.devtestlab.SubnetSharedPublicIpAddressConfiguration>;
        /**
         * Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
         */
        useInVmCreationPermission?: pulumi.Input<string>;
        /**
         * Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
         */
        usePublicIpAddressPermission?: pulumi.Input<string>;
        /**
         * The virtual network pool associated with this subnet.
         */
        virtualNetworkPoolName?: pulumi.Input<string>;
    }

    /**
     * Property overrides on a subnet of a virtual network.
     */
    export interface SubnetOverrideResponse {
        /**
         * The name given to the subnet within the lab.
         */
        labSubnetName?: pulumi.Input<string>;
        /**
         * The resource ID of the subnet.
         */
        resourceId?: pulumi.Input<string>;
        /**
         * Properties that virtual machines on this subnet will share.
         */
        sharedPublicIpAddressConfiguration?: pulumi.Input<inputs.devtestlab.SubnetSharedPublicIpAddressConfigurationResponse>;
        /**
         * Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
         */
        useInVmCreationPermission?: pulumi.Input<string>;
        /**
         * Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
         */
        usePublicIpAddressPermission?: pulumi.Input<string>;
        /**
         * The virtual network pool associated with this subnet.
         */
        virtualNetworkPoolName?: pulumi.Input<string>;
    }

    /**
     * Subnet information.
     */
    export interface SubnetResponse {
        /**
         * The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
         */
        allowPublicIp?: pulumi.Input<string>;
        /**
         * The name of the subnet as seen in the lab.
         */
        labSubnetName?: pulumi.Input<string>;
        /**
         * The resource ID of the subnet.
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * Configuration for public IP address sharing.
     */
    export interface SubnetSharedPublicIpAddressConfiguration {
        /**
         * Backend ports that virtual machines on this subnet are allowed to expose
         */
        allowedPorts?: pulumi.Input<pulumi.Input<inputs.devtestlab.Port>[]>;
    }

    /**
     * Configuration for public IP address sharing.
     */
    export interface SubnetSharedPublicIpAddressConfigurationResponse {
        /**
         * Backend ports that virtual machines on this subnet are allowed to expose
         */
        allowedPorts?: pulumi.Input<pulumi.Input<inputs.devtestlab.PortResponse>[]>;
    }

    /**
     * Identity attributes of a lab user.
     */
    export interface UserIdentity {
        /**
         * Set to the app Id of the client JWT making the request.
         */
        appId?: pulumi.Input<string>;
        /**
         * Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
         */
        objectId?: pulumi.Input<string>;
        /**
         * Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
         */
        principalId?: pulumi.Input<string>;
        /**
         * Set to the principal name / UPN of the client JWT making the request.
         */
        principalName?: pulumi.Input<string>;
        /**
         * Set to the tenant ID of the client JWT making the request.
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * Identity attributes of a lab user.
     */
    export interface UserIdentityResponse {
        /**
         * Set to the app Id of the client JWT making the request.
         */
        appId?: pulumi.Input<string>;
        /**
         * Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
         */
        objectId?: pulumi.Input<string>;
        /**
         * Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
         */
        principalId?: pulumi.Input<string>;
        /**
         * Set to the principal name / UPN of the client JWT making the request.
         */
        principalName?: pulumi.Input<string>;
        /**
         * Set to the tenant ID of the client JWT making the request.
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * Properties of a lab user profile.
     */
    export interface UserProperties {
        /**
         * The identity of the user.
         */
        identity?: pulumi.Input<inputs.devtestlab.UserIdentity>;
        /**
         * The secret store of the user.
         */
        secretStore?: pulumi.Input<inputs.devtestlab.UserSecretStore>;
    }

    /**
     * Properties of a lab user profile.
     */
    export interface UserPropertiesResponse {
        /**
         * The creation date of the user profile.
         */
        createdDate: pulumi.Input<string>;
        /**
         * The identity of the user.
         */
        identity?: pulumi.Input<inputs.devtestlab.UserIdentityResponse>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The secret store of the user.
         */
        secretStore?: pulumi.Input<inputs.devtestlab.UserSecretStoreResponse>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
    }

    /**
     * Properties of a user's secret store.
     */
    export interface UserSecretStore {
        /**
         * The ID of the user's Key vault.
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * The URI of the user's Key vault.
         */
        keyVaultUri?: pulumi.Input<string>;
    }

    /**
     * Properties of a user's secret store.
     */
    export interface UserSecretStoreResponse {
        /**
         * The ID of the user's Key vault.
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * The URI of the user's Key vault.
         */
        keyVaultUri?: pulumi.Input<string>;
    }

    /**
     * Properties of a virtual network.
     */
    export interface VirtualNetworkProperties {
        /**
         * The allowed subnets of the virtual network.
         */
        allowedSubnets?: pulumi.Input<pulumi.Input<inputs.devtestlab.Subnet>[]>;
        /**
         * The description of the virtual network.
         */
        description?: pulumi.Input<string>;
        /**
         * The Microsoft.Network resource identifier of the virtual network.
         */
        externalProviderResourceId?: pulumi.Input<string>;
        /**
         * The subnet overrides of the virtual network.
         */
        subnetOverrides?: pulumi.Input<pulumi.Input<inputs.devtestlab.SubnetOverride>[]>;
    }

    /**
     * Properties of a virtual network.
     */
    export interface VirtualNetworkPropertiesResponse {
        /**
         * The allowed subnets of the virtual network.
         */
        allowedSubnets?: pulumi.Input<pulumi.Input<inputs.devtestlab.SubnetResponse>[]>;
        /**
         * The creation date of the virtual network.
         */
        createdDate: pulumi.Input<string>;
        /**
         * The description of the virtual network.
         */
        description?: pulumi.Input<string>;
        /**
         * The Microsoft.Network resource identifier of the virtual network.
         */
        externalProviderResourceId?: pulumi.Input<string>;
        /**
         * The external subnet properties.
         */
        externalSubnets: pulumi.Input<pulumi.Input<inputs.devtestlab.ExternalSubnetResponse>[]>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The subnet overrides of the virtual network.
         */
        subnetOverrides?: pulumi.Input<pulumi.Input<inputs.devtestlab.SubnetOverrideResponse>[]>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier: pulumi.Input<string>;
    }

    /**
     * Properties of a weekly schedule.
     */
    export interface WeekDetails {
        /**
         * The time of the day the schedule will occur.
         */
        time?: pulumi.Input<string>;
        /**
         * The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
         */
        weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of a weekly schedule.
     */
    export interface WeekDetailsResponse {
        /**
         * The time of the day the schedule will occur.
         */
        time?: pulumi.Input<string>;
        /**
         * The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
         */
        weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Information about a Windows OS.
     */
    export interface WindowsOsInfo {
        /**
         * The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
         */
        windowsOsState?: pulumi.Input<string>;
    }

    /**
     * Information about a Windows OS.
     */
    export interface WindowsOsInfoResponse {
        /**
         * The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
         */
        windowsOsState?: pulumi.Input<string>;
    }
}

export namespace documentdb {
    export interface ApiProperties {
        /**
         * Describes the ServerVersion of an a MongoDB account.
         */
        serverVersion?: pulumi.Input<string>;
    }

    export interface ApiPropertiesResponse {
        /**
         * Describes the ServerVersion of an a MongoDB account.
         */
        serverVersion?: pulumi.Input<string>;
    }

    export interface AutoscaleSettings {
        /**
         * Represents maximum throughput, the resource can scale up to.
         */
        maxThroughput?: pulumi.Input<number>;
    }

    /**
     * Cosmos DB capability object
     */
    export interface Capability {
        /**
         * Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Cosmos DB capability object
     */
    export interface CapabilityResponse {
        /**
         * Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Properties to create and update Azure Cosmos DB Cassandra keyspace.
     */
    export interface CassandraKeyspaceCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a Cassandra keyspace
         */
        resource: pulumi.Input<inputs.documentdb.CassandraKeyspaceResource>;
    }

    /**
     * The properties of an Azure Cosmos DB Cassandra keyspace
     */
    export interface CassandraKeyspaceGetPropertiesResponse {
        options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB Cassandra keyspace resource object
     */
    export interface CassandraKeyspaceResource {
        /**
         * Name of the Cosmos DB Cassandra keyspace
         */
        id: pulumi.Input<string>;
    }

    /**
     * Cosmos DB Cassandra table partition key
     */
    export interface CassandraPartitionKey {
        /**
         * Name of the Cosmos DB Cassandra table partition key
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Cosmos DB Cassandra table schema
     */
    export interface CassandraSchema {
        /**
         * List of cluster key.
         */
        clusterKeys?: pulumi.Input<pulumi.Input<inputs.documentdb.ClusterKey>[]>;
        /**
         * List of Cassandra table columns.
         */
        columns?: pulumi.Input<pulumi.Input<inputs.documentdb.Column>[]>;
        /**
         * List of partition key.
         */
        partitionKeys?: pulumi.Input<pulumi.Input<inputs.documentdb.CassandraPartitionKey>[]>;
    }

    /**
     * Properties to create and update Azure Cosmos DB Cassandra table.
     */
    export interface CassandraTableCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a Cassandra table
         */
        resource: pulumi.Input<inputs.documentdb.CassandraTableResource>;
    }

    /**
     * The properties of an Azure Cosmos DB Cassandra table
     */
    export interface CassandraTableGetPropertiesResponse {
        options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB Cassandra table resource object
     */
    export interface CassandraTableResource {
        /**
         * Analytical TTL.
         */
        analyticalStorageTtl?: pulumi.Input<number>;
        /**
         * Time to live of the Cosmos DB Cassandra table
         */
        defaultTtl?: pulumi.Input<number>;
        /**
         * Name of the Cosmos DB Cassandra table
         */
        id: pulumi.Input<string>;
        /**
         * Schema of the Cosmos DB Cassandra table
         */
        schema?: pulumi.Input<inputs.documentdb.CassandraSchema>;
    }

    /**
     * Cosmos DB Cassandra table cluster key
     */
    export interface ClusterKey {
        /**
         * Name of the Cosmos DB Cassandra table cluster key
         */
        name?: pulumi.Input<string>;
        /**
         * Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
         */
        orderBy?: pulumi.Input<string>;
    }

    /**
     * Cosmos DB Cassandra table column
     */
    export interface Column {
        /**
         * Name of the Cosmos DB Cassandra table column
         */
        name?: pulumi.Input<string>;
        /**
         * Type of the Cosmos DB Cassandra table column
         */
        type?: pulumi.Input<string>;
    }

    /**
     * List of composite path
     */
    export interface CompositePathList {
    }

    /**
     * The conflict resolution policy for the container.
     */
    export interface ConflictResolutionPolicy {
        /**
         * The conflict resolution path in the case of LastWriterWins mode.
         */
        conflictResolutionPath?: pulumi.Input<string>;
        /**
         * The procedure to resolve conflicts in the case of custom mode.
         */
        conflictResolutionProcedure?: pulumi.Input<string>;
        /**
         * Indicates the conflict resolution mode.
         */
        mode?: pulumi.Input<string>;
    }

    /**
     * The consistency policy for the Cosmos DB database account.
     */
    export interface ConsistencyPolicy {
        /**
         * The default consistency level and configuration settings of the Cosmos DB account.
         */
        defaultConsistencyLevel: pulumi.Input<string>;
        /**
         * When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
         */
        maxIntervalInSeconds?: pulumi.Input<number>;
        /**
         * When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
         */
        maxStalenessPrefix?: pulumi.Input<number>;
    }

    /**
     * The consistency policy for the Cosmos DB database account.
     */
    export interface ConsistencyPolicyResponse {
        /**
         * The default consistency level and configuration settings of the Cosmos DB account.
         */
        defaultConsistencyLevel: pulumi.Input<string>;
        /**
         * When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
         */
        maxIntervalInSeconds?: pulumi.Input<number>;
        /**
         * When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
         */
        maxStalenessPrefix?: pulumi.Input<number>;
    }

    /**
     * The configuration of the partition key to be used for partitioning data into multiple partitions
     */
    export interface ContainerPartitionKey {
        /**
         * Indicates the kind of algorithm used for partitioning
         */
        kind?: pulumi.Input<string>;
        /**
         * List of paths using which data within the container can be partitioned
         */
        paths?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Indicates the version of the partition key definition
         */
        version?: pulumi.Input<number>;
    }

    /**
     * CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
     */
    export interface CreateUpdateOptions {
        /**
         * Specifies the Autoscale settings.
         */
        autoscaleSettings?: pulumi.Input<inputs.documentdb.AutoscaleSettings>;
        /**
         * Request Units per second. For example, "throughput": 10000.
         */
        throughput?: pulumi.Input<number>;
    }

    /**
     * Properties to create and update Azure Cosmos DB database accounts.
     */
    export interface DatabaseAccountCreateUpdateProperties {
        /**
         * API specific properties. Currently, supported only for MongoDB API.
         */
        apiProperties?: pulumi.Input<inputs.documentdb.ApiProperties>;
        /**
         * List of Cosmos DB capabilities for the account
         */
        capabilities?: pulumi.Input<pulumi.Input<inputs.documentdb.Capability>[]>;
        /**
         * The cassandra connector offer type for the Cosmos DB database C* account.
         */
        connectorOffer?: pulumi.Input<string>;
        /**
         * The consistency policy for the Cosmos DB account.
         */
        consistencyPolicy?: pulumi.Input<inputs.documentdb.ConsistencyPolicy>;
        /**
         * The offer type for the database
         */
        databaseAccountOfferType: pulumi.Input<string>;
        /**
         * Disable write operations on metadata resources (databases, containers, throughput) via account keys
         */
        disableKeyBasedMetadataWriteAccess?: pulumi.Input<boolean>;
        /**
         * Flag to indicate whether to enable storage analytics.
         */
        enableAnalyticalStorage?: pulumi.Input<boolean>;
        /**
         * Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
         */
        enableAutomaticFailover?: pulumi.Input<boolean>;
        /**
         * Enables the cassandra connector on the Cosmos DB C* account
         */
        enableCassandraConnector?: pulumi.Input<boolean>;
        /**
         * Flag to indicate whether Free Tier is enabled.
         */
        enableFreeTier?: pulumi.Input<boolean>;
        /**
         * Enables the account to write in multiple locations
         */
        enableMultipleWriteLocations?: pulumi.Input<boolean>;
        /**
         * List of IpRules.
         */
        ipRules?: pulumi.Input<inputs.documentdb.IPRules>;
        /**
         * Flag to indicate whether to enable/disable Virtual Network ACL rules.
         */
        isVirtualNetworkFilterEnabled?: pulumi.Input<boolean>;
        /**
         * The URI of the key vault
         */
        keyVaultKeyUri?: pulumi.Input<string>;
        /**
         * An array that contains the georeplication locations enabled for the Cosmos DB account.
         */
        locations: pulumi.Input<pulumi.Input<inputs.documentdb.Location>[]>;
        /**
         * Whether requests from Public Network are allowed
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * List of Virtual Network ACL rules configured for the Cosmos DB account.
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.documentdb.VirtualNetworkRule>[]>;
    }

    /**
     * Properties for the database account.
     */
    export interface DatabaseAccountGetPropertiesResponse {
        /**
         * API specific properties.
         */
        apiProperties?: pulumi.Input<inputs.documentdb.ApiPropertiesResponse>;
        /**
         * List of Cosmos DB capabilities for the account
         */
        capabilities?: pulumi.Input<pulumi.Input<inputs.documentdb.CapabilityResponse>[]>;
        /**
         * The cassandra connector offer type for the Cosmos DB database C* account.
         */
        connectorOffer?: pulumi.Input<string>;
        /**
         * The consistency policy for the Cosmos DB database account.
         */
        consistencyPolicy?: pulumi.Input<inputs.documentdb.ConsistencyPolicyResponse>;
        /**
         * The offer type for the Cosmos DB database account. Default value: Standard.
         */
        databaseAccountOfferType: pulumi.Input<string>;
        /**
         * Disable write operations on metadata resources (databases, containers, throughput) via account keys
         */
        disableKeyBasedMetadataWriteAccess?: pulumi.Input<boolean>;
        /**
         * The connection endpoint for the Cosmos DB database account.
         */
        documentEndpoint: pulumi.Input<string>;
        /**
         * Flag to indicate whether to enable storage analytics.
         */
        enableAnalyticalStorage?: pulumi.Input<boolean>;
        /**
         * Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
         */
        enableAutomaticFailover?: pulumi.Input<boolean>;
        /**
         * Enables the cassandra connector on the Cosmos DB C* account
         */
        enableCassandraConnector?: pulumi.Input<boolean>;
        /**
         * Flag to indicate whether Free Tier is enabled.
         */
        enableFreeTier?: pulumi.Input<boolean>;
        /**
         * Enables the account to write in multiple locations
         */
        enableMultipleWriteLocations?: pulumi.Input<boolean>;
        /**
         * An array that contains the regions ordered by their failover priorities.
         */
        failoverPolicies: pulumi.Input<pulumi.Input<inputs.documentdb.FailoverPolicyResponse>[]>;
        /**
         * List of IpRules.
         */
        ipRules?: pulumi.Input<inputs.documentdb.IPRulesResponse>;
        /**
         * Flag to indicate whether to enable/disable Virtual Network ACL rules.
         */
        isVirtualNetworkFilterEnabled?: pulumi.Input<boolean>;
        /**
         * The URI of the key vault
         */
        keyVaultKeyUri?: pulumi.Input<string>;
        /**
         * An array that contains all of the locations enabled for the Cosmos DB account.
         */
        locations: pulumi.Input<pulumi.Input<inputs.documentdb.LocationResponse>[]>;
        /**
         * List of Private Endpoint Connections configured for the Cosmos DB account.
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.documentdb.PrivateEndpointConnectionResponse>[]>;
        /**
         * The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Whether requests from Public Network are allowed
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * An array that contains of the read locations enabled for the Cosmos DB account.
         */
        readLocations: pulumi.Input<pulumi.Input<inputs.documentdb.LocationResponse>[]>;
        /**
         * List of Virtual Network ACL rules configured for the Cosmos DB account.
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.documentdb.VirtualNetworkRuleResponse>[]>;
        /**
         * An array that contains the write location for the Cosmos DB account.
         */
        writeLocations: pulumi.Input<pulumi.Input<inputs.documentdb.LocationResponse>[]>;
    }

    export interface ExcludedPath {
        /**
         * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
         */
        path?: pulumi.Input<string>;
    }

    /**
     * The failover policy for a given region of a database account.
     */
    export interface FailoverPolicyResponse {
        /**
         * The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
         */
        failoverPriority?: pulumi.Input<number>;
        /**
         * The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
         */
        id: pulumi.Input<string>;
        /**
         * The name of the region in which the database account exists.
         */
        locationName?: pulumi.Input<string>;
    }

    /**
     * Properties to create and update Azure Cosmos DB Gremlin database.
     */
    export interface GremlinDatabaseCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a Gremlin database
         */
        resource: pulumi.Input<inputs.documentdb.GremlinDatabaseResource>;
    }

    /**
     * The properties of an Azure Cosmos DB SQL database
     */
    export interface GremlinDatabaseGetPropertiesResponse {
        options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB Gremlin database resource object
     */
    export interface GremlinDatabaseResource {
        /**
         * Name of the Cosmos DB Gremlin database
         */
        id: pulumi.Input<string>;
    }

    /**
     * Properties to create and update Azure Cosmos DB Gremlin graph.
     */
    export interface GremlinGraphCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a Gremlin graph
         */
        resource: pulumi.Input<inputs.documentdb.GremlinGraphResource>;
    }

    /**
     * The properties of an Azure Cosmos DB Gremlin graph
     */
    export interface GremlinGraphGetPropertiesResponse {
        options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB Gremlin graph resource object
     */
    export interface GremlinGraphResource {
        /**
         * The conflict resolution policy for the graph.
         */
        conflictResolutionPolicy?: pulumi.Input<inputs.documentdb.ConflictResolutionPolicy>;
        /**
         * Default time to live
         */
        defaultTtl?: pulumi.Input<number>;
        /**
         * Name of the Cosmos DB Gremlin graph
         */
        id: pulumi.Input<string>;
        /**
         * The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
         */
        indexingPolicy?: pulumi.Input<inputs.documentdb.IndexingPolicy>;
        /**
         * The configuration of the partition key to be used for partitioning data into multiple partitions
         */
        partitionKey?: pulumi.Input<inputs.documentdb.ContainerPartitionKey>;
        /**
         * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
         */
        uniqueKeyPolicy?: pulumi.Input<inputs.documentdb.UniqueKeyPolicy>;
    }

    /**
     * Array of IpAddressOrRange objects.
     */
    export interface IPRules {
    }

    /**
     * Array of IpAddressOrRange objects.
     */
    export interface IPRulesResponse {
    }

    /**
     * The paths that are included in indexing
     */
    export interface IncludedPath {
        /**
         * List of indexes for this path
         */
        indexes?: pulumi.Input<pulumi.Input<inputs.documentdb.Indexes>[]>;
        /**
         * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
         */
        path?: pulumi.Input<string>;
    }

    /**
     * The indexes for the path.
     */
    export interface Indexes {
        /**
         * The datatype for which the indexing behavior is applied to.
         */
        dataType?: pulumi.Input<string>;
        /**
         * Indicates the type of index.
         */
        kind?: pulumi.Input<string>;
        /**
         * The precision of the index. -1 is maximum precision.
         */
        precision?: pulumi.Input<number>;
    }

    /**
     * Cosmos DB indexing policy
     */
    export interface IndexingPolicy {
        /**
         * Indicates if the indexing policy is automatic
         */
        automatic?: pulumi.Input<boolean>;
        /**
         * List of composite path list
         */
        compositeIndexes?: pulumi.Input<pulumi.Input<inputs.documentdb.CompositePathList>[]>;
        /**
         * List of paths to exclude from indexing
         */
        excludedPaths?: pulumi.Input<pulumi.Input<inputs.documentdb.ExcludedPath>[]>;
        /**
         * List of paths to include in the indexing
         */
        includedPaths?: pulumi.Input<pulumi.Input<inputs.documentdb.IncludedPath>[]>;
        /**
         * Indicates the indexing mode.
         */
        indexingMode?: pulumi.Input<string>;
        /**
         * List of spatial specifics
         */
        spatialIndexes?: pulumi.Input<pulumi.Input<inputs.documentdb.SpatialSpec>[]>;
    }

    /**
     * A region in which the Azure Cosmos DB database account is deployed.
     */
    export interface Location {
        /**
         * The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
         */
        failoverPriority?: pulumi.Input<number>;
        /**
         * Flag to indicate whether or not this region is an AvailabilityZone region
         */
        isZoneRedundant?: pulumi.Input<boolean>;
        /**
         * The name of the region.
         */
        locationName?: pulumi.Input<string>;
        /**
         * The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * A region in which the Azure Cosmos DB database account is deployed.
     */
    export interface LocationResponse {
        /**
         * The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
         */
        documentEndpoint: pulumi.Input<string>;
        /**
         * The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
         */
        failoverPriority?: pulumi.Input<number>;
        /**
         * The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
         */
        id: pulumi.Input<string>;
        /**
         * Flag to indicate whether or not this region is an AvailabilityZone region
         */
        isZoneRedundant?: pulumi.Input<boolean>;
        /**
         * The name of the region.
         */
        locationName?: pulumi.Input<string>;
        /**
         * The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Properties to create and update Azure Cosmos DB MongoDB collection.
     */
    export interface MongoDBCollectionCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a MongoDB collection
         */
        resource: pulumi.Input<inputs.documentdb.MongoDBCollectionResource>;
    }

    /**
     * The properties of an Azure Cosmos DB MongoDB collection
     */
    export interface MongoDBCollectionGetPropertiesResponse {
        options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB MongoDB collection resource object
     */
    export interface MongoDBCollectionResource {
        /**
         * Analytical TTL.
         */
        analyticalStorageTtl?: pulumi.Input<number>;
        /**
         * Name of the Cosmos DB MongoDB collection
         */
        id: pulumi.Input<string>;
        /**
         * List of index keys
         */
        indexes?: pulumi.Input<pulumi.Input<inputs.documentdb.MongoIndex>[]>;
        /**
         * A key-value pair of shard keys to be applied for the request.
         */
        shardKey?: pulumi.Input<inputs.documentdb.ShardKeys>;
    }

    /**
     * Properties to create and update Azure Cosmos DB MongoDB database.
     */
    export interface MongoDBDatabaseCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a MongoDB database
         */
        resource: pulumi.Input<inputs.documentdb.MongoDBDatabaseResource>;
    }

    /**
     * The properties of an Azure Cosmos DB MongoDB database
     */
    export interface MongoDBDatabaseGetPropertiesResponse {
        options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB MongoDB database resource object
     */
    export interface MongoDBDatabaseResource {
        /**
         * Name of the Cosmos DB MongoDB database
         */
        id: pulumi.Input<string>;
    }

    /**
     * Cosmos DB MongoDB collection index key
     */
    export interface MongoIndex {
        /**
         * Cosmos DB MongoDB collection index keys
         */
        key?: pulumi.Input<inputs.documentdb.MongoIndexKeys>;
        /**
         * Cosmos DB MongoDB collection index key options
         */
        options?: pulumi.Input<inputs.documentdb.MongoIndexOptions>;
    }

    /**
     * Cosmos DB MongoDB collection resource object
     */
    export interface MongoIndexKeys {
        /**
         * List of keys for each MongoDB collection in the Azure Cosmos DB service
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Cosmos DB MongoDB collection index options
     */
    export interface MongoIndexOptions {
        /**
         * Expire after seconds
         */
        expireAfterSeconds?: pulumi.Input<number>;
        /**
         * Is unique or not
         */
        unique?: pulumi.Input<boolean>;
    }

    /**
     * Properties of a notebook workspace resource.
     */
    export interface NotebookWorkspacePropertiesResponse {
        /**
         * Specifies the endpoint of Notebook server.
         */
        notebookServerEndpoint: pulumi.Input<string>;
        /**
         * Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Properties of a private endpoint connection.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * Private endpoint which the connection belongs to.
         */
        privateEndpoint?: pulumi.Input<inputs.documentdb.PrivateEndpointPropertyResponse>;
        /**
         * Connection State of the Private Endpoint Connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.documentdb.PrivateLinkServiceConnectionStatePropertyResponse>;
    }

    /**
     * A private endpoint connection
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
         */
        id: pulumi.Input<string>;
        /**
         * The name of the resource
         */
        name: pulumi.Input<string>;
        /**
         * Resource properties.
         */
        properties?: pulumi.Input<inputs.documentdb.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Private endpoint which the connection belongs to.
     */
    export interface PrivateEndpointPropertyResponse {
        /**
         * Resource id of the private endpoint.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Connection State of the Private Endpoint Connection.
     */
    export interface PrivateLinkServiceConnectionStatePropertyResponse {
        /**
         * Any action that is required beyond basic workflow (approve/ reject/ disconnect)
         */
        actionsRequired: pulumi.Input<string>;
        /**
         * The private link service connection status.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The shard key and partition kind pair, only support "Hash" partition kind
     */
    export interface ShardKeys {
    }

    export interface SpatialSpec {
        /**
         * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
         */
        path?: pulumi.Input<string>;
        /**
         * List of path's spatial type
         */
        types?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties to create and update Azure Cosmos DB container.
     */
    export interface SqlContainerCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a container
         */
        resource: pulumi.Input<inputs.documentdb.SqlContainerResource>;
    }

    /**
     * The properties of an Azure Cosmos DB container
     */
    export interface SqlContainerGetPropertiesResponse {
        options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB SQL container resource object
     */
    export interface SqlContainerResource {
        /**
         * The conflict resolution policy for the container.
         */
        conflictResolutionPolicy?: pulumi.Input<inputs.documentdb.ConflictResolutionPolicy>;
        /**
         * Default time to live
         */
        defaultTtl?: pulumi.Input<number>;
        /**
         * Name of the Cosmos DB SQL container
         */
        id: pulumi.Input<string>;
        /**
         * The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
         */
        indexingPolicy?: pulumi.Input<inputs.documentdb.IndexingPolicy>;
        /**
         * The configuration of the partition key to be used for partitioning data into multiple partitions
         */
        partitionKey?: pulumi.Input<inputs.documentdb.ContainerPartitionKey>;
        /**
         * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
         */
        uniqueKeyPolicy?: pulumi.Input<inputs.documentdb.UniqueKeyPolicy>;
    }

    /**
     * Properties to create and update Azure Cosmos DB SQL database.
     */
    export interface SqlDatabaseCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a SQL database
         */
        resource: pulumi.Input<inputs.documentdb.SqlDatabaseResource>;
    }

    /**
     * The properties of an Azure Cosmos DB SQL database
     */
    export interface SqlDatabaseGetPropertiesResponse {
        options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        resource?: pulumi.Input<inputs.documentdb.SqlDatabaseGetPropertiesResponseProperties>;
    }

    export interface SqlDatabaseGetPropertiesResponseProperties {
        /**
         * A system generated property that specified the addressable path of the collections resource.
         */
        _colls?: pulumi.Input<string>;
        /**
         * A system generated property representing the resource etag required for optimistic concurrency control.
         */
        _etag: pulumi.Input<string>;
        /**
         * A system generated property. A unique identifier.
         */
        _rid: pulumi.Input<string>;
        /**
         * A system generated property that denotes the last updated timestamp of the resource.
         */
        _ts: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * A system generated property that specifies the addressable path of the users resource.
         */
        _users?: pulumi.Input<string>;
        /**
         * Name of the Cosmos DB SQL database
         */
        id: pulumi.Input<string>;
    }

    /**
     * Cosmos DB SQL database resource object
     */
    export interface SqlDatabaseResource {
        /**
         * Name of the Cosmos DB SQL database
         */
        id: pulumi.Input<string>;
    }

    /**
     * Properties to create and update Azure Cosmos DB storedProcedure.
     */
    export interface SqlStoredProcedureCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a storedProcedure
         */
        resource: pulumi.Input<inputs.documentdb.SqlStoredProcedureResource>;
    }

    /**
     * The properties of an Azure Cosmos DB StoredProcedure
     */
    export interface SqlStoredProcedureGetPropertiesResponse {
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB SQL storedProcedure resource object
     */
    export interface SqlStoredProcedureResource {
        /**
         * Body of the Stored Procedure
         */
        body?: pulumi.Input<string>;
        /**
         * Name of the Cosmos DB SQL storedProcedure
         */
        id: pulumi.Input<string>;
    }

    /**
     * Properties to create and update Azure Cosmos DB trigger.
     */
    export interface SqlTriggerCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a trigger
         */
        resource: pulumi.Input<inputs.documentdb.SqlTriggerResource>;
    }

    /**
     * The properties of an Azure Cosmos DB trigger
     */
    export interface SqlTriggerGetPropertiesResponse {
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB SQL trigger resource object
     */
    export interface SqlTriggerResource {
        /**
         * Body of the Trigger
         */
        body?: pulumi.Input<string>;
        /**
         * Name of the Cosmos DB SQL trigger
         */
        id: pulumi.Input<string>;
        /**
         * The operation the trigger is associated with
         */
        triggerOperation?: pulumi.Input<string>;
        /**
         * Type of the Trigger
         */
        triggerType?: pulumi.Input<string>;
    }

    /**
     * Properties to create and update Azure Cosmos DB userDefinedFunction.
     */
    export interface SqlUserDefinedFunctionCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a userDefinedFunction
         */
        resource: pulumi.Input<inputs.documentdb.SqlUserDefinedFunctionResource>;
    }

    /**
     * The properties of an Azure Cosmos DB userDefinedFunction
     */
    export interface SqlUserDefinedFunctionGetPropertiesResponse {
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB SQL userDefinedFunction resource object
     */
    export interface SqlUserDefinedFunctionResource {
        /**
         * Body of the User Defined Function
         */
        body?: pulumi.Input<string>;
        /**
         * Name of the Cosmos DB SQL userDefinedFunction
         */
        id: pulumi.Input<string>;
    }

    /**
     * Properties to create and update Azure Cosmos DB Table.
     */
    export interface TableCreateUpdateProperties {
        /**
         * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
         */
        options: pulumi.Input<inputs.documentdb.CreateUpdateOptions>;
        /**
         * The standard JSON format of a Table
         */
        resource: pulumi.Input<inputs.documentdb.TableResource>;
    }

    /**
     * The properties of an Azure Cosmos Table
     */
    export interface TableGetPropertiesResponse {
        options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Cosmos DB table resource object
     */
    export interface TableResource {
        /**
         * Name of the Cosmos DB table
         */
        id: pulumi.Input<string>;
    }

    /**
     * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
     */
    export interface Tags {
    }

    /**
     * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
     */
    export interface TagsResponse {
    }

    /**
     * The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
     */
    export interface UniqueKey {
        /**
         * List of paths must be unique for each document in the Azure Cosmos DB service
         */
        paths?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
     */
    export interface UniqueKeyPolicy {
        /**
         * List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
         */
        uniqueKeys?: pulumi.Input<pulumi.Input<inputs.documentdb.UniqueKey>[]>;
    }

    /**
     * Virtual Network ACL Rule object
     */
    export interface VirtualNetworkRule {
        /**
         * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
         */
        id?: pulumi.Input<string>;
        /**
         * Create firewall rule before the virtual network has vnet service endpoint enabled.
         */
        ignoreMissingVNetServiceEndpoint?: pulumi.Input<boolean>;
    }

    /**
     * Virtual Network ACL Rule object
     */
    export interface VirtualNetworkRuleResponse {
        /**
         * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
         */
        id?: pulumi.Input<string>;
        /**
         * Create firewall rule before the virtual network has vnet service endpoint enabled.
         */
        ignoreMissingVNetServiceEndpoint?: pulumi.Input<boolean>;
    }
}

export namespace domainregistration {
    /**
     * Address information for domain registration.
     */
    export interface Address {
        /**
         * First line of an Address.
         */
        address1: pulumi.Input<string>;
        /**
         * The second line of the Address. Optional.
         */
        address2?: pulumi.Input<string>;
        /**
         * The city for the address.
         */
        city: pulumi.Input<string>;
        /**
         * The country for the address.
         */
        country: pulumi.Input<string>;
        /**
         * The postal code for the address.
         */
        postalCode: pulumi.Input<string>;
        /**
         * The state or province for the address.
         */
        state: pulumi.Input<string>;
    }

    /**
     * Address information for domain registration.
     */
    export interface AddressResponse {
        /**
         * First line of an Address.
         */
        address1: pulumi.Input<string>;
        /**
         * The second line of the Address. Optional.
         */
        address2?: pulumi.Input<string>;
        /**
         * The city for the address.
         */
        city: pulumi.Input<string>;
        /**
         * The country for the address.
         */
        country: pulumi.Input<string>;
        /**
         * The postal code for the address.
         */
        postalCode: pulumi.Input<string>;
        /**
         * The state or province for the address.
         */
        state: pulumi.Input<string>;
    }

    /**
     * Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois 
     * directories as per ICANN requirements.
     */
    export interface Contact {
        /**
         * Mailing address.
         */
        addressMailing?: pulumi.Input<inputs.domainregistration.Address>;
        /**
         * Email address.
         */
        email: pulumi.Input<string>;
        /**
         * Fax number.
         */
        fax?: pulumi.Input<string>;
        /**
         * Job title.
         */
        jobTitle?: pulumi.Input<string>;
        /**
         * First name.
         */
        nameFirst: pulumi.Input<string>;
        /**
         * Last name.
         */
        nameLast: pulumi.Input<string>;
        /**
         * Middle name.
         */
        nameMiddle?: pulumi.Input<string>;
        /**
         * Organization contact belongs to.
         */
        organization?: pulumi.Input<string>;
        /**
         * Phone number.
         */
        phone: pulumi.Input<string>;
    }

    /**
     * Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois 
     * directories as per ICANN requirements.
     */
    export interface ContactResponse {
        /**
         * Mailing address.
         */
        addressMailing?: pulumi.Input<inputs.domainregistration.AddressResponse>;
        /**
         * Email address.
         */
        email: pulumi.Input<string>;
        /**
         * Fax number.
         */
        fax?: pulumi.Input<string>;
        /**
         * Job title.
         */
        jobTitle?: pulumi.Input<string>;
        /**
         * First name.
         */
        nameFirst: pulumi.Input<string>;
        /**
         * Last name.
         */
        nameLast: pulumi.Input<string>;
        /**
         * Middle name.
         */
        nameMiddle?: pulumi.Input<string>;
        /**
         * Organization contact belongs to.
         */
        organization?: pulumi.Input<string>;
        /**
         * Phone number.
         */
        phone: pulumi.Input<string>;
    }

    /**
     * DomainOwnershipIdentifier resource specific properties
     */
    export interface DomainOwnershipIdentifierProperties {
        /**
         * Ownership Id.
         */
        ownershipId?: pulumi.Input<string>;
    }

    /**
     * DomainOwnershipIdentifier resource specific properties
     */
    export interface DomainOwnershipIdentifierResponseProperties {
        /**
         * Ownership Id.
         */
        ownershipId?: pulumi.Input<string>;
    }

    /**
     * Domain resource specific properties
     */
    export interface DomainProperties {
        authCode?: pulumi.Input<string>;
        /**
         * <code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.
         */
        autoRenew?: pulumi.Input<boolean>;
        /**
         * Legal agreement consent.
         */
        consent: pulumi.Input<inputs.domainregistration.DomainPurchaseConsent>;
        /**
         * Administrative contact.
         */
        contactAdmin: pulumi.Input<inputs.domainregistration.Contact>;
        /**
         * Billing contact.
         */
        contactBilling: pulumi.Input<inputs.domainregistration.Contact>;
        /**
         * Registrant contact.
         */
        contactRegistrant: pulumi.Input<inputs.domainregistration.Contact>;
        /**
         * Technical contact.
         */
        contactTech: pulumi.Input<inputs.domainregistration.Contact>;
        /**
         * Current DNS type
         */
        dnsType?: pulumi.Input<string>;
        /**
         * Azure DNS Zone to use
         */
        dnsZoneId?: pulumi.Input<string>;
        /**
         * <code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>.
         */
        privacy?: pulumi.Input<boolean>;
        /**
         * Target DNS type (would be used for migration)
         */
        targetDnsType?: pulumi.Input<string>;
    }

    /**
     * Domain purchase consent object, representing acceptance of applicable legal agreements.
     */
    export interface DomainPurchaseConsent {
        /**
         * Timestamp when the agreements were accepted.
         */
        agreedAt?: pulumi.Input<string>;
        /**
         * Client IP address.
         */
        agreedBy?: pulumi.Input<string>;
        /**
         * List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements API under <code>TopLevelDomain</code> resource.
         */
        agreementKeys?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Domain purchase consent object, representing acceptance of applicable legal agreements.
     */
    export interface DomainPurchaseConsentResponse {
        /**
         * Timestamp when the agreements were accepted.
         */
        agreedAt?: pulumi.Input<string>;
        /**
         * Client IP address.
         */
        agreedBy?: pulumi.Input<string>;
        /**
         * List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements API under <code>TopLevelDomain</code> resource.
         */
        agreementKeys?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Domain resource specific properties
     */
    export interface DomainResponseProperties {
        authCode?: pulumi.Input<string>;
        /**
         * <code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.
         */
        autoRenew?: pulumi.Input<boolean>;
        /**
         * Legal agreement consent.
         */
        consent: pulumi.Input<inputs.domainregistration.DomainPurchaseConsentResponse>;
        /**
         * Administrative contact.
         */
        contactAdmin: pulumi.Input<inputs.domainregistration.ContactResponse>;
        /**
         * Billing contact.
         */
        contactBilling: pulumi.Input<inputs.domainregistration.ContactResponse>;
        /**
         * Registrant contact.
         */
        contactRegistrant: pulumi.Input<inputs.domainregistration.ContactResponse>;
        /**
         * Technical contact.
         */
        contactTech: pulumi.Input<inputs.domainregistration.ContactResponse>;
        /**
         * Domain creation timestamp.
         */
        createdTime: pulumi.Input<string>;
        /**
         * Current DNS type
         */
        dnsType?: pulumi.Input<string>;
        /**
         * Azure DNS Zone to use
         */
        dnsZoneId?: pulumi.Input<string>;
        /**
         * Reasons why domain is not renewable.
         */
        domainNotRenewableReasons: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Domain expiration timestamp.
         */
        expirationTime: pulumi.Input<string>;
        /**
         * Timestamp when the domain was renewed last time.
         */
        lastRenewedTime: pulumi.Input<string>;
        /**
         * All hostnames derived from the domain and assigned to Azure resources.
         */
        managedHostNames: pulumi.Input<pulumi.Input<inputs.domainregistration.HostNameResponse>[]>;
        /**
         * Name servers.
         */
        nameServers: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>.
         */
        privacy?: pulumi.Input<boolean>;
        /**
         * Domain provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * <code>true</code> if Azure can assign this domain to App Service apps; otherwise, <code>false</code>. This value will be <code>true</code> if domain registration status is active and 
         *  it is hosted on name servers Azure has programmatic access to.
         */
        readyForDnsRecordManagement: pulumi.Input<boolean>;
        /**
         * Domain registration status.
         */
        registrationStatus: pulumi.Input<string>;
        /**
         * Target DNS type (would be used for migration)
         */
        targetDnsType?: pulumi.Input<string>;
    }

    /**
     * Details of a hostname derived from a domain.
     */
    export interface HostNameResponse {
        /**
         * Name of the Azure resource the hostname is assigned to. If it is assigned to a Traffic Manager then it will be the Traffic Manager name otherwise it will be the app name.
         */
        azureResourceName?: pulumi.Input<string>;
        /**
         * Type of the Azure resource the hostname is assigned to.
         */
        azureResourceType?: pulumi.Input<string>;
        /**
         * Type of the DNS record.
         */
        customHostNameDnsRecordType?: pulumi.Input<string>;
        /**
         * Type of the hostname.
         */
        hostNameType?: pulumi.Input<string>;
        /**
         * Name of the hostname.
         */
        name?: pulumi.Input<string>;
        /**
         * List of apps the hostname is assigned to. This list will have more than one app only if the hostname is pointing to a Traffic Manager.
         */
        siteNames?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace eventgrid {
    /**
     * ConnectionState information.
     */
    export interface ConnectionState {
        /**
         * Actions required (if any).
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * Description of the connection state.
         */
        description?: pulumi.Input<string>;
        /**
         * Status of the connection.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * ConnectionState information.
     */
    export interface ConnectionStateResponse {
        /**
         * Actions required (if any).
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * Description of the connection state.
         */
        description?: pulumi.Input<string>;
        /**
         * Status of the connection.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Properties of the Domain.
     */
    export interface DomainProperties {
        /**
         * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
         */
        inboundIpRules?: pulumi.Input<pulumi.Input<inputs.eventgrid.InboundIpRule>[]>;
        /**
         * This determines the format that Event Grid should expect for incoming events published to the domain.
         */
        inputSchema?: pulumi.Input<string>;
        /**
         * Information about the InputSchemaMapping which specified the info about mapping event payload.
         */
        inputSchemaMapping?: pulumi.Input<inputs.eventgrid.InputSchemaMapping>;
        /**
         * List of private endpoint connections.
         */
        privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.eventgrid.PrivateEndpointConnection>[]>;
        /**
         * This determines if traffic is allowed over public network. By default it is enabled. 
         * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
         */
        publicNetworkAccess?: pulumi.Input<string>;
    }

    /**
     * Properties of the Domain.
     */
    export interface DomainPropertiesResponse {
        /**
         * Endpoint for the domain.
         */
        endpoint: pulumi.Input<string>;
        /**
         * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
         */
        inboundIpRules?: pulumi.Input<pulumi.Input<inputs.eventgrid.InboundIpRuleResponse>[]>;
        /**
         * This determines the format that Event Grid should expect for incoming events published to the domain.
         */
        inputSchema?: pulumi.Input<string>;
        /**
         * Information about the InputSchemaMapping which specified the info about mapping event payload.
         */
        inputSchemaMapping?: pulumi.Input<inputs.eventgrid.InputSchemaMappingResponse>;
        /**
         * Metric resource id for the domain.
         */
        metricResourceId: pulumi.Input<string>;
        /**
         * List of private endpoint connections.
         */
        privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.eventgrid.PrivateEndpointConnectionResponse>[]>;
        /**
         * Provisioning state of the domain.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * This determines if traffic is allowed over public network. By default it is enabled. 
         * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
         */
        publicNetworkAccess?: pulumi.Input<string>;
    }

    /**
     * Properties of the Domain Topic.
     */
    export interface DomainTopicPropertiesResponse {
        /**
         * Provisioning state of the domain topic.
         */
        provisioningState?: pulumi.Input<string>;
    }

    export interface InboundIpRule {
        /**
         * Action to perform based on the match or no match of the IpMask.
         */
        action?: pulumi.Input<string>;
        /**
         * IP Address in CIDR notation e.g., 10.0.0.0/8.
         */
        ipMask?: pulumi.Input<string>;
    }

    export interface InboundIpRuleResponse {
        /**
         * Action to perform based on the match or no match of the IpMask.
         */
        action?: pulumi.Input<string>;
        /**
         * IP Address in CIDR notation e.g., 10.0.0.0/8.
         */
        ipMask?: pulumi.Input<string>;
    }

    /**
     * By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
     */
    export interface InputSchemaMapping {
        /**
         * Type of the custom mapping
         */
        inputSchemaMappingType: pulumi.Input<string>;
    }

    /**
     * By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
     */
    export interface InputSchemaMappingResponse {
        /**
         * Type of the custom mapping
         */
        inputSchemaMappingType: pulumi.Input<string>;
    }

    /**
     * PrivateEndpoint information.
     */
    export interface PrivateEndpoint {
        /**
         * The ARM identifier for Private Endpoint.
         */
        id?: pulumi.Input<string>;
    }

    export interface PrivateEndpointConnection {
        /**
         * Properties of the PrivateEndpointConnection.
         */
        properties?: pulumi.Input<inputs.eventgrid.PrivateEndpointConnectionProperties>;
    }

    /**
     * Properties of the private endpoint connection resource.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * GroupIds from the private link service resource.
         */
        groupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Private Endpoint resource for this Connection.
         */
        privateEndpoint?: pulumi.Input<inputs.eventgrid.PrivateEndpoint>;
        /**
         * Details about the state of the connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.eventgrid.ConnectionState>;
        /**
         * Provisioning state of the Private Endpoint Connection.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Properties of the private endpoint connection resource.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * GroupIds from the private link service resource.
         */
        groupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Private Endpoint resource for this Connection.
         */
        privateEndpoint?: pulumi.Input<inputs.eventgrid.PrivateEndpointResponse>;
        /**
         * Details about the state of the connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.eventgrid.ConnectionStateResponse>;
        /**
         * Provisioning state of the Private Endpoint Connection.
         */
        provisioningState?: pulumi.Input<string>;
    }

    export interface PrivateEndpointConnectionResponse {
        /**
         * Fully qualified identifier of the resource.
         */
        id: pulumi.Input<string>;
        /**
         * Name of the resource.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the PrivateEndpointConnection.
         */
        properties?: pulumi.Input<inputs.eventgrid.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * PrivateEndpoint information.
     */
    export interface PrivateEndpointResponse {
        /**
         * The ARM identifier for Private Endpoint.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Properties of the Topic
     */
    export interface TopicProperties {
        /**
         * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
         */
        inboundIpRules?: pulumi.Input<pulumi.Input<inputs.eventgrid.InboundIpRule>[]>;
        /**
         * This determines the format that Event Grid should expect for incoming events published to the topic.
         */
        inputSchema?: pulumi.Input<string>;
        /**
         * This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
         */
        inputSchemaMapping?: pulumi.Input<inputs.eventgrid.InputSchemaMapping>;
        privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.eventgrid.PrivateEndpointConnection>[]>;
        /**
         * This determines if traffic is allowed over public network. By default it is enabled. 
         * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
         */
        publicNetworkAccess?: pulumi.Input<string>;
    }

    /**
     * Properties of the Topic
     */
    export interface TopicPropertiesResponse {
        /**
         * Endpoint for the topic.
         */
        endpoint: pulumi.Input<string>;
        /**
         * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
         */
        inboundIpRules?: pulumi.Input<pulumi.Input<inputs.eventgrid.InboundIpRuleResponse>[]>;
        /**
         * This determines the format that Event Grid should expect for incoming events published to the topic.
         */
        inputSchema?: pulumi.Input<string>;
        /**
         * This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
         */
        inputSchemaMapping?: pulumi.Input<inputs.eventgrid.InputSchemaMappingResponse>;
        /**
         * Metric resource id for the topic.
         */
        metricResourceId: pulumi.Input<string>;
        privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.eventgrid.PrivateEndpointConnectionResponse>[]>;
        /**
         * Provisioning state of the topic.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * This determines if traffic is allowed over public network. By default it is enabled. 
         * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
         */
        publicNetworkAccess?: pulumi.Input<string>;
    }
}

export namespace eventhub {
    /**
     * Properties required to the Create Or Update Alias(Disaster Recovery configurations)
     */
    export interface ArmDisasterRecoveryProperties {
        /**
         * Alternate name specified when alias and namespace names are same.
         */
        alternateName?: pulumi.Input<string>;
        /**
         * ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
         */
        partnerNamespace?: pulumi.Input<string>;
    }

    /**
     * Properties required to the Create Or Update Alias(Disaster Recovery configurations)
     */
    export interface ArmDisasterRecoveryResponseProperties {
        /**
         * Alternate name specified when alias and namespace names are same.
         */
        alternateName?: pulumi.Input<string>;
        /**
         * ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
         */
        partnerNamespace?: pulumi.Input<string>;
        /**
         * Number of entities pending to be replicated.
         */
        pendingReplicationOperationsCount: pulumi.Input<number>;
        /**
         * Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
         */
        provisioningState: pulumi.Input<string>;
        /**
         * role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
         */
        role: pulumi.Input<string>;
    }

    /**
     * Properties supplied to create or update AuthorizationRule
     */
    export interface AuthorizationRuleProperties {
        /**
         * The rights associated with the rule.
         */
        rights: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties supplied to create or update AuthorizationRule
     */
    export interface AuthorizationRuleResponseProperties {
        /**
         * The rights associated with the rule.
         */
        rights: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties to configure capture description for eventhub
     */
    export interface CaptureDescription {
        /**
         * Properties of Destination where capture will be stored. (Storage Account, Blob Names)
         */
        destination?: pulumi.Input<inputs.eventhub.Destination>;
        /**
         * A value that indicates whether capture description is enabled. 
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
         */
        encoding?: pulumi.Input<string>;
        /**
         * The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
         */
        intervalInSeconds?: pulumi.Input<number>;
        /**
         * The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
         */
        sizeLimitInBytes?: pulumi.Input<number>;
        /**
         * A value that indicates whether to Skip Empty Archives
         */
        skipEmptyArchives?: pulumi.Input<boolean>;
    }

    /**
     * Properties to configure capture description for eventhub
     */
    export interface CaptureDescriptionResponse {
        /**
         * Properties of Destination where capture will be stored. (Storage Account, Blob Names)
         */
        destination?: pulumi.Input<inputs.eventhub.DestinationResponse>;
        /**
         * A value that indicates whether capture description is enabled. 
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
         */
        encoding?: pulumi.Input<string>;
        /**
         * The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
         */
        intervalInSeconds?: pulumi.Input<number>;
        /**
         * The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
         */
        sizeLimitInBytes?: pulumi.Input<number>;
        /**
         * A value that indicates whether to Skip Empty Archives
         */
        skipEmptyArchives?: pulumi.Input<boolean>;
    }

    /**
     * Single item in List or Get Consumer group operation
     */
    export interface ConsumerGroupProperties {
        /**
         * User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
         */
        userMetadata?: pulumi.Input<string>;
    }

    /**
     * Single item in List or Get Consumer group operation
     */
    export interface ConsumerGroupResponseProperties {
        /**
         * Exact time the message was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * The exact time the message was updated.
         */
        updatedAt: pulumi.Input<string>;
        /**
         * User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
         */
        userMetadata?: pulumi.Input<string>;
    }

    /**
     * Capture storage details for capture description
     */
    export interface Destination {
        /**
         * Name for capture destination
         */
        name?: pulumi.Input<string>;
        /**
         * Properties describing the storage account, blob container and archive name format for capture destination
         */
        properties?: pulumi.Input<inputs.eventhub.DestinationProperties>;
    }

    /**
     * Properties describing the storage account, blob container and archive name format for capture destination
     */
    export interface DestinationProperties {
        /**
         * Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
         */
        archiveNameFormat?: pulumi.Input<string>;
        /**
         * Blob container Name
         */
        blobContainer?: pulumi.Input<string>;
        /**
         * Resource id of the storage account to be used to create the blobs
         */
        storageAccountResourceId?: pulumi.Input<string>;
    }

    /**
     * Capture storage details for capture description
     */
    export interface DestinationResponse {
        /**
         * Name for capture destination
         */
        name?: pulumi.Input<string>;
        /**
         * Properties describing the storage account, blob container and archive name format for capture destination
         */
        properties?: pulumi.Input<inputs.eventhub.DestinationResponseProperties>;
    }

    /**
     * Properties describing the storage account, blob container and archive name format for capture destination
     */
    export interface DestinationResponseProperties {
        /**
         * Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
         */
        archiveNameFormat?: pulumi.Input<string>;
        /**
         * Blob container Name
         */
        blobContainer?: pulumi.Input<string>;
        /**
         * Resource id of the storage account to be used to create the blobs
         */
        storageAccountResourceId?: pulumi.Input<string>;
    }

    /**
     * Namespace properties supplied for create namespace operation.
     */
    export interface EHNamespaceProperties {
        /**
         * Value that indicates whether AutoInflate is enabled for eventhub namespace.
         */
        isAutoInflateEnabled?: pulumi.Input<boolean>;
        /**
         * Value that indicates whether Kafka is enabled for eventhub namespace.
         */
        kafkaEnabled?: pulumi.Input<boolean>;
        /**
         * Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)
         */
        maximumThroughputUnits?: pulumi.Input<number>;
    }

    /**
     * Namespace properties supplied for create namespace operation.
     */
    export interface EHNamespaceResponseProperties {
        /**
         * The time the Namespace was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * Value that indicates whether AutoInflate is enabled for eventhub namespace.
         */
        isAutoInflateEnabled?: pulumi.Input<boolean>;
        /**
         * Value that indicates whether Kafka is enabled for eventhub namespace.
         */
        kafkaEnabled?: pulumi.Input<boolean>;
        /**
         * Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)
         */
        maximumThroughputUnits?: pulumi.Input<number>;
        /**
         * Identifier for Azure Insights metrics.
         */
        metricId: pulumi.Input<string>;
        /**
         * Provisioning state of the Namespace.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Endpoint you can use to perform Service Bus operations.
         */
        serviceBusEndpoint: pulumi.Input<string>;
        /**
         * The time the Namespace was updated.
         */
        updatedAt: pulumi.Input<string>;
    }

    /**
     * Properties supplied to the Create Or Update Event Hub operation.
     */
    export interface EventhubProperties {
        /**
         * Properties of capture description
         */
        captureDescription?: pulumi.Input<inputs.eventhub.CaptureDescription>;
        /**
         * Number of days to retain the events for this Event Hub, value should be 1 to 7 days
         */
        messageRetentionInDays?: pulumi.Input<number>;
        /**
         * Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
         */
        partitionCount?: pulumi.Input<number>;
        /**
         * Enumerates the possible values for the status of the Event Hub.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Properties supplied to the Create Or Update Event Hub operation.
     */
    export interface EventhubResponseProperties {
        /**
         * Properties of capture description
         */
        captureDescription?: pulumi.Input<inputs.eventhub.CaptureDescriptionResponse>;
        /**
         * Exact time the Event Hub was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * Number of days to retain the events for this Event Hub, value should be 1 to 7 days
         */
        messageRetentionInDays?: pulumi.Input<number>;
        /**
         * Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
         */
        partitionCount?: pulumi.Input<number>;
        /**
         * Current number of shards on the Event Hub.
         */
        partitionIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Enumerates the possible values for the status of the Event Hub.
         */
        status?: pulumi.Input<string>;
        /**
         * The exact time the message was updated.
         */
        updatedAt: pulumi.Input<string>;
    }

    /**
     * SKU parameters supplied to the create namespace operation
     */
    export interface Sku {
        /**
         * The Event Hubs throughput units, value should be 0 to 20 throughput units.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Name of this SKU.
         */
        name: pulumi.Input<string>;
        /**
         * The billing tier of this particular SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * SKU parameters supplied to the create namespace operation
     */
    export interface SkuResponse {
        /**
         * The Event Hubs throughput units, value should be 0 to 20 throughput units.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Name of this SKU.
         */
        name: pulumi.Input<string>;
        /**
         * The billing tier of this particular SKU.
         */
        tier?: pulumi.Input<string>;
    }
}

export namespace hdinsight {
    /**
     * Gets the application SSH endpoint
     */
    export interface ApplicationGetEndpoint {
        /**
         * The destination port to connect to.
         */
        destinationPort?: pulumi.Input<number>;
        /**
         * The location of the endpoint.
         */
        location?: pulumi.Input<string>;
        /**
         * The public port to connect to.
         */
        publicPort?: pulumi.Input<number>;
    }

    /**
     * Gets the application SSH endpoint
     */
    export interface ApplicationGetEndpointResponse {
        /**
         * The destination port to connect to.
         */
        destinationPort?: pulumi.Input<number>;
        /**
         * The location of the endpoint.
         */
        location?: pulumi.Input<string>;
        /**
         * The public port to connect to.
         */
        publicPort?: pulumi.Input<number>;
    }

    /**
     * Gets the application HTTP endpoints.
     */
    export interface ApplicationGetHttpsEndpoint {
        /**
         * The list of access modes for the application.
         */
        accessModes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The destination port to connect to.
         */
        destinationPort?: pulumi.Input<number>;
        /**
         * The value indicates whether to disable GatewayAuth.
         */
        disableGatewayAuth?: pulumi.Input<boolean>;
        /**
         * The location of the endpoint.
         */
        location?: pulumi.Input<string>;
        /**
         * The public port to connect to.
         */
        publicPort?: pulumi.Input<number>;
        /**
         * The subdomain suffix of the application.
         */
        subDomainSuffix?: pulumi.Input<string>;
    }

    /**
     * Gets the application HTTP endpoints.
     */
    export interface ApplicationGetHttpsEndpointResponse {
        /**
         * The list of access modes for the application.
         */
        accessModes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The destination port to connect to.
         */
        destinationPort?: pulumi.Input<number>;
        /**
         * The value indicates whether to disable GatewayAuth.
         */
        disableGatewayAuth?: pulumi.Input<boolean>;
        /**
         * The location of the endpoint.
         */
        location?: pulumi.Input<string>;
        /**
         * The public port to connect to.
         */
        publicPort?: pulumi.Input<number>;
        /**
         * The subdomain suffix of the application.
         */
        subDomainSuffix?: pulumi.Input<string>;
    }

    /**
     * The HDInsight cluster application GET response.
     */
    export interface ApplicationProperties {
        /**
         * The application type.
         */
        applicationType?: pulumi.Input<string>;
        /**
         * The list of roles in the cluster.
         */
        computeProfile?: pulumi.Input<inputs.hdinsight.ComputeProfile>;
        /**
         * The list of errors.
         */
        errors?: pulumi.Input<pulumi.Input<inputs.hdinsight.Errors>[]>;
        /**
         * The list of application HTTPS endpoints.
         */
        httpsEndpoints?: pulumi.Input<pulumi.Input<inputs.hdinsight.ApplicationGetHttpsEndpoint>[]>;
        /**
         * The list of install script actions.
         */
        installScriptActions?: pulumi.Input<pulumi.Input<inputs.hdinsight.RuntimeScriptAction>[]>;
        /**
         * The list of application SSH endpoints.
         */
        sshEndpoints?: pulumi.Input<pulumi.Input<inputs.hdinsight.ApplicationGetEndpoint>[]>;
        /**
         * The list of uninstall script actions.
         */
        uninstallScriptActions?: pulumi.Input<pulumi.Input<inputs.hdinsight.RuntimeScriptAction>[]>;
    }

    /**
     * The HDInsight cluster application GET response.
     */
    export interface ApplicationPropertiesResponse {
        /**
         * The application state.
         */
        applicationState: pulumi.Input<string>;
        /**
         * The application type.
         */
        applicationType?: pulumi.Input<string>;
        /**
         * The list of roles in the cluster.
         */
        computeProfile?: pulumi.Input<inputs.hdinsight.ComputeProfileResponse>;
        /**
         * The application create date time.
         */
        createdDate: pulumi.Input<string>;
        /**
         * The list of errors.
         */
        errors?: pulumi.Input<pulumi.Input<inputs.hdinsight.ErrorsResponse>[]>;
        /**
         * The list of application HTTPS endpoints.
         */
        httpsEndpoints?: pulumi.Input<pulumi.Input<inputs.hdinsight.ApplicationGetHttpsEndpointResponse>[]>;
        /**
         * The list of install script actions.
         */
        installScriptActions?: pulumi.Input<pulumi.Input<inputs.hdinsight.RuntimeScriptActionResponse>[]>;
        /**
         * The marketplace identifier.
         */
        marketplaceIdentifier: pulumi.Input<string>;
        /**
         * The provisioning state of the application.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The list of application SSH endpoints.
         */
        sshEndpoints?: pulumi.Input<pulumi.Input<inputs.hdinsight.ApplicationGetEndpointResponse>[]>;
        /**
         * The list of uninstall script actions.
         */
        uninstallScriptActions?: pulumi.Input<pulumi.Input<inputs.hdinsight.RuntimeScriptActionResponse>[]>;
    }

    /**
     * The autoscale request parameters
     */
    export interface Autoscale {
        /**
         * Parameters for load-based autoscale
         */
        capacity?: pulumi.Input<inputs.hdinsight.AutoscaleCapacity>;
        /**
         * Parameters for schedule-based autoscale
         */
        recurrence?: pulumi.Input<inputs.hdinsight.AutoscaleRecurrence>;
    }

    /**
     * The load-based autoscale request parameters
     */
    export interface AutoscaleCapacity {
        /**
         * The maximum instance count of the cluster
         */
        maxInstanceCount?: pulumi.Input<number>;
        /**
         * The minimum instance count of the cluster
         */
        minInstanceCount?: pulumi.Input<number>;
    }

    /**
     * The load-based autoscale request parameters
     */
    export interface AutoscaleCapacityResponse {
        /**
         * The maximum instance count of the cluster
         */
        maxInstanceCount?: pulumi.Input<number>;
        /**
         * The minimum instance count of the cluster
         */
        minInstanceCount?: pulumi.Input<number>;
    }

    /**
     * Schedule-based autoscale request parameters
     */
    export interface AutoscaleRecurrence {
        /**
         * Array of schedule-based autoscale rules
         */
        schedule?: pulumi.Input<pulumi.Input<inputs.hdinsight.AutoscaleSchedule>[]>;
        /**
         * The time zone for the autoscale schedule times
         */
        timeZone?: pulumi.Input<string>;
    }

    /**
     * Schedule-based autoscale request parameters
     */
    export interface AutoscaleRecurrenceResponse {
        /**
         * Array of schedule-based autoscale rules
         */
        schedule?: pulumi.Input<pulumi.Input<inputs.hdinsight.AutoscaleScheduleResponse>[]>;
        /**
         * The time zone for the autoscale schedule times
         */
        timeZone?: pulumi.Input<string>;
    }

    /**
     * The autoscale request parameters
     */
    export interface AutoscaleResponse {
        /**
         * Parameters for load-based autoscale
         */
        capacity?: pulumi.Input<inputs.hdinsight.AutoscaleCapacityResponse>;
        /**
         * Parameters for schedule-based autoscale
         */
        recurrence?: pulumi.Input<inputs.hdinsight.AutoscaleRecurrenceResponse>;
    }

    /**
     * Parameters for a schedule-based autoscale rule, consisting of an array of days + a time and capacity
     */
    export interface AutoscaleSchedule {
        /**
         * Days of the week for a schedule-based autoscale rule
         */
        days?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Time and capacity for a schedule-based autoscale rule
         */
        timeAndCapacity?: pulumi.Input<inputs.hdinsight.AutoscaleTimeAndCapacity>;
    }

    /**
     * Parameters for a schedule-based autoscale rule, consisting of an array of days + a time and capacity
     */
    export interface AutoscaleScheduleResponse {
        /**
         * Days of the week for a schedule-based autoscale rule
         */
        days?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Time and capacity for a schedule-based autoscale rule
         */
        timeAndCapacity?: pulumi.Input<inputs.hdinsight.AutoscaleTimeAndCapacityResponse>;
    }

    /**
     * Time and capacity request parameters
     */
    export interface AutoscaleTimeAndCapacity {
        /**
         * The maximum instance count of the cluster
         */
        maxInstanceCount?: pulumi.Input<number>;
        /**
         * The minimum instance count of the cluster
         */
        minInstanceCount?: pulumi.Input<number>;
        /**
         * 24-hour time in the form xx:xx
         */
        time?: pulumi.Input<string>;
    }

    /**
     * Time and capacity request parameters
     */
    export interface AutoscaleTimeAndCapacityResponse {
        /**
         * The maximum instance count of the cluster
         */
        maxInstanceCount?: pulumi.Input<number>;
        /**
         * The minimum instance count of the cluster
         */
        minInstanceCount?: pulumi.Input<number>;
        /**
         * 24-hour time in the form xx:xx
         */
        time?: pulumi.Input<string>;
    }

    /**
     * The information of AAD security group.
     */
    export interface ClientGroupInfo {
        /**
         * The AAD security group id.
         */
        groupId?: pulumi.Input<string>;
        /**
         * The AAD security group name.
         */
        groupName?: pulumi.Input<string>;
    }

    /**
     * The information of AAD security group.
     */
    export interface ClientGroupInfoResponse {
        /**
         * The AAD security group id.
         */
        groupId?: pulumi.Input<string>;
        /**
         * The AAD security group name.
         */
        groupName?: pulumi.Input<string>;
    }

    /**
     * The cluster create parameters.
     */
    export interface ClusterCreateProperties {
        /**
         * The cluster definition.
         */
        clusterDefinition?: pulumi.Input<inputs.hdinsight.ClusterDefinition>;
        /**
         * The version of the cluster.
         */
        clusterVersion?: pulumi.Input<string>;
        /**
         * The compute profile.
         */
        computeProfile?: pulumi.Input<inputs.hdinsight.ComputeProfile>;
        /**
         * The disk encryption properties.
         */
        diskEncryptionProperties?: pulumi.Input<inputs.hdinsight.DiskEncryptionProperties>;
        /**
         * The cluster kafka rest proxy configuration.
         */
        kafkaRestProperties?: pulumi.Input<inputs.hdinsight.KafkaRestProperties>;
        /**
         * The minimal supported tls version.
         */
        minSupportedTlsVersion?: pulumi.Input<string>;
        /**
         * The type of operating system.
         */
        osType?: pulumi.Input<string>;
        /**
         * The security profile.
         */
        securityProfile?: pulumi.Input<inputs.hdinsight.SecurityProfile>;
        /**
         * The storage profile.
         */
        storageProfile?: pulumi.Input<inputs.hdinsight.StorageProfile>;
        /**
         * The cluster tier.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The cluster definition.
     */
    export interface ClusterDefinition {
        /**
         * The link to the blueprint.
         */
        blueprint?: pulumi.Input<string>;
        /**
         * The versions of different services in the cluster.
         */
        componentVersion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The cluster configurations.
         */
        configurations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The type of cluster.
         */
        kind?: pulumi.Input<string>;
    }

    /**
     * The cluster definition.
     */
    export interface ClusterDefinitionResponse {
        /**
         * The link to the blueprint.
         */
        blueprint?: pulumi.Input<string>;
        /**
         * The versions of different services in the cluster.
         */
        componentVersion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The cluster configurations.
         */
        configurations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The type of cluster.
         */
        kind?: pulumi.Input<string>;
    }

    /**
     * The properties of cluster.
     */
    export interface ClusterGetPropertiesResponse {
        /**
         * The cluster definition.
         */
        clusterDefinition: pulumi.Input<inputs.hdinsight.ClusterDefinitionResponse>;
        /**
         * The state of the cluster.
         */
        clusterState?: pulumi.Input<string>;
        /**
         * The version of the cluster.
         */
        clusterVersion?: pulumi.Input<string>;
        /**
         * The compute profile.
         */
        computeProfile?: pulumi.Input<inputs.hdinsight.ComputeProfileResponse>;
        /**
         * The list of connectivity endpoints.
         */
        connectivityEndpoints?: pulumi.Input<pulumi.Input<inputs.hdinsight.ConnectivityEndpointResponse>[]>;
        /**
         * The date on which the cluster was created.
         */
        createdDate?: pulumi.Input<string>;
        /**
         * The disk encryption properties.
         */
        diskEncryptionProperties?: pulumi.Input<inputs.hdinsight.DiskEncryptionPropertiesResponse>;
        /**
         * The list of errors.
         */
        errors?: pulumi.Input<pulumi.Input<inputs.hdinsight.ErrorsResponse>[]>;
        /**
         * The cluster kafka rest proxy configuration.
         */
        kafkaRestProperties?: pulumi.Input<inputs.hdinsight.KafkaRestPropertiesResponse>;
        /**
         * The minimal supported tls version.
         */
        minSupportedTlsVersion?: pulumi.Input<string>;
        /**
         * The type of operating system.
         */
        osType?: pulumi.Input<string>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The quota information.
         */
        quotaInfo?: pulumi.Input<inputs.hdinsight.QuotaInfoResponse>;
        /**
         * The security profile.
         */
        securityProfile?: pulumi.Input<inputs.hdinsight.SecurityProfileResponse>;
        /**
         * The cluster tier.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Identity for the cluster.
     */
    export interface ClusterIdentity {
        /**
         * The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the cluster.
     */
    export interface ClusterIdentityResponse {
        /**
         * The principal id of cluster identity. This property will only be provided for a system assigned identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id associated with the cluster. This property will only be provided for a system assigned identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Describes the compute profile.
     */
    export interface ComputeProfile {
        /**
         * The list of roles in the cluster.
         */
        roles?: pulumi.Input<pulumi.Input<inputs.hdinsight.Role>[]>;
    }

    /**
     * Describes the compute profile.
     */
    export interface ComputeProfileResponse {
        /**
         * The list of roles in the cluster.
         */
        roles?: pulumi.Input<pulumi.Input<inputs.hdinsight.RoleResponse>[]>;
    }

    /**
     * The connectivity properties
     */
    export interface ConnectivityEndpointResponse {
        /**
         * The location of the endpoint.
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the endpoint.
         */
        name?: pulumi.Input<string>;
        /**
         * The port to connect to.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol of the endpoint.
         */
        protocol?: pulumi.Input<string>;
    }

    /**
     * The data disks groups for the role.
     */
    export interface DataDisksGroups {
        /**
         * The number of disks per node.
         */
        disksPerNode?: pulumi.Input<number>;
    }

    /**
     * The data disks groups for the role.
     */
    export interface DataDisksGroupsResponse {
        /**
         * ReadOnly. The DiskSize in GB. Do not set this value.
         */
        diskSizeGB: pulumi.Input<number>;
        /**
         * The number of disks per node.
         */
        disksPerNode?: pulumi.Input<number>;
        /**
         * ReadOnly. The storage account type. Do not set this value.
         */
        storageAccountType: pulumi.Input<string>;
    }

    /**
     * The disk encryption properties
     */
    export interface DiskEncryptionProperties {
        /**
         * Algorithm identifier for encryption, default RSA-OAEP.
         */
        encryptionAlgorithm?: pulumi.Input<string>;
        /**
         * Key name that is used for enabling disk encryption.
         */
        keyName?: pulumi.Input<string>;
        /**
         * Specific key version that is used for enabling disk encryption.
         */
        keyVersion?: pulumi.Input<string>;
        /**
         * Resource ID of Managed Identity that is used to access the key vault.
         */
        msiResourceId?: pulumi.Input<string>;
        /**
         * Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
         */
        vaultUri?: pulumi.Input<string>;
    }

    /**
     * The disk encryption properties
     */
    export interface DiskEncryptionPropertiesResponse {
        /**
         * Algorithm identifier for encryption, default RSA-OAEP.
         */
        encryptionAlgorithm?: pulumi.Input<string>;
        /**
         * Key name that is used for enabling disk encryption.
         */
        keyName?: pulumi.Input<string>;
        /**
         * Specific key version that is used for enabling disk encryption.
         */
        keyVersion?: pulumi.Input<string>;
        /**
         * Resource ID of Managed Identity that is used to access the key vault.
         */
        msiResourceId?: pulumi.Input<string>;
        /**
         * Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
         */
        vaultUri?: pulumi.Input<string>;
    }

    /**
     * The error message associated with the cluster creation.
     */
    export interface Errors {
        /**
         * The error code.
         */
        code?: pulumi.Input<string>;
        /**
         * The error message.
         */
        message?: pulumi.Input<string>;
    }

    /**
     * The error message associated with the cluster creation.
     */
    export interface ErrorsResponse {
        /**
         * The error code.
         */
        code?: pulumi.Input<string>;
        /**
         * The error message.
         */
        message?: pulumi.Input<string>;
    }

    /**
     * The hardware profile.
     */
    export interface HardwareProfile {
        /**
         * The size of the VM
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * The hardware profile.
     */
    export interface HardwareProfileResponse {
        /**
         * The size of the VM
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * The kafka rest proxy configuration which contains AAD security group information.
     */
    export interface KafkaRestProperties {
        /**
         * The information of AAD security group.
         */
        clientGroupInfo?: pulumi.Input<inputs.hdinsight.ClientGroupInfo>;
    }

    /**
     * The kafka rest proxy configuration which contains AAD security group information.
     */
    export interface KafkaRestPropertiesResponse {
        /**
         * The information of AAD security group.
         */
        clientGroupInfo?: pulumi.Input<inputs.hdinsight.ClientGroupInfoResponse>;
    }

    /**
     * The ssh username, password, and ssh public key.
     */
    export interface LinuxOperatingSystemProfile {
        /**
         * The password.
         */
        password?: pulumi.Input<string>;
        /**
         * The SSH profile.
         */
        sshProfile?: pulumi.Input<inputs.hdinsight.SshProfile>;
        /**
         * The username.
         */
        username?: pulumi.Input<string>;
    }

    /**
     * The ssh username, password, and ssh public key.
     */
    export interface LinuxOperatingSystemProfileResponse {
        /**
         * The password.
         */
        password?: pulumi.Input<string>;
        /**
         * The SSH profile.
         */
        sshProfile?: pulumi.Input<inputs.hdinsight.SshProfileResponse>;
        /**
         * The username.
         */
        username?: pulumi.Input<string>;
    }

    /**
     * The Linux operation systems profile.
     */
    export interface OsProfile {
        /**
         * The Linux OS profile.
         */
        linuxOperatingSystemProfile?: pulumi.Input<inputs.hdinsight.LinuxOperatingSystemProfile>;
    }

    /**
     * The Linux operation systems profile.
     */
    export interface OsProfileResponse {
        /**
         * The Linux OS profile.
         */
        linuxOperatingSystemProfile?: pulumi.Input<inputs.hdinsight.LinuxOperatingSystemProfileResponse>;
    }

    /**
     * The quota properties for the cluster.
     */
    export interface QuotaInfoResponse {
        /**
         * The cores used by the cluster.
         */
        coresUsed?: pulumi.Input<number>;
    }

    /**
     * Describes a role on the cluster.
     */
    export interface Role {
        /**
         * The autoscale configurations.
         */
        autoscale?: pulumi.Input<inputs.hdinsight.Autoscale>;
        /**
         * The data disks groups for the role.
         */
        dataDisksGroups?: pulumi.Input<pulumi.Input<inputs.hdinsight.DataDisksGroups>[]>;
        /**
         * The hardware profile.
         */
        hardwareProfile?: pulumi.Input<inputs.hdinsight.HardwareProfile>;
        /**
         * The minimum instance count of the cluster.
         */
        minInstanceCount?: pulumi.Input<number>;
        /**
         * The name of the role.
         */
        name?: pulumi.Input<string>;
        /**
         * The operating system profile.
         */
        osProfile?: pulumi.Input<inputs.hdinsight.OsProfile>;
        /**
         * The list of script actions on the role.
         */
        scriptActions?: pulumi.Input<pulumi.Input<inputs.hdinsight.ScriptAction>[]>;
        /**
         * The instance count of the cluster.
         */
        targetInstanceCount?: pulumi.Input<number>;
        /**
         * The virtual network profile.
         */
        virtualNetworkProfile?: pulumi.Input<inputs.hdinsight.VirtualNetworkProfile>;
    }

    /**
     * Describes a role on the cluster.
     */
    export interface RoleResponse {
        /**
         * The autoscale configurations.
         */
        autoscale?: pulumi.Input<inputs.hdinsight.AutoscaleResponse>;
        /**
         * The data disks groups for the role.
         */
        dataDisksGroups?: pulumi.Input<pulumi.Input<inputs.hdinsight.DataDisksGroupsResponse>[]>;
        /**
         * The hardware profile.
         */
        hardwareProfile?: pulumi.Input<inputs.hdinsight.HardwareProfileResponse>;
        /**
         * The minimum instance count of the cluster.
         */
        minInstanceCount?: pulumi.Input<number>;
        /**
         * The name of the role.
         */
        name?: pulumi.Input<string>;
        /**
         * The operating system profile.
         */
        osProfile?: pulumi.Input<inputs.hdinsight.OsProfileResponse>;
        /**
         * The list of script actions on the role.
         */
        scriptActions?: pulumi.Input<pulumi.Input<inputs.hdinsight.ScriptActionResponse>[]>;
        /**
         * The instance count of the cluster.
         */
        targetInstanceCount?: pulumi.Input<number>;
        /**
         * The virtual network profile.
         */
        virtualNetworkProfile?: pulumi.Input<inputs.hdinsight.VirtualNetworkProfileResponse>;
    }

    /**
     * Describes a script action on a running cluster.
     */
    export interface RuntimeScriptAction {
        /**
         * The name of the script action.
         */
        name: pulumi.Input<string>;
        /**
         * The parameters for the script
         */
        parameters?: pulumi.Input<string>;
        /**
         * The list of roles where script will be executed.
         */
        roles: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The URI to the script.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Describes a script action on a running cluster.
     */
    export interface RuntimeScriptActionResponse {
        /**
         * The application name of the script action, if any.
         */
        applicationName: pulumi.Input<string>;
        /**
         * The name of the script action.
         */
        name: pulumi.Input<string>;
        /**
         * The parameters for the script
         */
        parameters?: pulumi.Input<string>;
        /**
         * The list of roles where script will be executed.
         */
        roles: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The URI to the script.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Describes a script action on role on the cluster.
     */
    export interface ScriptAction {
        /**
         * The name of the script action.
         */
        name: pulumi.Input<string>;
        /**
         * The parameters for the script provided.
         */
        parameters: pulumi.Input<string>;
        /**
         * The URI to the script.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Describes a script action on role on the cluster.
     */
    export interface ScriptActionResponse {
        /**
         * The name of the script action.
         */
        name: pulumi.Input<string>;
        /**
         * The parameters for the script provided.
         */
        parameters: pulumi.Input<string>;
        /**
         * The URI to the script.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * The security profile which contains Ssh public key for the HDInsight cluster.
     */
    export interface SecurityProfile {
        /**
         * The resource ID of the user's Azure Active Directory Domain Service.
         */
        aaddsResourceId?: pulumi.Input<string>;
        /**
         * Optional. The Distinguished Names for cluster user groups
         */
        clusterUsersGroupDNs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The directory type.
         */
        directoryType?: pulumi.Input<string>;
        /**
         * The organization's active directory domain.
         */
        domain?: pulumi.Input<string>;
        /**
         * The domain admin password.
         */
        domainUserPassword?: pulumi.Input<string>;
        /**
         * The domain user account that will have admin privileges on the cluster.
         */
        domainUsername?: pulumi.Input<string>;
        /**
         * The LDAPS protocol URLs to communicate with the Active Directory.
         */
        ldapsUrls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
         */
        msiResourceId?: pulumi.Input<string>;
        /**
         * The organizational unit within the Active Directory to place the cluster and service accounts.
         */
        organizationalUnitDN?: pulumi.Input<string>;
    }

    /**
     * The security profile which contains Ssh public key for the HDInsight cluster.
     */
    export interface SecurityProfileResponse {
        /**
         * The resource ID of the user's Azure Active Directory Domain Service.
         */
        aaddsResourceId?: pulumi.Input<string>;
        /**
         * Optional. The Distinguished Names for cluster user groups
         */
        clusterUsersGroupDNs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The directory type.
         */
        directoryType?: pulumi.Input<string>;
        /**
         * The organization's active directory domain.
         */
        domain?: pulumi.Input<string>;
        /**
         * The domain admin password.
         */
        domainUserPassword?: pulumi.Input<string>;
        /**
         * The domain user account that will have admin privileges on the cluster.
         */
        domainUsername?: pulumi.Input<string>;
        /**
         * The LDAPS protocol URLs to communicate with the Active Directory.
         */
        ldapsUrls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
         */
        msiResourceId?: pulumi.Input<string>;
        /**
         * The organizational unit within the Active Directory to place the cluster and service accounts.
         */
        organizationalUnitDN?: pulumi.Input<string>;
    }

    /**
     * The list of SSH public keys.
     */
    export interface SshProfile {
        /**
         * The list of SSH public keys.
         */
        publicKeys?: pulumi.Input<pulumi.Input<inputs.hdinsight.SshPublicKey>[]>;
    }

    /**
     * The list of SSH public keys.
     */
    export interface SshProfileResponse {
        /**
         * The list of SSH public keys.
         */
        publicKeys?: pulumi.Input<pulumi.Input<inputs.hdinsight.SshPublicKeyResponse>[]>;
    }

    /**
     * The SSH public key for the cluster nodes.
     */
    export interface SshPublicKey {
        /**
         * The certificate for SSH.
         */
        certificateData?: pulumi.Input<string>;
    }

    /**
     * The SSH public key for the cluster nodes.
     */
    export interface SshPublicKeyResponse {
        /**
         * The certificate for SSH.
         */
        certificateData?: pulumi.Input<string>;
    }

    /**
     * The storage Account.
     */
    export interface StorageAccount {
        /**
         * The container in the storage account, only to be specified for WASB storage accounts.
         */
        container?: pulumi.Input<string>;
        /**
         * The filesystem, only to be specified for Azure Data Lake Storage Gen 2.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Whether or not the storage account is the default storage account.
         */
        isDefault?: pulumi.Input<boolean>;
        /**
         * The storage account access key.
         */
        key?: pulumi.Input<string>;
        /**
         * The managed identity (MSI) that is allowed to access the storage account, only to be specified for Azure Data Lake Storage Gen 2.
         */
        msiResourceId?: pulumi.Input<string>;
        /**
         * The name of the storage account.
         */
        name?: pulumi.Input<string>;
        /**
         * The resource ID of storage account, only to be specified for Azure Data Lake Storage Gen 2.
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * The storage profile.
     */
    export interface StorageProfile {
        /**
         * The list of storage accounts in the cluster.
         */
        storageaccounts?: pulumi.Input<pulumi.Input<inputs.hdinsight.StorageAccount>[]>;
    }

    /**
     * The virtual network properties.
     */
    export interface VirtualNetworkProfile {
        /**
         * The ID of the virtual network.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the subnet.
         */
        subnet?: pulumi.Input<string>;
    }

    /**
     * The virtual network properties.
     */
    export interface VirtualNetworkProfileResponse {
        /**
         * The ID of the virtual network.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the subnet.
         */
        subnet?: pulumi.Input<string>;
    }
}

export namespace healthcareapis {
    /**
     * Setting indicating whether the service has a managed identity associated with it.
     */
    export interface ResourceProperties {
        /**
         * Type of identity being specified, currently SystemAssigned and None are allowed.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Setting indicating whether the service has a managed identity associated with it.
     */
    export interface ResourceResponseProperties {
        /**
         * The principal ID of the resource identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant ID of the resource.
         */
        tenantId: pulumi.Input<string>;
        /**
         * Type of identity being specified, currently SystemAssigned and None are allowed.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The access policies of the service instance.
     */
    export interface ServiceAccessPoliciesInfo {
    }

    /**
     * The access policies of the service instance.
     */
    export interface ServiceAccessPoliciesInfoResponse {
    }

    /**
     * Authentication configuration information
     */
    export interface ServiceAuthenticationConfigurationInfo {
        /**
         * The audience url for the service
         */
        audience?: pulumi.Input<string>;
        /**
         * The authority url for the service
         */
        authority?: pulumi.Input<string>;
        /**
         * If the SMART on FHIR proxy is enabled
         */
        smartProxyEnabled?: pulumi.Input<boolean>;
    }

    /**
     * Authentication configuration information
     */
    export interface ServiceAuthenticationConfigurationInfoResponse {
        /**
         * The audience url for the service
         */
        audience?: pulumi.Input<string>;
        /**
         * The authority url for the service
         */
        authority?: pulumi.Input<string>;
        /**
         * If the SMART on FHIR proxy is enabled
         */
        smartProxyEnabled?: pulumi.Input<boolean>;
    }

    /**
     * The settings for the CORS configuration of the service instance.
     */
    export interface ServiceCorsConfigurationInfo {
        /**
         * If credentials are allowed via CORS.
         */
        allowCredentials?: pulumi.Input<boolean>;
        /**
         * The headers to be allowed via CORS.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The max age to be allowed via CORS.
         */
        maxAge?: pulumi.Input<number>;
        /**
         * The methods to be allowed via CORS.
         */
        methods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The origins to be allowed via CORS.
         */
        origins?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The settings for the CORS configuration of the service instance.
     */
    export interface ServiceCorsConfigurationInfoResponse {
        /**
         * If credentials are allowed via CORS.
         */
        allowCredentials?: pulumi.Input<boolean>;
        /**
         * The headers to be allowed via CORS.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The max age to be allowed via CORS.
         */
        maxAge?: pulumi.Input<number>;
        /**
         * The methods to be allowed via CORS.
         */
        methods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The origins to be allowed via CORS.
         */
        origins?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The settings for the Cosmos DB database backing the service.
     */
    export interface ServiceCosmosDbConfigurationInfo {
        /**
         * The provisioned throughput for the backing database.
         */
        offerThroughput?: pulumi.Input<number>;
    }

    /**
     * The settings for the Cosmos DB database backing the service.
     */
    export interface ServiceCosmosDbConfigurationInfoResponse {
        /**
         * The provisioned throughput for the backing database.
         */
        offerThroughput?: pulumi.Input<number>;
    }

    /**
     * Export operation configuration information
     */
    export interface ServiceExportConfigurationInfo {
        /**
         * The name of the default export storage account.
         */
        storageAccountName?: pulumi.Input<string>;
    }

    /**
     * Export operation configuration information
     */
    export interface ServiceExportConfigurationInfoResponse {
        /**
         * The name of the default export storage account.
         */
        storageAccountName?: pulumi.Input<string>;
    }

    /**
     * The properties of a service instance.
     */
    export interface ServicesProperties {
        /**
         * The access policies of the service instance.
         */
        accessPolicies?: pulumi.Input<inputs.healthcareapis.ServiceAccessPoliciesInfo>;
        /**
         * The authentication configuration for the service instance.
         */
        authenticationConfiguration?: pulumi.Input<inputs.healthcareapis.ServiceAuthenticationConfigurationInfo>;
        /**
         * The settings for the CORS configuration of the service instance.
         */
        corsConfiguration?: pulumi.Input<inputs.healthcareapis.ServiceCorsConfigurationInfo>;
        /**
         * The settings for the Cosmos DB database backing the service.
         */
        cosmosDbConfiguration?: pulumi.Input<inputs.healthcareapis.ServiceCosmosDbConfigurationInfo>;
        /**
         * The settings for the export operation of the service instance.
         */
        exportConfiguration?: pulumi.Input<inputs.healthcareapis.ServiceExportConfigurationInfo>;
    }

    /**
     * The properties of a service instance.
     */
    export interface ServicesPropertiesResponse {
        /**
         * The access policies of the service instance.
         */
        accessPolicies?: pulumi.Input<inputs.healthcareapis.ServiceAccessPoliciesInfoResponse>;
        /**
         * The authentication configuration for the service instance.
         */
        authenticationConfiguration?: pulumi.Input<inputs.healthcareapis.ServiceAuthenticationConfigurationInfoResponse>;
        /**
         * The settings for the CORS configuration of the service instance.
         */
        corsConfiguration?: pulumi.Input<inputs.healthcareapis.ServiceCorsConfigurationInfoResponse>;
        /**
         * The settings for the Cosmos DB database backing the service.
         */
        cosmosDbConfiguration?: pulumi.Input<inputs.healthcareapis.ServiceCosmosDbConfigurationInfoResponse>;
        /**
         * The settings for the export operation of the service instance.
         */
        exportConfiguration?: pulumi.Input<inputs.healthcareapis.ServiceExportConfigurationInfoResponse>;
        /**
         * The provisioning state.
         */
        provisioningState: pulumi.Input<string>;
    }
}

export namespace hybridcompute {
    /**
     * Represents a configuration parameter.
     */
    export interface ConfigurationParameter {
        /**
         * Name of the configuration parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * Value of the configuration parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Represents a configuration parameter.
     */
    export interface ConfigurationParameterResponse {
        /**
         * Name of the configuration parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * Value of the configuration parameter.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Configuration setting of LCM (Local Configuration Manager).
     */
    export interface ConfigurationSetting {
        /**
         * Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration and StopConfiguration
         */
        actionAfterReboot?: pulumi.Input<string>;
        /**
         * If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node. Otherwise, false
         */
        allowModuleOverwrite?: pulumi.Input<string>;
        /**
         * Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
         */
        configurationMode?: pulumi.Input<string>;
        /**
         * How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode property is set to ApplyOnly. The default value is 15.
         */
        configurationModeFrequencyMins?: pulumi.Input<number>;
        /**
         * Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you will have to manually reboot the node for any configuration that requires it. The default value is false. To use this setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting with the xPendingReboot module.
         */
        rebootIfNeeded?: pulumi.Input<string>;
        /**
         * The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored if the LCM is not configured in pull mode. The default value is 30.
         */
        refreshFrequencyMins?: pulumi.Input<number>;
    }

    /**
     * Configuration setting of LCM (Local Configuration Manager).
     */
    export interface ConfigurationSettingResponse {
        /**
         * Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration and StopConfiguration
         */
        actionAfterReboot?: pulumi.Input<string>;
        /**
         * If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node. Otherwise, false
         */
        allowModuleOverwrite?: pulumi.Input<string>;
        /**
         * Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
         */
        configurationMode?: pulumi.Input<string>;
        /**
         * How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode property is set to ApplyOnly. The default value is 15.
         */
        configurationModeFrequencyMins?: pulumi.Input<number>;
        /**
         * Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you will have to manually reboot the node for any configuration that requires it. The default value is false. To use this setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting with the xPendingReboot module.
         */
        rebootIfNeeded?: pulumi.Input<string>;
        /**
         * The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored if the LCM is not configured in pull mode. The default value is 30.
         */
        refreshFrequencyMins?: pulumi.Input<number>;
    }

    /**
     * Guest configuration assignment properties.
     */
    export interface GuestConfigurationAssignmentProperties {
        /**
         * The source which initiated the guest configuration assignment. Ex: Azure Policy
         */
        context?: pulumi.Input<string>;
        /**
         * The guest configuration to assign.
         */
        guestConfiguration?: pulumi.Input<inputs.hybridcompute.GuestConfigurationNavigation>;
    }

    /**
     * Guest configuration assignment properties.
     */
    export interface GuestConfigurationAssignmentPropertiesResponse {
        /**
         * Combined hash of the configuration package and parameters.
         */
        assignmentHash: pulumi.Input<string>;
        /**
         * A value indicating compliance status of the machine for the assigned guest configuration.
         */
        complianceStatus: pulumi.Input<string>;
        /**
         * The source which initiated the guest configuration assignment. Ex: Azure Policy
         */
        context?: pulumi.Input<string>;
        /**
         * The guest configuration to assign.
         */
        guestConfiguration?: pulumi.Input<inputs.hybridcompute.GuestConfigurationNavigationResponse>;
        /**
         * Date and time when last compliance status was checked.
         */
        lastComplianceStatusChecked: pulumi.Input<string>;
        /**
         * Id of the latest report for the guest configuration assignment. 
         */
        latestReportId: pulumi.Input<string>;
        /**
         * The provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Guest configuration is an artifact that encapsulates DSC configuration and its dependencies. The artifact is a zip file containing DSC configuration (as MOF) and dependent resources and other dependencies like modules.
     */
    export interface GuestConfigurationNavigation {
        /**
         * The configuration parameters for the guest configuration.
         */
        configurationParameter?: pulumi.Input<pulumi.Input<inputs.hybridcompute.ConfigurationParameter>[]>;
        /**
         * The configuration setting for the guest configuration.
         */
        configurationSetting?: pulumi.Input<inputs.hybridcompute.ConfigurationSetting>;
        /**
         * Kind of the guest configuration. For example:DSC
         */
        kind?: pulumi.Input<string>;
        /**
         * Name of the guest configuration.
         */
        name?: pulumi.Input<string>;
        /**
         * Version of the guest configuration.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Guest configuration is an artifact that encapsulates DSC configuration and its dependencies. The artifact is a zip file containing DSC configuration (as MOF) and dependent resources and other dependencies like modules.
     */
    export interface GuestConfigurationNavigationResponse {
        /**
         * The configuration parameters for the guest configuration.
         */
        configurationParameter?: pulumi.Input<pulumi.Input<inputs.hybridcompute.ConfigurationParameterResponse>[]>;
        /**
         * The configuration setting for the guest configuration.
         */
        configurationSetting?: pulumi.Input<inputs.hybridcompute.ConfigurationSettingResponse>;
        /**
         * Combined hash of the guest configuration package and configuration parameters.
         */
        contentHash: pulumi.Input<string>;
        /**
         * Uri of the storage where guest configuration package is uploaded.
         */
        contentUri: pulumi.Input<string>;
        /**
         * Kind of the guest configuration. For example:DSC
         */
        kind?: pulumi.Input<string>;
        /**
         * Name of the guest configuration.
         */
        name?: pulumi.Input<string>;
        /**
         * Version of the guest configuration.
         */
        version?: pulumi.Input<string>;
    }

}

export namespace hybriddata {
    /**
     * The pair of customer secret.
     */
    export interface CustomerSecret {
        /**
         * The encryption algorithm used to encrypt data.
         */
        algorithm: pulumi.Input<string>;
        /**
         * The identifier to the data service input object which this secret corresponds to.
         */
        keyIdentifier: pulumi.Input<string>;
        /**
         * It contains the encrypted customer secret.
         */
        keyValue: pulumi.Input<string>;
    }

    /**
     * The pair of customer secret.
     */
    export interface CustomerSecretResponse {
        /**
         * The encryption algorithm used to encrypt data.
         */
        algorithm: pulumi.Input<string>;
        /**
         * The identifier to the data service input object which this secret corresponds to.
         */
        keyIdentifier: pulumi.Input<string>;
        /**
         * It contains the encrypted customer secret.
         */
        keyValue: pulumi.Input<string>;
    }

    /**
     * Data Store for sources and sinks
     */
    export interface DataStoreProperties {
        /**
         * List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.
         */
        customerSecrets?: pulumi.Input<pulumi.Input<inputs.hybriddata.CustomerSecret>[]>;
        /**
         * The arm id of the data store type.
         */
        dataStoreTypeId: pulumi.Input<string>;
        /**
         * A generic json used differently by each data source type.
         */
        extendedProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Arm Id for the manager resource to which the data source is associated. This is optional.
         */
        repositoryId?: pulumi.Input<string>;
        /**
         * State of the data source.
         */
        state: pulumi.Input<string>;
    }

    /**
     * Data Store for sources and sinks
     */
    export interface DataStorePropertiesResponse {
        /**
         * List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.
         */
        customerSecrets?: pulumi.Input<pulumi.Input<inputs.hybriddata.CustomerSecretResponse>[]>;
        /**
         * The arm id of the data store type.
         */
        dataStoreTypeId: pulumi.Input<string>;
        /**
         * A generic json used differently by each data source type.
         */
        extendedProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Arm Id for the manager resource to which the data source is associated. This is optional.
         */
        repositoryId?: pulumi.Input<string>;
        /**
         * State of the data source.
         */
        state: pulumi.Input<string>;
    }

    /**
     * Job Definition
     */
    export interface JobDefinitionProperties {
        /**
         * List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.
         */
        customerSecrets?: pulumi.Input<pulumi.Input<inputs.hybriddata.CustomerSecret>[]>;
        /**
         * A generic json used differently by each data service type.
         */
        dataServiceInput?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Data Sink Id associated to the job definition.
         */
        dataSinkId: pulumi.Input<string>;
        /**
         * Data Source Id associated to the job definition.
         */
        dataSourceId: pulumi.Input<string>;
        /**
         * Last modified time of the job definition.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * This is the preferred geo location for the job to run.
         */
        runLocation?: pulumi.Input<string>;
        /**
         * Schedule for running the job definition
         */
        schedules?: pulumi.Input<pulumi.Input<inputs.hybriddata.Schedule>[]>;
        /**
         * State of the job definition.
         */
        state: pulumi.Input<string>;
        /**
         * Enum to detect if user confirmation is required. If not passed will default to NotRequired.
         */
        userConfirmation?: pulumi.Input<string>;
    }

    /**
     * Job Definition
     */
    export interface JobDefinitionPropertiesResponse {
        /**
         * List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.
         */
        customerSecrets?: pulumi.Input<pulumi.Input<inputs.hybriddata.CustomerSecretResponse>[]>;
        /**
         * A generic json used differently by each data service type.
         */
        dataServiceInput?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Data Sink Id associated to the job definition.
         */
        dataSinkId: pulumi.Input<string>;
        /**
         * Data Source Id associated to the job definition.
         */
        dataSourceId: pulumi.Input<string>;
        /**
         * Last modified time of the job definition.
         */
        lastModifiedTime?: pulumi.Input<string>;
        /**
         * This is the preferred geo location for the job to run.
         */
        runLocation?: pulumi.Input<string>;
        /**
         * Schedule for running the job definition
         */
        schedules?: pulumi.Input<pulumi.Input<inputs.hybriddata.ScheduleResponse>[]>;
        /**
         * State of the job definition.
         */
        state: pulumi.Input<string>;
        /**
         * Enum to detect if user confirmation is required. If not passed will default to NotRequired.
         */
        userConfirmation?: pulumi.Input<string>;
    }

    /**
     * Schedule for the job run.
     */
    export interface Schedule {
        /**
         * Name of the schedule.
         */
        name?: pulumi.Input<string>;
        /**
         * A list of repetition intervals in ISO 8601 format.
         */
        policyList?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Schedule for the job run.
     */
    export interface ScheduleResponse {
        /**
         * Name of the schedule.
         */
        name?: pulumi.Input<string>;
        /**
         * A list of repetition intervals in ISO 8601 format.
         */
        policyList?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The sku type.
     */
    export interface Sku {
        /**
         * The sku name. Required for data manager creation, optional for update.
         */
        name?: pulumi.Input<string>;
        /**
         * The sku tier. This is based on the SKU name.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The sku type.
     */
    export interface SkuResponse {
        /**
         * The sku name. Required for data manager creation, optional for update.
         */
        name?: pulumi.Input<string>;
        /**
         * The sku tier. This is based on the SKU name.
         */
        tier?: pulumi.Input<string>;
    }
}

export namespace importexport {
    /**
     * Provides information about the drive's status
     */
    export interface DriveStatus {
        /**
         * The BitLocker key used to encrypt the drive.
         */
        bitLockerKey?: pulumi.Input<string>;
        /**
         * Bytes successfully transferred for the drive.
         */
        bytesSucceeded?: pulumi.Input<number>;
        /**
         * Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
         */
        copyStatus?: pulumi.Input<string>;
        /**
         * The drive header hash value.
         */
        driveHeaderHash?: pulumi.Input<string>;
        /**
         * The drive's hardware serial number, without spaces.
         */
        driveId?: pulumi.Input<string>;
        /**
         * A URI that points to the blob containing the error log for the data transfer operation.
         */
        errorLogUri?: pulumi.Input<string>;
        /**
         * The relative path of the manifest file on the drive. 
         */
        manifestFile?: pulumi.Input<string>;
        /**
         * The Base16-encoded MD5 hash of the manifest file on the drive.
         */
        manifestHash?: pulumi.Input<string>;
        /**
         * A URI that points to the blob containing the drive manifest file. 
         */
        manifestUri?: pulumi.Input<string>;
        /**
         * Percentage completed for the drive. 
         */
        percentComplete?: pulumi.Input<number>;
        /**
         * The drive's current state. 
         */
        state?: pulumi.Input<string>;
        /**
         * A URI that points to the blob containing the verbose log for the data transfer operation. 
         */
        verboseLogUri?: pulumi.Input<string>;
    }

    /**
     * Provides information about the drive's status
     */
    export interface DriveStatusResponse {
        /**
         * The BitLocker key used to encrypt the drive.
         */
        bitLockerKey?: pulumi.Input<string>;
        /**
         * Bytes successfully transferred for the drive.
         */
        bytesSucceeded?: pulumi.Input<number>;
        /**
         * Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
         */
        copyStatus?: pulumi.Input<string>;
        /**
         * The drive header hash value.
         */
        driveHeaderHash?: pulumi.Input<string>;
        /**
         * The drive's hardware serial number, without spaces.
         */
        driveId?: pulumi.Input<string>;
        /**
         * A URI that points to the blob containing the error log for the data transfer operation.
         */
        errorLogUri?: pulumi.Input<string>;
        /**
         * The relative path of the manifest file on the drive. 
         */
        manifestFile?: pulumi.Input<string>;
        /**
         * The Base16-encoded MD5 hash of the manifest file on the drive.
         */
        manifestHash?: pulumi.Input<string>;
        /**
         * A URI that points to the blob containing the drive manifest file. 
         */
        manifestUri?: pulumi.Input<string>;
        /**
         * Percentage completed for the drive. 
         */
        percentComplete?: pulumi.Input<number>;
        /**
         * The drive's current state. 
         */
        state?: pulumi.Input<string>;
        /**
         * A URI that points to the blob containing the verbose log for the data transfer operation. 
         */
        verboseLogUri?: pulumi.Input<string>;
    }

    /**
     * A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
     */
    export interface Export {
        /**
         * A list of the blobs to be exported.
         */
        blobList?: pulumi.Input<inputs.importexport.ExportProperties>;
        /**
         * The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root. 
         */
        blobListblobPath?: pulumi.Input<string>;
    }

    /**
     * A list of the blobs to be exported.
     */
    export interface ExportProperties {
        /**
         * A collection of blob-path strings.
         */
        blobPath?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A collection of blob-prefix strings.
         */
        blobPathPrefix?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
     */
    export interface ExportResponse {
        /**
         * A list of the blobs to be exported.
         */
        blobList?: pulumi.Input<inputs.importexport.ExportResponseProperties>;
        /**
         * The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root. 
         */
        blobListblobPath?: pulumi.Input<string>;
    }

    /**
     * A list of the blobs to be exported.
     */
    export interface ExportResponseProperties {
        /**
         * A collection of blob-path strings.
         */
        blobPath?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A collection of blob-prefix strings.
         */
        blobPathPrefix?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Specifies the job properties
     */
    export interface JobDetails {
        /**
         * Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
         */
        backupDriveManifest?: pulumi.Input<boolean>;
        /**
         * Indicates whether a request has been submitted to cancel the job.
         */
        cancelRequested?: pulumi.Input<boolean>;
        /**
         * Contains information about the package being shipped by the customer to the Microsoft data center. 
         */
        deliveryPackage?: pulumi.Input<inputs.importexport.PackageInfomation>;
        /**
         * The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
         */
        diagnosticsPath?: pulumi.Input<string>;
        /**
         * List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
         */
        driveList?: pulumi.Input<pulumi.Input<inputs.importexport.DriveStatus>[]>;
        /**
         * A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
         */
        export?: pulumi.Input<inputs.importexport.Export>;
        /**
         * A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
         */
        incompleteBlobListUri?: pulumi.Input<string>;
        /**
         * The type of job
         */
        jobType?: pulumi.Input<string>;
        /**
         * Default value is Error. Indicates whether error logging or verbose logging will be enabled.
         */
        logLevel?: pulumi.Input<string>;
        /**
         * Overall percentage completed for the job.
         */
        percentComplete?: pulumi.Input<number>;
        /**
         * Specifies the provisioning state of the job.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Specifies the return address information for the job. 
         */
        returnAddress?: pulumi.Input<inputs.importexport.ReturnAddress>;
        /**
         * Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned. 
         */
        returnPackage?: pulumi.Input<inputs.importexport.PackageInfomation>;
        /**
         * Specifies the return carrier and customer's account with the carrier. 
         */
        returnShipping?: pulumi.Input<inputs.importexport.ReturnShipping>;
        /**
         * Contains information about the Microsoft datacenter to which the drives should be shipped. 
         */
        shippingInformation?: pulumi.Input<inputs.importexport.ShippingInformation>;
        /**
         * Current state of the job.
         */
        state?: pulumi.Input<string>;
        /**
         * The resource identifier of the storage account where data will be imported to or exported from.
         */
        storageAccountId?: pulumi.Input<string>;
    }

    /**
     * Specifies the job properties
     */
    export interface JobDetailsResponse {
        /**
         * Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
         */
        backupDriveManifest?: pulumi.Input<boolean>;
        /**
         * Indicates whether a request has been submitted to cancel the job.
         */
        cancelRequested?: pulumi.Input<boolean>;
        /**
         * Contains information about the package being shipped by the customer to the Microsoft data center. 
         */
        deliveryPackage?: pulumi.Input<inputs.importexport.PackageInfomationResponse>;
        /**
         * The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
         */
        diagnosticsPath?: pulumi.Input<string>;
        /**
         * List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
         */
        driveList?: pulumi.Input<pulumi.Input<inputs.importexport.DriveStatusResponse>[]>;
        /**
         * A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
         */
        export?: pulumi.Input<inputs.importexport.ExportResponse>;
        /**
         * A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
         */
        incompleteBlobListUri?: pulumi.Input<string>;
        /**
         * The type of job
         */
        jobType?: pulumi.Input<string>;
        /**
         * Default value is Error. Indicates whether error logging or verbose logging will be enabled.
         */
        logLevel?: pulumi.Input<string>;
        /**
         * Overall percentage completed for the job.
         */
        percentComplete?: pulumi.Input<number>;
        /**
         * Specifies the provisioning state of the job.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Specifies the return address information for the job. 
         */
        returnAddress?: pulumi.Input<inputs.importexport.ReturnAddressResponse>;
        /**
         * Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned. 
         */
        returnPackage?: pulumi.Input<inputs.importexport.PackageInfomationResponse>;
        /**
         * Specifies the return carrier and customer's account with the carrier. 
         */
        returnShipping?: pulumi.Input<inputs.importexport.ReturnShippingResponse>;
        /**
         * Contains information about the Microsoft datacenter to which the drives should be shipped. 
         */
        shippingInformation?: pulumi.Input<inputs.importexport.ShippingInformationResponse>;
        /**
         * Current state of the job.
         */
        state?: pulumi.Input<string>;
        /**
         * The resource identifier of the storage account where data will be imported to or exported from.
         */
        storageAccountId?: pulumi.Input<string>;
    }

    /**
     * Contains information about the package being shipped by the customer to the Microsoft data center.
     */
    export interface PackageInfomation {
        /**
         * The name of the carrier that is used to ship the import or export drives.
         */
        carrierName: pulumi.Input<string>;
        /**
         * The number of drives included in the package.
         */
        driveCount: pulumi.Input<number>;
        /**
         * The date when the package is shipped.
         */
        shipDate: pulumi.Input<string>;
        /**
         * The tracking number of the package.
         */
        trackingNumber: pulumi.Input<string>;
    }

    /**
     * Contains information about the package being shipped by the customer to the Microsoft data center.
     */
    export interface PackageInfomationResponse {
        /**
         * The name of the carrier that is used to ship the import or export drives.
         */
        carrierName: pulumi.Input<string>;
        /**
         * The number of drives included in the package.
         */
        driveCount: pulumi.Input<number>;
        /**
         * The date when the package is shipped.
         */
        shipDate: pulumi.Input<string>;
        /**
         * The tracking number of the package.
         */
        trackingNumber: pulumi.Input<string>;
    }

    /**
     * Specifies the return address information for the job.
     */
    export interface ReturnAddress {
        /**
         * The city name to use when returning the drives.
         */
        city: pulumi.Input<string>;
        /**
         * The country or region to use when returning the drives. 
         */
        countryOrRegion: pulumi.Input<string>;
        /**
         * Email address of the recipient of the returned drives.
         */
        email: pulumi.Input<string>;
        /**
         * Phone number of the recipient of the returned drives.
         */
        phone: pulumi.Input<string>;
        /**
         * The postal code to use when returning the drives.
         */
        postalCode: pulumi.Input<string>;
        /**
         * The name of the recipient who will receive the hard drives when they are returned. 
         */
        recipientName: pulumi.Input<string>;
        /**
         * The state or province to use when returning the drives.
         */
        stateOrProvince?: pulumi.Input<string>;
        /**
         * The first line of the street address to use when returning the drives. 
         */
        streetAddress1: pulumi.Input<string>;
        /**
         * The second line of the street address to use when returning the drives. 
         */
        streetAddress2?: pulumi.Input<string>;
    }

    /**
     * Specifies the return address information for the job.
     */
    export interface ReturnAddressResponse {
        /**
         * The city name to use when returning the drives.
         */
        city: pulumi.Input<string>;
        /**
         * The country or region to use when returning the drives. 
         */
        countryOrRegion: pulumi.Input<string>;
        /**
         * Email address of the recipient of the returned drives.
         */
        email: pulumi.Input<string>;
        /**
         * Phone number of the recipient of the returned drives.
         */
        phone: pulumi.Input<string>;
        /**
         * The postal code to use when returning the drives.
         */
        postalCode: pulumi.Input<string>;
        /**
         * The name of the recipient who will receive the hard drives when they are returned. 
         */
        recipientName: pulumi.Input<string>;
        /**
         * The state or province to use when returning the drives.
         */
        stateOrProvince?: pulumi.Input<string>;
        /**
         * The first line of the street address to use when returning the drives. 
         */
        streetAddress1: pulumi.Input<string>;
        /**
         * The second line of the street address to use when returning the drives. 
         */
        streetAddress2?: pulumi.Input<string>;
    }

    /**
     * Specifies the return carrier and customer's account with the carrier.
     */
    export interface ReturnShipping {
        /**
         * The customer's account number with the carrier.
         */
        carrierAccountNumber: pulumi.Input<string>;
        /**
         * The carrier's name.
         */
        carrierName: pulumi.Input<string>;
    }

    /**
     * Specifies the return carrier and customer's account with the carrier.
     */
    export interface ReturnShippingResponse {
        /**
         * The customer's account number with the carrier.
         */
        carrierAccountNumber: pulumi.Input<string>;
        /**
         * The carrier's name.
         */
        carrierName: pulumi.Input<string>;
    }

    /**
     * Contains information about the Microsoft datacenter to which the drives should be shipped.
     */
    export interface ShippingInformation {
        /**
         * The city name to use when returning the drives.
         */
        city: pulumi.Input<string>;
        /**
         * The country or region to use when returning the drives. 
         */
        countryOrRegion: pulumi.Input<string>;
        /**
         * Phone number of the recipient of the returned drives.
         */
        phone?: pulumi.Input<string>;
        /**
         * The postal code to use when returning the drives.
         */
        postalCode: pulumi.Input<string>;
        /**
         * The name of the recipient who will receive the hard drives when they are returned. 
         */
        recipientName: pulumi.Input<string>;
        /**
         * The state or province to use when returning the drives.
         */
        stateOrProvince: pulumi.Input<string>;
        /**
         * The first line of the street address to use when returning the drives. 
         */
        streetAddress1: pulumi.Input<string>;
        /**
         * The second line of the street address to use when returning the drives. 
         */
        streetAddress2?: pulumi.Input<string>;
    }

    /**
     * Contains information about the Microsoft datacenter to which the drives should be shipped.
     */
    export interface ShippingInformationResponse {
        /**
         * The city name to use when returning the drives.
         */
        city: pulumi.Input<string>;
        /**
         * The country or region to use when returning the drives. 
         */
        countryOrRegion: pulumi.Input<string>;
        /**
         * Phone number of the recipient of the returned drives.
         */
        phone?: pulumi.Input<string>;
        /**
         * The postal code to use when returning the drives.
         */
        postalCode: pulumi.Input<string>;
        /**
         * The name of the recipient who will receive the hard drives when they are returned. 
         */
        recipientName: pulumi.Input<string>;
        /**
         * The state or province to use when returning the drives.
         */
        stateOrProvince: pulumi.Input<string>;
        /**
         * The first line of the street address to use when returning the drives. 
         */
        streetAddress1: pulumi.Input<string>;
        /**
         * The second line of the street address to use when returning the drives. 
         */
        streetAddress2?: pulumi.Input<string>;
    }
}

export namespace insights {
    /**
     * Properties that define an Application Insights component resource.
     */
    export interface ApplicationInsightsComponentProperties {
        /**
         * Type of application being monitored.
         */
        Application_Type: pulumi.Input<string>;
        /**
         * Disable IP masking.
         */
        DisableIpMasking?: pulumi.Input<boolean>;
        /**
         * Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
         */
        Flow_Type?: pulumi.Input<string>;
        /**
         * The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
         */
        HockeyAppId?: pulumi.Input<string>;
        /**
         * Purge data immediately after 30 days.
         */
        ImmediatePurgeDataOn30Days?: pulumi.Input<boolean>;
        /**
         * Indicates the flow of the ingestion.
         */
        IngestionMode?: pulumi.Input<string>;
        /**
         * Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
         */
        Request_Source?: pulumi.Input<string>;
        /**
         * Retention period in days.
         */
        RetentionInDays?: pulumi.Input<number>;
        /**
         * Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
         */
        SamplingPercentage?: pulumi.Input<number>;
    }

    /**
     * Properties that define an Application Insights component resource.
     */
    export interface ApplicationInsightsComponentPropertiesResponse {
        /**
         * Application Insights Unique ID for your Application.
         */
        AppId: pulumi.Input<string>;
        /**
         * The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
         */
        ApplicationId: pulumi.Input<string>;
        /**
         * Type of application being monitored.
         */
        Application_Type: pulumi.Input<string>;
        /**
         * Application Insights component connection string.
         */
        ConnectionString: pulumi.Input<string>;
        /**
         * Creation Date for the Application Insights component, in ISO 8601 format.
         */
        CreationDate: pulumi.Input<string>;
        /**
         * Disable IP masking.
         */
        DisableIpMasking?: pulumi.Input<boolean>;
        /**
         * Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
         */
        Flow_Type?: pulumi.Input<string>;
        /**
         * The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
         */
        HockeyAppId?: pulumi.Input<string>;
        /**
         * Token used to authenticate communications with between Application Insights and HockeyApp.
         */
        HockeyAppToken: pulumi.Input<string>;
        /**
         * Purge data immediately after 30 days.
         */
        ImmediatePurgeDataOn30Days?: pulumi.Input<boolean>;
        /**
         * Indicates the flow of the ingestion.
         */
        IngestionMode?: pulumi.Input<string>;
        /**
         * Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
         */
        InstrumentationKey: pulumi.Input<string>;
        /**
         * List of linked private link scope resources.
         */
        PrivateLinkScopedResources: pulumi.Input<pulumi.Input<inputs.insights.PrivateLinkScopedResourceResponse>[]>;
        /**
         * Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
         */
        Request_Source?: pulumi.Input<string>;
        /**
         * Retention period in days.
         */
        RetentionInDays?: pulumi.Input<number>;
        /**
         * Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
         */
        SamplingPercentage?: pulumi.Input<number>;
        /**
         * Azure Tenant Id.
         */
        TenantId: pulumi.Input<string>;
        /**
         * Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * An alert action.
     */
    export interface MetricAlertAction {
        /**
         * the id of the action group to use.
         */
        actionGroupId?: pulumi.Input<string>;
        /**
         * The properties of a webhook object.
         */
        webHookProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * An alert action.
     */
    export interface MetricAlertActionResponse {
        /**
         * the id of the action group to use.
         */
        actionGroupId?: pulumi.Input<string>;
        /**
         * The properties of a webhook object.
         */
        webHookProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The rule criteria that defines the conditions of the alert rule.
     */
    export interface MetricAlertCriteria {
    }

    /**
     * The rule criteria that defines the conditions of the alert rule.
     */
    export interface MetricAlertCriteriaResponse {
    }

    /**
     * An alert rule.
     */
    export interface MetricAlertProperties {
        /**
         * the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
         */
        actions?: pulumi.Input<pulumi.Input<inputs.insights.MetricAlertAction>[]>;
        /**
         * the flag that indicates whether the alert should be auto resolved or not. The default is true.
         */
        autoMitigate?: pulumi.Input<boolean>;
        /**
         * defines the specific alert criteria information.
         */
        criteria: pulumi.Input<inputs.insights.MetricAlertCriteria>;
        /**
         * the description of the metric alert that will be included in the alert email.
         */
        description: pulumi.Input<string>;
        /**
         * the flag that indicates whether the metric alert is enabled.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * how often the metric alert is evaluated represented in ISO 8601 duration format.
         */
        evaluationFrequency: pulumi.Input<string>;
        /**
         * the list of resource id's that this metric alert is scoped to.
         */
        scopes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Alert severity {0, 1, 2, 3, 4}
         */
        severity: pulumi.Input<number>;
        /**
         * the region of the target resource(s) on which the alert is created/updated. Mandatory for MultipleResourceMultipleMetricCriteria.
         */
        targetResourceRegion?: pulumi.Input<string>;
        /**
         * the resource type of the target resource(s) on which the alert is created/updated. Mandatory for MultipleResourceMultipleMetricCriteria.
         */
        targetResourceType?: pulumi.Input<string>;
        /**
         * the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.
         */
        windowSize: pulumi.Input<string>;
    }

    /**
     * An alert rule.
     */
    export interface MetricAlertPropertiesResponse {
        /**
         * the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
         */
        actions?: pulumi.Input<pulumi.Input<inputs.insights.MetricAlertActionResponse>[]>;
        /**
         * the flag that indicates whether the alert should be auto resolved or not. The default is true.
         */
        autoMitigate?: pulumi.Input<boolean>;
        /**
         * defines the specific alert criteria information.
         */
        criteria: pulumi.Input<inputs.insights.MetricAlertCriteriaResponse>;
        /**
         * the description of the metric alert that will be included in the alert email.
         */
        description: pulumi.Input<string>;
        /**
         * the flag that indicates whether the metric alert is enabled.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * how often the metric alert is evaluated represented in ISO 8601 duration format.
         */
        evaluationFrequency: pulumi.Input<string>;
        /**
         * Last time the rule was updated in ISO8601 format.
         */
        lastUpdatedTime: pulumi.Input<string>;
        /**
         * the list of resource id's that this metric alert is scoped to.
         */
        scopes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Alert severity {0, 1, 2, 3, 4}
         */
        severity: pulumi.Input<number>;
        /**
         * the region of the target resource(s) on which the alert is created/updated. Mandatory for MultipleResourceMultipleMetricCriteria.
         */
        targetResourceRegion?: pulumi.Input<string>;
        /**
         * the resource type of the target resource(s) on which the alert is created/updated. Mandatory for MultipleResourceMultipleMetricCriteria.
         */
        targetResourceType?: pulumi.Input<string>;
        /**
         * the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.
         */
        windowSize: pulumi.Input<string>;
    }

    /**
     * The private link scope resource reference.
     */
    export interface PrivateLinkScopedResourceResponse {
        /**
         * The full resource Id of the private link scope resource.
         */
        ResourceId?: pulumi.Input<string>;
        /**
         * The private link scope unique Identifier.
         */
        ScopeId?: pulumi.Input<string>;
    }

    /**
     * Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
     */
    export interface WebTestGeolocation {
        /**
         * Location ID for the webtest to run from.
         */
        Id?: pulumi.Input<string>;
    }

    /**
     * Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
     */
    export interface WebTestGeolocationResponse {
        /**
         * Location ID for the webtest to run from.
         */
        Id?: pulumi.Input<string>;
    }

    /**
     * Metadata describing a web test for an Azure resource.
     */
    export interface WebTestProperties {
        /**
         * An XML configuration specification for a WebTest.
         */
        Configuration?: pulumi.Input<inputs.insights.WebTestPropertiesProperties>;
        /**
         * Purpose/user defined descriptive test for this WebTest.
         */
        Description?: pulumi.Input<string>;
        /**
         * Is the test actively being monitored.
         */
        Enabled?: pulumi.Input<boolean>;
        /**
         * Interval in seconds between test runs for this WebTest. Default value is 300.
         */
        Frequency?: pulumi.Input<number>;
        /**
         * The kind of web test this is, valid choices are ping and multistep.
         */
        Kind: pulumi.Input<string>;
        /**
         * A list of where to physically run the tests from to give global coverage for accessibility of your application.
         */
        Locations: pulumi.Input<pulumi.Input<inputs.insights.WebTestGeolocation>[]>;
        /**
         * User defined name if this WebTest.
         */
        Name: pulumi.Input<string>;
        /**
         * Allow for retries should this WebTest fail.
         */
        RetryEnabled?: pulumi.Input<boolean>;
        /**
         * Unique ID of this WebTest. This is typically the same value as the Name field.
         */
        SyntheticMonitorId: pulumi.Input<string>;
        /**
         * Seconds until this WebTest will timeout and fail. Default value is 30.
         */
        Timeout?: pulumi.Input<number>;
    }

    /**
     * An XML configuration specification for a WebTest.
     */
    export interface WebTestPropertiesProperties {
        /**
         * The XML specification of a WebTest to run against an application.
         */
        WebTest?: pulumi.Input<string>;
    }

    /**
     * Metadata describing a web test for an Azure resource.
     */
    export interface WebTestPropertiesResponse {
        /**
         * An XML configuration specification for a WebTest.
         */
        Configuration?: pulumi.Input<inputs.insights.WebTestPropertiesResponseProperties>;
        /**
         * Purpose/user defined descriptive test for this WebTest.
         */
        Description?: pulumi.Input<string>;
        /**
         * Is the test actively being monitored.
         */
        Enabled?: pulumi.Input<boolean>;
        /**
         * Interval in seconds between test runs for this WebTest. Default value is 300.
         */
        Frequency?: pulumi.Input<number>;
        /**
         * The kind of web test this is, valid choices are ping and multistep.
         */
        Kind: pulumi.Input<string>;
        /**
         * A list of where to physically run the tests from to give global coverage for accessibility of your application.
         */
        Locations: pulumi.Input<pulumi.Input<inputs.insights.WebTestGeolocationResponse>[]>;
        /**
         * User defined name if this WebTest.
         */
        Name: pulumi.Input<string>;
        /**
         * Allow for retries should this WebTest fail.
         */
        RetryEnabled?: pulumi.Input<boolean>;
        /**
         * Unique ID of this WebTest. This is typically the same value as the Name field.
         */
        SyntheticMonitorId: pulumi.Input<string>;
        /**
         * Seconds until this WebTest will timeout and fail. Default value is 30.
         */
        Timeout?: pulumi.Input<number>;
        /**
         * Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * An XML configuration specification for a WebTest.
     */
    export interface WebTestPropertiesResponseProperties {
        /**
         * The XML specification of a WebTest to run against an application.
         */
        WebTest?: pulumi.Input<string>;
    }

}

export namespace iotcentral {
    /**
     * The properties of an IoT Central application.
     */
    export interface AppProperties {
        /**
         * The display name of the application.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The subdomain of the application.
         */
        subdomain?: pulumi.Input<string>;
        /**
         * The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
         */
        template?: pulumi.Input<string>;
    }

    /**
     * The properties of an IoT Central application.
     */
    export interface AppPropertiesResponse {
        /**
         * The ID of the application.
         */
        applicationId: pulumi.Input<string>;
        /**
         * The display name of the application.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The subdomain of the application.
         */
        subdomain?: pulumi.Input<string>;
        /**
         * The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
         */
        template?: pulumi.Input<string>;
    }

    /**
     * Information about the SKU of the IoT Central application.
     */
    export interface AppSkuInfo {
        /**
         * The name of the SKU.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Information about the SKU of the IoT Central application.
     */
    export interface AppSkuInfoResponse {
        /**
         * The name of the SKU.
         */
        name: pulumi.Input<string>;
    }

}

export namespace keyvault {
    /**
     * An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.
     */
    export interface AccessPolicyEntry {
        /**
         *  Application ID of the client making request on behalf of a principal
         */
        applicationId?: pulumi.Input<string>;
        /**
         * The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
         */
        objectId: pulumi.Input<string>;
        /**
         * Permissions the identity has for keys, secrets and certificates.
         */
        permissions: pulumi.Input<inputs.keyvault.Permissions>;
        /**
         * The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.
     */
    export interface AccessPolicyEntryResponse {
        /**
         *  Application ID of the client making request on behalf of a principal
         */
        applicationId?: pulumi.Input<string>;
        /**
         * The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
         */
        objectId: pulumi.Input<string>;
        /**
         * Permissions the identity has for keys, secrets and certificates.
         */
        permissions: pulumi.Input<inputs.keyvault.PermissionsResponse>;
        /**
         * The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * A rule governing the accessibility of a vault from a specific ip address or ip range.
     */
    export interface IPRule {
        /**
         * An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
         */
        value: pulumi.Input<string>;
    }

    /**
     * A rule governing the accessibility of a vault from a specific ip address or ip range.
     */
    export interface IPRuleResponse {
        /**
         * An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
         */
        value: pulumi.Input<string>;
    }

    /**
     * A set of rules governing the network accessibility of a vault.
     */
    export interface NetworkRuleSet {
        /**
         * Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.
         */
        bypass?: pulumi.Input<string>;
        /**
         * The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
         */
        defaultAction?: pulumi.Input<string>;
        /**
         * The list of IP address rules.
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.keyvault.IPRule>[]>;
        /**
         * The list of virtual network rules.
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.keyvault.VirtualNetworkRule>[]>;
    }

    /**
     * A set of rules governing the network accessibility of a vault.
     */
    export interface NetworkRuleSetResponse {
        /**
         * Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.
         */
        bypass?: pulumi.Input<string>;
        /**
         * The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
         */
        defaultAction?: pulumi.Input<string>;
        /**
         * The list of IP address rules.
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.keyvault.IPRuleResponse>[]>;
        /**
         * The list of virtual network rules.
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.keyvault.VirtualNetworkRuleResponse>[]>;
    }

    /**
     * Permissions the identity has for keys, secrets, certificates and storage.
     */
    export interface Permissions {
        /**
         * Permissions to certificates
         */
        certificates?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Permissions to keys
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Permissions to secrets
         */
        secrets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Permissions to storage accounts
         */
        storage?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Permissions the identity has for keys, secrets, certificates and storage.
     */
    export interface PermissionsResponse {
        /**
         * Permissions to certificates
         */
        certificates?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Permissions to keys
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Permissions to secrets
         */
        secrets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Permissions to storage accounts
         */
        storage?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Private endpoint object properties.
     */
    export interface PrivateEndpoint {
    }

    /**
     * Private endpoint connection item.
     */
    export interface PrivateEndpointConnectionItemResponse {
        /**
         * Private endpoint connection properties.
         */
        properties?: pulumi.Input<inputs.keyvault.PrivateEndpointConnectionPropertiesResponse>;
    }

    /**
     * Properties of the private endpoint connection resource.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * Properties of the private endpoint object.
         */
        privateEndpoint?: pulumi.Input<inputs.keyvault.PrivateEndpoint>;
        /**
         * Approval state of the private link connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.keyvault.PrivateLinkServiceConnectionState>;
        /**
         * Provisioning state of the private endpoint connection.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Properties of the private endpoint connection resource.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * Properties of the private endpoint object.
         */
        privateEndpoint?: pulumi.Input<inputs.keyvault.PrivateEndpointResponse>;
        /**
         * Approval state of the private link connection.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.keyvault.PrivateLinkServiceConnectionStateResponse>;
        /**
         * Provisioning state of the private endpoint connection.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Private endpoint object properties.
     */
    export interface PrivateEndpointResponse {
        /**
         * Full identifier of the private endpoint resource.
         */
        id: pulumi.Input<string>;
    }

    /**
     * An object that represents the approval state of the private link connection.
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionRequired?: pulumi.Input<string>;
        /**
         * The reason for approval or rejection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been approved, rejected or removed by the key vault owner.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * An object that represents the approval state of the private link connection.
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionRequired?: pulumi.Input<string>;
        /**
         * The reason for approval or rejection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been approved, rejected or removed by the key vault owner.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * SKU details
     */
    export interface Sku {
        /**
         * SKU family name
         */
        family: pulumi.Input<string>;
        /**
         * SKU name to specify whether the key vault is a standard vault or a premium vault.
         */
        name: pulumi.Input<string>;
    }

    /**
     * SKU details
     */
    export interface SkuResponse {
        /**
         * SKU family name
         */
        family: pulumi.Input<string>;
        /**
         * SKU name to specify whether the key vault is a standard vault or a premium vault.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Properties of the vault
     */
    export interface VaultProperties {
        /**
         * An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.
         */
        accessPolicies?: pulumi.Input<pulumi.Input<inputs.keyvault.AccessPolicyEntry>[]>;
        /**
         * The vault's create mode to indicate whether the vault need to be recovered or not.
         */
        createMode?: pulumi.Input<string>;
        /**
         * Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.
         */
        enablePurgeProtection?: pulumi.Input<boolean>;
        /**
         * Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored (warning: this is a preview feature). When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.
         */
        enableRbacAuthorization?: pulumi.Input<boolean>;
        /**
         * Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.
         */
        enableSoftDelete?: pulumi.Input<boolean>;
        /**
         * Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.
         */
        enabledForDeployment?: pulumi.Input<boolean>;
        /**
         * Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.
         */
        enabledForDiskEncryption?: pulumi.Input<boolean>;
        /**
         * Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.
         */
        enabledForTemplateDeployment?: pulumi.Input<boolean>;
        /**
         * Rules governing the accessibility of the key vault from specific network locations.
         */
        networkAcls?: pulumi.Input<inputs.keyvault.NetworkRuleSet>;
        /**
         * SKU details
         */
        sku: pulumi.Input<inputs.keyvault.Sku>;
        /**
         * softDelete data retention days. It accepts >=7 and <=90.
         */
        softDeleteRetentionInDays?: pulumi.Input<number>;
        /**
         * The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The URI of the vault for performing operations on keys and secrets.
         */
        vaultUri?: pulumi.Input<string>;
    }

    /**
     * Properties of the vault
     */
    export interface VaultPropertiesResponse {
        /**
         * An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.
         */
        accessPolicies?: pulumi.Input<pulumi.Input<inputs.keyvault.AccessPolicyEntryResponse>[]>;
        /**
         * The vault's create mode to indicate whether the vault need to be recovered or not.
         */
        createMode?: pulumi.Input<string>;
        /**
         * Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.
         */
        enablePurgeProtection?: pulumi.Input<boolean>;
        /**
         * Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored (warning: this is a preview feature). When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.
         */
        enableRbacAuthorization?: pulumi.Input<boolean>;
        /**
         * Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.
         */
        enableSoftDelete?: pulumi.Input<boolean>;
        /**
         * Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.
         */
        enabledForDeployment?: pulumi.Input<boolean>;
        /**
         * Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.
         */
        enabledForDiskEncryption?: pulumi.Input<boolean>;
        /**
         * Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.
         */
        enabledForTemplateDeployment?: pulumi.Input<boolean>;
        /**
         * Rules governing the accessibility of the key vault from specific network locations.
         */
        networkAcls?: pulumi.Input<inputs.keyvault.NetworkRuleSetResponse>;
        /**
         * List of private endpoint connections associated with the key vault.
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.keyvault.PrivateEndpointConnectionItemResponse>[]>;
        /**
         * SKU details
         */
        sku: pulumi.Input<inputs.keyvault.SkuResponse>;
        /**
         * softDelete data retention days. It accepts >=7 and <=90.
         */
        softDeleteRetentionInDays?: pulumi.Input<number>;
        /**
         * The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The URI of the vault for performing operations on keys and secrets.
         */
        vaultUri?: pulumi.Input<string>;
    }

    /**
     * A rule governing the accessibility of a vault from a specific virtual network.
     */
    export interface VirtualNetworkRule {
        /**
         * Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
         */
        id: pulumi.Input<string>;
    }

    /**
     * A rule governing the accessibility of a vault from a specific virtual network.
     */
    export interface VirtualNetworkRuleResponse {
        /**
         * Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
         */
        id: pulumi.Input<string>;
    }
}

export namespace kusto {
    /**
     * Class representing the an attached database configuration properties of kind specific.
     */
    export interface AttachedDatabaseConfigurationProperties {
        /**
         * The resource id of the cluster where the databases you would like to attach reside.
         */
        clusterResourceId: pulumi.Input<string>;
        /**
         * The name of the database which you would like to attach, use * if you want to follow all current and future databases.
         */
        databaseName: pulumi.Input<string>;
        /**
         * The default principals modification kind
         */
        defaultPrincipalsModificationKind: pulumi.Input<string>;
    }

    /**
     * Class representing the an attached database configuration properties of kind specific.
     */
    export interface AttachedDatabaseConfigurationPropertiesResponse {
        /**
         * The list of databases from the clusterResourceId which are currently attached to the cluster.
         */
        attachedDatabaseNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The resource id of the cluster where the databases you would like to attach reside.
         */
        clusterResourceId: pulumi.Input<string>;
        /**
         * The name of the database which you would like to attach, use * if you want to follow all current and future databases.
         */
        databaseName: pulumi.Input<string>;
        /**
         * The default principals modification kind
         */
        defaultPrincipalsModificationKind: pulumi.Input<string>;
        /**
         * The provisioned state of the resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Azure SKU definition.
     */
    export interface AzureSku {
        /**
         * The number of instances of the cluster.
         */
        capacity?: pulumi.Input<number>;
        /**
         * SKU name.
         */
        name: pulumi.Input<string>;
        /**
         * SKU tier.
         */
        tier: pulumi.Input<string>;
    }

    /**
     * Azure SKU definition.
     */
    export interface AzureSkuResponse {
        /**
         * The number of instances of the cluster.
         */
        capacity?: pulumi.Input<number>;
        /**
         * SKU name.
         */
        name: pulumi.Input<string>;
        /**
         * SKU tier.
         */
        tier: pulumi.Input<string>;
    }

    /**
     * A class representing cluster principal property.
     */
    export interface ClusterPrincipalProperties {
        /**
         * The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
         */
        principalId: pulumi.Input<string>;
        /**
         * Principal type.
         */
        principalType: pulumi.Input<string>;
        /**
         * Cluster principal role.
         */
        role: pulumi.Input<string>;
        /**
         * The tenant id of the principal
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * A class representing cluster principal property.
     */
    export interface ClusterPrincipalPropertiesResponse {
        /**
         * The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
         */
        principalId: pulumi.Input<string>;
        /**
         * The principal name
         */
        principalName: pulumi.Input<string>;
        /**
         * Principal type.
         */
        principalType: pulumi.Input<string>;
        /**
         * The provisioned state of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Cluster principal role.
         */
        role: pulumi.Input<string>;
        /**
         * The tenant id of the principal
         */
        tenantId?: pulumi.Input<string>;
        /**
         * The tenant name of the principal
         */
        tenantName: pulumi.Input<string>;
    }

    /**
     * Class representing the Kusto cluster properties.
     */
    export interface ClusterProperties {
        /**
         * A boolean value that indicates if the cluster's disks are encrypted.
         */
        enableDiskEncryption?: pulumi.Input<boolean>;
        /**
         * A boolean value that indicates if the purge operations are enabled.
         */
        enablePurge?: pulumi.Input<boolean>;
        /**
         * A boolean value that indicates if the streaming ingest is enabled.
         */
        enableStreamingIngest?: pulumi.Input<boolean>;
        /**
         * KeyVault properties for the cluster encryption.
         */
        keyVaultProperties?: pulumi.Input<inputs.kusto.KeyVaultProperties>;
        /**
         * List of the cluster's language extensions.
         */
        languageExtensions?: pulumi.Input<inputs.kusto.LanguageExtensionsList>;
        /**
         * Optimized auto scale definition.
         */
        optimizedAutoscale?: pulumi.Input<inputs.kusto.OptimizedAutoscale>;
        /**
         * The cluster's external tenants.
         */
        trustedExternalTenants?: pulumi.Input<pulumi.Input<inputs.kusto.TrustedExternalTenant>[]>;
        /**
         * Virtual network definition.
         */
        virtualNetworkConfiguration?: pulumi.Input<inputs.kusto.VirtualNetworkConfiguration>;
    }

    /**
     * Class representing the Kusto cluster properties.
     */
    export interface ClusterPropertiesResponse {
        /**
         * The cluster data ingestion URI.
         */
        dataIngestionUri: pulumi.Input<string>;
        /**
         * A boolean value that indicates if the cluster's disks are encrypted.
         */
        enableDiskEncryption?: pulumi.Input<boolean>;
        /**
         * A boolean value that indicates if the purge operations are enabled.
         */
        enablePurge?: pulumi.Input<boolean>;
        /**
         * A boolean value that indicates if the streaming ingest is enabled.
         */
        enableStreamingIngest?: pulumi.Input<boolean>;
        /**
         * KeyVault properties for the cluster encryption.
         */
        keyVaultProperties?: pulumi.Input<inputs.kusto.KeyVaultPropertiesResponse>;
        /**
         * List of the cluster's language extensions.
         */
        languageExtensions?: pulumi.Input<inputs.kusto.LanguageExtensionsListResponse>;
        /**
         * Optimized auto scale definition.
         */
        optimizedAutoscale?: pulumi.Input<inputs.kusto.OptimizedAutoscaleResponse>;
        /**
         * The provisioned state of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The state of the resource.
         */
        state: pulumi.Input<string>;
        /**
         * The reason for the cluster's current state.
         */
        stateReason: pulumi.Input<string>;
        /**
         * The cluster's external tenants.
         */
        trustedExternalTenants?: pulumi.Input<pulumi.Input<inputs.kusto.TrustedExternalTenantResponse>[]>;
        /**
         * The cluster URI.
         */
        uri: pulumi.Input<string>;
        /**
         * Virtual network definition.
         */
        virtualNetworkConfiguration?: pulumi.Input<inputs.kusto.VirtualNetworkConfigurationResponse>;
    }

    /**
     * A class representing database principal property.
     */
    export interface DatabasePrincipalProperties {
        /**
         * The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
         */
        principalId: pulumi.Input<string>;
        /**
         * Principal type.
         */
        principalType: pulumi.Input<string>;
        /**
         * Database principal role.
         */
        role: pulumi.Input<string>;
        /**
         * The tenant id of the principal
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * A class representing database principal property.
     */
    export interface DatabasePrincipalPropertiesResponse {
        /**
         * The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
         */
        principalId: pulumi.Input<string>;
        /**
         * The principal name
         */
        principalName: pulumi.Input<string>;
        /**
         * Principal type.
         */
        principalType: pulumi.Input<string>;
        /**
         * The provisioned state of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Database principal role.
         */
        role: pulumi.Input<string>;
        /**
         * The tenant id of the principal
         */
        tenantId?: pulumi.Input<string>;
        /**
         * The tenant name of the principal
         */
        tenantName: pulumi.Input<string>;
    }

    /**
     * Identity for the resource.
     */
    export interface Identity {
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
        /**
         * The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the resource.
     */
    export interface IdentityResponse {
        /**
         * The principal ID of resource identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant ID of resource.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
        /**
         * The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Properties of the key vault.
     */
    export interface KeyVaultProperties {
        /**
         * The name of the key vault key.
         */
        keyName: pulumi.Input<string>;
        /**
         * The Uri of the key vault.
         */
        keyVaultUri: pulumi.Input<string>;
        /**
         * The version of the key vault key.
         */
        keyVersion: pulumi.Input<string>;
    }

    /**
     * Properties of the key vault.
     */
    export interface KeyVaultPropertiesResponse {
        /**
         * The name of the key vault key.
         */
        keyName: pulumi.Input<string>;
        /**
         * The Uri of the key vault.
         */
        keyVaultUri: pulumi.Input<string>;
        /**
         * The version of the key vault key.
         */
        keyVersion: pulumi.Input<string>;
    }

    /**
     * The language extension object.
     */
    export interface LanguageExtension {
        /**
         * The language extension name.
         */
        languageExtensionName?: pulumi.Input<string>;
    }

    /**
     * The language extension object.
     */
    export interface LanguageExtensionResponse {
        /**
         * The language extension name.
         */
        languageExtensionName?: pulumi.Input<string>;
    }

    /**
     * The list of language extension objects.
     */
    export interface LanguageExtensionsList {
        /**
         * The list of language extensions.
         */
        value?: pulumi.Input<pulumi.Input<inputs.kusto.LanguageExtension>[]>;
    }

    /**
     * The list of language extension objects.
     */
    export interface LanguageExtensionsListResponse {
        /**
         * The list of language extensions.
         */
        value?: pulumi.Input<pulumi.Input<inputs.kusto.LanguageExtensionResponse>[]>;
    }

    /**
     * A class that contains the optimized auto scale definition.
     */
    export interface OptimizedAutoscale {
        /**
         * A boolean value that indicate if the optimized autoscale feature is enabled or not.
         */
        isEnabled: pulumi.Input<boolean>;
        /**
         * Maximum allowed instances count.
         */
        maximum: pulumi.Input<number>;
        /**
         * Minimum allowed instances count.
         */
        minimum: pulumi.Input<number>;
        /**
         * The version of the template defined, for instance 1.
         */
        version: pulumi.Input<number>;
    }

    /**
     * A class that contains the optimized auto scale definition.
     */
    export interface OptimizedAutoscaleResponse {
        /**
         * A boolean value that indicate if the optimized autoscale feature is enabled or not.
         */
        isEnabled: pulumi.Input<boolean>;
        /**
         * Maximum allowed instances count.
         */
        maximum: pulumi.Input<number>;
        /**
         * Minimum allowed instances count.
         */
        minimum: pulumi.Input<number>;
        /**
         * The version of the template defined, for instance 1.
         */
        version: pulumi.Input<number>;
    }

    /**
     * Represents a tenant ID that is trusted by the cluster.
     */
    export interface TrustedExternalTenant {
        /**
         * GUID representing an external tenant.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Represents a tenant ID that is trusted by the cluster.
     */
    export interface TrustedExternalTenantResponse {
        /**
         * GUID representing an external tenant.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * A class that contains virtual network definition.
     */
    export interface VirtualNetworkConfiguration {
        /**
         * Data management's service public IP address resource id.
         */
        dataManagementPublicIpId: pulumi.Input<string>;
        /**
         * Engine service's public IP address resource id.
         */
        enginePublicIpId: pulumi.Input<string>;
        /**
         * The subnet resource id.
         */
        subnetId: pulumi.Input<string>;
    }

    /**
     * A class that contains virtual network definition.
     */
    export interface VirtualNetworkConfigurationResponse {
        /**
         * Data management's service public IP address resource id.
         */
        dataManagementPublicIpId: pulumi.Input<string>;
        /**
         * Engine service's public IP address resource id.
         */
        enginePublicIpId: pulumi.Input<string>;
        /**
         * The subnet resource id.
         */
        subnetId: pulumi.Input<string>;
    }

    /**
     * An array represents the availability zones of the cluster.
     */
    export interface Zones {
    }

    /**
     * An array represents the availability zones of the cluster.
     */
    export interface ZonesResponse {
    }
}

export namespace labservices {
    /**
     * Properties of an environment
     */
    export interface EnvironmentProperties {
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The set of a VM and the setting id it was created for
         */
        resourceSets?: pulumi.Input<inputs.labservices.ResourceSet>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * Properties of an environment
     */
    export interface EnvironmentPropertiesResponse {
        /**
         * The name or email address of the user who has claimed the environment
         */
        claimedByUserName: pulumi.Input<string>;
        /**
         * The AAD object Id of the user who has claimed the environment
         */
        claimedByUserObjectId: pulumi.Input<string>;
        /**
         * The user principal Id of the user who has claimed the environment
         */
        claimedByUserPrincipalId: pulumi.Input<string>;
        /**
         * Is the environment claimed or not
         */
        isClaimed: pulumi.Input<boolean>;
        /**
         * Last known power state of the environment
         */
        lastKnownPowerState: pulumi.Input<string>;
        /**
         * The details of the latest operation. ex: status, error
         */
        latestOperationResult: pulumi.Input<inputs.labservices.LatestOperationResultResponse>;
        /**
         * Network details of the environment
         */
        networkInterface: pulumi.Input<inputs.labservices.NetworkInterfaceResponse>;
        /**
         * When the password was last reset on the environment.
         */
        passwordLastReset: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The set of a VM and the setting id it was created for
         */
        resourceSets?: pulumi.Input<inputs.labservices.ResourceSetResponse>;
        /**
         * How long the environment has been used by a lab user
         */
        totalUsage: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * Properties of an environment setting
     */
    export interface EnvironmentSettingProperties {
        /**
         * Describes the user's progress in configuring their environment setting
         */
        configurationState?: pulumi.Input<string>;
        /**
         * Describes the environment and its resource settings
         */
        description?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The resource specific settings
         */
        resourceSettings: pulumi.Input<inputs.labservices.ResourceSettings>;
        /**
         * Brief title describing the environment and its resource settings
         */
        title?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * Properties of an environment setting
     */
    export interface EnvironmentSettingPropertiesResponse {
        /**
         * Describes the user's progress in configuring their environment setting
         */
        configurationState?: pulumi.Input<string>;
        /**
         * Describes the environment and its resource settings
         */
        description?: pulumi.Input<string>;
        /**
         * Time when the template VM was last changed.
         */
        lastChanged: pulumi.Input<string>;
        /**
         * Time when the template VM was last sent for publishing.
         */
        lastPublished: pulumi.Input<string>;
        /**
         * The details of the latest operation. ex: status, error
         */
        latestOperationResult: pulumi.Input<inputs.labservices.LatestOperationResultResponse>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Describes the readiness of this environment setting
         */
        publishingState: pulumi.Input<string>;
        /**
         * The resource specific settings
         */
        resourceSettings: pulumi.Input<inputs.labservices.ResourceSettingsResponse>;
        /**
         * Brief title describing the environment and its resource settings
         */
        title?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * Represents a size category supported by this Lab Account (small, medium or large)
     */
    export interface EnvironmentSizeResponse {
        /**
         * The pay-as-you-go dollar price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost. This is the maximum price of all prices within this tier.
         */
        maxPrice: pulumi.Input<number>;
        /**
         * The amount of memory available (in GB). This is the minimum amount of memory within this tier.
         */
        minMemory: pulumi.Input<number>;
        /**
         * The number of cores a VM of this size has. This is the minimum number of cores within this tier.
         */
        minNumberOfCores: pulumi.Input<number>;
        /**
         * The size category
         */
        name?: pulumi.Input<string>;
        /**
         * Represents a set of compute sizes that can serve this given size type
         */
        vmSizes?: pulumi.Input<pulumi.Input<inputs.labservices.SizeInfoResponse>[]>;
    }

    /**
     * The gallery image properties
     */
    export interface GalleryImageProperties {
        /**
         * Indicates whether this gallery image is enabled.
         */
        isEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates whether this gallery has been overridden for this lab account
         */
        isOverride?: pulumi.Input<boolean>;
        /**
         * Indicates if the plan has been authorized for programmatic deployment.
         */
        isPlanAuthorized?: pulumi.Input<boolean>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * The gallery image properties
     */
    export interface GalleryImagePropertiesResponse {
        /**
         * The author of the gallery image.
         */
        author: pulumi.Input<string>;
        /**
         * The creation date of the gallery image.
         */
        createdDate: pulumi.Input<string>;
        /**
         * The description of the gallery image.
         */
        description: pulumi.Input<string>;
        /**
         * The icon of the gallery image.
         */
        icon: pulumi.Input<string>;
        /**
         * The image reference of the gallery image.
         */
        imageReference: pulumi.Input<inputs.labservices.GalleryImageReferenceResponse>;
        /**
         * Indicates whether this gallery image is enabled.
         */
        isEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates whether this gallery has been overridden for this lab account
         */
        isOverride?: pulumi.Input<boolean>;
        /**
         * Indicates if the plan has been authorized for programmatic deployment.
         */
        isPlanAuthorized?: pulumi.Input<boolean>;
        /**
         * The details of the latest operation. ex: status, error
         */
        latestOperationResult: pulumi.Input<inputs.labservices.LatestOperationResultResponse>;
        /**
         * The third party plan that applies to this image
         */
        planId: pulumi.Input<string>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * The reference information for an Azure Marketplace image.
     */
    export interface GalleryImageReferenceResponse {
        /**
         * The offer of the gallery image.
         */
        offer?: pulumi.Input<string>;
        /**
         * The OS type of the gallery image.
         */
        osType?: pulumi.Input<string>;
        /**
         * The publisher of the gallery image.
         */
        publisher?: pulumi.Input<string>;
        /**
         * The SKU of the gallery image.
         */
        sku?: pulumi.Input<string>;
        /**
         * The version of the gallery image.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Properties of a Lab Account.
     */
    export interface LabAccountProperties {
        /**
         * Represents if region selection is enabled
         */
        enabledRegionSelection?: pulumi.Input<boolean>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * Properties of a Lab Account.
     */
    export interface LabAccountPropertiesResponse {
        /**
         * Represents if region selection is enabled
         */
        enabledRegionSelection?: pulumi.Input<boolean>;
        /**
         * The details of the latest operation. ex: status, error
         */
        latestOperationResult: pulumi.Input<inputs.labservices.LatestOperationResultResponse>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Represents the size configuration under the lab account
         */
        sizeConfiguration: pulumi.Input<inputs.labservices.SizeConfigurationPropertiesResponse>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * Properties of a Lab.
     */
    export interface LabProperties {
        /**
         * Maximum number of users allowed in the lab.
         */
        maxUsersInLab?: pulumi.Input<number>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
        /**
         * Maximum duration a user can use an environment for in the lab.
         */
        usageQuota?: pulumi.Input<string>;
        /**
         * Lab user access mode (open to all vs. restricted to those listed on the lab).
         */
        userAccessMode?: pulumi.Input<string>;
    }

    /**
     * Properties of a Lab.
     */
    export interface LabPropertiesResponse {
        /**
         * Object id of the user that created the lab.
         */
        createdByObjectId: pulumi.Input<string>;
        /**
         * Lab creator name
         */
        createdByUserPrincipalName: pulumi.Input<string>;
        /**
         * Creation date for the lab
         */
        createdDate: pulumi.Input<string>;
        /**
         * Invitation code that users can use to join a lab.
         */
        invitationCode: pulumi.Input<string>;
        /**
         * The details of the latest operation. ex: status, error
         */
        latestOperationResult: pulumi.Input<inputs.labservices.LatestOperationResultResponse>;
        /**
         * Maximum number of users allowed in the lab.
         */
        maxUsersInLab?: pulumi.Input<number>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
        /**
         * Maximum duration a user can use an environment for in the lab.
         */
        usageQuota?: pulumi.Input<string>;
        /**
         * Lab user access mode (open to all vs. restricted to those listed on the lab).
         */
        userAccessMode?: pulumi.Input<string>;
        /**
         * Maximum value MaxUsersInLab can be set to, as specified by the service
         */
        userQuota: pulumi.Input<number>;
    }

    /**
     * Details of the status of an operation.
     */
    export interface LatestOperationResultResponse {
        /**
         * Error code on failure.
         */
        errorCode: pulumi.Input<string>;
        /**
         * The error message.
         */
        errorMessage: pulumi.Input<string>;
        /**
         * The HttpMethod - PUT/POST/DELETE for the operation.
         */
        httpMethod: pulumi.Input<string>;
        /**
         * The URL to use to check long-running operation status
         */
        operationUrl: pulumi.Input<string>;
        /**
         * Request URI of the operation.
         */
        requestUri: pulumi.Input<string>;
        /**
         * The current status of the operation.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Network details of the environment
     */
    export interface NetworkInterfaceResponse {
        /**
         * PrivateIp address of the Compute VM
         */
        privateIpAddress: pulumi.Input<string>;
        /**
         * Connection information for Windows
         */
        rdpAuthority: pulumi.Input<string>;
        /**
         * Connection information for Linux
         */
        sshAuthority: pulumi.Input<string>;
        /**
         * Username of the VM
         */
        username: pulumi.Input<string>;
    }

    /**
     * Details of a Reference Vm
     */
    export interface ReferenceVm {
        /**
         * The password of the virtual machine. This will be set to null in GET resource API
         */
        password?: pulumi.Input<string>;
        /**
         * The username of the virtual machine
         */
        userName: pulumi.Input<string>;
    }

    /**
     * Details of a Reference Vm
     */
    export interface ReferenceVmResponse {
        /**
         * The password of the virtual machine. This will be set to null in GET resource API
         */
        password?: pulumi.Input<string>;
        /**
         * The username of the virtual machine
         */
        userName: pulumi.Input<string>;
        /**
         * VM resource Id for the environment
         */
        vmResourceId: pulumi.Input<string>;
        /**
         * The state details for the reference virtual machine.
         */
        vmStateDetails: pulumi.Input<inputs.labservices.VmStateDetailsResponse>;
    }

    /**
     * Represents a VM and the setting Id it was created for.
     */
    export interface ResourceSet {
        /**
         * resourceSettingId for the environment
         */
        resourceSettingId?: pulumi.Input<string>;
        /**
         * VM resource Id for the environment
         */
        vmResourceId?: pulumi.Input<string>;
    }

    /**
     * Represents a VM and the setting Id it was created for.
     */
    export interface ResourceSetResponse {
        /**
         * resourceSettingId for the environment
         */
        resourceSettingId?: pulumi.Input<string>;
        /**
         * VM resource Id for the environment
         */
        vmResourceId?: pulumi.Input<string>;
    }

    /**
     * Represents resource specific settings
     */
    export interface ResourceSettings {
        /**
         * The resource id of the gallery image used for creating the virtual machine
         */
        galleryImageResourceId?: pulumi.Input<string>;
        /**
         * Details specific to Reference Vm
         */
        referenceVm: pulumi.Input<inputs.labservices.ReferenceVm>;
        /**
         * The size of the virtual machine
         */
        size?: pulumi.Input<string>;
    }

    /**
     * Represents resource specific settings
     */
    export interface ResourceSettingsResponse {
        /**
         * The translated compute cores of the virtual machine
         */
        cores: pulumi.Input<number>;
        /**
         * The resource id of the gallery image used for creating the virtual machine
         */
        galleryImageResourceId?: pulumi.Input<string>;
        /**
         * The unique id of the resource setting
         */
        id: pulumi.Input<string>;
        /**
         * The name of the image used to created the environment setting
         */
        imageName: pulumi.Input<string>;
        /**
         * Details specific to Reference Vm
         */
        referenceVm: pulumi.Input<inputs.labservices.ReferenceVmResponse>;
        /**
         * The size of the virtual machine
         */
        size?: pulumi.Input<string>;
    }

    /**
     * Represents the size configuration under the lab account
     */
    export interface SizeConfigurationPropertiesResponse {
        /**
         * Represents a list of size categories supported by this Lab Account (Small, Medium, Large)
         */
        environmentSizes?: pulumi.Input<pulumi.Input<inputs.labservices.EnvironmentSizeResponse>[]>;
    }

    /**
     * Contains detailed information about a size
     */
    export interface SizeInfoResponse {
        /**
         * Represents the actual compute size, e.g. Standard_A2_v2.
         */
        computeSize?: pulumi.Input<string>;
        /**
         * The amount of memory available (in GB).
         */
        memory?: pulumi.Input<number>;
        /**
         * The number of cores a VM of this size has.
         */
        numberOfCores?: pulumi.Input<number>;
        /**
         * The pay-as-you-go price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost.
         */
        price?: pulumi.Input<number>;
    }

    /**
     * Lab User properties
     */
    export interface UserProperties {
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * Lab User properties
     */
    export interface UserPropertiesResponse {
        /**
         * The user email address, as it was specified during registration.
         */
        email: pulumi.Input<string>;
        /**
         * The user family name, as it was specified during registration.
         */
        familyName: pulumi.Input<string>;
        /**
         * The user given name, as it was specified during registration.
         */
        givenName: pulumi.Input<string>;
        /**
         * The details of the latest operation. ex: status, error
         */
        latestOperationResult: pulumi.Input<inputs.labservices.LatestOperationResultResponse>;
        /**
         * The provisioning status of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The user tenant ID, as it was specified during registration.
         */
        tenantId: pulumi.Input<string>;
        /**
         * How long the user has used his VMs in this lab
         */
        totalUsage: pulumi.Input<string>;
        /**
         * The unique immutable identifier of a resource (Guid).
         */
        uniqueIdentifier?: pulumi.Input<string>;
    }

    /**
     * Details about the state of the reference virtual machine.
     */
    export interface VmStateDetailsResponse {
        /**
         * Last known compute power state captured in DTL
         */
        lastKnownPowerState: pulumi.Input<string>;
        /**
         * The power state of the reference virtual machine.
         */
        powerState: pulumi.Input<string>;
        /**
         * The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
         */
        rdpAuthority: pulumi.Input<string>;
        /**
         * The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
         */
        sshAuthority: pulumi.Input<string>;
    }
}

export namespace logic {
    /**
     * The AS2 agreement acknowledgement connection settings.
     */
    export interface AS2AcknowledgementConnectionSettings {
        /**
         * Indicates whether to ignore mismatch in certificate name.
         */
        ignoreCertificateNameMismatch: pulumi.Input<boolean>;
        /**
         * Indicates whether to keep the connection alive.
         */
        keepHttpConnectionAlive: pulumi.Input<boolean>;
        /**
         * Indicates whether to support HTTP status code 'CONTINUE'.
         */
        supportHttpStatusCodeContinue: pulumi.Input<boolean>;
        /**
         * Indicates whether to unfold the HTTP headers.
         */
        unfoldHttpHeaders: pulumi.Input<boolean>;
    }

    /**
     * The AS2 agreement acknowledgement connection settings.
     */
    export interface AS2AcknowledgementConnectionSettingsResponse {
        /**
         * Indicates whether to ignore mismatch in certificate name.
         */
        ignoreCertificateNameMismatch: pulumi.Input<boolean>;
        /**
         * Indicates whether to keep the connection alive.
         */
        keepHttpConnectionAlive: pulumi.Input<boolean>;
        /**
         * Indicates whether to support HTTP status code 'CONTINUE'.
         */
        supportHttpStatusCodeContinue: pulumi.Input<boolean>;
        /**
         * Indicates whether to unfold the HTTP headers.
         */
        unfoldHttpHeaders: pulumi.Input<boolean>;
    }

    /**
     * The integration account AS2 agreement content.
     */
    export interface AS2AgreementContent {
        /**
         * The AS2 one-way receive agreement.
         */
        receiveAgreement: pulumi.Input<inputs.logic.AS2OneWayAgreement>;
        /**
         * The AS2 one-way send agreement.
         */
        sendAgreement: pulumi.Input<inputs.logic.AS2OneWayAgreement>;
    }

    /**
     * The integration account AS2 agreement content.
     */
    export interface AS2AgreementContentResponse {
        /**
         * The AS2 one-way receive agreement.
         */
        receiveAgreement: pulumi.Input<inputs.logic.AS2OneWayAgreementResponse>;
        /**
         * The AS2 one-way send agreement.
         */
        sendAgreement: pulumi.Input<inputs.logic.AS2OneWayAgreementResponse>;
    }

    /**
     * The AS2 agreement envelope settings.
     */
    export interface AS2EnvelopeSettings {
        /**
         * The value indicating whether to auto generate file name.
         */
        autogenerateFileName: pulumi.Input<boolean>;
        /**
         * The template for file name.
         */
        fileNameTemplate: pulumi.Input<string>;
        /**
         * The message content type.
         */
        messageContentType: pulumi.Input<string>;
        /**
         * The value indicating whether to suspend message on file name generation error.
         */
        suspendMessageOnFileNameGenerationError: pulumi.Input<boolean>;
        /**
         * The value indicating whether to transmit file name in mime header.
         */
        transmitFileNameInMimeHeader: pulumi.Input<boolean>;
    }

    /**
     * The AS2 agreement envelope settings.
     */
    export interface AS2EnvelopeSettingsResponse {
        /**
         * The value indicating whether to auto generate file name.
         */
        autogenerateFileName: pulumi.Input<boolean>;
        /**
         * The template for file name.
         */
        fileNameTemplate: pulumi.Input<string>;
        /**
         * The message content type.
         */
        messageContentType: pulumi.Input<string>;
        /**
         * The value indicating whether to suspend message on file name generation error.
         */
        suspendMessageOnFileNameGenerationError: pulumi.Input<boolean>;
        /**
         * The value indicating whether to transmit file name in mime header.
         */
        transmitFileNameInMimeHeader: pulumi.Input<boolean>;
    }

    /**
     * The AS2 agreement error settings.
     */
    export interface AS2ErrorSettings {
        /**
         * The value indicating whether to resend message If MDN is not received.
         */
        resendIfMDNNotReceived: pulumi.Input<boolean>;
        /**
         * The value indicating whether to suspend duplicate message.
         */
        suspendDuplicateMessage: pulumi.Input<boolean>;
    }

    /**
     * The AS2 agreement error settings.
     */
    export interface AS2ErrorSettingsResponse {
        /**
         * The value indicating whether to resend message If MDN is not received.
         */
        resendIfMDNNotReceived: pulumi.Input<boolean>;
        /**
         * The value indicating whether to suspend duplicate message.
         */
        suspendDuplicateMessage: pulumi.Input<boolean>;
    }

    /**
     * The AS2 agreement mdn settings.
     */
    export interface AS2MdnSettings {
        /**
         * The disposition notification to header value.
         */
        dispositionNotificationTo?: pulumi.Input<string>;
        /**
         * The MDN text.
         */
        mdnText?: pulumi.Input<string>;
        /**
         * The signing or hashing algorithm.
         */
        micHashingAlgorithm: pulumi.Input<string>;
        /**
         * The value indicating whether to send or request a MDN.
         */
        needMDN: pulumi.Input<boolean>;
        /**
         * The receipt delivery URL.
         */
        receiptDeliveryUrl?: pulumi.Input<string>;
        /**
         * The value indicating whether to send inbound MDN to message box.
         */
        sendInboundMDNToMessageBox: pulumi.Input<boolean>;
        /**
         * The value indicating whether to send the asynchronous MDN.
         */
        sendMDNAsynchronously: pulumi.Input<boolean>;
        /**
         * The value indicating whether the MDN needs to be signed or not.
         */
        signMDN: pulumi.Input<boolean>;
        /**
         * The value indicating whether to sign the outbound MDN if optional.
         */
        signOutboundMDNIfOptional: pulumi.Input<boolean>;
    }

    /**
     * The AS2 agreement mdn settings.
     */
    export interface AS2MdnSettingsResponse {
        /**
         * The disposition notification to header value.
         */
        dispositionNotificationTo?: pulumi.Input<string>;
        /**
         * The MDN text.
         */
        mdnText?: pulumi.Input<string>;
        /**
         * The signing or hashing algorithm.
         */
        micHashingAlgorithm: pulumi.Input<string>;
        /**
         * The value indicating whether to send or request a MDN.
         */
        needMDN: pulumi.Input<boolean>;
        /**
         * The receipt delivery URL.
         */
        receiptDeliveryUrl?: pulumi.Input<string>;
        /**
         * The value indicating whether to send inbound MDN to message box.
         */
        sendInboundMDNToMessageBox: pulumi.Input<boolean>;
        /**
         * The value indicating whether to send the asynchronous MDN.
         */
        sendMDNAsynchronously: pulumi.Input<boolean>;
        /**
         * The value indicating whether the MDN needs to be signed or not.
         */
        signMDN: pulumi.Input<boolean>;
        /**
         * The value indicating whether to sign the outbound MDN if optional.
         */
        signOutboundMDNIfOptional: pulumi.Input<boolean>;
    }

    /**
     * The AS2 agreement message connection settings.
     */
    export interface AS2MessageConnectionSettings {
        /**
         * The value indicating whether to ignore mismatch in certificate name.
         */
        ignoreCertificateNameMismatch: pulumi.Input<boolean>;
        /**
         * The value indicating whether to keep the connection alive.
         */
        keepHttpConnectionAlive: pulumi.Input<boolean>;
        /**
         * The value indicating whether to support HTTP status code 'CONTINUE'.
         */
        supportHttpStatusCodeContinue: pulumi.Input<boolean>;
        /**
         * The value indicating whether to unfold the HTTP headers.
         */
        unfoldHttpHeaders: pulumi.Input<boolean>;
    }

    /**
     * The AS2 agreement message connection settings.
     */
    export interface AS2MessageConnectionSettingsResponse {
        /**
         * The value indicating whether to ignore mismatch in certificate name.
         */
        ignoreCertificateNameMismatch: pulumi.Input<boolean>;
        /**
         * The value indicating whether to keep the connection alive.
         */
        keepHttpConnectionAlive: pulumi.Input<boolean>;
        /**
         * The value indicating whether to support HTTP status code 'CONTINUE'.
         */
        supportHttpStatusCodeContinue: pulumi.Input<boolean>;
        /**
         * The value indicating whether to unfold the HTTP headers.
         */
        unfoldHttpHeaders: pulumi.Input<boolean>;
    }

    /**
     * The integration account AS2 one-way agreement.
     */
    export interface AS2OneWayAgreement {
        /**
         * The AS2 protocol settings.
         */
        protocolSettings: pulumi.Input<inputs.logic.AS2ProtocolSettings>;
        /**
         * The receiver business identity
         */
        receiverBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentity>;
        /**
         * The sender business identity
         */
        senderBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentity>;
    }

    /**
     * The integration account AS2 one-way agreement.
     */
    export interface AS2OneWayAgreementResponse {
        /**
         * The AS2 protocol settings.
         */
        protocolSettings: pulumi.Input<inputs.logic.AS2ProtocolSettingsResponse>;
        /**
         * The receiver business identity
         */
        receiverBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentityResponse>;
        /**
         * The sender business identity
         */
        senderBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentityResponse>;
    }

    /**
     * The AS2 agreement protocol settings.
     */
    export interface AS2ProtocolSettings {
        /**
         * The acknowledgement connection settings.
         */
        acknowledgementConnectionSettings: pulumi.Input<inputs.logic.AS2AcknowledgementConnectionSettings>;
        /**
         * The envelope settings.
         */
        envelopeSettings: pulumi.Input<inputs.logic.AS2EnvelopeSettings>;
        /**
         * The error settings.
         */
        errorSettings: pulumi.Input<inputs.logic.AS2ErrorSettings>;
        /**
         * The MDN settings.
         */
        mdnSettings: pulumi.Input<inputs.logic.AS2MdnSettings>;
        /**
         * The message connection settings.
         */
        messageConnectionSettings: pulumi.Input<inputs.logic.AS2MessageConnectionSettings>;
        /**
         * The security settings.
         */
        securitySettings: pulumi.Input<inputs.logic.AS2SecuritySettings>;
        /**
         * The validation settings.
         */
        validationSettings: pulumi.Input<inputs.logic.AS2ValidationSettings>;
    }

    /**
     * The AS2 agreement protocol settings.
     */
    export interface AS2ProtocolSettingsResponse {
        /**
         * The acknowledgement connection settings.
         */
        acknowledgementConnectionSettings: pulumi.Input<inputs.logic.AS2AcknowledgementConnectionSettingsResponse>;
        /**
         * The envelope settings.
         */
        envelopeSettings: pulumi.Input<inputs.logic.AS2EnvelopeSettingsResponse>;
        /**
         * The error settings.
         */
        errorSettings: pulumi.Input<inputs.logic.AS2ErrorSettingsResponse>;
        /**
         * The MDN settings.
         */
        mdnSettings: pulumi.Input<inputs.logic.AS2MdnSettingsResponse>;
        /**
         * The message connection settings.
         */
        messageConnectionSettings: pulumi.Input<inputs.logic.AS2MessageConnectionSettingsResponse>;
        /**
         * The security settings.
         */
        securitySettings: pulumi.Input<inputs.logic.AS2SecuritySettingsResponse>;
        /**
         * The validation settings.
         */
        validationSettings: pulumi.Input<inputs.logic.AS2ValidationSettingsResponse>;
    }

    /**
     * The AS2 agreement security settings.
     */
    export interface AS2SecuritySettings {
        /**
         * The value indicating whether to enable NRR for inbound decoded messages.
         */
        enableNRRForInboundDecodedMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for inbound encoded messages.
         */
        enableNRRForInboundEncodedMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for inbound MDN.
         */
        enableNRRForInboundMDN: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for outbound decoded messages.
         */
        enableNRRForOutboundDecodedMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for outbound encoded messages.
         */
        enableNRRForOutboundEncodedMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for outbound MDN.
         */
        enableNRRForOutboundMDN: pulumi.Input<boolean>;
        /**
         * The name of the encryption certificate.
         */
        encryptionCertificateName?: pulumi.Input<string>;
        /**
         * The value indicating whether to send or request a MDN.
         */
        overrideGroupSigningCertificate: pulumi.Input<boolean>;
        /**
         * The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
         */
        sha2AlgorithmFormat?: pulumi.Input<string>;
        /**
         * The name of the signing certificate.
         */
        signingCertificateName?: pulumi.Input<string>;
    }

    /**
     * The AS2 agreement security settings.
     */
    export interface AS2SecuritySettingsResponse {
        /**
         * The value indicating whether to enable NRR for inbound decoded messages.
         */
        enableNRRForInboundDecodedMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for inbound encoded messages.
         */
        enableNRRForInboundEncodedMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for inbound MDN.
         */
        enableNRRForInboundMDN: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for outbound decoded messages.
         */
        enableNRRForOutboundDecodedMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for outbound encoded messages.
         */
        enableNRRForOutboundEncodedMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable NRR for outbound MDN.
         */
        enableNRRForOutboundMDN: pulumi.Input<boolean>;
        /**
         * The name of the encryption certificate.
         */
        encryptionCertificateName?: pulumi.Input<string>;
        /**
         * The value indicating whether to send or request a MDN.
         */
        overrideGroupSigningCertificate: pulumi.Input<boolean>;
        /**
         * The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
         */
        sha2AlgorithmFormat?: pulumi.Input<string>;
        /**
         * The name of the signing certificate.
         */
        signingCertificateName?: pulumi.Input<string>;
    }

    /**
     * The AS2 agreement validation settings.
     */
    export interface AS2ValidationSettings {
        /**
         * The value indicating whether to check for certificate revocation list on receive.
         */
        checkCertificateRevocationListOnReceive: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for certificate revocation list on send.
         */
        checkCertificateRevocationListOnSend: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate message.
         */
        checkDuplicateMessage: pulumi.Input<boolean>;
        /**
         * The value indicating whether the message has to be compressed.
         */
        compressMessage: pulumi.Input<boolean>;
        /**
         * The value indicating whether the message has to be encrypted.
         */
        encryptMessage: pulumi.Input<boolean>;
        /**
         * The encryption algorithm.
         */
        encryptionAlgorithm: pulumi.Input<string>;
        /**
         * The number of days to look back for duplicate interchange.
         */
        interchangeDuplicatesValidityDays: pulumi.Input<number>;
        /**
         * The value indicating whether to override incoming message properties with those in agreement.
         */
        overrideMessageProperties: pulumi.Input<boolean>;
        /**
         * The value indicating whether the message has to be signed.
         */
        signMessage: pulumi.Input<boolean>;
        /**
         * The signing algorithm.
         */
        signingAlgorithm?: pulumi.Input<string>;
    }

    /**
     * The AS2 agreement validation settings.
     */
    export interface AS2ValidationSettingsResponse {
        /**
         * The value indicating whether to check for certificate revocation list on receive.
         */
        checkCertificateRevocationListOnReceive: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for certificate revocation list on send.
         */
        checkCertificateRevocationListOnSend: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate message.
         */
        checkDuplicateMessage: pulumi.Input<boolean>;
        /**
         * The value indicating whether the message has to be compressed.
         */
        compressMessage: pulumi.Input<boolean>;
        /**
         * The value indicating whether the message has to be encrypted.
         */
        encryptMessage: pulumi.Input<boolean>;
        /**
         * The encryption algorithm.
         */
        encryptionAlgorithm: pulumi.Input<string>;
        /**
         * The number of days to look back for duplicate interchange.
         */
        interchangeDuplicatesValidityDays: pulumi.Input<number>;
        /**
         * The value indicating whether to override incoming message properties with those in agreement.
         */
        overrideMessageProperties: pulumi.Input<boolean>;
        /**
         * The value indicating whether the message has to be signed.
         */
        signMessage: pulumi.Input<boolean>;
        /**
         * The signing algorithm.
         */
        signingAlgorithm?: pulumi.Input<string>;
    }

    /**
     * The integration account agreement content.
     */
    export interface AgreementContent {
        /**
         * The AS2 agreement content.
         */
        aS2?: pulumi.Input<inputs.logic.AS2AgreementContent>;
        /**
         * The EDIFACT agreement content.
         */
        edifact?: pulumi.Input<inputs.logic.EdifactAgreementContent>;
        /**
         * The X12 agreement content.
         */
        x12?: pulumi.Input<inputs.logic.X12AgreementContent>;
    }

    /**
     * The integration account agreement content.
     */
    export interface AgreementContentResponse {
        /**
         * The AS2 agreement content.
         */
        aS2?: pulumi.Input<inputs.logic.AS2AgreementContentResponse>;
        /**
         * The EDIFACT agreement content.
         */
        edifact?: pulumi.Input<inputs.logic.EdifactAgreementContentResponse>;
        /**
         * The X12 agreement content.
         */
        x12?: pulumi.Input<inputs.logic.X12AgreementContentResponse>;
    }

    /**
     * The API deployment parameter metadata.
     */
    export interface ApiDeploymentParameterMetadataResponse {
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        /**
         * The display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * Indicates whether its required.
         */
        isRequired?: pulumi.Input<boolean>;
        /**
         * The type.
         */
        type?: pulumi.Input<string>;
        /**
         * The visibility.
         */
        visibility?: pulumi.Input<string>;
    }

    /**
     * The API deployment parameters metadata.
     */
    export interface ApiDeploymentParameterMetadataSetResponse {
        /**
         * The package content link parameter.
         */
        packageContentLink?: pulumi.Input<inputs.logic.ApiDeploymentParameterMetadataResponse>;
        /**
         * The package content link parameter.
         */
        redisCacheConnectionString?: pulumi.Input<inputs.logic.ApiDeploymentParameterMetadataResponse>;
    }

    /**
     * The API backend service.
     */
    export interface ApiResourceBackendServiceResponse {
        /**
         * The service URL.
         */
        serviceUrl?: pulumi.Input<string>;
    }

    /**
     * The Api resource definition.
     */
    export interface ApiResourceDefinitionsResponse {
        /**
         * The modified swagger url.
         */
        modifiedSwaggerUrl?: pulumi.Input<string>;
        /**
         * The original swagger url.
         */
        originalSwaggerUrl?: pulumi.Input<string>;
    }

    /**
     * The API general information.
     */
    export interface ApiResourceGeneralInformationResponse {
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        /**
         * The display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The icon url.
         */
        iconUrl?: pulumi.Input<string>;
        /**
         * The release tag.
         */
        releaseTag?: pulumi.Input<string>;
        /**
         * The terms of use url.
         */
        termsOfUseUrl?: pulumi.Input<string>;
        /**
         * The tier.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The api resource metadata.
     */
    export interface ApiResourceMetadataResponse {
        /**
         * The api type.
         */
        ApiType?: pulumi.Input<string>;
        /**
         * The brand color.
         */
        brandColor?: pulumi.Input<string>;
        /**
         * The connection type.
         */
        connectionType?: pulumi.Input<string>;
        /**
         * The connector deployment parameters metadata.
         */
        deploymentParameters?: pulumi.Input<inputs.logic.ApiDeploymentParameterMetadataSetResponse>;
        /**
         * The hide key.
         */
        hideKey?: pulumi.Input<string>;
        /**
         * The provisioning state.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The source.
         */
        source?: pulumi.Input<string>;
        /**
         * The tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The WSDL import method.
         */
        wsdlImportMethod?: pulumi.Input<string>;
        /**
         * The WSDL service.
         */
        wsdlService?: pulumi.Input<inputs.logic.WsdlServiceResponse>;
    }

    /**
     * The API resource policies.
     */
    export interface ApiResourcePoliciesResponse {
        /**
         * The API level only policies XML as embedded content.
         */
        content?: pulumi.Input<string>;
        /**
         * The content link to the policies.
         */
        contentLink?: pulumi.Input<string>;
    }

    /**
     * The API resource properties.
     */
    export interface ApiResourcePropertiesResponse {
        /**
         * The API definition.
         */
        apiDefinitionUrl?: pulumi.Input<string>;
        /**
         * The api definitions.
         */
        apiDefinitions?: pulumi.Input<inputs.logic.ApiResourceDefinitionsResponse>;
        /**
         * The backend service.
         */
        backendService?: pulumi.Input<inputs.logic.ApiResourceBackendServiceResponse>;
        /**
         * The capabilities.
         */
        capabilities?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The category.
         */
        category?: pulumi.Input<string>;
        /**
         * The connection parameters.
         */
        connectionParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The api general information.
         */
        generalInformation?: pulumi.Input<inputs.logic.ApiResourceGeneralInformationResponse>;
        /**
         * The integration service environment reference.
         */
        integrationServiceEnvironment?: pulumi.Input<inputs.logic.ResourceReferenceResponse>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<inputs.logic.ApiResourceMetadataResponse>;
        /**
         * The name
         */
        name?: pulumi.Input<string>;
        /**
         * The policies for the API.
         */
        policies?: pulumi.Input<inputs.logic.ApiResourcePoliciesResponse>;
        /**
         * The provisioning state.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The runtime urls.
         */
        runtimeUrls?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The assembly properties definition.
     */
    export interface AssemblyProperties {
        /**
         * The assembly culture.
         */
        assemblyCulture?: pulumi.Input<string>;
        /**
         * The assembly name.
         */
        assemblyName: pulumi.Input<string>;
        /**
         * The assembly public key token.
         */
        assemblyPublicKeyToken?: pulumi.Input<string>;
        /**
         * The assembly version.
         */
        assemblyVersion?: pulumi.Input<string>;
        /**
         * The artifact changed time.
         */
        changedTime?: pulumi.Input<string>;
        content?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The content link.
         */
        contentLink?: pulumi.Input<inputs.logic.ContentLink>;
        /**
         * The content type.
         */
        contentType?: pulumi.Input<string>;
        /**
         * The artifact creation time.
         */
        createdTime?: pulumi.Input<string>;
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The assembly properties definition.
     */
    export interface AssemblyPropertiesResponse {
        /**
         * The assembly culture.
         */
        assemblyCulture?: pulumi.Input<string>;
        /**
         * The assembly name.
         */
        assemblyName: pulumi.Input<string>;
        /**
         * The assembly public key token.
         */
        assemblyPublicKeyToken?: pulumi.Input<string>;
        /**
         * The assembly version.
         */
        assemblyVersion?: pulumi.Input<string>;
        /**
         * The artifact changed time.
         */
        changedTime?: pulumi.Input<string>;
        content?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The content link.
         */
        contentLink?: pulumi.Input<inputs.logic.ContentLinkResponse>;
        /**
         * The content type.
         */
        contentType?: pulumi.Input<string>;
        /**
         * The artifact creation time.
         */
        createdTime?: pulumi.Input<string>;
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The B2B partner content.
     */
    export interface B2BPartnerContent {
        /**
         * The list of partner business identities.
         */
        businessIdentities?: pulumi.Input<pulumi.Input<inputs.logic.BusinessIdentity>[]>;
    }

    /**
     * The B2B partner content.
     */
    export interface B2BPartnerContentResponse {
        /**
         * The list of partner business identities.
         */
        businessIdentities?: pulumi.Input<pulumi.Input<inputs.logic.BusinessIdentityResponse>[]>;
    }

    /**
     * The batch configuration properties definition.
     */
    export interface BatchConfigurationProperties {
        /**
         * The name of the batch group.
         */
        batchGroupName: pulumi.Input<string>;
        /**
         * The artifact changed time.
         */
        changedTime?: pulumi.Input<string>;
        /**
         * The artifact creation time.
         */
        createdTime?: pulumi.Input<string>;
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The batch release criteria.
         */
        releaseCriteria: pulumi.Input<inputs.logic.BatchReleaseCriteria>;
    }

    /**
     * The batch configuration properties definition.
     */
    export interface BatchConfigurationPropertiesResponse {
        /**
         * The name of the batch group.
         */
        batchGroupName: pulumi.Input<string>;
        /**
         * The artifact changed time.
         */
        changedTime?: pulumi.Input<string>;
        /**
         * The artifact creation time.
         */
        createdTime?: pulumi.Input<string>;
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The batch release criteria.
         */
        releaseCriteria: pulumi.Input<inputs.logic.BatchReleaseCriteriaResponse>;
    }

    /**
     * The batch release criteria.
     */
    export interface BatchReleaseCriteria {
        /**
         * The batch size in bytes.
         */
        batchSize?: pulumi.Input<number>;
        /**
         * The message count.
         */
        messageCount?: pulumi.Input<number>;
        /**
         * The recurrence.
         */
        recurrence?: pulumi.Input<inputs.logic.WorkflowTriggerRecurrence>;
    }

    /**
     * The batch release criteria.
     */
    export interface BatchReleaseCriteriaResponse {
        /**
         * The batch size in bytes.
         */
        batchSize?: pulumi.Input<number>;
        /**
         * The message count.
         */
        messageCount?: pulumi.Input<number>;
        /**
         * The recurrence.
         */
        recurrence?: pulumi.Input<inputs.logic.WorkflowTriggerRecurrenceResponse>;
    }

    /**
     * The integration account partner's business identity.
     */
    export interface BusinessIdentity {
        /**
         * The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
         */
        qualifier: pulumi.Input<string>;
        /**
         * The user defined business identity value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The integration account partner's business identity.
     */
    export interface BusinessIdentityResponse {
        /**
         * The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
         */
        qualifier: pulumi.Input<string>;
        /**
         * The user defined business identity value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The content hash.
     */
    export interface ContentHash {
        /**
         * The algorithm of the content hash.
         */
        algorithm?: pulumi.Input<string>;
        /**
         * The value of the content hash.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * The content hash.
     */
    export interface ContentHashResponse {
        /**
         * The algorithm of the content hash.
         */
        algorithm?: pulumi.Input<string>;
        /**
         * The value of the content hash.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * The content link.
     */
    export interface ContentLink {
        /**
         * The content hash.
         */
        contentHash?: pulumi.Input<inputs.logic.ContentHash>;
        /**
         * The content size.
         */
        contentSize?: pulumi.Input<number>;
        /**
         * The content version.
         */
        contentVersion?: pulumi.Input<string>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<inputs.logic.Object>;
        /**
         * The content link URI.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * The content link.
     */
    export interface ContentLinkResponse {
        /**
         * The content hash.
         */
        contentHash?: pulumi.Input<inputs.logic.ContentHashResponse>;
        /**
         * The content size.
         */
        contentSize?: pulumi.Input<number>;
        /**
         * The content version.
         */
        contentVersion?: pulumi.Input<string>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<inputs.logic.ObjectResponse>;
        /**
         * The content link URI.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * The Edifact agreement acknowledgement settings.
     */
    export interface EdifactAcknowledgementSettings {
        /**
         * The acknowledgement control number lower bound.
         */
        acknowledgementControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The acknowledgement control number prefix.
         */
        acknowledgementControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The acknowledgement control number suffix.
         */
        acknowledgementControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The acknowledgement control number upper bound.
         */
        acknowledgementControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The value indicating whether to batch functional acknowledgements.
         */
        batchFunctionalAcknowledgements: pulumi.Input<boolean>;
        /**
         * The value indicating whether to batch the technical acknowledgements.
         */
        batchTechnicalAcknowledgements: pulumi.Input<boolean>;
        /**
         * The value indicating whether functional acknowledgement is needed.
         */
        needFunctionalAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether a loop is needed for valid messages.
         */
        needLoopForValidMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether technical acknowledgement is needed.
         */
        needTechnicalAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover acknowledgement control number.
         */
        rolloverAcknowledgementControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to send synchronous acknowledgement.
         */
        sendSynchronousAcknowledgement: pulumi.Input<boolean>;
    }

    /**
     * The Edifact agreement acknowledgement settings.
     */
    export interface EdifactAcknowledgementSettingsResponse {
        /**
         * The acknowledgement control number lower bound.
         */
        acknowledgementControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The acknowledgement control number prefix.
         */
        acknowledgementControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The acknowledgement control number suffix.
         */
        acknowledgementControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The acknowledgement control number upper bound.
         */
        acknowledgementControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The value indicating whether to batch functional acknowledgements.
         */
        batchFunctionalAcknowledgements: pulumi.Input<boolean>;
        /**
         * The value indicating whether to batch the technical acknowledgements.
         */
        batchTechnicalAcknowledgements: pulumi.Input<boolean>;
        /**
         * The value indicating whether functional acknowledgement is needed.
         */
        needFunctionalAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether a loop is needed for valid messages.
         */
        needLoopForValidMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether technical acknowledgement is needed.
         */
        needTechnicalAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover acknowledgement control number.
         */
        rolloverAcknowledgementControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to send synchronous acknowledgement.
         */
        sendSynchronousAcknowledgement: pulumi.Input<boolean>;
    }

    /**
     * The Edifact agreement content.
     */
    export interface EdifactAgreementContent {
        /**
         * The EDIFACT one-way receive agreement.
         */
        receiveAgreement: pulumi.Input<inputs.logic.EdifactOneWayAgreement>;
        /**
         * The EDIFACT one-way send agreement.
         */
        sendAgreement: pulumi.Input<inputs.logic.EdifactOneWayAgreement>;
    }

    /**
     * The Edifact agreement content.
     */
    export interface EdifactAgreementContentResponse {
        /**
         * The EDIFACT one-way receive agreement.
         */
        receiveAgreement: pulumi.Input<inputs.logic.EdifactOneWayAgreementResponse>;
        /**
         * The EDIFACT one-way send agreement.
         */
        sendAgreement: pulumi.Input<inputs.logic.EdifactOneWayAgreementResponse>;
    }

    /**
     * The Edifact delimiter override settings.
     */
    export interface EdifactDelimiterOverride {
        /**
         * The component separator.
         */
        componentSeparator: pulumi.Input<number>;
        /**
         * The data element separator.
         */
        dataElementSeparator: pulumi.Input<number>;
        /**
         * The decimal point indicator.
         */
        decimalPointIndicator: pulumi.Input<string>;
        /**
         * The message association assigned code.
         */
        messageAssociationAssignedCode?: pulumi.Input<string>;
        /**
         * The message id.
         */
        messageId?: pulumi.Input<string>;
        /**
         * The message release.
         */
        messageRelease?: pulumi.Input<string>;
        /**
         * The message version.
         */
        messageVersion?: pulumi.Input<string>;
        /**
         * The release indicator.
         */
        releaseIndicator: pulumi.Input<number>;
        /**
         * The repetition separator.
         */
        repetitionSeparator: pulumi.Input<number>;
        /**
         * The segment terminator.
         */
        segmentTerminator: pulumi.Input<number>;
        /**
         * The segment terminator suffix.
         */
        segmentTerminatorSuffix: pulumi.Input<string>;
        /**
         * The target namespace on which this delimiter settings has to be applied.
         */
        targetNamespace?: pulumi.Input<string>;
    }

    /**
     * The Edifact delimiter override settings.
     */
    export interface EdifactDelimiterOverrideResponse {
        /**
         * The component separator.
         */
        componentSeparator: pulumi.Input<number>;
        /**
         * The data element separator.
         */
        dataElementSeparator: pulumi.Input<number>;
        /**
         * The decimal point indicator.
         */
        decimalPointIndicator: pulumi.Input<string>;
        /**
         * The message association assigned code.
         */
        messageAssociationAssignedCode?: pulumi.Input<string>;
        /**
         * The message id.
         */
        messageId?: pulumi.Input<string>;
        /**
         * The message release.
         */
        messageRelease?: pulumi.Input<string>;
        /**
         * The message version.
         */
        messageVersion?: pulumi.Input<string>;
        /**
         * The release indicator.
         */
        releaseIndicator: pulumi.Input<number>;
        /**
         * The repetition separator.
         */
        repetitionSeparator: pulumi.Input<number>;
        /**
         * The segment terminator.
         */
        segmentTerminator: pulumi.Input<number>;
        /**
         * The segment terminator suffix.
         */
        segmentTerminatorSuffix: pulumi.Input<string>;
        /**
         * The target namespace on which this delimiter settings has to be applied.
         */
        targetNamespace?: pulumi.Input<string>;
    }

    /**
     * The Edifact envelope override settings.
     */
    export interface EdifactEnvelopeOverride {
        /**
         * The application password.
         */
        applicationPassword?: pulumi.Input<string>;
        /**
         * The association assigned code.
         */
        associationAssignedCode?: pulumi.Input<string>;
        /**
         * The controlling agency code.
         */
        controllingAgencyCode?: pulumi.Input<string>;
        /**
         * The functional group id.
         */
        functionalGroupId?: pulumi.Input<string>;
        /**
         * The group header message release.
         */
        groupHeaderMessageRelease?: pulumi.Input<string>;
        /**
         * The group header message version.
         */
        groupHeaderMessageVersion?: pulumi.Input<string>;
        /**
         * The message association assigned code.
         */
        messageAssociationAssignedCode?: pulumi.Input<string>;
        /**
         * The message id on which this envelope settings has to be applied.
         */
        messageId?: pulumi.Input<string>;
        /**
         * The message release version on which this envelope settings has to be applied.
         */
        messageRelease?: pulumi.Input<string>;
        /**
         * The message version on which this envelope settings has to be applied.
         */
        messageVersion?: pulumi.Input<string>;
        /**
         * The receiver application id.
         */
        receiverApplicationId?: pulumi.Input<string>;
        /**
         * The receiver application qualifier.
         */
        receiverApplicationQualifier?: pulumi.Input<string>;
        /**
         * The sender application id.
         */
        senderApplicationId?: pulumi.Input<string>;
        /**
         * The sender application qualifier.
         */
        senderApplicationQualifier?: pulumi.Input<string>;
        /**
         * The target namespace on which this envelope settings has to be applied.
         */
        targetNamespace?: pulumi.Input<string>;
    }

    /**
     * The Edifact envelope override settings.
     */
    export interface EdifactEnvelopeOverrideResponse {
        /**
         * The application password.
         */
        applicationPassword?: pulumi.Input<string>;
        /**
         * The association assigned code.
         */
        associationAssignedCode?: pulumi.Input<string>;
        /**
         * The controlling agency code.
         */
        controllingAgencyCode?: pulumi.Input<string>;
        /**
         * The functional group id.
         */
        functionalGroupId?: pulumi.Input<string>;
        /**
         * The group header message release.
         */
        groupHeaderMessageRelease?: pulumi.Input<string>;
        /**
         * The group header message version.
         */
        groupHeaderMessageVersion?: pulumi.Input<string>;
        /**
         * The message association assigned code.
         */
        messageAssociationAssignedCode?: pulumi.Input<string>;
        /**
         * The message id on which this envelope settings has to be applied.
         */
        messageId?: pulumi.Input<string>;
        /**
         * The message release version on which this envelope settings has to be applied.
         */
        messageRelease?: pulumi.Input<string>;
        /**
         * The message version on which this envelope settings has to be applied.
         */
        messageVersion?: pulumi.Input<string>;
        /**
         * The receiver application id.
         */
        receiverApplicationId?: pulumi.Input<string>;
        /**
         * The receiver application qualifier.
         */
        receiverApplicationQualifier?: pulumi.Input<string>;
        /**
         * The sender application id.
         */
        senderApplicationId?: pulumi.Input<string>;
        /**
         * The sender application qualifier.
         */
        senderApplicationQualifier?: pulumi.Input<string>;
        /**
         * The target namespace on which this envelope settings has to be applied.
         */
        targetNamespace?: pulumi.Input<string>;
    }

    /**
     * The Edifact agreement envelope settings.
     */
    export interface EdifactEnvelopeSettings {
        /**
         * The application reference id.
         */
        applicationReferenceId?: pulumi.Input<string>;
        /**
         * The value indicating whether to apply delimiter string advice.
         */
        applyDelimiterStringAdvice: pulumi.Input<boolean>;
        /**
         * The communication agreement id.
         */
        communicationAgreementId?: pulumi.Input<string>;
        /**
         * The value indicating whether to create grouping segments.
         */
        createGroupingSegments: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable default group headers.
         */
        enableDefaultGroupHeaders: pulumi.Input<boolean>;
        /**
         * The functional group id.
         */
        functionalGroupId?: pulumi.Input<string>;
        /**
         * The group application password.
         */
        groupApplicationPassword?: pulumi.Input<string>;
        /**
         * The group application receiver id.
         */
        groupApplicationReceiverId?: pulumi.Input<string>;
        /**
         * The group application receiver qualifier.
         */
        groupApplicationReceiverQualifier?: pulumi.Input<string>;
        /**
         * The group application sender id.
         */
        groupApplicationSenderId?: pulumi.Input<string>;
        /**
         * The group application sender qualifier.
         */
        groupApplicationSenderQualifier?: pulumi.Input<string>;
        /**
         * The group association assigned code.
         */
        groupAssociationAssignedCode?: pulumi.Input<string>;
        /**
         * The group control number lower bound.
         */
        groupControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The group control number prefix.
         */
        groupControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The group control number suffix.
         */
        groupControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The group control number upper bound.
         */
        groupControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The group controlling agency code.
         */
        groupControllingAgencyCode?: pulumi.Input<string>;
        /**
         * The group message release.
         */
        groupMessageRelease?: pulumi.Input<string>;
        /**
         * The group message version.
         */
        groupMessageVersion?: pulumi.Input<string>;
        /**
         * The interchange control number lower bound.
         */
        interchangeControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The interchange control number prefix.
         */
        interchangeControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The interchange control number suffix.
         */
        interchangeControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The interchange control number upper bound.
         */
        interchangeControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The value indicating whether the message is a test interchange.
         */
        isTestInterchange: pulumi.Input<boolean>;
        /**
         * The value indicating whether to overwrite existing transaction set control number.
         */
        overwriteExistingTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The processing priority code.
         */
        processingPriorityCode?: pulumi.Input<string>;
        /**
         * The receiver internal identification.
         */
        receiverInternalIdentification?: pulumi.Input<string>;
        /**
         * The receiver internal sub identification.
         */
        receiverInternalSubIdentification?: pulumi.Input<string>;
        /**
         * The receiver reverse routing address.
         */
        receiverReverseRoutingAddress?: pulumi.Input<string>;
        /**
         * The recipient reference password qualifier.
         */
        recipientReferencePasswordQualifier?: pulumi.Input<string>;
        /**
         * The recipient reference password value.
         */
        recipientReferencePasswordValue?: pulumi.Input<string>;
        /**
         * The value indicating whether to rollover group control number.
         */
        rolloverGroupControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover interchange control number.
         */
        rolloverInterchangeControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover transaction set control number.
         */
        rolloverTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The sender internal identification.
         */
        senderInternalIdentification?: pulumi.Input<string>;
        /**
         * The sender internal sub identification.
         */
        senderInternalSubIdentification?: pulumi.Input<string>;
        /**
         * The sender reverse routing address.
         */
        senderReverseRoutingAddress?: pulumi.Input<string>;
        /**
         * The transaction set control number lower bound.
         */
        transactionSetControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The transaction set control number prefix.
         */
        transactionSetControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The transaction set control number suffix.
         */
        transactionSetControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The transaction set control number upper bound.
         */
        transactionSetControlNumberUpperBound: pulumi.Input<number>;
    }

    /**
     * The Edifact agreement envelope settings.
     */
    export interface EdifactEnvelopeSettingsResponse {
        /**
         * The application reference id.
         */
        applicationReferenceId?: pulumi.Input<string>;
        /**
         * The value indicating whether to apply delimiter string advice.
         */
        applyDelimiterStringAdvice: pulumi.Input<boolean>;
        /**
         * The communication agreement id.
         */
        communicationAgreementId?: pulumi.Input<string>;
        /**
         * The value indicating whether to create grouping segments.
         */
        createGroupingSegments: pulumi.Input<boolean>;
        /**
         * The value indicating whether to enable default group headers.
         */
        enableDefaultGroupHeaders: pulumi.Input<boolean>;
        /**
         * The functional group id.
         */
        functionalGroupId?: pulumi.Input<string>;
        /**
         * The group application password.
         */
        groupApplicationPassword?: pulumi.Input<string>;
        /**
         * The group application receiver id.
         */
        groupApplicationReceiverId?: pulumi.Input<string>;
        /**
         * The group application receiver qualifier.
         */
        groupApplicationReceiverQualifier?: pulumi.Input<string>;
        /**
         * The group application sender id.
         */
        groupApplicationSenderId?: pulumi.Input<string>;
        /**
         * The group application sender qualifier.
         */
        groupApplicationSenderQualifier?: pulumi.Input<string>;
        /**
         * The group association assigned code.
         */
        groupAssociationAssignedCode?: pulumi.Input<string>;
        /**
         * The group control number lower bound.
         */
        groupControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The group control number prefix.
         */
        groupControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The group control number suffix.
         */
        groupControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The group control number upper bound.
         */
        groupControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The group controlling agency code.
         */
        groupControllingAgencyCode?: pulumi.Input<string>;
        /**
         * The group message release.
         */
        groupMessageRelease?: pulumi.Input<string>;
        /**
         * The group message version.
         */
        groupMessageVersion?: pulumi.Input<string>;
        /**
         * The interchange control number lower bound.
         */
        interchangeControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The interchange control number prefix.
         */
        interchangeControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The interchange control number suffix.
         */
        interchangeControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The interchange control number upper bound.
         */
        interchangeControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The value indicating whether the message is a test interchange.
         */
        isTestInterchange: pulumi.Input<boolean>;
        /**
         * The value indicating whether to overwrite existing transaction set control number.
         */
        overwriteExistingTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The processing priority code.
         */
        processingPriorityCode?: pulumi.Input<string>;
        /**
         * The receiver internal identification.
         */
        receiverInternalIdentification?: pulumi.Input<string>;
        /**
         * The receiver internal sub identification.
         */
        receiverInternalSubIdentification?: pulumi.Input<string>;
        /**
         * The receiver reverse routing address.
         */
        receiverReverseRoutingAddress?: pulumi.Input<string>;
        /**
         * The recipient reference password qualifier.
         */
        recipientReferencePasswordQualifier?: pulumi.Input<string>;
        /**
         * The recipient reference password value.
         */
        recipientReferencePasswordValue?: pulumi.Input<string>;
        /**
         * The value indicating whether to rollover group control number.
         */
        rolloverGroupControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover interchange control number.
         */
        rolloverInterchangeControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover transaction set control number.
         */
        rolloverTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The sender internal identification.
         */
        senderInternalIdentification?: pulumi.Input<string>;
        /**
         * The sender internal sub identification.
         */
        senderInternalSubIdentification?: pulumi.Input<string>;
        /**
         * The sender reverse routing address.
         */
        senderReverseRoutingAddress?: pulumi.Input<string>;
        /**
         * The transaction set control number lower bound.
         */
        transactionSetControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The transaction set control number prefix.
         */
        transactionSetControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The transaction set control number suffix.
         */
        transactionSetControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The transaction set control number upper bound.
         */
        transactionSetControlNumberUpperBound: pulumi.Input<number>;
    }

    /**
     * The Edifact agreement framing settings.
     */
    export interface EdifactFramingSettings {
        /**
         * The character encoding.
         */
        characterEncoding?: pulumi.Input<string>;
        /**
         * The EDIFACT frame setting characterSet.
         */
        characterSet: pulumi.Input<string>;
        /**
         * The component separator.
         */
        componentSeparator: pulumi.Input<number>;
        /**
         * The data element separator.
         */
        dataElementSeparator: pulumi.Input<number>;
        /**
         * The EDIFACT frame setting decimal indicator.
         */
        decimalPointIndicator: pulumi.Input<string>;
        /**
         * The protocol version.
         */
        protocolVersion: pulumi.Input<number>;
        /**
         * The release indicator.
         */
        releaseIndicator: pulumi.Input<number>;
        /**
         * The repetition separator.
         */
        repetitionSeparator: pulumi.Input<number>;
        /**
         * The segment terminator.
         */
        segmentTerminator: pulumi.Input<number>;
        /**
         * The EDIFACT frame setting segment terminator suffix.
         */
        segmentTerminatorSuffix: pulumi.Input<string>;
        /**
         * The service code list directory version.
         */
        serviceCodeListDirectoryVersion?: pulumi.Input<string>;
    }

    /**
     * The Edifact agreement framing settings.
     */
    export interface EdifactFramingSettingsResponse {
        /**
         * The character encoding.
         */
        characterEncoding?: pulumi.Input<string>;
        /**
         * The EDIFACT frame setting characterSet.
         */
        characterSet: pulumi.Input<string>;
        /**
         * The component separator.
         */
        componentSeparator: pulumi.Input<number>;
        /**
         * The data element separator.
         */
        dataElementSeparator: pulumi.Input<number>;
        /**
         * The EDIFACT frame setting decimal indicator.
         */
        decimalPointIndicator: pulumi.Input<string>;
        /**
         * The protocol version.
         */
        protocolVersion: pulumi.Input<number>;
        /**
         * The release indicator.
         */
        releaseIndicator: pulumi.Input<number>;
        /**
         * The repetition separator.
         */
        repetitionSeparator: pulumi.Input<number>;
        /**
         * The segment terminator.
         */
        segmentTerminator: pulumi.Input<number>;
        /**
         * The EDIFACT frame setting segment terminator suffix.
         */
        segmentTerminatorSuffix: pulumi.Input<string>;
        /**
         * The service code list directory version.
         */
        serviceCodeListDirectoryVersion?: pulumi.Input<string>;
    }

    /**
     * The Edifact message filter for odata query.
     */
    export interface EdifactMessageFilter {
        /**
         * The message filter type.
         */
        messageFilterType: pulumi.Input<string>;
    }

    /**
     * The Edifact message filter for odata query.
     */
    export interface EdifactMessageFilterResponse {
        /**
         * The message filter type.
         */
        messageFilterType: pulumi.Input<string>;
    }

    /**
     * The Edifact message identifier.
     */
    export interface EdifactMessageIdentifier {
        /**
         * The message id on which this envelope settings has to be applied.
         */
        messageId: pulumi.Input<string>;
    }

    /**
     * The Edifact message identifier.
     */
    export interface EdifactMessageIdentifierResponse {
        /**
         * The message id on which this envelope settings has to be applied.
         */
        messageId: pulumi.Input<string>;
    }

    /**
     * The Edifact one way agreement.
     */
    export interface EdifactOneWayAgreement {
        /**
         * The EDIFACT protocol settings.
         */
        protocolSettings: pulumi.Input<inputs.logic.EdifactProtocolSettings>;
        /**
         * The receiver business identity
         */
        receiverBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentity>;
        /**
         * The sender business identity
         */
        senderBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentity>;
    }

    /**
     * The Edifact one way agreement.
     */
    export interface EdifactOneWayAgreementResponse {
        /**
         * The EDIFACT protocol settings.
         */
        protocolSettings: pulumi.Input<inputs.logic.EdifactProtocolSettingsResponse>;
        /**
         * The receiver business identity
         */
        receiverBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentityResponse>;
        /**
         * The sender business identity
         */
        senderBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentityResponse>;
    }

    /**
     * The Edifact agreement protocol settings.
     */
    export interface EdifactProcessingSettings {
        /**
         * The value indicating whether to create empty xml tags for trailing separators.
         */
        createEmptyXmlTagsForTrailingSeparators: pulumi.Input<boolean>;
        /**
         * The value indicating whether to mask security information.
         */
        maskSecurityInfo: pulumi.Input<boolean>;
        /**
         * The value indicating whether to preserve interchange.
         */
        preserveInterchange: pulumi.Input<boolean>;
        /**
         * The value indicating whether to suspend interchange on error.
         */
        suspendInterchangeOnError: pulumi.Input<boolean>;
        /**
         * The value indicating whether to use dot as decimal separator.
         */
        useDotAsDecimalSeparator: pulumi.Input<boolean>;
    }

    /**
     * The Edifact agreement protocol settings.
     */
    export interface EdifactProcessingSettingsResponse {
        /**
         * The value indicating whether to create empty xml tags for trailing separators.
         */
        createEmptyXmlTagsForTrailingSeparators: pulumi.Input<boolean>;
        /**
         * The value indicating whether to mask security information.
         */
        maskSecurityInfo: pulumi.Input<boolean>;
        /**
         * The value indicating whether to preserve interchange.
         */
        preserveInterchange: pulumi.Input<boolean>;
        /**
         * The value indicating whether to suspend interchange on error.
         */
        suspendInterchangeOnError: pulumi.Input<boolean>;
        /**
         * The value indicating whether to use dot as decimal separator.
         */
        useDotAsDecimalSeparator: pulumi.Input<boolean>;
    }

    /**
     * The Edifact agreement protocol settings.
     */
    export interface EdifactProtocolSettings {
        /**
         * The EDIFACT acknowledgement settings.
         */
        acknowledgementSettings: pulumi.Input<inputs.logic.EdifactAcknowledgementSettings>;
        /**
         * The EDIFACT delimiter override settings.
         */
        edifactDelimiterOverrides?: pulumi.Input<pulumi.Input<inputs.logic.EdifactDelimiterOverride>[]>;
        /**
         * The EDIFACT envelope override settings.
         */
        envelopeOverrides?: pulumi.Input<pulumi.Input<inputs.logic.EdifactEnvelopeOverride>[]>;
        /**
         * The EDIFACT envelope settings.
         */
        envelopeSettings: pulumi.Input<inputs.logic.EdifactEnvelopeSettings>;
        /**
         * The EDIFACT framing settings.
         */
        framingSettings: pulumi.Input<inputs.logic.EdifactFramingSettings>;
        /**
         * The EDIFACT message filter.
         */
        messageFilter: pulumi.Input<inputs.logic.EdifactMessageFilter>;
        /**
         * The EDIFACT message filter list.
         */
        messageFilterList?: pulumi.Input<pulumi.Input<inputs.logic.EdifactMessageIdentifier>[]>;
        /**
         * The EDIFACT processing Settings.
         */
        processingSettings: pulumi.Input<inputs.logic.EdifactProcessingSettings>;
        /**
         * The EDIFACT schema references.
         */
        schemaReferences: pulumi.Input<pulumi.Input<inputs.logic.EdifactSchemaReference>[]>;
        /**
         * The EDIFACT validation override settings.
         */
        validationOverrides?: pulumi.Input<pulumi.Input<inputs.logic.EdifactValidationOverride>[]>;
        /**
         * The EDIFACT validation settings.
         */
        validationSettings: pulumi.Input<inputs.logic.EdifactValidationSettings>;
    }

    /**
     * The Edifact agreement protocol settings.
     */
    export interface EdifactProtocolSettingsResponse {
        /**
         * The EDIFACT acknowledgement settings.
         */
        acknowledgementSettings: pulumi.Input<inputs.logic.EdifactAcknowledgementSettingsResponse>;
        /**
         * The EDIFACT delimiter override settings.
         */
        edifactDelimiterOverrides?: pulumi.Input<pulumi.Input<inputs.logic.EdifactDelimiterOverrideResponse>[]>;
        /**
         * The EDIFACT envelope override settings.
         */
        envelopeOverrides?: pulumi.Input<pulumi.Input<inputs.logic.EdifactEnvelopeOverrideResponse>[]>;
        /**
         * The EDIFACT envelope settings.
         */
        envelopeSettings: pulumi.Input<inputs.logic.EdifactEnvelopeSettingsResponse>;
        /**
         * The EDIFACT framing settings.
         */
        framingSettings: pulumi.Input<inputs.logic.EdifactFramingSettingsResponse>;
        /**
         * The EDIFACT message filter.
         */
        messageFilter: pulumi.Input<inputs.logic.EdifactMessageFilterResponse>;
        /**
         * The EDIFACT message filter list.
         */
        messageFilterList?: pulumi.Input<pulumi.Input<inputs.logic.EdifactMessageIdentifierResponse>[]>;
        /**
         * The EDIFACT processing Settings.
         */
        processingSettings: pulumi.Input<inputs.logic.EdifactProcessingSettingsResponse>;
        /**
         * The EDIFACT schema references.
         */
        schemaReferences: pulumi.Input<pulumi.Input<inputs.logic.EdifactSchemaReferenceResponse>[]>;
        /**
         * The EDIFACT validation override settings.
         */
        validationOverrides?: pulumi.Input<pulumi.Input<inputs.logic.EdifactValidationOverrideResponse>[]>;
        /**
         * The EDIFACT validation settings.
         */
        validationSettings: pulumi.Input<inputs.logic.EdifactValidationSettingsResponse>;
    }

    /**
     * The Edifact schema reference.
     */
    export interface EdifactSchemaReference {
        /**
         * The association assigned code.
         */
        associationAssignedCode?: pulumi.Input<string>;
        /**
         * The message id.
         */
        messageId: pulumi.Input<string>;
        /**
         * The message release version.
         */
        messageRelease: pulumi.Input<string>;
        /**
         * The message version.
         */
        messageVersion: pulumi.Input<string>;
        /**
         * The schema name.
         */
        schemaName: pulumi.Input<string>;
        /**
         * The sender application id.
         */
        senderApplicationId?: pulumi.Input<string>;
        /**
         * The sender application qualifier.
         */
        senderApplicationQualifier?: pulumi.Input<string>;
    }

    /**
     * The Edifact schema reference.
     */
    export interface EdifactSchemaReferenceResponse {
        /**
         * The association assigned code.
         */
        associationAssignedCode?: pulumi.Input<string>;
        /**
         * The message id.
         */
        messageId: pulumi.Input<string>;
        /**
         * The message release version.
         */
        messageRelease: pulumi.Input<string>;
        /**
         * The message version.
         */
        messageVersion: pulumi.Input<string>;
        /**
         * The schema name.
         */
        schemaName: pulumi.Input<string>;
        /**
         * The sender application id.
         */
        senderApplicationId?: pulumi.Input<string>;
        /**
         * The sender application qualifier.
         */
        senderApplicationQualifier?: pulumi.Input<string>;
    }

    /**
     * The Edifact validation override settings.
     */
    export interface EdifactValidationOverride {
        /**
         * The value indicating whether to allow leading and trailing spaces and zeroes.
         */
        allowLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate character Set.
         */
        enforceCharacterSet: pulumi.Input<boolean>;
        /**
         * The message id on which the validation settings has to be applied.
         */
        messageId: pulumi.Input<string>;
        /**
         * The trailing separator policy.
         */
        trailingSeparatorPolicy: pulumi.Input<string>;
        /**
         * The value indicating whether to trim leading and trailing spaces and zeroes.
         */
        trimLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate EDI types.
         */
        validateEDITypes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate XSD types.
         */
        validateXSDTypes: pulumi.Input<boolean>;
    }

    /**
     * The Edifact validation override settings.
     */
    export interface EdifactValidationOverrideResponse {
        /**
         * The value indicating whether to allow leading and trailing spaces and zeroes.
         */
        allowLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate character Set.
         */
        enforceCharacterSet: pulumi.Input<boolean>;
        /**
         * The message id on which the validation settings has to be applied.
         */
        messageId: pulumi.Input<string>;
        /**
         * The trailing separator policy.
         */
        trailingSeparatorPolicy: pulumi.Input<string>;
        /**
         * The value indicating whether to trim leading and trailing spaces and zeroes.
         */
        trimLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate EDI types.
         */
        validateEDITypes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate XSD types.
         */
        validateXSDTypes: pulumi.Input<boolean>;
    }

    /**
     * The Edifact agreement validation settings.
     */
    export interface EdifactValidationSettings {
        /**
         * The value indicating whether to allow leading and trailing spaces and zeroes.
         */
        allowLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate group control number.
         */
        checkDuplicateGroupControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate interchange control number.
         */
        checkDuplicateInterchangeControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate transaction set control number.
         */
        checkDuplicateTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The validity period of interchange control number.
         */
        interchangeControlNumberValidityDays: pulumi.Input<number>;
        /**
         * The trailing separator policy.
         */
        trailingSeparatorPolicy: pulumi.Input<string>;
        /**
         * The value indicating whether to trim leading and trailing spaces and zeroes.
         */
        trimLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate character set in the message.
         */
        validateCharacterSet: pulumi.Input<boolean>;
        /**
         * The value indicating whether to Whether to validate EDI types.
         */
        validateEDITypes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to Whether to validate XSD types.
         */
        validateXSDTypes: pulumi.Input<boolean>;
    }

    /**
     * The Edifact agreement validation settings.
     */
    export interface EdifactValidationSettingsResponse {
        /**
         * The value indicating whether to allow leading and trailing spaces and zeroes.
         */
        allowLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate group control number.
         */
        checkDuplicateGroupControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate interchange control number.
         */
        checkDuplicateInterchangeControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate transaction set control number.
         */
        checkDuplicateTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The validity period of interchange control number.
         */
        interchangeControlNumberValidityDays: pulumi.Input<number>;
        /**
         * The trailing separator policy.
         */
        trailingSeparatorPolicy: pulumi.Input<string>;
        /**
         * The value indicating whether to trim leading and trailing spaces and zeroes.
         */
        trimLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate character set in the message.
         */
        validateCharacterSet: pulumi.Input<boolean>;
        /**
         * The value indicating whether to Whether to validate EDI types.
         */
        validateEDITypes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to Whether to validate XSD types.
         */
        validateXSDTypes: pulumi.Input<boolean>;
    }

    /**
     * The access control configuration.
     */
    export interface FlowAccessControlConfiguration {
        /**
         * The access control configuration for workflow actions.
         */
        actions?: pulumi.Input<inputs.logic.FlowAccessControlConfigurationPolicy>;
        /**
         * The access control configuration for accessing workflow run contents.
         */
        contents?: pulumi.Input<inputs.logic.FlowAccessControlConfigurationPolicy>;
        /**
         * The access control configuration for invoking workflow triggers.
         */
        triggers?: pulumi.Input<inputs.logic.FlowAccessControlConfigurationPolicy>;
        /**
         * The access control configuration for workflow management.
         */
        workflowManagement?: pulumi.Input<inputs.logic.FlowAccessControlConfigurationPolicy>;
    }

    /**
     * The access control configuration policy.
     */
    export interface FlowAccessControlConfigurationPolicy {
        /**
         * The allowed caller IP address ranges.
         */
        allowedCallerIpAddresses?: pulumi.Input<pulumi.Input<inputs.logic.IpAddressRange>[]>;
        /**
         * The authentication policies for workflow.
         */
        openAuthenticationPolicies?: pulumi.Input<inputs.logic.OpenAuthenticationAccessPolicies>;
    }

    /**
     * The access control configuration policy.
     */
    export interface FlowAccessControlConfigurationPolicyResponse {
        /**
         * The allowed caller IP address ranges.
         */
        allowedCallerIpAddresses?: pulumi.Input<pulumi.Input<inputs.logic.IpAddressRangeResponse>[]>;
        /**
         * The authentication policies for workflow.
         */
        openAuthenticationPolicies?: pulumi.Input<inputs.logic.OpenAuthenticationAccessPoliciesResponse>;
    }

    /**
     * The access control configuration.
     */
    export interface FlowAccessControlConfigurationResponse {
        /**
         * The access control configuration for workflow actions.
         */
        actions?: pulumi.Input<inputs.logic.FlowAccessControlConfigurationPolicyResponse>;
        /**
         * The access control configuration for accessing workflow run contents.
         */
        contents?: pulumi.Input<inputs.logic.FlowAccessControlConfigurationPolicyResponse>;
        /**
         * The access control configuration for invoking workflow triggers.
         */
        triggers?: pulumi.Input<inputs.logic.FlowAccessControlConfigurationPolicyResponse>;
        /**
         * The access control configuration for workflow management.
         */
        workflowManagement?: pulumi.Input<inputs.logic.FlowAccessControlConfigurationPolicyResponse>;
    }

    /**
     * The flow endpoints configuration.
     */
    export interface FlowEndpoints {
        /**
         * The access endpoint ip address.
         */
        accessEndpointIpAddresses?: pulumi.Input<pulumi.Input<inputs.logic.IpAddress>[]>;
        /**
         * The outgoing ip address.
         */
        outgoingIpAddresses?: pulumi.Input<pulumi.Input<inputs.logic.IpAddress>[]>;
    }

    /**
     * The endpoints configuration.
     */
    export interface FlowEndpointsConfiguration {
        /**
         * The connector endpoints.
         */
        connector?: pulumi.Input<inputs.logic.FlowEndpoints>;
        /**
         * The workflow endpoints.
         */
        workflow?: pulumi.Input<inputs.logic.FlowEndpoints>;
    }

    /**
     * The endpoints configuration.
     */
    export interface FlowEndpointsConfigurationResponse {
        /**
         * The connector endpoints.
         */
        connector?: pulumi.Input<inputs.logic.FlowEndpointsResponse>;
        /**
         * The workflow endpoints.
         */
        workflow?: pulumi.Input<inputs.logic.FlowEndpointsResponse>;
    }

    /**
     * The flow endpoints configuration.
     */
    export interface FlowEndpointsResponse {
        /**
         * The access endpoint ip address.
         */
        accessEndpointIpAddresses?: pulumi.Input<pulumi.Input<inputs.logic.IpAddressResponse>[]>;
        /**
         * The outgoing ip address.
         */
        outgoingIpAddresses?: pulumi.Input<pulumi.Input<inputs.logic.IpAddressResponse>[]>;
    }

    /**
     * The integration account agreement properties.
     */
    export interface IntegrationAccountAgreementProperties {
        /**
         * The agreement type.
         */
        agreementType: pulumi.Input<string>;
        /**
         * The agreement content.
         */
        content: pulumi.Input<inputs.logic.AgreementContent>;
        /**
         * The business identity of the guest partner.
         */
        guestIdentity: pulumi.Input<inputs.logic.BusinessIdentity>;
        /**
         * The integration account partner that is set as guest partner for this agreement.
         */
        guestPartner: pulumi.Input<string>;
        /**
         * The business identity of the host partner.
         */
        hostIdentity: pulumi.Input<inputs.logic.BusinessIdentity>;
        /**
         * The integration account partner that is set as host partner for this agreement.
         */
        hostPartner: pulumi.Input<string>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The integration account agreement properties.
     */
    export interface IntegrationAccountAgreementPropertiesResponse {
        /**
         * The agreement type.
         */
        agreementType: pulumi.Input<string>;
        /**
         * The changed time.
         */
        changedTime: pulumi.Input<string>;
        /**
         * The agreement content.
         */
        content: pulumi.Input<inputs.logic.AgreementContentResponse>;
        /**
         * The created time.
         */
        createdTime: pulumi.Input<string>;
        /**
         * The business identity of the guest partner.
         */
        guestIdentity: pulumi.Input<inputs.logic.BusinessIdentityResponse>;
        /**
         * The integration account partner that is set as guest partner for this agreement.
         */
        guestPartner: pulumi.Input<string>;
        /**
         * The business identity of the host partner.
         */
        hostIdentity: pulumi.Input<inputs.logic.BusinessIdentityResponse>;
        /**
         * The integration account partner that is set as host partner for this agreement.
         */
        hostPartner: pulumi.Input<string>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The integration account certificate properties.
     */
    export interface IntegrationAccountCertificateProperties {
        /**
         * The key details in the key vault.
         */
        key?: pulumi.Input<inputs.logic.KeyVaultKeyReference>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The public certificate.
         */
        publicCertificate?: pulumi.Input<string>;
    }

    /**
     * The integration account certificate properties.
     */
    export interface IntegrationAccountCertificatePropertiesResponse {
        /**
         * The changed time.
         */
        changedTime: pulumi.Input<string>;
        /**
         * The created time.
         */
        createdTime: pulumi.Input<string>;
        /**
         * The key details in the key vault.
         */
        key?: pulumi.Input<inputs.logic.KeyVaultKeyReferenceResponse>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The public certificate.
         */
        publicCertificate?: pulumi.Input<string>;
    }

    /**
     * The integration account map.
     */
    export interface IntegrationAccountMapProperties {
        /**
         * The content.
         */
        content?: pulumi.Input<string>;
        /**
         * The content type.
         */
        contentType?: pulumi.Input<string>;
        /**
         * The map type.
         */
        mapType: pulumi.Input<string>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The parameters schema of integration account map.
         */
        parametersSchema?: pulumi.Input<inputs.logic.IntegrationAccountMapPropertiesProperties>;
    }

    /**
     * The parameters schema of integration account map.
     */
    export interface IntegrationAccountMapPropertiesProperties {
        /**
         * The reference name.
         */
        ref?: pulumi.Input<string>;
    }

    /**
     * The integration account map.
     */
    export interface IntegrationAccountMapPropertiesResponse {
        /**
         * The changed time.
         */
        changedTime: pulumi.Input<string>;
        /**
         * The content.
         */
        content?: pulumi.Input<string>;
        /**
         * The content link.
         */
        contentLink: pulumi.Input<inputs.logic.ContentLinkResponse>;
        /**
         * The content type.
         */
        contentType?: pulumi.Input<string>;
        /**
         * The created time.
         */
        createdTime: pulumi.Input<string>;
        /**
         * The map type.
         */
        mapType: pulumi.Input<string>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The parameters schema of integration account map.
         */
        parametersSchema?: pulumi.Input<inputs.logic.IntegrationAccountMapPropertiesResponseProperties>;
    }

    /**
     * The parameters schema of integration account map.
     */
    export interface IntegrationAccountMapPropertiesResponseProperties {
        /**
         * The reference name.
         */
        ref?: pulumi.Input<string>;
    }

    /**
     * The integration account partner properties.
     */
    export interface IntegrationAccountPartnerProperties {
        /**
         * The partner content.
         */
        content: pulumi.Input<inputs.logic.PartnerContent>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The partner type.
         */
        partnerType: pulumi.Input<string>;
    }

    /**
     * The integration account partner properties.
     */
    export interface IntegrationAccountPartnerPropertiesResponse {
        /**
         * The changed time.
         */
        changedTime: pulumi.Input<string>;
        /**
         * The partner content.
         */
        content: pulumi.Input<inputs.logic.PartnerContentResponse>;
        /**
         * The created time.
         */
        createdTime: pulumi.Input<string>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The partner type.
         */
        partnerType: pulumi.Input<string>;
    }

    /**
     * The integration account properties.
     */
    export interface IntegrationAccountProperties {
        /**
         * The integration service environment.
         */
        integrationServiceEnvironment?: pulumi.Input<inputs.logic.IntegrationServiceEnvironment>;
        /**
         * The workflow state.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * The integration account properties.
     */
    export interface IntegrationAccountPropertiesResponse {
        /**
         * The integration service environment.
         */
        integrationServiceEnvironment?: pulumi.Input<inputs.logic.IntegrationServiceEnvironmentResponse>;
        /**
         * The workflow state.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * The integration account schema properties.
     */
    export interface IntegrationAccountSchemaProperties {
        /**
         * The content.
         */
        content?: pulumi.Input<string>;
        /**
         * The content type.
         */
        contentType?: pulumi.Input<string>;
        /**
         * The document name.
         */
        documentName?: pulumi.Input<string>;
        /**
         * The file name.
         */
        fileName?: pulumi.Input<string>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The schema type.
         */
        schemaType: pulumi.Input<string>;
        /**
         * The target namespace of the schema.
         */
        targetNamespace?: pulumi.Input<string>;
    }

    /**
     * The integration account schema properties.
     */
    export interface IntegrationAccountSchemaPropertiesResponse {
        /**
         * The changed time.
         */
        changedTime: pulumi.Input<string>;
        /**
         * The content.
         */
        content?: pulumi.Input<string>;
        /**
         * The content link.
         */
        contentLink: pulumi.Input<inputs.logic.ContentLinkResponse>;
        /**
         * The content type.
         */
        contentType?: pulumi.Input<string>;
        /**
         * The created time.
         */
        createdTime: pulumi.Input<string>;
        /**
         * The document name.
         */
        documentName?: pulumi.Input<string>;
        /**
         * The file name.
         */
        fileName?: pulumi.Input<string>;
        /**
         * The metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The schema type.
         */
        schemaType: pulumi.Input<string>;
        /**
         * The target namespace of the schema.
         */
        targetNamespace?: pulumi.Input<string>;
    }

    /**
     * The integration account session properties.
     */
    export interface IntegrationAccountSessionProperties {
        /**
         * The session content.
         */
        content?: pulumi.Input<inputs.logic.Object>;
    }

    /**
     * The integration account session properties.
     */
    export interface IntegrationAccountSessionPropertiesResponse {
        /**
         * The changed time.
         */
        changedTime: pulumi.Input<string>;
        /**
         * The session content.
         */
        content?: pulumi.Input<inputs.logic.ObjectResponse>;
        /**
         * The created time.
         */
        createdTime: pulumi.Input<string>;
    }

    /**
     * The integration account sku.
     */
    export interface IntegrationAccountSku {
        /**
         * The sku name.
         */
        name: pulumi.Input<string>;
    }

    /**
     * The integration account sku.
     */
    export interface IntegrationAccountSkuResponse {
        /**
         * The sku name.
         */
        name: pulumi.Input<string>;
    }

    /**
     * The integration service environment.
     */
    export interface IntegrationServiceEnvironment {
        /**
         * The resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Gets the resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The integration service environment properties.
         */
        properties: pulumi.Input<inputs.logic.IntegrationServiceEnvironmentPropertiesResponse>;
        /**
         * The sku.
         */
        sku?: pulumi.Input<inputs.logic.IntegrationServiceEnvironmentSkuResponse>;
        /**
         * The resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets the resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The integration service environment access endpoint.
     */
    export interface IntegrationServiceEnvironmentAccessEndpoint {
        /**
         * The access endpoint type.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The integration service environment access endpoint.
     */
    export interface IntegrationServiceEnvironmentAccessEndpointResponse {
        /**
         * The access endpoint type.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The integration service environment properties.
     */
    export interface IntegrationServiceEnvironmentProperties {
        /**
         * The endpoints configuration.
         */
        endpointsConfiguration?: pulumi.Input<inputs.logic.FlowEndpointsConfiguration>;
        /**
         * Gets the tracking id.
         */
        integrationServiceEnvironmentId?: pulumi.Input<string>;
        /**
         * The network configuration.
         */
        networkConfiguration?: pulumi.Input<inputs.logic.NetworkConfiguration>;
        /**
         * The provisioning state.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The integration service environment state.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * The integration service environment properties.
     */
    export interface IntegrationServiceEnvironmentPropertiesResponse {
        /**
         * The endpoints configuration.
         */
        endpointsConfiguration?: pulumi.Input<inputs.logic.FlowEndpointsConfigurationResponse>;
        /**
         * Gets the tracking id.
         */
        integrationServiceEnvironmentId?: pulumi.Input<string>;
        /**
         * The network configuration.
         */
        networkConfiguration?: pulumi.Input<inputs.logic.NetworkConfigurationResponse>;
        /**
         * The provisioning state.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The integration service environment state.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * The integration service environment.
     */
    export interface IntegrationServiceEnvironmentResponse {
        /**
         * The resource id.
         */
        id: pulumi.Input<string>;
        /**
         * The resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Gets the resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The integration service environment properties.
         */
        properties?: pulumi.Input<inputs.logic.IntegrationServiceEnvironmentPropertiesResponse>;
        /**
         * The sku.
         */
        sku?: pulumi.Input<inputs.logic.IntegrationServiceEnvironmentSkuResponse>;
        /**
         * The resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets the resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The integration service environment sku.
     */
    export interface IntegrationServiceEnvironmentSku {
        /**
         * The sku capacity.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The sku name.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The integration service environment sku.
     */
    export interface IntegrationServiceEnvironmentSkuResponse {
        /**
         * The sku capacity.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The sku name.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The ip address.
     */
    export interface IpAddress {
        /**
         * The address.
         */
        address?: pulumi.Input<string>;
    }

    /**
     * The ip address range.
     */
    export interface IpAddressRange {
        /**
         * The IP address range.
         */
        addressRange?: pulumi.Input<string>;
    }

    /**
     * The ip address range.
     */
    export interface IpAddressRangeResponse {
        /**
         * The IP address range.
         */
        addressRange?: pulumi.Input<string>;
    }

    /**
     * The ip address.
     */
    export interface IpAddressResponse {
        /**
         * The address.
         */
        address?: pulumi.Input<string>;
    }

    /**
     * The reference to the key vault key.
     */
    export interface KeyVaultKeyReference {
        /**
         * The private key name in key vault.
         */
        keyName: pulumi.Input<string>;
        /**
         * The key vault reference.
         */
        keyVault: pulumi.Input<inputs.logic.KeyVaultKeyReferenceProperties>;
        /**
         * The private key version in key vault.
         */
        keyVersion?: pulumi.Input<string>;
    }

    /**
     * The key vault reference.
     */
    export interface KeyVaultKeyReferenceProperties {
        /**
         * The resource id.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The reference to the key vault key.
     */
    export interface KeyVaultKeyReferenceResponse {
        /**
         * The private key name in key vault.
         */
        keyName: pulumi.Input<string>;
        /**
         * The key vault reference.
         */
        keyVault: pulumi.Input<inputs.logic.KeyVaultKeyReferenceResponseProperties>;
        /**
         * The private key version in key vault.
         */
        keyVersion?: pulumi.Input<string>;
    }

    /**
     * The key vault reference.
     */
    export interface KeyVaultKeyReferenceResponseProperties {
        /**
         * The resource id.
         */
        id?: pulumi.Input<string>;
        /**
         * The resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The network configuration.
     */
    export interface NetworkConfiguration {
        /**
         * The access endpoint.
         */
        accessEndpoint?: pulumi.Input<inputs.logic.IntegrationServiceEnvironmentAccessEndpoint>;
        /**
         * The subnets.
         */
        subnets?: pulumi.Input<pulumi.Input<inputs.logic.ResourceReference>[]>;
        /**
         * Gets the virtual network address space.
         */
        virtualNetworkAddressSpace?: pulumi.Input<string>;
    }

    /**
     * The network configuration.
     */
    export interface NetworkConfigurationResponse {
        /**
         * The access endpoint.
         */
        accessEndpoint?: pulumi.Input<inputs.logic.IntegrationServiceEnvironmentAccessEndpointResponse>;
        /**
         * The subnets.
         */
        subnets?: pulumi.Input<pulumi.Input<inputs.logic.ResourceReferenceResponse>[]>;
        /**
         * Gets the virtual network address space.
         */
        virtualNetworkAddressSpace?: pulumi.Input<string>;
    }

    export interface Object {
    }

    export interface ObjectResponse {
    }

    /**
     * AuthenticationPolicy of type Open.
     */
    export interface OpenAuthenticationAccessPolicies {
        /**
         * Open authentication policies.
         */
        policies?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * AuthenticationPolicy of type Open.
     */
    export interface OpenAuthenticationAccessPoliciesResponse {
        /**
         * Open authentication policies.
         */
        policies?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The integration account partner content.
     */
    export interface PartnerContent {
        /**
         * The B2B partner content.
         */
        b2b?: pulumi.Input<inputs.logic.B2BPartnerContent>;
    }

    /**
     * The integration account partner content.
     */
    export interface PartnerContentResponse {
        /**
         * The B2B partner content.
         */
        b2b?: pulumi.Input<inputs.logic.B2BPartnerContentResponse>;
    }

    /**
     * The recurrence schedule.
     */
    export interface RecurrenceSchedule {
        /**
         * The hours.
         */
        hours?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * The minutes.
         */
        minutes?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * The month days.
         */
        monthDays?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * The monthly occurrences.
         */
        monthlyOccurrences?: pulumi.Input<pulumi.Input<inputs.logic.RecurrenceScheduleOccurrence>[]>;
        /**
         * The days of the week.
         */
        weekDays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The recurrence schedule occurrence.
     */
    export interface RecurrenceScheduleOccurrence {
        /**
         * The day of the week.
         */
        day?: pulumi.Input<string>;
        /**
         * The occurrence.
         */
        occurrence?: pulumi.Input<number>;
    }

    /**
     * The recurrence schedule occurrence.
     */
    export interface RecurrenceScheduleOccurrenceResponse {
        /**
         * The day of the week.
         */
        day?: pulumi.Input<string>;
        /**
         * The occurrence.
         */
        occurrence?: pulumi.Input<number>;
    }

    /**
     * The recurrence schedule.
     */
    export interface RecurrenceScheduleResponse {
        /**
         * The hours.
         */
        hours?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * The minutes.
         */
        minutes?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * The month days.
         */
        monthDays?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * The monthly occurrences.
         */
        monthlyOccurrences?: pulumi.Input<pulumi.Input<inputs.logic.RecurrenceScheduleOccurrenceResponse>[]>;
        /**
         * The days of the week.
         */
        weekDays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The resource reference.
     */
    export interface ResourceReference {
        /**
         * The resource id.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The resource reference.
     */
    export interface ResourceReferenceResponse {
        /**
         * The resource id.
         */
        id?: pulumi.Input<string>;
        /**
         * Gets the resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Gets the resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The sku type.
     */
    export interface SkuResponse {
        /**
         * The name.
         */
        name: pulumi.Input<string>;
        /**
         * The reference to plan.
         */
        plan?: pulumi.Input<inputs.logic.ResourceReferenceResponse>;
    }

    /**
     * The workflow properties.
     */
    export interface WorkflowProperties {
        /**
         * The access control configuration.
         */
        accessControl?: pulumi.Input<inputs.logic.FlowAccessControlConfiguration>;
        /**
         * The definition.
         */
        definition?: pulumi.Input<inputs.logic.Object>;
        /**
         * The endpoints configuration.
         */
        endpointsConfiguration?: pulumi.Input<inputs.logic.FlowEndpointsConfiguration>;
        /**
         * The integration account.
         */
        integrationAccount?: pulumi.Input<inputs.logic.ResourceReference>;
        /**
         * The integration service environment.
         */
        integrationServiceEnvironment?: pulumi.Input<inputs.logic.ResourceReference>;
        /**
         * The parameters.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The state.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * The workflow properties.
     */
    export interface WorkflowPropertiesResponse {
        /**
         * The access control configuration.
         */
        accessControl?: pulumi.Input<inputs.logic.FlowAccessControlConfigurationResponse>;
        /**
         * Gets the access endpoint.
         */
        accessEndpoint: pulumi.Input<string>;
        /**
         * Gets the changed time.
         */
        changedTime: pulumi.Input<string>;
        /**
         * Gets the created time.
         */
        createdTime: pulumi.Input<string>;
        /**
         * The definition.
         */
        definition?: pulumi.Input<inputs.logic.ObjectResponse>;
        /**
         * The endpoints configuration.
         */
        endpointsConfiguration?: pulumi.Input<inputs.logic.FlowEndpointsConfigurationResponse>;
        /**
         * The integration account.
         */
        integrationAccount?: pulumi.Input<inputs.logic.ResourceReferenceResponse>;
        /**
         * The integration service environment.
         */
        integrationServiceEnvironment?: pulumi.Input<inputs.logic.ResourceReferenceResponse>;
        /**
         * The parameters.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets the provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The sku.
         */
        sku: pulumi.Input<inputs.logic.SkuResponse>;
        /**
         * The state.
         */
        state?: pulumi.Input<string>;
        /**
         * Gets the version.
         */
        version: pulumi.Input<string>;
    }

    /**
     * The workflow trigger recurrence.
     */
    export interface WorkflowTriggerRecurrence {
        /**
         * The end time.
         */
        endTime?: pulumi.Input<string>;
        /**
         * The frequency.
         */
        frequency?: pulumi.Input<string>;
        /**
         * The interval.
         */
        interval?: pulumi.Input<number>;
        /**
         * The recurrence schedule.
         */
        schedule?: pulumi.Input<inputs.logic.RecurrenceSchedule>;
        /**
         * The start time.
         */
        startTime?: pulumi.Input<string>;
        /**
         * The time zone.
         */
        timeZone?: pulumi.Input<string>;
    }

    /**
     * The workflow trigger recurrence.
     */
    export interface WorkflowTriggerRecurrenceResponse {
        /**
         * The end time.
         */
        endTime?: pulumi.Input<string>;
        /**
         * The frequency.
         */
        frequency?: pulumi.Input<string>;
        /**
         * The interval.
         */
        interval?: pulumi.Input<number>;
        /**
         * The recurrence schedule.
         */
        schedule?: pulumi.Input<inputs.logic.RecurrenceScheduleResponse>;
        /**
         * The start time.
         */
        startTime?: pulumi.Input<string>;
        /**
         * The time zone.
         */
        timeZone?: pulumi.Input<string>;
    }

    /**
     * The WSDL service.
     */
    export interface WsdlServiceResponse {
        /**
         * The list of endpoints' qualified names.
         */
        EndpointQualifiedNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The qualified name.
         */
        qualifiedName?: pulumi.Input<string>;
    }

    /**
     * The X12 agreement acknowledgement settings.
     */
    export interface X12AcknowledgementSettings {
        /**
         * The acknowledgement control number lower bound.
         */
        acknowledgementControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The acknowledgement control number prefix.
         */
        acknowledgementControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The acknowledgement control number suffix.
         */
        acknowledgementControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The acknowledgement control number upper bound.
         */
        acknowledgementControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The value indicating whether to batch functional acknowledgements.
         */
        batchFunctionalAcknowledgements: pulumi.Input<boolean>;
        /**
         * The value indicating whether to batch implementation acknowledgements.
         */
        batchImplementationAcknowledgements: pulumi.Input<boolean>;
        /**
         * The value indicating whether to batch the technical acknowledgements.
         */
        batchTechnicalAcknowledgements: pulumi.Input<boolean>;
        /**
         * The functional acknowledgement version.
         */
        functionalAcknowledgementVersion?: pulumi.Input<string>;
        /**
         * The implementation acknowledgement version.
         */
        implementationAcknowledgementVersion?: pulumi.Input<string>;
        /**
         * The value indicating whether functional acknowledgement is needed.
         */
        needFunctionalAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether implementation acknowledgement is needed.
         */
        needImplementationAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether a loop is needed for valid messages.
         */
        needLoopForValidMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether technical acknowledgement is needed.
         */
        needTechnicalAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover acknowledgement control number.
         */
        rolloverAcknowledgementControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to send synchronous acknowledgement.
         */
        sendSynchronousAcknowledgement: pulumi.Input<boolean>;
    }

    /**
     * The X12 agreement acknowledgement settings.
     */
    export interface X12AcknowledgementSettingsResponse {
        /**
         * The acknowledgement control number lower bound.
         */
        acknowledgementControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The acknowledgement control number prefix.
         */
        acknowledgementControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The acknowledgement control number suffix.
         */
        acknowledgementControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The acknowledgement control number upper bound.
         */
        acknowledgementControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The value indicating whether to batch functional acknowledgements.
         */
        batchFunctionalAcknowledgements: pulumi.Input<boolean>;
        /**
         * The value indicating whether to batch implementation acknowledgements.
         */
        batchImplementationAcknowledgements: pulumi.Input<boolean>;
        /**
         * The value indicating whether to batch the technical acknowledgements.
         */
        batchTechnicalAcknowledgements: pulumi.Input<boolean>;
        /**
         * The functional acknowledgement version.
         */
        functionalAcknowledgementVersion?: pulumi.Input<string>;
        /**
         * The implementation acknowledgement version.
         */
        implementationAcknowledgementVersion?: pulumi.Input<string>;
        /**
         * The value indicating whether functional acknowledgement is needed.
         */
        needFunctionalAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether implementation acknowledgement is needed.
         */
        needImplementationAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether a loop is needed for valid messages.
         */
        needLoopForValidMessages: pulumi.Input<boolean>;
        /**
         * The value indicating whether technical acknowledgement is needed.
         */
        needTechnicalAcknowledgement: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover acknowledgement control number.
         */
        rolloverAcknowledgementControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to send synchronous acknowledgement.
         */
        sendSynchronousAcknowledgement: pulumi.Input<boolean>;
    }

    /**
     * The X12 agreement content.
     */
    export interface X12AgreementContent {
        /**
         * The X12 one-way receive agreement.
         */
        receiveAgreement: pulumi.Input<inputs.logic.X12OneWayAgreement>;
        /**
         * The X12 one-way send agreement.
         */
        sendAgreement: pulumi.Input<inputs.logic.X12OneWayAgreement>;
    }

    /**
     * The X12 agreement content.
     */
    export interface X12AgreementContentResponse {
        /**
         * The X12 one-way receive agreement.
         */
        receiveAgreement: pulumi.Input<inputs.logic.X12OneWayAgreementResponse>;
        /**
         * The X12 one-way send agreement.
         */
        sendAgreement: pulumi.Input<inputs.logic.X12OneWayAgreementResponse>;
    }

    /**
     * The X12 delimiter override settings.
     */
    export interface X12DelimiterOverrides {
        /**
         * The component separator.
         */
        componentSeparator: pulumi.Input<number>;
        /**
         * The data element separator.
         */
        dataElementSeparator: pulumi.Input<number>;
        /**
         * The message id.
         */
        messageId?: pulumi.Input<string>;
        /**
         * The protocol version.
         */
        protocolVersion?: pulumi.Input<string>;
        /**
         * The replacement character.
         */
        replaceCharacter: pulumi.Input<number>;
        /**
         * The value indicating whether to replace separators in payload.
         */
        replaceSeparatorsInPayload: pulumi.Input<boolean>;
        /**
         * The segment terminator.
         */
        segmentTerminator: pulumi.Input<number>;
        /**
         * The segment terminator suffix.
         */
        segmentTerminatorSuffix: pulumi.Input<string>;
        /**
         * The target namespace on which this delimiter settings has to be applied.
         */
        targetNamespace?: pulumi.Input<string>;
    }

    /**
     * The X12 delimiter override settings.
     */
    export interface X12DelimiterOverridesResponse {
        /**
         * The component separator.
         */
        componentSeparator: pulumi.Input<number>;
        /**
         * The data element separator.
         */
        dataElementSeparator: pulumi.Input<number>;
        /**
         * The message id.
         */
        messageId?: pulumi.Input<string>;
        /**
         * The protocol version.
         */
        protocolVersion?: pulumi.Input<string>;
        /**
         * The replacement character.
         */
        replaceCharacter: pulumi.Input<number>;
        /**
         * The value indicating whether to replace separators in payload.
         */
        replaceSeparatorsInPayload: pulumi.Input<boolean>;
        /**
         * The segment terminator.
         */
        segmentTerminator: pulumi.Input<number>;
        /**
         * The segment terminator suffix.
         */
        segmentTerminatorSuffix: pulumi.Input<string>;
        /**
         * The target namespace on which this delimiter settings has to be applied.
         */
        targetNamespace?: pulumi.Input<string>;
    }

    /**
     * The X12 envelope override settings.
     */
    export interface X12EnvelopeOverride {
        /**
         * The date format.
         */
        dateFormat: pulumi.Input<string>;
        /**
         * The functional identifier code.
         */
        functionalIdentifierCode?: pulumi.Input<string>;
        /**
         * The header version.
         */
        headerVersion: pulumi.Input<string>;
        /**
         * The message id on which this envelope settings has to be applied.
         */
        messageId: pulumi.Input<string>;
        /**
         * The protocol version on which this envelope settings has to be applied.
         */
        protocolVersion: pulumi.Input<string>;
        /**
         * The receiver application id.
         */
        receiverApplicationId: pulumi.Input<string>;
        /**
         * The responsible agency code.
         */
        responsibleAgencyCode: pulumi.Input<string>;
        /**
         * The sender application id.
         */
        senderApplicationId: pulumi.Input<string>;
        /**
         * The target namespace on which this envelope settings has to be applied.
         */
        targetNamespace: pulumi.Input<string>;
        /**
         * The time format.
         */
        timeFormat: pulumi.Input<string>;
    }

    /**
     * The X12 envelope override settings.
     */
    export interface X12EnvelopeOverrideResponse {
        /**
         * The date format.
         */
        dateFormat: pulumi.Input<string>;
        /**
         * The functional identifier code.
         */
        functionalIdentifierCode?: pulumi.Input<string>;
        /**
         * The header version.
         */
        headerVersion: pulumi.Input<string>;
        /**
         * The message id on which this envelope settings has to be applied.
         */
        messageId: pulumi.Input<string>;
        /**
         * The protocol version on which this envelope settings has to be applied.
         */
        protocolVersion: pulumi.Input<string>;
        /**
         * The receiver application id.
         */
        receiverApplicationId: pulumi.Input<string>;
        /**
         * The responsible agency code.
         */
        responsibleAgencyCode: pulumi.Input<string>;
        /**
         * The sender application id.
         */
        senderApplicationId: pulumi.Input<string>;
        /**
         * The target namespace on which this envelope settings has to be applied.
         */
        targetNamespace: pulumi.Input<string>;
        /**
         * The time format.
         */
        timeFormat: pulumi.Input<string>;
    }

    /**
     * The X12 agreement envelope settings.
     */
    export interface X12EnvelopeSettings {
        /**
         * The controls standards id.
         */
        controlStandardsId: pulumi.Input<number>;
        /**
         * The control version number.
         */
        controlVersionNumber: pulumi.Input<string>;
        /**
         * The value indicating whether to enable default group headers.
         */
        enableDefaultGroupHeaders: pulumi.Input<boolean>;
        /**
         * The functional group id.
         */
        functionalGroupId?: pulumi.Input<string>;
        /**
         * The group control number lower bound.
         */
        groupControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The group control number upper bound.
         */
        groupControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The group header agency code.
         */
        groupHeaderAgencyCode: pulumi.Input<string>;
        /**
         * The group header date format.
         */
        groupHeaderDateFormat: pulumi.Input<string>;
        /**
         * The group header time format.
         */
        groupHeaderTimeFormat: pulumi.Input<string>;
        /**
         * The group header version.
         */
        groupHeaderVersion: pulumi.Input<string>;
        /**
         * The interchange  control number lower bound.
         */
        interchangeControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The interchange  control number upper bound.
         */
        interchangeControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The value indicating whether to overwrite existing transaction set control number.
         */
        overwriteExistingTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The receiver application id.
         */
        receiverApplicationId: pulumi.Input<string>;
        /**
         * The value indicating whether to rollover group control number.
         */
        rolloverGroupControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover interchange control number.
         */
        rolloverInterchangeControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover transaction set control number.
         */
        rolloverTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The sender application id.
         */
        senderApplicationId: pulumi.Input<string>;
        /**
         * The transaction set control number lower bound.
         */
        transactionSetControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The transaction set control number prefix.
         */
        transactionSetControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The transaction set control number suffix.
         */
        transactionSetControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The transaction set control number upper bound.
         */
        transactionSetControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The usage indicator.
         */
        usageIndicator: pulumi.Input<string>;
        /**
         * The value indicating whether to use control standards id as repetition character.
         */
        useControlStandardsIdAsRepetitionCharacter: pulumi.Input<boolean>;
    }

    /**
     * The X12 agreement envelope settings.
     */
    export interface X12EnvelopeSettingsResponse {
        /**
         * The controls standards id.
         */
        controlStandardsId: pulumi.Input<number>;
        /**
         * The control version number.
         */
        controlVersionNumber: pulumi.Input<string>;
        /**
         * The value indicating whether to enable default group headers.
         */
        enableDefaultGroupHeaders: pulumi.Input<boolean>;
        /**
         * The functional group id.
         */
        functionalGroupId?: pulumi.Input<string>;
        /**
         * The group control number lower bound.
         */
        groupControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The group control number upper bound.
         */
        groupControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The group header agency code.
         */
        groupHeaderAgencyCode: pulumi.Input<string>;
        /**
         * The group header date format.
         */
        groupHeaderDateFormat: pulumi.Input<string>;
        /**
         * The group header time format.
         */
        groupHeaderTimeFormat: pulumi.Input<string>;
        /**
         * The group header version.
         */
        groupHeaderVersion: pulumi.Input<string>;
        /**
         * The interchange  control number lower bound.
         */
        interchangeControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The interchange  control number upper bound.
         */
        interchangeControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The value indicating whether to overwrite existing transaction set control number.
         */
        overwriteExistingTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The receiver application id.
         */
        receiverApplicationId: pulumi.Input<string>;
        /**
         * The value indicating whether to rollover group control number.
         */
        rolloverGroupControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover interchange control number.
         */
        rolloverInterchangeControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to rollover transaction set control number.
         */
        rolloverTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The sender application id.
         */
        senderApplicationId: pulumi.Input<string>;
        /**
         * The transaction set control number lower bound.
         */
        transactionSetControlNumberLowerBound: pulumi.Input<number>;
        /**
         * The transaction set control number prefix.
         */
        transactionSetControlNumberPrefix?: pulumi.Input<string>;
        /**
         * The transaction set control number suffix.
         */
        transactionSetControlNumberSuffix?: pulumi.Input<string>;
        /**
         * The transaction set control number upper bound.
         */
        transactionSetControlNumberUpperBound: pulumi.Input<number>;
        /**
         * The usage indicator.
         */
        usageIndicator: pulumi.Input<string>;
        /**
         * The value indicating whether to use control standards id as repetition character.
         */
        useControlStandardsIdAsRepetitionCharacter: pulumi.Input<boolean>;
    }

    /**
     * The X12 agreement framing settings.
     */
    export interface X12FramingSettings {
        /**
         * The X12 character set.
         */
        characterSet: pulumi.Input<string>;
        /**
         * The component separator.
         */
        componentSeparator: pulumi.Input<number>;
        /**
         * The data element separator.
         */
        dataElementSeparator: pulumi.Input<number>;
        /**
         * The replacement character.
         */
        replaceCharacter: pulumi.Input<number>;
        /**
         * The value indicating whether to replace separators in payload.
         */
        replaceSeparatorsInPayload: pulumi.Input<boolean>;
        /**
         * The segment terminator.
         */
        segmentTerminator: pulumi.Input<number>;
        /**
         * The segment terminator suffix.
         */
        segmentTerminatorSuffix: pulumi.Input<string>;
    }

    /**
     * The X12 agreement framing settings.
     */
    export interface X12FramingSettingsResponse {
        /**
         * The X12 character set.
         */
        characterSet: pulumi.Input<string>;
        /**
         * The component separator.
         */
        componentSeparator: pulumi.Input<number>;
        /**
         * The data element separator.
         */
        dataElementSeparator: pulumi.Input<number>;
        /**
         * The replacement character.
         */
        replaceCharacter: pulumi.Input<number>;
        /**
         * The value indicating whether to replace separators in payload.
         */
        replaceSeparatorsInPayload: pulumi.Input<boolean>;
        /**
         * The segment terminator.
         */
        segmentTerminator: pulumi.Input<number>;
        /**
         * The segment terminator suffix.
         */
        segmentTerminatorSuffix: pulumi.Input<string>;
    }

    /**
     * The X12 message filter for odata query.
     */
    export interface X12MessageFilter {
        /**
         * The message filter type.
         */
        messageFilterType: pulumi.Input<string>;
    }

    /**
     * The X12 message filter for odata query.
     */
    export interface X12MessageFilterResponse {
        /**
         * The message filter type.
         */
        messageFilterType: pulumi.Input<string>;
    }

    /**
     * The X12 message identifier.
     */
    export interface X12MessageIdentifier {
        /**
         * The message id.
         */
        messageId: pulumi.Input<string>;
    }

    /**
     * The X12 message identifier.
     */
    export interface X12MessageIdentifierResponse {
        /**
         * The message id.
         */
        messageId: pulumi.Input<string>;
    }

    /**
     * The X12 one-way agreement.
     */
    export interface X12OneWayAgreement {
        /**
         * The X12 protocol settings.
         */
        protocolSettings: pulumi.Input<inputs.logic.X12ProtocolSettings>;
        /**
         * The receiver business identity
         */
        receiverBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentity>;
        /**
         * The sender business identity
         */
        senderBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentity>;
    }

    /**
     * The X12 one-way agreement.
     */
    export interface X12OneWayAgreementResponse {
        /**
         * The X12 protocol settings.
         */
        protocolSettings: pulumi.Input<inputs.logic.X12ProtocolSettingsResponse>;
        /**
         * The receiver business identity
         */
        receiverBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentityResponse>;
        /**
         * The sender business identity
         */
        senderBusinessIdentity: pulumi.Input<inputs.logic.BusinessIdentityResponse>;
    }

    /**
     * The X12 processing settings.
     */
    export interface X12ProcessingSettings {
        /**
         * The value indicating whether to convert numerical type to implied decimal.
         */
        convertImpliedDecimal: pulumi.Input<boolean>;
        /**
         * The value indicating whether to create empty xml tags for trailing separators.
         */
        createEmptyXmlTagsForTrailingSeparators: pulumi.Input<boolean>;
        /**
         * The value indicating whether to mask security information.
         */
        maskSecurityInfo: pulumi.Input<boolean>;
        /**
         * The value indicating whether to preserve interchange.
         */
        preserveInterchange: pulumi.Input<boolean>;
        /**
         * The value indicating whether to suspend interchange on error.
         */
        suspendInterchangeOnError: pulumi.Input<boolean>;
        /**
         * The value indicating whether to use dot as decimal separator.
         */
        useDotAsDecimalSeparator: pulumi.Input<boolean>;
    }

    /**
     * The X12 processing settings.
     */
    export interface X12ProcessingSettingsResponse {
        /**
         * The value indicating whether to convert numerical type to implied decimal.
         */
        convertImpliedDecimal: pulumi.Input<boolean>;
        /**
         * The value indicating whether to create empty xml tags for trailing separators.
         */
        createEmptyXmlTagsForTrailingSeparators: pulumi.Input<boolean>;
        /**
         * The value indicating whether to mask security information.
         */
        maskSecurityInfo: pulumi.Input<boolean>;
        /**
         * The value indicating whether to preserve interchange.
         */
        preserveInterchange: pulumi.Input<boolean>;
        /**
         * The value indicating whether to suspend interchange on error.
         */
        suspendInterchangeOnError: pulumi.Input<boolean>;
        /**
         * The value indicating whether to use dot as decimal separator.
         */
        useDotAsDecimalSeparator: pulumi.Input<boolean>;
    }

    /**
     * The X12 agreement protocol settings.
     */
    export interface X12ProtocolSettings {
        /**
         * The X12 acknowledgment settings.
         */
        acknowledgementSettings: pulumi.Input<inputs.logic.X12AcknowledgementSettings>;
        /**
         * The X12 envelope override settings.
         */
        envelopeOverrides?: pulumi.Input<pulumi.Input<inputs.logic.X12EnvelopeOverride>[]>;
        /**
         * The X12 envelope settings.
         */
        envelopeSettings: pulumi.Input<inputs.logic.X12EnvelopeSettings>;
        /**
         * The X12 framing settings.
         */
        framingSettings: pulumi.Input<inputs.logic.X12FramingSettings>;
        /**
         * The X12 message filter.
         */
        messageFilter: pulumi.Input<inputs.logic.X12MessageFilter>;
        /**
         * The X12 message filter list.
         */
        messageFilterList?: pulumi.Input<pulumi.Input<inputs.logic.X12MessageIdentifier>[]>;
        /**
         * The X12 processing settings.
         */
        processingSettings: pulumi.Input<inputs.logic.X12ProcessingSettings>;
        /**
         * The X12 schema references.
         */
        schemaReferences: pulumi.Input<pulumi.Input<inputs.logic.X12SchemaReference>[]>;
        /**
         * The X12 security settings.
         */
        securitySettings: pulumi.Input<inputs.logic.X12SecuritySettings>;
        /**
         * The X12 validation override settings.
         */
        validationOverrides?: pulumi.Input<pulumi.Input<inputs.logic.X12ValidationOverride>[]>;
        /**
         * The X12 validation settings.
         */
        validationSettings: pulumi.Input<inputs.logic.X12ValidationSettings>;
        /**
         * The X12 delimiter override settings.
         */
        x12DelimiterOverrides?: pulumi.Input<pulumi.Input<inputs.logic.X12DelimiterOverrides>[]>;
    }

    /**
     * The X12 agreement protocol settings.
     */
    export interface X12ProtocolSettingsResponse {
        /**
         * The X12 acknowledgment settings.
         */
        acknowledgementSettings: pulumi.Input<inputs.logic.X12AcknowledgementSettingsResponse>;
        /**
         * The X12 envelope override settings.
         */
        envelopeOverrides?: pulumi.Input<pulumi.Input<inputs.logic.X12EnvelopeOverrideResponse>[]>;
        /**
         * The X12 envelope settings.
         */
        envelopeSettings: pulumi.Input<inputs.logic.X12EnvelopeSettingsResponse>;
        /**
         * The X12 framing settings.
         */
        framingSettings: pulumi.Input<inputs.logic.X12FramingSettingsResponse>;
        /**
         * The X12 message filter.
         */
        messageFilter: pulumi.Input<inputs.logic.X12MessageFilterResponse>;
        /**
         * The X12 message filter list.
         */
        messageFilterList?: pulumi.Input<pulumi.Input<inputs.logic.X12MessageIdentifierResponse>[]>;
        /**
         * The X12 processing settings.
         */
        processingSettings: pulumi.Input<inputs.logic.X12ProcessingSettingsResponse>;
        /**
         * The X12 schema references.
         */
        schemaReferences: pulumi.Input<pulumi.Input<inputs.logic.X12SchemaReferenceResponse>[]>;
        /**
         * The X12 security settings.
         */
        securitySettings: pulumi.Input<inputs.logic.X12SecuritySettingsResponse>;
        /**
         * The X12 validation override settings.
         */
        validationOverrides?: pulumi.Input<pulumi.Input<inputs.logic.X12ValidationOverrideResponse>[]>;
        /**
         * The X12 validation settings.
         */
        validationSettings: pulumi.Input<inputs.logic.X12ValidationSettingsResponse>;
        /**
         * The X12 delimiter override settings.
         */
        x12DelimiterOverrides?: pulumi.Input<pulumi.Input<inputs.logic.X12DelimiterOverridesResponse>[]>;
    }

    /**
     * The X12 schema reference.
     */
    export interface X12SchemaReference {
        /**
         * The message id.
         */
        messageId: pulumi.Input<string>;
        /**
         * The schema name.
         */
        schemaName: pulumi.Input<string>;
        /**
         * The schema version.
         */
        schemaVersion: pulumi.Input<string>;
        /**
         * The sender application id.
         */
        senderApplicationId?: pulumi.Input<string>;
    }

    /**
     * The X12 schema reference.
     */
    export interface X12SchemaReferenceResponse {
        /**
         * The message id.
         */
        messageId: pulumi.Input<string>;
        /**
         * The schema name.
         */
        schemaName: pulumi.Input<string>;
        /**
         * The schema version.
         */
        schemaVersion: pulumi.Input<string>;
        /**
         * The sender application id.
         */
        senderApplicationId?: pulumi.Input<string>;
    }

    /**
     * The X12 agreement security settings.
     */
    export interface X12SecuritySettings {
        /**
         * The authorization qualifier.
         */
        authorizationQualifier: pulumi.Input<string>;
        /**
         * The authorization value.
         */
        authorizationValue?: pulumi.Input<string>;
        /**
         * The password value.
         */
        passwordValue?: pulumi.Input<string>;
        /**
         * The security qualifier.
         */
        securityQualifier: pulumi.Input<string>;
    }

    /**
     * The X12 agreement security settings.
     */
    export interface X12SecuritySettingsResponse {
        /**
         * The authorization qualifier.
         */
        authorizationQualifier: pulumi.Input<string>;
        /**
         * The authorization value.
         */
        authorizationValue?: pulumi.Input<string>;
        /**
         * The password value.
         */
        passwordValue?: pulumi.Input<string>;
        /**
         * The security qualifier.
         */
        securityQualifier: pulumi.Input<string>;
    }

    /**
     * The X12 validation override settings.
     */
    export interface X12ValidationOverride {
        /**
         * The value indicating whether to allow leading and trailing spaces and zeroes.
         */
        allowLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The message id on which the validation settings has to be applied.
         */
        messageId: pulumi.Input<string>;
        /**
         * The trailing separator policy.
         */
        trailingSeparatorPolicy: pulumi.Input<string>;
        /**
         * The value indicating whether to trim leading and trailing spaces and zeroes.
         */
        trimLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate character Set.
         */
        validateCharacterSet: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate EDI types.
         */
        validateEDITypes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate XSD types.
         */
        validateXSDTypes: pulumi.Input<boolean>;
    }

    /**
     * The X12 validation override settings.
     */
    export interface X12ValidationOverrideResponse {
        /**
         * The value indicating whether to allow leading and trailing spaces and zeroes.
         */
        allowLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The message id on which the validation settings has to be applied.
         */
        messageId: pulumi.Input<string>;
        /**
         * The trailing separator policy.
         */
        trailingSeparatorPolicy: pulumi.Input<string>;
        /**
         * The value indicating whether to trim leading and trailing spaces and zeroes.
         */
        trimLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate character Set.
         */
        validateCharacterSet: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate EDI types.
         */
        validateEDITypes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate XSD types.
         */
        validateXSDTypes: pulumi.Input<boolean>;
    }

    /**
     * The X12 agreement validation settings.
     */
    export interface X12ValidationSettings {
        /**
         * The value indicating whether to allow leading and trailing spaces and zeroes.
         */
        allowLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate group control number.
         */
        checkDuplicateGroupControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate interchange control number.
         */
        checkDuplicateInterchangeControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate transaction set control number.
         */
        checkDuplicateTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The validity period of interchange control number.
         */
        interchangeControlNumberValidityDays: pulumi.Input<number>;
        /**
         * The trailing separator policy.
         */
        trailingSeparatorPolicy: pulumi.Input<string>;
        /**
         * The value indicating whether to trim leading and trailing spaces and zeroes.
         */
        trimLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate character set in the message.
         */
        validateCharacterSet: pulumi.Input<boolean>;
        /**
         * The value indicating whether to Whether to validate EDI types.
         */
        validateEDITypes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to Whether to validate XSD types.
         */
        validateXSDTypes: pulumi.Input<boolean>;
    }

    /**
     * The X12 agreement validation settings.
     */
    export interface X12ValidationSettingsResponse {
        /**
         * The value indicating whether to allow leading and trailing spaces and zeroes.
         */
        allowLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate group control number.
         */
        checkDuplicateGroupControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate interchange control number.
         */
        checkDuplicateInterchangeControlNumber: pulumi.Input<boolean>;
        /**
         * The value indicating whether to check for duplicate transaction set control number.
         */
        checkDuplicateTransactionSetControlNumber: pulumi.Input<boolean>;
        /**
         * The validity period of interchange control number.
         */
        interchangeControlNumberValidityDays: pulumi.Input<number>;
        /**
         * The trailing separator policy.
         */
        trailingSeparatorPolicy: pulumi.Input<string>;
        /**
         * The value indicating whether to trim leading and trailing spaces and zeroes.
         */
        trimLeadingAndTrailingSpacesAndZeroes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to validate character set in the message.
         */
        validateCharacterSet: pulumi.Input<boolean>;
        /**
         * The value indicating whether to Whether to validate EDI types.
         */
        validateEDITypes: pulumi.Input<boolean>;
        /**
         * The value indicating whether to Whether to validate XSD types.
         */
        validateXSDTypes: pulumi.Input<boolean>;
    }
}

export namespace machinelearning {
    /**
     * Describes the access location for a blob.
     */
    export interface BlobLocation {
        /**
         * Access credentials for the blob, if applicable (e.g. blob specified by storage account connection string + blob URI)
         */
        credentials?: pulumi.Input<string>;
        /**
         * The URI from which the blob is accessible from. For example, aml://abc for system assets or https://xyz for user assets or payload.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Describes the access location for a blob.
     */
    export interface BlobLocationResponse {
        /**
         * Access credentials for the blob, if applicable (e.g. blob specified by storage account connection string + blob URI)
         */
        credentials?: pulumi.Input<string>;
        /**
         * The URI from which the blob is accessible from. For example, aml://abc for system assets or https://xyz for user assets or payload.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Information about the machine learning commitment plan associated with the web service.
     */
    export interface CommitmentPlan {
        /**
         * Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
         */
        id: pulumi.Input<string>;
    }

    /**
     * Information about the machine learning commitment plan associated with the web service.
     */
    export interface CommitmentPlanResponse {
        /**
         * Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
         */
        id: pulumi.Input<string>;
    }

    /**
     * Diagnostics settings for an Azure ML web service.
     */
    export interface DiagnosticsConfiguration {
        /**
         * Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
         */
        expiry?: pulumi.Input<string>;
        /**
         * Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
         */
        level: pulumi.Input<string>;
    }

    /**
     * Diagnostics settings for an Azure ML web service.
     */
    export interface DiagnosticsConfigurationResponse {
        /**
         * Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
         */
        expiry?: pulumi.Input<string>;
        /**
         * Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
         */
        level: pulumi.Input<string>;
    }

    /**
     * Sample input data for the service's input(s).
     */
    export interface ExampleRequest {
        /**
         * Sample input data for the web service's global parameters
         */
        globalParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
         */
        inputs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Sample input data for the service's input(s).
     */
    export interface ExampleRequestResponse {
        /**
         * Sample input data for the web service's global parameters
         */
        globalParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
         */
        inputs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Information about the machine learning workspace containing the experiment that is source for the web service.
     */
    export interface MachineLearningWorkspace {
        /**
         * Specifies the workspace ID of the machine learning workspace associated with the web service
         */
        id: pulumi.Input<string>;
    }

    /**
     * Information about the machine learning workspace containing the experiment that is source for the web service.
     */
    export interface MachineLearningWorkspaceResponse {
        /**
         * Specifies the workspace ID of the machine learning workspace associated with the web service
         */
        id: pulumi.Input<string>;
    }

    /**
     * Holds the available configuration options for an Azure ML web service endpoint.
     */
    export interface RealtimeConfiguration {
        /**
         * Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.
         */
        maxConcurrentCalls?: pulumi.Input<number>;
    }

    /**
     * Holds the available configuration options for an Azure ML web service endpoint.
     */
    export interface RealtimeConfigurationResponse {
        /**
         * Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.
         */
        maxConcurrentCalls?: pulumi.Input<number>;
    }

    /**
     * The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/
     */
    export interface ServiceInputOutputSpecification {
        /**
         * The description of the Swagger schema.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
         */
        properties: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The title of your Swagger schema.
         */
        title?: pulumi.Input<string>;
        /**
         * The type of the entity described in swagger. Always 'object'.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/
     */
    export interface ServiceInputOutputSpecificationResponse {
        /**
         * The description of the Swagger schema.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
         */
        properties: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The title of your Swagger schema.
         */
        title?: pulumi.Input<string>;
        /**
         * The type of the entity described in swagger. Always 'object'.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Sku of the resource
     */
    export interface Sku {
        /**
         * Name of the sku
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of the sku like Basic or Enterprise
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Sku of the resource
     */
    export interface SkuResponse {
        /**
         * Name of the sku
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of the sku like Basic or Enterprise
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Access information for a storage account.
     */
    export interface StorageAccount {
        /**
         * Specifies the key used to access the storage account.
         */
        key?: pulumi.Input<string>;
        /**
         * Specifies the name of the storage account.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Access information for a storage account.
     */
    export interface StorageAccountResponse {
        /**
         * Specifies the key used to access the storage account.
         */
        key?: pulumi.Input<string>;
        /**
         * Specifies the name of the storage account.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Access keys for the web service calls.
     */
    export interface WebServiceKeys {
        /**
         * The primary access key.
         */
        primary?: pulumi.Input<string>;
        /**
         * The secondary access key.
         */
        secondary?: pulumi.Input<string>;
    }

    /**
     * Access keys for the web service calls.
     */
    export interface WebServiceKeysResponse {
        /**
         * The primary access key.
         */
        primary?: pulumi.Input<string>;
        /**
         * The secondary access key.
         */
        secondary?: pulumi.Input<string>;
    }

    /**
     * The set of properties specific to the Azure ML web service resource.
     */
    export interface WebServiceProperties {
        /**
         * Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
         */
        assets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.
         */
        commitmentPlan?: pulumi.Input<inputs.machinelearning.CommitmentPlan>;
        /**
         * The description of the web service.
         */
        description?: pulumi.Input<string>;
        /**
         * Settings controlling the diagnostics traces collection for the web service.
         */
        diagnostics?: pulumi.Input<inputs.machinelearning.DiagnosticsConfiguration>;
        /**
         * Defines sample input data for one or more of the service's inputs.
         */
        exampleRequest?: pulumi.Input<inputs.machinelearning.ExampleRequest>;
        /**
         * When set to true, sample data is included in the web service's swagger definition. The default value is true.
         */
        exposeSampleData?: pulumi.Input<boolean>;
        /**
         * Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
         */
        input?: pulumi.Input<inputs.machinelearning.ServiceInputOutputSpecification>;
        /**
         * Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.
         */
        keys?: pulumi.Input<inputs.machinelearning.WebServiceKeys>;
        /**
         * Specifies the Machine Learning workspace containing the experiment that is source for the web service.
         */
        machineLearningWorkspace?: pulumi.Input<inputs.machinelearning.MachineLearningWorkspace>;
        /**
         * Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification.
         */
        output?: pulumi.Input<inputs.machinelearning.ServiceInputOutputSpecification>;
        /**
         * Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
         */
        packageType: pulumi.Input<string>;
        /**
         * The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.
         */
        payloadsInBlobStorage?: pulumi.Input<boolean>;
        /**
         * The URI of the payload blob. This parameter contains a value only if the payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
         */
        payloadsLocation?: pulumi.Input<inputs.machinelearning.BlobLocation>;
        /**
         * When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
         */
        readOnly?: pulumi.Input<boolean>;
        /**
         * Contains the configuration settings for the web service endpoint.
         */
        realtimeConfiguration?: pulumi.Input<inputs.machinelearning.RealtimeConfiguration>;
        /**
         * Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
         */
        storageAccount?: pulumi.Input<inputs.machinelearning.StorageAccount>;
        /**
         * The title of the web service.
         */
        title?: pulumi.Input<string>;
    }

    /**
     * The set of properties specific to the Azure ML web service resource.
     */
    export interface WebServicePropertiesResponse {
        /**
         * Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
         */
        assets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.
         */
        commitmentPlan?: pulumi.Input<inputs.machinelearning.CommitmentPlanResponse>;
        /**
         * Read Only: The date and time when the web service was created.
         */
        createdOn: pulumi.Input<string>;
        /**
         * The description of the web service.
         */
        description?: pulumi.Input<string>;
        /**
         * Settings controlling the diagnostics traces collection for the web service.
         */
        diagnostics?: pulumi.Input<inputs.machinelearning.DiagnosticsConfigurationResponse>;
        /**
         * Defines sample input data for one or more of the service's inputs.
         */
        exampleRequest?: pulumi.Input<inputs.machinelearning.ExampleRequestResponse>;
        /**
         * When set to true, sample data is included in the web service's swagger definition. The default value is true.
         */
        exposeSampleData?: pulumi.Input<boolean>;
        /**
         * Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
         */
        input?: pulumi.Input<inputs.machinelearning.ServiceInputOutputSpecificationResponse>;
        /**
         * Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.
         */
        keys?: pulumi.Input<inputs.machinelearning.WebServiceKeysResponse>;
        /**
         * Specifies the Machine Learning workspace containing the experiment that is source for the web service.
         */
        machineLearningWorkspace?: pulumi.Input<inputs.machinelearning.MachineLearningWorkspaceResponse>;
        /**
         * Read Only: The date and time when the web service was last modified.
         */
        modifiedOn: pulumi.Input<string>;
        /**
         * Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification.
         */
        output?: pulumi.Input<inputs.machinelearning.ServiceInputOutputSpecificationResponse>;
        /**
         * Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
         */
        packageType: pulumi.Input<string>;
        /**
         * The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.
         */
        payloadsInBlobStorage?: pulumi.Input<boolean>;
        /**
         * The URI of the payload blob. This parameter contains a value only if the payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
         */
        payloadsLocation?: pulumi.Input<inputs.machinelearning.BlobLocationResponse>;
        /**
         * Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
         */
        readOnly?: pulumi.Input<boolean>;
        /**
         * Contains the configuration settings for the web service endpoint.
         */
        realtimeConfiguration?: pulumi.Input<inputs.machinelearning.RealtimeConfigurationResponse>;
        /**
         * Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
         */
        storageAccount?: pulumi.Input<inputs.machinelearning.StorageAccountResponse>;
        /**
         * Read Only: Contains the URI of the swagger spec associated with this web service.
         */
        swaggerLocation: pulumi.Input<string>;
        /**
         * The title of the web service.
         */
        title?: pulumi.Input<string>;
    }

    /**
     * The properties of a machine learning workspace.
     */
    export interface WorkspaceProperties {
        /**
         * The key vault identifier used for encrypted workspaces.
         */
        keyVaultIdentifierId?: pulumi.Input<string>;
        /**
         * The email id of the owner for this workspace.
         */
        ownerEmail: pulumi.Input<string>;
        /**
         * The fully qualified arm id of the storage account associated with this workspace.
         */
        userStorageAccountId: pulumi.Input<string>;
    }

    /**
     * The properties of a machine learning workspace.
     */
    export interface WorkspacePropertiesResponse {
        /**
         * The creation time for this workspace resource.
         */
        creationTime: pulumi.Input<string>;
        /**
         * The key vault identifier used for encrypted workspaces.
         */
        keyVaultIdentifierId?: pulumi.Input<string>;
        /**
         * The email id of the owner for this workspace.
         */
        ownerEmail: pulumi.Input<string>;
        /**
         * The regional endpoint for the machine learning studio service which hosts this workspace.
         */
        studioEndpoint: pulumi.Input<string>;
        /**
         * The fully qualified arm id of the storage account associated with this workspace.
         */
        userStorageAccountId: pulumi.Input<string>;
        /**
         * The immutable id associated with this workspace.
         */
        workspaceId: pulumi.Input<string>;
        /**
         * The current state of workspace resource.
         */
        workspaceState: pulumi.Input<string>;
        /**
         * The type of this workspace.
         */
        workspaceType: pulumi.Input<string>;
    }
}

export namespace machinelearningservices {
    /**
     * Machine Learning compute object.
     */
    export interface Compute {
        /**
         * Location for the underlying compute
         */
        computeLocation?: pulumi.Input<string>;
        /**
         * The type of compute
         */
        computeType: pulumi.Input<string>;
        /**
         * The description of the Machine Learning compute.
         */
        description?: pulumi.Input<string>;
        /**
         * ARM resource id of the underlying compute
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * Machine Learning compute object.
     */
    export interface ComputeResponse {
        /**
         * Location for the underlying compute
         */
        computeLocation?: pulumi.Input<string>;
        /**
         * The type of compute
         */
        computeType: pulumi.Input<string>;
        /**
         * The date and time when the compute was created.
         */
        createdOn: pulumi.Input<string>;
        /**
         * The description of the Machine Learning compute.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
         */
        isAttachedCompute: pulumi.Input<boolean>;
        /**
         * The date and time when the compute was last modified.
         */
        modifiedOn: pulumi.Input<string>;
        /**
         * Errors during provisioning
         */
        provisioningErrors: pulumi.Input<pulumi.Input<inputs.machinelearningservices.MachineLearningServiceErrorResponse>[]>;
        /**
         * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * ARM resource id of the underlying compute
         */
        resourceId?: pulumi.Input<string>;
    }

    export interface EncryptionProperty {
        /**
         * Customer Key vault properties.
         */
        keyVaultProperties: pulumi.Input<inputs.machinelearningservices.KeyVaultProperties>;
        /**
         * Indicates whether or not the encryption is enabled for the workspace.
         */
        status: pulumi.Input<string>;
    }

    export interface EncryptionPropertyResponse {
        /**
         * Customer Key vault properties.
         */
        keyVaultProperties: pulumi.Input<inputs.machinelearningservices.KeyVaultPropertiesResponse>;
        /**
         * Indicates whether or not the encryption is enabled for the workspace.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Error detail information.
     */
    export interface ErrorDetailResponse {
        /**
         * Error code.
         */
        code: pulumi.Input<string>;
        /**
         * Error message.
         */
        message: pulumi.Input<string>;
    }

    /**
     * Error response information.
     */
    export interface ErrorResponseResponse {
        /**
         * Error code.
         */
        code: pulumi.Input<string>;
        /**
         * An array of error detail objects.
         */
        details: pulumi.Input<pulumi.Input<inputs.machinelearningservices.ErrorDetailResponse>[]>;
        /**
         * Error message.
         */
        message: pulumi.Input<string>;
    }

    /**
     * Identity for the resource.
     */
    export interface Identity {
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
        /**
         * The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the resource.
     */
    export interface IdentityResponse {
        /**
         * The principal ID of resource identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant ID of resource.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
        /**
         * The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    export interface KeyVaultProperties {
        /**
         * For future use - The client id of the identity which will be used to access key vault.
         */
        identityClientId?: pulumi.Input<string>;
        /**
         * Key vault uri to access the encryption key.
         */
        keyIdentifier: pulumi.Input<string>;
        /**
         * The ArmId of the keyVault where the customer owned encryption key is present.
         */
        keyVaultArmId: pulumi.Input<string>;
    }

    export interface KeyVaultPropertiesResponse {
        /**
         * For future use - The client id of the identity which will be used to access key vault.
         */
        identityClientId?: pulumi.Input<string>;
        /**
         * Key vault uri to access the encryption key.
         */
        keyIdentifier: pulumi.Input<string>;
        /**
         * The ArmId of the keyVault where the customer owned encryption key is present.
         */
        keyVaultArmId: pulumi.Input<string>;
    }

    /**
     * Wrapper for error response to follow ARM guidelines.
     */
    export interface MachineLearningServiceErrorResponse {
        /**
         * The error response.
         */
        error: pulumi.Input<inputs.machinelearningservices.ErrorResponseResponse>;
    }

    export interface NotebookPreparationErrorResponse {
        errorMessage?: pulumi.Input<string>;
        statusCode?: pulumi.Input<number>;
    }

    export interface NotebookResourceInfoResponse {
        fqdn?: pulumi.Input<string>;
        /**
         * The error that occurs when preparing notebook.
         */
        notebookPreparationError?: pulumi.Input<inputs.machinelearningservices.NotebookPreparationErrorResponse>;
        /**
         * the data plane resourceId that used to initialize notebook component
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpoint {
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.machinelearningservices.PrivateEndpoint>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.machinelearningservices.PrivateLinkServiceConnectionState>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.machinelearningservices.PrivateEndpointResponse>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.machinelearningservices.PrivateLinkServiceConnectionStateResponse>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint Connection resource.
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * Specifies the resource ID.
         */
        id: pulumi.Input<string>;
        /**
         * The identity of the resource.
         */
        identity?: pulumi.Input<inputs.machinelearningservices.IdentityResponse>;
        /**
         * Specifies the location of the resource.
         */
        location?: pulumi.Input<string>;
        /**
         * Specifies the name of the resource.
         */
        name: pulumi.Input<string>;
        /**
         * Resource properties.
         */
        properties?: pulumi.Input<inputs.machinelearningservices.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The sku of the workspace.
         */
        sku?: pulumi.Input<inputs.machinelearningservices.SkuResponse>;
        /**
         * Contains resource tags defined as key/value pairs.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpointResponse {
        /**
         * The ARM identifier for Private Endpoint
         */
        id: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    export interface SharedPrivateLinkResource {
        /**
         * Unique name of the private link.
         */
        name?: pulumi.Input<string>;
        /**
         * Resource properties.
         */
        properties?: pulumi.Input<inputs.machinelearningservices.SharedPrivateLinkResourceProperty>;
    }

    /**
     * Properties of a shared private link resource.
     */
    export interface SharedPrivateLinkResourceProperty {
        /**
         * The private link resource group id.
         */
        groupId?: pulumi.Input<string>;
        /**
         * The resource id that private link links to.
         */
        privateLinkResourceId?: pulumi.Input<string>;
        /**
         * Request message.
         */
        requestMessage?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Properties of a shared private link resource.
     */
    export interface SharedPrivateLinkResourcePropertyResponse {
        /**
         * The private link resource group id.
         */
        groupId?: pulumi.Input<string>;
        /**
         * The resource id that private link links to.
         */
        privateLinkResourceId?: pulumi.Input<string>;
        /**
         * Request message.
         */
        requestMessage?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    export interface SharedPrivateLinkResourceResponse {
        /**
         * Unique name of the private link.
         */
        name?: pulumi.Input<string>;
        /**
         * Resource properties.
         */
        properties?: pulumi.Input<inputs.machinelearningservices.SharedPrivateLinkResourcePropertyResponse>;
    }

    /**
     * Sku of the resource
     */
    export interface Sku {
        /**
         * Name of the sku
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of the sku like Basic or Enterprise
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Sku of the resource
     */
    export interface SkuResponse {
        /**
         * Name of the sku
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of the sku like Basic or Enterprise
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The properties of a machine learning workspace.
     */
    export interface WorkspaceProperties {
        /**
         * The flag to indicate whether to allow public access when behind VNet.
         */
        allowPublicAccessWhenBehindVnet?: pulumi.Input<boolean>;
        /**
         * ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created
         */
        applicationInsights?: pulumi.Input<string>;
        /**
         * ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created
         */
        containerRegistry?: pulumi.Input<string>;
        /**
         * The description of this workspace.
         */
        description?: pulumi.Input<string>;
        /**
         * Url for the discovery service to identify regional endpoints for machine learning experimentation services
         */
        discoveryUrl?: pulumi.Input<string>;
        /**
         * The encryption settings of Azure ML workspace.
         */
        encryption?: pulumi.Input<inputs.machinelearningservices.EncryptionProperty>;
        /**
         * The friendly name for this workspace. This name in mutable
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
         */
        hbiWorkspace?: pulumi.Input<boolean>;
        /**
         * The compute name for image build
         */
        imageBuildCompute?: pulumi.Input<string>;
        /**
         * ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
         */
        keyVault?: pulumi.Input<string>;
        /**
         * The list of shared private link resources in this workspace.
         */
        sharedPrivateLinkResources?: pulumi.Input<pulumi.Input<inputs.machinelearningservices.SharedPrivateLinkResource>[]>;
        /**
         * ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
         */
        storageAccount?: pulumi.Input<string>;
    }

    /**
     * The properties of a machine learning workspace.
     */
    export interface WorkspacePropertiesResponse {
        /**
         * The flag to indicate whether to allow public access when behind VNet.
         */
        allowPublicAccessWhenBehindVnet?: pulumi.Input<boolean>;
        /**
         * ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created
         */
        applicationInsights?: pulumi.Input<string>;
        /**
         * ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created
         */
        containerRegistry?: pulumi.Input<string>;
        /**
         * The creation time of the machine learning workspace in ISO8601 format.
         */
        creationTime: pulumi.Input<string>;
        /**
         * The description of this workspace.
         */
        description?: pulumi.Input<string>;
        /**
         * Url for the discovery service to identify regional endpoints for machine learning experimentation services
         */
        discoveryUrl?: pulumi.Input<string>;
        /**
         * The encryption settings of Azure ML workspace.
         */
        encryption?: pulumi.Input<inputs.machinelearningservices.EncryptionPropertyResponse>;
        /**
         * The friendly name for this workspace. This name in mutable
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
         */
        hbiWorkspace?: pulumi.Input<boolean>;
        /**
         * The compute name for image build
         */
        imageBuildCompute?: pulumi.Input<string>;
        /**
         * ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
         */
        keyVault?: pulumi.Input<string>;
        /**
         * The notebook info of Azure ML workspace.
         */
        notebookInfo: pulumi.Input<inputs.machinelearningservices.NotebookResourceInfoResponse>;
        /**
         * The list of private endpoint connections in the workspace.
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.machinelearningservices.PrivateEndpointConnectionResponse>[]>;
        /**
         * Count of private connections in the workspace
         */
        privateLinkCount: pulumi.Input<number>;
        /**
         * The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
         */
        serviceProvisionedResourceGroup: pulumi.Input<string>;
        /**
         * The list of shared private link resources in this workspace.
         */
        sharedPrivateLinkResources?: pulumi.Input<pulumi.Input<inputs.machinelearningservices.SharedPrivateLinkResourceResponse>[]>;
        /**
         * ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
         */
        storageAccount?: pulumi.Input<string>;
        /**
         * The immutable id associated with this workspace.
         */
        workspaceId: pulumi.Input<string>;
    }
}

export namespace maintenance {
    /**
     * Properties for maintenance configuration
     */
    export interface MaintenanceConfigurationProperties {
        /**
         * Gets or sets extensionProperties of the maintenanceConfiguration. This is for future use only and would be a set of key value pairs for additional information e.g. whether to follow SDP etc.
         */
        extensionProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets maintenanceScope of the configuration. It represent the impact area of the maintenance
         */
        maintenanceScope?: pulumi.Input<string>;
        /**
         * Gets or sets namespace of the resource e.g. Microsoft.Maintenance or Microsoft.Sql
         */
        namespace?: pulumi.Input<string>;
    }

    /**
     * Properties for maintenance configuration
     */
    export interface MaintenanceConfigurationPropertiesResponse {
        /**
         * Gets or sets extensionProperties of the maintenanceConfiguration. This is for future use only and would be a set of key value pairs for additional information e.g. whether to follow SDP etc.
         */
        extensionProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets maintenanceScope of the configuration. It represent the impact area of the maintenance
         */
        maintenanceScope?: pulumi.Input<string>;
        /**
         * Gets or sets namespace of the resource e.g. Microsoft.Maintenance or Microsoft.Sql
         */
        namespace?: pulumi.Input<string>;
    }
}

export namespace managedidentity {
    /**
     * The properties associated with the user assigned identity.
     */
    export interface UserAssignedIdentityPropertiesResponse {
        /**
         * The id of the app associated with the identity. This is a random generated UUID by MSI.
         */
        clientId: pulumi.Input<string>;
        /**
         * The id of the service principal object associated with the created identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The id of the tenant which the identity belongs to.
         */
        tenantId: pulumi.Input<string>;
    }
}

export namespace maps {
    /**
     * Additional Map account properties
     */
    export interface MapsAccountPropertiesResponse {
    }

    /**
     * The SKU of the Maps Account.
     */
    export interface Sku {
        /**
         * The name of the SKU, in standard format (such as S0).
         */
        name: pulumi.Input<string>;
    }

    /**
     * The SKU of the Maps Account.
     */
    export interface SkuResponse {
        /**
         * The name of the SKU, in standard format (such as S0).
         */
        name: pulumi.Input<string>;
        /**
         * Gets the sku tier. This is based on the SKU name.
         */
        tier: pulumi.Input<string>;
    }
}

export namespace media {
    export interface AccountEncryption {
        /**
         * The properties of the key used to encrypt the account.
         */
        keyVaultProperties?: pulumi.Input<inputs.media.KeyVaultProperties>;
        /**
         * The type of key used to encrypt the Account Key.
         */
        type: pulumi.Input<string>;
    }

    export interface AccountEncryptionResponse {
        /**
         * The properties of the key used to encrypt the account.
         */
        keyVaultProperties?: pulumi.Input<inputs.media.KeyVaultPropertiesResponse>;
        /**
         * The type of key used to encrypt the Account Key.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Akamai access control
     */
    export interface AkamaiAccessControl {
        /**
         * authentication key list
         */
        akamaiSignatureHeaderAuthenticationKeyList?: pulumi.Input<pulumi.Input<inputs.media.AkamaiSignatureHeaderAuthenticationKey>[]>;
    }

    /**
     * Akamai access control
     */
    export interface AkamaiAccessControlResponse {
        /**
         * authentication key list
         */
        akamaiSignatureHeaderAuthenticationKeyList?: pulumi.Input<pulumi.Input<inputs.media.AkamaiSignatureHeaderAuthenticationKeyResponse>[]>;
    }

    /**
     * Akamai Signature Header authentication key.
     */
    export interface AkamaiSignatureHeaderAuthenticationKey {
        /**
         * authentication key
         */
        base64Key?: pulumi.Input<string>;
        /**
         * The expiration time of the authentication key.
         */
        expiration?: pulumi.Input<string>;
        /**
         * identifier of the key
         */
        identifier?: pulumi.Input<string>;
    }

    /**
     * Akamai Signature Header authentication key.
     */
    export interface AkamaiSignatureHeaderAuthenticationKeyResponse {
        /**
         * authentication key
         */
        base64Key?: pulumi.Input<string>;
        /**
         * The expiration time of the authentication key.
         */
        expiration?: pulumi.Input<string>;
        /**
         * identifier of the key
         */
        identifier?: pulumi.Input<string>;
    }

    /**
     * The Asset properties.
     */
    export interface AssetProperties {
        /**
         * The alternate ID of the Asset.
         */
        alternateId?: pulumi.Input<string>;
        /**
         * The name of the asset blob container.
         */
        container?: pulumi.Input<string>;
        /**
         * The Asset description.
         */
        description?: pulumi.Input<string>;
        /**
         * The name of the storage account.
         */
        storageAccountName?: pulumi.Input<string>;
    }

    /**
     * The Asset properties.
     */
    export interface AssetPropertiesResponse {
        /**
         * The alternate ID of the Asset.
         */
        alternateId?: pulumi.Input<string>;
        /**
         * The Asset ID.
         */
        assetId: pulumi.Input<string>;
        /**
         * The name of the asset blob container.
         */
        container?: pulumi.Input<string>;
        /**
         * The creation date of the Asset.
         */
        created: pulumi.Input<string>;
        /**
         * The Asset description.
         */
        description?: pulumi.Input<string>;
        /**
         * The last modified date of the Asset.
         */
        lastModified: pulumi.Input<string>;
        /**
         * The name of the storage account.
         */
        storageAccountName?: pulumi.Input<string>;
        /**
         * The Asset encryption format. One of None or MediaStorageEncryption.
         */
        storageEncryptionFormat: pulumi.Input<string>;
    }

    /**
     * Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy
     */
    export interface CbcsDrmConfiguration {
        /**
         * FairPlay configurations
         */
        fairPlay?: pulumi.Input<inputs.media.StreamingPolicyFairPlayConfiguration>;
        /**
         * PlayReady configurations
         */
        playReady?: pulumi.Input<inputs.media.StreamingPolicyPlayReadyConfiguration>;
        /**
         * Widevine configurations
         */
        widevine?: pulumi.Input<inputs.media.StreamingPolicyWidevineConfiguration>;
    }

    /**
     * Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy
     */
    export interface CbcsDrmConfigurationResponse {
        /**
         * FairPlay configurations
         */
        fairPlay?: pulumi.Input<inputs.media.StreamingPolicyFairPlayConfigurationResponse>;
        /**
         * PlayReady configurations
         */
        playReady?: pulumi.Input<inputs.media.StreamingPolicyPlayReadyConfigurationResponse>;
        /**
         * Widevine configurations
         */
        widevine?: pulumi.Input<inputs.media.StreamingPolicyWidevineConfigurationResponse>;
    }

    /**
     * Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy
     */
    export interface CencDrmConfiguration {
        /**
         * PlayReady configurations
         */
        playReady?: pulumi.Input<inputs.media.StreamingPolicyPlayReadyConfiguration>;
        /**
         * Widevine configurations
         */
        widevine?: pulumi.Input<inputs.media.StreamingPolicyWidevineConfiguration>;
    }

    /**
     * Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy
     */
    export interface CencDrmConfigurationResponse {
        /**
         * PlayReady configurations
         */
        playReady?: pulumi.Input<inputs.media.StreamingPolicyPlayReadyConfigurationResponse>;
        /**
         * Widevine configurations
         */
        widevine?: pulumi.Input<inputs.media.StreamingPolicyWidevineConfigurationResponse>;
    }

    /**
     * Class for CommonEncryptionCbcs encryption scheme
     */
    export interface CommonEncryptionCbcs {
        /**
         * Representing which tracks should not be encrypted
         */
        clearTracks?: pulumi.Input<pulumi.Input<inputs.media.TrackSelection>[]>;
        /**
         * Representing default content key for each encryption scheme and separate content keys for specific tracks
         */
        contentKeys?: pulumi.Input<inputs.media.StreamingPolicyContentKeys>;
        /**
         * Configuration of DRMs for current encryption scheme
         */
        drm?: pulumi.Input<inputs.media.CbcsDrmConfiguration>;
        /**
         * Representing supported protocols
         */
        enabledProtocols?: pulumi.Input<inputs.media.EnabledProtocols>;
    }

    /**
     * Class for CommonEncryptionCbcs encryption scheme
     */
    export interface CommonEncryptionCbcsResponse {
        /**
         * Representing which tracks should not be encrypted
         */
        clearTracks?: pulumi.Input<pulumi.Input<inputs.media.TrackSelectionResponse>[]>;
        /**
         * Representing default content key for each encryption scheme and separate content keys for specific tracks
         */
        contentKeys?: pulumi.Input<inputs.media.StreamingPolicyContentKeysResponse>;
        /**
         * Configuration of DRMs for current encryption scheme
         */
        drm?: pulumi.Input<inputs.media.CbcsDrmConfigurationResponse>;
        /**
         * Representing supported protocols
         */
        enabledProtocols?: pulumi.Input<inputs.media.EnabledProtocolsResponse>;
    }

    /**
     * Class for envelope encryption scheme
     */
    export interface CommonEncryptionCenc {
        /**
         * Representing which tracks should not be encrypted
         */
        clearTracks?: pulumi.Input<pulumi.Input<inputs.media.TrackSelection>[]>;
        /**
         * Representing default content key for each encryption scheme and separate content keys for specific tracks
         */
        contentKeys?: pulumi.Input<inputs.media.StreamingPolicyContentKeys>;
        /**
         * Configuration of DRMs for CommonEncryptionCenc encryption scheme
         */
        drm?: pulumi.Input<inputs.media.CencDrmConfiguration>;
        /**
         * Representing supported protocols
         */
        enabledProtocols?: pulumi.Input<inputs.media.EnabledProtocols>;
    }

    /**
     * Class for envelope encryption scheme
     */
    export interface CommonEncryptionCencResponse {
        /**
         * Representing which tracks should not be encrypted
         */
        clearTracks?: pulumi.Input<pulumi.Input<inputs.media.TrackSelectionResponse>[]>;
        /**
         * Representing default content key for each encryption scheme and separate content keys for specific tracks
         */
        contentKeys?: pulumi.Input<inputs.media.StreamingPolicyContentKeysResponse>;
        /**
         * Configuration of DRMs for CommonEncryptionCenc encryption scheme
         */
        drm?: pulumi.Input<inputs.media.CencDrmConfigurationResponse>;
        /**
         * Representing supported protocols
         */
        enabledProtocols?: pulumi.Input<inputs.media.EnabledProtocolsResponse>;
    }

    /**
     * Base class for Content Key Policy configuration. A derived class must be used to create a configuration.
     */
    export interface ContentKeyPolicyConfiguration {
    }

    /**
     * Base class for Content Key Policy configuration. A derived class must be used to create a configuration.
     */
    export interface ContentKeyPolicyConfigurationResponse {
    }

    /**
     * Represents a policy option.
     */
    export interface ContentKeyPolicyOption {
        /**
         * The key delivery configuration.
         */
        configuration: pulumi.Input<inputs.media.ContentKeyPolicyConfiguration>;
        /**
         * The Policy Option description.
         */
        name?: pulumi.Input<string>;
        /**
         * The requirements that must be met to deliver keys with this configuration
         */
        restriction: pulumi.Input<inputs.media.ContentKeyPolicyRestriction>;
    }

    /**
     * Represents a policy option.
     */
    export interface ContentKeyPolicyOptionResponse {
        /**
         * The key delivery configuration.
         */
        configuration: pulumi.Input<inputs.media.ContentKeyPolicyConfigurationResponse>;
        /**
         * The Policy Option description.
         */
        name?: pulumi.Input<string>;
        /**
         * The legacy Policy Option ID.
         */
        policyOptionId: pulumi.Input<string>;
        /**
         * The requirements that must be met to deliver keys with this configuration
         */
        restriction: pulumi.Input<inputs.media.ContentKeyPolicyRestrictionResponse>;
    }

    /**
     * The properties of the Content Key Policy.
     */
    export interface ContentKeyPolicyProperties {
        /**
         * A description for the Policy.
         */
        description?: pulumi.Input<string>;
        /**
         * The Key Policy options.
         */
        options: pulumi.Input<pulumi.Input<inputs.media.ContentKeyPolicyOption>[]>;
    }

    /**
     * The properties of the Content Key Policy.
     */
    export interface ContentKeyPolicyPropertiesResponse {
        /**
         * The creation date of the Policy
         */
        created: pulumi.Input<string>;
        /**
         * A description for the Policy.
         */
        description?: pulumi.Input<string>;
        /**
         * The last modified date of the Policy
         */
        lastModified: pulumi.Input<string>;
        /**
         * The Key Policy options.
         */
        options: pulumi.Input<pulumi.Input<inputs.media.ContentKeyPolicyOptionResponse>[]>;
        /**
         * The legacy Policy ID.
         */
        policyId: pulumi.Input<string>;
    }

    /**
     * Base class for Content Key Policy restrictions. A derived class must be used to create a restriction.
     */
    export interface ContentKeyPolicyRestriction {
    }

    /**
     * Base class for Content Key Policy restrictions. A derived class must be used to create a restriction.
     */
    export interface ContentKeyPolicyRestrictionResponse {
    }

    /**
     * The client access policy.
     */
    export interface CrossSiteAccessPolicies {
        /**
         * The content of clientaccesspolicy.xml used by Silverlight.
         */
        clientAccessPolicy?: pulumi.Input<string>;
        /**
         * The content of crossdomain.xml used by Silverlight.
         */
        crossDomainPolicy?: pulumi.Input<string>;
    }

    /**
     * The client access policy.
     */
    export interface CrossSiteAccessPoliciesResponse {
        /**
         * The content of clientaccesspolicy.xml used by Silverlight.
         */
        clientAccessPolicy?: pulumi.Input<string>;
        /**
         * The content of crossdomain.xml used by Silverlight.
         */
        crossDomainPolicy?: pulumi.Input<string>;
    }

    /**
     * Class to specify properties of default content key for each encryption scheme
     */
    export interface DefaultKey {
        /**
         * Label can be used to specify Content Key when creating a Streaming Locator
         */
        label?: pulumi.Input<string>;
        /**
         * Policy used by Default Key
         */
        policyName?: pulumi.Input<string>;
    }

    /**
     * Class to specify properties of default content key for each encryption scheme
     */
    export interface DefaultKeyResponse {
        /**
         * Label can be used to specify Content Key when creating a Streaming Locator
         */
        label?: pulumi.Input<string>;
        /**
         * Policy used by Default Key
         */
        policyName?: pulumi.Input<string>;
    }

    /**
     * Class to specify which protocols are enabled
     */
    export interface EnabledProtocols {
        /**
         * Enable DASH protocol or not
         */
        dash: pulumi.Input<boolean>;
        /**
         * Enable Download protocol or not
         */
        download: pulumi.Input<boolean>;
        /**
         * Enable HLS protocol or not
         */
        hls: pulumi.Input<boolean>;
        /**
         * Enable SmoothStreaming protocol or not
         */
        smoothStreaming: pulumi.Input<boolean>;
    }

    /**
     * Class to specify which protocols are enabled
     */
    export interface EnabledProtocolsResponse {
        /**
         * Enable DASH protocol or not
         */
        dash: pulumi.Input<boolean>;
        /**
         * Enable Download protocol or not
         */
        download: pulumi.Input<boolean>;
        /**
         * Enable HLS protocol or not
         */
        hls: pulumi.Input<boolean>;
        /**
         * Enable SmoothStreaming protocol or not
         */
        smoothStreaming: pulumi.Input<boolean>;
    }

    /**
     * Class for EnvelopeEncryption encryption scheme
     */
    export interface EnvelopeEncryption {
        /**
         * Representing which tracks should not be encrypted
         */
        clearTracks?: pulumi.Input<pulumi.Input<inputs.media.TrackSelection>[]>;
        /**
         * Representing default content key for each encryption scheme and separate content keys for specific tracks
         */
        contentKeys?: pulumi.Input<inputs.media.StreamingPolicyContentKeys>;
        /**
         * Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
         */
        customKeyAcquisitionUrlTemplate?: pulumi.Input<string>;
        /**
         * Representing supported protocols
         */
        enabledProtocols?: pulumi.Input<inputs.media.EnabledProtocols>;
    }

    /**
     * Class for EnvelopeEncryption encryption scheme
     */
    export interface EnvelopeEncryptionResponse {
        /**
         * Representing which tracks should not be encrypted
         */
        clearTracks?: pulumi.Input<pulumi.Input<inputs.media.TrackSelectionResponse>[]>;
        /**
         * Representing default content key for each encryption scheme and separate content keys for specific tracks
         */
        contentKeys?: pulumi.Input<inputs.media.StreamingPolicyContentKeysResponse>;
        /**
         * Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
         */
        customKeyAcquisitionUrlTemplate?: pulumi.Input<string>;
        /**
         * Representing supported protocols
         */
        enabledProtocols?: pulumi.Input<inputs.media.EnabledProtocolsResponse>;
    }

    /**
     * The class to specify one track property condition.
     */
    export interface FilterTrackPropertyCondition {
        /**
         * The track property condition operation.
         */
        operation: pulumi.Input<string>;
        /**
         * The track property type.
         */
        property: pulumi.Input<string>;
        /**
         * The track property value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The class to specify one track property condition.
     */
    export interface FilterTrackPropertyConditionResponse {
        /**
         * The track property condition operation.
         */
        operation: pulumi.Input<string>;
        /**
         * The track property type.
         */
        property: pulumi.Input<string>;
        /**
         * The track property value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation.
     */
    export interface FilterTrackSelection {
        /**
         * The track selections.
         */
        trackSelections: pulumi.Input<pulumi.Input<inputs.media.FilterTrackPropertyCondition>[]>;
    }

    /**
     * Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation.
     */
    export interface FilterTrackSelectionResponse {
        /**
         * The track selections.
         */
        trackSelections: pulumi.Input<pulumi.Input<inputs.media.FilterTrackPropertyConditionResponse>[]>;
    }

    /**
     * Filter First Quality
     */
    export interface FirstQuality {
        /**
         * The first quality bitrate.
         */
        bitrate: pulumi.Input<number>;
    }

    /**
     * Filter First Quality
     */
    export interface FirstQualityResponse {
        /**
         * The first quality bitrate.
         */
        bitrate: pulumi.Input<number>;
    }

    /**
     * The HLS configuration.
     */
    export interface Hls {
        /**
         * The amount of fragments per HTTP Live Streaming (HLS) segment.
         */
        fragmentsPerTsSegment?: pulumi.Input<number>;
    }

    /**
     * The HLS configuration.
     */
    export interface HlsResponse {
        /**
         * The amount of fragments per HTTP Live Streaming (HLS) segment.
         */
        fragmentsPerTsSegment?: pulumi.Input<number>;
    }

    /**
     * The IP access control.
     */
    export interface IPAccessControl {
        /**
         * The IP allow list.
         */
        allow?: pulumi.Input<pulumi.Input<inputs.media.IPRange>[]>;
    }

    /**
     * The IP access control.
     */
    export interface IPAccessControlResponse {
        /**
         * The IP allow list.
         */
        allow?: pulumi.Input<pulumi.Input<inputs.media.IPRangeResponse>[]>;
    }

    /**
     * The IP address range in the CIDR scheme.
     */
    export interface IPRange {
        /**
         * The IP address.
         */
        address?: pulumi.Input<string>;
        /**
         * The friendly name for the IP address range.
         */
        name?: pulumi.Input<string>;
        /**
         * The subnet mask prefix length (see CIDR notation).
         */
        subnetPrefixLength?: pulumi.Input<number>;
    }

    /**
     * The IP address range in the CIDR scheme.
     */
    export interface IPRangeResponse {
        /**
         * The IP address.
         */
        address?: pulumi.Input<string>;
        /**
         * The friendly name for the IP address range.
         */
        name?: pulumi.Input<string>;
        /**
         * The subnet mask prefix length (see CIDR notation).
         */
        subnetPrefixLength?: pulumi.Input<number>;
    }

    /**
     * Details of JobOutput errors.
     */
    export interface JobErrorDetailResponse {
        /**
         * Code describing the error detail.
         */
        code: pulumi.Input<string>;
        /**
         * A human-readable representation of the error.
         */
        message: pulumi.Input<string>;
    }

    /**
     * Details of JobOutput errors.
     */
    export interface JobErrorResponse {
        /**
         * Helps with categorization of errors.
         */
        category: pulumi.Input<string>;
        /**
         * Error code describing the error.
         */
        code: pulumi.Input<string>;
        /**
         * An array of details about specific errors that led to this reported error.
         */
        details: pulumi.Input<pulumi.Input<inputs.media.JobErrorDetailResponse>[]>;
        /**
         * A human-readable language-dependent representation of the error.
         */
        message: pulumi.Input<string>;
        /**
         * Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal.
         */
        retry: pulumi.Input<string>;
    }

    /**
     * Base class for inputs to a Job.
     */
    export interface JobInput {
    }

    /**
     * Base class for inputs to a Job.
     */
    export interface JobInputResponse {
    }

    /**
     * Describes all the properties of a JobOutput.
     */
    export interface JobOutput {
        /**
         * A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.
         */
        label?: pulumi.Input<string>;
    }

    /**
     * Describes all the properties of a JobOutput.
     */
    export interface JobOutputResponse {
        /**
         * The UTC date and time at which this Job Output finished processing.
         */
        endTime: pulumi.Input<string>;
        /**
         * If the JobOutput is in the Error state, it contains the details of the error.
         */
        error: pulumi.Input<inputs.media.JobErrorResponse>;
        /**
         * A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.
         */
        label?: pulumi.Input<string>;
        /**
         * If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.
         */
        progress: pulumi.Input<number>;
        /**
         * The UTC date and time at which this Job Output began processing.
         */
        startTime: pulumi.Input<string>;
        /**
         * Describes the state of the JobOutput.
         */
        state: pulumi.Input<string>;
    }

    /**
     * Properties of the Job.
     */
    export interface JobProperties {
        /**
         * Customer provided key, value pairs that will be returned in Job and JobOutput state events.
         */
        correlationData?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Optional customer supplied description of the Job.
         */
        description?: pulumi.Input<string>;
        /**
         * The inputs for the Job.
         */
        input: pulumi.Input<inputs.media.JobInput>;
        /**
         * The outputs for the Job.
         */
        outputs: pulumi.Input<pulumi.Input<inputs.media.JobOutput>[]>;
        /**
         * Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
         */
        priority?: pulumi.Input<string>;
    }

    /**
     * Properties of the Job.
     */
    export interface JobPropertiesResponse {
        /**
         * Customer provided key, value pairs that will be returned in Job and JobOutput state events.
         */
        correlationData?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The UTC date and time when the Job was created, in 'YYYY-MM-DDThh:mm:ssZ' format.
         */
        created: pulumi.Input<string>;
        /**
         * Optional customer supplied description of the Job.
         */
        description?: pulumi.Input<string>;
        /**
         * The UTC date and time at which this Job finished processing.
         */
        endTime: pulumi.Input<string>;
        /**
         * The inputs for the Job.
         */
        input: pulumi.Input<inputs.media.JobInputResponse>;
        /**
         * The UTC date and time when the Job was last updated, in 'YYYY-MM-DDThh:mm:ssZ' format.
         */
        lastModified: pulumi.Input<string>;
        /**
         * The outputs for the Job.
         */
        outputs: pulumi.Input<pulumi.Input<inputs.media.JobOutputResponse>[]>;
        /**
         * Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
         */
        priority?: pulumi.Input<string>;
        /**
         * The UTC date and time at which this Job began processing.
         */
        startTime: pulumi.Input<string>;
        /**
         * The current state of the job.
         */
        state: pulumi.Input<string>;
    }

    export interface KeyVaultProperties {
        /**
         * The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
         */
        keyIdentifier?: pulumi.Input<string>;
    }

    export interface KeyVaultPropertiesResponse {
        /**
         * The current key used to encrypt the Media Services account, including the key version.
         */
        currentKeyIdentifier: pulumi.Input<string>;
        /**
         * The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
         */
        keyIdentifier?: pulumi.Input<string>;
    }

    /**
     * The Live Event encoding.
     */
    export interface LiveEventEncoding {
        /**
         * The encoding type for Live Event. This value is specified at creation time and cannot be updated. When encodingType is set to None, the service simply passes through the incoming video and audio layer(s) to the output. When encodingType is set to Standard or Premium1080p, a live encoder transcodes the incoming stream into multiple bit rates or layers. See https://go.microsoft.com/fwlink/?linkid=2095101 for more information. The encodingType of Basic is obsolete – if specified, the service will treat this as a Standard Live Event.
         */
        encodingType?: pulumi.Input<string>;
        /**
         * The optional encoding preset name, used when encodingType is not None. This value is specified at creation time and cannot be updated. If the encodingType is set to Standard, then the default preset name is ‘Default720p’. Else if the encodingType is set to Premium1080p, the default preset is ‘Default1080p’.
         */
        presetName?: pulumi.Input<string>;
    }

    /**
     * The Live Event encoding.
     */
    export interface LiveEventEncodingResponse {
        /**
         * The encoding type for Live Event. This value is specified at creation time and cannot be updated. When encodingType is set to None, the service simply passes through the incoming video and audio layer(s) to the output. When encodingType is set to Standard or Premium1080p, a live encoder transcodes the incoming stream into multiple bit rates or layers. See https://go.microsoft.com/fwlink/?linkid=2095101 for more information. The encodingType of Basic is obsolete – if specified, the service will treat this as a Standard Live Event.
         */
        encodingType?: pulumi.Input<string>;
        /**
         * The optional encoding preset name, used when encodingType is not None. This value is specified at creation time and cannot be updated. If the encodingType is set to Standard, then the default preset name is ‘Default720p’. Else if the encodingType is set to Premium1080p, the default preset is ‘Default1080p’.
         */
        presetName?: pulumi.Input<string>;
    }

    /**
     * The Live Event endpoint.
     */
    export interface LiveEventEndpoint {
        /**
         * The endpoint protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The endpoint URL.
         */
        url?: pulumi.Input<string>;
    }

    /**
     * The Live Event endpoint.
     */
    export interface LiveEventEndpointResponse {
        /**
         * The endpoint protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The endpoint URL.
         */
        url?: pulumi.Input<string>;
    }

    /**
     * The Live Event input.
     */
    export interface LiveEventInput {
        /**
         * The access control for LiveEvent Input.
         */
        accessControl?: pulumi.Input<inputs.media.LiveEventInputAccessControl>;
        /**
         * A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated.  If omitted, the service will generate a unique value.
         */
        accessToken?: pulumi.Input<string>;
        /**
         * The input endpoints for the Live Event.
         */
        endpoints?: pulumi.Input<pulumi.Input<inputs.media.LiveEventEndpoint>[]>;
        /**
         * ISO 8601 timespan duration of the key frame interval duration.
         */
        keyFrameIntervalDuration?: pulumi.Input<string>;
        /**
         * The streaming protocol for the Live Event.  This is specified at creation time and cannot be updated.
         */
        streamingProtocol: pulumi.Input<string>;
    }

    /**
     * The IP access control for Live Event Input.
     */
    export interface LiveEventInputAccessControl {
        /**
         * The IP access control properties.
         */
        ip?: pulumi.Input<inputs.media.IPAccessControl>;
    }

    /**
     * The IP access control for Live Event Input.
     */
    export interface LiveEventInputAccessControlResponse {
        /**
         * The IP access control properties.
         */
        ip?: pulumi.Input<inputs.media.IPAccessControlResponse>;
    }

    /**
     * The Live Event input.
     */
    export interface LiveEventInputResponse {
        /**
         * The access control for LiveEvent Input.
         */
        accessControl?: pulumi.Input<inputs.media.LiveEventInputAccessControlResponse>;
        /**
         * A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated.  If omitted, the service will generate a unique value.
         */
        accessToken?: pulumi.Input<string>;
        /**
         * The input endpoints for the Live Event.
         */
        endpoints?: pulumi.Input<pulumi.Input<inputs.media.LiveEventEndpointResponse>[]>;
        /**
         * ISO 8601 timespan duration of the key frame interval duration.
         */
        keyFrameIntervalDuration?: pulumi.Input<string>;
        /**
         * The streaming protocol for the Live Event.  This is specified at creation time and cannot be updated.
         */
        streamingProtocol: pulumi.Input<string>;
    }

    /**
     * The Live Event preview.
     */
    export interface LiveEventPreview {
        /**
         * The access control for LiveEvent preview.
         */
        accessControl?: pulumi.Input<inputs.media.LiveEventPreviewAccessControl>;
        /**
         * An Alternative Media Identifier associated with the StreamingLocator created for the preview.  This value is specified at creation time and cannot be updated.  The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field.
         */
        alternativeMediaId?: pulumi.Input<string>;
        /**
         * The endpoints for preview.
         */
        endpoints?: pulumi.Input<pulumi.Input<inputs.media.LiveEventEndpoint>[]>;
        /**
         * The identifier of the preview locator in Guid format.  Specifying this at creation time allows the caller to know the preview locator url before the event is created.  If omitted, the service will generate a random identifier.  This value cannot be updated once the live event is created.
         */
        previewLocator?: pulumi.Input<string>;
        /**
         * The name of streaming policy used for the LiveEvent preview.  This value is specified at creation time and cannot be updated.
         */
        streamingPolicyName?: pulumi.Input<string>;
    }

    /**
     * The IP access control for Live Event preview.
     */
    export interface LiveEventPreviewAccessControl {
        /**
         * The IP access control properties.
         */
        ip?: pulumi.Input<inputs.media.IPAccessControl>;
    }

    /**
     * The IP access control for Live Event preview.
     */
    export interface LiveEventPreviewAccessControlResponse {
        /**
         * The IP access control properties.
         */
        ip?: pulumi.Input<inputs.media.IPAccessControlResponse>;
    }

    /**
     * The Live Event preview.
     */
    export interface LiveEventPreviewResponse {
        /**
         * The access control for LiveEvent preview.
         */
        accessControl?: pulumi.Input<inputs.media.LiveEventPreviewAccessControlResponse>;
        /**
         * An Alternative Media Identifier associated with the StreamingLocator created for the preview.  This value is specified at creation time and cannot be updated.  The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field.
         */
        alternativeMediaId?: pulumi.Input<string>;
        /**
         * The endpoints for preview.
         */
        endpoints?: pulumi.Input<pulumi.Input<inputs.media.LiveEventEndpointResponse>[]>;
        /**
         * The identifier of the preview locator in Guid format.  Specifying this at creation time allows the caller to know the preview locator url before the event is created.  If omitted, the service will generate a random identifier.  This value cannot be updated once the live event is created.
         */
        previewLocator?: pulumi.Input<string>;
        /**
         * The name of streaming policy used for the LiveEvent preview.  This value is specified at creation time and cannot be updated.
         */
        streamingPolicyName?: pulumi.Input<string>;
    }

    /**
     * The Live Event properties.
     */
    export interface LiveEventProperties {
        /**
         * The Live Event access policies.
         */
        crossSiteAccessPolicies?: pulumi.Input<inputs.media.CrossSiteAccessPolicies>;
        /**
         * The Live Event description.
         */
        description?: pulumi.Input<string>;
        /**
         * The Live Event encoding.
         */
        encoding?: pulumi.Input<inputs.media.LiveEventEncoding>;
        /**
         * The Live Event input.
         */
        input: pulumi.Input<inputs.media.LiveEventInput>;
        /**
         * The Live Event preview.
         */
        preview?: pulumi.Input<inputs.media.LiveEventPreview>;
        /**
         * The options to use for the LiveEvent.  This value is specified at creation time and cannot be updated. The valid values for the array entry values are 'Default' and 'LowLatency'.
         */
        streamOptions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies whether to use a vanity url with the Live Event.  This value is specified at creation time and cannot be updated.
         */
        useStaticHostname?: pulumi.Input<boolean>;
    }

    /**
     * The Live Event properties.
     */
    export interface LiveEventPropertiesResponse {
        /**
         * The exact time the Live Event was created.
         */
        created: pulumi.Input<string>;
        /**
         * The Live Event access policies.
         */
        crossSiteAccessPolicies?: pulumi.Input<inputs.media.CrossSiteAccessPoliciesResponse>;
        /**
         * The Live Event description.
         */
        description?: pulumi.Input<string>;
        /**
         * The Live Event encoding.
         */
        encoding?: pulumi.Input<inputs.media.LiveEventEncodingResponse>;
        /**
         * The Live Event input.
         */
        input: pulumi.Input<inputs.media.LiveEventInputResponse>;
        /**
         * The exact time the Live Event was last modified.
         */
        lastModified: pulumi.Input<string>;
        /**
         * The Live Event preview.
         */
        preview?: pulumi.Input<inputs.media.LiveEventPreviewResponse>;
        /**
         * The provisioning state of the Live Event.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource state of the Live Event.
         */
        resourceState: pulumi.Input<string>;
        /**
         * The options to use for the LiveEvent.  This value is specified at creation time and cannot be updated. The valid values for the array entry values are 'Default' and 'LowLatency'.
         */
        streamOptions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies whether to use a vanity url with the Live Event.  This value is specified at creation time and cannot be updated.
         */
        useStaticHostname?: pulumi.Input<boolean>;
    }

    /**
     * The JSON object that contains the properties required to create a Live Output.
     */
    export interface LiveOutputProperties {
        /**
         * ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content.
         */
        archiveWindowLength: pulumi.Input<string>;
        /**
         * The asset name.
         */
        assetName: pulumi.Input<string>;
        /**
         * The description of the Live Output.
         */
        description?: pulumi.Input<string>;
        /**
         * The HLS configuration.
         */
        hls?: pulumi.Input<inputs.media.Hls>;
        /**
         * The manifest file name.  If not provided, the service will generate one automatically.
         */
        manifestName?: pulumi.Input<string>;
        /**
         * The output snapshot time.
         */
        outputSnapTime?: pulumi.Input<number>;
    }

    /**
     * The JSON object that contains the properties required to create a Live Output.
     */
    export interface LiveOutputPropertiesResponse {
        /**
         * ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content.
         */
        archiveWindowLength: pulumi.Input<string>;
        /**
         * The asset name.
         */
        assetName: pulumi.Input<string>;
        /**
         * The exact time the Live Output was created.
         */
        created: pulumi.Input<string>;
        /**
         * The description of the Live Output.
         */
        description?: pulumi.Input<string>;
        /**
         * The HLS configuration.
         */
        hls?: pulumi.Input<inputs.media.HlsResponse>;
        /**
         * The exact time the Live Output was last modified.
         */
        lastModified: pulumi.Input<string>;
        /**
         * The manifest file name.  If not provided, the service will generate one automatically.
         */
        manifestName?: pulumi.Input<string>;
        /**
         * The output snapshot time.
         */
        outputSnapTime?: pulumi.Input<number>;
        /**
         * The provisioning state of the Live Output.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource state of the Live Output.
         */
        resourceState: pulumi.Input<string>;
    }

    /**
     * The Media Filter properties.
     */
    export interface MediaFilterProperties {
        /**
         * The first quality.
         */
        firstQuality?: pulumi.Input<inputs.media.FirstQuality>;
        /**
         * The presentation time range.
         */
        presentationTimeRange?: pulumi.Input<inputs.media.PresentationTimeRange>;
        /**
         * The tracks selection conditions.
         */
        tracks?: pulumi.Input<pulumi.Input<inputs.media.FilterTrackSelection>[]>;
    }

    /**
     * The Media Filter properties.
     */
    export interface MediaFilterPropertiesResponse {
        /**
         * The first quality.
         */
        firstQuality?: pulumi.Input<inputs.media.FirstQualityResponse>;
        /**
         * The presentation time range.
         */
        presentationTimeRange?: pulumi.Input<inputs.media.PresentationTimeRangeResponse>;
        /**
         * The tracks selection conditions.
         */
        tracks?: pulumi.Input<pulumi.Input<inputs.media.FilterTrackSelectionResponse>[]>;
    }

    export interface MediaServiceIdentity {
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
    }

    export interface MediaServiceIdentityResponse {
        /**
         * The Principal ID of the identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The Tenant ID of the identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of the Media Services account.
     */
    export interface MediaServiceProperties {
        /**
         * The account encryption properties.
         */
        encryption?: pulumi.Input<inputs.media.AccountEncryption>;
        /**
         * The storage accounts for this resource.
         */
        storageAccounts?: pulumi.Input<pulumi.Input<inputs.media.StorageAccount>[]>;
        storageAuthentication?: pulumi.Input<string>;
    }

    /**
     * Properties of the Media Services account.
     */
    export interface MediaServicePropertiesResponse {
        /**
         * The account encryption properties.
         */
        encryption?: pulumi.Input<inputs.media.AccountEncryptionResponse>;
        /**
         * The Media Services account ID.
         */
        mediaServiceId: pulumi.Input<string>;
        /**
         * The storage accounts for this resource.
         */
        storageAccounts?: pulumi.Input<pulumi.Input<inputs.media.StorageAccountResponse>[]>;
        storageAuthentication?: pulumi.Input<string>;
    }

    /**
     * Class for NoEncryption scheme
     */
    export interface NoEncryption {
        /**
         * Representing supported protocols
         */
        enabledProtocols?: pulumi.Input<inputs.media.EnabledProtocols>;
    }

    /**
     * Class for NoEncryption scheme
     */
    export interface NoEncryptionResponse {
        /**
         * Representing supported protocols
         */
        enabledProtocols?: pulumi.Input<inputs.media.EnabledProtocolsResponse>;
    }

    /**
     * The presentation time range, this is asset related and not recommended for Account Filter.
     */
    export interface PresentationTimeRange {
        /**
         * The absolute end time boundary.
         */
        endTimestamp?: pulumi.Input<number>;
        /**
         * The indicator of forcing existing of end time stamp.
         */
        forceEndTimestamp?: pulumi.Input<boolean>;
        /**
         * The relative to end right edge.
         */
        liveBackoffDuration?: pulumi.Input<number>;
        /**
         * The relative to end sliding window.
         */
        presentationWindowDuration?: pulumi.Input<number>;
        /**
         * The absolute start time boundary.
         */
        startTimestamp?: pulumi.Input<number>;
        /**
         * The time scale of time stamps.
         */
        timescale?: pulumi.Input<number>;
    }

    /**
     * The presentation time range, this is asset related and not recommended for Account Filter.
     */
    export interface PresentationTimeRangeResponse {
        /**
         * The absolute end time boundary.
         */
        endTimestamp?: pulumi.Input<number>;
        /**
         * The indicator of forcing existing of end time stamp.
         */
        forceEndTimestamp?: pulumi.Input<boolean>;
        /**
         * The relative to end right edge.
         */
        liveBackoffDuration?: pulumi.Input<number>;
        /**
         * The relative to end sliding window.
         */
        presentationWindowDuration?: pulumi.Input<number>;
        /**
         * The absolute start time boundary.
         */
        startTimestamp?: pulumi.Input<number>;
        /**
         * The time scale of time stamps.
         */
        timescale?: pulumi.Input<number>;
    }

    /**
     * Base type for all Presets, which define the recipe or instructions on how the input media files should be processed.
     */
    export interface Preset {
    }

    /**
     * Base type for all Presets, which define the recipe or instructions on how the input media files should be processed.
     */
    export interface PresetResponse {
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpoint {
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.media.PrivateEndpoint>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.media.PrivateLinkServiceConnectionState>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.media.PrivateEndpointResponse>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.media.PrivateLinkServiceConnectionStateResponse>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpointResponse {
        /**
         * The ARM identifier for Private Endpoint
         */
        id: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The storage account details.
     */
    export interface StorageAccount {
        /**
         * The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.
         */
        id?: pulumi.Input<string>;
        /**
         * The type of the storage account.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The storage account details.
     */
    export interface StorageAccountResponse {
        /**
         * The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.
         */
        id?: pulumi.Input<string>;
        /**
         * The type of the storage account.
         */
        type: pulumi.Input<string>;
    }

    /**
     * StreamingEndpoint access control definition.
     */
    export interface StreamingEndpointAccessControl {
        /**
         * The access control of Akamai
         */
        akamai?: pulumi.Input<inputs.media.AkamaiAccessControl>;
        /**
         * The IP access control of the StreamingEndpoint.
         */
        ip?: pulumi.Input<inputs.media.IPAccessControl>;
    }

    /**
     * StreamingEndpoint access control definition.
     */
    export interface StreamingEndpointAccessControlResponse {
        /**
         * The access control of Akamai
         */
        akamai?: pulumi.Input<inputs.media.AkamaiAccessControlResponse>;
        /**
         * The IP access control of the StreamingEndpoint.
         */
        ip?: pulumi.Input<inputs.media.IPAccessControlResponse>;
    }

    /**
     * The StreamingEndpoint properties.
     */
    export interface StreamingEndpointProperties {
        /**
         * The access control definition of the StreamingEndpoint.
         */
        accessControl?: pulumi.Input<inputs.media.StreamingEndpointAccessControl>;
        /**
         * The name of the AvailabilitySet used with this StreamingEndpoint for high availability streaming.  This value can only be set at creation time.
         */
        availabilitySetName?: pulumi.Input<string>;
        /**
         * The CDN enabled flag.
         */
        cdnEnabled?: pulumi.Input<boolean>;
        /**
         * The CDN profile name.
         */
        cdnProfile?: pulumi.Input<string>;
        /**
         * The CDN provider name.
         */
        cdnProvider?: pulumi.Input<string>;
        /**
         * The StreamingEndpoint access policies.
         */
        crossSiteAccessPolicies?: pulumi.Input<inputs.media.CrossSiteAccessPolicies>;
        /**
         * The custom host names of the StreamingEndpoint
         */
        customHostNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The StreamingEndpoint description.
         */
        description?: pulumi.Input<string>;
        /**
         * Max cache age
         */
        maxCacheAge?: pulumi.Input<number>;
        /**
         * The number of scale units.  Use the Scale operation to adjust this value.
         */
        scaleUnits: pulumi.Input<number>;
    }

    /**
     * The StreamingEndpoint properties.
     */
    export interface StreamingEndpointPropertiesResponse {
        /**
         * The access control definition of the StreamingEndpoint.
         */
        accessControl?: pulumi.Input<inputs.media.StreamingEndpointAccessControlResponse>;
        /**
         * The name of the AvailabilitySet used with this StreamingEndpoint for high availability streaming.  This value can only be set at creation time.
         */
        availabilitySetName?: pulumi.Input<string>;
        /**
         * The CDN enabled flag.
         */
        cdnEnabled?: pulumi.Input<boolean>;
        /**
         * The CDN profile name.
         */
        cdnProfile?: pulumi.Input<string>;
        /**
         * The CDN provider name.
         */
        cdnProvider?: pulumi.Input<string>;
        /**
         * The exact time the StreamingEndpoint was created.
         */
        created: pulumi.Input<string>;
        /**
         * The StreamingEndpoint access policies.
         */
        crossSiteAccessPolicies?: pulumi.Input<inputs.media.CrossSiteAccessPoliciesResponse>;
        /**
         * The custom host names of the StreamingEndpoint
         */
        customHostNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The StreamingEndpoint description.
         */
        description?: pulumi.Input<string>;
        /**
         * The free trial expiration time.
         */
        freeTrialEndTime: pulumi.Input<string>;
        /**
         * The StreamingEndpoint host name.
         */
        hostName: pulumi.Input<string>;
        /**
         * The exact time the StreamingEndpoint was last modified.
         */
        lastModified: pulumi.Input<string>;
        /**
         * Max cache age
         */
        maxCacheAge?: pulumi.Input<number>;
        /**
         * The provisioning state of the StreamingEndpoint.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource state of the StreamingEndpoint.
         */
        resourceState: pulumi.Input<string>;
        /**
         * The number of scale units.  Use the Scale operation to adjust this value.
         */
        scaleUnits: pulumi.Input<number>;
    }

    /**
     * Class for content key in Streaming Locator
     */
    export interface StreamingLocatorContentKey {
        /**
         * ID of Content Key
         */
        id: pulumi.Input<string>;
        /**
         * Label of Content Key as specified in the Streaming Policy
         */
        labelReferenceInStreamingPolicy?: pulumi.Input<string>;
        /**
         * Value of Content Key
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Class for content key in Streaming Locator
     */
    export interface StreamingLocatorContentKeyResponse {
        /**
         * ID of Content Key
         */
        id: pulumi.Input<string>;
        /**
         * Label of Content Key as specified in the Streaming Policy
         */
        labelReferenceInStreamingPolicy?: pulumi.Input<string>;
        /**
         * ContentKeyPolicy used by Content Key
         */
        policyName: pulumi.Input<string>;
        /**
         * Tracks which use this Content Key
         */
        tracks: pulumi.Input<pulumi.Input<inputs.media.TrackSelectionResponse>[]>;
        /**
         * Encryption type of Content Key
         */
        type: pulumi.Input<string>;
        /**
         * Value of Content Key
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Properties of the Streaming Locator.
     */
    export interface StreamingLocatorProperties {
        /**
         * Alternative Media ID of this Streaming Locator
         */
        alternativeMediaId?: pulumi.Input<string>;
        /**
         * Asset Name
         */
        assetName: pulumi.Input<string>;
        /**
         * The ContentKeys used by this Streaming Locator.
         */
        contentKeys?: pulumi.Input<pulumi.Input<inputs.media.StreamingLocatorContentKey>[]>;
        /**
         * Name of the default ContentKeyPolicy used by this Streaming Locator.
         */
        defaultContentKeyPolicyName?: pulumi.Input<string>;
        /**
         * The end time of the Streaming Locator.
         */
        endTime?: pulumi.Input<string>;
        /**
         * A list of asset or account filters which apply to this streaming locator
         */
        filters?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The start time of the Streaming Locator.
         */
        startTime?: pulumi.Input<string>;
        /**
         * The StreamingLocatorId of the Streaming Locator.
         */
        streamingLocatorId?: pulumi.Input<string>;
        /**
         * Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'
         */
        streamingPolicyName: pulumi.Input<string>;
    }

    /**
     * Properties of the Streaming Locator.
     */
    export interface StreamingLocatorPropertiesResponse {
        /**
         * Alternative Media ID of this Streaming Locator
         */
        alternativeMediaId?: pulumi.Input<string>;
        /**
         * Asset Name
         */
        assetName: pulumi.Input<string>;
        /**
         * The ContentKeys used by this Streaming Locator.
         */
        contentKeys?: pulumi.Input<pulumi.Input<inputs.media.StreamingLocatorContentKeyResponse>[]>;
        /**
         * The creation time of the Streaming Locator.
         */
        created: pulumi.Input<string>;
        /**
         * Name of the default ContentKeyPolicy used by this Streaming Locator.
         */
        defaultContentKeyPolicyName?: pulumi.Input<string>;
        /**
         * The end time of the Streaming Locator.
         */
        endTime?: pulumi.Input<string>;
        /**
         * A list of asset or account filters which apply to this streaming locator
         */
        filters?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The start time of the Streaming Locator.
         */
        startTime?: pulumi.Input<string>;
        /**
         * The StreamingLocatorId of the Streaming Locator.
         */
        streamingLocatorId?: pulumi.Input<string>;
        /**
         * Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'
         */
        streamingPolicyName: pulumi.Input<string>;
    }

    /**
     * Class to specify properties of content key
     */
    export interface StreamingPolicyContentKey {
        /**
         * Label can be used to specify Content Key when creating a Streaming Locator
         */
        label?: pulumi.Input<string>;
        /**
         * Policy used by Content Key
         */
        policyName?: pulumi.Input<string>;
        /**
         * Tracks which use this content key
         */
        tracks?: pulumi.Input<pulumi.Input<inputs.media.TrackSelection>[]>;
    }

    /**
     * Class to specify properties of content key
     */
    export interface StreamingPolicyContentKeyResponse {
        /**
         * Label can be used to specify Content Key when creating a Streaming Locator
         */
        label?: pulumi.Input<string>;
        /**
         * Policy used by Content Key
         */
        policyName?: pulumi.Input<string>;
        /**
         * Tracks which use this content key
         */
        tracks?: pulumi.Input<pulumi.Input<inputs.media.TrackSelectionResponse>[]>;
    }

    /**
     * Class to specify properties of all content keys in Streaming Policy
     */
    export interface StreamingPolicyContentKeys {
        /**
         * Default content key for an encryption scheme
         */
        defaultKey?: pulumi.Input<inputs.media.DefaultKey>;
        /**
         * Representing tracks needs separate content key
         */
        keyToTrackMappings?: pulumi.Input<pulumi.Input<inputs.media.StreamingPolicyContentKey>[]>;
    }

    /**
     * Class to specify properties of all content keys in Streaming Policy
     */
    export interface StreamingPolicyContentKeysResponse {
        /**
         * Default content key for an encryption scheme
         */
        defaultKey?: pulumi.Input<inputs.media.DefaultKeyResponse>;
        /**
         * Representing tracks needs separate content key
         */
        keyToTrackMappings?: pulumi.Input<pulumi.Input<inputs.media.StreamingPolicyContentKeyResponse>[]>;
    }

    /**
     * Class to specify configurations of FairPlay in Streaming Policy
     */
    export interface StreamingPolicyFairPlayConfiguration {
        /**
         * All license to be persistent or not
         */
        allowPersistentLicense: pulumi.Input<boolean>;
        /**
         * Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
         */
        customLicenseAcquisitionUrlTemplate?: pulumi.Input<string>;
    }

    /**
     * Class to specify configurations of FairPlay in Streaming Policy
     */
    export interface StreamingPolicyFairPlayConfigurationResponse {
        /**
         * All license to be persistent or not
         */
        allowPersistentLicense: pulumi.Input<boolean>;
        /**
         * Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
         */
        customLicenseAcquisitionUrlTemplate?: pulumi.Input<string>;
    }

    /**
     * Class to specify configurations of PlayReady in Streaming Policy
     */
    export interface StreamingPolicyPlayReadyConfiguration {
        /**
         * Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
         */
        customLicenseAcquisitionUrlTemplate?: pulumi.Input<string>;
        /**
         * Custom attributes for PlayReady
         */
        playReadyCustomAttributes?: pulumi.Input<string>;
    }

    /**
     * Class to specify configurations of PlayReady in Streaming Policy
     */
    export interface StreamingPolicyPlayReadyConfigurationResponse {
        /**
         * Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
         */
        customLicenseAcquisitionUrlTemplate?: pulumi.Input<string>;
        /**
         * Custom attributes for PlayReady
         */
        playReadyCustomAttributes?: pulumi.Input<string>;
    }

    /**
     * Class to specify properties of Streaming Policy
     */
    export interface StreamingPolicyProperties {
        /**
         * Configuration of CommonEncryptionCbcs
         */
        commonEncryptionCbcs?: pulumi.Input<inputs.media.CommonEncryptionCbcs>;
        /**
         * Configuration of CommonEncryptionCenc
         */
        commonEncryptionCenc?: pulumi.Input<inputs.media.CommonEncryptionCenc>;
        /**
         * Default ContentKey used by current Streaming Policy
         */
        defaultContentKeyPolicyName?: pulumi.Input<string>;
        /**
         * Configuration of EnvelopeEncryption
         */
        envelopeEncryption?: pulumi.Input<inputs.media.EnvelopeEncryption>;
        /**
         * Configurations of NoEncryption
         */
        noEncryption?: pulumi.Input<inputs.media.NoEncryption>;
    }

    /**
     * Class to specify properties of Streaming Policy
     */
    export interface StreamingPolicyPropertiesResponse {
        /**
         * Configuration of CommonEncryptionCbcs
         */
        commonEncryptionCbcs?: pulumi.Input<inputs.media.CommonEncryptionCbcsResponse>;
        /**
         * Configuration of CommonEncryptionCenc
         */
        commonEncryptionCenc?: pulumi.Input<inputs.media.CommonEncryptionCencResponse>;
        /**
         * Creation time of Streaming Policy
         */
        created: pulumi.Input<string>;
        /**
         * Default ContentKey used by current Streaming Policy
         */
        defaultContentKeyPolicyName?: pulumi.Input<string>;
        /**
         * Configuration of EnvelopeEncryption
         */
        envelopeEncryption?: pulumi.Input<inputs.media.EnvelopeEncryptionResponse>;
        /**
         * Configurations of NoEncryption
         */
        noEncryption?: pulumi.Input<inputs.media.NoEncryptionResponse>;
    }

    /**
     * Class to specify configurations of Widevine in Streaming Policy
     */
    export interface StreamingPolicyWidevineConfiguration {
        /**
         * Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
         */
        customLicenseAcquisitionUrlTemplate?: pulumi.Input<string>;
    }

    /**
     * Class to specify configurations of Widevine in Streaming Policy
     */
    export interface StreamingPolicyWidevineConfigurationResponse {
        /**
         * Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
         */
        customLicenseAcquisitionUrlTemplate?: pulumi.Input<string>;
    }

    /**
     * Class to specify one track property condition
     */
    export interface TrackPropertyCondition {
        /**
         * Track property condition operation
         */
        operation: pulumi.Input<string>;
        /**
         * Track property type
         */
        property: pulumi.Input<string>;
        /**
         * Track property value
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Class to specify one track property condition
     */
    export interface TrackPropertyConditionResponse {
        /**
         * Track property condition operation
         */
        operation: pulumi.Input<string>;
        /**
         * Track property type
         */
        property: pulumi.Input<string>;
        /**
         * Track property value
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Class to select a track
     */
    export interface TrackSelection {
        /**
         * TrackSelections is a track property condition list which can specify track(s)
         */
        trackSelections?: pulumi.Input<pulumi.Input<inputs.media.TrackPropertyCondition>[]>;
    }

    /**
     * Class to select a track
     */
    export interface TrackSelectionResponse {
        /**
         * TrackSelections is a track property condition list which can specify track(s)
         */
        trackSelections?: pulumi.Input<pulumi.Input<inputs.media.TrackPropertyConditionResponse>[]>;
    }

    /**
     * Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output.
     */
    export interface TransformOutput {
        /**
         * A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with 'ContinueJob'. The default is 'StopProcessingJob'.
         */
        onError?: pulumi.Input<string>;
        /**
         * Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output.
         */
        preset: pulumi.Input<inputs.media.Preset>;
        /**
         * Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.
         */
        relativePriority?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output.
     */
    export interface TransformOutputResponse {
        /**
         * A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with 'ContinueJob'. The default is 'StopProcessingJob'.
         */
        onError?: pulumi.Input<string>;
        /**
         * Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output.
         */
        preset: pulumi.Input<inputs.media.PresetResponse>;
        /**
         * Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.
         */
        relativePriority?: pulumi.Input<string>;
    }

    /**
     * A Transform.
     */
    export interface TransformProperties {
        /**
         * An optional verbose description of the Transform.
         */
        description?: pulumi.Input<string>;
        /**
         * An array of one or more TransformOutputs that the Transform should generate.
         */
        outputs: pulumi.Input<pulumi.Input<inputs.media.TransformOutput>[]>;
    }

    /**
     * A Transform.
     */
    export interface TransformPropertiesResponse {
        /**
         * The UTC date and time when the Transform was created, in 'YYYY-MM-DDThh:mm:ssZ' format.
         */
        created: pulumi.Input<string>;
        /**
         * An optional verbose description of the Transform.
         */
        description?: pulumi.Input<string>;
        /**
         * The UTC date and time when the Transform was last updated, in 'YYYY-MM-DDThh:mm:ssZ' format.
         */
        lastModified: pulumi.Input<string>;
        /**
         * An array of one or more TransformOutputs that the Transform should generate.
         */
        outputs: pulumi.Input<pulumi.Input<inputs.media.TransformOutputResponse>[]>;
    }
}

export namespace migrate {
    /**
     * Properties of an assessment.
     */
    export interface AssessmentProperties {
        /**
         * Storage type selected for this disk.
         */
        azureDiskType: pulumi.Input<string>;
        /**
         * AHUB discount on windows virtual machines.
         */
        azureHybridUseBenefit: pulumi.Input<string>;
        /**
         * Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
         */
        azureLocation: pulumi.Input<string>;
        /**
         * Offer code according to which cost estimation is done.
         */
        azureOfferCode: pulumi.Input<string>;
        /**
         * Pricing tier for Size evaluation.
         */
        azurePricingTier: pulumi.Input<string>;
        /**
         * Storage Redundancy type offered by Azure.
         */
        azureStorageRedundancy: pulumi.Input<string>;
        /**
         * List of azure VM families.
         */
        azureVmFamilies: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Currency to report prices in.
         */
        currency: pulumi.Input<string>;
        /**
         * Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
         */
        discountPercentage: pulumi.Input<number>;
        /**
         * Percentile of performance data used to recommend Azure size.
         */
        percentile: pulumi.Input<string>;
        /**
         * Azure reserved instance.
         */
        reservedInstance: pulumi.Input<string>;
        /**
         * Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
         */
        scalingFactor: pulumi.Input<number>;
        /**
         * Assessment sizing criterion.
         */
        sizingCriterion: pulumi.Input<string>;
        /**
         * User configurable setting that describes the status of the assessment.
         */
        stage: pulumi.Input<string>;
        /**
         * Time range of performance data used to recommend a size.
         */
        timeRange: pulumi.Input<string>;
        /**
         * Specify the duration for which the VMs are up in the on-premises environment.
         */
        vmUptime: pulumi.Input<inputs.migrate.VmUptime>;
    }

    /**
     * Properties of an assessment.
     */
    export interface AssessmentPropertiesResponse {
        /**
         * Storage type selected for this disk.
         */
        azureDiskType: pulumi.Input<string>;
        /**
         * AHUB discount on windows virtual machines.
         */
        azureHybridUseBenefit: pulumi.Input<string>;
        /**
         * Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
         */
        azureLocation: pulumi.Input<string>;
        /**
         * Offer code according to which cost estimation is done.
         */
        azureOfferCode: pulumi.Input<string>;
        /**
         * Pricing tier for Size evaluation.
         */
        azurePricingTier: pulumi.Input<string>;
        /**
         * Storage Redundancy type offered by Azure.
         */
        azureStorageRedundancy: pulumi.Input<string>;
        /**
         * List of azure VM families.
         */
        azureVmFamilies: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Confidence rating percentage for assessment. Can be in the range [0, 100].
         */
        confidenceRatingInPercentage: pulumi.Input<number>;
        /**
         * Time when this project was created. Date-Time represented in ISO-8601 format.
         */
        createdTimestamp: pulumi.Input<string>;
        /**
         * Currency to report prices in.
         */
        currency: pulumi.Input<string>;
        /**
         * Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
         */
        discountPercentage: pulumi.Input<number>;
        /**
         * Enterprise agreement subscription arm id.
         */
        eaSubscriptionId: pulumi.Input<string>;
        /**
         * Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
         */
        monthlyBandwidthCost: pulumi.Input<number>;
        /**
         * Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
         */
        monthlyComputeCost: pulumi.Input<number>;
        /**
         * Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
         */
        monthlyPremiumStorageCost: pulumi.Input<number>;
        /**
         * Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
         */
        monthlyStandardSSDStorageCost: pulumi.Input<number>;
        /**
         * Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
         */
        monthlyStorageCost: pulumi.Input<number>;
        /**
         * Number of assessed machines part of this assessment.
         */
        numberOfMachines: pulumi.Input<number>;
        /**
         * Percentile of performance data used to recommend Azure size.
         */
        percentile: pulumi.Input<string>;
        /**
         * End time to consider performance data for assessment
         */
        perfDataEndTime: pulumi.Input<string>;
        /**
         * Start time to consider performance data for assessment
         */
        perfDataStartTime: pulumi.Input<string>;
        /**
         * Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
         */
        pricesTimestamp: pulumi.Input<string>;
        /**
         * Azure reserved instance.
         */
        reservedInstance: pulumi.Input<string>;
        /**
         * Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
         */
        scalingFactor: pulumi.Input<number>;
        /**
         * Assessment sizing criterion.
         */
        sizingCriterion: pulumi.Input<string>;
        /**
         * User configurable setting that describes the status of the assessment.
         */
        stage: pulumi.Input<string>;
        /**
         * Whether the assessment has been created and is valid.
         */
        status: pulumi.Input<string>;
        /**
         * Time range of performance data used to recommend a size.
         */
        timeRange: pulumi.Input<string>;
        /**
         * Time when this project was last updated. Date-Time represented in ISO-8601 format.
         */
        updatedTimestamp: pulumi.Input<string>;
        /**
         * Specify the duration for which the VMs are up in the on-premises environment.
         */
        vmUptime: pulumi.Input<inputs.migrate.VmUptimeResponse>;
    }

    export interface CollectorAgentProperties {
        spnDetails?: pulumi.Input<inputs.migrate.CollectorBodyAgentSpnProperties>;
    }

    export interface CollectorAgentPropertiesResponse {
        id: pulumi.Input<string>;
        lastHeartbeatUtc: pulumi.Input<string>;
        spnDetails?: pulumi.Input<inputs.migrate.CollectorBodyAgentSpnPropertiesResponse>;
        version: pulumi.Input<string>;
    }

    export interface CollectorBodyAgentSpnProperties {
        /**
         * Application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * Intended audience for the service principal.
         */
        audience?: pulumi.Input<string>;
        /**
         * AAD Authority URL which was used to request the token for the service principal.
         */
        authority?: pulumi.Input<string>;
        /**
         * Object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        objectId?: pulumi.Input<string>;
        /**
         * Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        tenantId?: pulumi.Input<string>;
    }

    export interface CollectorBodyAgentSpnPropertiesResponse {
        /**
         * Application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * Intended audience for the service principal.
         */
        audience?: pulumi.Input<string>;
        /**
         * AAD Authority URL which was used to request the token for the service principal.
         */
        authority?: pulumi.Input<string>;
        /**
         * Object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        objectId?: pulumi.Input<string>;
        /**
         * Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        tenantId?: pulumi.Input<string>;
    }

    export interface CollectorProperties {
        agentProperties?: pulumi.Input<inputs.migrate.CollectorAgentProperties>;
        /**
         * The ARM id of the discovery service site.
         */
        discoverySiteId?: pulumi.Input<string>;
    }

    export interface CollectorPropertiesResponse {
        agentProperties?: pulumi.Input<inputs.migrate.CollectorAgentPropertiesResponse>;
        /**
         * Time when this collector was created. Date-Time represented in ISO-8601 format.
         */
        createdTimestamp: pulumi.Input<string>;
        /**
         * The ARM id of the discovery service site.
         */
        discoverySiteId?: pulumi.Input<string>;
        /**
         * Time when this collector was updated. Date-Time represented in ISO-8601 format.
         */
        updatedTimestamp: pulumi.Input<string>;
    }

    /**
     * Properties of group resource.
     */
    export interface GroupProperties {
    }

    /**
     * Properties of group resource.
     */
    export interface GroupPropertiesResponse {
        /**
         * If the assessments are in running state.
         */
        areAssessmentsRunning: pulumi.Input<boolean>;
        /**
         * List of References to Assessments created on this group.
         */
        assessments: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Time when this group was created. Date-Time represented in ISO-8601 format.
         */
        createdTimestamp: pulumi.Input<string>;
        /**
         * Whether the group has been created and is valid.
         */
        groupStatus: pulumi.Input<string>;
        /**
         * Number of machines part of this group.
         */
        machineCount: pulumi.Input<number>;
        /**
         * Time when this group was last updated. Date-Time represented in ISO-8601 format.
         */
        updatedTimestamp: pulumi.Input<string>;
    }

    /**
     * Properties of a project.
     */
    export interface ProjectProperties {
        /**
         * Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
         */
        assessmentSolutionId?: pulumi.Input<string>;
        /**
         * The ARM id of service map workspace created by customer.
         */
        customerWorkspaceId?: pulumi.Input<string>;
        /**
         * Location of service map workspace created by customer.
         */
        customerWorkspaceLocation?: pulumi.Input<string>;
        /**
         * Assessment project status.
         */
        projectStatus?: pulumi.Input<string>;
    }

    /**
     * Properties of a project.
     */
    export interface ProjectPropertiesResponse {
        /**
         * Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
         */
        assessmentSolutionId?: pulumi.Input<string>;
        /**
         * Time when this project was created. Date-Time represented in ISO-8601 format.
         */
        createdTimestamp: pulumi.Input<string>;
        /**
         * The ARM id of service map workspace created by customer.
         */
        customerWorkspaceId?: pulumi.Input<string>;
        /**
         * Location of service map workspace created by customer.
         */
        customerWorkspaceLocation?: pulumi.Input<string>;
        /**
         * Time when last assessment was created. Date-Time represented in ISO-8601 format. This value will be null until assessment is created.
         */
        lastAssessmentTimestamp: pulumi.Input<string>;
        /**
         * Number of assessments created in the project.
         */
        numberOfAssessments: pulumi.Input<number>;
        /**
         * Number of groups created in the project.
         */
        numberOfGroups: pulumi.Input<number>;
        /**
         * Number of machines in the project.
         */
        numberOfMachines: pulumi.Input<number>;
        /**
         * Assessment project status.
         */
        projectStatus?: pulumi.Input<string>;
        /**
         * Provisioning state of the project.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Endpoint at which the collector agent can call agent REST API.
         */
        serviceEndpoint: pulumi.Input<string>;
        /**
         * Time when this project was last updated. Date-Time represented in ISO-8601 format.
         */
        updatedTimestamp: pulumi.Input<string>;
    }

    export interface VmUptime {
        /**
         * Number of days in a month for VM uptime.
         */
        daysPerMonth?: pulumi.Input<number>;
        /**
         * Number of hours per day for VM uptime.
         */
        hoursPerDay?: pulumi.Input<number>;
    }

    export interface VmUptimeResponse {
        /**
         * Number of days in a month for VM uptime.
         */
        daysPerMonth?: pulumi.Input<number>;
        /**
         * Number of hours per day for VM uptime.
         */
        hoursPerDay?: pulumi.Input<number>;
    }
}

export namespace mixedreality {
    /**
     * Common Properties shared by Mixed Reality Accounts
     */
    export interface MixedRealityAccountProperties {
    }

    /**
     * Common Properties shared by Mixed Reality Accounts
     */
    export interface MixedRealityAccountPropertiesResponse {
        /**
         * Correspond domain name of certain Spatial Anchors Account
         */
        accountDomain: pulumi.Input<string>;
        /**
         * unique id of certain account.
         */
        accountId: pulumi.Input<string>;
    }

}

export namespace netapp {
    /**
     * NetApp account properties
     */
    export interface AccountProperties {
        /**
         * Active Directories
         */
        activeDirectories?: pulumi.Input<pulumi.Input<inputs.netapp.ActiveDirectory>[]>;
    }

    /**
     * NetApp account properties
     */
    export interface AccountPropertiesResponse {
        /**
         * Active Directories
         */
        activeDirectories?: pulumi.Input<pulumi.Input<inputs.netapp.ActiveDirectoryResponse>[]>;
        /**
         * Azure lifecycle management
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Active Directory
     */
    export interface ActiveDirectory {
        /**
         * Id of the Active Directory
         */
        activeDirectoryId?: pulumi.Input<string>;
        /**
         * Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain
         */
        dns?: pulumi.Input<string>;
        /**
         * Name of the Active Directory domain
         */
        domain?: pulumi.Input<string>;
        /**
         * The Organizational Unit (OU) within the Windows Active Directory
         */
        organizationalUnit?: pulumi.Input<string>;
        /**
         * Plain text password of Active Directory domain administrator
         */
        password?: pulumi.Input<string>;
        /**
         * The Active Directory site the service will limit Domain Controller discovery to
         */
        site?: pulumi.Input<string>;
        /**
         * NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
         */
        smbServerName?: pulumi.Input<string>;
        /**
         * Status of the Active Directory
         */
        status?: pulumi.Input<string>;
        /**
         * Username of Active Directory domain administrator
         */
        username?: pulumi.Input<string>;
    }

    /**
     * Active Directory
     */
    export interface ActiveDirectoryResponse {
        /**
         * Id of the Active Directory
         */
        activeDirectoryId?: pulumi.Input<string>;
        /**
         * Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain
         */
        dns?: pulumi.Input<string>;
        /**
         * Name of the Active Directory domain
         */
        domain?: pulumi.Input<string>;
        /**
         * The Organizational Unit (OU) within the Windows Active Directory
         */
        organizationalUnit?: pulumi.Input<string>;
        /**
         * Plain text password of Active Directory domain administrator
         */
        password?: pulumi.Input<string>;
        /**
         * The Active Directory site the service will limit Domain Controller discovery to
         */
        site?: pulumi.Input<string>;
        /**
         * NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
         */
        smbServerName?: pulumi.Input<string>;
        /**
         * Status of the Active Directory
         */
        status?: pulumi.Input<string>;
        /**
         * Username of Active Directory domain administrator
         */
        username?: pulumi.Input<string>;
    }

    /**
     * Mount target properties
     */
    export interface MountTargetProperties {
        /**
         * The end of IPv4 address range to use when creating a new mount target
         */
        endIp?: pulumi.Input<string>;
        /**
         * UUID v4 used to identify the MountTarget
         */
        fileSystemId: pulumi.Input<string>;
        /**
         * The gateway of the IPv4 address range to use when creating a new mount target
         */
        gateway?: pulumi.Input<string>;
        /**
         * The netmask of the IPv4 address range to use when creating a new mount target
         */
        netmask?: pulumi.Input<string>;
        /**
         * The SMB server's Fully Qualified Domain Name, FQDN
         */
        smbServerFqdn?: pulumi.Input<string>;
        /**
         * The start of IPv4 address range to use when creating a new mount target
         */
        startIp?: pulumi.Input<string>;
        /**
         * The subnet
         */
        subnet?: pulumi.Input<string>;
    }

    /**
     * Mount target properties
     */
    export interface MountTargetPropertiesResponse {
        /**
         * The end of IPv4 address range to use when creating a new mount target
         */
        endIp?: pulumi.Input<string>;
        /**
         * UUID v4 used to identify the MountTarget
         */
        fileSystemId: pulumi.Input<string>;
        /**
         * The gateway of the IPv4 address range to use when creating a new mount target
         */
        gateway?: pulumi.Input<string>;
        /**
         * The mount target's IPv4 address
         */
        ipAddress: pulumi.Input<string>;
        /**
         * UUID v4 used to identify the MountTarget
         */
        mountTargetId: pulumi.Input<string>;
        /**
         * The netmask of the IPv4 address range to use when creating a new mount target
         */
        netmask?: pulumi.Input<string>;
        /**
         * The SMB server's Fully Qualified Domain Name, FQDN
         */
        smbServerFqdn?: pulumi.Input<string>;
        /**
         * The start of IPv4 address range to use when creating a new mount target
         */
        startIp?: pulumi.Input<string>;
        /**
         * The subnet
         */
        subnet?: pulumi.Input<string>;
    }

    /**
     * Pool properties
     */
    export interface PoolProperties {
        /**
         * The service level of the file system
         */
        serviceLevel: pulumi.Input<string>;
        /**
         * Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
         */
        size: pulumi.Input<number>;
    }

    /**
     * Pool properties
     */
    export interface PoolPropertiesResponse {
        /**
         * UUID v4 used to identify the Pool
         */
        poolId: pulumi.Input<string>;
        /**
         * Azure lifecycle management
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The service level of the file system
         */
        serviceLevel: pulumi.Input<string>;
        /**
         * Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
         */
        size: pulumi.Input<number>;
    }

    /**
     * Replication properties
     */
    export interface ReplicationObject {
        /**
         * Indicates whether the local volume is the source or destination for the Volume Replication
         */
        endpointType?: pulumi.Input<string>;
        /**
         * The remote region for the other end of the Volume Replication.
         */
        remoteVolumeRegion?: pulumi.Input<string>;
        /**
         * The resource ID of the remote volume.
         */
        remoteVolumeResourceId: pulumi.Input<string>;
        /**
         * Id
         */
        replicationId?: pulumi.Input<string>;
        /**
         * Schedule
         */
        replicationSchedule: pulumi.Input<string>;
    }

    /**
     * Replication properties
     */
    export interface ReplicationObjectResponse {
        /**
         * Indicates whether the local volume is the source or destination for the Volume Replication
         */
        endpointType?: pulumi.Input<string>;
        /**
         * The remote region for the other end of the Volume Replication.
         */
        remoteVolumeRegion?: pulumi.Input<string>;
        /**
         * The resource ID of the remote volume.
         */
        remoteVolumeResourceId: pulumi.Input<string>;
        /**
         * Id
         */
        replicationId?: pulumi.Input<string>;
        /**
         * Schedule
         */
        replicationSchedule: pulumi.Input<string>;
    }

    /**
     * Tags are a list of key-value pairs that describe the resource
     */
    export interface ResourceTags {
    }

    /**
     * Tags are a list of key-value pairs that describe the resource
     */
    export interface ResourceTagsResponse {
    }

    /**
     * Snapshot properties
     */
    export interface SnapshotProperties {
        /**
         * UUID v4 used to identify the FileSystem
         */
        fileSystemId?: pulumi.Input<string>;
    }

    /**
     * Snapshot properties
     */
    export interface SnapshotPropertiesResponse {
        /**
         * The creation date of the snapshot
         */
        created: pulumi.Input<string>;
        /**
         * UUID v4 used to identify the FileSystem
         */
        fileSystemId?: pulumi.Input<string>;
        /**
         * Azure lifecycle management
         */
        provisioningState: pulumi.Input<string>;
        /**
         * UUID v4 used to identify the Snapshot
         */
        snapshotId: pulumi.Input<string>;
    }

    /**
     * Volume properties
     */
    export interface VolumeProperties {
        /**
         * A unique file path for the volume. Used when creating mount targets
         */
        creationToken: pulumi.Input<string>;
        /**
         * DataProtection type volumes include an object containing details of the replication
         */
        dataProtection?: pulumi.Input<inputs.netapp.VolumePropertiesProperties>;
        /**
         * Set of export policy rules
         */
        exportPolicy?: pulumi.Input<inputs.netapp.VolumePropertiesProperties>;
        /**
         * Restoring
         */
        isRestoring?: pulumi.Input<boolean>;
        /**
         * List of mount targets
         */
        mountTargets?: pulumi.Input<pulumi.Input<inputs.netapp.MountTargetProperties>[]>;
        /**
         * Set of protocol types
         */
        protocolTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The service level of the file system
         */
        serviceLevel?: pulumi.Input<string>;
        /**
         * UUID v4 or resource identifier used to identify the Snapshot.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
         */
        subnetId: pulumi.Input<string>;
        /**
         * Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
         */
        usageThreshold: pulumi.Input<number>;
        /**
         * What type of volume is this
         */
        volumeType?: pulumi.Input<string>;
    }

    /**
     * DataProtection type volumes include an object containing details of the replication
     */
    export interface VolumePropertiesProperties {
        /**
         * Replication properties
         */
        replication?: pulumi.Input<inputs.netapp.ReplicationObject>;
    }

    /**
     * Volume properties
     */
    export interface VolumePropertiesResponse {
        /**
         * Unique Baremetal Tenant Identifier.
         */
        baremetalTenantId: pulumi.Input<string>;
        /**
         * A unique file path for the volume. Used when creating mount targets
         */
        creationToken: pulumi.Input<string>;
        /**
         * DataProtection type volumes include an object containing details of the replication
         */
        dataProtection?: pulumi.Input<inputs.netapp.VolumePropertiesResponseProperties>;
        /**
         * Set of export policy rules
         */
        exportPolicy?: pulumi.Input<inputs.netapp.VolumePropertiesResponseProperties>;
        /**
         * Unique FileSystem Identifier.
         */
        fileSystemId: pulumi.Input<string>;
        /**
         * Restoring
         */
        isRestoring?: pulumi.Input<boolean>;
        /**
         * List of mount targets
         */
        mountTargets?: pulumi.Input<pulumi.Input<inputs.netapp.MountTargetPropertiesResponse>[]>;
        /**
         * Set of protocol types
         */
        protocolTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Azure lifecycle management
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The service level of the file system
         */
        serviceLevel?: pulumi.Input<string>;
        /**
         * UUID v4 or resource identifier used to identify the Snapshot.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
         */
        subnetId: pulumi.Input<string>;
        /**
         * Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
         */
        usageThreshold: pulumi.Input<number>;
        /**
         * What type of volume is this
         */
        volumeType?: pulumi.Input<string>;
    }

    /**
     * DataProtection type volumes include an object containing details of the replication
     */
    export interface VolumePropertiesResponseProperties {
        /**
         * Replication properties
         */
        replication?: pulumi.Input<inputs.netapp.ReplicationObjectResponse>;
    }
}

export namespace network {
    /**
     * AAD Vpn authentication type related parameters.
     */
    export interface AadAuthenticationParameters {
        /**
         * AAD Vpn authentication parameter AAD audience.
         */
        aadAudience?: pulumi.Input<string>;
        /**
         * AAD Vpn authentication parameter AAD issuer.
         */
        aadIssuer?: pulumi.Input<string>;
        /**
         * AAD Vpn authentication parameter AAD tenant.
         */
        aadTenant?: pulumi.Input<string>;
    }

    /**
     * AAD Vpn authentication type related parameters.
     */
    export interface AadAuthenticationParametersResponse {
        /**
         * AAD Vpn authentication parameter AAD audience.
         */
        aadAudience?: pulumi.Input<string>;
        /**
         * AAD Vpn authentication parameter AAD issuer.
         */
        aadIssuer?: pulumi.Input<string>;
        /**
         * AAD Vpn authentication parameter AAD tenant.
         */
        aadTenant?: pulumi.Input<string>;
    }

    /**
     * AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
     */
    export interface AddressSpace {
        /**
         * A list of address blocks reserved for this virtual network in CIDR notation.
         */
        addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
     */
    export interface AddressSpaceResponse {
        /**
         * A list of address blocks reserved for this virtual network in CIDR notation.
         */
        addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Authentication certificates of an application gateway.
     */
    export interface ApplicationGatewayAuthenticationCertificate {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the authentication certificate that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway authentication certificate.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayAuthenticationCertificatePropertiesFormat>;
    }

    /**
     * Authentication certificates properties of an application gateway.
     */
    export interface ApplicationGatewayAuthenticationCertificatePropertiesFormat {
        /**
         * Certificate public data.
         */
        data?: pulumi.Input<string>;
    }

    /**
     * Authentication certificates properties of an application gateway.
     */
    export interface ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse {
        /**
         * Certificate public data.
         */
        data?: pulumi.Input<string>;
        /**
         * The provisioning state of the authentication certificate resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Authentication certificates of an application gateway.
     */
    export interface ApplicationGatewayAuthenticationCertificateResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the authentication certificate that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway authentication certificate.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Application Gateway autoscale configuration.
     */
    export interface ApplicationGatewayAutoscaleConfiguration {
        /**
         * Upper bound on number of Application Gateway capacity.
         */
        maxCapacity?: pulumi.Input<number>;
        /**
         * Lower bound on number of Application Gateway capacity.
         */
        minCapacity: pulumi.Input<number>;
    }

    /**
     * Application Gateway autoscale configuration.
     */
    export interface ApplicationGatewayAutoscaleConfigurationResponse {
        /**
         * Upper bound on number of Application Gateway capacity.
         */
        maxCapacity?: pulumi.Input<number>;
        /**
         * Lower bound on number of Application Gateway capacity.
         */
        minCapacity: pulumi.Input<number>;
    }

    /**
     * Backend address of an application gateway.
     */
    export interface ApplicationGatewayBackendAddress {
        /**
         * Fully qualified domain name (FQDN).
         */
        fqdn?: pulumi.Input<string>;
        /**
         * IP address.
         */
        ipAddress?: pulumi.Input<string>;
    }

    /**
     * Backend Address Pool of an application gateway.
     */
    export interface ApplicationGatewayBackendAddressPool {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the backend address pool that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway backend address pool.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayBackendAddressPoolPropertiesFormat>;
    }

    /**
     * Properties of Backend Address Pool of an application gateway.
     */
    export interface ApplicationGatewayBackendAddressPoolPropertiesFormat {
        /**
         * Backend addresses.
         */
        backendAddresses?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendAddress>[]>;
    }

    /**
     * Properties of Backend Address Pool of an application gateway.
     */
    export interface ApplicationGatewayBackendAddressPoolPropertiesFormatResponse {
        /**
         * Backend addresses.
         */
        backendAddresses?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendAddressResponse>[]>;
        /**
         * Collection of references to IPs defined in network interfaces.
         */
        backendIPConfigurations: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceIPConfigurationResponse>[]>;
        /**
         * The provisioning state of the backend address pool resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Backend Address Pool of an application gateway.
     */
    export interface ApplicationGatewayBackendAddressPoolResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the backend address pool that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway backend address pool.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayBackendAddressPoolPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Backend address of an application gateway.
     */
    export interface ApplicationGatewayBackendAddressResponse {
        /**
         * Fully qualified domain name (FQDN).
         */
        fqdn?: pulumi.Input<string>;
        /**
         * IP address.
         */
        ipAddress?: pulumi.Input<string>;
    }

    /**
     * Backend address pool settings of an application gateway.
     */
    export interface ApplicationGatewayBackendHttpSettings {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the backend http settings that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway backend HTTP settings.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayBackendHttpSettingsPropertiesFormat>;
    }

    /**
     * Properties of Backend address pool settings of an application gateway.
     */
    export interface ApplicationGatewayBackendHttpSettingsPropertiesFormat {
        /**
         * Cookie name to use for the affinity cookie.
         */
        affinityCookieName?: pulumi.Input<string>;
        /**
         * Array of references to application gateway authentication certificates.
         */
        authenticationCertificates?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * Connection draining of the backend http settings resource.
         */
        connectionDraining?: pulumi.Input<inputs.network.ApplicationGatewayConnectionDraining>;
        /**
         * Cookie based affinity.
         */
        cookieBasedAffinity?: pulumi.Input<string>;
        /**
         * Host header to be sent to the backend servers.
         */
        hostName?: pulumi.Input<string>;
        /**
         * Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
         */
        path?: pulumi.Input<string>;
        /**
         * Whether to pick host header should be picked from the host name of the backend server. Default value is false.
         */
        pickHostNameFromBackendAddress?: pulumi.Input<boolean>;
        /**
         * The destination port on the backend.
         */
        port?: pulumi.Input<number>;
        /**
         * Probe resource of an application gateway.
         */
        probe?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Whether the probe is enabled. Default value is false.
         */
        probeEnabled?: pulumi.Input<boolean>;
        /**
         * The protocol used to communicate with the backend.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
         */
        requestTimeout?: pulumi.Input<number>;
        /**
         * Array of references to application gateway trusted root certificates.
         */
        trustedRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
    }

    /**
     * Properties of Backend address pool settings of an application gateway.
     */
    export interface ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse {
        /**
         * Cookie name to use for the affinity cookie.
         */
        affinityCookieName?: pulumi.Input<string>;
        /**
         * Array of references to application gateway authentication certificates.
         */
        authenticationCertificates?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * Connection draining of the backend http settings resource.
         */
        connectionDraining?: pulumi.Input<inputs.network.ApplicationGatewayConnectionDrainingResponse>;
        /**
         * Cookie based affinity.
         */
        cookieBasedAffinity?: pulumi.Input<string>;
        /**
         * Host header to be sent to the backend servers.
         */
        hostName?: pulumi.Input<string>;
        /**
         * Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
         */
        path?: pulumi.Input<string>;
        /**
         * Whether to pick host header should be picked from the host name of the backend server. Default value is false.
         */
        pickHostNameFromBackendAddress?: pulumi.Input<boolean>;
        /**
         * The destination port on the backend.
         */
        port?: pulumi.Input<number>;
        /**
         * Probe resource of an application gateway.
         */
        probe?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Whether the probe is enabled. Default value is false.
         */
        probeEnabled?: pulumi.Input<boolean>;
        /**
         * The protocol used to communicate with the backend.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The provisioning state of the backend HTTP settings resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
         */
        requestTimeout?: pulumi.Input<number>;
        /**
         * Array of references to application gateway trusted root certificates.
         */
        trustedRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
    }

    /**
     * Backend address pool settings of an application gateway.
     */
    export interface ApplicationGatewayBackendHttpSettingsResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the backend http settings that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway backend HTTP settings.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
     */
    export interface ApplicationGatewayConnectionDraining {
        /**
         * The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
         */
        drainTimeoutInSec: pulumi.Input<number>;
        /**
         * Whether connection draining is enabled or not.
         */
        enabled: pulumi.Input<boolean>;
    }

    /**
     * Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
     */
    export interface ApplicationGatewayConnectionDrainingResponse {
        /**
         * The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
         */
        drainTimeoutInSec: pulumi.Input<number>;
        /**
         * Whether connection draining is enabled or not.
         */
        enabled: pulumi.Input<boolean>;
    }

    /**
     * Customer error of an application gateway.
     */
    export interface ApplicationGatewayCustomError {
        /**
         * Error page URL of the application gateway customer error.
         */
        customErrorPageUrl?: pulumi.Input<string>;
        /**
         * Status code of the application gateway customer error.
         */
        statusCode?: pulumi.Input<string>;
    }

    /**
     * Customer error of an application gateway.
     */
    export interface ApplicationGatewayCustomErrorResponse {
        /**
         * Error page URL of the application gateway customer error.
         */
        customErrorPageUrl?: pulumi.Input<string>;
        /**
         * Status code of the application gateway customer error.
         */
        statusCode?: pulumi.Input<string>;
    }

    /**
     * Allows to disable rules within a rule group or an entire rule group.
     */
    export interface ApplicationGatewayFirewallDisabledRuleGroup {
        /**
         * The name of the rule group that will be disabled.
         */
        ruleGroupName: pulumi.Input<string>;
        /**
         * The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
         */
        rules?: pulumi.Input<pulumi.Input<number>[]>;
    }

    /**
     * Allows to disable rules within a rule group or an entire rule group.
     */
    export interface ApplicationGatewayFirewallDisabledRuleGroupResponse {
        /**
         * The name of the rule group that will be disabled.
         */
        ruleGroupName: pulumi.Input<string>;
        /**
         * The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
         */
        rules?: pulumi.Input<pulumi.Input<number>[]>;
    }

    /**
     * Allow to exclude some variable satisfy the condition for the WAF check.
     */
    export interface ApplicationGatewayFirewallExclusion {
        /**
         * The variable to be excluded.
         */
        matchVariable: pulumi.Input<string>;
        /**
         * When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
         */
        selector: pulumi.Input<string>;
        /**
         * When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
         */
        selectorMatchOperator: pulumi.Input<string>;
    }

    /**
     * Allow to exclude some variable satisfy the condition for the WAF check.
     */
    export interface ApplicationGatewayFirewallExclusionResponse {
        /**
         * The variable to be excluded.
         */
        matchVariable: pulumi.Input<string>;
        /**
         * When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
         */
        selector: pulumi.Input<string>;
        /**
         * When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
         */
        selectorMatchOperator: pulumi.Input<string>;
    }

    /**
     * Frontend IP configuration of an application gateway.
     */
    export interface ApplicationGatewayFrontendIPConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the frontend IP configuration that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway frontend IP configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayFrontendIPConfigurationPropertiesFormat>;
    }

    /**
     * Properties of Frontend IP configuration of an application gateway.
     */
    export interface ApplicationGatewayFrontendIPConfigurationPropertiesFormat {
        /**
         * PrivateIPAddress of the network interface IP Configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * Reference to the application gateway private link configuration.
         */
        privateLinkConfiguration?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Reference to the PublicIP resource.
         */
        publicIPAddress?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of Frontend IP configuration of an application gateway.
     */
    export interface ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse {
        /**
         * PrivateIPAddress of the network interface IP Configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * Reference to the application gateway private link configuration.
         */
        privateLinkConfiguration?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The provisioning state of the frontend IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Reference to the PublicIP resource.
         */
        publicIPAddress?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * Frontend IP configuration of an application gateway.
     */
    export interface ApplicationGatewayFrontendIPConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the frontend IP configuration that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway frontend IP configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Frontend port of an application gateway.
     */
    export interface ApplicationGatewayFrontendPort {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the frontend port that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway frontend port.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayFrontendPortPropertiesFormat>;
    }

    /**
     * Properties of Frontend port of an application gateway.
     */
    export interface ApplicationGatewayFrontendPortPropertiesFormat {
        /**
         * Frontend port.
         */
        port?: pulumi.Input<number>;
    }

    /**
     * Properties of Frontend port of an application gateway.
     */
    export interface ApplicationGatewayFrontendPortPropertiesFormatResponse {
        /**
         * Frontend port.
         */
        port?: pulumi.Input<number>;
        /**
         * The provisioning state of the frontend port resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Frontend port of an application gateway.
     */
    export interface ApplicationGatewayFrontendPortResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the frontend port that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway frontend port.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayFrontendPortPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Header configuration of the Actions set in Application Gateway.
     */
    export interface ApplicationGatewayHeaderConfiguration {
        /**
         * Header name of the header configuration.
         */
        headerName?: pulumi.Input<string>;
        /**
         * Header value of the header configuration.
         */
        headerValue?: pulumi.Input<string>;
    }

    /**
     * Header configuration of the Actions set in Application Gateway.
     */
    export interface ApplicationGatewayHeaderConfigurationResponse {
        /**
         * Header name of the header configuration.
         */
        headerName?: pulumi.Input<string>;
        /**
         * Header value of the header configuration.
         */
        headerValue?: pulumi.Input<string>;
    }

    /**
     * Http listener of an application gateway.
     */
    export interface ApplicationGatewayHttpListener {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the HTTP listener that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway HTTP listener.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayHttpListenerPropertiesFormat>;
    }

    /**
     * Properties of HTTP listener of an application gateway.
     */
    export interface ApplicationGatewayHttpListenerPropertiesFormat {
        /**
         * Custom error configurations of the HTTP listener.
         */
        customErrorConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayCustomError>[]>;
        /**
         * Reference to the FirewallPolicy resource.
         */
        firewallPolicy?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Frontend IP configuration resource of an application gateway.
         */
        frontendIPConfiguration?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Frontend port resource of an application gateway.
         */
        frontendPort?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Host name of HTTP listener.
         */
        hostName?: pulumi.Input<string>;
        /**
         * List of Host names for HTTP Listener that allows special wildcard characters as well.
         */
        hostNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Protocol of the HTTP listener.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Applicable only if protocol is https. Enables SNI for multi-hosting.
         */
        requireServerNameIndication?: pulumi.Input<boolean>;
        /**
         * SSL certificate resource of an application gateway.
         */
        sslCertificate?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of HTTP listener of an application gateway.
     */
    export interface ApplicationGatewayHttpListenerPropertiesFormatResponse {
        /**
         * Custom error configurations of the HTTP listener.
         */
        customErrorConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayCustomErrorResponse>[]>;
        /**
         * Reference to the FirewallPolicy resource.
         */
        firewallPolicy?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Frontend IP configuration resource of an application gateway.
         */
        frontendIPConfiguration?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Frontend port resource of an application gateway.
         */
        frontendPort?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Host name of HTTP listener.
         */
        hostName?: pulumi.Input<string>;
        /**
         * List of Host names for HTTP Listener that allows special wildcard characters as well.
         */
        hostNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Protocol of the HTTP listener.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The provisioning state of the HTTP listener resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Applicable only if protocol is https. Enables SNI for multi-hosting.
         */
        requireServerNameIndication?: pulumi.Input<boolean>;
        /**
         * SSL certificate resource of an application gateway.
         */
        sslCertificate?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * Http listener of an application gateway.
     */
    export interface ApplicationGatewayHttpListenerResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the HTTP listener that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway HTTP listener.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayHttpListenerPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
     */
    export interface ApplicationGatewayIPConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the IP configuration that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway IP configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayIPConfigurationPropertiesFormat>;
    }

    /**
     * Properties of IP configuration of an application gateway.
     */
    export interface ApplicationGatewayIPConfigurationPropertiesFormat {
        /**
         * Reference to the subnet resource. A subnet from where application gateway gets its private address.
         */
        subnet?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of IP configuration of an application gateway.
     */
    export interface ApplicationGatewayIPConfigurationPropertiesFormatResponse {
        /**
         * The provisioning state of the application gateway IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Reference to the subnet resource. A subnet from where application gateway gets its private address.
         */
        subnet?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
     */
    export interface ApplicationGatewayIPConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the IP configuration that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway IP configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayIPConfigurationPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Path rule of URL path map of an application gateway.
     */
    export interface ApplicationGatewayPathRule {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the path rule that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway path rule.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayPathRulePropertiesFormat>;
    }

    /**
     * Properties of path rule of an application gateway.
     */
    export interface ApplicationGatewayPathRulePropertiesFormat {
        /**
         * Backend address pool resource of URL path map path rule.
         */
        backendAddressPool?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Backend http settings resource of URL path map path rule.
         */
        backendHttpSettings?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Reference to the FirewallPolicy resource.
         */
        firewallPolicy?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Path rules of URL path map.
         */
        paths?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Redirect configuration resource of URL path map path rule.
         */
        redirectConfiguration?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Rewrite rule set resource of URL path map path rule.
         */
        rewriteRuleSet?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of path rule of an application gateway.
     */
    export interface ApplicationGatewayPathRulePropertiesFormatResponse {
        /**
         * Backend address pool resource of URL path map path rule.
         */
        backendAddressPool?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Backend http settings resource of URL path map path rule.
         */
        backendHttpSettings?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Reference to the FirewallPolicy resource.
         */
        firewallPolicy?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Path rules of URL path map.
         */
        paths?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the path rule resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Redirect configuration resource of URL path map path rule.
         */
        redirectConfiguration?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Rewrite rule set resource of URL path map path rule.
         */
        rewriteRuleSet?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * Path rule of URL path map of an application gateway.
     */
    export interface ApplicationGatewayPathRuleResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the path rule that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway path rule.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayPathRulePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of Private Link Resource of an application gateway.
     */
    export interface ApplicationGatewayPrivateEndpointConnectionProperties {
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.network.PrivateLinkServiceConnectionState>;
    }

    /**
     * Properties of Private Link Resource of an application gateway.
     */
    export interface ApplicationGatewayPrivateEndpointConnectionPropertiesResponse {
        /**
         * The consumer link id.
         */
        linkIdentifier: pulumi.Input<string>;
        /**
         * The resource of private end point.
         */
        privateEndpoint: pulumi.Input<inputs.network.PrivateEndpointResponse>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.network.PrivateLinkServiceConnectionStateResponse>;
        /**
         * The provisioning state of the application gateway private endpoint connection resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Private Endpoint connection on an application gateway.
     */
    export interface ApplicationGatewayPrivateEndpointConnectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the private endpoint connection on an application gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway private endpoint connection.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayPrivateEndpointConnectionPropertiesResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Private Link Configuration on an application gateway.
     */
    export interface ApplicationGatewayPrivateLinkConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the private link configuration that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway private link configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayPrivateLinkConfigurationProperties>;
    }

    /**
     * Properties of private link configuration on an application gateway.
     */
    export interface ApplicationGatewayPrivateLinkConfigurationProperties {
        /**
         * An array of application gateway private link ip configurations.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayPrivateLinkIpConfiguration>[]>;
    }

    /**
     * Properties of private link configuration on an application gateway.
     */
    export interface ApplicationGatewayPrivateLinkConfigurationPropertiesResponse {
        /**
         * An array of application gateway private link ip configurations.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayPrivateLinkIpConfigurationResponse>[]>;
        /**
         * The provisioning state of the application gateway private link configuration.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Private Link Configuration on an application gateway.
     */
    export interface ApplicationGatewayPrivateLinkConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the private link configuration that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway private link configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayPrivateLinkConfigurationPropertiesResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The application gateway private link ip configuration.
     */
    export interface ApplicationGatewayPrivateLinkIpConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of application gateway private link ip configuration.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of an application gateway private link ip configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayPrivateLinkIpConfigurationProperties>;
    }

    /**
     * Properties of an application gateway private link IP configuration.
     */
    export interface ApplicationGatewayPrivateLinkIpConfigurationProperties {
        /**
         * Whether the ip configuration is primary or not.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * The private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * Reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of an application gateway private link IP configuration.
     */
    export interface ApplicationGatewayPrivateLinkIpConfigurationPropertiesResponse {
        /**
         * Whether the ip configuration is primary or not.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * The private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The provisioning state of the application gateway private link IP configuration.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * The application gateway private link ip configuration.
     */
    export interface ApplicationGatewayPrivateLinkIpConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of application gateway private link ip configuration.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of an application gateway private link ip configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayPrivateLinkIpConfigurationPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Probe of the application gateway.
     */
    export interface ApplicationGatewayProbe {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the probe that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway probe.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayProbePropertiesFormat>;
    }

    /**
     * Application gateway probe health response match.
     */
    export interface ApplicationGatewayProbeHealthResponseMatch {
        /**
         * Body that must be contained in the health response. Default value is empty.
         */
        body?: pulumi.Input<string>;
        /**
         * Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
         */
        statusCodes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Application gateway probe health response match.
     */
    export interface ApplicationGatewayProbeHealthResponseMatchResponse {
        /**
         * Body that must be contained in the health response. Default value is empty.
         */
        body?: pulumi.Input<string>;
        /**
         * Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
         */
        statusCodes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of probe of an application gateway.
     */
    export interface ApplicationGatewayProbePropertiesFormat {
        /**
         * Host name to send the probe to.
         */
        host?: pulumi.Input<string>;
        /**
         * The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
         */
        interval?: pulumi.Input<number>;
        /**
         * Criterion for classifying a healthy probe response.
         */
        match?: pulumi.Input<inputs.network.ApplicationGatewayProbeHealthResponseMatch>;
        /**
         * Minimum number of servers that are always marked healthy. Default value is 0.
         */
        minServers?: pulumi.Input<number>;
        /**
         * Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
         */
        path?: pulumi.Input<string>;
        /**
         * Whether the host header should be picked from the backend http settings. Default value is false.
         */
        pickHostNameFromBackendHttpSettings?: pulumi.Input<boolean>;
        /**
         * Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for the probe.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
         */
        timeout?: pulumi.Input<number>;
        /**
         * The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
         */
        unhealthyThreshold?: pulumi.Input<number>;
    }

    /**
     * Properties of probe of an application gateway.
     */
    export interface ApplicationGatewayProbePropertiesFormatResponse {
        /**
         * Host name to send the probe to.
         */
        host?: pulumi.Input<string>;
        /**
         * The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
         */
        interval?: pulumi.Input<number>;
        /**
         * Criterion for classifying a healthy probe response.
         */
        match?: pulumi.Input<inputs.network.ApplicationGatewayProbeHealthResponseMatchResponse>;
        /**
         * Minimum number of servers that are always marked healthy. Default value is 0.
         */
        minServers?: pulumi.Input<number>;
        /**
         * Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
         */
        path?: pulumi.Input<string>;
        /**
         * Whether the host header should be picked from the backend http settings. Default value is false.
         */
        pickHostNameFromBackendHttpSettings?: pulumi.Input<boolean>;
        /**
         * Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for the probe.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The provisioning state of the probe resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
         */
        timeout?: pulumi.Input<number>;
        /**
         * The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
         */
        unhealthyThreshold?: pulumi.Input<number>;
    }

    /**
     * Probe of the application gateway.
     */
    export interface ApplicationGatewayProbeResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the probe that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway probe.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayProbePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of the application gateway.
     */
    export interface ApplicationGatewayPropertiesFormat {
        /**
         * Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        authenticationCertificates?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayAuthenticationCertificate>[]>;
        /**
         * Autoscale Configuration.
         */
        autoscaleConfiguration?: pulumi.Input<inputs.network.ApplicationGatewayAutoscaleConfiguration>;
        /**
         * Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        backendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendAddressPool>[]>;
        /**
         * Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        backendHttpSettingsCollection?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendHttpSettings>[]>;
        /**
         * Custom error configurations of the application gateway resource.
         */
        customErrorConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayCustomError>[]>;
        /**
         * Whether FIPS is enabled on the application gateway resource.
         */
        enableFips?: pulumi.Input<boolean>;
        /**
         * Whether HTTP2 is enabled on the application gateway resource.
         */
        enableHttp2?: pulumi.Input<boolean>;
        /**
         * Reference to the FirewallPolicy resource.
         */
        firewallPolicy?: pulumi.Input<inputs.network.SubResource>;
        /**
         * If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
         */
        forceFirewallPolicyAssociation?: pulumi.Input<boolean>;
        /**
         * Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        frontendIPConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFrontendIPConfiguration>[]>;
        /**
         * Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        frontendPorts?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFrontendPort>[]>;
        /**
         * Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        gatewayIPConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayIPConfiguration>[]>;
        /**
         * Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        httpListeners?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayHttpListener>[]>;
        /**
         * PrivateLink configurations on application gateway.
         */
        privateLinkConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayPrivateLinkConfiguration>[]>;
        /**
         * Probes of the application gateway resource.
         */
        probes?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayProbe>[]>;
        /**
         * Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        redirectConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRedirectConfiguration>[]>;
        /**
         * Request routing rules of the application gateway resource.
         */
        requestRoutingRules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRequestRoutingRule>[]>;
        /**
         * Rewrite rules for the application gateway resource.
         */
        rewriteRuleSets?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleSet>[]>;
        /**
         * SKU of the application gateway resource.
         */
        sku?: pulumi.Input<inputs.network.ApplicationGatewaySku>;
        /**
         * SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        sslCertificates?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewaySslCertificate>[]>;
        /**
         * SSL policy of the application gateway resource.
         */
        sslPolicy?: pulumi.Input<inputs.network.ApplicationGatewaySslPolicy>;
        /**
         * Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        trustedRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayTrustedRootCertificate>[]>;
        /**
         * URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        urlPathMaps?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayUrlPathMap>[]>;
        /**
         * Web application firewall configuration.
         */
        webApplicationFirewallConfiguration?: pulumi.Input<inputs.network.ApplicationGatewayWebApplicationFirewallConfiguration>;
    }

    /**
     * Properties of the application gateway.
     */
    export interface ApplicationGatewayPropertiesFormatResponse {
        /**
         * Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        authenticationCertificates?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayAuthenticationCertificateResponse>[]>;
        /**
         * Autoscale Configuration.
         */
        autoscaleConfiguration?: pulumi.Input<inputs.network.ApplicationGatewayAutoscaleConfigurationResponse>;
        /**
         * Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        backendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendAddressPoolResponse>[]>;
        /**
         * Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        backendHttpSettingsCollection?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendHttpSettingsResponse>[]>;
        /**
         * Custom error configurations of the application gateway resource.
         */
        customErrorConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayCustomErrorResponse>[]>;
        /**
         * Whether FIPS is enabled on the application gateway resource.
         */
        enableFips?: pulumi.Input<boolean>;
        /**
         * Whether HTTP2 is enabled on the application gateway resource.
         */
        enableHttp2?: pulumi.Input<boolean>;
        /**
         * Reference to the FirewallPolicy resource.
         */
        firewallPolicy?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
         */
        forceFirewallPolicyAssociation?: pulumi.Input<boolean>;
        /**
         * Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        frontendIPConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFrontendIPConfigurationResponse>[]>;
        /**
         * Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        frontendPorts?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFrontendPortResponse>[]>;
        /**
         * Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        gatewayIPConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayIPConfigurationResponse>[]>;
        /**
         * Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        httpListeners?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayHttpListenerResponse>[]>;
        /**
         * Operational state of the application gateway resource.
         */
        operationalState: pulumi.Input<string>;
        /**
         * Private Endpoint connections on application gateway.
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayPrivateEndpointConnectionResponse>[]>;
        /**
         * PrivateLink configurations on application gateway.
         */
        privateLinkConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayPrivateLinkConfigurationResponse>[]>;
        /**
         * Probes of the application gateway resource.
         */
        probes?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayProbeResponse>[]>;
        /**
         * The provisioning state of the application gateway resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        redirectConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRedirectConfigurationResponse>[]>;
        /**
         * Request routing rules of the application gateway resource.
         */
        requestRoutingRules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRequestRoutingRuleResponse>[]>;
        /**
         * The resource GUID property of the application gateway resource.
         */
        resourceGuid: pulumi.Input<string>;
        /**
         * Rewrite rules for the application gateway resource.
         */
        rewriteRuleSets?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleSetResponse>[]>;
        /**
         * SKU of the application gateway resource.
         */
        sku?: pulumi.Input<inputs.network.ApplicationGatewaySkuResponse>;
        /**
         * SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        sslCertificates?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewaySslCertificateResponse>[]>;
        /**
         * SSL policy of the application gateway resource.
         */
        sslPolicy?: pulumi.Input<inputs.network.ApplicationGatewaySslPolicyResponse>;
        /**
         * Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        trustedRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayTrustedRootCertificateResponse>[]>;
        /**
         * URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
         */
        urlPathMaps?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayUrlPathMapResponse>[]>;
        /**
         * Web application firewall configuration.
         */
        webApplicationFirewallConfiguration?: pulumi.Input<inputs.network.ApplicationGatewayWebApplicationFirewallConfigurationResponse>;
    }

    /**
     * Redirect configuration of an application gateway.
     */
    export interface ApplicationGatewayRedirectConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the redirect configuration that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway redirect configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayRedirectConfigurationPropertiesFormat>;
    }

    /**
     * Properties of redirect configuration of the application gateway.
     */
    export interface ApplicationGatewayRedirectConfigurationPropertiesFormat {
        /**
         * Include path in the redirected url.
         */
        includePath?: pulumi.Input<boolean>;
        /**
         * Include query string in the redirected url.
         */
        includeQueryString?: pulumi.Input<boolean>;
        /**
         * Path rules specifying redirect configuration.
         */
        pathRules?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * HTTP redirection type.
         */
        redirectType?: pulumi.Input<string>;
        /**
         * Request routing specifying redirect configuration.
         */
        requestRoutingRules?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * Reference to a listener to redirect the request to.
         */
        targetListener?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Url to redirect the request to.
         */
        targetUrl?: pulumi.Input<string>;
        /**
         * Url path maps specifying default redirect configuration.
         */
        urlPathMaps?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
    }

    /**
     * Properties of redirect configuration of the application gateway.
     */
    export interface ApplicationGatewayRedirectConfigurationPropertiesFormatResponse {
        /**
         * Include path in the redirected url.
         */
        includePath?: pulumi.Input<boolean>;
        /**
         * Include query string in the redirected url.
         */
        includeQueryString?: pulumi.Input<boolean>;
        /**
         * Path rules specifying redirect configuration.
         */
        pathRules?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * HTTP redirection type.
         */
        redirectType?: pulumi.Input<string>;
        /**
         * Request routing specifying redirect configuration.
         */
        requestRoutingRules?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * Reference to a listener to redirect the request to.
         */
        targetListener?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Url to redirect the request to.
         */
        targetUrl?: pulumi.Input<string>;
        /**
         * Url path maps specifying default redirect configuration.
         */
        urlPathMaps?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
    }

    /**
     * Redirect configuration of an application gateway.
     */
    export interface ApplicationGatewayRedirectConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the redirect configuration that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway redirect configuration.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayRedirectConfigurationPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Request routing rule of an application gateway.
     */
    export interface ApplicationGatewayRequestRoutingRule {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the request routing rule that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway request routing rule.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayRequestRoutingRulePropertiesFormat>;
    }

    /**
     * Properties of request routing rule of the application gateway.
     */
    export interface ApplicationGatewayRequestRoutingRulePropertiesFormat {
        /**
         * Backend address pool resource of the application gateway.
         */
        backendAddressPool?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Backend http settings resource of the application gateway.
         */
        backendHttpSettings?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Http listener resource of the application gateway.
         */
        httpListener?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Priority of the request routing rule.
         */
        priority?: pulumi.Input<number>;
        /**
         * Redirect configuration resource of the application gateway.
         */
        redirectConfiguration?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Rewrite Rule Set resource in Basic rule of the application gateway.
         */
        rewriteRuleSet?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Rule type.
         */
        ruleType?: pulumi.Input<string>;
        /**
         * URL path map resource of the application gateway.
         */
        urlPathMap?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of request routing rule of the application gateway.
     */
    export interface ApplicationGatewayRequestRoutingRulePropertiesFormatResponse {
        /**
         * Backend address pool resource of the application gateway.
         */
        backendAddressPool?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Backend http settings resource of the application gateway.
         */
        backendHttpSettings?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Http listener resource of the application gateway.
         */
        httpListener?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Priority of the request routing rule.
         */
        priority?: pulumi.Input<number>;
        /**
         * The provisioning state of the request routing rule resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Redirect configuration resource of the application gateway.
         */
        redirectConfiguration?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Rewrite Rule Set resource in Basic rule of the application gateway.
         */
        rewriteRuleSet?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Rule type.
         */
        ruleType?: pulumi.Input<string>;
        /**
         * URL path map resource of the application gateway.
         */
        urlPathMap?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * Request routing rule of an application gateway.
     */
    export interface ApplicationGatewayRequestRoutingRuleResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the request routing rule that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway request routing rule.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayRequestRoutingRulePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Application gateway resource.
     */
    export interface ApplicationGatewayResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The identity of the application gateway, if configured.
         */
        identity?: pulumi.Input<inputs.network.ManagedServiceIdentityResponse>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the application gateway.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
        /**
         * A list of availability zones denoting where the resource needs to come from.
         */
        zones?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Rewrite rule of an application gateway.
     */
    export interface ApplicationGatewayRewriteRule {
        /**
         * Set of actions to be done as part of the rewrite Rule.
         */
        actionSet?: pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleActionSet>;
        /**
         * Conditions based on which the action set execution will be evaluated.
         */
        conditions?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleCondition>[]>;
        /**
         * Name of the rewrite rule that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
         */
        ruleSequence?: pulumi.Input<number>;
    }

    /**
     * Set of actions in the Rewrite Rule in Application Gateway.
     */
    export interface ApplicationGatewayRewriteRuleActionSet {
        /**
         * Request Header Actions in the Action Set.
         */
        requestHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayHeaderConfiguration>[]>;
        /**
         * Response Header Actions in the Action Set.
         */
        responseHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayHeaderConfiguration>[]>;
        /**
         * Url Configuration Action in the Action Set.
         */
        urlConfiguration?: pulumi.Input<inputs.network.ApplicationGatewayUrlConfiguration>;
    }

    /**
     * Set of actions in the Rewrite Rule in Application Gateway.
     */
    export interface ApplicationGatewayRewriteRuleActionSetResponse {
        /**
         * Request Header Actions in the Action Set.
         */
        requestHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayHeaderConfigurationResponse>[]>;
        /**
         * Response Header Actions in the Action Set.
         */
        responseHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayHeaderConfigurationResponse>[]>;
        /**
         * Url Configuration Action in the Action Set.
         */
        urlConfiguration?: pulumi.Input<inputs.network.ApplicationGatewayUrlConfigurationResponse>;
    }

    /**
     * Set of conditions in the Rewrite Rule in Application Gateway.
     */
    export interface ApplicationGatewayRewriteRuleCondition {
        /**
         * Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison.
         */
        ignoreCase?: pulumi.Input<boolean>;
        /**
         * Setting this value as truth will force to check the negation of the condition given by the user.
         */
        negate?: pulumi.Input<boolean>;
        /**
         * The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
         */
        pattern?: pulumi.Input<string>;
        /**
         * The condition parameter of the RewriteRuleCondition.
         */
        variable?: pulumi.Input<string>;
    }

    /**
     * Set of conditions in the Rewrite Rule in Application Gateway.
     */
    export interface ApplicationGatewayRewriteRuleConditionResponse {
        /**
         * Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison.
         */
        ignoreCase?: pulumi.Input<boolean>;
        /**
         * Setting this value as truth will force to check the negation of the condition given by the user.
         */
        negate?: pulumi.Input<boolean>;
        /**
         * The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
         */
        pattern?: pulumi.Input<string>;
        /**
         * The condition parameter of the RewriteRuleCondition.
         */
        variable?: pulumi.Input<string>;
    }

    /**
     * Rewrite rule of an application gateway.
     */
    export interface ApplicationGatewayRewriteRuleResponse {
        /**
         * Set of actions to be done as part of the rewrite Rule.
         */
        actionSet?: pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleActionSetResponse>;
        /**
         * Conditions based on which the action set execution will be evaluated.
         */
        conditions?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleConditionResponse>[]>;
        /**
         * Name of the rewrite rule that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
         */
        ruleSequence?: pulumi.Input<number>;
    }

    /**
     * Rewrite rule set of an application gateway.
     */
    export interface ApplicationGatewayRewriteRuleSet {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the rewrite rule set that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway rewrite rule set.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleSetPropertiesFormat>;
    }

    /**
     * Properties of rewrite rule set of the application gateway.
     */
    export interface ApplicationGatewayRewriteRuleSetPropertiesFormat {
        /**
         * Rewrite rules in the rewrite rule set.
         */
        rewriteRules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRule>[]>;
    }

    /**
     * Properties of rewrite rule set of the application gateway.
     */
    export interface ApplicationGatewayRewriteRuleSetPropertiesFormatResponse {
        /**
         * The provisioning state of the rewrite rule set resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Rewrite rules in the rewrite rule set.
         */
        rewriteRules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleResponse>[]>;
    }

    /**
     * Rewrite rule set of an application gateway.
     */
    export interface ApplicationGatewayRewriteRuleSetResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the rewrite rule set that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway rewrite rule set.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleSetPropertiesFormatResponse>;
    }

    /**
     * SKU of an application gateway.
     */
    export interface ApplicationGatewaySku {
        /**
         * Capacity (instance count) of an application gateway.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Name of an application gateway SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of an application gateway.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * SKU of an application gateway.
     */
    export interface ApplicationGatewaySkuResponse {
        /**
         * Capacity (instance count) of an application gateway.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Name of an application gateway SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of an application gateway.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * SSL certificates of an application gateway.
     */
    export interface ApplicationGatewaySslCertificate {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the SSL certificate that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway SSL certificate.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewaySslCertificatePropertiesFormat>;
    }

    /**
     * Properties of SSL certificates of an application gateway.
     */
    export interface ApplicationGatewaySslCertificatePropertiesFormat {
        /**
         * Base-64 encoded pfx certificate. Only applicable in PUT Request.
         */
        data?: pulumi.Input<string>;
        /**
         * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
         */
        keyVaultSecretId?: pulumi.Input<string>;
        /**
         * Password for the pfx file specified in data. Only applicable in PUT request.
         */
        password?: pulumi.Input<string>;
    }

    /**
     * Properties of SSL certificates of an application gateway.
     */
    export interface ApplicationGatewaySslCertificatePropertiesFormatResponse {
        /**
         * Base-64 encoded pfx certificate. Only applicable in PUT Request.
         */
        data?: pulumi.Input<string>;
        /**
         * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
         */
        keyVaultSecretId?: pulumi.Input<string>;
        /**
         * Password for the pfx file specified in data. Only applicable in PUT request.
         */
        password?: pulumi.Input<string>;
        /**
         * The provisioning state of the SSL certificate resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
         */
        publicCertData: pulumi.Input<string>;
    }

    /**
     * SSL certificates of an application gateway.
     */
    export interface ApplicationGatewaySslCertificateResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the SSL certificate that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway SSL certificate.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewaySslCertificatePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Application Gateway Ssl policy.
     */
    export interface ApplicationGatewaySslPolicy {
        /**
         * Ssl cipher suites to be enabled in the specified order to application gateway.
         */
        cipherSuites?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Ssl protocols to be disabled on application gateway.
         */
        disabledSslProtocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Minimum version of Ssl protocol to be supported on application gateway.
         */
        minProtocolVersion?: pulumi.Input<string>;
        /**
         * Name of Ssl predefined policy.
         */
        policyName?: pulumi.Input<string>;
        /**
         * Type of Ssl Policy.
         */
        policyType?: pulumi.Input<string>;
    }

    /**
     * Application Gateway Ssl policy.
     */
    export interface ApplicationGatewaySslPolicyResponse {
        /**
         * Ssl cipher suites to be enabled in the specified order to application gateway.
         */
        cipherSuites?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Ssl protocols to be disabled on application gateway.
         */
        disabledSslProtocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Minimum version of Ssl protocol to be supported on application gateway.
         */
        minProtocolVersion?: pulumi.Input<string>;
        /**
         * Name of Ssl predefined policy.
         */
        policyName?: pulumi.Input<string>;
        /**
         * Type of Ssl Policy.
         */
        policyType?: pulumi.Input<string>;
    }

    /**
     * Trusted Root certificates of an application gateway.
     */
    export interface ApplicationGatewayTrustedRootCertificate {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the trusted root certificate that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway trusted root certificate.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayTrustedRootCertificatePropertiesFormat>;
    }

    /**
     * Trusted Root certificates properties of an application gateway.
     */
    export interface ApplicationGatewayTrustedRootCertificatePropertiesFormat {
        /**
         * Certificate public data.
         */
        data?: pulumi.Input<string>;
        /**
         * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
         */
        keyVaultSecretId?: pulumi.Input<string>;
    }

    /**
     * Trusted Root certificates properties of an application gateway.
     */
    export interface ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse {
        /**
         * Certificate public data.
         */
        data?: pulumi.Input<string>;
        /**
         * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
         */
        keyVaultSecretId?: pulumi.Input<string>;
        /**
         * The provisioning state of the trusted root certificate resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Trusted Root certificates of an application gateway.
     */
    export interface ApplicationGatewayTrustedRootCertificateResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the trusted root certificate that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway trusted root certificate.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Url configuration of the Actions set in Application Gateway.
     */
    export interface ApplicationGatewayUrlConfiguration {
        /**
         * Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
         */
        modifiedPath?: pulumi.Input<string>;
        /**
         * Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
         */
        modifiedQueryString?: pulumi.Input<string>;
        /**
         * If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
         */
        reroute?: pulumi.Input<boolean>;
    }

    /**
     * Url configuration of the Actions set in Application Gateway.
     */
    export interface ApplicationGatewayUrlConfigurationResponse {
        /**
         * Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
         */
        modifiedPath?: pulumi.Input<string>;
        /**
         * Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
         */
        modifiedQueryString?: pulumi.Input<string>;
        /**
         * If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
         */
        reroute?: pulumi.Input<boolean>;
    }

    /**
     * UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
     */
    export interface ApplicationGatewayUrlPathMap {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the URL path map that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway URL path map.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayUrlPathMapPropertiesFormat>;
    }

    /**
     * Properties of UrlPathMap of the application gateway.
     */
    export interface ApplicationGatewayUrlPathMapPropertiesFormat {
        /**
         * Default backend address pool resource of URL path map.
         */
        defaultBackendAddressPool?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Default backend http settings resource of URL path map.
         */
        defaultBackendHttpSettings?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Default redirect configuration resource of URL path map.
         */
        defaultRedirectConfiguration?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Default Rewrite rule set resource of URL path map.
         */
        defaultRewriteRuleSet?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Path rule of URL path map resource.
         */
        pathRules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayPathRule>[]>;
    }

    /**
     * Properties of UrlPathMap of the application gateway.
     */
    export interface ApplicationGatewayUrlPathMapPropertiesFormatResponse {
        /**
         * Default backend address pool resource of URL path map.
         */
        defaultBackendAddressPool?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Default backend http settings resource of URL path map.
         */
        defaultBackendHttpSettings?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Default redirect configuration resource of URL path map.
         */
        defaultRedirectConfiguration?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Default Rewrite rule set resource of URL path map.
         */
        defaultRewriteRuleSet?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Path rule of URL path map resource.
         */
        pathRules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayPathRuleResponse>[]>;
        /**
         * The provisioning state of the URL path map resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
     */
    export interface ApplicationGatewayUrlPathMapResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the URL path map that is unique within an Application Gateway.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the application gateway URL path map.
         */
        properties?: pulumi.Input<inputs.network.ApplicationGatewayUrlPathMapPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Application gateway web application firewall configuration.
     */
    export interface ApplicationGatewayWebApplicationFirewallConfiguration {
        /**
         * The disabled rule groups.
         */
        disabledRuleGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFirewallDisabledRuleGroup>[]>;
        /**
         * Whether the web application firewall is enabled or not.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * The exclusion list.
         */
        exclusions?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFirewallExclusion>[]>;
        /**
         * Maximum file upload size in Mb for WAF.
         */
        fileUploadLimitInMb?: pulumi.Input<number>;
        /**
         * Web application firewall mode.
         */
        firewallMode: pulumi.Input<string>;
        /**
         * Maximum request body size for WAF.
         */
        maxRequestBodySize?: pulumi.Input<number>;
        /**
         * Maximum request body size in Kb for WAF.
         */
        maxRequestBodySizeInKb?: pulumi.Input<number>;
        /**
         * Whether allow WAF to check request Body.
         */
        requestBodyCheck?: pulumi.Input<boolean>;
        /**
         * The type of the web application firewall rule set. Possible values are: 'OWASP'.
         */
        ruleSetType: pulumi.Input<string>;
        /**
         * The version of the rule set type.
         */
        ruleSetVersion: pulumi.Input<string>;
    }

    /**
     * Application gateway web application firewall configuration.
     */
    export interface ApplicationGatewayWebApplicationFirewallConfigurationResponse {
        /**
         * The disabled rule groups.
         */
        disabledRuleGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFirewallDisabledRuleGroupResponse>[]>;
        /**
         * Whether the web application firewall is enabled or not.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * The exclusion list.
         */
        exclusions?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayFirewallExclusionResponse>[]>;
        /**
         * Maximum file upload size in Mb for WAF.
         */
        fileUploadLimitInMb?: pulumi.Input<number>;
        /**
         * Web application firewall mode.
         */
        firewallMode: pulumi.Input<string>;
        /**
         * Maximum request body size for WAF.
         */
        maxRequestBodySize?: pulumi.Input<number>;
        /**
         * Maximum request body size in Kb for WAF.
         */
        maxRequestBodySizeInKb?: pulumi.Input<number>;
        /**
         * Whether allow WAF to check request Body.
         */
        requestBodyCheck?: pulumi.Input<boolean>;
        /**
         * The type of the web application firewall rule set. Possible values are: 'OWASP'.
         */
        ruleSetType: pulumi.Input<string>;
        /**
         * The version of the rule set type.
         */
        ruleSetVersion: pulumi.Input<string>;
    }

    /**
     * An application security group in a resource group.
     */
    export interface ApplicationSecurityGroup {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Properties of the application security group.
         */
        properties?: pulumi.Input<inputs.network.ApplicationSecurityGroupPropertiesFormat>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Application security group properties.
     */
    export interface ApplicationSecurityGroupPropertiesFormat {
    }

    /**
     * Application security group properties.
     */
    export interface ApplicationSecurityGroupPropertiesFormatResponse {
        /**
         * The provisioning state of the application security group resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
         */
        resourceGuid: pulumi.Input<string>;
    }

    /**
     * An application security group in a resource group.
     */
    export interface ApplicationSecurityGroupResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the application security group.
         */
        properties?: pulumi.Input<inputs.network.ApplicationSecurityGroupPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of ExpressRouteCircuitAuthorization.
     */
    export interface AuthorizationPropertiesFormat {
        /**
         * The authorization key.
         */
        authorizationKey?: pulumi.Input<string>;
        /**
         * The authorization use status.
         */
        authorizationUseStatus?: pulumi.Input<string>;
    }

    /**
     * Properties of ExpressRouteCircuitAuthorization.
     */
    export interface AuthorizationPropertiesFormatResponse {
        /**
         * The authorization key.
         */
        authorizationKey?: pulumi.Input<string>;
        /**
         * The authorization use status.
         */
        authorizationUseStatus?: pulumi.Input<string>;
        /**
         * The provisioning state of the authorization resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * The additional properties of azure firewall.
     */
    export interface AzureFirewallAdditionalProperties {
    }

    /**
     * The additional properties of azure firewall.
     */
    export interface AzureFirewallAdditionalPropertiesResponse {
    }

    /**
     * Properties of an application rule.
     */
    export interface AzureFirewallApplicationRule {
        /**
         * Description of the rule.
         */
        description?: pulumi.Input<string>;
        /**
         * List of FQDN Tags for this rule.
         */
        fqdnTags?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the application rule.
         */
        name?: pulumi.Input<string>;
        /**
         * Array of ApplicationRuleProtocols.
         */
        protocols?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallApplicationRuleProtocol>[]>;
        /**
         * List of source IP addresses for this rule.
         */
        sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IpGroups for this rule.
         */
        sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of FQDNs for this rule.
         */
        targetFqdns?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Application rule collection resource.
     */
    export interface AzureFirewallApplicationRuleCollection {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the azure firewall application rule collection.
         */
        properties?: pulumi.Input<inputs.network.AzureFirewallApplicationRuleCollectionPropertiesFormat>;
    }

    /**
     * Properties of the application rule collection.
     */
    export interface AzureFirewallApplicationRuleCollectionPropertiesFormat {
        /**
         * The action type of a rule collection.
         */
        action?: pulumi.Input<inputs.network.AzureFirewallRCAction>;
        /**
         * Priority of the application rule collection resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * Collection of rules used by a application rule collection.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallApplicationRule>[]>;
    }

    /**
     * Properties of the application rule collection.
     */
    export interface AzureFirewallApplicationRuleCollectionPropertiesFormatResponse {
        /**
         * The action type of a rule collection.
         */
        action?: pulumi.Input<inputs.network.AzureFirewallRCActionResponse>;
        /**
         * Priority of the application rule collection resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * The provisioning state of the application rule collection resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Collection of rules used by a application rule collection.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallApplicationRuleResponse>[]>;
    }

    /**
     * Application rule collection resource.
     */
    export interface AzureFirewallApplicationRuleCollectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the azure firewall application rule collection.
         */
        properties?: pulumi.Input<inputs.network.AzureFirewallApplicationRuleCollectionPropertiesFormatResponse>;
    }

    /**
     * Properties of the application rule protocol.
     */
    export interface AzureFirewallApplicationRuleProtocol {
        /**
         * Port number for the protocol, cannot be greater than 64000. This field is optional.
         */
        port?: pulumi.Input<number>;
        /**
         * Protocol type.
         */
        protocolType?: pulumi.Input<string>;
    }

    /**
     * Properties of the application rule protocol.
     */
    export interface AzureFirewallApplicationRuleProtocolResponse {
        /**
         * Port number for the protocol, cannot be greater than 64000. This field is optional.
         */
        port?: pulumi.Input<number>;
        /**
         * Protocol type.
         */
        protocolType?: pulumi.Input<string>;
    }

    /**
     * Properties of an application rule.
     */
    export interface AzureFirewallApplicationRuleResponse {
        /**
         * Description of the rule.
         */
        description?: pulumi.Input<string>;
        /**
         * List of FQDN Tags for this rule.
         */
        fqdnTags?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the application rule.
         */
        name?: pulumi.Input<string>;
        /**
         * Array of ApplicationRuleProtocols.
         */
        protocols?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallApplicationRuleProtocolResponse>[]>;
        /**
         * List of source IP addresses for this rule.
         */
        sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IpGroups for this rule.
         */
        sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of FQDNs for this rule.
         */
        targetFqdns?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * IP configuration of an Azure Firewall.
     */
    export interface AzureFirewallIPConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the azure firewall IP configuration.
         */
        properties?: pulumi.Input<inputs.network.AzureFirewallIPConfigurationPropertiesFormat>;
    }

    /**
     * Properties of IP configuration of an Azure Firewall.
     */
    export interface AzureFirewallIPConfigurationPropertiesFormat {
        /**
         * Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
         */
        publicIPAddress?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
         */
        subnet?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of IP configuration of an Azure Firewall.
     */
    export interface AzureFirewallIPConfigurationPropertiesFormatResponse {
        /**
         * The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
         */
        privateIPAddress: pulumi.Input<string>;
        /**
         * The provisioning state of the Azure firewall IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
         */
        publicIPAddress?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
         */
        subnet?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * IP configuration of an Azure Firewall.
     */
    export interface AzureFirewallIPConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the azure firewall IP configuration.
         */
        properties?: pulumi.Input<inputs.network.AzureFirewallIPConfigurationPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * AzureFirewall NAT Rule Collection Action.
     */
    export interface AzureFirewallNatRCAction {
        /**
         * The type of action.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * AzureFirewall NAT Rule Collection Action.
     */
    export interface AzureFirewallNatRCActionResponse {
        /**
         * The type of action.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Properties of a NAT rule.
     */
    export interface AzureFirewallNatRule {
        /**
         * Description of the rule.
         */
        description?: pulumi.Input<string>;
        /**
         * List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
         */
        destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of destination ports.
         */
        destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the NAT rule.
         */
        name?: pulumi.Input<string>;
        /**
         * Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
         */
        protocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IP addresses for this rule.
         */
        sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IpGroups for this rule.
         */
        sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The translated address for this NAT rule.
         */
        translatedAddress?: pulumi.Input<string>;
        /**
         * The translated FQDN for this NAT rule.
         */
        translatedFqdn?: pulumi.Input<string>;
        /**
         * The translated port for this NAT rule.
         */
        translatedPort?: pulumi.Input<string>;
    }

    /**
     * NAT rule collection resource.
     */
    export interface AzureFirewallNatRuleCollection {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the azure firewall NAT rule collection.
         */
        properties?: pulumi.Input<inputs.network.AzureFirewallNatRuleCollectionProperties>;
    }

    /**
     * Properties of the NAT rule collection.
     */
    export interface AzureFirewallNatRuleCollectionProperties {
        /**
         * The action type of a NAT rule collection.
         */
        action?: pulumi.Input<inputs.network.AzureFirewallNatRCAction>;
        /**
         * Priority of the NAT rule collection resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * Collection of rules used by a NAT rule collection.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNatRule>[]>;
    }

    /**
     * Properties of the NAT rule collection.
     */
    export interface AzureFirewallNatRuleCollectionPropertiesResponse {
        /**
         * The action type of a NAT rule collection.
         */
        action?: pulumi.Input<inputs.network.AzureFirewallNatRCActionResponse>;
        /**
         * Priority of the NAT rule collection resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * The provisioning state of the NAT rule collection resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Collection of rules used by a NAT rule collection.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNatRuleResponse>[]>;
    }

    /**
     * NAT rule collection resource.
     */
    export interface AzureFirewallNatRuleCollectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the azure firewall NAT rule collection.
         */
        properties?: pulumi.Input<inputs.network.AzureFirewallNatRuleCollectionPropertiesResponse>;
    }

    /**
     * Properties of a NAT rule.
     */
    export interface AzureFirewallNatRuleResponse {
        /**
         * Description of the rule.
         */
        description?: pulumi.Input<string>;
        /**
         * List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
         */
        destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of destination ports.
         */
        destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the NAT rule.
         */
        name?: pulumi.Input<string>;
        /**
         * Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
         */
        protocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IP addresses for this rule.
         */
        sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IpGroups for this rule.
         */
        sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The translated address for this NAT rule.
         */
        translatedAddress?: pulumi.Input<string>;
        /**
         * The translated FQDN for this NAT rule.
         */
        translatedFqdn?: pulumi.Input<string>;
        /**
         * The translated port for this NAT rule.
         */
        translatedPort?: pulumi.Input<string>;
    }

    /**
     * Properties of the network rule.
     */
    export interface AzureFirewallNetworkRule {
        /**
         * Description of the rule.
         */
        description?: pulumi.Input<string>;
        /**
         * List of destination IP addresses.
         */
        destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of destination FQDNs.
         */
        destinationFqdns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of destination IpGroups for this rule.
         */
        destinationIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of destination ports.
         */
        destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the network rule.
         */
        name?: pulumi.Input<string>;
        /**
         * Array of AzureFirewallNetworkRuleProtocols.
         */
        protocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IP addresses for this rule.
         */
        sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IpGroups for this rule.
         */
        sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Network rule collection resource.
     */
    export interface AzureFirewallNetworkRuleCollection {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the azure firewall network rule collection.
         */
        properties?: pulumi.Input<inputs.network.AzureFirewallNetworkRuleCollectionPropertiesFormat>;
    }

    /**
     * Properties of the network rule collection.
     */
    export interface AzureFirewallNetworkRuleCollectionPropertiesFormat {
        /**
         * The action type of a rule collection.
         */
        action?: pulumi.Input<inputs.network.AzureFirewallRCAction>;
        /**
         * Priority of the network rule collection resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * Collection of rules used by a network rule collection.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNetworkRule>[]>;
    }

    /**
     * Properties of the network rule collection.
     */
    export interface AzureFirewallNetworkRuleCollectionPropertiesFormatResponse {
        /**
         * The action type of a rule collection.
         */
        action?: pulumi.Input<inputs.network.AzureFirewallRCActionResponse>;
        /**
         * Priority of the network rule collection resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * The provisioning state of the network rule collection resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Collection of rules used by a network rule collection.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNetworkRuleResponse>[]>;
    }

    /**
     * Network rule collection resource.
     */
    export interface AzureFirewallNetworkRuleCollectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the azure firewall network rule collection.
         */
        properties?: pulumi.Input<inputs.network.AzureFirewallNetworkRuleCollectionPropertiesFormatResponse>;
    }

    /**
     * Properties of the network rule.
     */
    export interface AzureFirewallNetworkRuleResponse {
        /**
         * Description of the rule.
         */
        description?: pulumi.Input<string>;
        /**
         * List of destination IP addresses.
         */
        destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of destination FQDNs.
         */
        destinationFqdns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of destination IpGroups for this rule.
         */
        destinationIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of destination ports.
         */
        destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the network rule.
         */
        name?: pulumi.Input<string>;
        /**
         * Array of AzureFirewallNetworkRuleProtocols.
         */
        protocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IP addresses for this rule.
         */
        sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of source IpGroups for this rule.
         */
        sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of the Azure Firewall.
     */
    export interface AzureFirewallPropertiesFormat {
        /**
         * The additional properties used to further config this azure firewall.
         */
        additionalProperties?: pulumi.Input<inputs.network.AzureFirewallAdditionalProperties>;
        /**
         * Collection of application rule collections used by Azure Firewall.
         */
        applicationRuleCollections?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallApplicationRuleCollection>[]>;
        /**
         * The firewallPolicy associated with this azure firewall.
         */
        firewallPolicy?: pulumi.Input<inputs.network.SubResource>;
        /**
         * IP addresses associated with AzureFirewall.
         */
        hubIPAddresses?: pulumi.Input<inputs.network.HubIPAddresses>;
        /**
         * IP configuration of the Azure Firewall resource.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallIPConfiguration>[]>;
        /**
         * IP configuration of the Azure Firewall used for management traffic.
         */
        managementIpConfiguration?: pulumi.Input<inputs.network.AzureFirewallIPConfiguration>;
        /**
         * Collection of NAT rule collections used by Azure Firewall.
         */
        natRuleCollections?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNatRuleCollection>[]>;
        /**
         * Collection of network rule collections used by Azure Firewall.
         */
        networkRuleCollections?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNetworkRuleCollection>[]>;
        /**
         * The Azure Firewall Resource SKU.
         */
        sku?: pulumi.Input<inputs.network.AzureFirewallSku>;
        /**
         * The operation mode for Threat Intelligence.
         */
        threatIntelMode?: pulumi.Input<string>;
        /**
         * The virtualHub to which the firewall belongs.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of the Azure Firewall.
     */
    export interface AzureFirewallPropertiesFormatResponse {
        /**
         * The additional properties used to further config this azure firewall.
         */
        additionalProperties?: pulumi.Input<inputs.network.AzureFirewallAdditionalPropertiesResponse>;
        /**
         * Collection of application rule collections used by Azure Firewall.
         */
        applicationRuleCollections?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallApplicationRuleCollectionResponse>[]>;
        /**
         * The firewallPolicy associated with this azure firewall.
         */
        firewallPolicy?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * IP addresses associated with AzureFirewall.
         */
        hubIPAddresses?: pulumi.Input<inputs.network.HubIPAddressesResponse>;
        /**
         * IP configuration of the Azure Firewall resource.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallIPConfigurationResponse>[]>;
        /**
         * IpGroups associated with AzureFirewall.
         */
        ipGroups: pulumi.Input<inputs.network.IpGroupsResponse>;
        /**
         * IP configuration of the Azure Firewall used for management traffic.
         */
        managementIpConfiguration?: pulumi.Input<inputs.network.AzureFirewallIPConfigurationResponse>;
        /**
         * Collection of NAT rule collections used by Azure Firewall.
         */
        natRuleCollections?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNatRuleCollectionResponse>[]>;
        /**
         * Collection of network rule collections used by Azure Firewall.
         */
        networkRuleCollections?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallNetworkRuleCollectionResponse>[]>;
        /**
         * The provisioning state of the Azure firewall resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The Azure Firewall Resource SKU.
         */
        sku?: pulumi.Input<inputs.network.AzureFirewallSkuResponse>;
        /**
         * The operation mode for Threat Intelligence.
         */
        threatIntelMode?: pulumi.Input<string>;
        /**
         * The virtualHub to which the firewall belongs.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * Public IP Address associated with azure firewall.
     */
    export interface AzureFirewallPublicIPAddress {
        /**
         * Public IP Address value.
         */
        address?: pulumi.Input<string>;
    }

    /**
     * Public IP Address associated with azure firewall.
     */
    export interface AzureFirewallPublicIPAddressResponse {
        /**
         * Public IP Address value.
         */
        address?: pulumi.Input<string>;
    }

    /**
     * Properties of the AzureFirewallRCAction.
     */
    export interface AzureFirewallRCAction {
        /**
         * The type of action.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Properties of the AzureFirewallRCAction.
     */
    export interface AzureFirewallRCActionResponse {
        /**
         * The type of action.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * SKU of an Azure Firewall.
     */
    export interface AzureFirewallSku {
        /**
         * Name of an Azure Firewall SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of an Azure Firewall.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * SKU of an Azure Firewall.
     */
    export interface AzureFirewallSkuResponse {
        /**
         * Name of an Azure Firewall SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * Tier of an Azure Firewall.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Backend address of a frontDoor load balancer.
     */
    export interface Backend {
        /**
         * Location of the backend (IP address or FQDN)
         */
        address?: pulumi.Input<string>;
        /**
         * The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
         */
        backendHostHeader?: pulumi.Input<string>;
        /**
         * Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
         */
        enabledState?: pulumi.Input<string>;
        /**
         * The HTTP TCP port number. Must be between 1 and 65535.
         */
        httpPort?: pulumi.Input<number>;
        /**
         * The HTTPS TCP port number. Must be between 1 and 65535.
         */
        httpsPort?: pulumi.Input<number>;
        /**
         * Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
         */
        priority?: pulumi.Input<number>;
        /**
         * The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
         */
        privateLinkAlias?: pulumi.Input<string>;
        /**
         * A custom message to be included in the approval request to connect to the Private Link
         */
        privateLinkApprovalMessage?: pulumi.Input<string>;
        /**
         * The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
         */
        privateLinkLocation?: pulumi.Input<string>;
        /**
         * The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
         */
        privateLinkResourceId?: pulumi.Input<string>;
        /**
         * Weight of this endpoint for load balancing purposes.
         */
        weight?: pulumi.Input<number>;
    }

    /**
     * Pool of backend IP addresses.
     */
    export interface BackendAddressPool {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer backend address pool.
         */
        properties?: pulumi.Input<inputs.network.BackendAddressPoolPropertiesFormat>;
    }

    /**
     * Properties of the backend address pool.
     */
    export interface BackendAddressPoolPropertiesFormat {
        /**
         * An array of backend addresses.
         */
        loadBalancerBackendAddresses?: pulumi.Input<pulumi.Input<inputs.network.LoadBalancerBackendAddress>[]>;
    }

    /**
     * Properties of the backend address pool.
     */
    export interface BackendAddressPoolPropertiesFormatResponse {
        /**
         * An array of references to IP addresses defined in network interfaces.
         */
        backendIPConfigurations: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceIPConfigurationResponse>[]>;
        /**
         * An array of backend addresses.
         */
        loadBalancerBackendAddresses?: pulumi.Input<pulumi.Input<inputs.network.LoadBalancerBackendAddressResponse>[]>;
        /**
         * An array of references to load balancing rules that use this backend address pool.
         */
        loadBalancingRules: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * A reference to an outbound rule that uses this backend address pool.
         */
        outboundRule: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * An array of references to outbound rules that use this backend address pool.
         */
        outboundRules: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The provisioning state of the backend address pool resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Pool of backend IP addresses.
     */
    export interface BackendAddressPoolResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer backend address pool.
         */
        properties?: pulumi.Input<inputs.network.BackendAddressPoolPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * A backend pool is a collection of backends that can be routed to.
     */
    export interface BackendPool {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the Front Door Backend Pool
         */
        properties?: pulumi.Input<inputs.network.BackendPoolProperties>;
    }

    /**
     * The JSON object that contains the properties required to create a Backend Pool.
     */
    export interface BackendPoolProperties {
        /**
         * The set of backends for this pool
         */
        backends?: pulumi.Input<pulumi.Input<inputs.network.Backend>[]>;
        /**
         * L7 health probe settings for a backend pool
         */
        healthProbeSettings?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Load balancing settings for a backend pool
         */
        loadBalancingSettings?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties required to create a Backend Pool.
     */
    export interface BackendPoolPropertiesResponse {
        /**
         * The set of backends for this pool
         */
        backends?: pulumi.Input<pulumi.Input<inputs.network.BackendResponse>[]>;
        /**
         * L7 health probe settings for a backend pool
         */
        healthProbeSettings?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Load balancing settings for a backend pool
         */
        loadBalancingSettings?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
    }

    /**
     * A backend pool is a collection of backends that can be routed to.
     */
    export interface BackendPoolResponse {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the Front Door Backend Pool
         */
        properties?: pulumi.Input<inputs.network.BackendPoolPropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Settings that apply to all backend pools.
     */
    export interface BackendPoolsSettings {
        /**
         * Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
         */
        enforceCertificateNameCheck?: pulumi.Input<string>;
        /**
         * Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
         */
        sendRecvTimeoutSeconds?: pulumi.Input<number>;
    }

    /**
     * Settings that apply to all backend pools.
     */
    export interface BackendPoolsSettingsResponse {
        /**
         * Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
         */
        enforceCertificateNameCheck?: pulumi.Input<string>;
        /**
         * Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
         */
        sendRecvTimeoutSeconds?: pulumi.Input<number>;
    }

    /**
     * Backend address of a frontDoor load balancer.
     */
    export interface BackendResponse {
        /**
         * Location of the backend (IP address or FQDN)
         */
        address?: pulumi.Input<string>;
        /**
         * The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
         */
        backendHostHeader?: pulumi.Input<string>;
        /**
         * Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
         */
        enabledState?: pulumi.Input<string>;
        /**
         * The HTTP TCP port number. Must be between 1 and 65535.
         */
        httpPort?: pulumi.Input<number>;
        /**
         * The HTTPS TCP port number. Must be between 1 and 65535.
         */
        httpsPort?: pulumi.Input<number>;
        /**
         * Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
         */
        priority?: pulumi.Input<number>;
        /**
         * The Approval status for the connection to the Private Link
         */
        privateEndpointStatus: pulumi.Input<string>;
        /**
         * The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
         */
        privateLinkAlias?: pulumi.Input<string>;
        /**
         * A custom message to be included in the approval request to connect to the Private Link
         */
        privateLinkApprovalMessage?: pulumi.Input<string>;
        /**
         * The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
         */
        privateLinkLocation?: pulumi.Input<string>;
        /**
         * The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
         */
        privateLinkResourceId?: pulumi.Input<string>;
        /**
         * Weight of this endpoint for load balancing purposes.
         */
        weight?: pulumi.Input<number>;
    }

    /**
     * IP configuration of an Bastion Host.
     */
    export interface BastionHostIPConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Represents the ip configuration associated with the resource.
         */
        properties?: pulumi.Input<inputs.network.BastionHostIPConfigurationPropertiesFormat>;
    }

    /**
     * Properties of IP configuration of an Bastion Host.
     */
    export interface BastionHostIPConfigurationPropertiesFormat {
        /**
         * Private IP allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * Reference of the PublicIP resource.
         */
        publicIPAddress: pulumi.Input<inputs.network.SubResource>;
        /**
         * Reference of the subnet resource.
         */
        subnet: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of IP configuration of an Bastion Host.
     */
    export interface BastionHostIPConfigurationPropertiesFormatResponse {
        /**
         * Private IP allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The provisioning state of the bastion host IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Reference of the PublicIP resource.
         */
        publicIPAddress: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Reference of the subnet resource.
         */
        subnet: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * IP configuration of an Bastion Host.
     */
    export interface BastionHostIPConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Represents the ip configuration associated with the resource.
         */
        properties?: pulumi.Input<inputs.network.BastionHostIPConfigurationPropertiesFormatResponse>;
        /**
         * Ip configuration type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of the Bastion Host.
     */
    export interface BastionHostPropertiesFormat {
        /**
         * FQDN for the endpoint on which bastion host is accessible.
         */
        dnsName?: pulumi.Input<string>;
        /**
         * IP configuration of the Bastion Host resource.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.BastionHostIPConfiguration>[]>;
    }

    /**
     * Properties of the Bastion Host.
     */
    export interface BastionHostPropertiesFormatResponse {
        /**
         * FQDN for the endpoint on which bastion host is accessible.
         */
        dnsName?: pulumi.Input<string>;
        /**
         * IP configuration of the Bastion Host resource.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.BastionHostIPConfigurationResponse>[]>;
        /**
         * The provisioning state of the bastion host resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Properties of the bgp connection.
     */
    export interface BgpConnectionProperties {
        /**
         * Peer ASN.
         */
        peerAsn?: pulumi.Input<number>;
        /**
         * Peer IP.
         */
        peerIp?: pulumi.Input<string>;
    }

    /**
     * Properties of the bgp connection.
     */
    export interface BgpConnectionPropertiesResponse {
        /**
         * The current state of the VirtualHub to Peer.
         */
        connectionState: pulumi.Input<string>;
        /**
         * Peer ASN.
         */
        peerAsn?: pulumi.Input<number>;
        /**
         * Peer IP.
         */
        peerIp?: pulumi.Input<string>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * BGP settings details.
     */
    export interface BgpSettings {
        /**
         * The BGP speaker's ASN.
         */
        asn?: pulumi.Input<number>;
        /**
         * The BGP peering address and BGP identifier of this BGP speaker.
         */
        bgpPeeringAddress?: pulumi.Input<string>;
        /**
         * BGP peering address with IP configuration ID for virtual network gateway.
         */
        bgpPeeringAddresses?: pulumi.Input<pulumi.Input<inputs.network.IPConfigurationBgpPeeringAddress>[]>;
        /**
         * The weight added to routes learned from this BGP speaker.
         */
        peerWeight?: pulumi.Input<number>;
    }

    /**
     * BGP settings details.
     */
    export interface BgpSettingsResponse {
        /**
         * The BGP speaker's ASN.
         */
        asn?: pulumi.Input<number>;
        /**
         * The BGP peering address and BGP identifier of this BGP speaker.
         */
        bgpPeeringAddress?: pulumi.Input<string>;
        /**
         * BGP peering address with IP configuration ID for virtual network gateway.
         */
        bgpPeeringAddresses?: pulumi.Input<pulumi.Input<inputs.network.IPConfigurationBgpPeeringAddressResponse>[]>;
        /**
         * The weight added to routes learned from this BGP speaker.
         */
        peerWeight?: pulumi.Input<number>;
    }

    /**
     * Network Virtual Appliance Sku Properties.
     */
    export interface BreakOutCategoryPolicies {
        /**
         * Flag to control breakout of o365 allow category.
         */
        allow?: pulumi.Input<boolean>;
        /**
         * Flag to control breakout of o365 default category.
         */
        default?: pulumi.Input<boolean>;
        /**
         * Flag to control breakout of o365 optimize category.
         */
        optimize?: pulumi.Input<boolean>;
    }

    /**
     * Network Virtual Appliance Sku Properties.
     */
    export interface BreakOutCategoryPoliciesResponse {
        /**
         * Flag to control breakout of o365 allow category.
         */
        allow?: pulumi.Input<boolean>;
        /**
         * Flag to control breakout of o365 default category.
         */
        default?: pulumi.Input<boolean>;
        /**
         * Flag to control breakout of o365 optimize category.
         */
        optimize?: pulumi.Input<boolean>;
    }

    /**
     * Describes the destination of connection monitor.
     */
    export interface ConnectionMonitorDestination {
        /**
         * Address of the connection monitor destination (IP or domain name).
         */
        address?: pulumi.Input<string>;
        /**
         * The destination port used by connection monitor.
         */
        port?: pulumi.Input<number>;
        /**
         * The ID of the resource used as the destination by connection monitor.
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * Describes the destination of connection monitor.
     */
    export interface ConnectionMonitorDestinationResponse {
        /**
         * Address of the connection monitor destination (IP or domain name).
         */
        address?: pulumi.Input<string>;
        /**
         * The destination port used by connection monitor.
         */
        port?: pulumi.Input<number>;
        /**
         * The ID of the resource used as the destination by connection monitor.
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * Describes the connection monitor endpoint.
     */
    export interface ConnectionMonitorEndpoint {
        /**
         * Address of the connection monitor endpoint (IP or domain name).
         */
        address?: pulumi.Input<string>;
        /**
         * Filter for sub-items within the endpoint.
         */
        filter?: pulumi.Input<inputs.network.ConnectionMonitorEndpointFilter>;
        /**
         * The name of the connection monitor endpoint.
         */
        name: pulumi.Input<string>;
        /**
         * Resource ID of the connection monitor endpoint.
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * Describes the connection monitor endpoint filter.
     */
    export interface ConnectionMonitorEndpointFilter {
        /**
         * List of items in the filter.
         */
        items?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorEndpointFilterItem>[]>;
        /**
         * The behavior of the endpoint filter. Currently only 'Include' is supported.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Describes the connection monitor endpoint filter item.
     */
    export interface ConnectionMonitorEndpointFilterItem {
        /**
         * The address of the filter item.
         */
        address?: pulumi.Input<string>;
        /**
         * The type of item included in the filter. Currently only 'AgentAddress' is supported.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Describes the connection monitor endpoint filter item.
     */
    export interface ConnectionMonitorEndpointFilterItemResponse {
        /**
         * The address of the filter item.
         */
        address?: pulumi.Input<string>;
        /**
         * The type of item included in the filter. Currently only 'AgentAddress' is supported.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Describes the connection monitor endpoint filter.
     */
    export interface ConnectionMonitorEndpointFilterResponse {
        /**
         * List of items in the filter.
         */
        items?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorEndpointFilterItemResponse>[]>;
        /**
         * The behavior of the endpoint filter. Currently only 'Include' is supported.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Describes the connection monitor endpoint.
     */
    export interface ConnectionMonitorEndpointResponse {
        /**
         * Address of the connection monitor endpoint (IP or domain name).
         */
        address?: pulumi.Input<string>;
        /**
         * Filter for sub-items within the endpoint.
         */
        filter?: pulumi.Input<inputs.network.ConnectionMonitorEndpointFilterResponse>;
        /**
         * The name of the connection monitor endpoint.
         */
        name: pulumi.Input<string>;
        /**
         * Resource ID of the connection monitor endpoint.
         */
        resourceId?: pulumi.Input<string>;
    }

    /**
     * Describes the HTTP configuration.
     */
    export interface ConnectionMonitorHttpConfiguration {
        /**
         * The HTTP method to use.
         */
        method?: pulumi.Input<string>;
        /**
         * The path component of the URI. For instance, "/dir1/dir2".
         */
        path?: pulumi.Input<string>;
        /**
         * The port to connect to.
         */
        port?: pulumi.Input<number>;
        /**
         * Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
         */
        preferHTTPS?: pulumi.Input<boolean>;
        /**
         * The HTTP headers to transmit with the request.
         */
        requestHeaders?: pulumi.Input<pulumi.Input<inputs.network.HTTPHeader>[]>;
        /**
         * HTTP status codes to consider successful. For instance, "2xx,301-304,418".
         */
        validStatusCodeRanges?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Describes the HTTP configuration.
     */
    export interface ConnectionMonitorHttpConfigurationResponse {
        /**
         * The HTTP method to use.
         */
        method?: pulumi.Input<string>;
        /**
         * The path component of the URI. For instance, "/dir1/dir2".
         */
        path?: pulumi.Input<string>;
        /**
         * The port to connect to.
         */
        port?: pulumi.Input<number>;
        /**
         * Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
         */
        preferHTTPS?: pulumi.Input<boolean>;
        /**
         * The HTTP headers to transmit with the request.
         */
        requestHeaders?: pulumi.Input<pulumi.Input<inputs.network.HTTPHeaderResponse>[]>;
        /**
         * HTTP status codes to consider successful. For instance, "2xx,301-304,418".
         */
        validStatusCodeRanges?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Describes the ICMP configuration.
     */
    export interface ConnectionMonitorIcmpConfiguration {
        /**
         * Value indicating whether path evaluation with trace route should be disabled.
         */
        disableTraceRoute?: pulumi.Input<boolean>;
    }

    /**
     * Describes the ICMP configuration.
     */
    export interface ConnectionMonitorIcmpConfigurationResponse {
        /**
         * Value indicating whether path evaluation with trace route should be disabled.
         */
        disableTraceRoute?: pulumi.Input<boolean>;
    }

    /**
     * Describes a connection monitor output destination.
     */
    export interface ConnectionMonitorOutput {
        /**
         * Connection monitor output destination type. Currently, only "Workspace" is supported.
         */
        type?: pulumi.Input<string>;
        /**
         * Describes the settings for producing output into a log analytics workspace.
         */
        workspaceSettings?: pulumi.Input<inputs.network.ConnectionMonitorWorkspaceSettings>;
    }

    /**
     * Describes a connection monitor output destination.
     */
    export interface ConnectionMonitorOutputResponse {
        /**
         * Connection monitor output destination type. Currently, only "Workspace" is supported.
         */
        type?: pulumi.Input<string>;
        /**
         * Describes the settings for producing output into a log analytics workspace.
         */
        workspaceSettings?: pulumi.Input<inputs.network.ConnectionMonitorWorkspaceSettingsResponse>;
    }

    /**
     * Parameters that define the operation to create a connection monitor.
     */
    export interface ConnectionMonitorParameters {
        /**
         * Determines if the connection monitor will start automatically once created.
         */
        autoStart?: pulumi.Input<boolean>;
        /**
         * Describes the destination of connection monitor.
         */
        destination?: pulumi.Input<inputs.network.ConnectionMonitorDestination>;
        /**
         * List of connection monitor endpoints.
         */
        endpoints?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorEndpoint>[]>;
        /**
         * Monitoring interval in seconds.
         */
        monitoringIntervalInSeconds?: pulumi.Input<number>;
        /**
         * Optional notes to be associated with the connection monitor.
         */
        notes?: pulumi.Input<string>;
        /**
         * List of connection monitor outputs.
         */
        outputs?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorOutput>[]>;
        /**
         * Describes the source of connection monitor.
         */
        source?: pulumi.Input<inputs.network.ConnectionMonitorSource>;
        /**
         * List of connection monitor test configurations.
         */
        testConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorTestConfiguration>[]>;
        /**
         * List of connection monitor test groups.
         */
        testGroups?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorTestGroup>[]>;
    }

    /**
     * Describes the properties of a connection monitor.
     */
    export interface ConnectionMonitorResultPropertiesResponse {
        /**
         * Determines if the connection monitor will start automatically once created.
         */
        autoStart?: pulumi.Input<boolean>;
        /**
         * Type of connection monitor.
         */
        connectionMonitorType: pulumi.Input<string>;
        /**
         * Describes the destination of connection monitor.
         */
        destination?: pulumi.Input<inputs.network.ConnectionMonitorDestinationResponse>;
        /**
         * List of connection monitor endpoints.
         */
        endpoints?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorEndpointResponse>[]>;
        /**
         * Monitoring interval in seconds.
         */
        monitoringIntervalInSeconds?: pulumi.Input<number>;
        /**
         * The monitoring status of the connection monitor.
         */
        monitoringStatus: pulumi.Input<string>;
        /**
         * Optional notes to be associated with the connection monitor.
         */
        notes?: pulumi.Input<string>;
        /**
         * List of connection monitor outputs.
         */
        outputs?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorOutputResponse>[]>;
        /**
         * The provisioning state of the connection monitor.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Describes the source of connection monitor.
         */
        source?: pulumi.Input<inputs.network.ConnectionMonitorSourceResponse>;
        /**
         * The date and time when the connection monitor was started.
         */
        startTime: pulumi.Input<string>;
        /**
         * List of connection monitor test configurations.
         */
        testConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorTestConfigurationResponse>[]>;
        /**
         * List of connection monitor test groups.
         */
        testGroups?: pulumi.Input<pulumi.Input<inputs.network.ConnectionMonitorTestGroupResponse>[]>;
    }

    /**
     * Describes the source of connection monitor.
     */
    export interface ConnectionMonitorSource {
        /**
         * The source port used by connection monitor.
         */
        port?: pulumi.Input<number>;
        /**
         * The ID of the resource used as the source by connection monitor.
         */
        resourceId: pulumi.Input<string>;
    }

    /**
     * Describes the source of connection monitor.
     */
    export interface ConnectionMonitorSourceResponse {
        /**
         * The source port used by connection monitor.
         */
        port?: pulumi.Input<number>;
        /**
         * The ID of the resource used as the source by connection monitor.
         */
        resourceId: pulumi.Input<string>;
    }

    /**
     * Describes the threshold for declaring a test successful.
     */
    export interface ConnectionMonitorSuccessThreshold {
        /**
         * The maximum percentage of failed checks permitted for a test to evaluate as successful.
         */
        checksFailedPercent?: pulumi.Input<number>;
        /**
         * The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
         */
        roundTripTimeMs?: pulumi.Input<number>;
    }

    /**
     * Describes the threshold for declaring a test successful.
     */
    export interface ConnectionMonitorSuccessThresholdResponse {
        /**
         * The maximum percentage of failed checks permitted for a test to evaluate as successful.
         */
        checksFailedPercent?: pulumi.Input<number>;
        /**
         * The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
         */
        roundTripTimeMs?: pulumi.Input<number>;
    }

    /**
     * Describes the TCP configuration.
     */
    export interface ConnectionMonitorTcpConfiguration {
        /**
         * Value indicating whether path evaluation with trace route should be disabled.
         */
        disableTraceRoute?: pulumi.Input<boolean>;
        /**
         * The port to connect to.
         */
        port?: pulumi.Input<number>;
    }

    /**
     * Describes the TCP configuration.
     */
    export interface ConnectionMonitorTcpConfigurationResponse {
        /**
         * Value indicating whether path evaluation with trace route should be disabled.
         */
        disableTraceRoute?: pulumi.Input<boolean>;
        /**
         * The port to connect to.
         */
        port?: pulumi.Input<number>;
    }

    /**
     * Describes a connection monitor test configuration.
     */
    export interface ConnectionMonitorTestConfiguration {
        /**
         * The parameters used to perform test evaluation over HTTP.
         */
        httpConfiguration?: pulumi.Input<inputs.network.ConnectionMonitorHttpConfiguration>;
        /**
         * The parameters used to perform test evaluation over ICMP.
         */
        icmpConfiguration?: pulumi.Input<inputs.network.ConnectionMonitorIcmpConfiguration>;
        /**
         * The name of the connection monitor test configuration.
         */
        name: pulumi.Input<string>;
        /**
         * The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
         */
        preferredIPVersion?: pulumi.Input<string>;
        /**
         * The protocol to use in test evaluation.
         */
        protocol: pulumi.Input<string>;
        /**
         * The threshold for declaring a test successful.
         */
        successThreshold?: pulumi.Input<inputs.network.ConnectionMonitorSuccessThreshold>;
        /**
         * The parameters used to perform test evaluation over TCP.
         */
        tcpConfiguration?: pulumi.Input<inputs.network.ConnectionMonitorTcpConfiguration>;
        /**
         * The frequency of test evaluation, in seconds.
         */
        testFrequencySec?: pulumi.Input<number>;
    }

    /**
     * Describes a connection monitor test configuration.
     */
    export interface ConnectionMonitorTestConfigurationResponse {
        /**
         * The parameters used to perform test evaluation over HTTP.
         */
        httpConfiguration?: pulumi.Input<inputs.network.ConnectionMonitorHttpConfigurationResponse>;
        /**
         * The parameters used to perform test evaluation over ICMP.
         */
        icmpConfiguration?: pulumi.Input<inputs.network.ConnectionMonitorIcmpConfigurationResponse>;
        /**
         * The name of the connection monitor test configuration.
         */
        name: pulumi.Input<string>;
        /**
         * The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
         */
        preferredIPVersion?: pulumi.Input<string>;
        /**
         * The protocol to use in test evaluation.
         */
        protocol: pulumi.Input<string>;
        /**
         * The threshold for declaring a test successful.
         */
        successThreshold?: pulumi.Input<inputs.network.ConnectionMonitorSuccessThresholdResponse>;
        /**
         * The parameters used to perform test evaluation over TCP.
         */
        tcpConfiguration?: pulumi.Input<inputs.network.ConnectionMonitorTcpConfigurationResponse>;
        /**
         * The frequency of test evaluation, in seconds.
         */
        testFrequencySec?: pulumi.Input<number>;
    }

    /**
     * Describes the connection monitor test group.
     */
    export interface ConnectionMonitorTestGroup {
        /**
         * List of destination endpoint names.
         */
        destinations: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Value indicating whether test group is disabled.
         */
        disable?: pulumi.Input<boolean>;
        /**
         * The name of the connection monitor test group.
         */
        name: pulumi.Input<string>;
        /**
         * List of source endpoint names.
         */
        sources: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of test configuration names.
         */
        testConfigurations: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Describes the connection monitor test group.
     */
    export interface ConnectionMonitorTestGroupResponse {
        /**
         * List of destination endpoint names.
         */
        destinations: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Value indicating whether test group is disabled.
         */
        disable?: pulumi.Input<boolean>;
        /**
         * The name of the connection monitor test group.
         */
        name: pulumi.Input<string>;
        /**
         * List of source endpoint names.
         */
        sources: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of test configuration names.
         */
        testConfigurations: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Describes the settings for producing output into a log analytics workspace.
     */
    export interface ConnectionMonitorWorkspaceSettings {
        /**
         * Log analytics workspace resource ID.
         */
        workspaceResourceId?: pulumi.Input<string>;
    }

    /**
     * Describes the settings for producing output into a log analytics workspace.
     */
    export interface ConnectionMonitorWorkspaceSettingsResponse {
        /**
         * Log analytics workspace resource ID.
         */
        workspaceResourceId?: pulumi.Input<string>;
    }

    /**
     * Container network interface configuration child resource.
     */
    export interface ContainerNetworkInterfaceConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Container network interface configuration properties.
         */
        properties?: pulumi.Input<inputs.network.ContainerNetworkInterfaceConfigurationPropertiesFormat>;
    }

    /**
     * Container network interface configuration properties.
     */
    export interface ContainerNetworkInterfaceConfigurationPropertiesFormat {
        /**
         * A list of container network interfaces created from this container network interface configuration.
         */
        containerNetworkInterfaces?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * A list of ip configurations of the container network interface configuration.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.IPConfigurationProfile>[]>;
    }

    /**
     * Container network interface configuration properties.
     */
    export interface ContainerNetworkInterfaceConfigurationPropertiesFormatResponse {
        /**
         * A list of container network interfaces created from this container network interface configuration.
         */
        containerNetworkInterfaces?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * A list of ip configurations of the container network interface configuration.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.IPConfigurationProfileResponse>[]>;
        /**
         * The provisioning state of the container network interface configuration resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Container network interface configuration child resource.
     */
    export interface ContainerNetworkInterfaceConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Container network interface configuration properties.
         */
        properties?: pulumi.Input<inputs.network.ContainerNetworkInterfaceConfigurationPropertiesFormatResponse>;
        /**
         * Sub Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of the container network interface IP configuration.
     */
    export interface ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse {
        /**
         * The provisioning state of the container network interface IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * The ip configuration for a container network interface.
     */
    export interface ContainerNetworkInterfaceIpConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * The name of the resource. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the container network interface IP configuration.
         */
        properties?: pulumi.Input<inputs.network.ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse>;
        /**
         * Sub Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of container network interface.
     */
    export interface ContainerNetworkInterfacePropertiesFormatResponse {
        /**
         * Reference to the container to which this container network interface is attached.
         */
        container?: pulumi.Input<inputs.network.ContainerResponse>;
        /**
         * Container network interface configuration from which this container network interface is created.
         */
        containerNetworkInterfaceConfiguration: pulumi.Input<inputs.network.ContainerNetworkInterfaceConfigurationResponse>;
        /**
         * Reference to the ip configuration on this container nic.
         */
        ipConfigurations: pulumi.Input<pulumi.Input<inputs.network.ContainerNetworkInterfaceIpConfigurationResponse>[]>;
        /**
         * The provisioning state of the container network interface resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Container network interface child resource.
     */
    export interface ContainerNetworkInterfaceResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Container network interface properties.
         */
        properties?: pulumi.Input<inputs.network.ContainerNetworkInterfacePropertiesFormatResponse>;
        /**
         * Sub Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Reference to container resource in remote resource provider.
     */
    export interface ContainerResponse {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Contains custom Dns resolution configuration from customer.
     */
    export interface CustomDnsConfigPropertiesFormat {
        /**
         * Fqdn that resolves to private endpoint ip address.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * A list of private ip addresses of the private endpoint.
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Contains custom Dns resolution configuration from customer.
     */
    export interface CustomDnsConfigPropertiesFormatResponse {
        /**
         * Fqdn that resolves to private endpoint ip address.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * A list of private ip addresses of the private endpoint.
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Https settings for a domain
     */
    export interface CustomHttpsConfigurationResponse {
        /**
         * Defines the source of the SSL certificate
         */
        certificateSource: pulumi.Input<string>;
        /**
         * Parameters required for enabling SSL with Front Door-managed certificates (if certificateSource=FrontDoor)
         */
        frontDoorCertificateSourceParameters?: pulumi.Input<inputs.network.FrontDoorCertificateSourceParametersResponse>;
        /**
         * KeyVault certificate source parameters (if certificateSource=AzureKeyVault)
         */
        keyVaultCertificateSourceParameters?: pulumi.Input<inputs.network.KeyVaultCertificateSourceParametersResponse>;
        /**
         * The minimum TLS version required from the clients to establish an SSL handshake with Front Door.
         */
        minimumTlsVersion: pulumi.Input<string>;
        /**
         * Defines the TLS extension protocol that is used for secure delivery
         */
        protocolType: pulumi.Input<string>;
    }

    /**
     * DDoS custom policy properties.
     */
    export interface DdosCustomPolicyPropertiesFormat {
        /**
         * The protocol-specific DDoS policy customization parameters.
         */
        protocolCustomSettings?: pulumi.Input<pulumi.Input<inputs.network.ProtocolCustomSettingsFormat>[]>;
    }

    /**
     * DDoS custom policy properties.
     */
    export interface DdosCustomPolicyPropertiesFormatResponse {
        /**
         * The protocol-specific DDoS policy customization parameters.
         */
        protocolCustomSettings?: pulumi.Input<pulumi.Input<inputs.network.ProtocolCustomSettingsFormatResponse>[]>;
        /**
         * The provisioning state of the DDoS custom policy resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The list of public IPs associated with the DDoS custom policy resource. This list is read-only.
         */
        publicIPAddresses: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
         */
        resourceGuid: pulumi.Input<string>;
    }

    /**
     * DDoS protection plan properties.
     */
    export interface DdosProtectionPlanPropertiesFormat {
    }

    /**
     * DDoS protection plan properties.
     */
    export interface DdosProtectionPlanPropertiesFormatResponse {
        /**
         * The provisioning state of the DDoS protection plan resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
         */
        resourceGuid: pulumi.Input<string>;
        /**
         * The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.
         */
        virtualNetworks: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
    }

    /**
     * Contains the DDoS protection settings of the public IP.
     */
    export interface DdosSettings {
        /**
         * The DDoS custom policy associated with the public IP.
         */
        ddosCustomPolicy?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Enables DDoS protection on the public IP.
         */
        protectedIP?: pulumi.Input<boolean>;
        /**
         * The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
         */
        protectionCoverage?: pulumi.Input<string>;
    }

    /**
     * Contains the DDoS protection settings of the public IP.
     */
    export interface DdosSettingsResponse {
        /**
         * The DDoS custom policy associated with the public IP.
         */
        ddosCustomPolicy?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Enables DDoS protection on the public IP.
         */
        protectedIP?: pulumi.Input<boolean>;
        /**
         * The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
         */
        protectionCoverage?: pulumi.Input<string>;
    }

    /**
     * Details the service to which the subnet is delegated.
     */
    export interface Delegation {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a subnet. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the subnet.
         */
        properties?: pulumi.Input<inputs.network.ServiceDelegationPropertiesFormat>;
    }

    /**
     * Details the service to which the subnet is delegated.
     */
    export interface DelegationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a subnet. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the subnet.
         */
        properties?: pulumi.Input<inputs.network.ServiceDelegationPropertiesFormatResponse>;
    }

    /**
     * List of properties of the device.
     */
    export interface DeviceProperties {
        /**
         * Model of the device.
         */
        deviceModel?: pulumi.Input<string>;
        /**
         * Name of the device Vendor.
         */
        deviceVendor?: pulumi.Input<string>;
        /**
         * Link speed.
         */
        linkSpeedInMbps?: pulumi.Input<number>;
    }

    /**
     * List of properties of the device.
     */
    export interface DevicePropertiesResponse {
        /**
         * Model of the device.
         */
        deviceModel?: pulumi.Input<string>;
        /**
         * Name of the device Vendor.
         */
        deviceVendor?: pulumi.Input<string>;
        /**
         * Link speed.
         */
        linkSpeedInMbps?: pulumi.Input<number>;
    }

    /**
     * DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
     */
    export interface DhcpOptions {
        /**
         * The list of DNS servers IP addresses.
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
     */
    export interface DhcpOptionsResponse {
        /**
         * The list of DNS servers IP addresses.
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Class containing DNS settings in a Traffic Manager profile.
     */
    export interface DnsConfig {
        /**
         * The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
         */
        relativeName?: pulumi.Input<string>;
        /**
         * The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
         */
        ttl?: pulumi.Input<number>;
    }

    /**
     * Class containing DNS settings in a Traffic Manager profile.
     */
    export interface DnsConfigResponse {
        /**
         * The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
         */
        fqdn: pulumi.Input<string>;
        /**
         * The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
         */
        relativeName?: pulumi.Input<string>;
        /**
         * The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
         */
        ttl?: pulumi.Input<number>;
    }

    /**
     * DNS Proxy Settings in Firewall Policy.
     */
    export interface DnsSettings {
        /**
         * Enable DNS Proxy on Firewalls attached to the Firewall Policy.
         */
        enableProxy?: pulumi.Input<boolean>;
        /**
         * FQDNs in Network Rules are supported when set to true.
         */
        requireProxyForNetworkRules?: pulumi.Input<boolean>;
        /**
         * List of Custom DNS Servers.
         */
        servers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * DNS Proxy Settings in Firewall Policy.
     */
    export interface DnsSettingsResponse {
        /**
         * Enable DNS Proxy on Firewalls attached to the Firewall Policy.
         */
        enableProxy?: pulumi.Input<boolean>;
        /**
         * FQDNs in Network Rules are supported when set to true.
         */
        requireProxyForNetworkRules?: pulumi.Input<boolean>;
        /**
         * List of Custom DNS Servers.
         */
        servers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Class representing a Traffic Manager endpoint.
     */
    export interface Endpoint {
        /**
         * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource
         */
        name?: pulumi.Input<string>;
        /**
         * The properties of the Traffic Manager endpoint.
         */
        properties?: pulumi.Input<inputs.network.EndpointProperties>;
        /**
         * The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Class representing a Traffic Manager endpoint properties.
     */
    export interface EndpointProperties {
        /**
         * List of custom headers.
         */
        customHeaders?: pulumi.Input<pulumi.Input<inputs.network.EndpointPropertiesProperties>[]>;
        /**
         * Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
         */
        endpointLocation?: pulumi.Input<string>;
        /**
         * The monitoring status of the endpoint.
         */
        endpointMonitorStatus?: pulumi.Input<string>;
        /**
         * The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
         */
        endpointStatus?: pulumi.Input<string>;
        /**
         * The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
         */
        geoMapping?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
         */
        minChildEndpoints?: pulumi.Input<number>;
        /**
         * The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
         */
        priority?: pulumi.Input<number>;
        /**
         * The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
         */
        subnets?: pulumi.Input<pulumi.Input<inputs.network.EndpointPropertiesProperties>[]>;
        /**
         * The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
         */
        target?: pulumi.Input<string>;
        /**
         * The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
         */
        targetResourceId?: pulumi.Input<string>;
        /**
         * The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
         */
        weight?: pulumi.Input<number>;
    }

    /**
     * Custom header name and value.
     */
    export interface EndpointPropertiesProperties {
        /**
         * Header name.
         */
        name?: pulumi.Input<string>;
        /**
         * Header value.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Class representing a Traffic Manager endpoint properties.
     */
    export interface EndpointPropertiesResponse {
        /**
         * List of custom headers.
         */
        customHeaders?: pulumi.Input<pulumi.Input<inputs.network.EndpointPropertiesResponseProperties>[]>;
        /**
         * Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
         */
        endpointLocation?: pulumi.Input<string>;
        /**
         * The monitoring status of the endpoint.
         */
        endpointMonitorStatus?: pulumi.Input<string>;
        /**
         * The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
         */
        endpointStatus?: pulumi.Input<string>;
        /**
         * The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
         */
        geoMapping?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
         */
        minChildEndpoints?: pulumi.Input<number>;
        /**
         * The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
         */
        priority?: pulumi.Input<number>;
        /**
         * The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
         */
        subnets?: pulumi.Input<pulumi.Input<inputs.network.EndpointPropertiesResponseProperties>[]>;
        /**
         * The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
         */
        target?: pulumi.Input<string>;
        /**
         * The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
         */
        targetResourceId?: pulumi.Input<string>;
        /**
         * The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
         */
        weight?: pulumi.Input<number>;
    }

    /**
     * Custom header name and value.
     */
    export interface EndpointPropertiesResponseProperties {
        /**
         * Header name.
         */
        name?: pulumi.Input<string>;
        /**
         * Header value.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Class representing a Traffic Manager endpoint.
     */
    export interface EndpointResponse {
        /**
         * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource
         */
        name?: pulumi.Input<string>;
        /**
         * The properties of the Traffic Manager endpoint.
         */
        properties?: pulumi.Input<inputs.network.EndpointPropertiesResponse>;
        /**
         * The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Identifies the service being brought into the virtual network.
     */
    export interface EndpointService {
        /**
         * A unique identifier of the service being referenced by the interface endpoint.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Identifies the service being brought into the virtual network.
     */
    export interface EndpointServiceResponse {
        /**
         * A unique identifier of the service being referenced by the interface endpoint.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Defines the properties of an experiment
     */
    export interface ExperimentProperties {
        /**
         * The description of the details or intents of the Experiment
         */
        description?: pulumi.Input<string>;
        /**
         * The state of the Experiment
         */
        enabledState?: pulumi.Input<string>;
        /**
         * The endpoint A of an experiment
         */
        endpointA?: pulumi.Input<inputs.network.Endpoint>;
        /**
         * The endpoint B of an experiment
         */
        endpointB?: pulumi.Input<inputs.network.Endpoint>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
    }

    /**
     * Defines the properties of an experiment
     */
    export interface ExperimentPropertiesResponse {
        /**
         * The description of the details or intents of the Experiment
         */
        description?: pulumi.Input<string>;
        /**
         * The state of the Experiment
         */
        enabledState?: pulumi.Input<string>;
        /**
         * The endpoint A of an experiment
         */
        endpointA?: pulumi.Input<inputs.network.EndpointResponse>;
        /**
         * The endpoint B of an experiment
         */
        endpointB?: pulumi.Input<inputs.network.EndpointResponse>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * The uri to the Script used in the Experiment
         */
        scriptFileUri: pulumi.Input<string>;
        /**
         * The description of Experiment status from the server side
         */
        status: pulumi.Input<string>;
    }

    /**
     * Authorization in an ExpressRouteCircuit resource.
     */
    export interface ExpressRouteCircuitAuthorization {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the express route circuit authorization.
         */
        properties: pulumi.Input<inputs.network.AuthorizationPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Authorization in an ExpressRouteCircuit resource.
     */
    export interface ExpressRouteCircuitAuthorizationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the express route circuit authorization.
         */
        properties?: pulumi.Input<inputs.network.AuthorizationPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
     */
    export interface ExpressRouteCircuitConnection {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the express route circuit connection.
         */
        properties?: pulumi.Input<inputs.network.ExpressRouteCircuitConnectionPropertiesFormat>;
    }

    /**
     * Properties of the express route circuit connection.
     */
    export interface ExpressRouteCircuitConnectionPropertiesFormat {
        /**
         * /29 IP address space to carve out Customer addresses for tunnels.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * The authorization key.
         */
        authorizationKey?: pulumi.Input<string>;
        /**
         * Express Route Circuit connection state.
         */
        circuitConnectionStatus?: pulumi.Input<string>;
        /**
         * Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
         */
        expressRouteCircuitPeering?: pulumi.Input<inputs.network.SubResource>;
        /**
         * IPv6 Address PrefixProperties of the express route circuit connection.
         */
        ipv6CircuitConnectionConfig?: pulumi.Input<inputs.network.Ipv6CircuitConnectionConfig>;
        /**
         * Reference to Express Route Circuit Private Peering Resource of the peered circuit.
         */
        peerExpressRouteCircuitPeering?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of the express route circuit connection.
     */
    export interface ExpressRouteCircuitConnectionPropertiesFormatResponse {
        /**
         * /29 IP address space to carve out Customer addresses for tunnels.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * The authorization key.
         */
        authorizationKey?: pulumi.Input<string>;
        /**
         * Express Route Circuit connection state.
         */
        circuitConnectionStatus?: pulumi.Input<string>;
        /**
         * Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
         */
        expressRouteCircuitPeering?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * IPv6 Address PrefixProperties of the express route circuit connection.
         */
        ipv6CircuitConnectionConfig?: pulumi.Input<inputs.network.Ipv6CircuitConnectionConfigResponse>;
        /**
         * Reference to Express Route Circuit Private Peering Resource of the peered circuit.
         */
        peerExpressRouteCircuitPeering?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The provisioning state of the express route circuit connection resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
     */
    export interface ExpressRouteCircuitConnectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the express route circuit connection.
         */
        properties?: pulumi.Input<inputs.network.ExpressRouteCircuitConnectionPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Peering in an ExpressRouteCircuit resource.
     */
    export interface ExpressRouteCircuitPeering {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the express route circuit peering.
         */
        properties?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringPropertiesFormat>;
    }

    /**
     * Specifies the peering configuration.
     */
    export interface ExpressRouteCircuitPeeringConfig {
        /**
         * The communities of bgp peering. Specified for microsoft peering.
         */
        advertisedCommunities?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The reference to AdvertisedPublicPrefixes.
         */
        advertisedPublicPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The CustomerASN of the peering.
         */
        customerASN?: pulumi.Input<number>;
        /**
         * The legacy mode of the peering.
         */
        legacyMode?: pulumi.Input<number>;
        /**
         * The RoutingRegistryName of the configuration.
         */
        routingRegistryName?: pulumi.Input<string>;
    }

    /**
     * Specifies the peering configuration.
     */
    export interface ExpressRouteCircuitPeeringConfigResponse {
        /**
         * The communities of bgp peering. Specified for microsoft peering.
         */
        advertisedCommunities?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The reference to AdvertisedPublicPrefixes.
         */
        advertisedPublicPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The advertised public prefix state of the Peering resource.
         */
        advertisedPublicPrefixesState: pulumi.Input<string>;
        /**
         * The CustomerASN of the peering.
         */
        customerASN?: pulumi.Input<number>;
        /**
         * The legacy mode of the peering.
         */
        legacyMode?: pulumi.Input<number>;
        /**
         * The RoutingRegistryName of the configuration.
         */
        routingRegistryName?: pulumi.Input<string>;
    }

    /**
     * ExpressRoute circuit peering identifier.
     */
    export interface ExpressRouteCircuitPeeringId {
        /**
         * The ID of the ExpressRoute circuit peering.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * ExpressRoute circuit peering identifier.
     */
    export interface ExpressRouteCircuitPeeringIdResponse {
        /**
         * The ID of the ExpressRoute circuit peering.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Properties of the express route circuit peering.
     */
    export interface ExpressRouteCircuitPeeringPropertiesFormat {
        /**
         * The Azure ASN.
         */
        azureASN?: pulumi.Input<number>;
        /**
         * The list of circuit connections associated with Azure Private Peering for this circuit.
         */
        connections?: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteCircuitConnection>[]>;
        /**
         * The ExpressRoute connection.
         */
        expressRouteConnection?: pulumi.Input<inputs.network.ExpressRouteConnectionId>;
        /**
         * The GatewayManager Etag.
         */
        gatewayManagerEtag?: pulumi.Input<string>;
        /**
         * The IPv6 peering configuration.
         */
        ipv6PeeringConfig?: pulumi.Input<inputs.network.Ipv6ExpressRouteCircuitPeeringConfig>;
        /**
         * The Microsoft peering configuration.
         */
        microsoftPeeringConfig?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringConfig>;
        /**
         * The peer ASN.
         */
        peerASN?: pulumi.Input<number>;
        /**
         * The peering type.
         */
        peeringType?: pulumi.Input<string>;
        /**
         * The primary port.
         */
        primaryAzurePort?: pulumi.Input<string>;
        /**
         * The primary address prefix.
         */
        primaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The reference to the RouteFilter resource.
         */
        routeFilter?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The secondary port.
         */
        secondaryAzurePort?: pulumi.Input<string>;
        /**
         * The secondary address prefix.
         */
        secondaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The shared key.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * The peering state.
         */
        state?: pulumi.Input<string>;
        /**
         * The peering stats of express route circuit.
         */
        stats?: pulumi.Input<inputs.network.ExpressRouteCircuitStats>;
        /**
         * The VLAN ID.
         */
        vlanId?: pulumi.Input<number>;
    }

    /**
     * Properties of the express route circuit peering.
     */
    export interface ExpressRouteCircuitPeeringPropertiesFormatResponse {
        /**
         * The Azure ASN.
         */
        azureASN?: pulumi.Input<number>;
        /**
         * The list of circuit connections associated with Azure Private Peering for this circuit.
         */
        connections?: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteCircuitConnectionResponse>[]>;
        /**
         * The ExpressRoute connection.
         */
        expressRouteConnection?: pulumi.Input<inputs.network.ExpressRouteConnectionIdResponse>;
        /**
         * The GatewayManager Etag.
         */
        gatewayManagerEtag?: pulumi.Input<string>;
        /**
         * The IPv6 peering configuration.
         */
        ipv6PeeringConfig?: pulumi.Input<inputs.network.Ipv6ExpressRouteCircuitPeeringConfigResponse>;
        /**
         * Who was the last to modify the peering.
         */
        lastModifiedBy: pulumi.Input<string>;
        /**
         * The Microsoft peering configuration.
         */
        microsoftPeeringConfig?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringConfigResponse>;
        /**
         * The peer ASN.
         */
        peerASN?: pulumi.Input<number>;
        /**
         * The list of peered circuit connections associated with Azure Private Peering for this circuit.
         */
        peeredConnections: pulumi.Input<pulumi.Input<inputs.network.PeerExpressRouteCircuitConnectionResponse>[]>;
        /**
         * The peering type.
         */
        peeringType?: pulumi.Input<string>;
        /**
         * The primary port.
         */
        primaryAzurePort?: pulumi.Input<string>;
        /**
         * The primary address prefix.
         */
        primaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The provisioning state of the express route circuit peering resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the RouteFilter resource.
         */
        routeFilter?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The secondary port.
         */
        secondaryAzurePort?: pulumi.Input<string>;
        /**
         * The secondary address prefix.
         */
        secondaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The shared key.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * The peering state.
         */
        state?: pulumi.Input<string>;
        /**
         * The peering stats of express route circuit.
         */
        stats?: pulumi.Input<inputs.network.ExpressRouteCircuitStatsResponse>;
        /**
         * The VLAN ID.
         */
        vlanId?: pulumi.Input<number>;
    }

    /**
     * Peering in an ExpressRouteCircuit resource.
     */
    export interface ExpressRouteCircuitPeeringResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the express route circuit peering.
         */
        properties?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of ExpressRouteCircuit.
     */
    export interface ExpressRouteCircuitPropertiesFormat {
        /**
         * Allow classic operations.
         */
        allowClassicOperations?: pulumi.Input<boolean>;
        /**
         * The list of authorizations.
         */
        authorizations?: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteCircuitAuthorization>[]>;
        /**
         * The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
         */
        bandwidthInGbps?: pulumi.Input<number>;
        /**
         * The CircuitProvisioningState state of the resource.
         */
        circuitProvisioningState?: pulumi.Input<string>;
        /**
         * The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
         */
        expressRoutePort?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The GatewayManager Etag.
         */
        gatewayManagerEtag?: pulumi.Input<string>;
        /**
         * Flag denoting global reach status.
         */
        globalReachEnabled?: pulumi.Input<boolean>;
        /**
         * The list of peerings.
         */
        peerings?: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteCircuitPeering>[]>;
        /**
         * The ServiceKey.
         */
        serviceKey?: pulumi.Input<string>;
        /**
         * The ServiceProviderNotes.
         */
        serviceProviderNotes?: pulumi.Input<string>;
        /**
         * The ServiceProviderProperties.
         */
        serviceProviderProperties?: pulumi.Input<inputs.network.ExpressRouteCircuitServiceProviderProperties>;
        /**
         * The ServiceProviderProvisioningState state of the resource.
         */
        serviceProviderProvisioningState?: pulumi.Input<string>;
    }

    /**
     * Properties of ExpressRouteCircuit.
     */
    export interface ExpressRouteCircuitPropertiesFormatResponse {
        /**
         * Allow classic operations.
         */
        allowClassicOperations?: pulumi.Input<boolean>;
        /**
         * The list of authorizations.
         */
        authorizations?: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteCircuitAuthorizationResponse>[]>;
        /**
         * The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
         */
        bandwidthInGbps?: pulumi.Input<number>;
        /**
         * The CircuitProvisioningState state of the resource.
         */
        circuitProvisioningState?: pulumi.Input<string>;
        /**
         * The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
         */
        expressRoutePort?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The GatewayManager Etag.
         */
        gatewayManagerEtag?: pulumi.Input<string>;
        /**
         * Flag denoting global reach status.
         */
        globalReachEnabled?: pulumi.Input<boolean>;
        /**
         * The list of peerings.
         */
        peerings?: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteCircuitPeeringResponse>[]>;
        /**
         * The provisioning state of the express route circuit resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The ServiceKey.
         */
        serviceKey?: pulumi.Input<string>;
        /**
         * The ServiceProviderNotes.
         */
        serviceProviderNotes?: pulumi.Input<string>;
        /**
         * The ServiceProviderProperties.
         */
        serviceProviderProperties?: pulumi.Input<inputs.network.ExpressRouteCircuitServiceProviderPropertiesResponse>;
        /**
         * The ServiceProviderProvisioningState state of the resource.
         */
        serviceProviderProvisioningState?: pulumi.Input<string>;
        /**
         * The identifier of the circuit traffic. Outer tag for QinQ encapsulation.
         */
        stag: pulumi.Input<number>;
    }

    /**
     * Contains ServiceProviderProperties in an ExpressRouteCircuit.
     */
    export interface ExpressRouteCircuitServiceProviderProperties {
        /**
         * The BandwidthInMbps.
         */
        bandwidthInMbps?: pulumi.Input<number>;
        /**
         * The peering location.
         */
        peeringLocation?: pulumi.Input<string>;
        /**
         * The serviceProviderName.
         */
        serviceProviderName?: pulumi.Input<string>;
    }

    /**
     * Contains ServiceProviderProperties in an ExpressRouteCircuit.
     */
    export interface ExpressRouteCircuitServiceProviderPropertiesResponse {
        /**
         * The BandwidthInMbps.
         */
        bandwidthInMbps?: pulumi.Input<number>;
        /**
         * The peering location.
         */
        peeringLocation?: pulumi.Input<string>;
        /**
         * The serviceProviderName.
         */
        serviceProviderName?: pulumi.Input<string>;
    }

    /**
     * Contains SKU in an ExpressRouteCircuit.
     */
    export interface ExpressRouteCircuitSku {
        /**
         * The family of the SKU.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * The tier of the SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Contains SKU in an ExpressRouteCircuit.
     */
    export interface ExpressRouteCircuitSkuResponse {
        /**
         * The family of the SKU.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * The tier of the SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Contains stats associated with the peering.
     */
    export interface ExpressRouteCircuitStats {
        /**
         * The Primary BytesIn of the peering.
         */
        primarybytesIn?: pulumi.Input<number>;
        /**
         * The primary BytesOut of the peering.
         */
        primarybytesOut?: pulumi.Input<number>;
        /**
         * The secondary BytesIn of the peering.
         */
        secondarybytesIn?: pulumi.Input<number>;
        /**
         * The secondary BytesOut of the peering.
         */
        secondarybytesOut?: pulumi.Input<number>;
    }

    /**
     * Contains stats associated with the peering.
     */
    export interface ExpressRouteCircuitStatsResponse {
        /**
         * The Primary BytesIn of the peering.
         */
        primarybytesIn?: pulumi.Input<number>;
        /**
         * The primary BytesOut of the peering.
         */
        primarybytesOut?: pulumi.Input<number>;
        /**
         * The secondary BytesIn of the peering.
         */
        secondarybytesIn?: pulumi.Input<number>;
        /**
         * The secondary BytesOut of the peering.
         */
        secondarybytesOut?: pulumi.Input<number>;
    }

    /**
     * The ID of the ExpressRouteConnection.
     */
    export interface ExpressRouteConnectionId {
    }

    /**
     * The ID of the ExpressRouteConnection.
     */
    export interface ExpressRouteConnectionIdResponse {
        /**
         * The ID of the ExpressRouteConnection.
         */
        id: pulumi.Input<string>;
    }

    /**
     * Properties of the ExpressRouteConnection subresource.
     */
    export interface ExpressRouteConnectionProperties {
        /**
         * Authorization key to establish the connection.
         */
        authorizationKey?: pulumi.Input<string>;
        /**
         * Enable internet security.
         */
        enableInternetSecurity?: pulumi.Input<boolean>;
        /**
         * The ExpressRoute circuit peering.
         */
        expressRouteCircuitPeering: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringId>;
        /**
         * The Routing Configuration indicating the associated and propagated route tables on this connection.
         */
        routingConfiguration?: pulumi.Input<inputs.network.RoutingConfiguration>;
        /**
         * The routing weight associated to the connection.
         */
        routingWeight?: pulumi.Input<number>;
    }

    /**
     * Properties of the ExpressRouteConnection subresource.
     */
    export interface ExpressRouteConnectionPropertiesResponse {
        /**
         * Authorization key to establish the connection.
         */
        authorizationKey?: pulumi.Input<string>;
        /**
         * Enable internet security.
         */
        enableInternetSecurity?: pulumi.Input<boolean>;
        /**
         * The ExpressRoute circuit peering.
         */
        expressRouteCircuitPeering: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringIdResponse>;
        /**
         * The provisioning state of the express route connection resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The Routing Configuration indicating the associated and propagated route tables on this connection.
         */
        routingConfiguration?: pulumi.Input<inputs.network.RoutingConfigurationResponse>;
        /**
         * The routing weight associated to the connection.
         */
        routingWeight?: pulumi.Input<number>;
    }

    /**
     * ExpressRouteConnection resource.
     */
    export interface ExpressRouteConnectionResponse {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the express route connection.
         */
        properties?: pulumi.Input<inputs.network.ExpressRouteConnectionPropertiesResponse>;
    }

    /**
     * Properties of express route cross connection peering.
     */
    export interface ExpressRouteCrossConnectionPeeringProperties {
        /**
         * The GatewayManager Etag.
         */
        gatewayManagerEtag?: pulumi.Input<string>;
        /**
         * The IPv6 peering configuration.
         */
        ipv6PeeringConfig?: pulumi.Input<inputs.network.Ipv6ExpressRouteCircuitPeeringConfig>;
        /**
         * The Microsoft peering configuration.
         */
        microsoftPeeringConfig?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringConfig>;
        /**
         * The peer ASN.
         */
        peerASN?: pulumi.Input<number>;
        /**
         * The peering type.
         */
        peeringType?: pulumi.Input<string>;
        /**
         * The primary address prefix.
         */
        primaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The secondary address prefix.
         */
        secondaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The shared key.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * The peering state.
         */
        state?: pulumi.Input<string>;
        /**
         * The VLAN ID.
         */
        vlanId?: pulumi.Input<number>;
    }

    /**
     * Properties of express route cross connection peering.
     */
    export interface ExpressRouteCrossConnectionPeeringPropertiesResponse {
        /**
         * The Azure ASN.
         */
        azureASN: pulumi.Input<number>;
        /**
         * The GatewayManager Etag.
         */
        gatewayManagerEtag?: pulumi.Input<string>;
        /**
         * The IPv6 peering configuration.
         */
        ipv6PeeringConfig?: pulumi.Input<inputs.network.Ipv6ExpressRouteCircuitPeeringConfigResponse>;
        /**
         * Who was the last to modify the peering.
         */
        lastModifiedBy: pulumi.Input<string>;
        /**
         * The Microsoft peering configuration.
         */
        microsoftPeeringConfig?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringConfigResponse>;
        /**
         * The peer ASN.
         */
        peerASN?: pulumi.Input<number>;
        /**
         * The peering type.
         */
        peeringType?: pulumi.Input<string>;
        /**
         * The primary port.
         */
        primaryAzurePort: pulumi.Input<string>;
        /**
         * The primary address prefix.
         */
        primaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The provisioning state of the express route cross connection peering resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The secondary port.
         */
        secondaryAzurePort: pulumi.Input<string>;
        /**
         * The secondary address prefix.
         */
        secondaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The shared key.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * The peering state.
         */
        state?: pulumi.Input<string>;
        /**
         * The VLAN ID.
         */
        vlanId?: pulumi.Input<number>;
    }

    /**
     * ExpressRoute gateway resource properties.
     */
    export interface ExpressRouteGatewayProperties {
        /**
         * Configuration for auto scaling.
         */
        autoScaleConfiguration?: pulumi.Input<inputs.network.ExpressRouteGatewayPropertiesProperties>;
        /**
         * The Virtual Hub where the ExpressRoute gateway is or will be deployed.
         */
        virtualHub: pulumi.Input<inputs.network.VirtualHubId>;
    }

    /**
     * Configuration for auto scaling.
     */
    export interface ExpressRouteGatewayPropertiesProperties {
        /**
         * Minimum and maximum number of scale units to deploy.
         */
        bounds?: pulumi.Input<inputs.network.ExpressRouteGatewayPropertiesProperties>;
    }

    /**
     * ExpressRoute gateway resource properties.
     */
    export interface ExpressRouteGatewayPropertiesResponse {
        /**
         * Configuration for auto scaling.
         */
        autoScaleConfiguration?: pulumi.Input<inputs.network.ExpressRouteGatewayPropertiesResponseProperties>;
        /**
         * List of ExpressRoute connections to the ExpressRoute gateway.
         */
        expressRouteConnections: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteConnectionResponse>[]>;
        /**
         * The provisioning state of the express route gateway resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The Virtual Hub where the ExpressRoute gateway is or will be deployed.
         */
        virtualHub: pulumi.Input<inputs.network.VirtualHubIdResponse>;
    }

    /**
     * Configuration for auto scaling.
     */
    export interface ExpressRouteGatewayPropertiesResponseProperties {
        /**
         * Minimum and maximum number of scale units to deploy.
         */
        bounds?: pulumi.Input<inputs.network.ExpressRouteGatewayPropertiesResponseProperties>;
    }

    /**
     * ExpressRouteLink child resource definition.
     */
    export interface ExpressRouteLink {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of child port resource that is unique among child port resources of the parent.
         */
        name?: pulumi.Input<string>;
        /**
         * ExpressRouteLink properties.
         */
        properties?: pulumi.Input<inputs.network.ExpressRouteLinkPropertiesFormat>;
    }

    /**
     * ExpressRouteLink Mac Security Configuration.
     */
    export interface ExpressRouteLinkMacSecConfig {
        /**
         * Keyvault Secret Identifier URL containing Mac security CAK key.
         */
        cakSecretIdentifier?: pulumi.Input<string>;
        /**
         * Mac security cipher.
         */
        cipher?: pulumi.Input<string>;
        /**
         * Keyvault Secret Identifier URL containing Mac security CKN key.
         */
        cknSecretIdentifier?: pulumi.Input<string>;
    }

    /**
     * ExpressRouteLink Mac Security Configuration.
     */
    export interface ExpressRouteLinkMacSecConfigResponse {
        /**
         * Keyvault Secret Identifier URL containing Mac security CAK key.
         */
        cakSecretIdentifier?: pulumi.Input<string>;
        /**
         * Mac security cipher.
         */
        cipher?: pulumi.Input<string>;
        /**
         * Keyvault Secret Identifier URL containing Mac security CKN key.
         */
        cknSecretIdentifier?: pulumi.Input<string>;
    }

    /**
     * Properties specific to ExpressRouteLink resources.
     */
    export interface ExpressRouteLinkPropertiesFormat {
        /**
         * Administrative state of the physical port.
         */
        adminState?: pulumi.Input<string>;
        /**
         * MacSec configuration.
         */
        macSecConfig?: pulumi.Input<inputs.network.ExpressRouteLinkMacSecConfig>;
    }

    /**
     * Properties specific to ExpressRouteLink resources.
     */
    export interface ExpressRouteLinkPropertiesFormatResponse {
        /**
         * Administrative state of the physical port.
         */
        adminState?: pulumi.Input<string>;
        /**
         * Physical fiber port type.
         */
        connectorType: pulumi.Input<string>;
        /**
         * Name of Azure router interface.
         */
        interfaceName: pulumi.Input<string>;
        /**
         * MacSec configuration.
         */
        macSecConfig?: pulumi.Input<inputs.network.ExpressRouteLinkMacSecConfigResponse>;
        /**
         * Mapping between physical port to patch panel port.
         */
        patchPanelId: pulumi.Input<string>;
        /**
         * The provisioning state of the express route link resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Mapping of physical patch panel to rack.
         */
        rackId: pulumi.Input<string>;
        /**
         * Name of Azure router associated with physical port.
         */
        routerName: pulumi.Input<string>;
    }

    /**
     * ExpressRouteLink child resource definition.
     */
    export interface ExpressRouteLinkResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of child port resource that is unique among child port resources of the parent.
         */
        name?: pulumi.Input<string>;
        /**
         * ExpressRouteLink properties.
         */
        properties?: pulumi.Input<inputs.network.ExpressRouteLinkPropertiesFormatResponse>;
    }

    /**
     * Properties specific to ExpressRoutePort resources.
     */
    export interface ExpressRoutePortPropertiesFormat {
        /**
         * Bandwidth of procured ports in Gbps.
         */
        bandwidthInGbps?: pulumi.Input<number>;
        /**
         * Encapsulation method on physical ports.
         */
        encapsulation?: pulumi.Input<string>;
        /**
         * The set of physical links of the ExpressRoutePort resource.
         */
        links?: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteLink>[]>;
        /**
         * The name of the peering location that the ExpressRoutePort is mapped to physically.
         */
        peeringLocation?: pulumi.Input<string>;
    }

    /**
     * Properties specific to ExpressRoutePort resources.
     */
    export interface ExpressRoutePortPropertiesFormatResponse {
        /**
         * Date of the physical port allocation to be used in Letter of Authorization.
         */
        allocationDate: pulumi.Input<string>;
        /**
         * Bandwidth of procured ports in Gbps.
         */
        bandwidthInGbps?: pulumi.Input<number>;
        /**
         * Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
         */
        circuits: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * Encapsulation method on physical ports.
         */
        encapsulation?: pulumi.Input<string>;
        /**
         * Ether type of the physical port.
         */
        etherType: pulumi.Input<string>;
        /**
         * The set of physical links of the ExpressRoutePort resource.
         */
        links?: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteLinkResponse>[]>;
        /**
         * Maximum transmission unit of the physical port pair(s).
         */
        mtu: pulumi.Input<string>;
        /**
         * The name of the peering location that the ExpressRoutePort is mapped to physically.
         */
        peeringLocation?: pulumi.Input<string>;
        /**
         * Aggregate Gbps of associated circuit bandwidths.
         */
        provisionedBandwidthInGbps: pulumi.Input<number>;
        /**
         * The provisioning state of the express route port resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the express route port resource.
         */
        resourceGuid: pulumi.Input<string>;
    }

    /**
     * Trusted Root certificates properties for tls.
     */
    export interface FirewallPolicyCertificateAuthority {
        /**
         * Name of the CA certificate.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the certificate authority.
         */
        properties?: pulumi.Input<inputs.network.FirewallPolicyCertificateAuthorityPropertiesFormat>;
    }

    /**
     * Trusted Root certificates properties for tls.
     */
    export interface FirewallPolicyCertificateAuthorityPropertiesFormat {
        /**
         * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
         */
        keyVaultSecretId?: pulumi.Input<string>;
    }

    /**
     * Trusted Root certificates properties for tls.
     */
    export interface FirewallPolicyCertificateAuthorityPropertiesFormatResponse {
        /**
         * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
         */
        keyVaultSecretId?: pulumi.Input<string>;
    }

    /**
     * Trusted Root certificates properties for tls.
     */
    export interface FirewallPolicyCertificateAuthorityResponse {
        /**
         * Name of the CA certificate.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the certificate authority.
         */
        properties?: pulumi.Input<inputs.network.FirewallPolicyCertificateAuthorityPropertiesFormatResponse>;
    }

    /**
     * Firewall Policy definition.
     */
    export interface FirewallPolicyPropertiesFormat {
        /**
         * The parent firewall policy from which rules are inherited.
         */
        basePolicy?: pulumi.Input<inputs.network.SubResource>;
        /**
         * DNS Proxy Settings definition.
         */
        dnsSettings?: pulumi.Input<inputs.network.DnsSettings>;
        /**
         * The operation mode for Intrusion system.
         */
        intrusionSystemMode?: pulumi.Input<string>;
        /**
         * The operation mode for Threat Intelligence.
         */
        threatIntelMode?: pulumi.Input<string>;
        /**
         * ThreatIntel Whitelist for Firewall Policy.
         */
        threatIntelWhitelist?: pulumi.Input<inputs.network.FirewallPolicyThreatIntelWhitelist>;
        /**
         * TLS Configuration definition.
         */
        transportSecurity?: pulumi.Input<inputs.network.FirewallPolicyTransportSecurity>;
    }

    /**
     * Firewall Policy definition.
     */
    export interface FirewallPolicyPropertiesFormatResponse {
        /**
         * The parent firewall policy from which rules are inherited.
         */
        basePolicy?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * List of references to Child Firewall Policies.
         */
        childPolicies: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * DNS Proxy Settings definition.
         */
        dnsSettings?: pulumi.Input<inputs.network.DnsSettingsResponse>;
        /**
         * List of references to Azure Firewalls that this Firewall Policy is associated with.
         */
        firewalls: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The operation mode for Intrusion system.
         */
        intrusionSystemMode?: pulumi.Input<string>;
        /**
         * The provisioning state of the firewall policy resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * List of references to FirewallPolicyRuleCollectionGroups.
         */
        ruleCollectionGroups: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The operation mode for Threat Intelligence.
         */
        threatIntelMode?: pulumi.Input<string>;
        /**
         * ThreatIntel Whitelist for Firewall Policy.
         */
        threatIntelWhitelist?: pulumi.Input<inputs.network.FirewallPolicyThreatIntelWhitelistResponse>;
        /**
         * TLS Configuration definition.
         */
        transportSecurity?: pulumi.Input<inputs.network.FirewallPolicyTransportSecurityResponse>;
    }

    /**
     * Properties of the rule collection.
     */
    export interface FirewallPolicyRuleCollection {
        /**
         * The name of the rule collection.
         */
        name?: pulumi.Input<string>;
        /**
         * Priority of the Firewall Policy Rule Collection resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * The type of the rule collection.
         */
        ruleCollectionType: pulumi.Input<string>;
    }

    /**
     * Properties of the rule collection group.
     */
    export interface FirewallPolicyRuleCollectionGroupProperties {
        /**
         * Priority of the Firewall Policy Rule Collection Group resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * Group of Firewall Policy rule collections.
         */
        ruleCollections?: pulumi.Input<pulumi.Input<inputs.network.FirewallPolicyRuleCollection>[]>;
    }

    /**
     * Properties of the rule collection group.
     */
    export interface FirewallPolicyRuleCollectionGroupPropertiesResponse {
        /**
         * Priority of the Firewall Policy Rule Collection Group resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * The provisioning state of the firewall policy rule collection group resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Group of Firewall Policy rule collections.
         */
        ruleCollections?: pulumi.Input<pulumi.Input<inputs.network.FirewallPolicyRuleCollectionResponse>[]>;
    }

    /**
     * Properties of the rule collection.
     */
    export interface FirewallPolicyRuleCollectionResponse {
        /**
         * The name of the rule collection.
         */
        name?: pulumi.Input<string>;
        /**
         * Priority of the Firewall Policy Rule Collection resource.
         */
        priority?: pulumi.Input<number>;
        /**
         * The type of the rule collection.
         */
        ruleCollectionType: pulumi.Input<string>;
    }

    /**
     * ThreatIntel Whitelist for Firewall Policy.
     */
    export interface FirewallPolicyThreatIntelWhitelist {
        /**
         * List of FQDNs for the ThreatIntel Whitelist.
         */
        fqdns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of IP addresses for the ThreatIntel Whitelist.
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * ThreatIntel Whitelist for Firewall Policy.
     */
    export interface FirewallPolicyThreatIntelWhitelistResponse {
        /**
         * List of FQDNs for the ThreatIntel Whitelist.
         */
        fqdns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of IP addresses for the ThreatIntel Whitelist.
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Configuration needed to perform TLS termination & initiation.
     */
    export interface FirewallPolicyTransportSecurity {
        /**
         * The CA used for intermediate CA generation.
         */
        certificateAuthority?: pulumi.Input<inputs.network.FirewallPolicyCertificateAuthority>;
        /**
         * List of domains which are excluded from TLS termination.
         */
        excludedDomains?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Certificates which are to be trusted by the firewall.
         */
        trustedRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.FirewallPolicyTrustedRootCertificate>[]>;
    }

    /**
     * Configuration needed to perform TLS termination & initiation.
     */
    export interface FirewallPolicyTransportSecurityResponse {
        /**
         * The CA used for intermediate CA generation.
         */
        certificateAuthority?: pulumi.Input<inputs.network.FirewallPolicyCertificateAuthorityResponse>;
        /**
         * List of domains which are excluded from TLS termination.
         */
        excludedDomains?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Certificates which are to be trusted by the firewall.
         */
        trustedRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.FirewallPolicyTrustedRootCertificateResponse>[]>;
    }

    /**
     * Trusted Root certificates of a firewall policy.
     */
    export interface FirewallPolicyTrustedRootCertificate {
        /**
         * Name of the trusted root certificate that is unique within a firewall policy.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the trusted root authorities.
         */
        properties?: pulumi.Input<inputs.network.FirewallPolicyTrustedRootCertificatePropertiesFormat>;
    }

    /**
     * Trusted Root certificates properties for tls.
     */
    export interface FirewallPolicyTrustedRootCertificatePropertiesFormat {
        /**
         * Secret Id of (base-64 encoded unencrypted pfx) the public certificate data stored in KeyVault.
         */
        keyVaultSecretId?: pulumi.Input<string>;
    }

    /**
     * Trusted Root certificates properties for tls.
     */
    export interface FirewallPolicyTrustedRootCertificatePropertiesFormatResponse {
        /**
         * Secret Id of (base-64 encoded unencrypted pfx) the public certificate data stored in KeyVault.
         */
        keyVaultSecretId?: pulumi.Input<string>;
    }

    /**
     * Trusted Root certificates of a firewall policy.
     */
    export interface FirewallPolicyTrustedRootCertificateResponse {
        /**
         * Name of the trusted root certificate that is unique within a firewall policy.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the trusted root authorities.
         */
        properties?: pulumi.Input<inputs.network.FirewallPolicyTrustedRootCertificatePropertiesFormatResponse>;
    }

    /**
     * Parameters that define the flow log format.
     */
    export interface FlowLogFormatParameters {
        /**
         * The file type of flow log.
         */
        type?: pulumi.Input<string>;
        /**
         * The version (revision) of the flow log.
         */
        version?: pulumi.Input<number>;
    }

    /**
     * Parameters that define the flow log format.
     */
    export interface FlowLogFormatParametersResponse {
        /**
         * The file type of flow log.
         */
        type?: pulumi.Input<string>;
        /**
         * The version (revision) of the flow log.
         */
        version?: pulumi.Input<number>;
    }

    /**
     * Parameters that define the configuration of flow log.
     */
    export interface FlowLogPropertiesFormat {
        /**
         * Flag to enable/disable flow logging.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Parameters that define the configuration of traffic analytics.
         */
        flowAnalyticsConfiguration?: pulumi.Input<inputs.network.TrafficAnalyticsProperties>;
        /**
         * Parameters that define the flow log format.
         */
        format?: pulumi.Input<inputs.network.FlowLogFormatParameters>;
        /**
         * Parameters that define the retention policy for flow log.
         */
        retentionPolicy?: pulumi.Input<inputs.network.RetentionPolicyParameters>;
        /**
         * ID of the storage account which is used to store the flow log.
         */
        storageId: pulumi.Input<string>;
        /**
         * ID of network security group to which flow log will be applied.
         */
        targetResourceId: pulumi.Input<string>;
    }

    /**
     * Parameters that define the configuration of flow log.
     */
    export interface FlowLogPropertiesFormatResponse {
        /**
         * Flag to enable/disable flow logging.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Parameters that define the configuration of traffic analytics.
         */
        flowAnalyticsConfiguration?: pulumi.Input<inputs.network.TrafficAnalyticsPropertiesResponse>;
        /**
         * Parameters that define the flow log format.
         */
        format?: pulumi.Input<inputs.network.FlowLogFormatParametersResponse>;
        /**
         * The provisioning state of the flow log.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Parameters that define the retention policy for flow log.
         */
        retentionPolicy?: pulumi.Input<inputs.network.RetentionPolicyParametersResponse>;
        /**
         * ID of the storage account which is used to store the flow log.
         */
        storageId: pulumi.Input<string>;
        /**
         * Guid of network security group to which flow log will be applied.
         */
        targetResourceGuid: pulumi.Input<string>;
        /**
         * ID of network security group to which flow log will be applied.
         */
        targetResourceId: pulumi.Input<string>;
    }

    /**
     * A flow log resource.
     */
    export interface FlowLogResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the flow log.
         */
        properties?: pulumi.Input<inputs.network.FlowLogPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Parameters required for enabling SSL with Front Door-managed certificates
     */
    export interface FrontDoorCertificateSourceParametersResponse {
        /**
         * Defines the type of the certificate used for secure connections to a frontendEndpoint
         */
        certificateType?: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties required to create an endpoint.
     */
    export interface FrontDoorProperties {
        /**
         * Backend pools available to routing rules.
         */
        backendPools?: pulumi.Input<pulumi.Input<inputs.network.BackendPool>[]>;
        /**
         * Settings for all backendPools
         */
        backendPoolsSettings?: pulumi.Input<inputs.network.BackendPoolsSettings>;
        /**
         * Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'
         */
        enabledState?: pulumi.Input<string>;
        /**
         * A friendly name for the frontDoor
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * Frontend endpoints available to routing rules.
         */
        frontendEndpoints?: pulumi.Input<pulumi.Input<inputs.network.FrontendEndpoint>[]>;
        /**
         * Health probe settings associated with this Front Door instance.
         */
        healthProbeSettings?: pulumi.Input<pulumi.Input<inputs.network.HealthProbeSettingsModel>[]>;
        /**
         * Load balancing settings associated with this Front Door instance.
         */
        loadBalancingSettings?: pulumi.Input<pulumi.Input<inputs.network.LoadBalancingSettingsModel>[]>;
        /**
         * Resource status of the Front Door.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * Routing rules associated with this Front Door.
         */
        routingRules?: pulumi.Input<pulumi.Input<inputs.network.RoutingRule>[]>;
    }

    /**
     * The JSON object that contains the properties required to create an endpoint.
     */
    export interface FrontDoorPropertiesResponse {
        /**
         * Backend pools available to routing rules.
         */
        backendPools?: pulumi.Input<pulumi.Input<inputs.network.BackendPoolResponse>[]>;
        /**
         * Settings for all backendPools
         */
        backendPoolsSettings?: pulumi.Input<inputs.network.BackendPoolsSettingsResponse>;
        /**
         * The host that each frontendEndpoint must CNAME to.
         */
        cname: pulumi.Input<string>;
        /**
         * Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'
         */
        enabledState?: pulumi.Input<string>;
        /**
         * A friendly name for the frontDoor
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The Id of the frontdoor.
         */
        frontdoorId: pulumi.Input<string>;
        /**
         * Frontend endpoints available to routing rules.
         */
        frontendEndpoints?: pulumi.Input<pulumi.Input<inputs.network.FrontendEndpointResponse>[]>;
        /**
         * Health probe settings associated with this Front Door instance.
         */
        healthProbeSettings?: pulumi.Input<pulumi.Input<inputs.network.HealthProbeSettingsModelResponse>[]>;
        /**
         * Load balancing settings associated with this Front Door instance.
         */
        loadBalancingSettings?: pulumi.Input<pulumi.Input<inputs.network.LoadBalancingSettingsModelResponse>[]>;
        /**
         * Provisioning state of the Front Door.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Resource status of the Front Door.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * Routing rules associated with this Front Door.
         */
        routingRules?: pulumi.Input<pulumi.Input<inputs.network.RoutingRuleResponse>[]>;
        /**
         * Rules Engine Configurations available to routing rules.
         */
        rulesEngines: pulumi.Input<pulumi.Input<inputs.network.RulesEngineResponse>[]>;
    }

    /**
     * A frontend endpoint used for routing.
     */
    export interface FrontendEndpoint {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the Frontend endpoint
         */
        properties?: pulumi.Input<inputs.network.FrontendEndpointProperties>;
    }

    /**
     * The JSON object that contains the properties required to create a frontend endpoint.
     */
    export interface FrontendEndpointProperties {
        /**
         * The host name of the frontendEndpoint. Must be a domain name.
         */
        hostName?: pulumi.Input<string>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
         */
        sessionAffinityEnabledState?: pulumi.Input<string>;
        /**
         * UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
         */
        sessionAffinityTtlSeconds?: pulumi.Input<number>;
        /**
         * Defines the Web Application Firewall policy for each host (if applicable)
         */
        webApplicationFirewallPolicyLink?: pulumi.Input<inputs.network.FrontendEndpointUpdateParametersProperties>;
    }

    /**
     * The JSON object that contains the properties required to create a frontend endpoint.
     */
    export interface FrontendEndpointPropertiesResponse {
        /**
         * The configuration specifying how to enable HTTPS
         */
        customHttpsConfiguration: pulumi.Input<inputs.network.CustomHttpsConfigurationResponse>;
        /**
         * Provisioning status of Custom Https of the frontendEndpoint.
         */
        customHttpsProvisioningState: pulumi.Input<string>;
        /**
         * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
         */
        customHttpsProvisioningSubstate: pulumi.Input<string>;
        /**
         * The host name of the frontendEndpoint. Must be a domain name.
         */
        hostName?: pulumi.Input<string>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
         */
        sessionAffinityEnabledState?: pulumi.Input<string>;
        /**
         * UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
         */
        sessionAffinityTtlSeconds?: pulumi.Input<number>;
        /**
         * Defines the Web Application Firewall policy for each host (if applicable)
         */
        webApplicationFirewallPolicyLink?: pulumi.Input<inputs.network.FrontendEndpointUpdateParametersResponseProperties>;
    }

    /**
     * A frontend endpoint used for routing.
     */
    export interface FrontendEndpointResponse {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the Frontend endpoint
         */
        properties?: pulumi.Input<inputs.network.FrontendEndpointPropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Defines the Web Application Firewall policy for each host (if applicable)
     */
    export interface FrontendEndpointUpdateParametersProperties {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Defines the Web Application Firewall policy for each host (if applicable)
     */
    export interface FrontendEndpointUpdateParametersResponseProperties {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Frontend IP address of the load balancer.
     */
    export interface FrontendIPConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the load balancer probe.
         */
        properties?: pulumi.Input<inputs.network.FrontendIPConfigurationPropertiesFormat>;
        /**
         * A list of availability zones denoting the IP allocated for the resource needs to come from.
         */
        zones?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of Frontend IP Configuration of the load balancer.
     */
    export interface FrontendIPConfigurationPropertiesFormat {
        /**
         * The private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
         */
        privateIPAddressVersion?: pulumi.Input<string>;
        /**
         * The Private IP allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The reference to the Public IP resource.
         */
        publicIPAddress?: pulumi.Input<inputs.network.PublicIPAddress>;
        /**
         * The reference to the Public IP Prefix resource.
         */
        publicIPPrefix?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.Subnet>;
    }

    /**
     * Properties of Frontend IP Configuration of the load balancer.
     */
    export interface FrontendIPConfigurationPropertiesFormatResponse {
        /**
         * An array of references to inbound pools that use this frontend IP.
         */
        inboundNatPools: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * An array of references to inbound rules that use this frontend IP.
         */
        inboundNatRules: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * An array of references to load balancing rules that use this frontend IP.
         */
        loadBalancingRules: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * An array of references to outbound rules that use this frontend IP.
         */
        outboundRules: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
         */
        privateIPAddressVersion?: pulumi.Input<string>;
        /**
         * The Private IP allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The provisioning state of the frontend IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the Public IP resource.
         */
        publicIPAddress?: pulumi.Input<inputs.network.PublicIPAddressResponse>;
        /**
         * The reference to the Public IP Prefix resource.
         */
        publicIPPrefix?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubnetResponse>;
    }

    /**
     * Frontend IP address of the load balancer.
     */
    export interface FrontendIPConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the load balancer probe.
         */
        properties?: pulumi.Input<inputs.network.FrontendIPConfigurationPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
        /**
         * A list of availability zones denoting the IP allocated for the resource needs to come from.
         */
        zones?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The HTTP header.
     */
    export interface HTTPHeader {
        /**
         * The name in HTTP header.
         */
        name?: pulumi.Input<string>;
        /**
         * The value in HTTP header.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * The HTTP header.
     */
    export interface HTTPHeaderResponse {
        /**
         * The name in HTTP header.
         */
        name?: pulumi.Input<string>;
        /**
         * The value in HTTP header.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * An action that can manipulate an http header.
     */
    export interface HeaderAction {
        /**
         * Which type of manipulation to apply to the header.
         */
        headerActionType: pulumi.Input<string>;
        /**
         * The name of the header this action will apply to.
         */
        headerName: pulumi.Input<string>;
        /**
         * The value to update the given header name with. This value is not used if the actionType is Delete.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * An action that can manipulate an http header.
     */
    export interface HeaderActionResponse {
        /**
         * Which type of manipulation to apply to the header.
         */
        headerActionType: pulumi.Input<string>;
        /**
         * The name of the header this action will apply to.
         */
        headerName: pulumi.Input<string>;
        /**
         * The value to update the given header name with. This value is not used if the actionType is Delete.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Load balancing settings for a backend pool
     */
    export interface HealthProbeSettingsModel {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the health probe settings
         */
        properties?: pulumi.Input<inputs.network.HealthProbeSettingsProperties>;
    }

    /**
     * Load balancing settings for a backend pool
     */
    export interface HealthProbeSettingsModelResponse {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the health probe settings
         */
        properties?: pulumi.Input<inputs.network.HealthProbeSettingsPropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties required to create a health probe settings.
     */
    export interface HealthProbeSettingsProperties {
        /**
         * Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
         */
        enabledState?: pulumi.Input<string>;
        /**
         * Configures which HTTP method to use to probe the backends defined under backendPools.
         */
        healthProbeMethod?: pulumi.Input<string>;
        /**
         * The number of seconds between health probes.
         */
        intervalInSeconds?: pulumi.Input<number>;
        /**
         * The path to use for the health probe. Default is /
         */
        path?: pulumi.Input<string>;
        /**
         * Protocol scheme to use for this probe
         */
        protocol?: pulumi.Input<string>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties required to create a health probe settings.
     */
    export interface HealthProbeSettingsPropertiesResponse {
        /**
         * Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
         */
        enabledState?: pulumi.Input<string>;
        /**
         * Configures which HTTP method to use to probe the backends defined under backendPools.
         */
        healthProbeMethod?: pulumi.Input<string>;
        /**
         * The number of seconds between health probes.
         */
        intervalInSeconds?: pulumi.Input<number>;
        /**
         * The path to use for the health probe. Default is /
         */
        path?: pulumi.Input<string>;
        /**
         * Protocol scheme to use for this probe
         */
        protocol?: pulumi.Input<string>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
    }

    /**
     * IP addresses associated with azure firewall.
     */
    export interface HubIPAddresses {
        /**
         * Private IP Address associated with azure firewall.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * Public IP addresses associated with azure firewall.
         */
        publicIPs?: pulumi.Input<inputs.network.HubPublicIPAddresses>;
    }

    /**
     * IP addresses associated with azure firewall.
     */
    export interface HubIPAddressesResponse {
        /**
         * Private IP Address associated with azure firewall.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * Public IP addresses associated with azure firewall.
         */
        publicIPs?: pulumi.Input<inputs.network.HubPublicIPAddressesResponse>;
    }

    /**
     * Properties of IP configuration.
     */
    export interface HubIPConfigurationPropertiesFormat {
        /**
         * The private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The reference to the public IP resource.
         */
        publicIPAddress?: pulumi.Input<inputs.network.PublicIPAddress>;
        /**
         * The reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.Subnet>;
    }

    /**
     * Properties of IP configuration.
     */
    export interface HubIPConfigurationPropertiesFormatResponse {
        /**
         * The private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The provisioning state of the IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the public IP resource.
         */
        publicIPAddress?: pulumi.Input<inputs.network.PublicIPAddressResponse>;
        /**
         * The reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubnetResponse>;
    }

    /**
     * Public IP addresses associated with azure firewall.
     */
    export interface HubPublicIPAddresses {
        /**
         * The number of Public IP addresses associated with azure firewall.
         */
        addresses?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallPublicIPAddress>[]>;
        /**
         * Private IP Address associated with azure firewall.
         */
        count?: pulumi.Input<number>;
    }

    /**
     * Public IP addresses associated with azure firewall.
     */
    export interface HubPublicIPAddressesResponse {
        /**
         * The number of Public IP addresses associated with azure firewall.
         */
        addresses?: pulumi.Input<pulumi.Input<inputs.network.AzureFirewallPublicIPAddressResponse>[]>;
        /**
         * Private IP Address associated with azure firewall.
         */
        count?: pulumi.Input<number>;
    }

    /**
     * RouteTable route.
     */
    export interface HubRoute {
        /**
         * The type of destinations (eg: CIDR, ResourceId, Service).
         */
        destinationType: pulumi.Input<string>;
        /**
         * List of all destinations.
         */
        destinations: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the Route that is unique within a RouteTable. This name can be used to access this route.
         */
        name: pulumi.Input<string>;
        /**
         * NextHop resource ID.
         */
        nextHop: pulumi.Input<string>;
        /**
         * The type of next hop (eg: ResourceId).
         */
        nextHopType: pulumi.Input<string>;
    }

    /**
     * RouteTable route.
     */
    export interface HubRouteResponse {
        /**
         * The type of destinations (eg: CIDR, ResourceId, Service).
         */
        destinationType: pulumi.Input<string>;
        /**
         * List of all destinations.
         */
        destinations: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the Route that is unique within a RouteTable. This name can be used to access this route.
         */
        name: pulumi.Input<string>;
        /**
         * NextHop resource ID.
         */
        nextHop: pulumi.Input<string>;
        /**
         * The type of next hop (eg: ResourceId).
         */
        nextHopType: pulumi.Input<string>;
    }

    /**
     * Parameters for RouteTable.
     */
    export interface HubRouteTableProperties {
        /**
         * List of labels associated with this route table.
         */
        labels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of all routes.
         */
        routes?: pulumi.Input<pulumi.Input<inputs.network.HubRoute>[]>;
    }

    /**
     * Parameters for RouteTable.
     */
    export interface HubRouteTablePropertiesResponse {
        /**
         * List of all connections associated with this route table.
         */
        associatedConnections: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of labels associated with this route table.
         */
        labels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of all connections that advertise to this route table.
         */
        propagatingConnections: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the RouteTable resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * List of all routes.
         */
        routes?: pulumi.Input<pulumi.Input<inputs.network.HubRouteResponse>[]>;
    }

    /**
     * Parameters for HubVirtualNetworkConnection.
     */
    export interface HubVirtualNetworkConnectionProperties {
        /**
         * Deprecated: VirtualHub to RemoteVnet transit to enabled or not.
         */
        allowHubToRemoteVnetTransit?: pulumi.Input<boolean>;
        /**
         * Deprecated: Allow RemoteVnet to use Virtual Hub's gateways.
         */
        allowRemoteVnetToUseHubVnetGateways?: pulumi.Input<boolean>;
        /**
         * Enable internet security.
         */
        enableInternetSecurity?: pulumi.Input<boolean>;
        /**
         * Reference to the remote virtual network.
         */
        remoteVirtualNetwork?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The Routing Configuration indicating the associated and propagated route tables on this connection.
         */
        routingConfiguration?: pulumi.Input<inputs.network.RoutingConfiguration>;
    }

    /**
     * Parameters for HubVirtualNetworkConnection.
     */
    export interface HubVirtualNetworkConnectionPropertiesResponse {
        /**
         * Deprecated: VirtualHub to RemoteVnet transit to enabled or not.
         */
        allowHubToRemoteVnetTransit?: pulumi.Input<boolean>;
        /**
         * Deprecated: Allow RemoteVnet to use Virtual Hub's gateways.
         */
        allowRemoteVnetToUseHubVnetGateways?: pulumi.Input<boolean>;
        /**
         * Enable internet security.
         */
        enableInternetSecurity?: pulumi.Input<boolean>;
        /**
         * The provisioning state of the hub virtual network connection resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Reference to the remote virtual network.
         */
        remoteVirtualNetwork?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The Routing Configuration indicating the associated and propagated route tables on this connection.
         */
        routingConfiguration?: pulumi.Input<inputs.network.RoutingConfigurationResponse>;
    }

    /**
     * Properties of IPConfigurationBgpPeeringAddress.
     */
    export interface IPConfigurationBgpPeeringAddress {
        /**
         * The list of custom BGP peering addresses which belong to IP configuration.
         */
        customBgpIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of IP configuration which belongs to gateway.
         */
        ipconfigurationId?: pulumi.Input<string>;
    }

    /**
     * Properties of IPConfigurationBgpPeeringAddress.
     */
    export interface IPConfigurationBgpPeeringAddressResponse {
        /**
         * The list of custom BGP peering addresses which belong to IP configuration.
         */
        customBgpIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The list of default BGP peering addresses which belong to IP configuration.
         */
        defaultBgpIpAddresses: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of IP configuration which belongs to gateway.
         */
        ipconfigurationId?: pulumi.Input<string>;
        /**
         * The list of tunnel public IP addresses which belong to IP configuration.
         */
        tunnelIpAddresses: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * IP configuration profile child resource.
     */
    export interface IPConfigurationProfile {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the IP configuration profile.
         */
        properties?: pulumi.Input<inputs.network.IPConfigurationProfilePropertiesFormat>;
    }

    /**
     * IP configuration profile properties.
     */
    export interface IPConfigurationProfilePropertiesFormat {
        /**
         * The reference to the subnet resource to create a container network interface ip configuration.
         */
        subnet?: pulumi.Input<inputs.network.Subnet>;
    }

    /**
     * IP configuration profile properties.
     */
    export interface IPConfigurationProfilePropertiesFormatResponse {
        /**
         * The provisioning state of the IP configuration profile resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the subnet resource to create a container network interface ip configuration.
         */
        subnet?: pulumi.Input<inputs.network.SubnetResponse>;
    }

    /**
     * IP configuration profile child resource.
     */
    export interface IPConfigurationProfileResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the IP configuration profile.
         */
        properties?: pulumi.Input<inputs.network.IPConfigurationProfilePropertiesFormatResponse>;
        /**
         * Sub Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of IP configuration.
     */
    export interface IPConfigurationPropertiesFormatResponse {
        /**
         * The private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The provisioning state of the IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the public IP resource.
         */
        publicIPAddress?: pulumi.Input<inputs.network.PublicIPAddressResponse>;
        /**
         * The reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubnetResponse>;
    }

    /**
     * IP configuration.
     */
    export interface IPConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the IP configuration.
         */
        properties?: pulumi.Input<inputs.network.IPConfigurationPropertiesFormatResponse>;
    }

    /**
     * Inbound NAT pool of the load balancer.
     */
    export interface InboundNatPool {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer inbound nat pool.
         */
        properties?: pulumi.Input<inputs.network.InboundNatPoolPropertiesFormat>;
    }

    /**
     * Properties of Inbound NAT pool.
     */
    export interface InboundNatPoolPropertiesFormat {
        /**
         * The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
         */
        backendPort: pulumi.Input<number>;
        /**
         * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
         */
        enableFloatingIP?: pulumi.Input<boolean>;
        /**
         * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
         */
        enableTcpReset?: pulumi.Input<boolean>;
        /**
         * A reference to frontend IP addresses.
         */
        frontendIPConfiguration?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
         */
        frontendPortRangeEnd: pulumi.Input<number>;
        /**
         * The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
         */
        frontendPortRangeStart: pulumi.Input<number>;
        /**
         * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The reference to the transport protocol used by the inbound NAT pool.
         */
        protocol: pulumi.Input<string>;
    }

    /**
     * Properties of Inbound NAT pool.
     */
    export interface InboundNatPoolPropertiesFormatResponse {
        /**
         * The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
         */
        backendPort: pulumi.Input<number>;
        /**
         * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
         */
        enableFloatingIP?: pulumi.Input<boolean>;
        /**
         * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
         */
        enableTcpReset?: pulumi.Input<boolean>;
        /**
         * A reference to frontend IP addresses.
         */
        frontendIPConfiguration?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
         */
        frontendPortRangeEnd: pulumi.Input<number>;
        /**
         * The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
         */
        frontendPortRangeStart: pulumi.Input<number>;
        /**
         * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The reference to the transport protocol used by the inbound NAT pool.
         */
        protocol: pulumi.Input<string>;
        /**
         * The provisioning state of the inbound NAT pool resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Inbound NAT pool of the load balancer.
     */
    export interface InboundNatPoolResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer inbound nat pool.
         */
        properties?: pulumi.Input<inputs.network.InboundNatPoolPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Inbound NAT rule of the load balancer.
     */
    export interface InboundNatRule {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer inbound nat rule.
         */
        properties?: pulumi.Input<inputs.network.InboundNatRulePropertiesFormat>;
    }

    /**
     * Properties of the inbound NAT rule.
     */
    export interface InboundNatRulePropertiesFormat {
        /**
         * The port used for the internal endpoint. Acceptable values range from 1 to 65535.
         */
        backendPort?: pulumi.Input<number>;
        /**
         * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
         */
        enableFloatingIP?: pulumi.Input<boolean>;
        /**
         * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
         */
        enableTcpReset?: pulumi.Input<boolean>;
        /**
         * A reference to frontend IP addresses.
         */
        frontendIPConfiguration?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
         */
        frontendPort?: pulumi.Input<number>;
        /**
         * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The reference to the transport protocol used by the load balancing rule.
         */
        protocol?: pulumi.Input<string>;
    }

    /**
     * Properties of the inbound NAT rule.
     */
    export interface InboundNatRulePropertiesFormatResponse {
        /**
         * A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
         */
        backendIPConfiguration: pulumi.Input<inputs.network.NetworkInterfaceIPConfigurationResponse>;
        /**
         * The port used for the internal endpoint. Acceptable values range from 1 to 65535.
         */
        backendPort?: pulumi.Input<number>;
        /**
         * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
         */
        enableFloatingIP?: pulumi.Input<boolean>;
        /**
         * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
         */
        enableTcpReset?: pulumi.Input<boolean>;
        /**
         * A reference to frontend IP addresses.
         */
        frontendIPConfiguration?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
         */
        frontendPort?: pulumi.Input<number>;
        /**
         * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The reference to the transport protocol used by the load balancing rule.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The provisioning state of the inbound NAT rule resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Inbound NAT rule of the load balancer.
     */
    export interface InboundNatRuleResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer inbound nat rule.
         */
        properties?: pulumi.Input<inputs.network.InboundNatRulePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of the interface endpoint.
     */
    export interface InterfaceEndpointProperties {
        /**
         * A reference to the service being brought into the virtual network.
         */
        endpointService?: pulumi.Input<inputs.network.EndpointService>;
        /**
         * A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The ID of the subnet from which the private IP will be allocated.
         */
        subnet?: pulumi.Input<inputs.network.Subnet>;
    }

    /**
     * Properties of the interface endpoint.
     */
    export interface InterfaceEndpointPropertiesResponse {
        /**
         * A reference to the service being brought into the virtual network.
         */
        endpointService?: pulumi.Input<inputs.network.EndpointServiceResponse>;
        /**
         * A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * Gets an array of references to the network interfaces created for this interface endpoint.
         */
        networkInterfaces: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceResponse>[]>;
        /**
         * A read-only property that identifies who created this interface endpoint.
         */
        owner: pulumi.Input<string>;
        /**
         * The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The ID of the subnet from which the private IP will be allocated.
         */
        subnet?: pulumi.Input<inputs.network.SubnetResponse>;
    }

    /**
     * Properties of the IpAllocation.
     */
    export interface IpAllocationPropertiesFormat {
        /**
         * IpAllocation tags.
         */
        allocationTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The IPAM allocation ID.
         */
        ipamAllocationId?: pulumi.Input<string>;
        /**
         * The address prefix for the IpAllocation.
         */
        prefix?: pulumi.Input<string>;
        /**
         * The address prefix length for the IpAllocation.
         */
        prefixLength?: pulumi.Input<number>;
        /**
         * The address prefix Type for the IpAllocation.
         */
        prefixType?: pulumi.Input<string>;
        /**
         * The type for the IpAllocation.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Properties of the IpAllocation.
     */
    export interface IpAllocationPropertiesFormatResponse {
        /**
         * IpAllocation tags.
         */
        allocationTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The IPAM allocation ID.
         */
        ipamAllocationId?: pulumi.Input<string>;
        /**
         * The address prefix for the IpAllocation.
         */
        prefix?: pulumi.Input<string>;
        /**
         * The address prefix length for the IpAllocation.
         */
        prefixLength?: pulumi.Input<number>;
        /**
         * The address prefix Type for the IpAllocation.
         */
        prefixType?: pulumi.Input<string>;
        /**
         * The Subnet that using the prefix of this IpAllocation resource.
         */
        subnet: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The type for the IpAllocation.
         */
        type?: pulumi.Input<string>;
        /**
         * The VirtualNetwork that using the prefix of this IpAllocation resource.
         */
        virtualNetwork: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * The IpGroups property information.
     */
    export interface IpGroupPropertiesFormat {
        /**
         * IpAddresses/IpAddressPrefixes in the IpGroups resource.
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The IpGroups property information.
     */
    export interface IpGroupPropertiesFormatResponse {
        /**
         * List of references to Azure resources that this IpGroups is associated with.
         */
        firewalls: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * IpAddresses/IpAddressPrefixes in the IpGroups resource.
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the IpGroups resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * List of IpGroups associated with azure firewall.
     */
    export interface IpGroupsResponse {
    }

    /**
     * Contains the IpTag associated with the object.
     */
    export interface IpTag {
        /**
         * The IP tag type. Example: FirstPartyUsage.
         */
        ipTagType?: pulumi.Input<string>;
        /**
         * The value of the IP tag associated with the public IP. Example: SQL.
         */
        tag?: pulumi.Input<string>;
    }

    /**
     * Contains the IpTag associated with the object.
     */
    export interface IpTagResponse {
        /**
         * The IP tag type. Example: FirstPartyUsage.
         */
        ipTagType?: pulumi.Input<string>;
        /**
         * The value of the IP tag associated with the public IP. Example: SQL.
         */
        tag?: pulumi.Input<string>;
    }

    /**
     * An IPSec Policy configuration for a virtual network gateway connection.
     */
    export interface IpsecPolicy {
        /**
         * The DH Group used in IKE Phase 1 for initial SA.
         */
        dhGroup: pulumi.Input<string>;
        /**
         * The IKE encryption algorithm (IKE phase 2).
         */
        ikeEncryption: pulumi.Input<string>;
        /**
         * The IKE integrity algorithm (IKE phase 2).
         */
        ikeIntegrity: pulumi.Input<string>;
        /**
         * The IPSec encryption algorithm (IKE phase 1).
         */
        ipsecEncryption: pulumi.Input<string>;
        /**
         * The IPSec integrity algorithm (IKE phase 1).
         */
        ipsecIntegrity: pulumi.Input<string>;
        /**
         * The Pfs Group used in IKE Phase 2 for new child SA.
         */
        pfsGroup: pulumi.Input<string>;
        /**
         * The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
         */
        saDataSizeKilobytes: pulumi.Input<number>;
        /**
         * The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
         */
        saLifeTimeSeconds: pulumi.Input<number>;
    }

    /**
     * An IPSec Policy configuration for a virtual network gateway connection.
     */
    export interface IpsecPolicyResponse {
        /**
         * The DH Group used in IKE Phase 1 for initial SA.
         */
        dhGroup: pulumi.Input<string>;
        /**
         * The IKE encryption algorithm (IKE phase 2).
         */
        ikeEncryption: pulumi.Input<string>;
        /**
         * The IKE integrity algorithm (IKE phase 2).
         */
        ikeIntegrity: pulumi.Input<string>;
        /**
         * The IPSec encryption algorithm (IKE phase 1).
         */
        ipsecEncryption: pulumi.Input<string>;
        /**
         * The IPSec integrity algorithm (IKE phase 1).
         */
        ipsecIntegrity: pulumi.Input<string>;
        /**
         * The Pfs Group used in IKE Phase 2 for new child SA.
         */
        pfsGroup: pulumi.Input<string>;
        /**
         * The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
         */
        saDataSizeKilobytes: pulumi.Input<number>;
        /**
         * The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
         */
        saLifeTimeSeconds: pulumi.Input<number>;
    }

    /**
     * IPv6 Circuit Connection properties for global reach.
     */
    export interface Ipv6CircuitConnectionConfig {
        /**
         * /125 IP address space to carve out customer addresses for global reach.
         */
        addressPrefix?: pulumi.Input<string>;
    }

    /**
     * IPv6 Circuit Connection properties for global reach.
     */
    export interface Ipv6CircuitConnectionConfigResponse {
        /**
         * /125 IP address space to carve out customer addresses for global reach.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * Express Route Circuit connection state.
         */
        circuitConnectionStatus: pulumi.Input<string>;
    }

    /**
     * Contains IPv6 peering config.
     */
    export interface Ipv6ExpressRouteCircuitPeeringConfig {
        /**
         * The Microsoft peering configuration.
         */
        microsoftPeeringConfig?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringConfig>;
        /**
         * The primary address prefix.
         */
        primaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The reference to the RouteFilter resource.
         */
        routeFilter?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The secondary address prefix.
         */
        secondaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The state of peering.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * Contains IPv6 peering config.
     */
    export interface Ipv6ExpressRouteCircuitPeeringConfigResponse {
        /**
         * The Microsoft peering configuration.
         */
        microsoftPeeringConfig?: pulumi.Input<inputs.network.ExpressRouteCircuitPeeringConfigResponse>;
        /**
         * The primary address prefix.
         */
        primaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The reference to the RouteFilter resource.
         */
        routeFilter?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The secondary address prefix.
         */
        secondaryPeerAddressPrefix?: pulumi.Input<string>;
        /**
         * The state of peering.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * Parameters required for bring-your-own-certification via Key Vault
     */
    export interface KeyVaultCertificateSourceParametersResponse {
        /**
         * The name of the Key Vault secret representing the full certificate PFX
         */
        secretName?: pulumi.Input<string>;
        /**
         * The version of the Key Vault secret representing the full certificate PFX
         */
        secretVersion?: pulumi.Input<string>;
        /**
         * The Key Vault containing the SSL certificate
         */
        vault?: pulumi.Input<inputs.network.KeyVaultCertificateSourceParametersResponseProperties>;
    }

    /**
     * The Key Vault containing the SSL certificate
     */
    export interface KeyVaultCertificateSourceParametersResponseProperties {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Load balancer backend addresses.
     */
    export interface LoadBalancerBackendAddress {
        /**
         * Name of the backend address.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer backend address pool.
         */
        properties?: pulumi.Input<inputs.network.LoadBalancerBackendAddressPropertiesFormat>;
    }

    /**
     * Properties of the load balancer backend addresses.
     */
    export interface LoadBalancerBackendAddressPropertiesFormat {
        /**
         * IP Address belonging to the referenced virtual network.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * Reference to an existing virtual network.
         */
        virtualNetwork?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of the load balancer backend addresses.
     */
    export interface LoadBalancerBackendAddressPropertiesFormatResponse {
        /**
         * IP Address belonging to the referenced virtual network.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * Reference to IP address defined in network interfaces.
         */
        networkInterfaceIPConfiguration: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Reference to an existing virtual network.
         */
        virtualNetwork?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * Load balancer backend addresses.
     */
    export interface LoadBalancerBackendAddressResponse {
        /**
         * Name of the backend address.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer backend address pool.
         */
        properties?: pulumi.Input<inputs.network.LoadBalancerBackendAddressPropertiesFormatResponse>;
    }

    /**
     * Properties of the load balancer.
     */
    export interface LoadBalancerPropertiesFormat {
        /**
         * Collection of backend address pools used by a load balancer.
         */
        backendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.BackendAddressPool>[]>;
        /**
         * Object representing the frontend IPs to be used for the load balancer.
         */
        frontendIPConfigurations?: pulumi.Input<pulumi.Input<inputs.network.FrontendIPConfiguration>[]>;
        /**
         * Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
         */
        inboundNatPools?: pulumi.Input<pulumi.Input<inputs.network.InboundNatPool>[]>;
        /**
         * Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
         */
        inboundNatRules?: pulumi.Input<pulumi.Input<inputs.network.InboundNatRule>[]>;
        /**
         * Object collection representing the load balancing rules Gets the provisioning.
         */
        loadBalancingRules?: pulumi.Input<pulumi.Input<inputs.network.LoadBalancingRule>[]>;
        /**
         * The outbound rules.
         */
        outboundRules?: pulumi.Input<pulumi.Input<inputs.network.OutboundRule>[]>;
        /**
         * Collection of probe objects used in the load balancer.
         */
        probes?: pulumi.Input<pulumi.Input<inputs.network.Probe>[]>;
    }

    /**
     * Properties of the load balancer.
     */
    export interface LoadBalancerPropertiesFormatResponse {
        /**
         * Collection of backend address pools used by a load balancer.
         */
        backendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.BackendAddressPoolResponse>[]>;
        /**
         * Object representing the frontend IPs to be used for the load balancer.
         */
        frontendIPConfigurations?: pulumi.Input<pulumi.Input<inputs.network.FrontendIPConfigurationResponse>[]>;
        /**
         * Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
         */
        inboundNatPools?: pulumi.Input<pulumi.Input<inputs.network.InboundNatPoolResponse>[]>;
        /**
         * Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
         */
        inboundNatRules?: pulumi.Input<pulumi.Input<inputs.network.InboundNatRuleResponse>[]>;
        /**
         * Object collection representing the load balancing rules Gets the provisioning.
         */
        loadBalancingRules?: pulumi.Input<pulumi.Input<inputs.network.LoadBalancingRuleResponse>[]>;
        /**
         * The outbound rules.
         */
        outboundRules?: pulumi.Input<pulumi.Input<inputs.network.OutboundRuleResponse>[]>;
        /**
         * Collection of probe objects used in the load balancer.
         */
        probes?: pulumi.Input<pulumi.Input<inputs.network.ProbeResponse>[]>;
        /**
         * The provisioning state of the load balancer resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the load balancer resource.
         */
        resourceGuid: pulumi.Input<string>;
    }

    /**
     * SKU of a load balancer.
     */
    export interface LoadBalancerSku {
        /**
         * Name of a load balancer SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * SKU of a load balancer.
     */
    export interface LoadBalancerSkuResponse {
        /**
         * Name of a load balancer SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * A load balancing rule for a load balancer.
     */
    export interface LoadBalancingRule {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer load balancing rule.
         */
        properties?: pulumi.Input<inputs.network.LoadBalancingRulePropertiesFormat>;
    }

    /**
     * Properties of the load balancer.
     */
    export interface LoadBalancingRulePropertiesFormat {
        /**
         * A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
         */
        backendAddressPool?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
         */
        backendPort?: pulumi.Input<number>;
        /**
         * Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
         */
        disableOutboundSnat?: pulumi.Input<boolean>;
        /**
         * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
         */
        enableFloatingIP?: pulumi.Input<boolean>;
        /**
         * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
         */
        enableTcpReset?: pulumi.Input<boolean>;
        /**
         * A reference to frontend IP addresses.
         */
        frontendIPConfiguration?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
         */
        frontendPort: pulumi.Input<number>;
        /**
         * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The load distribution policy for this rule.
         */
        loadDistribution?: pulumi.Input<string>;
        /**
         * The reference to the load balancer probe used by the load balancing rule.
         */
        probe?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The reference to the transport protocol used by the load balancing rule.
         */
        protocol: pulumi.Input<string>;
    }

    /**
     * Properties of the load balancer.
     */
    export interface LoadBalancingRulePropertiesFormatResponse {
        /**
         * A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
         */
        backendAddressPool?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
         */
        backendPort?: pulumi.Input<number>;
        /**
         * Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
         */
        disableOutboundSnat?: pulumi.Input<boolean>;
        /**
         * Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
         */
        enableFloatingIP?: pulumi.Input<boolean>;
        /**
         * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
         */
        enableTcpReset?: pulumi.Input<boolean>;
        /**
         * A reference to frontend IP addresses.
         */
        frontendIPConfiguration?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
         */
        frontendPort: pulumi.Input<number>;
        /**
         * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The load distribution policy for this rule.
         */
        loadDistribution?: pulumi.Input<string>;
        /**
         * The reference to the load balancer probe used by the load balancing rule.
         */
        probe?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The reference to the transport protocol used by the load balancing rule.
         */
        protocol: pulumi.Input<string>;
        /**
         * The provisioning state of the load balancing rule resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * A load balancing rule for a load balancer.
     */
    export interface LoadBalancingRuleResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer load balancing rule.
         */
        properties?: pulumi.Input<inputs.network.LoadBalancingRulePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Load balancing settings for a backend pool
     */
    export interface LoadBalancingSettingsModel {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the load balancing settings
         */
        properties?: pulumi.Input<inputs.network.LoadBalancingSettingsProperties>;
    }

    /**
     * Load balancing settings for a backend pool
     */
    export interface LoadBalancingSettingsModelResponse {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the load balancing settings
         */
        properties?: pulumi.Input<inputs.network.LoadBalancingSettingsPropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The JSON object that contains the properties required to create load balancing settings
     */
    export interface LoadBalancingSettingsProperties {
        /**
         * The additional latency in milliseconds for probes to fall into the lowest latency bucket
         */
        additionalLatencyMilliseconds?: pulumi.Input<number>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * The number of samples to consider for load balancing decisions
         */
        sampleSize?: pulumi.Input<number>;
        /**
         * The number of samples within the sample period that must succeed
         */
        successfulSamplesRequired?: pulumi.Input<number>;
    }

    /**
     * The JSON object that contains the properties required to create load balancing settings
     */
    export interface LoadBalancingSettingsPropertiesResponse {
        /**
         * The additional latency in milliseconds for probes to fall into the lowest latency bucket
         */
        additionalLatencyMilliseconds?: pulumi.Input<number>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * The number of samples to consider for load balancing decisions
         */
        sampleSize?: pulumi.Input<number>;
        /**
         * The number of samples within the sample period that must succeed
         */
        successfulSamplesRequired?: pulumi.Input<number>;
    }

    /**
     * A common class for general resource information.
     */
    export interface LocalNetworkGateway {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the local network gateway.
         */
        properties: pulumi.Input<inputs.network.LocalNetworkGatewayPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * LocalNetworkGateway properties.
     */
    export interface LocalNetworkGatewayPropertiesFormat {
        /**
         * Local network gateway's BGP speaker settings.
         */
        bgpSettings?: pulumi.Input<inputs.network.BgpSettings>;
        /**
         * FQDN of local network gateway.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * IP address of local network gateway.
         */
        gatewayIpAddress?: pulumi.Input<string>;
        /**
         * Local network site address space.
         */
        localNetworkAddressSpace?: pulumi.Input<inputs.network.AddressSpace>;
    }

    /**
     * LocalNetworkGateway properties.
     */
    export interface LocalNetworkGatewayPropertiesFormatResponse {
        /**
         * Local network gateway's BGP speaker settings.
         */
        bgpSettings?: pulumi.Input<inputs.network.BgpSettingsResponse>;
        /**
         * FQDN of local network gateway.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * IP address of local network gateway.
         */
        gatewayIpAddress?: pulumi.Input<string>;
        /**
         * Local network site address space.
         */
        localNetworkAddressSpace?: pulumi.Input<inputs.network.AddressSpaceResponse>;
        /**
         * The provisioning state of the local network gateway resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the local network gateway resource.
         */
        resourceGuid: pulumi.Input<string>;
    }

    /**
     * A common class for general resource information.
     */
    export interface LocalNetworkGatewayResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the local network gateway.
         */
        properties: pulumi.Input<inputs.network.LocalNetworkGatewayPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Defines a managed rule group override setting.
     */
    export interface ManagedRuleGroupOverride {
        /**
         * The managed rule group to override.
         */
        ruleGroupName: pulumi.Input<string>;
        /**
         * List of rules that will be disabled. If none specified, all rules in the group will be disabled.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleOverride>[]>;
    }

    /**
     * Defines a managed rule group override setting.
     */
    export interface ManagedRuleGroupOverrideResponse {
        /**
         * The managed rule group to override.
         */
        ruleGroupName: pulumi.Input<string>;
        /**
         * List of rules that will be disabled. If none specified, all rules in the group will be disabled.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleOverrideResponse>[]>;
    }

    /**
     * Defines a managed rule group override setting.
     */
    export interface ManagedRuleOverride {
        /**
         * Identifier for the managed rule.
         */
        ruleId: pulumi.Input<string>;
        /**
         * The state of the managed rule. Defaults to Disabled if not specified.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * Defines a managed rule group override setting.
     */
    export interface ManagedRuleOverrideResponse {
        /**
         * Identifier for the managed rule.
         */
        ruleId: pulumi.Input<string>;
        /**
         * The state of the managed rule. Defaults to Disabled if not specified.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * Defines a managed rule set.
     */
    export interface ManagedRuleSet {
        /**
         * Defines the rule group overrides to apply to the rule set.
         */
        ruleGroupOverrides?: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleGroupOverride>[]>;
        /**
         * Defines the rule set type to use.
         */
        ruleSetType: pulumi.Input<string>;
        /**
         * Defines the version of the rule set to use.
         */
        ruleSetVersion: pulumi.Input<string>;
    }

    /**
     * Defines a managed rule set.
     */
    export interface ManagedRuleSetResponse {
        /**
         * Defines the rule group overrides to apply to the rule set.
         */
        ruleGroupOverrides?: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleGroupOverrideResponse>[]>;
        /**
         * Defines the rule set type to use.
         */
        ruleSetType: pulumi.Input<string>;
        /**
         * Defines the version of the rule set to use.
         */
        ruleSetVersion: pulumi.Input<string>;
    }

    /**
     * Allow to exclude some variable satisfy the condition for the WAF check.
     */
    export interface ManagedRulesDefinition {
        /**
         * The Exclusions that are applied on the policy.
         */
        exclusions?: pulumi.Input<pulumi.Input<inputs.network.OwaspCrsExclusionEntry>[]>;
        /**
         * The managed rule sets that are associated with the policy.
         */
        managedRuleSets: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleSet>[]>;
    }

    /**
     * Allow to exclude some variable satisfy the condition for the WAF check.
     */
    export interface ManagedRulesDefinitionResponse {
        /**
         * The Exclusions that are applied on the policy.
         */
        exclusions?: pulumi.Input<pulumi.Input<inputs.network.OwaspCrsExclusionEntryResponse>[]>;
        /**
         * The managed rule sets that are associated with the policy.
         */
        managedRuleSets: pulumi.Input<pulumi.Input<inputs.network.ManagedRuleSetResponse>[]>;
    }

    /**
     * Identity for the resource.
     */
    export interface ManagedServiceIdentity {
        /**
         * The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the resource.
     */
    export interface ManagedServiceIdentityResponse {
        /**
         * The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Define match conditions.
     */
    export interface MatchCondition {
        /**
         * Match value.
         */
        matchValues: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of match variables.
         */
        matchVariables: pulumi.Input<pulumi.Input<inputs.network.MatchVariable>[]>;
        /**
         * Whether this is negate condition or not.
         */
        negationConditon?: pulumi.Input<boolean>;
        /**
         * The operator to be matched.
         */
        operator: pulumi.Input<string>;
        /**
         * List of transforms.
         */
        transforms?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Define match conditions.
     */
    export interface MatchConditionResponse {
        /**
         * Match value.
         */
        matchValues: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of match variables.
         */
        matchVariables: pulumi.Input<pulumi.Input<inputs.network.MatchVariableResponse>[]>;
        /**
         * Whether this is negate condition or not.
         */
        negationConditon?: pulumi.Input<boolean>;
        /**
         * The operator to be matched.
         */
        operator: pulumi.Input<string>;
        /**
         * List of transforms.
         */
        transforms?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Define match variables.
     */
    export interface MatchVariable {
        /**
         * The selector of match variable.
         */
        selector?: pulumi.Input<string>;
        /**
         * Match Variable.
         */
        variableName: pulumi.Input<string>;
    }

    /**
     * Define match variables.
     */
    export interface MatchVariableResponse {
        /**
         * The selector of match variable.
         */
        selector?: pulumi.Input<string>;
        /**
         * Match Variable.
         */
        variableName: pulumi.Input<string>;
    }

    /**
     * Class containing endpoint monitoring settings in a Traffic Manager profile.
     */
    export interface MonitorConfig {
        /**
         * List of custom headers.
         */
        customHeaders?: pulumi.Input<pulumi.Input<inputs.network.MonitorConfigProperties>[]>;
        /**
         * List of expected status code ranges.
         */
        expectedStatusCodeRanges?: pulumi.Input<pulumi.Input<inputs.network.MonitorConfigProperties>[]>;
        /**
         * The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
         */
        intervalInSeconds?: pulumi.Input<number>;
        /**
         * The path relative to the endpoint domain name used to probe for endpoint health.
         */
        path?: pulumi.Input<string>;
        /**
         * The TCP port used to probe for endpoint health.
         */
        port?: pulumi.Input<number>;
        /**
         * The profile-level monitoring status of the Traffic Manager profile.
         */
        profileMonitorStatus?: pulumi.Input<string>;
        /**
         * The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
         */
        timeoutInSeconds?: pulumi.Input<number>;
        /**
         * The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
         */
        toleratedNumberOfFailures?: pulumi.Input<number>;
    }

    /**
     * Custom header name and value.
     */
    export interface MonitorConfigProperties {
        /**
         * Header name.
         */
        name?: pulumi.Input<string>;
        /**
         * Header value.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Class containing endpoint monitoring settings in a Traffic Manager profile.
     */
    export interface MonitorConfigResponse {
        /**
         * List of custom headers.
         */
        customHeaders?: pulumi.Input<pulumi.Input<inputs.network.MonitorConfigResponseProperties>[]>;
        /**
         * List of expected status code ranges.
         */
        expectedStatusCodeRanges?: pulumi.Input<pulumi.Input<inputs.network.MonitorConfigResponseProperties>[]>;
        /**
         * The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
         */
        intervalInSeconds?: pulumi.Input<number>;
        /**
         * The path relative to the endpoint domain name used to probe for endpoint health.
         */
        path?: pulumi.Input<string>;
        /**
         * The TCP port used to probe for endpoint health.
         */
        port?: pulumi.Input<number>;
        /**
         * The profile-level monitoring status of the Traffic Manager profile.
         */
        profileMonitorStatus?: pulumi.Input<string>;
        /**
         * The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
         */
        timeoutInSeconds?: pulumi.Input<number>;
        /**
         * The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
         */
        toleratedNumberOfFailures?: pulumi.Input<number>;
    }

    /**
     * Custom header name and value.
     */
    export interface MonitorConfigResponseProperties {
        /**
         * Header name.
         */
        name?: pulumi.Input<string>;
        /**
         * Header value.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Nat Gateway properties.
     */
    export interface NatGatewayPropertiesFormat {
        /**
         * The idle timeout of the nat gateway.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * An array of public ip addresses associated with the nat gateway resource.
         */
        publicIpAddresses?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * An array of public ip prefixes associated with the nat gateway resource.
         */
        publicIpPrefixes?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
    }

    /**
     * Nat Gateway properties.
     */
    export interface NatGatewayPropertiesFormatResponse {
        /**
         * The idle timeout of the nat gateway.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The provisioning state of the NAT gateway resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * An array of public ip addresses associated with the nat gateway resource.
         */
        publicIpAddresses?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * An array of public ip prefixes associated with the nat gateway resource.
         */
        publicIpPrefixes?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The resource GUID property of the NAT gateway resource.
         */
        resourceGuid: pulumi.Input<string>;
        /**
         * An array of references to the subnets using this nat gateway resource.
         */
        subnets: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
    }

    /**
     * SKU of nat gateway.
     */
    export interface NatGatewaySku {
        /**
         * Name of Nat Gateway SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * SKU of nat gateway.
     */
    export interface NatGatewaySkuResponse {
        /**
         * Name of Nat Gateway SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * DNS settings of a network interface.
     */
    export interface NetworkInterfaceDnsSettings {
        /**
         * List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
         */
        internalDnsNameLabel?: pulumi.Input<string>;
    }

    /**
     * DNS settings of a network interface.
     */
    export interface NetworkInterfaceDnsSettingsResponse {
        /**
         * If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
         */
        appliedDnsServers: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
         */
        internalDnsNameLabel?: pulumi.Input<string>;
        /**
         * Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
         */
        internalDomainNameSuffix: pulumi.Input<string>;
        /**
         * Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
         */
        internalFqdn: pulumi.Input<string>;
    }

    /**
     * IPConfiguration in a network interface.
     */
    export interface NetworkInterfaceIPConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Network interface IP configuration properties.
         */
        properties?: pulumi.Input<inputs.network.NetworkInterfaceIPConfigurationPropertiesFormat>;
    }

    /**
     * PrivateLinkConnection properties for the network interface.
     */
    export interface NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
        /**
         * List of FQDNs for current private link connection.
         */
        fqdns: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The group ID for current private link connection.
         */
        groupId: pulumi.Input<string>;
        /**
         * The required member name for current private link connection.
         */
        requiredMemberName: pulumi.Input<string>;
    }

    /**
     * Properties of IP configuration.
     */
    export interface NetworkInterfaceIPConfigurationPropertiesFormat {
        /**
         * The reference to ApplicationGatewayBackendAddressPool resource.
         */
        applicationGatewayBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendAddressPool>[]>;
        /**
         * Application security groups in which the IP configuration is included.
         */
        applicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationSecurityGroup>[]>;
        /**
         * The reference to LoadBalancerBackendAddressPool resource.
         */
        loadBalancerBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.BackendAddressPool>[]>;
        /**
         * A list of references of LoadBalancerInboundNatRules.
         */
        loadBalancerInboundNatRules?: pulumi.Input<pulumi.Input<inputs.network.InboundNatRule>[]>;
        /**
         * Whether this is a primary customer address on the network interface.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * Private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
         */
        privateIPAddressVersion?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * Public IP address bound to the IP configuration.
         */
        publicIPAddress?: pulumi.Input<inputs.network.PublicIPAddress>;
        /**
         * Subnet bound to the IP configuration.
         */
        subnet?: pulumi.Input<inputs.network.Subnet>;
        /**
         * The reference to Virtual Network Taps.
         */
        virtualNetworkTaps?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkTap>[]>;
    }

    /**
     * Properties of IP configuration.
     */
    export interface NetworkInterfaceIPConfigurationPropertiesFormatResponse {
        /**
         * The reference to ApplicationGatewayBackendAddressPool resource.
         */
        applicationGatewayBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendAddressPoolResponse>[]>;
        /**
         * Application security groups in which the IP configuration is included.
         */
        applicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationSecurityGroupResponse>[]>;
        /**
         * The reference to LoadBalancerBackendAddressPool resource.
         */
        loadBalancerBackendAddressPools?: pulumi.Input<pulumi.Input<inputs.network.BackendAddressPoolResponse>[]>;
        /**
         * A list of references of LoadBalancerInboundNatRules.
         */
        loadBalancerInboundNatRules?: pulumi.Input<pulumi.Input<inputs.network.InboundNatRuleResponse>[]>;
        /**
         * Whether this is a primary customer address on the network interface.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * Private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
         */
        privateIPAddressVersion?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * PrivateLinkConnection properties for the network interface.
         */
        privateLinkConnectionProperties: pulumi.Input<inputs.network.NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse>;
        /**
         * The provisioning state of the network interface IP configuration.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Public IP address bound to the IP configuration.
         */
        publicIPAddress?: pulumi.Input<inputs.network.PublicIPAddressResponse>;
        /**
         * Subnet bound to the IP configuration.
         */
        subnet?: pulumi.Input<inputs.network.SubnetResponse>;
        /**
         * The reference to Virtual Network Taps.
         */
        virtualNetworkTaps?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkTapResponse>[]>;
    }

    /**
     * IPConfiguration in a network interface.
     */
    export interface NetworkInterfaceIPConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Network interface IP configuration properties.
         */
        properties?: pulumi.Input<inputs.network.NetworkInterfaceIPConfigurationPropertiesFormatResponse>;
    }

    /**
     * NetworkInterface properties.
     */
    export interface NetworkInterfacePropertiesFormat {
        /**
         * The DNS settings in network interface.
         */
        dnsSettings?: pulumi.Input<inputs.network.NetworkInterfaceDnsSettings>;
        /**
         * If the network interface is accelerated networking enabled.
         */
        enableAcceleratedNetworking?: pulumi.Input<boolean>;
        /**
         * Indicates whether IP forwarding is enabled on this network interface.
         */
        enableIPForwarding?: pulumi.Input<boolean>;
        /**
         * A list of IPConfigurations of the network interface.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceIPConfiguration>[]>;
        /**
         * The reference to the NetworkSecurityGroup resource.
         */
        networkSecurityGroup?: pulumi.Input<inputs.network.NetworkSecurityGroup>;
    }

    /**
     * NetworkInterface properties.
     */
    export interface NetworkInterfacePropertiesFormatResponse {
        /**
         * The DNS settings in network interface.
         */
        dnsSettings?: pulumi.Input<inputs.network.NetworkInterfaceDnsSettingsResponse>;
        /**
         * If the network interface is accelerated networking enabled.
         */
        enableAcceleratedNetworking?: pulumi.Input<boolean>;
        /**
         * Indicates whether IP forwarding is enabled on this network interface.
         */
        enableIPForwarding?: pulumi.Input<boolean>;
        /**
         * A list of references to linked BareMetal resources.
         */
        hostedWorkloads: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of IPConfigurations of the network interface.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceIPConfigurationResponse>[]>;
        /**
         * The MAC address of the network interface.
         */
        macAddress: pulumi.Input<string>;
        /**
         * The reference to the NetworkSecurityGroup resource.
         */
        networkSecurityGroup?: pulumi.Input<inputs.network.NetworkSecurityGroupResponse>;
        /**
         * Whether this is a primary network interface on a virtual machine.
         */
        primary: pulumi.Input<boolean>;
        /**
         * A reference to the private endpoint to which the network interface is linked.
         */
        privateEndpoint: pulumi.Input<inputs.network.PrivateEndpointResponse>;
        /**
         * The provisioning state of the network interface resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the network interface resource.
         */
        resourceGuid: pulumi.Input<string>;
        /**
         * A list of TapConfigurations of the network interface.
         */
        tapConfigurations: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceTapConfigurationResponse>[]>;
        /**
         * The reference to a virtual machine.
         */
        virtualMachine: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * A network interface in a resource group.
     */
    export interface NetworkInterfaceResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the network interface.
         */
        properties?: pulumi.Input<inputs.network.NetworkInterfacePropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of Virtual Network Tap configuration.
     */
    export interface NetworkInterfaceTapConfigurationPropertiesFormat {
        /**
         * The reference to the Virtual Network Tap resource.
         */
        virtualNetworkTap?: pulumi.Input<inputs.network.VirtualNetworkTap>;
    }

    /**
     * Properties of Virtual Network Tap configuration.
     */
    export interface NetworkInterfaceTapConfigurationPropertiesFormatResponse {
        /**
         * The provisioning state of the network interface tap configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the Virtual Network Tap resource.
         */
        virtualNetworkTap?: pulumi.Input<inputs.network.VirtualNetworkTapResponse>;
    }

    /**
     * Tap configuration in a Network Interface.
     */
    export interface NetworkInterfaceTapConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the Virtual Network Tap configuration.
         */
        properties?: pulumi.Input<inputs.network.NetworkInterfaceTapConfigurationPropertiesFormatResponse>;
        /**
         * Sub Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Network profile properties.
     */
    export interface NetworkProfilePropertiesFormat {
        /**
         * List of chid container network interface configurations.
         */
        containerNetworkInterfaceConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ContainerNetworkInterfaceConfiguration>[]>;
    }

    /**
     * Network profile properties.
     */
    export interface NetworkProfilePropertiesFormatResponse {
        /**
         * List of chid container network interface configurations.
         */
        containerNetworkInterfaceConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ContainerNetworkInterfaceConfigurationResponse>[]>;
        /**
         * List of child container network interfaces.
         */
        containerNetworkInterfaces: pulumi.Input<pulumi.Input<inputs.network.ContainerNetworkInterfaceResponse>[]>;
        /**
         * The provisioning state of the network profile resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the network profile resource.
         */
        resourceGuid: pulumi.Input<string>;
    }

    /**
     * NetworkSecurityGroup resource.
     */
    export interface NetworkSecurityGroup {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Properties of the network security group.
         */
        properties?: pulumi.Input<inputs.network.NetworkSecurityGroupPropertiesFormat>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Network Security Group resource.
     */
    export interface NetworkSecurityGroupPropertiesFormat {
        /**
         * A collection of security rules of the network security group.
         */
        securityRules?: pulumi.Input<pulumi.Input<inputs.network.SecurityRule>[]>;
    }

    /**
     * Network Security Group resource.
     */
    export interface NetworkSecurityGroupPropertiesFormatResponse {
        /**
         * The default security rules of network security group.
         */
        defaultSecurityRules: pulumi.Input<pulumi.Input<inputs.network.SecurityRuleResponse>[]>;
        /**
         * A collection of references to flow log resources.
         */
        flowLogs: pulumi.Input<pulumi.Input<inputs.network.FlowLogResponse>[]>;
        /**
         * A collection of references to network interfaces.
         */
        networkInterfaces: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceResponse>[]>;
        /**
         * The provisioning state of the network security group resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the network security group resource.
         */
        resourceGuid: pulumi.Input<string>;
        /**
         * A collection of security rules of the network security group.
         */
        securityRules?: pulumi.Input<pulumi.Input<inputs.network.SecurityRuleResponse>[]>;
        /**
         * A collection of references to subnets.
         */
        subnets: pulumi.Input<pulumi.Input<inputs.network.SubnetResponse>[]>;
    }

    /**
     * NetworkSecurityGroup resource.
     */
    export interface NetworkSecurityGroupResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the network security group.
         */
        properties?: pulumi.Input<inputs.network.NetworkSecurityGroupPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Network Virtual Appliance definition.
     */
    export interface NetworkVirtualAppliancePropertiesFormat {
        /**
         * BootStrapConfigurationBlobs storage URLs.
         */
        bootStrapConfigurationBlobs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * CloudInitConfiguration string in plain text.
         */
        cloudInitConfiguration?: pulumi.Input<string>;
        /**
         * CloudInitConfigurationBlob storage URLs.
         */
        cloudInitConfigurationBlobs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Network Virtual Appliance SKU.
         */
        nvaSku?: pulumi.Input<inputs.network.VirtualApplianceSkuProperties>;
        /**
         * VirtualAppliance ASN.
         */
        virtualApplianceAsn?: pulumi.Input<number>;
        /**
         * The Virtual Hub where Network Virtual Appliance is being deployed.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Network Virtual Appliance definition.
     */
    export interface NetworkVirtualAppliancePropertiesFormatResponse {
        /**
         * BootStrapConfigurationBlobs storage URLs.
         */
        bootStrapConfigurationBlobs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * CloudInitConfiguration string in plain text.
         */
        cloudInitConfiguration?: pulumi.Input<string>;
        /**
         * CloudInitConfigurationBlob storage URLs.
         */
        cloudInitConfigurationBlobs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Network Virtual Appliance SKU.
         */
        nvaSku?: pulumi.Input<inputs.network.VirtualApplianceSkuPropertiesResponse>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * VirtualAppliance ASN.
         */
        virtualApplianceAsn?: pulumi.Input<number>;
        /**
         * List of Virtual Appliance Network Interfaces.
         */
        virtualApplianceNics: pulumi.Input<pulumi.Input<inputs.network.VirtualApplianceNicPropertiesResponse>[]>;
        /**
         * List of references to VirtualApplianceSite.
         */
        virtualApplianceSites: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The Virtual Hub where Network Virtual Appliance is being deployed.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * The network watcher properties.
     */
    export interface NetworkWatcherPropertiesFormat {
    }

    /**
     * The network watcher properties.
     */
    export interface NetworkWatcherPropertiesFormatResponse {
        /**
         * The provisioning state of the network watcher resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Network Virtual Appliance Sku Properties.
     */
    export interface Office365PolicyProperties {
        /**
         * Office 365 breakout categories.
         */
        breakOutCategories?: pulumi.Input<inputs.network.BreakOutCategoryPolicies>;
    }

    /**
     * Network Virtual Appliance Sku Properties.
     */
    export interface Office365PolicyPropertiesResponse {
        /**
         * Office 365 breakout categories.
         */
        breakOutCategories?: pulumi.Input<inputs.network.BreakOutCategoryPoliciesResponse>;
    }

    /**
     * Outbound rule of the load balancer.
     */
    export interface OutboundRule {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer outbound rule.
         */
        properties?: pulumi.Input<inputs.network.OutboundRulePropertiesFormat>;
    }

    /**
     * Outbound rule of the load balancer.
     */
    export interface OutboundRulePropertiesFormat {
        /**
         * The number of outbound ports to be used for NAT.
         */
        allocatedOutboundPorts?: pulumi.Input<number>;
        /**
         * A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
         */
        backendAddressPool: pulumi.Input<inputs.network.SubResource>;
        /**
         * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
         */
        enableTcpReset?: pulumi.Input<boolean>;
        /**
         * The Frontend IP addresses of the load balancer.
         */
        frontendIPConfigurations: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * The timeout for the TCP idle connection.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The protocol for the outbound rule in load balancer.
         */
        protocol: pulumi.Input<string>;
    }

    /**
     * Outbound rule of the load balancer.
     */
    export interface OutboundRulePropertiesFormatResponse {
        /**
         * The number of outbound ports to be used for NAT.
         */
        allocatedOutboundPorts?: pulumi.Input<number>;
        /**
         * A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
         */
        backendAddressPool: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
         */
        enableTcpReset?: pulumi.Input<boolean>;
        /**
         * The Frontend IP addresses of the load balancer.
         */
        frontendIPConfigurations: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The timeout for the TCP idle connection.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The protocol for the outbound rule in load balancer.
         */
        protocol: pulumi.Input<string>;
        /**
         * The provisioning state of the outbound rule resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Outbound rule of the load balancer.
     */
    export interface OutboundRuleResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer outbound rule.
         */
        properties?: pulumi.Input<inputs.network.OutboundRulePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Allow to exclude some variable satisfy the condition for the WAF check.
     */
    export interface OwaspCrsExclusionEntry {
        /**
         * The variable to be excluded.
         */
        matchVariable: pulumi.Input<string>;
        /**
         * When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
         */
        selector: pulumi.Input<string>;
        /**
         * When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
         */
        selectorMatchOperator: pulumi.Input<string>;
    }

    /**
     * Allow to exclude some variable satisfy the condition for the WAF check.
     */
    export interface OwaspCrsExclusionEntryResponse {
        /**
         * The variable to be excluded.
         */
        matchVariable: pulumi.Input<string>;
        /**
         * When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
         */
        selector: pulumi.Input<string>;
        /**
         * When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
         */
        selectorMatchOperator: pulumi.Input<string>;
    }

    /**
     * P2SConnectionConfiguration Resource.
     */
    export interface P2SConnectionConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the P2S connection configuration.
         */
        properties?: pulumi.Input<inputs.network.P2SConnectionConfigurationProperties>;
    }

    /**
     * Parameters for P2SConnectionConfiguration.
     */
    export interface P2SConnectionConfigurationProperties {
        /**
         * The Routing Configuration indicating the associated and propagated route tables on this connection.
         */
        routingConfiguration?: pulumi.Input<inputs.network.RoutingConfiguration>;
        /**
         * The reference to the address space resource which represents Address space for P2S VpnClient.
         */
        vpnClientAddressPool?: pulumi.Input<inputs.network.AddressSpace>;
    }

    /**
     * Parameters for P2SConnectionConfiguration.
     */
    export interface P2SConnectionConfigurationPropertiesResponse {
        /**
         * The provisioning state of the P2SConnectionConfiguration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The Routing Configuration indicating the associated and propagated route tables on this connection.
         */
        routingConfiguration?: pulumi.Input<inputs.network.RoutingConfigurationResponse>;
        /**
         * The reference to the address space resource which represents Address space for P2S VpnClient.
         */
        vpnClientAddressPool?: pulumi.Input<inputs.network.AddressSpaceResponse>;
    }

    /**
     * P2SConnectionConfiguration Resource.
     */
    export interface P2SConnectionConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the P2S connection configuration.
         */
        properties?: pulumi.Input<inputs.network.P2SConnectionConfigurationPropertiesResponse>;
    }

    /**
     * Parameters for P2SVpnGateway.
     */
    export interface P2SVpnGatewayProperties {
        /**
         * List of all customer specified DNS servers IP addresses.
         */
        customDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of all p2s connection configurations of the gateway.
         */
        p2SConnectionConfigurations?: pulumi.Input<pulumi.Input<inputs.network.P2SConnectionConfiguration>[]>;
        /**
         * The VirtualHub to which the gateway belongs.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The scale unit for this p2s vpn gateway.
         */
        vpnGatewayScaleUnit?: pulumi.Input<number>;
        /**
         * The VpnServerConfiguration to which the p2sVpnGateway is attached to.
         */
        vpnServerConfiguration?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Parameters for P2SVpnGateway.
     */
    export interface P2SVpnGatewayPropertiesResponse {
        /**
         * List of all customer specified DNS servers IP addresses.
         */
        customDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of all p2s connection configurations of the gateway.
         */
        p2SConnectionConfigurations?: pulumi.Input<pulumi.Input<inputs.network.P2SConnectionConfigurationResponse>[]>;
        /**
         * The provisioning state of the P2S VPN gateway resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The VirtualHub to which the gateway belongs.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * All P2S VPN clients' connection health status.
         */
        vpnClientConnectionHealth: pulumi.Input<inputs.network.VpnClientConnectionHealthResponse>;
        /**
         * The scale unit for this p2s vpn gateway.
         */
        vpnGatewayScaleUnit?: pulumi.Input<number>;
        /**
         * The VpnServerConfiguration to which the p2sVpnGateway is attached to.
         */
        vpnServerConfiguration?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * P2SVpnGateway Resource.
     */
    export interface P2SVpnGatewayResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the P2SVpnGateway.
         */
        properties?: pulumi.Input<inputs.network.P2SVpnGatewayPropertiesResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Filter that is applied to packet capture request. Multiple filters can be applied.
     */
    export interface PacketCaptureFilter {
        /**
         * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         */
        localIPAddress?: pulumi.Input<string>;
        /**
         * Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         */
        localPort?: pulumi.Input<string>;
        /**
         * Protocol to be filtered on.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         */
        remoteIPAddress?: pulumi.Input<string>;
        /**
         * Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         */
        remotePort?: pulumi.Input<string>;
    }

    /**
     * Filter that is applied to packet capture request. Multiple filters can be applied.
     */
    export interface PacketCaptureFilterResponse {
        /**
         * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         */
        localIPAddress?: pulumi.Input<string>;
        /**
         * Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         */
        localPort?: pulumi.Input<string>;
        /**
         * Protocol to be filtered on.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         */
        remoteIPAddress?: pulumi.Input<string>;
        /**
         * Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         */
        remotePort?: pulumi.Input<string>;
    }

    /**
     * Parameters that define the create packet capture operation.
     */
    export interface PacketCaptureParameters {
        /**
         * Number of bytes captured per packet, the remaining bytes are truncated.
         */
        bytesToCapturePerPacket?: pulumi.Input<number>;
        /**
         * A list of packet capture filters.
         */
        filters?: pulumi.Input<pulumi.Input<inputs.network.PacketCaptureFilter>[]>;
        /**
         * The storage location for a packet capture session.
         */
        storageLocation: pulumi.Input<inputs.network.PacketCaptureStorageLocation>;
        /**
         * The ID of the targeted resource, only VM is currently supported.
         */
        target: pulumi.Input<string>;
        /**
         * Maximum duration of the capture session in seconds.
         */
        timeLimitInSeconds?: pulumi.Input<number>;
        /**
         * Maximum size of the capture output.
         */
        totalBytesPerSession?: pulumi.Input<number>;
    }

    /**
     * The properties of a packet capture session.
     */
    export interface PacketCaptureResultPropertiesResponse {
        /**
         * Number of bytes captured per packet, the remaining bytes are truncated.
         */
        bytesToCapturePerPacket?: pulumi.Input<number>;
        /**
         * A list of packet capture filters.
         */
        filters?: pulumi.Input<pulumi.Input<inputs.network.PacketCaptureFilterResponse>[]>;
        /**
         * The provisioning state of the packet capture session.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The storage location for a packet capture session.
         */
        storageLocation: pulumi.Input<inputs.network.PacketCaptureStorageLocationResponse>;
        /**
         * The ID of the targeted resource, only VM is currently supported.
         */
        target: pulumi.Input<string>;
        /**
         * Maximum duration of the capture session in seconds.
         */
        timeLimitInSeconds?: pulumi.Input<number>;
        /**
         * Maximum size of the capture output.
         */
        totalBytesPerSession?: pulumi.Input<number>;
    }

    /**
     * The storage location for a packet capture session.
     */
    export interface PacketCaptureStorageLocation {
        /**
         * A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
         */
        filePath?: pulumi.Input<string>;
        /**
         * The ID of the storage account to save the packet capture session. Required if no local file path is provided.
         */
        storageId?: pulumi.Input<string>;
        /**
         * The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
         */
        storagePath?: pulumi.Input<string>;
    }

    /**
     * The storage location for a packet capture session.
     */
    export interface PacketCaptureStorageLocationResponse {
        /**
         * A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
         */
        filePath?: pulumi.Input<string>;
        /**
         * The ID of the storage account to save the packet capture session. Required if no local file path is provided.
         */
        storageId?: pulumi.Input<string>;
        /**
         * The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
         */
        storagePath?: pulumi.Input<string>;
    }

    /**
     * Properties of the peer express route circuit connection.
     */
    export interface PeerExpressRouteCircuitConnectionPropertiesFormatResponse {
        /**
         * /29 IP address space to carve out Customer addresses for tunnels.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * The resource guid of the authorization used for the express route circuit connection.
         */
        authResourceGuid?: pulumi.Input<string>;
        /**
         * Express Route Circuit connection state.
         */
        circuitConnectionStatus?: pulumi.Input<string>;
        /**
         * The name of the express route circuit connection resource.
         */
        connectionName?: pulumi.Input<string>;
        /**
         * Reference to Express Route Circuit Private Peering Resource of the circuit.
         */
        expressRouteCircuitPeering?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Reference to Express Route Circuit Private Peering Resource of the peered circuit.
         */
        peerExpressRouteCircuitPeering?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The provisioning state of the peer express route circuit connection resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
     */
    export interface PeerExpressRouteCircuitConnectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the peer express route circuit connection.
         */
        properties?: pulumi.Input<inputs.network.PeerExpressRouteCircuitConnectionPropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Defines contents of a web application firewall global configuration.
     */
    export interface PolicySettings {
        /**
         * Maximum file upload size in Mb for WAF.
         */
        fileUploadLimitInMb?: pulumi.Input<number>;
        /**
         * Maximum request body size in Kb for WAF.
         */
        maxRequestBodySizeInKb?: pulumi.Input<number>;
        /**
         * The mode of the policy.
         */
        mode?: pulumi.Input<string>;
        /**
         * Whether to allow WAF to check request Body.
         */
        requestBodyCheck?: pulumi.Input<boolean>;
        /**
         * The state of the policy.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * Defines contents of a web application firewall global configuration.
     */
    export interface PolicySettingsResponse {
        /**
         * Maximum file upload size in Mb for WAF.
         */
        fileUploadLimitInMb?: pulumi.Input<number>;
        /**
         * Maximum request body size in Kb for WAF.
         */
        maxRequestBodySizeInKb?: pulumi.Input<number>;
        /**
         * The mode of the policy.
         */
        mode?: pulumi.Input<string>;
        /**
         * Whether to allow WAF to check request Body.
         */
        requestBodyCheck?: pulumi.Input<boolean>;
        /**
         * The state of the policy.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * PrivateDnsZoneConfig resource.
     */
    export interface PrivateDnsZoneConfig {
        /**
         * Name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the private dns zone configuration.
         */
        properties?: pulumi.Input<inputs.network.PrivateDnsZonePropertiesFormat>;
    }

    /**
     * PrivateDnsZoneConfig resource.
     */
    export interface PrivateDnsZoneConfigResponse {
        /**
         * Name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the private dns zone configuration.
         */
        properties?: pulumi.Input<inputs.network.PrivateDnsZonePropertiesFormatResponse>;
    }

    /**
     * Properties of the private dns zone group.
     */
    export interface PrivateDnsZoneGroupPropertiesFormat {
        /**
         * A collection of private dns zone configurations of the private dns zone group.
         */
        privateDnsZoneConfigs?: pulumi.Input<pulumi.Input<inputs.network.PrivateDnsZoneConfig>[]>;
    }

    /**
     * Properties of the private dns zone group.
     */
    export interface PrivateDnsZoneGroupPropertiesFormatResponse {
        /**
         * A collection of private dns zone configurations of the private dns zone group.
         */
        privateDnsZoneConfigs?: pulumi.Input<pulumi.Input<inputs.network.PrivateDnsZoneConfigResponse>[]>;
        /**
         * The provisioning state of the private dns zone group resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Properties of the private dns zone configuration resource.
     */
    export interface PrivateDnsZonePropertiesFormat {
        /**
         * The resource id of the private dns zone.
         */
        privateDnsZoneId?: pulumi.Input<string>;
    }

    /**
     * Properties of the private dns zone configuration resource.
     */
    export interface PrivateDnsZonePropertiesFormatResponse {
        /**
         * The resource id of the private dns zone.
         */
        privateDnsZoneId?: pulumi.Input<string>;
        /**
         * A collection of information regarding a recordSet, holding information to identify private resources.
         */
        recordSets: pulumi.Input<pulumi.Input<inputs.network.RecordSetResponse>[]>;
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.network.PrivateLinkServiceConnectionState>;
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The consumer link id.
         */
        linkIdentifier: pulumi.Input<string>;
        /**
         * The resource of private end point.
         */
        privateEndpoint: pulumi.Input<inputs.network.PrivateEndpointResponse>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.network.PrivateLinkServiceConnectionStateResponse>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * PrivateEndpointConnection resource.
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the private end point connection.
         */
        properties?: pulumi.Input<inputs.network.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of the private endpoint.
     */
    export interface PrivateEndpointProperties {
        /**
         * An array of custom dns configurations.
         */
        customDnsConfigs?: pulumi.Input<pulumi.Input<inputs.network.CustomDnsConfigPropertiesFormat>[]>;
        /**
         * A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
         */
        manualPrivateLinkServiceConnections?: pulumi.Input<pulumi.Input<inputs.network.PrivateLinkServiceConnection>[]>;
        /**
         * A grouping of information about the connection to the remote resource.
         */
        privateLinkServiceConnections?: pulumi.Input<pulumi.Input<inputs.network.PrivateLinkServiceConnection>[]>;
        /**
         * The ID of the subnet from which the private IP will be allocated.
         */
        subnet?: pulumi.Input<inputs.network.Subnet>;
    }

    /**
     * Properties of the private endpoint.
     */
    export interface PrivateEndpointPropertiesResponse {
        /**
         * An array of custom dns configurations.
         */
        customDnsConfigs?: pulumi.Input<pulumi.Input<inputs.network.CustomDnsConfigPropertiesFormatResponse>[]>;
        /**
         * A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
         */
        manualPrivateLinkServiceConnections?: pulumi.Input<pulumi.Input<inputs.network.PrivateLinkServiceConnectionResponse>[]>;
        /**
         * An array of references to the network interfaces created for this private endpoint.
         */
        networkInterfaces: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceResponse>[]>;
        /**
         * A grouping of information about the connection to the remote resource.
         */
        privateLinkServiceConnections?: pulumi.Input<pulumi.Input<inputs.network.PrivateLinkServiceConnectionResponse>[]>;
        /**
         * The provisioning state of the private endpoint resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The ID of the subnet from which the private IP will be allocated.
         */
        subnet?: pulumi.Input<inputs.network.SubnetResponse>;
    }

    /**
     * Private endpoint resource.
     */
    export interface PrivateEndpointResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the private endpoint.
         */
        properties?: pulumi.Input<inputs.network.PrivateEndpointPropertiesResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * PrivateLinkServiceConnection resource.
     */
    export interface PrivateLinkServiceConnection {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the private link service connection.
         */
        properties?: pulumi.Input<inputs.network.PrivateLinkServiceConnectionProperties>;
    }

    /**
     * Properties of the PrivateLinkServiceConnection.
     */
    export interface PrivateLinkServiceConnectionProperties {
        /**
         * The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
         */
        groupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A collection of read-only information about the state of the connection to the remote resource.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.network.PrivateLinkServiceConnectionState>;
        /**
         * The resource id of private link service.
         */
        privateLinkServiceId?: pulumi.Input<string>;
        /**
         * A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
         */
        requestMessage?: pulumi.Input<string>;
    }

    /**
     * Properties of the PrivateLinkServiceConnection.
     */
    export interface PrivateLinkServiceConnectionPropertiesResponse {
        /**
         * The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
         */
        groupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A collection of read-only information about the state of the connection to the remote resource.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.network.PrivateLinkServiceConnectionStateResponse>;
        /**
         * The resource id of private link service.
         */
        privateLinkServiceId?: pulumi.Input<string>;
        /**
         * The provisioning state of the private link service connection resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
         */
        requestMessage?: pulumi.Input<string>;
    }

    /**
     * PrivateLinkServiceConnection resource.
     */
    export interface PrivateLinkServiceConnectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the private link service connection.
         */
        properties?: pulumi.Input<inputs.network.PrivateLinkServiceConnectionPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The private link service ip configuration.
     */
    export interface PrivateLinkServiceIpConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of private link service ip configuration.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the private link service ip configuration.
         */
        properties?: pulumi.Input<inputs.network.PrivateLinkServiceIpConfigurationProperties>;
    }

    /**
     * Properties of private link service IP configuration.
     */
    export interface PrivateLinkServiceIpConfigurationProperties {
        /**
         * Whether the ip configuration is primary or not.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * The private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
         */
        privateIPAddressVersion?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.Subnet>;
    }

    /**
     * Properties of private link service IP configuration.
     */
    export interface PrivateLinkServiceIpConfigurationPropertiesResponse {
        /**
         * Whether the ip configuration is primary or not.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * The private IP address of the IP configuration.
         */
        privateIPAddress?: pulumi.Input<string>;
        /**
         * Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
         */
        privateIPAddressVersion?: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The provisioning state of the private link service IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubnetResponse>;
    }

    /**
     * The private link service ip configuration.
     */
    export interface PrivateLinkServiceIpConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of private link service ip configuration.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the private link service ip configuration.
         */
        properties?: pulumi.Input<inputs.network.PrivateLinkServiceIpConfigurationPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of the private link service.
     */
    export interface PrivateLinkServiceProperties {
        /**
         * The auto-approval list of the private link service.
         */
        autoApproval?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Whether the private link service is enabled for proxy protocol or not.
         */
        enableProxyProtocol?: pulumi.Input<boolean>;
        /**
         * The list of Fqdn.
         */
        fqdns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An array of private link service IP configurations.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.PrivateLinkServiceIpConfiguration>[]>;
        /**
         * An array of references to the load balancer IP configurations.
         */
        loadBalancerFrontendIpConfigurations?: pulumi.Input<pulumi.Input<inputs.network.FrontendIPConfiguration>[]>;
        /**
         * The visibility list of the private link service.
         */
        visibility?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Properties of the private link service.
     */
    export interface PrivateLinkServicePropertiesResponse {
        /**
         * The alias of the private link service.
         */
        alias: pulumi.Input<string>;
        /**
         * The auto-approval list of the private link service.
         */
        autoApproval?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Whether the private link service is enabled for proxy protocol or not.
         */
        enableProxyProtocol?: pulumi.Input<boolean>;
        /**
         * The list of Fqdn.
         */
        fqdns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An array of private link service IP configurations.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.PrivateLinkServiceIpConfigurationResponse>[]>;
        /**
         * An array of references to the load balancer IP configurations.
         */
        loadBalancerFrontendIpConfigurations?: pulumi.Input<pulumi.Input<inputs.network.FrontendIPConfigurationResponse>[]>;
        /**
         * An array of references to the network interfaces created for this private link service.
         */
        networkInterfaces: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceResponse>[]>;
        /**
         * An array of list about connections to the private endpoint.
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.network.PrivateEndpointConnectionResponse>[]>;
        /**
         * The provisioning state of the private link service resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The visibility list of the private link service.
         */
        visibility?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Represents the properties of the Private DNS zone.
     */
    export interface PrivateZoneProperties {
    }

    /**
     * Represents the properties of the Private DNS zone.
     */
    export interface PrivateZonePropertiesResponse {
        /**
         * The maximum number of record sets that can be created in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.
         */
        maxNumberOfRecordSets: pulumi.Input<number>;
        /**
         * The maximum number of virtual networks that can be linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.
         */
        maxNumberOfVirtualNetworkLinks: pulumi.Input<number>;
        /**
         * The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.
         */
        maxNumberOfVirtualNetworkLinksWithRegistration: pulumi.Input<number>;
        /**
         * The current number of record sets in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.
         */
        numberOfRecordSets: pulumi.Input<number>;
        /**
         * The current number of virtual networks that are linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.
         */
        numberOfVirtualNetworkLinks: pulumi.Input<number>;
        /**
         * The current number of virtual networks that are linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.
         */
        numberOfVirtualNetworkLinksWithRegistration: pulumi.Input<number>;
        /**
         * The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * A load balancer probe.
     */
    export interface Probe {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer probe.
         */
        properties?: pulumi.Input<inputs.network.ProbePropertiesFormat>;
    }

    /**
     * Load balancer probe resource.
     */
    export interface ProbePropertiesFormat {
        /**
         * The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
         */
        intervalInSeconds?: pulumi.Input<number>;
        /**
         * The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
         */
        numberOfProbes?: pulumi.Input<number>;
        /**
         * The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
         */
        port: pulumi.Input<number>;
        /**
         * The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
         */
        protocol: pulumi.Input<string>;
        /**
         * The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
         */
        requestPath?: pulumi.Input<string>;
    }

    /**
     * Load balancer probe resource.
     */
    export interface ProbePropertiesFormatResponse {
        /**
         * The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
         */
        intervalInSeconds?: pulumi.Input<number>;
        /**
         * The load balancer rules that use this probe.
         */
        loadBalancingRules: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
         */
        numberOfProbes?: pulumi.Input<number>;
        /**
         * The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
         */
        port: pulumi.Input<number>;
        /**
         * The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
         */
        protocol: pulumi.Input<string>;
        /**
         * The provisioning state of the probe resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
         */
        requestPath?: pulumi.Input<string>;
    }

    /**
     * A load balancer probe.
     */
    export interface ProbeResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of load balancer probe.
         */
        properties?: pulumi.Input<inputs.network.ProbePropertiesFormatResponse>;
        /**
         * Type of the resource.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Class representing the Traffic Manager profile properties.
     */
    export interface ProfileProperties {
        /**
         * The DNS settings of the Traffic Manager profile.
         */
        dnsConfig?: pulumi.Input<inputs.network.DnsConfig>;
        /**
         * The list of endpoints in the Traffic Manager profile.
         */
        endpoints?: pulumi.Input<pulumi.Input<inputs.network.Endpoint>[]>;
        /**
         * Maximum number of endpoints to be returned for MultiValue routing type.
         */
        maxReturn?: pulumi.Input<number>;
        /**
         * The endpoint monitoring settings of the Traffic Manager profile.
         */
        monitorConfig?: pulumi.Input<inputs.network.MonitorConfig>;
        /**
         * The status of the Traffic Manager profile.
         */
        profileStatus?: pulumi.Input<string>;
        /**
         * The traffic routing method of the Traffic Manager profile.
         */
        trafficRoutingMethod?: pulumi.Input<string>;
        /**
         * Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.
         */
        trafficViewEnrollmentStatus?: pulumi.Input<string>;
    }

    /**
     * Class representing the Traffic Manager profile properties.
     */
    export interface ProfilePropertiesResponse {
        /**
         * The DNS settings of the Traffic Manager profile.
         */
        dnsConfig?: pulumi.Input<inputs.network.DnsConfigResponse>;
        /**
         * The list of endpoints in the Traffic Manager profile.
         */
        endpoints?: pulumi.Input<pulumi.Input<inputs.network.EndpointResponse>[]>;
        /**
         * Maximum number of endpoints to be returned for MultiValue routing type.
         */
        maxReturn?: pulumi.Input<number>;
        /**
         * The endpoint monitoring settings of the Traffic Manager profile.
         */
        monitorConfig?: pulumi.Input<inputs.network.MonitorConfigResponse>;
        /**
         * The status of the Traffic Manager profile.
         */
        profileStatus?: pulumi.Input<string>;
        /**
         * The traffic routing method of the Traffic Manager profile.
         */
        trafficRoutingMethod?: pulumi.Input<string>;
        /**
         * Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.
         */
        trafficViewEnrollmentStatus?: pulumi.Input<string>;
    }

    /**
     * The list of RouteTables to advertise the routes to.
     */
    export interface PropagatedRouteTable {
        /**
         * The list of resource ids of all the RouteTables.
         */
        ids?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * The list of labels.
         */
        labels?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The list of RouteTables to advertise the routes to.
     */
    export interface PropagatedRouteTableResponse {
        /**
         * The list of resource ids of all the RouteTables.
         */
        ids?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The list of labels.
         */
        labels?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * DDoS custom policy properties.
     */
    export interface ProtocolCustomSettingsFormat {
        /**
         * The protocol for which the DDoS protection policy is being customized.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The customized DDoS protection source rate.
         */
        sourceRateOverride?: pulumi.Input<string>;
        /**
         * The customized DDoS protection trigger rate.
         */
        triggerRateOverride?: pulumi.Input<string>;
        /**
         * The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
         */
        triggerSensitivityOverride?: pulumi.Input<string>;
    }

    /**
     * DDoS custom policy properties.
     */
    export interface ProtocolCustomSettingsFormatResponse {
        /**
         * The protocol for which the DDoS protection policy is being customized.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The customized DDoS protection source rate.
         */
        sourceRateOverride?: pulumi.Input<string>;
        /**
         * The customized DDoS protection trigger rate.
         */
        triggerRateOverride?: pulumi.Input<string>;
        /**
         * The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
         */
        triggerSensitivityOverride?: pulumi.Input<string>;
    }

    /**
     * Public IP address resource.
     */
    export interface PublicIPAddress {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Public IP address properties.
         */
        properties?: pulumi.Input<inputs.network.PublicIPAddressPropertiesFormat>;
        /**
         * The public IP address SKU.
         */
        sku?: pulumi.Input<inputs.network.PublicIPAddressSku>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * A list of availability zones denoting the IP allocated for the resource needs to come from.
         */
        zones?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Contains FQDN of the DNS record associated with the public IP address.
     */
    export interface PublicIPAddressDnsSettings {
        /**
         * The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
         */
        domainNameLabel?: pulumi.Input<string>;
        /**
         * The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
         */
        reverseFqdn?: pulumi.Input<string>;
    }

    /**
     * Contains FQDN of the DNS record associated with the public IP address.
     */
    export interface PublicIPAddressDnsSettingsResponse {
        /**
         * The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
         */
        domainNameLabel?: pulumi.Input<string>;
        /**
         * The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
         */
        reverseFqdn?: pulumi.Input<string>;
    }

    /**
     * Public IP address properties.
     */
    export interface PublicIPAddressPropertiesFormat {
        /**
         * The DDoS protection custom policy associated with the public IP address.
         */
        ddosSettings?: pulumi.Input<inputs.network.DdosSettings>;
        /**
         * The FQDN of the DNS record associated with the public IP address.
         */
        dnsSettings?: pulumi.Input<inputs.network.PublicIPAddressDnsSettings>;
        /**
         * The idle timeout of the public IP address.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The IP address associated with the public IP address resource.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * The list of tags associated with the public IP address.
         */
        ipTags?: pulumi.Input<pulumi.Input<inputs.network.IpTag>[]>;
        /**
         * The public IP address version.
         */
        publicIPAddressVersion?: pulumi.Input<string>;
        /**
         * The public IP address allocation method.
         */
        publicIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The Public IP Prefix this Public IP Address should be allocated from.
         */
        publicIPPrefix?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Public IP address properties.
     */
    export interface PublicIPAddressPropertiesFormatResponse {
        /**
         * The DDoS protection custom policy associated with the public IP address.
         */
        ddosSettings?: pulumi.Input<inputs.network.DdosSettingsResponse>;
        /**
         * The FQDN of the DNS record associated with the public IP address.
         */
        dnsSettings?: pulumi.Input<inputs.network.PublicIPAddressDnsSettingsResponse>;
        /**
         * The idle timeout of the public IP address.
         */
        idleTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * The IP address associated with the public IP address resource.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * The IP configuration associated with the public IP address.
         */
        ipConfiguration: pulumi.Input<inputs.network.IPConfigurationResponse>;
        /**
         * The list of tags associated with the public IP address.
         */
        ipTags?: pulumi.Input<pulumi.Input<inputs.network.IpTagResponse>[]>;
        /**
         * The provisioning state of the public IP address resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The public IP address version.
         */
        publicIPAddressVersion?: pulumi.Input<string>;
        /**
         * The public IP address allocation method.
         */
        publicIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The Public IP Prefix this Public IP Address should be allocated from.
         */
        publicIPPrefix?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The resource GUID property of the public IP address resource.
         */
        resourceGuid: pulumi.Input<string>;
    }

    /**
     * Public IP address resource.
     */
    export interface PublicIPAddressResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Public IP address properties.
         */
        properties?: pulumi.Input<inputs.network.PublicIPAddressPropertiesFormatResponse>;
        /**
         * The public IP address SKU.
         */
        sku?: pulumi.Input<inputs.network.PublicIPAddressSkuResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
        /**
         * A list of availability zones denoting the IP allocated for the resource needs to come from.
         */
        zones?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * SKU of a public IP address.
     */
    export interface PublicIPAddressSku {
        /**
         * Name of a public IP address SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * SKU of a public IP address.
     */
    export interface PublicIPAddressSkuResponse {
        /**
         * Name of a public IP address SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Public IP prefix properties.
     */
    export interface PublicIPPrefixPropertiesFormat {
        /**
         * The list of tags associated with the public IP prefix.
         */
        ipTags?: pulumi.Input<pulumi.Input<inputs.network.IpTag>[]>;
        /**
         * The Length of the Public IP Prefix.
         */
        prefixLength?: pulumi.Input<number>;
        /**
         * The public IP address version.
         */
        publicIPAddressVersion?: pulumi.Input<string>;
    }

    /**
     * Public IP prefix properties.
     */
    export interface PublicIPPrefixPropertiesFormatResponse {
        /**
         * The allocated Prefix.
         */
        ipPrefix: pulumi.Input<string>;
        /**
         * The list of tags associated with the public IP prefix.
         */
        ipTags?: pulumi.Input<pulumi.Input<inputs.network.IpTagResponse>[]>;
        /**
         * The reference to load balancer frontend IP configuration associated with the public IP prefix.
         */
        loadBalancerFrontendIpConfiguration: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The Length of the Public IP Prefix.
         */
        prefixLength?: pulumi.Input<number>;
        /**
         * The provisioning state of the public IP prefix resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The public IP address version.
         */
        publicIPAddressVersion?: pulumi.Input<string>;
        /**
         * The list of all referenced PublicIPAddresses.
         */
        publicIPAddresses: pulumi.Input<pulumi.Input<inputs.network.ReferencedPublicIpAddressResponse>[]>;
        /**
         * The resource GUID property of the public IP prefix resource.
         */
        resourceGuid: pulumi.Input<string>;
    }

    /**
     * SKU of a public IP prefix.
     */
    export interface PublicIPPrefixSku {
        /**
         * Name of a public IP prefix SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * SKU of a public IP prefix.
     */
    export interface PublicIPPrefixSkuResponse {
        /**
         * Name of a public IP prefix SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Radius Server Settings.
     */
    export interface RadiusServer {
        /**
         * The address of this radius server.
         */
        radiusServerAddress: pulumi.Input<string>;
        /**
         * The initial score assigned to this radius server.
         */
        radiusServerScore?: pulumi.Input<number>;
        /**
         * The secret used for this radius server.
         */
        radiusServerSecret?: pulumi.Input<string>;
    }

    /**
     * Radius Server Settings.
     */
    export interface RadiusServerResponse {
        /**
         * The address of this radius server.
         */
        radiusServerAddress: pulumi.Input<string>;
        /**
         * The initial score assigned to this radius server.
         */
        radiusServerScore?: pulumi.Input<number>;
        /**
         * The secret used for this radius server.
         */
        radiusServerSecret?: pulumi.Input<string>;
    }

    /**
     * A collective group of information about the record set information.
     */
    export interface RecordSetResponse {
        /**
         * Fqdn that resolves to private endpoint ip address.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The private ip address of the private endpoint.
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the recordset.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Recordset name.
         */
        recordSetName?: pulumi.Input<string>;
        /**
         * Resource record type.
         */
        recordType?: pulumi.Input<string>;
        /**
         * Recordset time to live.
         */
        ttl?: pulumi.Input<number>;
    }

    /**
     * Reference to a public IP address.
     */
    export interface ReferencedPublicIpAddressResponse {
        /**
         * The PublicIPAddress Reference.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Properties of ResourceNavigationLink.
     */
    export interface ResourceNavigationLinkFormatResponse {
        /**
         * Link to the external resource.
         */
        link?: pulumi.Input<string>;
        /**
         * Resource type of the linked resource.
         */
        linkedResourceType?: pulumi.Input<string>;
        /**
         * The provisioning state of the resource navigation link resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * ResourceNavigationLink resource.
     */
    export interface ResourceNavigationLinkResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id: pulumi.Input<string>;
        /**
         * Name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Resource navigation link properties format.
         */
        properties?: pulumi.Input<inputs.network.ResourceNavigationLinkFormatResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Parameters that define the retention policy for flow log.
     */
    export interface RetentionPolicyParameters {
        /**
         * Number of days to retain flow log records.
         */
        days?: pulumi.Input<number>;
        /**
         * Flag to enable/disable retention.
         */
        enabled?: pulumi.Input<boolean>;
    }

    /**
     * Parameters that define the retention policy for flow log.
     */
    export interface RetentionPolicyParametersResponse {
        /**
         * Number of days to retain flow log records.
         */
        days?: pulumi.Input<number>;
        /**
         * Flag to enable/disable retention.
         */
        enabled?: pulumi.Input<boolean>;
    }

    /**
     * Route resource.
     */
    export interface Route {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the route.
         */
        properties?: pulumi.Input<inputs.network.RoutePropertiesFormat>;
    }

    /**
     * Base class for all types of Route.
     */
    export interface RouteConfiguration {
    }

    /**
     * Base class for all types of Route.
     */
    export interface RouteConfigurationResponse {
    }

    /**
     * Route Filter Resource.
     */
    export interface RouteFilterPropertiesFormat {
        /**
         * Collection of RouteFilterRules contained within a route filter.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.RouteFilterRule>[]>;
    }

    /**
     * Route Filter Resource.
     */
    export interface RouteFilterPropertiesFormatResponse {
        /**
         * A collection of references to express route circuit ipv6 peerings.
         */
        ipv6Peerings: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteCircuitPeeringResponse>[]>;
        /**
         * A collection of references to express route circuit peerings.
         */
        peerings: pulumi.Input<pulumi.Input<inputs.network.ExpressRouteCircuitPeeringResponse>[]>;
        /**
         * The provisioning state of the route filter resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Collection of RouteFilterRules contained within a route filter.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.RouteFilterRuleResponse>[]>;
    }

    /**
     * Route Filter Rule Resource.
     */
    export interface RouteFilterRule {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the route filter rule.
         */
        properties?: pulumi.Input<inputs.network.RouteFilterRulePropertiesFormat>;
    }

    /**
     * Route Filter Rule Resource.
     */
    export interface RouteFilterRulePropertiesFormat {
        /**
         * The access type of the rule.
         */
        access: pulumi.Input<string>;
        /**
         * The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
         */
        communities: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The rule type of the rule.
         */
        routeFilterRuleType: pulumi.Input<string>;
    }

    /**
     * Route Filter Rule Resource.
     */
    export interface RouteFilterRulePropertiesFormatResponse {
        /**
         * The access type of the rule.
         */
        access: pulumi.Input<string>;
        /**
         * The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
         */
        communities: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the route filter rule resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The rule type of the rule.
         */
        routeFilterRuleType: pulumi.Input<string>;
    }

    /**
     * Route Filter Rule Resource.
     */
    export interface RouteFilterRuleResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the route filter rule.
         */
        properties?: pulumi.Input<inputs.network.RouteFilterRulePropertiesFormatResponse>;
    }

    /**
     * Route resource.
     */
    export interface RoutePropertiesFormat {
        /**
         * The destination CIDR to which the route applies.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
         */
        nextHopIpAddress?: pulumi.Input<string>;
        /**
         * The type of Azure hop the packet should be sent to.
         */
        nextHopType: pulumi.Input<string>;
    }

    /**
     * Route resource.
     */
    export interface RoutePropertiesFormatResponse {
        /**
         * The destination CIDR to which the route applies.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
         */
        nextHopIpAddress?: pulumi.Input<string>;
        /**
         * The type of Azure hop the packet should be sent to.
         */
        nextHopType: pulumi.Input<string>;
        /**
         * The provisioning state of the route resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Route resource.
     */
    export interface RouteResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the route.
         */
        properties?: pulumi.Input<inputs.network.RoutePropertiesFormatResponse>;
    }

    /**
     * Route table resource.
     */
    export interface RouteTable {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Properties of the route table.
         */
        properties?: pulumi.Input<inputs.network.RouteTablePropertiesFormat>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Route Table resource.
     */
    export interface RouteTablePropertiesFormat {
        /**
         * Whether to disable the routes learned by BGP on that route table. True means disable.
         */
        disableBgpRoutePropagation?: pulumi.Input<boolean>;
        /**
         * Collection of routes contained within a route table.
         */
        routes?: pulumi.Input<pulumi.Input<inputs.network.Route>[]>;
    }

    /**
     * Route Table resource.
     */
    export interface RouteTablePropertiesFormatResponse {
        /**
         * Whether to disable the routes learned by BGP on that route table. True means disable.
         */
        disableBgpRoutePropagation?: pulumi.Input<boolean>;
        /**
         * The provisioning state of the route table resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Collection of routes contained within a route table.
         */
        routes?: pulumi.Input<pulumi.Input<inputs.network.RouteResponse>[]>;
        /**
         * A collection of references to subnets.
         */
        subnets: pulumi.Input<pulumi.Input<inputs.network.SubnetResponse>[]>;
    }

    /**
     * Route table resource.
     */
    export interface RouteTableResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the route table.
         */
        properties?: pulumi.Input<inputs.network.RouteTablePropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Routing Configuration indicating the associated and propagated route tables for this connection.
     */
    export interface RoutingConfiguration {
        /**
         * The resource id RouteTable associated with this RoutingConfiguration.
         */
        associatedRouteTable?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The list of RouteTables to advertise the routes to.
         */
        propagatedRouteTables?: pulumi.Input<inputs.network.PropagatedRouteTable>;
        /**
         * List of routes that control routing from VirtualHub into a virtual network connection.
         */
        vnetRoutes?: pulumi.Input<inputs.network.VnetRoute>;
    }

    /**
     * Routing Configuration indicating the associated and propagated route tables for this connection.
     */
    export interface RoutingConfigurationResponse {
        /**
         * The resource id RouteTable associated with this RoutingConfiguration.
         */
        associatedRouteTable?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The list of RouteTables to advertise the routes to.
         */
        propagatedRouteTables?: pulumi.Input<inputs.network.PropagatedRouteTableResponse>;
        /**
         * List of routes that control routing from VirtualHub into a virtual network connection.
         */
        vnetRoutes?: pulumi.Input<inputs.network.VnetRouteResponse>;
    }

    /**
     * A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
     */
    export interface RoutingRule {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the Front Door Routing Rule
         */
        properties?: pulumi.Input<inputs.network.RoutingRuleProperties>;
    }

    /**
     * The JSON object that contains the properties required to create a routing rule.
     */
    export interface RoutingRuleProperties {
        /**
         * Protocol schemes to match for this rule
         */
        acceptedProtocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
         */
        enabledState?: pulumi.Input<string>;
        /**
         * Frontend endpoints associated with this rule
         */
        frontendEndpoints?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * The route patterns of the rule.
         */
        patternsToMatch?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * A reference to the routing configuration.
         */
        routeConfiguration?: pulumi.Input<inputs.network.RouteConfiguration>;
        /**
         * A reference to a specific Rules Engine Configuration to apply to this route.
         */
        rulesEngine?: pulumi.Input<inputs.network.SubResource>;
        /**
         * Defines the Web Application Firewall policy for each routing rule (if applicable)
         */
        webApplicationFirewallPolicyLink?: pulumi.Input<inputs.network.RoutingRuleUpdateParametersProperties>;
    }

    /**
     * The JSON object that contains the properties required to create a routing rule.
     */
    export interface RoutingRulePropertiesResponse {
        /**
         * Protocol schemes to match for this rule
         */
        acceptedProtocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
         */
        enabledState?: pulumi.Input<string>;
        /**
         * Frontend endpoints associated with this rule
         */
        frontendEndpoints?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The route patterns of the rule.
         */
        patternsToMatch?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * A reference to the routing configuration.
         */
        routeConfiguration?: pulumi.Input<inputs.network.RouteConfigurationResponse>;
        /**
         * A reference to a specific Rules Engine Configuration to apply to this route.
         */
        rulesEngine?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * Defines the Web Application Firewall policy for each routing rule (if applicable)
         */
        webApplicationFirewallPolicyLink?: pulumi.Input<inputs.network.RoutingRuleUpdateParametersResponseProperties>;
    }

    /**
     * A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
     */
    export interface RoutingRuleResponse {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the Front Door Routing Rule
         */
        properties?: pulumi.Input<inputs.network.RoutingRulePropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Defines the Web Application Firewall policy for each routing rule (if applicable)
     */
    export interface RoutingRuleUpdateParametersProperties {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Defines the Web Application Firewall policy for each routing rule (if applicable)
     */
    export interface RoutingRuleUpdateParametersResponseProperties {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * One or more actions that will execute, modifying the request and/or response.
     */
    export interface RulesEngineAction {
        /**
         * A list of header actions to apply from the request from AFD to the origin.
         */
        requestHeaderActions?: pulumi.Input<pulumi.Input<inputs.network.HeaderAction>[]>;
        /**
         * A list of header actions to apply from the response from AFD to the client.
         */
        responseHeaderActions?: pulumi.Input<pulumi.Input<inputs.network.HeaderAction>[]>;
        /**
         * Override the route configuration.
         */
        routeConfigurationOverride?: pulumi.Input<inputs.network.RouteConfiguration>;
    }

    /**
     * One or more actions that will execute, modifying the request and/or response.
     */
    export interface RulesEngineActionResponse {
        /**
         * A list of header actions to apply from the request from AFD to the origin.
         */
        requestHeaderActions?: pulumi.Input<pulumi.Input<inputs.network.HeaderActionResponse>[]>;
        /**
         * A list of header actions to apply from the response from AFD to the client.
         */
        responseHeaderActions?: pulumi.Input<pulumi.Input<inputs.network.HeaderActionResponse>[]>;
        /**
         * Override the route configuration.
         */
        routeConfigurationOverride?: pulumi.Input<inputs.network.RouteConfigurationResponse>;
    }

    /**
     * Define a match condition
     */
    export interface RulesEngineMatchCondition {
        /**
         * Describes if this is negate condition or not
         */
        negateCondition?: pulumi.Input<boolean>;
        /**
         * Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
         */
        rulesEngineMatchValue: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Match Variable
         */
        rulesEngineMatchVariable: pulumi.Input<string>;
        /**
         * Describes operator to apply to the match condition.
         */
        rulesEngineOperator: pulumi.Input<string>;
        /**
         * Name of selector in RequestHeader or RequestBody to be matched
         */
        selector?: pulumi.Input<string>;
        /**
         * List of transforms
         */
        transforms?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Define a match condition
     */
    export interface RulesEngineMatchConditionResponse {
        /**
         * Describes if this is negate condition or not
         */
        negateCondition?: pulumi.Input<boolean>;
        /**
         * Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
         */
        rulesEngineMatchValue: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Match Variable
         */
        rulesEngineMatchVariable: pulumi.Input<string>;
        /**
         * Describes operator to apply to the match condition.
         */
        rulesEngineOperator: pulumi.Input<string>;
        /**
         * Name of selector in RequestHeader or RequestBody to be matched
         */
        selector?: pulumi.Input<string>;
        /**
         * List of transforms
         */
        transforms?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The JSON object that contains the properties required to create a Rules Engine Configuration.
     */
    export interface RulesEngineProperties {
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * A list of rules that define a particular Rules Engine Configuration.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.RulesEngineRule>[]>;
    }

    /**
     * The JSON object that contains the properties required to create a Rules Engine Configuration.
     */
    export interface RulesEnginePropertiesResponse {
        /**
         * Resource status.
         */
        resourceState?: pulumi.Input<string>;
        /**
         * A list of rules that define a particular Rules Engine Configuration.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.network.RulesEngineRuleResponse>[]>;
    }

    /**
     * A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
     */
    export interface RulesEngineResponse {
        /**
         * Resource ID.
         */
        id: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the Rules Engine Configuration.
         */
        properties?: pulumi.Input<inputs.network.RulesEnginePropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
     */
    export interface RulesEngineRule {
        /**
         * Actions to perform on the request and response if all of the match conditions are met.
         */
        action: pulumi.Input<inputs.network.RulesEngineAction>;
        /**
         * A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
         */
        matchConditions?: pulumi.Input<pulumi.Input<inputs.network.RulesEngineMatchCondition>[]>;
        /**
         * If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
         */
        matchProcessingBehavior?: pulumi.Input<string>;
        /**
         * A name to refer to this specific rule.
         */
        name: pulumi.Input<string>;
        /**
         * A priority assigned to this rule. 
         */
        priority: pulumi.Input<number>;
    }

    /**
     * Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
     */
    export interface RulesEngineRuleResponse {
        /**
         * Actions to perform on the request and response if all of the match conditions are met.
         */
        action: pulumi.Input<inputs.network.RulesEngineActionResponse>;
        /**
         * A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
         */
        matchConditions?: pulumi.Input<pulumi.Input<inputs.network.RulesEngineMatchConditionResponse>[]>;
        /**
         * If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
         */
        matchProcessingBehavior?: pulumi.Input<string>;
        /**
         * A name to refer to this specific rule.
         */
        name: pulumi.Input<string>;
        /**
         * A priority assigned to this rule. 
         */
        priority: pulumi.Input<number>;
    }

    /**
     * Properties of the Security Partner Provider.
     */
    export interface SecurityPartnerProviderPropertiesFormat {
        /**
         * The security provider name.
         */
        securityProviderName?: pulumi.Input<string>;
        /**
         * The virtualHub to which the Security Partner Provider belongs.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of the Security Partner Provider.
     */
    export interface SecurityPartnerProviderPropertiesFormatResponse {
        /**
         * The connection status with the Security Partner Provider.
         */
        connectionStatus: pulumi.Input<string>;
        /**
         * The provisioning state of the Security Partner Provider resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The security provider name.
         */
        securityProviderName?: pulumi.Input<string>;
        /**
         * The virtualHub to which the Security Partner Provider belongs.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * Network security rule.
     */
    export interface SecurityRule {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the security rule.
         */
        properties?: pulumi.Input<inputs.network.SecurityRulePropertiesFormat>;
    }

    /**
     * Security rule resource.
     */
    export interface SecurityRulePropertiesFormat {
        /**
         * The network traffic is allowed or denied.
         */
        access: pulumi.Input<string>;
        /**
         * A description for this rule. Restricted to 140 chars.
         */
        description?: pulumi.Input<string>;
        /**
         * The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
         */
        destinationAddressPrefix?: pulumi.Input<string>;
        /**
         * The destination address prefixes. CIDR or destination IP ranges.
         */
        destinationAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The application security group specified as destination.
         */
        destinationApplicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationSecurityGroup>[]>;
        /**
         * The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
         */
        destinationPortRange?: pulumi.Input<string>;
        /**
         * The destination port ranges.
         */
        destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
         */
        direction: pulumi.Input<string>;
        /**
         * The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
         */
        priority?: pulumi.Input<number>;
        /**
         * Network protocol this rule applies to.
         */
        protocol: pulumi.Input<string>;
        /**
         * The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
         */
        sourceAddressPrefix?: pulumi.Input<string>;
        /**
         * The CIDR or source IP ranges.
         */
        sourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The application security group specified as source.
         */
        sourceApplicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationSecurityGroup>[]>;
        /**
         * The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
         */
        sourcePortRange?: pulumi.Input<string>;
        /**
         * The source port ranges.
         */
        sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Security rule resource.
     */
    export interface SecurityRulePropertiesFormatResponse {
        /**
         * The network traffic is allowed or denied.
         */
        access: pulumi.Input<string>;
        /**
         * A description for this rule. Restricted to 140 chars.
         */
        description?: pulumi.Input<string>;
        /**
         * The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
         */
        destinationAddressPrefix?: pulumi.Input<string>;
        /**
         * The destination address prefixes. CIDR or destination IP ranges.
         */
        destinationAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The application security group specified as destination.
         */
        destinationApplicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationSecurityGroupResponse>[]>;
        /**
         * The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
         */
        destinationPortRange?: pulumi.Input<string>;
        /**
         * The destination port ranges.
         */
        destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
         */
        direction: pulumi.Input<string>;
        /**
         * The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
         */
        priority?: pulumi.Input<number>;
        /**
         * Network protocol this rule applies to.
         */
        protocol: pulumi.Input<string>;
        /**
         * The provisioning state of the security rule resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
         */
        sourceAddressPrefix?: pulumi.Input<string>;
        /**
         * The CIDR or source IP ranges.
         */
        sourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The application security group specified as source.
         */
        sourceApplicationSecurityGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationSecurityGroupResponse>[]>;
        /**
         * The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
         */
        sourcePortRange?: pulumi.Input<string>;
        /**
         * The source port ranges.
         */
        sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Network security rule.
     */
    export interface SecurityRuleResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the security rule.
         */
        properties?: pulumi.Input<inputs.network.SecurityRulePropertiesFormatResponse>;
    }

    /**
     * Properties of ServiceAssociationLink.
     */
    export interface ServiceAssociationLinkPropertiesFormatResponse {
        /**
         * If true, the resource can be deleted.
         */
        allowDelete?: pulumi.Input<boolean>;
        /**
         * Link to the external resource.
         */
        link?: pulumi.Input<string>;
        /**
         * Resource type of the linked resource.
         */
        linkedResourceType?: pulumi.Input<string>;
        /**
         * A list of locations.
         */
        locations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the service association link resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * ServiceAssociationLink resource.
     */
    export interface ServiceAssociationLinkResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Resource navigation link properties format.
         */
        properties?: pulumi.Input<inputs.network.ServiceAssociationLinkPropertiesFormatResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of a service delegation.
     */
    export interface ServiceDelegationPropertiesFormat {
        /**
         * The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
         */
        serviceName?: pulumi.Input<string>;
    }

    /**
     * Properties of a service delegation.
     */
    export interface ServiceDelegationPropertiesFormatResponse {
        /**
         * The actions permitted to the service upon delegation.
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the service delegation resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
         */
        serviceName?: pulumi.Input<string>;
    }

    /**
     * Service End point policy resource.
     */
    export interface ServiceEndpointPolicy {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Properties of the service end point policy.
         */
        properties?: pulumi.Input<inputs.network.ServiceEndpointPolicyPropertiesFormat>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Service Endpoint policy definitions.
     */
    export interface ServiceEndpointPolicyDefinition {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the service endpoint policy definition.
         */
        properties?: pulumi.Input<inputs.network.ServiceEndpointPolicyDefinitionPropertiesFormat>;
    }

    /**
     * Service Endpoint policy definition resource.
     */
    export interface ServiceEndpointPolicyDefinitionPropertiesFormat {
        /**
         * A description for this rule. Restricted to 140 chars.
         */
        description?: pulumi.Input<string>;
        /**
         * Service endpoint name.
         */
        service?: pulumi.Input<string>;
        /**
         * A list of service resources.
         */
        serviceResources?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Service Endpoint policy definition resource.
     */
    export interface ServiceEndpointPolicyDefinitionPropertiesFormatResponse {
        /**
         * A description for this rule. Restricted to 140 chars.
         */
        description?: pulumi.Input<string>;
        /**
         * The provisioning state of the service endpoint policy definition resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Service endpoint name.
         */
        service?: pulumi.Input<string>;
        /**
         * A list of service resources.
         */
        serviceResources?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Service Endpoint policy definitions.
     */
    export interface ServiceEndpointPolicyDefinitionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the service endpoint policy definition.
         */
        properties?: pulumi.Input<inputs.network.ServiceEndpointPolicyDefinitionPropertiesFormatResponse>;
    }

    /**
     * Service Endpoint Policy resource.
     */
    export interface ServiceEndpointPolicyPropertiesFormat {
        /**
         * A collection of service endpoint policy definitions of the service endpoint policy.
         */
        serviceEndpointPolicyDefinitions?: pulumi.Input<pulumi.Input<inputs.network.ServiceEndpointPolicyDefinition>[]>;
    }

    /**
     * Service Endpoint Policy resource.
     */
    export interface ServiceEndpointPolicyPropertiesFormatResponse {
        /**
         * The provisioning state of the service endpoint policy resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the service endpoint policy resource.
         */
        resourceGuid: pulumi.Input<string>;
        /**
         * A collection of service endpoint policy definitions of the service endpoint policy.
         */
        serviceEndpointPolicyDefinitions?: pulumi.Input<pulumi.Input<inputs.network.ServiceEndpointPolicyDefinitionResponse>[]>;
        /**
         * A collection of references to subnets.
         */
        subnets: pulumi.Input<pulumi.Input<inputs.network.SubnetResponse>[]>;
    }

    /**
     * Service End point policy resource.
     */
    export interface ServiceEndpointPolicyResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the service end point policy.
         */
        properties?: pulumi.Input<inputs.network.ServiceEndpointPolicyPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The service endpoint properties.
     */
    export interface ServiceEndpointPropertiesFormat {
        /**
         * A list of locations.
         */
        locations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The type of the endpoint service.
         */
        service?: pulumi.Input<string>;
    }

    /**
     * The service endpoint properties.
     */
    export interface ServiceEndpointPropertiesFormatResponse {
        /**
         * A list of locations.
         */
        locations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the service endpoint resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The type of the endpoint service.
         */
        service?: pulumi.Input<string>;
    }

    /**
     * List of all Static Routes.
     */
    export interface StaticRoute {
        /**
         * List of all address prefixes.
         */
        addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the StaticRoute that is unique within a VnetRoute.
         */
        name?: pulumi.Input<string>;
        /**
         * The ip address of the next hop.
         */
        nextHopIpAddress?: pulumi.Input<string>;
    }

    /**
     * List of all Static Routes.
     */
    export interface StaticRouteResponse {
        /**
         * List of all address prefixes.
         */
        addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the StaticRoute that is unique within a VnetRoute.
         */
        name?: pulumi.Input<string>;
        /**
         * The ip address of the next hop.
         */
        nextHopIpAddress?: pulumi.Input<string>;
    }

    /**
     * Reference to another subresource.
     */
    export interface SubResource {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Reference to another subresource.
     */
    export interface SubResourceResponse {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Subnet in a virtual network resource.
     */
    export interface Subnet {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the subnet.
         */
        properties?: pulumi.Input<inputs.network.SubnetPropertiesFormat>;
    }

    /**
     * Properties of the subnet.
     */
    export interface SubnetPropertiesFormat {
        /**
         * The address prefix for the subnet.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * List of address prefixes for the subnet.
         */
        addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An array of references to the delegations on the subnet.
         */
        delegations?: pulumi.Input<pulumi.Input<inputs.network.Delegation>[]>;
        /**
         * Array of IpAllocation which reference this subnet.
         */
        ipAllocations?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * Nat gateway associated with this subnet.
         */
        natGateway?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The reference to the NetworkSecurityGroup resource.
         */
        networkSecurityGroup?: pulumi.Input<inputs.network.NetworkSecurityGroup>;
        /**
         * Enable or Disable apply network policies on private end point in the subnet.
         */
        privateEndpointNetworkPolicies?: pulumi.Input<string>;
        /**
         * Enable or Disable apply network policies on private link service in the subnet.
         */
        privateLinkServiceNetworkPolicies?: pulumi.Input<string>;
        /**
         * The reference to the RouteTable resource.
         */
        routeTable?: pulumi.Input<inputs.network.RouteTable>;
        /**
         * An array of service endpoint policies.
         */
        serviceEndpointPolicies?: pulumi.Input<pulumi.Input<inputs.network.ServiceEndpointPolicy>[]>;
        /**
         * An array of service endpoints.
         */
        serviceEndpoints?: pulumi.Input<pulumi.Input<inputs.network.ServiceEndpointPropertiesFormat>[]>;
    }

    /**
     * Properties of the subnet.
     */
    export interface SubnetPropertiesFormatResponse {
        /**
         * The address prefix for the subnet.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * List of address prefixes for the subnet.
         */
        addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An array of references to the delegations on the subnet.
         */
        delegations?: pulumi.Input<pulumi.Input<inputs.network.DelegationResponse>[]>;
        /**
         * Array of IpAllocation which reference this subnet.
         */
        ipAllocations?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * Array of IP configuration profiles which reference this subnet.
         */
        ipConfigurationProfiles: pulumi.Input<pulumi.Input<inputs.network.IPConfigurationProfileResponse>[]>;
        /**
         * An array of references to the network interface IP configurations using subnet.
         */
        ipConfigurations: pulumi.Input<pulumi.Input<inputs.network.IPConfigurationResponse>[]>;
        /**
         * Nat gateway associated with this subnet.
         */
        natGateway?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The reference to the NetworkSecurityGroup resource.
         */
        networkSecurityGroup?: pulumi.Input<inputs.network.NetworkSecurityGroupResponse>;
        /**
         * Enable or Disable apply network policies on private end point in the subnet.
         */
        privateEndpointNetworkPolicies?: pulumi.Input<string>;
        /**
         * An array of references to private endpoints.
         */
        privateEndpoints: pulumi.Input<pulumi.Input<inputs.network.PrivateEndpointResponse>[]>;
        /**
         * Enable or Disable apply network policies on private link service in the subnet.
         */
        privateLinkServiceNetworkPolicies?: pulumi.Input<string>;
        /**
         * The provisioning state of the subnet resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
         */
        purpose: pulumi.Input<string>;
        /**
         * An array of references to the external resources using subnet.
         */
        resourceNavigationLinks: pulumi.Input<pulumi.Input<inputs.network.ResourceNavigationLinkResponse>[]>;
        /**
         * The reference to the RouteTable resource.
         */
        routeTable?: pulumi.Input<inputs.network.RouteTableResponse>;
        /**
         * An array of references to services injecting into this subnet.
         */
        serviceAssociationLinks: pulumi.Input<pulumi.Input<inputs.network.ServiceAssociationLinkResponse>[]>;
        /**
         * An array of service endpoint policies.
         */
        serviceEndpointPolicies?: pulumi.Input<pulumi.Input<inputs.network.ServiceEndpointPolicyResponse>[]>;
        /**
         * An array of service endpoints.
         */
        serviceEndpoints?: pulumi.Input<pulumi.Input<inputs.network.ServiceEndpointPropertiesFormatResponse>[]>;
    }

    /**
     * Subnet in a virtual network resource.
     */
    export interface SubnetResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the subnet.
         */
        properties?: pulumi.Input<inputs.network.SubnetPropertiesFormatResponse>;
    }

    /**
     * Parameters that define the configuration of traffic analytics.
     */
    export interface TrafficAnalyticsConfigurationProperties {
        /**
         * Flag to enable/disable traffic analytics.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The interval in minutes which would decide how frequently TA service should do flow analytics.
         */
        trafficAnalyticsInterval?: pulumi.Input<number>;
        /**
         * The resource guid of the attached workspace.
         */
        workspaceId?: pulumi.Input<string>;
        /**
         * The location of the attached workspace.
         */
        workspaceRegion?: pulumi.Input<string>;
        /**
         * Resource Id of the attached workspace.
         */
        workspaceResourceId?: pulumi.Input<string>;
    }

    /**
     * Parameters that define the configuration of traffic analytics.
     */
    export interface TrafficAnalyticsConfigurationPropertiesResponse {
        /**
         * Flag to enable/disable traffic analytics.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The interval in minutes which would decide how frequently TA service should do flow analytics.
         */
        trafficAnalyticsInterval?: pulumi.Input<number>;
        /**
         * The resource guid of the attached workspace.
         */
        workspaceId?: pulumi.Input<string>;
        /**
         * The location of the attached workspace.
         */
        workspaceRegion?: pulumi.Input<string>;
        /**
         * Resource Id of the attached workspace.
         */
        workspaceResourceId?: pulumi.Input<string>;
    }

    /**
     * Parameters that define the configuration of traffic analytics.
     */
    export interface TrafficAnalyticsProperties {
        /**
         * Parameters that define the configuration of traffic analytics.
         */
        networkWatcherFlowAnalyticsConfiguration?: pulumi.Input<inputs.network.TrafficAnalyticsConfigurationProperties>;
    }

    /**
     * Parameters that define the configuration of traffic analytics.
     */
    export interface TrafficAnalyticsPropertiesResponse {
        /**
         * Parameters that define the configuration of traffic analytics.
         */
        networkWatcherFlowAnalyticsConfiguration?: pulumi.Input<inputs.network.TrafficAnalyticsConfigurationPropertiesResponse>;
    }

    /**
     * An traffic selector policy for a virtual network gateway connection.
     */
    export interface TrafficSelectorPolicy {
        /**
         * A collection of local address spaces in CIDR format.
         */
        localAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A collection of remote address spaces in CIDR format.
         */
        remoteAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * An traffic selector policy for a virtual network gateway connection.
     */
    export interface TrafficSelectorPolicyResponse {
        /**
         * A collection of local address spaces in CIDR format.
         */
        localAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A collection of remote address spaces in CIDR format.
         */
        remoteAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * VirtualNetworkGatewayConnection properties.
     */
    export interface TunnelConnectionHealthResponse {
        /**
         * Virtual Network Gateway connection status.
         */
        connectionStatus: pulumi.Input<string>;
        /**
         * The Egress Bytes Transferred in this connection.
         */
        egressBytesTransferred: pulumi.Input<number>;
        /**
         * The Ingress Bytes Transferred in this connection.
         */
        ingressBytesTransferred: pulumi.Input<number>;
        /**
         * The time at which connection was established in Utc format.
         */
        lastConnectionEstablishedUtcTime: pulumi.Input<string>;
        /**
         * Tunnel name.
         */
        tunnel: pulumi.Input<string>;
    }

    /**
     * Network Virtual Appliance NIC properties.
     */
    export interface VirtualApplianceNicPropertiesResponse {
        /**
         * NIC name.
         */
        name: pulumi.Input<string>;
        /**
         * Private IP address.
         */
        privateIpAddress: pulumi.Input<string>;
        /**
         * Public IP address.
         */
        publicIpAddress: pulumi.Input<string>;
    }

    /**
     * Properties of the rule group.
     */
    export interface VirtualApplianceSiteProperties {
        /**
         * Address Prefix.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * Office 365 Policy.
         */
        o365Policy?: pulumi.Input<inputs.network.Office365PolicyProperties>;
    }

    /**
     * Properties of the rule group.
     */
    export interface VirtualApplianceSitePropertiesResponse {
        /**
         * Address Prefix.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * Office 365 Policy.
         */
        o365Policy?: pulumi.Input<inputs.network.Office365PolicyPropertiesResponse>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Network Virtual Appliance Sku Properties.
     */
    export interface VirtualApplianceSkuProperties {
        /**
         * Virtual Appliance Scale Unit.
         */
        bundledScaleUnit?: pulumi.Input<string>;
        /**
         * Virtual Appliance Version.
         */
        marketPlaceVersion?: pulumi.Input<string>;
        /**
         * Virtual Appliance Vendor.
         */
        vendor?: pulumi.Input<string>;
    }

    /**
     * Network Virtual Appliance Sku Properties.
     */
    export interface VirtualApplianceSkuPropertiesResponse {
        /**
         * Virtual Appliance Scale Unit.
         */
        bundledScaleUnit?: pulumi.Input<string>;
        /**
         * Virtual Appliance Version.
         */
        marketPlaceVersion?: pulumi.Input<string>;
        /**
         * Virtual Appliance Vendor.
         */
        vendor?: pulumi.Input<string>;
    }

    /**
     * Virtual Hub identifier.
     */
    export interface VirtualHubId {
        /**
         * The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Virtual Hub identifier.
     */
    export interface VirtualHubIdResponse {
        /**
         * The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Parameters for VirtualHub.
     */
    export interface VirtualHubProperties {
        /**
         * Address-prefix for this VirtualHub.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * The azureFirewall associated with this VirtualHub.
         */
        azureFirewall?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The expressRouteGateway associated with this VirtualHub.
         */
        expressRouteGateway?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The P2SVpnGateway associated with this VirtualHub.
         */
        p2SVpnGateway?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The routeTable associated with this virtual hub.
         */
        routeTable?: pulumi.Input<inputs.network.VirtualHubRouteTable>;
        /**
         * The routing state.
         */
        routingState?: pulumi.Input<string>;
        /**
         * The securityPartnerProvider associated with this VirtualHub.
         */
        securityPartnerProvider?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The Security Provider name.
         */
        securityProviderName?: pulumi.Input<string>;
        /**
         * The sku of this VirtualHub.
         */
        sku?: pulumi.Input<string>;
        /**
         * List of all virtual hub route table v2s associated with this VirtualHub.
         */
        virtualHubRouteTableV2s?: pulumi.Input<pulumi.Input<inputs.network.VirtualHubRouteTableV2>[]>;
        /**
         * VirtualRouter ASN.
         */
        virtualRouterAsn?: pulumi.Input<number>;
        /**
         * VirtualRouter IPs.
         */
        virtualRouterIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The VirtualWAN to which the VirtualHub belongs.
         */
        virtualWan?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The VpnGateway associated with this VirtualHub.
         */
        vpnGateway?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Parameters for VirtualHub.
     */
    export interface VirtualHubPropertiesResponse {
        /**
         * Address-prefix for this VirtualHub.
         */
        addressPrefix?: pulumi.Input<string>;
        /**
         * The azureFirewall associated with this VirtualHub.
         */
        azureFirewall?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * List of references to Bgp Connections.
         */
        bgpConnections: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The expressRouteGateway associated with this VirtualHub.
         */
        expressRouteGateway?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * List of references to IpConfigurations.
         */
        ipConfigurations: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The P2SVpnGateway associated with this VirtualHub.
         */
        p2SVpnGateway?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The provisioning state of the virtual hub resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The routeTable associated with this virtual hub.
         */
        routeTable?: pulumi.Input<inputs.network.VirtualHubRouteTableResponse>;
        /**
         * The routing state.
         */
        routingState?: pulumi.Input<string>;
        /**
         * The securityPartnerProvider associated with this VirtualHub.
         */
        securityPartnerProvider?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The Security Provider name.
         */
        securityProviderName?: pulumi.Input<string>;
        /**
         * The sku of this VirtualHub.
         */
        sku?: pulumi.Input<string>;
        /**
         * List of all virtual hub route table v2s associated with this VirtualHub.
         */
        virtualHubRouteTableV2s?: pulumi.Input<pulumi.Input<inputs.network.VirtualHubRouteTableV2Response>[]>;
        /**
         * VirtualRouter ASN.
         */
        virtualRouterAsn?: pulumi.Input<number>;
        /**
         * VirtualRouter IPs.
         */
        virtualRouterIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The VirtualWAN to which the VirtualHub belongs.
         */
        virtualWan?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The VpnGateway associated with this VirtualHub.
         */
        vpnGateway?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * VirtualHub route.
     */
    export interface VirtualHubRouteResponse {
        /**
         * List of all addressPrefixes.
         */
        addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * NextHop ip address.
         */
        nextHopIpAddress?: pulumi.Input<string>;
    }

    /**
     * VirtualHubRouteTableV2 Resource.
     */
    export interface VirtualHubRouteTable {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the virtual hub route table v2.
         */
        properties: pulumi.Input<inputs.network.VirtualHubRouteTableV2PropertiesResponse>;
    }

    /**
     * VirtualHub route table.
     */
    export interface VirtualHubRouteTableResponse {
        /**
         * List of all routes.
         */
        routes?: pulumi.Input<pulumi.Input<inputs.network.VirtualHubRouteResponse>[]>;
    }

    /**
     * VirtualHubRouteTableV2 Resource.
     */
    export interface VirtualHubRouteTableV2 {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the virtual hub route table v2.
         */
        properties?: pulumi.Input<inputs.network.VirtualHubRouteTableV2Properties>;
    }

    /**
     * Parameters for VirtualHubRouteTableV2.
     */
    export interface VirtualHubRouteTableV2Properties {
        /**
         * List of all connections attached to this route table v2.
         */
        attachedConnections?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of all routes.
         */
        routes?: pulumi.Input<pulumi.Input<inputs.network.VirtualHubRouteV2>[]>;
    }

    /**
     * Parameters for VirtualHubRouteTableV2.
     */
    export interface VirtualHubRouteTableV2PropertiesResponse {
        /**
         * List of all connections attached to this route table v2.
         */
        attachedConnections?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The provisioning state of the virtual hub route table v2 resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * List of all routes.
         */
        routes?: pulumi.Input<pulumi.Input<inputs.network.VirtualHubRouteV2Response>[]>;
    }

    /**
     * VirtualHubRouteTableV2 Resource.
     */
    export interface VirtualHubRouteTableV2Response {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the virtual hub route table v2.
         */
        properties?: pulumi.Input<inputs.network.VirtualHubRouteTableV2PropertiesResponse>;
    }

    /**
     * VirtualHubRouteTableV2 route.
     */
    export interface VirtualHubRouteV2 {
        /**
         * The type of destinations.
         */
        destinationType?: pulumi.Input<string>;
        /**
         * List of all destinations.
         */
        destinations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The type of next hops.
         */
        nextHopType?: pulumi.Input<string>;
        /**
         * NextHops ip address.
         */
        nextHops?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * VirtualHubRouteTableV2 route.
     */
    export interface VirtualHubRouteV2Response {
        /**
         * The type of destinations.
         */
        destinationType?: pulumi.Input<string>;
        /**
         * List of all destinations.
         */
        destinations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The type of next hops.
         */
        nextHopType?: pulumi.Input<string>;
        /**
         * NextHops ip address.
         */
        nextHops?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
     */
    export interface VirtualNetworkBgpCommunities {
        /**
         * The BGP community associated with the virtual network.
         */
        virtualNetworkCommunity: pulumi.Input<string>;
    }

    /**
     * Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
     */
    export interface VirtualNetworkBgpCommunitiesResponse {
        /**
         * The BGP community associated with the region of the virtual network.
         */
        regionalCommunity: pulumi.Input<string>;
        /**
         * The BGP community associated with the virtual network.
         */
        virtualNetworkCommunity: pulumi.Input<string>;
    }

    /**
     * A common class for general resource information.
     */
    export interface VirtualNetworkGateway {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the virtual network gateway.
         */
        properties: pulumi.Input<inputs.network.VirtualNetworkGatewayPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * VirtualNetworkGatewayConnection properties.
     */
    export interface VirtualNetworkGatewayConnectionPropertiesFormat {
        /**
         * The authorizationKey.
         */
        authorizationKey?: pulumi.Input<string>;
        /**
         * Connection protocol used for this connection.
         */
        connectionProtocol?: pulumi.Input<string>;
        /**
         * Gateway connection type.
         */
        connectionType: pulumi.Input<string>;
        /**
         * The dead peer detection timeout of this connection in seconds.
         */
        dpdTimeoutSeconds?: pulumi.Input<number>;
        /**
         * EnableBgp flag.
         */
        enableBgp?: pulumi.Input<boolean>;
        /**
         * Bypass ExpressRoute Gateway for data forwarding.
         */
        expressRouteGatewayBypass?: pulumi.Input<boolean>;
        /**
         * The IPSec Policies to be considered by this connection.
         */
        ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicy>[]>;
        /**
         * The reference to local network gateway resource.
         */
        localNetworkGateway2?: pulumi.Input<inputs.network.LocalNetworkGateway>;
        /**
         * The reference to peerings resource.
         */
        peer?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The routing weight.
         */
        routingWeight?: pulumi.Input<number>;
        /**
         * The IPSec shared key.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * The Traffic Selector Policies to be considered by this connection.
         */
        trafficSelectorPolicies?: pulumi.Input<pulumi.Input<inputs.network.TrafficSelectorPolicy>[]>;
        /**
         * Use private local Azure IP for the connection.
         */
        useLocalAzureIpAddress?: pulumi.Input<boolean>;
        /**
         * Enable policy-based traffic selectors.
         */
        usePolicyBasedTrafficSelectors?: pulumi.Input<boolean>;
        /**
         * The reference to virtual network gateway resource.
         */
        virtualNetworkGateway1: pulumi.Input<inputs.network.VirtualNetworkGateway>;
        /**
         * The reference to virtual network gateway resource.
         */
        virtualNetworkGateway2?: pulumi.Input<inputs.network.VirtualNetworkGateway>;
    }

    /**
     * VirtualNetworkGatewayConnection properties.
     */
    export interface VirtualNetworkGatewayConnectionPropertiesFormatResponse {
        /**
         * The authorizationKey.
         */
        authorizationKey?: pulumi.Input<string>;
        /**
         * Connection protocol used for this connection.
         */
        connectionProtocol?: pulumi.Input<string>;
        /**
         * Virtual Network Gateway connection status.
         */
        connectionStatus: pulumi.Input<string>;
        /**
         * Gateway connection type.
         */
        connectionType: pulumi.Input<string>;
        /**
         * The dead peer detection timeout of this connection in seconds.
         */
        dpdTimeoutSeconds?: pulumi.Input<number>;
        /**
         * The egress bytes transferred in this connection.
         */
        egressBytesTransferred: pulumi.Input<number>;
        /**
         * EnableBgp flag.
         */
        enableBgp?: pulumi.Input<boolean>;
        /**
         * Bypass ExpressRoute Gateway for data forwarding.
         */
        expressRouteGatewayBypass?: pulumi.Input<boolean>;
        /**
         * The ingress bytes transferred in this connection.
         */
        ingressBytesTransferred: pulumi.Input<number>;
        /**
         * The IPSec Policies to be considered by this connection.
         */
        ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicyResponse>[]>;
        /**
         * The reference to local network gateway resource.
         */
        localNetworkGateway2?: pulumi.Input<inputs.network.LocalNetworkGatewayResponse>;
        /**
         * The reference to peerings resource.
         */
        peer?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The provisioning state of the virtual network gateway connection resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the virtual network gateway connection resource.
         */
        resourceGuid: pulumi.Input<string>;
        /**
         * The routing weight.
         */
        routingWeight?: pulumi.Input<number>;
        /**
         * The IPSec shared key.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * The Traffic Selector Policies to be considered by this connection.
         */
        trafficSelectorPolicies?: pulumi.Input<pulumi.Input<inputs.network.TrafficSelectorPolicyResponse>[]>;
        /**
         * Collection of all tunnels' connection health status.
         */
        tunnelConnectionStatus: pulumi.Input<pulumi.Input<inputs.network.TunnelConnectionHealthResponse>[]>;
        /**
         * Use private local Azure IP for the connection.
         */
        useLocalAzureIpAddress?: pulumi.Input<boolean>;
        /**
         * Enable policy-based traffic selectors.
         */
        usePolicyBasedTrafficSelectors?: pulumi.Input<boolean>;
        /**
         * The reference to virtual network gateway resource.
         */
        virtualNetworkGateway1: pulumi.Input<inputs.network.VirtualNetworkGatewayResponse>;
        /**
         * The reference to virtual network gateway resource.
         */
        virtualNetworkGateway2?: pulumi.Input<inputs.network.VirtualNetworkGatewayResponse>;
    }

    /**
     * IP configuration for virtual network gateway.
     */
    export interface VirtualNetworkGatewayIPConfiguration {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the virtual network gateway ip configuration.
         */
        properties?: pulumi.Input<inputs.network.VirtualNetworkGatewayIPConfigurationPropertiesFormat>;
    }

    /**
     * Properties of VirtualNetworkGatewayIPConfiguration.
     */
    export interface VirtualNetworkGatewayIPConfigurationPropertiesFormat {
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The reference to the public IP resource.
         */
        publicIPAddress?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Properties of VirtualNetworkGatewayIPConfiguration.
     */
    export interface VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse {
        /**
         * Private IP Address for this gateway.
         */
        privateIPAddress: pulumi.Input<string>;
        /**
         * The private IP address allocation method.
         */
        privateIPAllocationMethod?: pulumi.Input<string>;
        /**
         * The provisioning state of the virtual network gateway IP configuration resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the public IP resource.
         */
        publicIPAddress?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The reference to the subnet resource.
         */
        subnet?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * IP configuration for virtual network gateway.
     */
    export interface VirtualNetworkGatewayIPConfigurationResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the virtual network gateway ip configuration.
         */
        properties?: pulumi.Input<inputs.network.VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse>;
    }

    /**
     * VirtualNetworkGateway properties.
     */
    export interface VirtualNetworkGatewayPropertiesFormat {
        /**
         * ActiveActive flag.
         */
        activeActive?: pulumi.Input<boolean>;
        /**
         * Virtual network gateway's BGP speaker settings.
         */
        bgpSettings?: pulumi.Input<inputs.network.BgpSettings>;
        /**
         * The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
         */
        customRoutes?: pulumi.Input<inputs.network.AddressSpace>;
        /**
         * Whether BGP is enabled for this virtual network gateway or not.
         */
        enableBgp?: pulumi.Input<boolean>;
        /**
         * Whether dns forwarding is enabled or not.
         */
        enableDnsForwarding?: pulumi.Input<boolean>;
        /**
         * Whether private IP needs to be enabled on this gateway for connections or not.
         */
        enablePrivateIpAddress?: pulumi.Input<boolean>;
        /**
         * The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
         */
        gatewayDefaultSite?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The type of this virtual network gateway.
         */
        gatewayType?: pulumi.Input<string>;
        /**
         * IP configurations for virtual network gateway.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkGatewayIPConfiguration>[]>;
        /**
         * The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
         */
        sku?: pulumi.Input<inputs.network.VirtualNetworkGatewaySku>;
        /**
         * The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
         */
        vpnClientConfiguration?: pulumi.Input<inputs.network.VpnClientConfiguration>;
        /**
         * The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
         */
        vpnGatewayGeneration?: pulumi.Input<string>;
        /**
         * The type of this virtual network gateway.
         */
        vpnType?: pulumi.Input<string>;
    }

    /**
     * VirtualNetworkGateway properties.
     */
    export interface VirtualNetworkGatewayPropertiesFormatResponse {
        /**
         * ActiveActive flag.
         */
        activeActive?: pulumi.Input<boolean>;
        /**
         * Virtual network gateway's BGP speaker settings.
         */
        bgpSettings?: pulumi.Input<inputs.network.BgpSettingsResponse>;
        /**
         * The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
         */
        customRoutes?: pulumi.Input<inputs.network.AddressSpaceResponse>;
        /**
         * Whether BGP is enabled for this virtual network gateway or not.
         */
        enableBgp?: pulumi.Input<boolean>;
        /**
         * Whether dns forwarding is enabled or not.
         */
        enableDnsForwarding?: pulumi.Input<boolean>;
        /**
         * Whether private IP needs to be enabled on this gateway for connections or not.
         */
        enablePrivateIpAddress?: pulumi.Input<boolean>;
        /**
         * The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
         */
        gatewayDefaultSite?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The type of this virtual network gateway.
         */
        gatewayType?: pulumi.Input<string>;
        /**
         * The IP address allocated by the gateway to which dns requests can be sent.
         */
        inboundDnsForwardingEndpoint: pulumi.Input<string>;
        /**
         * IP configurations for virtual network gateway.
         */
        ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkGatewayIPConfigurationResponse>[]>;
        /**
         * The provisioning state of the virtual network gateway resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the virtual network gateway resource.
         */
        resourceGuid: pulumi.Input<string>;
        /**
         * The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
         */
        sku?: pulumi.Input<inputs.network.VirtualNetworkGatewaySkuResponse>;
        /**
         * The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
         */
        vpnClientConfiguration?: pulumi.Input<inputs.network.VpnClientConfigurationResponse>;
        /**
         * The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
         */
        vpnGatewayGeneration?: pulumi.Input<string>;
        /**
         * The type of this virtual network gateway.
         */
        vpnType?: pulumi.Input<string>;
    }

    /**
     * A common class for general resource information.
     */
    export interface VirtualNetworkGatewayResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the virtual network gateway.
         */
        properties: pulumi.Input<inputs.network.VirtualNetworkGatewayPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * VirtualNetworkGatewaySku details.
     */
    export interface VirtualNetworkGatewaySku {
        /**
         * Gateway SKU name.
         */
        name?: pulumi.Input<string>;
        /**
         * Gateway SKU tier.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * VirtualNetworkGatewaySku details.
     */
    export interface VirtualNetworkGatewaySkuResponse {
        /**
         * The capacity.
         */
        capacity: pulumi.Input<number>;
        /**
         * Gateway SKU name.
         */
        name?: pulumi.Input<string>;
        /**
         * Gateway SKU tier.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Represents the properties of the Private DNS zone.
     */
    export interface VirtualNetworkLinkProperties {
        /**
         * Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?
         */
        registrationEnabled?: pulumi.Input<boolean>;
        /**
         * The reference of the virtual network.
         */
        virtualNetwork?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Represents the properties of the Private DNS zone.
     */
    export interface VirtualNetworkLinkPropertiesResponse {
        /**
         * The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?
         */
        registrationEnabled?: pulumi.Input<boolean>;
        /**
         * The reference of the virtual network.
         */
        virtualNetwork?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The status of the virtual network link to the Private DNS zone. Possible values are 'InProgress' and 'Done'. This is a read-only property and any attempt to set this value will be ignored.
         */
        virtualNetworkLinkState: pulumi.Input<string>;
    }

    /**
     * Peerings in a virtual network resource.
     */
    export interface VirtualNetworkPeering {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the virtual network peering.
         */
        properties?: pulumi.Input<inputs.network.VirtualNetworkPeeringPropertiesFormat>;
    }

    /**
     * Properties of the virtual network peering.
     */
    export interface VirtualNetworkPeeringPropertiesFormat {
        /**
         * Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
         */
        allowForwardedTraffic?: pulumi.Input<boolean>;
        /**
         * If gateway links can be used in remote virtual networking to link to this virtual network.
         */
        allowGatewayTransit?: pulumi.Input<boolean>;
        /**
         * Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
         */
        allowVirtualNetworkAccess?: pulumi.Input<boolean>;
        /**
         * The status of the virtual network peering.
         */
        peeringState?: pulumi.Input<string>;
        /**
         * The reference to the remote virtual network address space.
         */
        remoteAddressSpace?: pulumi.Input<inputs.network.AddressSpace>;
        /**
         * The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
         */
        remoteVirtualNetwork?: pulumi.Input<inputs.network.SubResource>;
        /**
         * If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
         */
        useRemoteGateways?: pulumi.Input<boolean>;
    }

    /**
     * Properties of the virtual network peering.
     */
    export interface VirtualNetworkPeeringPropertiesFormatResponse {
        /**
         * Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
         */
        allowForwardedTraffic?: pulumi.Input<boolean>;
        /**
         * If gateway links can be used in remote virtual networking to link to this virtual network.
         */
        allowGatewayTransit?: pulumi.Input<boolean>;
        /**
         * Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
         */
        allowVirtualNetworkAccess?: pulumi.Input<boolean>;
        /**
         * The status of the virtual network peering.
         */
        peeringState?: pulumi.Input<string>;
        /**
         * The provisioning state of the virtual network peering resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reference to the remote virtual network address space.
         */
        remoteAddressSpace?: pulumi.Input<inputs.network.AddressSpaceResponse>;
        /**
         * The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
         */
        remoteVirtualNetwork?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
         */
        useRemoteGateways?: pulumi.Input<boolean>;
    }

    /**
     * Peerings in a virtual network resource.
     */
    export interface VirtualNetworkPeeringResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the virtual network peering.
         */
        properties?: pulumi.Input<inputs.network.VirtualNetworkPeeringPropertiesFormatResponse>;
    }

    /**
     * Properties of the virtual network.
     */
    export interface VirtualNetworkPropertiesFormat {
        /**
         * The AddressSpace that contains an array of IP address ranges that can be used by subnets.
         */
        addressSpace?: pulumi.Input<inputs.network.AddressSpace>;
        /**
         * Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
         */
        bgpCommunities?: pulumi.Input<inputs.network.VirtualNetworkBgpCommunities>;
        /**
         * The DDoS protection plan associated with the virtual network.
         */
        ddosProtectionPlan?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
         */
        dhcpOptions?: pulumi.Input<inputs.network.DhcpOptions>;
        /**
         * Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
         */
        enableDdosProtection?: pulumi.Input<boolean>;
        /**
         * Indicates if VM protection is enabled for all the subnets in the virtual network.
         */
        enableVmProtection?: pulumi.Input<boolean>;
        /**
         * Array of IpAllocation which reference this VNET.
         */
        ipAllocations?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * A list of subnets in a Virtual Network.
         */
        subnets?: pulumi.Input<pulumi.Input<inputs.network.Subnet>[]>;
        /**
         * A list of peerings in a Virtual Network.
         */
        virtualNetworkPeerings?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkPeering>[]>;
    }

    /**
     * Properties of the virtual network.
     */
    export interface VirtualNetworkPropertiesFormatResponse {
        /**
         * The AddressSpace that contains an array of IP address ranges that can be used by subnets.
         */
        addressSpace?: pulumi.Input<inputs.network.AddressSpaceResponse>;
        /**
         * Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
         */
        bgpCommunities?: pulumi.Input<inputs.network.VirtualNetworkBgpCommunitiesResponse>;
        /**
         * The DDoS protection plan associated with the virtual network.
         */
        ddosProtectionPlan?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
         */
        dhcpOptions?: pulumi.Input<inputs.network.DhcpOptionsResponse>;
        /**
         * Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
         */
        enableDdosProtection?: pulumi.Input<boolean>;
        /**
         * Indicates if VM protection is enabled for all the subnets in the virtual network.
         */
        enableVmProtection?: pulumi.Input<boolean>;
        /**
         * Array of IpAllocation which reference this VNET.
         */
        ipAllocations?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The provisioning state of the virtual network resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resourceGuid property of the Virtual Network resource.
         */
        resourceGuid: pulumi.Input<string>;
        /**
         * A list of subnets in a Virtual Network.
         */
        subnets?: pulumi.Input<pulumi.Input<inputs.network.SubnetResponse>[]>;
        /**
         * A list of peerings in a Virtual Network.
         */
        virtualNetworkPeerings?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkPeeringResponse>[]>;
    }

    /**
     * Virtual Network Tap resource.
     */
    export interface VirtualNetworkTap {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Virtual Network Tap Properties.
         */
        properties?: pulumi.Input<inputs.network.VirtualNetworkTapPropertiesFormat>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Virtual Network Tap properties.
     */
    export interface VirtualNetworkTapPropertiesFormat {
        /**
         * The reference to the private IP address on the internal Load Balancer that will receive the tap.
         */
        destinationLoadBalancerFrontEndIPConfiguration?: pulumi.Input<inputs.network.FrontendIPConfiguration>;
        /**
         * The reference to the private IP Address of the collector nic that will receive the tap.
         */
        destinationNetworkInterfaceIPConfiguration?: pulumi.Input<inputs.network.NetworkInterfaceIPConfiguration>;
        /**
         * The VXLAN destination port that will receive the tapped traffic.
         */
        destinationPort?: pulumi.Input<number>;
    }

    /**
     * Virtual Network Tap properties.
     */
    export interface VirtualNetworkTapPropertiesFormatResponse {
        /**
         * The reference to the private IP address on the internal Load Balancer that will receive the tap.
         */
        destinationLoadBalancerFrontEndIPConfiguration?: pulumi.Input<inputs.network.FrontendIPConfigurationResponse>;
        /**
         * The reference to the private IP Address of the collector nic that will receive the tap.
         */
        destinationNetworkInterfaceIPConfiguration?: pulumi.Input<inputs.network.NetworkInterfaceIPConfigurationResponse>;
        /**
         * The VXLAN destination port that will receive the tapped traffic.
         */
        destinationPort?: pulumi.Input<number>;
        /**
         * Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
         */
        networkInterfaceTapConfigurations: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceTapConfigurationResponse>[]>;
        /**
         * The provisioning state of the virtual network tap resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The resource GUID property of the virtual network tap resource.
         */
        resourceGuid: pulumi.Input<string>;
    }

    /**
     * Virtual Network Tap resource.
     */
    export interface VirtualNetworkTapResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location?: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Virtual Network Tap Properties.
         */
        properties?: pulumi.Input<inputs.network.VirtualNetworkTapPropertiesFormatResponse>;
        /**
         * Resource tags.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of the rule group.
     */
    export interface VirtualRouterPeeringProperties {
        /**
         * Peer ASN.
         */
        peerAsn?: pulumi.Input<number>;
        /**
         * Peer IP.
         */
        peerIp?: pulumi.Input<string>;
    }

    /**
     * Properties of the rule group.
     */
    export interface VirtualRouterPeeringPropertiesResponse {
        /**
         * Peer ASN.
         */
        peerAsn?: pulumi.Input<number>;
        /**
         * Peer IP.
         */
        peerIp?: pulumi.Input<string>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Virtual Router definition.
     */
    export interface VirtualRouterPropertiesFormat {
        /**
         * The Gateway on which VirtualRouter is hosted.
         */
        hostedGateway?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The Subnet on which VirtualRouter is hosted.
         */
        hostedSubnet?: pulumi.Input<inputs.network.SubResource>;
        /**
         * VirtualRouter ASN.
         */
        virtualRouterAsn?: pulumi.Input<number>;
        /**
         * VirtualRouter IPs.
         */
        virtualRouterIps?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Virtual Router definition.
     */
    export interface VirtualRouterPropertiesFormatResponse {
        /**
         * The Gateway on which VirtualRouter is hosted.
         */
        hostedGateway?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The Subnet on which VirtualRouter is hosted.
         */
        hostedSubnet?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * List of references to VirtualRouterPeerings.
         */
        peerings: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * VirtualRouter ASN.
         */
        virtualRouterAsn?: pulumi.Input<number>;
        /**
         * VirtualRouter IPs.
         */
        virtualRouterIps?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Parameters for VirtualWAN.
     */
    export interface VirtualWanProperties {
        /**
         * True if branch to branch traffic is allowed.
         */
        allowBranchToBranchTraffic?: pulumi.Input<boolean>;
        /**
         * True if Vnet to Vnet traffic is allowed.
         */
        allowVnetToVnetTraffic?: pulumi.Input<boolean>;
        /**
         * Vpn encryption to be disabled or not.
         */
        disableVpnEncryption?: pulumi.Input<boolean>;
        /**
         * The office local breakout category.
         */
        office365LocalBreakoutCategory?: pulumi.Input<string>;
        /**
         * The type of the VirtualWAN.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Parameters for VirtualWAN.
     */
    export interface VirtualWanPropertiesResponse {
        /**
         * True if branch to branch traffic is allowed.
         */
        allowBranchToBranchTraffic?: pulumi.Input<boolean>;
        /**
         * True if Vnet to Vnet traffic is allowed.
         */
        allowVnetToVnetTraffic?: pulumi.Input<boolean>;
        /**
         * Vpn encryption to be disabled or not.
         */
        disableVpnEncryption?: pulumi.Input<boolean>;
        /**
         * The office local breakout category.
         */
        office365LocalBreakoutCategory?: pulumi.Input<string>;
        /**
         * The provisioning state of the virtual WAN resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The type of the VirtualWAN.
         */
        type?: pulumi.Input<string>;
        /**
         * List of VirtualHubs in the VirtualWAN.
         */
        virtualHubs: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * List of VpnSites in the VirtualWAN.
         */
        vpnSites: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
    }

    /**
     * List of routes that control routing from VirtualHub into a virtual network connection.
     */
    export interface VnetRoute {
        /**
         * List of all Static Routes.
         */
        staticRoutes?: pulumi.Input<pulumi.Input<inputs.network.StaticRoute>[]>;
    }

    /**
     * List of routes that control routing from VirtualHub into a virtual network connection.
     */
    export interface VnetRouteResponse {
        /**
         * List of all Static Routes.
         */
        staticRoutes?: pulumi.Input<pulumi.Input<inputs.network.StaticRouteResponse>[]>;
    }

    /**
     * VpnClientConfiguration for P2S client.
     */
    export interface VpnClientConfiguration {
        /**
         * The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
         */
        aadAudience?: pulumi.Input<string>;
        /**
         * The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
         */
        aadIssuer?: pulumi.Input<string>;
        /**
         * The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
         */
        aadTenant?: pulumi.Input<string>;
        /**
         * The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
         */
        radiusServerAddress?: pulumi.Input<string>;
        /**
         * The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
         */
        radiusServerSecret?: pulumi.Input<string>;
        /**
         * The radiusServers property for multiple radius server configuration.
         */
        radiusServers?: pulumi.Input<pulumi.Input<inputs.network.RadiusServer>[]>;
        /**
         * The reference to the address space resource which represents Address space for P2S VpnClient.
         */
        vpnClientAddressPool?: pulumi.Input<inputs.network.AddressSpace>;
        /**
         * VpnClientIpsecPolicies for virtual network gateway P2S client.
         */
        vpnClientIpsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicy>[]>;
        /**
         * VpnClientProtocols for Virtual network gateway.
         */
        vpnClientProtocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VpnClientRevokedCertificate for Virtual network gateway.
         */
        vpnClientRevokedCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnClientRevokedCertificate>[]>;
        /**
         * VpnClientRootCertificate for virtual network gateway.
         */
        vpnClientRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnClientRootCertificate>[]>;
    }

    /**
     * VpnClientConfiguration for P2S client.
     */
    export interface VpnClientConfigurationResponse {
        /**
         * The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
         */
        aadAudience?: pulumi.Input<string>;
        /**
         * The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
         */
        aadIssuer?: pulumi.Input<string>;
        /**
         * The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
         */
        aadTenant?: pulumi.Input<string>;
        /**
         * The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
         */
        radiusServerAddress?: pulumi.Input<string>;
        /**
         * The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
         */
        radiusServerSecret?: pulumi.Input<string>;
        /**
         * The radiusServers property for multiple radius server configuration.
         */
        radiusServers?: pulumi.Input<pulumi.Input<inputs.network.RadiusServerResponse>[]>;
        /**
         * The reference to the address space resource which represents Address space for P2S VpnClient.
         */
        vpnClientAddressPool?: pulumi.Input<inputs.network.AddressSpaceResponse>;
        /**
         * VpnClientIpsecPolicies for virtual network gateway P2S client.
         */
        vpnClientIpsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicyResponse>[]>;
        /**
         * VpnClientProtocols for Virtual network gateway.
         */
        vpnClientProtocols?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VpnClientRevokedCertificate for Virtual network gateway.
         */
        vpnClientRevokedCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnClientRevokedCertificateResponse>[]>;
        /**
         * VpnClientRootCertificate for virtual network gateway.
         */
        vpnClientRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnClientRootCertificateResponse>[]>;
    }

    /**
     * VpnClientConnectionHealth properties.
     */
    export interface VpnClientConnectionHealthResponse {
        /**
         * List of allocated ip addresses to the connected p2s vpn clients.
         */
        allocatedIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Total of the Egress Bytes Transferred in this connection.
         */
        totalEgressBytesTransferred: pulumi.Input<number>;
        /**
         * Total of the Ingress Bytes Transferred in this P2S Vpn connection.
         */
        totalIngressBytesTransferred: pulumi.Input<number>;
        /**
         * The total of p2s vpn clients connected at this time to this P2SVpnGateway.
         */
        vpnClientConnectionsCount?: pulumi.Input<number>;
    }

    /**
     * VPN client revoked certificate of virtual network gateway.
     */
    export interface VpnClientRevokedCertificate {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the vpn client revoked certificate.
         */
        properties?: pulumi.Input<inputs.network.VpnClientRevokedCertificatePropertiesFormat>;
    }

    /**
     * Properties of the revoked VPN client certificate of virtual network gateway.
     */
    export interface VpnClientRevokedCertificatePropertiesFormat {
        /**
         * The revoked VPN client certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * Properties of the revoked VPN client certificate of virtual network gateway.
     */
    export interface VpnClientRevokedCertificatePropertiesFormatResponse {
        /**
         * The provisioning state of the VPN client revoked certificate resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The revoked VPN client certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * VPN client revoked certificate of virtual network gateway.
     */
    export interface VpnClientRevokedCertificateResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the vpn client revoked certificate.
         */
        properties?: pulumi.Input<inputs.network.VpnClientRevokedCertificatePropertiesFormatResponse>;
    }

    /**
     * VPN client root certificate of virtual network gateway.
     */
    export interface VpnClientRootCertificate {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the vpn client root certificate.
         */
        properties: pulumi.Input<inputs.network.VpnClientRootCertificatePropertiesFormat>;
    }

    /**
     * Properties of SSL certificates of application gateway.
     */
    export interface VpnClientRootCertificatePropertiesFormat {
        /**
         * The certificate public data.
         */
        publicCertData: pulumi.Input<string>;
    }

    /**
     * Properties of SSL certificates of application gateway.
     */
    export interface VpnClientRootCertificatePropertiesFormatResponse {
        /**
         * The provisioning state of the VPN client root certificate resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The certificate public data.
         */
        publicCertData: pulumi.Input<string>;
    }

    /**
     * VPN client root certificate of virtual network gateway.
     */
    export interface VpnClientRootCertificateResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the vpn client root certificate.
         */
        properties: pulumi.Input<inputs.network.VpnClientRootCertificatePropertiesFormatResponse>;
    }

    /**
     * VpnConnection Resource.
     */
    export interface VpnConnection {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the VPN connection.
         */
        properties?: pulumi.Input<inputs.network.VpnConnectionProperties>;
    }

    /**
     * Parameters for VpnConnection.
     */
    export interface VpnConnectionProperties {
        /**
         * Expected bandwidth in MBPS.
         */
        connectionBandwidth?: pulumi.Input<number>;
        /**
         * The connection status.
         */
        connectionStatus?: pulumi.Input<string>;
        /**
         * The dead peer detection timeout for a vpn connection in seconds.
         */
        dpdTimeoutSeconds?: pulumi.Input<number>;
        /**
         * EnableBgp flag.
         */
        enableBgp?: pulumi.Input<boolean>;
        /**
         * Enable internet security.
         */
        enableInternetSecurity?: pulumi.Input<boolean>;
        /**
         * EnableBgp flag.
         */
        enableRateLimiting?: pulumi.Input<boolean>;
        /**
         * The IPSec Policies to be considered by this connection.
         */
        ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicy>[]>;
        /**
         * Id of the connected vpn site.
         */
        remoteVpnSite?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The Routing Configuration indicating the associated and propagated route tables on this connection.
         */
        routingConfiguration?: pulumi.Input<inputs.network.RoutingConfiguration>;
        /**
         * Routing weight for vpn connection.
         */
        routingWeight?: pulumi.Input<number>;
        /**
         * SharedKey for the vpn connection.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * Use local azure ip to initiate connection.
         */
        useLocalAzureIpAddress?: pulumi.Input<boolean>;
        /**
         * Enable policy-based traffic selectors.
         */
        usePolicyBasedTrafficSelectors?: pulumi.Input<boolean>;
        /**
         * Connection protocol used for this connection.
         */
        vpnConnectionProtocolType?: pulumi.Input<string>;
        /**
         * List of all vpn site link connections to the gateway.
         */
        vpnLinkConnections?: pulumi.Input<pulumi.Input<inputs.network.VpnSiteLinkConnection>[]>;
    }

    /**
     * Parameters for VpnConnection.
     */
    export interface VpnConnectionPropertiesResponse {
        /**
         * Expected bandwidth in MBPS.
         */
        connectionBandwidth?: pulumi.Input<number>;
        /**
         * The connection status.
         */
        connectionStatus?: pulumi.Input<string>;
        /**
         * The dead peer detection timeout for a vpn connection in seconds.
         */
        dpdTimeoutSeconds?: pulumi.Input<number>;
        /**
         * Egress bytes transferred.
         */
        egressBytesTransferred: pulumi.Input<number>;
        /**
         * EnableBgp flag.
         */
        enableBgp?: pulumi.Input<boolean>;
        /**
         * Enable internet security.
         */
        enableInternetSecurity?: pulumi.Input<boolean>;
        /**
         * EnableBgp flag.
         */
        enableRateLimiting?: pulumi.Input<boolean>;
        /**
         * Ingress bytes transferred.
         */
        ingressBytesTransferred: pulumi.Input<number>;
        /**
         * The IPSec Policies to be considered by this connection.
         */
        ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicyResponse>[]>;
        /**
         * The provisioning state of the VPN connection resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Id of the connected vpn site.
         */
        remoteVpnSite?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The Routing Configuration indicating the associated and propagated route tables on this connection.
         */
        routingConfiguration?: pulumi.Input<inputs.network.RoutingConfigurationResponse>;
        /**
         * Routing weight for vpn connection.
         */
        routingWeight?: pulumi.Input<number>;
        /**
         * SharedKey for the vpn connection.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * Use local azure ip to initiate connection.
         */
        useLocalAzureIpAddress?: pulumi.Input<boolean>;
        /**
         * Enable policy-based traffic selectors.
         */
        usePolicyBasedTrafficSelectors?: pulumi.Input<boolean>;
        /**
         * Connection protocol used for this connection.
         */
        vpnConnectionProtocolType?: pulumi.Input<string>;
        /**
         * List of all vpn site link connections to the gateway.
         */
        vpnLinkConnections?: pulumi.Input<pulumi.Input<inputs.network.VpnSiteLinkConnectionResponse>[]>;
    }

    /**
     * VpnConnection Resource.
     */
    export interface VpnConnectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the VPN connection.
         */
        properties?: pulumi.Input<inputs.network.VpnConnectionPropertiesResponse>;
    }

    /**
     * Parameters for VpnGateway.
     */
    export interface VpnGatewayProperties {
        /**
         * Local network gateway's BGP speaker settings.
         */
        bgpSettings?: pulumi.Input<inputs.network.BgpSettings>;
        /**
         * List of all vpn connections to the gateway.
         */
        connections?: pulumi.Input<pulumi.Input<inputs.network.VpnConnection>[]>;
        /**
         * The VirtualHub to which the gateway belongs.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResource>;
        /**
         * The scale unit for this vpn gateway.
         */
        vpnGatewayScaleUnit?: pulumi.Input<number>;
    }

    /**
     * Parameters for VpnGateway.
     */
    export interface VpnGatewayPropertiesResponse {
        /**
         * Local network gateway's BGP speaker settings.
         */
        bgpSettings?: pulumi.Input<inputs.network.BgpSettingsResponse>;
        /**
         * List of all vpn connections to the gateway.
         */
        connections?: pulumi.Input<pulumi.Input<inputs.network.VpnConnectionResponse>[]>;
        /**
         * The provisioning state of the VPN gateway resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The VirtualHub to which the gateway belongs.
         */
        virtualHub?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * The scale unit for this vpn gateway.
         */
        vpnGatewayScaleUnit?: pulumi.Input<number>;
    }

    /**
     * BGP settings details for a link.
     */
    export interface VpnLinkBgpSettings {
        /**
         * The BGP speaker's ASN.
         */
        asn?: pulumi.Input<number>;
        /**
         * The BGP peering address and BGP identifier of this BGP speaker.
         */
        bgpPeeringAddress?: pulumi.Input<string>;
    }

    /**
     * BGP settings details for a link.
     */
    export interface VpnLinkBgpSettingsResponse {
        /**
         * The BGP speaker's ASN.
         */
        asn?: pulumi.Input<number>;
        /**
         * The BGP peering address and BGP identifier of this BGP speaker.
         */
        bgpPeeringAddress?: pulumi.Input<string>;
    }

    /**
     * List of properties of a link provider.
     */
    export interface VpnLinkProviderProperties {
        /**
         * Name of the link provider.
         */
        linkProviderName?: pulumi.Input<string>;
        /**
         * Link speed.
         */
        linkSpeedInMbps?: pulumi.Input<number>;
    }

    /**
     * List of properties of a link provider.
     */
    export interface VpnLinkProviderPropertiesResponse {
        /**
         * Name of the link provider.
         */
        linkProviderName?: pulumi.Input<string>;
        /**
         * Link speed.
         */
        linkSpeedInMbps?: pulumi.Input<number>;
    }

    /**
     * Properties of the Radius client root certificate of VpnServerConfiguration.
     */
    export interface VpnServerConfigRadiusClientRootCertificate {
        /**
         * The certificate name.
         */
        name?: pulumi.Input<string>;
        /**
         * The Radius client root certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * Properties of the Radius client root certificate of VpnServerConfiguration.
     */
    export interface VpnServerConfigRadiusClientRootCertificateResponse {
        /**
         * The certificate name.
         */
        name?: pulumi.Input<string>;
        /**
         * The Radius client root certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * Properties of Radius Server root certificate of VpnServerConfiguration.
     */
    export interface VpnServerConfigRadiusServerRootCertificate {
        /**
         * The certificate name.
         */
        name?: pulumi.Input<string>;
        /**
         * The certificate public data.
         */
        publicCertData?: pulumi.Input<string>;
    }

    /**
     * Properties of Radius Server root certificate of VpnServerConfiguration.
     */
    export interface VpnServerConfigRadiusServerRootCertificateResponse {
        /**
         * The certificate name.
         */
        name?: pulumi.Input<string>;
        /**
         * The certificate public data.
         */
        publicCertData?: pulumi.Input<string>;
    }

    /**
     * Properties of the revoked VPN client certificate of VpnServerConfiguration.
     */
    export interface VpnServerConfigVpnClientRevokedCertificate {
        /**
         * The certificate name.
         */
        name?: pulumi.Input<string>;
        /**
         * The revoked VPN client certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * Properties of the revoked VPN client certificate of VpnServerConfiguration.
     */
    export interface VpnServerConfigVpnClientRevokedCertificateResponse {
        /**
         * The certificate name.
         */
        name?: pulumi.Input<string>;
        /**
         * The revoked VPN client certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * Properties of VPN client root certificate of VpnServerConfiguration.
     */
    export interface VpnServerConfigVpnClientRootCertificate {
        /**
         * The certificate name.
         */
        name?: pulumi.Input<string>;
        /**
         * The certificate public data.
         */
        publicCertData?: pulumi.Input<string>;
    }

    /**
     * Properties of VPN client root certificate of VpnServerConfiguration.
     */
    export interface VpnServerConfigVpnClientRootCertificateResponse {
        /**
         * The certificate name.
         */
        name?: pulumi.Input<string>;
        /**
         * The certificate public data.
         */
        publicCertData?: pulumi.Input<string>;
    }

    /**
     * Parameters for VpnServerConfiguration.
     */
    export interface VpnServerConfigurationProperties {
        /**
         * The set of aad vpn authentication parameters.
         */
        aadAuthenticationParameters?: pulumi.Input<inputs.network.AadAuthenticationParameters>;
        /**
         * The name of the VpnServerConfiguration that is unique within a resource group.
         */
        name?: pulumi.Input<string>;
        /**
         * Radius client root certificate of VpnServerConfiguration.
         */
        radiusClientRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnServerConfigRadiusClientRootCertificate>[]>;
        /**
         * The radius server address property of the VpnServerConfiguration resource for point to site client connection.
         */
        radiusServerAddress?: pulumi.Input<string>;
        /**
         * Radius Server root certificate of VpnServerConfiguration.
         */
        radiusServerRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnServerConfigRadiusServerRootCertificate>[]>;
        /**
         * The radius secret property of the VpnServerConfiguration resource for point to site client connection.
         */
        radiusServerSecret?: pulumi.Input<string>;
        /**
         * Multiple Radius Server configuration for VpnServerConfiguration.
         */
        radiusServers?: pulumi.Input<pulumi.Input<inputs.network.RadiusServer>[]>;
        /**
         * VPN authentication types for the VpnServerConfiguration.
         */
        vpnAuthenticationTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VpnClientIpsecPolicies for VpnServerConfiguration.
         */
        vpnClientIpsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicy>[]>;
        /**
         * VPN client revoked certificate of VpnServerConfiguration.
         */
        vpnClientRevokedCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnServerConfigVpnClientRevokedCertificate>[]>;
        /**
         * VPN client root certificate of VpnServerConfiguration.
         */
        vpnClientRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnServerConfigVpnClientRootCertificate>[]>;
        /**
         * VPN protocols for the VpnServerConfiguration.
         */
        vpnProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Parameters for VpnServerConfiguration.
     */
    export interface VpnServerConfigurationPropertiesResponse {
        /**
         * The set of aad vpn authentication parameters.
         */
        aadAuthenticationParameters?: pulumi.Input<inputs.network.AadAuthenticationParametersResponse>;
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * The name of the VpnServerConfiguration that is unique within a resource group.
         */
        name?: pulumi.Input<string>;
        /**
         * List of references to P2SVpnGateways.
         */
        p2SVpnGateways: pulumi.Input<pulumi.Input<inputs.network.P2SVpnGatewayResponse>[]>;
        /**
         * The provisioning state of the VpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Radius client root certificate of VpnServerConfiguration.
         */
        radiusClientRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnServerConfigRadiusClientRootCertificateResponse>[]>;
        /**
         * The radius server address property of the VpnServerConfiguration resource for point to site client connection.
         */
        radiusServerAddress?: pulumi.Input<string>;
        /**
         * Radius Server root certificate of VpnServerConfiguration.
         */
        radiusServerRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnServerConfigRadiusServerRootCertificateResponse>[]>;
        /**
         * The radius secret property of the VpnServerConfiguration resource for point to site client connection.
         */
        radiusServerSecret?: pulumi.Input<string>;
        /**
         * Multiple Radius Server configuration for VpnServerConfiguration.
         */
        radiusServers?: pulumi.Input<pulumi.Input<inputs.network.RadiusServerResponse>[]>;
        /**
         * VPN authentication types for the VpnServerConfiguration.
         */
        vpnAuthenticationTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VpnClientIpsecPolicies for VpnServerConfiguration.
         */
        vpnClientIpsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicyResponse>[]>;
        /**
         * VPN client revoked certificate of VpnServerConfiguration.
         */
        vpnClientRevokedCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnServerConfigVpnClientRevokedCertificateResponse>[]>;
        /**
         * VPN client root certificate of VpnServerConfiguration.
         */
        vpnClientRootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VpnServerConfigVpnClientRootCertificateResponse>[]>;
        /**
         * VPN protocols for the VpnServerConfiguration.
         */
        vpnProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * VpnSiteLink Resource.
     */
    export interface VpnSiteLink {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the VPN site link.
         */
        properties?: pulumi.Input<inputs.network.VpnSiteLinkProperties>;
    }

    /**
     * VpnSiteLinkConnection Resource.
     */
    export interface VpnSiteLinkConnection {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the VPN site link connection.
         */
        properties?: pulumi.Input<inputs.network.VpnSiteLinkConnectionProperties>;
    }

    /**
     * Parameters for VpnConnection.
     */
    export interface VpnSiteLinkConnectionProperties {
        /**
         * Expected bandwidth in MBPS.
         */
        connectionBandwidth?: pulumi.Input<number>;
        /**
         * The connection status.
         */
        connectionStatus?: pulumi.Input<string>;
        /**
         * EnableBgp flag.
         */
        enableBgp?: pulumi.Input<boolean>;
        /**
         * EnableBgp flag.
         */
        enableRateLimiting?: pulumi.Input<boolean>;
        /**
         * The IPSec Policies to be considered by this connection.
         */
        ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicy>[]>;
        /**
         * Routing weight for vpn connection.
         */
        routingWeight?: pulumi.Input<number>;
        /**
         * SharedKey for the vpn connection.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * Use local azure ip to initiate connection.
         */
        useLocalAzureIpAddress?: pulumi.Input<boolean>;
        /**
         * Enable policy-based traffic selectors.
         */
        usePolicyBasedTrafficSelectors?: pulumi.Input<boolean>;
        /**
         * Connection protocol used for this connection.
         */
        vpnConnectionProtocolType?: pulumi.Input<string>;
        /**
         * Id of the connected vpn site link.
         */
        vpnSiteLink?: pulumi.Input<inputs.network.SubResource>;
    }

    /**
     * Parameters for VpnConnection.
     */
    export interface VpnSiteLinkConnectionPropertiesResponse {
        /**
         * Expected bandwidth in MBPS.
         */
        connectionBandwidth?: pulumi.Input<number>;
        /**
         * The connection status.
         */
        connectionStatus?: pulumi.Input<string>;
        /**
         * Egress bytes transferred.
         */
        egressBytesTransferred: pulumi.Input<number>;
        /**
         * EnableBgp flag.
         */
        enableBgp?: pulumi.Input<boolean>;
        /**
         * EnableBgp flag.
         */
        enableRateLimiting?: pulumi.Input<boolean>;
        /**
         * Ingress bytes transferred.
         */
        ingressBytesTransferred: pulumi.Input<number>;
        /**
         * The IPSec Policies to be considered by this connection.
         */
        ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.IpsecPolicyResponse>[]>;
        /**
         * The provisioning state of the VPN site link connection resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Routing weight for vpn connection.
         */
        routingWeight?: pulumi.Input<number>;
        /**
         * SharedKey for the vpn connection.
         */
        sharedKey?: pulumi.Input<string>;
        /**
         * Use local azure ip to initiate connection.
         */
        useLocalAzureIpAddress?: pulumi.Input<boolean>;
        /**
         * Enable policy-based traffic selectors.
         */
        usePolicyBasedTrafficSelectors?: pulumi.Input<boolean>;
        /**
         * Connection protocol used for this connection.
         */
        vpnConnectionProtocolType?: pulumi.Input<string>;
        /**
         * Id of the connected vpn site link.
         */
        vpnSiteLink?: pulumi.Input<inputs.network.SubResourceResponse>;
    }

    /**
     * VpnSiteLinkConnection Resource.
     */
    export interface VpnSiteLinkConnectionResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the VPN site link connection.
         */
        properties?: pulumi.Input<inputs.network.VpnSiteLinkConnectionPropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Parameters for VpnSite.
     */
    export interface VpnSiteLinkProperties {
        /**
         * The set of bgp properties.
         */
        bgpProperties?: pulumi.Input<inputs.network.VpnLinkBgpSettings>;
        /**
         * FQDN of vpn-site-link.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The ip-address for the vpn-site-link.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * The link provider properties.
         */
        linkProperties?: pulumi.Input<inputs.network.VpnLinkProviderProperties>;
    }

    /**
     * Parameters for VpnSite.
     */
    export interface VpnSiteLinkPropertiesResponse {
        /**
         * The set of bgp properties.
         */
        bgpProperties?: pulumi.Input<inputs.network.VpnLinkBgpSettingsResponse>;
        /**
         * FQDN of vpn-site-link.
         */
        fqdn?: pulumi.Input<string>;
        /**
         * The ip-address for the vpn-site-link.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * The link provider properties.
         */
        linkProperties?: pulumi.Input<inputs.network.VpnLinkProviderPropertiesResponse>;
        /**
         * The provisioning state of the VPN site link resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * VpnSiteLink Resource.
     */
    export interface VpnSiteLinkResponse {
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the resource that is unique within a resource group. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Properties of the VPN site link.
         */
        properties?: pulumi.Input<inputs.network.VpnSiteLinkPropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Parameters for VpnSite.
     */
    export interface VpnSiteProperties {
        /**
         * The AddressSpace that contains an array of IP address ranges.
         */
        addressSpace?: pulumi.Input<inputs.network.AddressSpace>;
        /**
         * The set of bgp properties.
         */
        bgpProperties?: pulumi.Input<inputs.network.BgpSettings>;
        /**
         * The device properties.
         */
        deviceProperties?: pulumi.Input<inputs.network.DeviceProperties>;
        /**
         * The ip-address for the vpn-site.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * IsSecuritySite flag.
         */
        isSecuritySite?: pulumi.Input<boolean>;
        /**
         * The key for vpn-site that can be used for connections.
         */
        siteKey?: pulumi.Input<string>;
        /**
         * The VirtualWAN to which the vpnSite belongs.
         */
        virtualWan?: pulumi.Input<inputs.network.SubResource>;
        /**
         * List of all vpn site links.
         */
        vpnSiteLinks?: pulumi.Input<pulumi.Input<inputs.network.VpnSiteLink>[]>;
    }

    /**
     * Parameters for VpnSite.
     */
    export interface VpnSitePropertiesResponse {
        /**
         * The AddressSpace that contains an array of IP address ranges.
         */
        addressSpace?: pulumi.Input<inputs.network.AddressSpaceResponse>;
        /**
         * The set of bgp properties.
         */
        bgpProperties?: pulumi.Input<inputs.network.BgpSettingsResponse>;
        /**
         * The device properties.
         */
        deviceProperties?: pulumi.Input<inputs.network.DevicePropertiesResponse>;
        /**
         * The ip-address for the vpn-site.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * IsSecuritySite flag.
         */
        isSecuritySite?: pulumi.Input<boolean>;
        /**
         * The provisioning state of the VPN site resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The key for vpn-site that can be used for connections.
         */
        siteKey?: pulumi.Input<string>;
        /**
         * The VirtualWAN to which the vpnSite belongs.
         */
        virtualWan?: pulumi.Input<inputs.network.SubResourceResponse>;
        /**
         * List of all vpn site links.
         */
        vpnSiteLinks?: pulumi.Input<pulumi.Input<inputs.network.VpnSiteLinkResponse>[]>;
    }

    /**
     * Defines contents of a web application rule.
     */
    export interface WebApplicationFirewallCustomRule {
        /**
         * Type of Actions.
         */
        action: pulumi.Input<string>;
        /**
         * List of match conditions.
         */
        matchConditions: pulumi.Input<pulumi.Input<inputs.network.MatchCondition>[]>;
        /**
         * The name of the resource that is unique within a policy. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
         */
        priority: pulumi.Input<number>;
        /**
         * The rule type.
         */
        ruleType: pulumi.Input<string>;
    }

    /**
     * Defines contents of a web application rule.
     */
    export interface WebApplicationFirewallCustomRuleResponse {
        /**
         * Type of Actions.
         */
        action: pulumi.Input<string>;
        /**
         * A unique read-only string that changes whenever the resource is updated.
         */
        etag: pulumi.Input<string>;
        /**
         * List of match conditions.
         */
        matchConditions: pulumi.Input<pulumi.Input<inputs.network.MatchConditionResponse>[]>;
        /**
         * The name of the resource that is unique within a policy. This name can be used to access the resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
         */
        priority: pulumi.Input<number>;
        /**
         * The rule type.
         */
        ruleType: pulumi.Input<string>;
    }

    /**
     * Defines web application firewall policy properties.
     */
    export interface WebApplicationFirewallPolicyPropertiesFormat {
        /**
         * The custom rules inside the policy.
         */
        customRules?: pulumi.Input<pulumi.Input<inputs.network.WebApplicationFirewallCustomRule>[]>;
        /**
         * Describes the managedRules structure.
         */
        managedRules: pulumi.Input<inputs.network.ManagedRulesDefinition>;
        /**
         * The PolicySettings for policy.
         */
        policySettings?: pulumi.Input<inputs.network.PolicySettings>;
    }

    /**
     * Defines web application firewall policy properties.
     */
    export interface WebApplicationFirewallPolicyPropertiesFormatResponse {
        /**
         * A collection of references to application gateways.
         */
        applicationGateways: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayResponse>[]>;
        /**
         * The custom rules inside the policy.
         */
        customRules?: pulumi.Input<pulumi.Input<inputs.network.WebApplicationFirewallCustomRuleResponse>[]>;
        /**
         * A collection of references to application gateway http listeners.
         */
        httpListeners: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * Describes the managedRules structure.
         */
        managedRules: pulumi.Input<inputs.network.ManagedRulesDefinitionResponse>;
        /**
         * A collection of references to application gateway path rules.
         */
        pathBasedRules: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The PolicySettings for policy.
         */
        policySettings?: pulumi.Input<inputs.network.PolicySettingsResponse>;
        /**
         * The provisioning state of the web application firewall policy resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Resource status of the policy.
         */
        resourceState: pulumi.Input<string>;
    }

    /**
     * Represents the properties of the zone.
     */
    export interface ZoneProperties {
        /**
         * A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.
         */
        registrationVirtualNetworks?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.
         */
        resolutionVirtualNetworks?: pulumi.Input<pulumi.Input<inputs.network.SubResource>[]>;
        /**
         * The type of this DNS zone (Public or Private).
         */
        zoneType?: pulumi.Input<string>;
    }

    /**
     * Represents the properties of the zone.
     */
    export interface ZonePropertiesResponse {
        /**
         * The maximum number of record sets that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.
         */
        maxNumberOfRecordSets: pulumi.Input<number>;
        /**
         * The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.
         */
        nameServers: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The current number of record sets in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.
         */
        numberOfRecordSets: pulumi.Input<number>;
        /**
         * A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.
         */
        registrationVirtualNetworks?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.
         */
        resolutionVirtualNetworks?: pulumi.Input<pulumi.Input<inputs.network.SubResourceResponse>[]>;
        /**
         * The type of this DNS zone (Public or Private).
         */
        zoneType?: pulumi.Input<string>;
    }
}

export namespace notificationhubs {
    /**
     * Description of a NotificationHub AdmCredential.
     */
    export interface AdmCredential {
        /**
         * Properties of NotificationHub AdmCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.AdmCredentialProperties>;
    }

    /**
     * Description of a NotificationHub AdmCredential.
     */
    export interface AdmCredentialProperties {
        /**
         * The URL of the authorization token.
         */
        authTokenUrl?: pulumi.Input<string>;
        /**
         * The client identifier.
         */
        clientId?: pulumi.Input<string>;
        /**
         * The credential secret access key.
         */
        clientSecret?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub AdmCredential.
     */
    export interface AdmCredentialPropertiesResponse {
        /**
         * The URL of the authorization token.
         */
        authTokenUrl?: pulumi.Input<string>;
        /**
         * The client identifier.
         */
        clientId?: pulumi.Input<string>;
        /**
         * The credential secret access key.
         */
        clientSecret?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub AdmCredential.
     */
    export interface AdmCredentialResponse {
        /**
         * Properties of NotificationHub AdmCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.AdmCredentialPropertiesResponse>;
    }

    /**
     * Description of a NotificationHub ApnsCredential.
     */
    export interface ApnsCredential {
        /**
         * Properties of NotificationHub ApnsCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.ApnsCredentialProperties>;
    }

    /**
     * Description of a NotificationHub ApnsCredential. Note that there is no explicit switch between Certificate and Token Authentication Modes. The mode is determined based on the properties passed in.
     */
    export interface ApnsCredentialProperties {
        /**
         * The APNS certificate. Specify if using Certificate Authentication Mode.
         */
        apnsCertificate?: pulumi.Input<string>;
        /**
         * The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.
         */
        appId?: pulumi.Input<string>;
        /**
         * The name of the application or BundleId. Specify if using Token Authentication Mode.
         */
        appName?: pulumi.Input<string>;
        /**
         * The APNS certificate password if it exists.
         */
        certificateKey?: pulumi.Input<string>;
        /**
         * The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.
         */
        endpoint?: pulumi.Input<string>;
        /**
         * A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
         */
        keyId?: pulumi.Input<string>;
        /**
         * The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
         */
        thumbprint?: pulumi.Input<string>;
        /**
         * Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
         */
        token?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub ApnsCredential. Note that there is no explicit switch between Certificate and Token Authentication Modes. The mode is determined based on the properties passed in.
     */
    export interface ApnsCredentialPropertiesResponse {
        /**
         * The APNS certificate. Specify if using Certificate Authentication Mode.
         */
        apnsCertificate?: pulumi.Input<string>;
        /**
         * The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.
         */
        appId?: pulumi.Input<string>;
        /**
         * The name of the application or BundleId. Specify if using Token Authentication Mode.
         */
        appName?: pulumi.Input<string>;
        /**
         * The APNS certificate password if it exists.
         */
        certificateKey?: pulumi.Input<string>;
        /**
         * The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.
         */
        endpoint?: pulumi.Input<string>;
        /**
         * A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
         */
        keyId?: pulumi.Input<string>;
        /**
         * The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
         */
        thumbprint?: pulumi.Input<string>;
        /**
         * Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
         */
        token?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub ApnsCredential.
     */
    export interface ApnsCredentialResponse {
        /**
         * Properties of NotificationHub ApnsCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.ApnsCredentialPropertiesResponse>;
    }

    /**
     * Description of a NotificationHub BaiduCredential.
     */
    export interface BaiduCredential {
        /**
         * Properties of NotificationHub BaiduCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.BaiduCredentialProperties>;
    }

    /**
     * Description of a NotificationHub BaiduCredential.
     */
    export interface BaiduCredentialProperties {
        /**
         * Baidu Api Key.
         */
        baiduApiKey?: pulumi.Input<string>;
        /**
         * Baidu Endpoint.
         */
        baiduEndPoint?: pulumi.Input<string>;
        /**
         * Baidu Secret Key
         */
        baiduSecretKey?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub BaiduCredential.
     */
    export interface BaiduCredentialPropertiesResponse {
        /**
         * Baidu Api Key.
         */
        baiduApiKey?: pulumi.Input<string>;
        /**
         * Baidu Endpoint.
         */
        baiduEndPoint?: pulumi.Input<string>;
        /**
         * Baidu Secret Key
         */
        baiduSecretKey?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub BaiduCredential.
     */
    export interface BaiduCredentialResponse {
        /**
         * Properties of NotificationHub BaiduCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.BaiduCredentialPropertiesResponse>;
    }

    /**
     * Description of a NotificationHub GcmCredential.
     */
    export interface GcmCredential {
        /**
         * Properties of NotificationHub GcmCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.GcmCredentialProperties>;
    }

    /**
     * Description of a NotificationHub GcmCredential.
     */
    export interface GcmCredentialProperties {
        /**
         * The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'
         */
        gcmEndpoint?: pulumi.Input<string>;
        /**
         * The Google API key.
         */
        googleApiKey?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub GcmCredential.
     */
    export interface GcmCredentialPropertiesResponse {
        /**
         * The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'
         */
        gcmEndpoint?: pulumi.Input<string>;
        /**
         * The Google API key.
         */
        googleApiKey?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub GcmCredential.
     */
    export interface GcmCredentialResponse {
        /**
         * Properties of NotificationHub GcmCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.GcmCredentialPropertiesResponse>;
    }

    /**
     * Description of a NotificationHub MpnsCredential.
     */
    export interface MpnsCredential {
        /**
         * Properties of NotificationHub MpnsCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.MpnsCredentialProperties>;
    }

    /**
     * Description of a NotificationHub MpnsCredential.
     */
    export interface MpnsCredentialProperties {
        /**
         * The certificate key for this credential.
         */
        certificateKey?: pulumi.Input<string>;
        /**
         * The MPNS certificate.
         */
        mpnsCertificate?: pulumi.Input<string>;
        /**
         * The MPNS certificate Thumbprint
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub MpnsCredential.
     */
    export interface MpnsCredentialPropertiesResponse {
        /**
         * The certificate key for this credential.
         */
        certificateKey?: pulumi.Input<string>;
        /**
         * The MPNS certificate.
         */
        mpnsCertificate?: pulumi.Input<string>;
        /**
         * The MPNS certificate Thumbprint
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub MpnsCredential.
     */
    export interface MpnsCredentialResponse {
        /**
         * Properties of NotificationHub MpnsCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.MpnsCredentialPropertiesResponse>;
    }

    /**
     * Namespace properties.
     */
    export interface NamespaceProperties {
        /**
         * The time the namespace was created.
         */
        createdAt?: pulumi.Input<string>;
        /**
         * Whether or not the namespace is set as Critical.
         */
        critical?: pulumi.Input<boolean>;
        /**
         * Data center for the namespace
         */
        dataCenter?: pulumi.Input<string>;
        /**
         * Whether or not the namespace is currently enabled.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The name of the namespace.
         */
        name?: pulumi.Input<string>;
        /**
         * The namespace type.
         */
        namespaceType?: pulumi.Input<string>;
        /**
         * Provisioning state of the Namespace.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
         */
        region?: pulumi.Input<string>;
        /**
         * ScaleUnit where the namespace gets created
         */
        scaleUnit?: pulumi.Input<string>;
        /**
         * Endpoint you can use to perform NotificationHub operations.
         */
        serviceBusEndpoint?: pulumi.Input<string>;
        /**
         * Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
         */
        status?: pulumi.Input<string>;
        /**
         * The Id of the Azure subscription associated with the namespace.
         */
        subscriptionId?: pulumi.Input<string>;
        /**
         * The time the namespace was updated.
         */
        updatedAt?: pulumi.Input<string>;
    }

    /**
     * Namespace properties.
     */
    export interface NamespacePropertiesResponse {
        /**
         * The time the namespace was created.
         */
        createdAt?: pulumi.Input<string>;
        /**
         * Whether or not the namespace is set as Critical.
         */
        critical?: pulumi.Input<boolean>;
        /**
         * Data center for the namespace
         */
        dataCenter?: pulumi.Input<string>;
        /**
         * Whether or not the namespace is currently enabled.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Identifier for Azure Insights metrics
         */
        metricId: pulumi.Input<string>;
        /**
         * The name of the namespace.
         */
        name?: pulumi.Input<string>;
        /**
         * The namespace type.
         */
        namespaceType?: pulumi.Input<string>;
        /**
         * Provisioning state of the Namespace.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
         */
        region?: pulumi.Input<string>;
        /**
         * ScaleUnit where the namespace gets created
         */
        scaleUnit?: pulumi.Input<string>;
        /**
         * Endpoint you can use to perform NotificationHub operations.
         */
        serviceBusEndpoint?: pulumi.Input<string>;
        /**
         * Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
         */
        status?: pulumi.Input<string>;
        /**
         * The Id of the Azure subscription associated with the namespace.
         */
        subscriptionId?: pulumi.Input<string>;
        /**
         * The time the namespace was updated.
         */
        updatedAt?: pulumi.Input<string>;
    }

    /**
     * NotificationHub properties.
     */
    export interface NotificationHubProperties {
        /**
         * The AdmCredential of the created NotificationHub
         */
        admCredential?: pulumi.Input<inputs.notificationhubs.AdmCredential>;
        /**
         * The ApnsCredential of the created NotificationHub
         */
        apnsCredential?: pulumi.Input<inputs.notificationhubs.ApnsCredential>;
        /**
         * The AuthorizationRules of the created NotificationHub
         */
        authorizationRules?: pulumi.Input<pulumi.Input<inputs.notificationhubs.SharedAccessAuthorizationRuleProperties>[]>;
        /**
         * The BaiduCredential of the created NotificationHub
         */
        baiduCredential?: pulumi.Input<inputs.notificationhubs.BaiduCredential>;
        /**
         * The GcmCredential of the created NotificationHub
         */
        gcmCredential?: pulumi.Input<inputs.notificationhubs.GcmCredential>;
        /**
         * The MpnsCredential of the created NotificationHub
         */
        mpnsCredential?: pulumi.Input<inputs.notificationhubs.MpnsCredential>;
        /**
         * The NotificationHub name.
         */
        name?: pulumi.Input<string>;
        /**
         * The RegistrationTtl of the created NotificationHub
         */
        registrationTtl?: pulumi.Input<string>;
        /**
         * The WnsCredential of the created NotificationHub
         */
        wnsCredential?: pulumi.Input<inputs.notificationhubs.WnsCredential>;
    }

    /**
     * NotificationHub properties.
     */
    export interface NotificationHubPropertiesResponse {
        /**
         * The AdmCredential of the created NotificationHub
         */
        admCredential?: pulumi.Input<inputs.notificationhubs.AdmCredentialResponse>;
        /**
         * The ApnsCredential of the created NotificationHub
         */
        apnsCredential?: pulumi.Input<inputs.notificationhubs.ApnsCredentialResponse>;
        /**
         * The AuthorizationRules of the created NotificationHub
         */
        authorizationRules?: pulumi.Input<pulumi.Input<inputs.notificationhubs.SharedAccessAuthorizationRulePropertiesResponse>[]>;
        /**
         * The BaiduCredential of the created NotificationHub
         */
        baiduCredential?: pulumi.Input<inputs.notificationhubs.BaiduCredentialResponse>;
        /**
         * The GcmCredential of the created NotificationHub
         */
        gcmCredential?: pulumi.Input<inputs.notificationhubs.GcmCredentialResponse>;
        /**
         * The MpnsCredential of the created NotificationHub
         */
        mpnsCredential?: pulumi.Input<inputs.notificationhubs.MpnsCredentialResponse>;
        /**
         * The NotificationHub name.
         */
        name?: pulumi.Input<string>;
        /**
         * The RegistrationTtl of the created NotificationHub
         */
        registrationTtl?: pulumi.Input<string>;
        /**
         * The WnsCredential of the created NotificationHub
         */
        wnsCredential?: pulumi.Input<inputs.notificationhubs.WnsCredentialResponse>;
    }

    /**
     * SharedAccessAuthorizationRule properties.
     */
    export interface SharedAccessAuthorizationRuleProperties {
        /**
         * The rights associated with the rule.
         */
        rights?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * SharedAccessAuthorizationRule properties.
     */
    export interface SharedAccessAuthorizationRulePropertiesResponse {
        /**
         * A string that describes the claim type
         */
        claimType: pulumi.Input<string>;
        /**
         * A string that describes the claim value
         */
        claimValue: pulumi.Input<string>;
        /**
         * The created time for this rule
         */
        createdTime: pulumi.Input<string>;
        /**
         * A string that describes the authorization rule.
         */
        keyName: pulumi.Input<string>;
        /**
         * The last modified time for this rule
         */
        modifiedTime: pulumi.Input<string>;
        /**
         * A base64-encoded 256-bit primary key for signing and validating the SAS token.
         */
        primaryKey: pulumi.Input<string>;
        /**
         * The revision number for the rule
         */
        revision: pulumi.Input<number>;
        /**
         * The rights associated with the rule.
         */
        rights?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A base64-encoded 256-bit primary key for signing and validating the SAS token.
         */
        secondaryKey: pulumi.Input<string>;
    }

    /**
     * The Sku description for a namespace
     */
    export interface Sku {
        /**
         * The capacity of the resource
         */
        capacity?: pulumi.Input<number>;
        /**
         * The Sku Family
         */
        family?: pulumi.Input<string>;
        /**
         * Name of the notification hub sku
         */
        name: pulumi.Input<string>;
        /**
         * The Sku size
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of particular sku
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The Sku description for a namespace
     */
    export interface SkuResponse {
        /**
         * The capacity of the resource
         */
        capacity?: pulumi.Input<number>;
        /**
         * The Sku Family
         */
        family?: pulumi.Input<string>;
        /**
         * Name of the notification hub sku
         */
        name: pulumi.Input<string>;
        /**
         * The Sku size
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of particular sku
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub WnsCredential.
     */
    export interface WnsCredential {
        /**
         * Properties of NotificationHub WnsCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.WnsCredentialProperties>;
    }

    /**
     * Description of a NotificationHub WnsCredential.
     */
    export interface WnsCredentialProperties {
        /**
         * The package ID for this credential.
         */
        packageSid?: pulumi.Input<string>;
        /**
         * The secret key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * The Windows Live endpoint.
         */
        windowsLiveEndpoint?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub WnsCredential.
     */
    export interface WnsCredentialPropertiesResponse {
        /**
         * The package ID for this credential.
         */
        packageSid?: pulumi.Input<string>;
        /**
         * The secret key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * The Windows Live endpoint.
         */
        windowsLiveEndpoint?: pulumi.Input<string>;
    }

    /**
     * Description of a NotificationHub WnsCredential.
     */
    export interface WnsCredentialResponse {
        /**
         * Properties of NotificationHub WnsCredential.
         */
        properties?: pulumi.Input<inputs.notificationhubs.WnsCredentialPropertiesResponse>;
    }
}

export namespace offazure {
    /**
     * Class for site agent properties.
     */
    export interface SiteAgentProperties {
        /**
         * Key vault ARM Id.
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * Key vault URI.
         */
        keyVaultUri?: pulumi.Input<string>;
    }

    /**
     * Class for site agent properties.
     */
    export interface SiteAgentPropertiesResponse {
        /**
         * ID of the agent.
         */
        id: pulumi.Input<string>;
        /**
         * Key vault ARM Id.
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * Key vault URI.
         */
        keyVaultUri?: pulumi.Input<string>;
        /**
         * Last heartbeat time of the agent in UTC.
         */
        lastHeartBeatUtc: pulumi.Input<string>;
        /**
         * Version of the agent.
         */
        version: pulumi.Input<string>;
    }

    /**
     * Class for site properties.
     */
    export interface SiteProperties {
        /**
         * On-premises agent details.
         */
        agentDetails?: pulumi.Input<inputs.offazure.SiteAgentProperties>;
        /**
         * Appliance Name.
         */
        applianceName?: pulumi.Input<string>;
        /**
         * ARM ID of migration hub solution for SDS.
         */
        discoverySolutionId?: pulumi.Input<string>;
        /**
         * Service principal identity details used by agent for communication to the service.
         */
        servicePrincipalIdentityDetails?: pulumi.Input<inputs.offazure.SiteSpnProperties>;
    }

    /**
     * Class for site properties.
     */
    export interface SitePropertiesResponse {
        /**
         * On-premises agent details.
         */
        agentDetails?: pulumi.Input<inputs.offazure.SiteAgentPropertiesResponse>;
        /**
         * Appliance Name.
         */
        applianceName?: pulumi.Input<string>;
        /**
         * ARM ID of migration hub solution for SDS.
         */
        discoverySolutionId?: pulumi.Input<string>;
        /**
         * Service endpoint.
         */
        serviceEndpoint: pulumi.Input<string>;
        /**
         * Service principal identity details used by agent for communication to the service.
         */
        servicePrincipalIdentityDetails?: pulumi.Input<inputs.offazure.SiteSpnPropertiesResponse>;
    }

    /**
     * Class for site properties.
     */
    export interface SiteSpnProperties {
        /**
         * AAD Authority URL which was used to request the token for the service principal.
         */
        aadAuthority?: pulumi.Input<string>;
        /**
         * Application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * Intended audience for the service principal.
         */
        audience?: pulumi.Input<string>;
        /**
         * Object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        objectId?: pulumi.Input<string>;
        /**
         * Raw certificate data for building certificate expiry flows.
         */
        rawCertData?: pulumi.Input<string>;
        /**
         * Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * Class for site properties.
     */
    export interface SiteSpnPropertiesResponse {
        /**
         * AAD Authority URL which was used to request the token for the service principal.
         */
        aadAuthority?: pulumi.Input<string>;
        /**
         * Application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * Intended audience for the service principal.
         */
        audience?: pulumi.Input<string>;
        /**
         * Object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        objectId?: pulumi.Input<string>;
        /**
         * Raw certificate data for building certificate expiry flows.
         */
        rawCertData?: pulumi.Input<string>;
        /**
         * Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        tenantId?: pulumi.Input<string>;
    }

}

export namespace operationalinsights {
    /**
     * Action property bag.
     */
    export interface ActionRequestProperties {
        /**
         * Logic App Resource Id, providers/Microsoft.Logic/workflows/{WorkflowID}.
         */
        logicAppResourceId: pulumi.Input<string>;
        /**
         * Logic App Callback URL for this specific workflow.
         */
        triggerUri?: pulumi.Input<string>;
    }

    /**
     * Action property bag.
     */
    export interface ActionResponsePropertiesResponse {
        /**
         * Logic App Resource Id, providers/Microsoft.Logic/workflows/{WorkflowID}.
         */
        logicAppResourceId: pulumi.Input<string>;
        /**
         * The name of the logic app's workflow.
         */
        workflowId?: pulumi.Input<string>;
    }

    /**
     * Value object for saved search results.
     */
    export interface SavedSearchProperties {
        /**
         * The category of the saved search. This helps the user to find a saved search faster. 
         */
        category: pulumi.Input<string>;
        /**
         * Saved search display name.
         */
        displayName: pulumi.Input<string>;
        /**
         * The query expression for the saved search. Please see https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-search-reference for reference.
         */
        query: pulumi.Input<string>;
        /**
         * The tags attached to the saved search.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.operationalinsights.Tag>[]>;
        /**
         * The version number of the query language. The current version is 2 and is the default.
         */
        version?: pulumi.Input<number>;
    }

    /**
     * Value object for saved search results.
     */
    export interface SavedSearchPropertiesResponse {
        /**
         * The category of the saved search. This helps the user to find a saved search faster. 
         */
        category: pulumi.Input<string>;
        /**
         * Saved search display name.
         */
        displayName: pulumi.Input<string>;
        /**
         * The query expression for the saved search. Please see https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-search-reference for reference.
         */
        query: pulumi.Input<string>;
        /**
         * The tags attached to the saved search.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.operationalinsights.TagResponse>[]>;
        /**
         * The version number of the query language. The current version is 2 and is the default.
         */
        version?: pulumi.Input<number>;
    }

    /**
     * Describes a storage account connection.
     */
    export interface StorageAccount {
        /**
         * The Azure Resource Manager ID of the storage account resource.
         */
        id: pulumi.Input<string>;
        /**
         * The storage account key.
         */
        key: pulumi.Input<string>;
    }

    /**
     * Describes a storage account connection.
     */
    export interface StorageAccountResponse {
        /**
         * The Azure Resource Manager ID of the storage account resource.
         */
        id: pulumi.Input<string>;
        /**
         * The storage account key.
         */
        key: pulumi.Input<string>;
    }

    /**
     * Storage insight properties.
     */
    export interface StorageInsightProperties {
        /**
         * The names of the blob containers that the workspace should read
         */
        containers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The storage account connection details
         */
        storageAccount: pulumi.Input<inputs.operationalinsights.StorageAccount>;
        /**
         * The names of the Azure tables that the workspace should read
         */
        tables?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Storage insight properties.
     */
    export interface StorageInsightPropertiesResponse {
        /**
         * The names of the blob containers that the workspace should read
         */
        containers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The status of the storage insight
         */
        status: pulumi.Input<inputs.operationalinsights.StorageInsightStatusResponse>;
        /**
         * The storage account connection details
         */
        storageAccount: pulumi.Input<inputs.operationalinsights.StorageAccountResponse>;
        /**
         * The names of the Azure tables that the workspace should read
         */
        tables?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The status of the storage insight.
     */
    export interface StorageInsightStatusResponse {
        /**
         * Description of the state of the storage insight.
         */
        description?: pulumi.Input<string>;
        /**
         * The state of the storage insight connection to the workspace
         */
        state: pulumi.Input<string>;
    }

    /**
     * A tag of a saved search.
     */
    export interface Tag {
        /**
         * The tag name.
         */
        name: pulumi.Input<string>;
        /**
         * The tag value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A tag of a saved search.
     */
    export interface TagResponse {
        /**
         * The tag name.
         */
        name: pulumi.Input<string>;
        /**
         * The tag value.
         */
        value: pulumi.Input<string>;
    }

}

export namespace peering {
    /**
     * The properties that define a BGP session.
     */
    export interface BgpSession {
        /**
         * The maximum number of prefixes advertised over the IPv4 session.
         */
        maxPrefixesAdvertisedV4?: pulumi.Input<number>;
        /**
         * The maximum number of prefixes advertised over the IPv6 session.
         */
        maxPrefixesAdvertisedV6?: pulumi.Input<number>;
        /**
         * The MD5 authentication key of the session.
         */
        md5AuthenticationKey?: pulumi.Input<string>;
        /**
         * The IPv4 session address on Microsoft's end.
         */
        microsoftSessionIPv4Address?: pulumi.Input<string>;
        /**
         * The IPv6 session address on Microsoft's end.
         */
        microsoftSessionIPv6Address?: pulumi.Input<string>;
        /**
         * The IPv4 session address on peer's end.
         */
        peerSessionIPv4Address?: pulumi.Input<string>;
        /**
         * The IPv6 session address on peer's end.
         */
        peerSessionIPv6Address?: pulumi.Input<string>;
        /**
         * The IPv4 prefix that contains both ends' IPv4 addresses.
         */
        sessionPrefixV4?: pulumi.Input<string>;
        /**
         * The IPv6 prefix that contains both ends' IPv6 addresses.
         */
        sessionPrefixV6?: pulumi.Input<string>;
    }

    /**
     * The properties that define a BGP session.
     */
    export interface BgpSessionResponse {
        /**
         * The maximum number of prefixes advertised over the IPv4 session.
         */
        maxPrefixesAdvertisedV4?: pulumi.Input<number>;
        /**
         * The maximum number of prefixes advertised over the IPv6 session.
         */
        maxPrefixesAdvertisedV6?: pulumi.Input<number>;
        /**
         * The MD5 authentication key of the session.
         */
        md5AuthenticationKey?: pulumi.Input<string>;
        /**
         * The IPv4 session address on Microsoft's end.
         */
        microsoftSessionIPv4Address?: pulumi.Input<string>;
        /**
         * The IPv6 session address on Microsoft's end.
         */
        microsoftSessionIPv6Address?: pulumi.Input<string>;
        /**
         * The IPv4 session address on peer's end.
         */
        peerSessionIPv4Address?: pulumi.Input<string>;
        /**
         * The IPv6 session address on peer's end.
         */
        peerSessionIPv6Address?: pulumi.Input<string>;
        /**
         * The IPv4 prefix that contains both ends' IPv4 addresses.
         */
        sessionPrefixV4?: pulumi.Input<string>;
        /**
         * The IPv6 prefix that contains both ends' IPv6 addresses.
         */
        sessionPrefixV6?: pulumi.Input<string>;
        /**
         * The state of the IPv4 session.
         */
        sessionStateV4: pulumi.Input<string>;
        /**
         * The state of the IPv6 session.
         */
        sessionStateV6: pulumi.Input<string>;
    }

    /**
     * The properties that define a direct connection.
     */
    export interface DirectConnection {
        /**
         * The bandwidth of the connection.
         */
        bandwidthInMbps?: pulumi.Input<number>;
        /**
         * The BGP session associated with the connection.
         */
        bgpSession?: pulumi.Input<inputs.peering.BgpSession>;
        /**
         * The unique identifier (GUID) for the connection.
         */
        connectionIdentifier?: pulumi.Input<string>;
        /**
         * The PeeringDB.com ID of the facility at which the connection has to be set up.
         */
        peeringDBFacilityId?: pulumi.Input<number>;
        /**
         * The field indicating if Microsoft provides session ip addresses.
         */
        sessionAddressProvider?: pulumi.Input<string>;
        /**
         * The flag that indicates whether or not the connection is used for peering service.
         */
        useForPeeringService?: pulumi.Input<boolean>;
    }

    /**
     * The properties that define a direct connection.
     */
    export interface DirectConnectionResponse {
        /**
         * The bandwidth of the connection.
         */
        bandwidthInMbps?: pulumi.Input<number>;
        /**
         * The BGP session associated with the connection.
         */
        bgpSession?: pulumi.Input<inputs.peering.BgpSessionResponse>;
        /**
         * The unique identifier (GUID) for the connection.
         */
        connectionIdentifier?: pulumi.Input<string>;
        /**
         * The state of the connection.
         */
        connectionState: pulumi.Input<string>;
        /**
         * The error message related to the connection state, if any.
         */
        errorMessage: pulumi.Input<string>;
        /**
         * The PeeringDB.com ID of the facility at which the connection has to be set up.
         */
        peeringDBFacilityId?: pulumi.Input<number>;
        /**
         * The bandwidth that is actually provisioned.
         */
        provisionedBandwidthInMbps: pulumi.Input<number>;
        /**
         * The field indicating if Microsoft provides session ip addresses.
         */
        sessionAddressProvider?: pulumi.Input<string>;
        /**
         * The flag that indicates whether or not the connection is used for peering service.
         */
        useForPeeringService?: pulumi.Input<boolean>;
    }

    /**
     * The properties that define an exchange connection.
     */
    export interface ExchangeConnection {
        /**
         * The BGP session associated with the connection.
         */
        bgpSession?: pulumi.Input<inputs.peering.BgpSession>;
        /**
         * The unique identifier (GUID) for the connection.
         */
        connectionIdentifier?: pulumi.Input<string>;
        /**
         * The PeeringDB.com ID of the facility at which the connection has to be set up.
         */
        peeringDBFacilityId?: pulumi.Input<number>;
    }

    /**
     * The properties that define an exchange connection.
     */
    export interface ExchangeConnectionResponse {
        /**
         * The BGP session associated with the connection.
         */
        bgpSession?: pulumi.Input<inputs.peering.BgpSessionResponse>;
        /**
         * The unique identifier (GUID) for the connection.
         */
        connectionIdentifier?: pulumi.Input<string>;
        /**
         * The state of the connection.
         */
        connectionState: pulumi.Input<string>;
        /**
         * The error message related to the connection state, if any.
         */
        errorMessage: pulumi.Input<string>;
        /**
         * The PeeringDB.com ID of the facility at which the connection has to be set up.
         */
        peeringDBFacilityId?: pulumi.Input<number>;
    }

    /**
     * The properties that define connectivity to the Microsoft Cloud Edge.
     */
    export interface PeeringProperties {
        /**
         * The properties that define a direct peering.
         */
        direct?: pulumi.Input<inputs.peering.PeeringPropertiesDirect>;
        /**
         * The properties that define an exchange peering.
         */
        exchange?: pulumi.Input<inputs.peering.PeeringPropertiesExchange>;
        /**
         * The location of the peering.
         */
        peeringLocation?: pulumi.Input<string>;
    }

    /**
     * The properties that define a direct peering.
     */
    export interface PeeringPropertiesDirect {
        /**
         * The set of connections that constitute a direct peering.
         */
        connections?: pulumi.Input<pulumi.Input<inputs.peering.DirectConnection>[]>;
        /**
         * The type of direct peering.
         */
        directPeeringType?: pulumi.Input<string>;
        /**
         * The reference of the peer ASN.
         */
        peerAsn?: pulumi.Input<inputs.peering.SubResource>;
    }

    /**
     * The properties that define a direct peering.
     */
    export interface PeeringPropertiesDirectResponse {
        /**
         * The set of connections that constitute a direct peering.
         */
        connections?: pulumi.Input<pulumi.Input<inputs.peering.DirectConnectionResponse>[]>;
        /**
         * The type of direct peering.
         */
        directPeeringType?: pulumi.Input<string>;
        /**
         * The reference of the peer ASN.
         */
        peerAsn?: pulumi.Input<inputs.peering.SubResourceResponse>;
        /**
         * The flag that indicates whether or not the peering is used for peering service.
         */
        useForPeeringService: pulumi.Input<boolean>;
    }

    /**
     * The properties that define an exchange peering.
     */
    export interface PeeringPropertiesExchange {
        /**
         * The set of connections that constitute an exchange peering.
         */
        connections?: pulumi.Input<pulumi.Input<inputs.peering.ExchangeConnection>[]>;
        /**
         * The reference of the peer ASN.
         */
        peerAsn?: pulumi.Input<inputs.peering.SubResource>;
    }

    /**
     * The properties that define an exchange peering.
     */
    export interface PeeringPropertiesExchangeResponse {
        /**
         * The set of connections that constitute an exchange peering.
         */
        connections?: pulumi.Input<pulumi.Input<inputs.peering.ExchangeConnectionResponse>[]>;
        /**
         * The reference of the peer ASN.
         */
        peerAsn?: pulumi.Input<inputs.peering.SubResourceResponse>;
    }

    /**
     * The properties that define connectivity to the Microsoft Cloud Edge.
     */
    export interface PeeringPropertiesResponse {
        /**
         * The properties that define a direct peering.
         */
        direct?: pulumi.Input<inputs.peering.PeeringPropertiesDirectResponse>;
        /**
         * The properties that define an exchange peering.
         */
        exchange?: pulumi.Input<inputs.peering.PeeringPropertiesExchangeResponse>;
        /**
         * The location of the peering.
         */
        peeringLocation?: pulumi.Input<string>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * The properties that define a registered ASN.
     */
    export interface PeeringRegisteredAsnProperties {
        /**
         * The customer's ASN from which traffic originates.
         */
        asn?: pulumi.Input<number>;
    }

    /**
     * The properties that define a registered ASN.
     */
    export interface PeeringRegisteredAsnPropertiesResponse {
        /**
         * The customer's ASN from which traffic originates.
         */
        asn?: pulumi.Input<number>;
        /**
         * The peering service prefix key that is to be shared with the customer.
         */
        peeringServicePrefixKey: pulumi.Input<string>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * The properties that define a registered prefix.
     */
    export interface PeeringRegisteredPrefixProperties {
        /**
         * The customer's prefix from which traffic originates.
         */
        prefix?: pulumi.Input<string>;
    }

    /**
     * The properties that define a registered prefix.
     */
    export interface PeeringRegisteredPrefixPropertiesResponse {
        /**
         * The error message associated with the validation state, if any.
         */
        errorMessage: pulumi.Input<string>;
        /**
         * The peering service prefix key that is to be shared with the customer.
         */
        peeringServicePrefixKey: pulumi.Input<string>;
        /**
         * The customer's prefix from which traffic originates.
         */
        prefix?: pulumi.Input<string>;
        /**
         * The prefix validation state.
         */
        prefixValidationState: pulumi.Input<string>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * The details of the event associated with a prefix.
     */
    export interface PeeringServicePrefixEventResponse {
        /**
         * The description of the event associated with a prefix.
         */
        eventDescription: pulumi.Input<string>;
        /**
         * The level of the event associated with a prefix.
         */
        eventLevel: pulumi.Input<string>;
        /**
         * The summary of the event associated with a prefix.
         */
        eventSummary: pulumi.Input<string>;
        /**
         * The timestamp of the event associated with a prefix.
         */
        eventTimestamp: pulumi.Input<string>;
        /**
         * The type of the event associated with a prefix.
         */
        eventType: pulumi.Input<string>;
    }

    /**
     * The peering service prefix properties class.
     */
    export interface PeeringServicePrefixProperties {
        /**
         * The peering service prefix key
         */
        peeringServicePrefixKey?: pulumi.Input<string>;
        /**
         * The prefix from which your traffic originates.
         */
        prefix?: pulumi.Input<string>;
    }

    /**
     * The peering service prefix properties class.
     */
    export interface PeeringServicePrefixPropertiesResponse {
        /**
         * The error message for validation state
         */
        errorMessage: pulumi.Input<string>;
        /**
         * The list of events for peering service prefix
         */
        events: pulumi.Input<pulumi.Input<inputs.peering.PeeringServicePrefixEventResponse>[]>;
        /**
         * The prefix learned type
         */
        learnedType: pulumi.Input<string>;
        /**
         * The peering service prefix key
         */
        peeringServicePrefixKey?: pulumi.Input<string>;
        /**
         * The prefix from which your traffic originates.
         */
        prefix?: pulumi.Input<string>;
        /**
         * The prefix validation state
         */
        prefixValidationState: pulumi.Input<string>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * The properties that define connectivity to the Peering Service.
     */
    export interface PeeringServiceProperties {
        /**
         * The PeeringServiceLocation of the Customer.
         */
        peeringServiceLocation?: pulumi.Input<string>;
        /**
         * The MAPS Provider Name.
         */
        peeringServiceProvider?: pulumi.Input<string>;
    }

    /**
     * The properties that define connectivity to the Peering Service.
     */
    export interface PeeringServicePropertiesResponse {
        /**
         * The PeeringServiceLocation of the Customer.
         */
        peeringServiceLocation?: pulumi.Input<string>;
        /**
         * The MAPS Provider Name.
         */
        peeringServiceProvider?: pulumi.Input<string>;
        /**
         * The provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * The SKU that defines the type of the peering service.
     */
    export interface PeeringServiceSku {
        /**
         * The name of the peering service SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The SKU that defines the type of the peering service.
     */
    export interface PeeringServiceSkuResponse {
        /**
         * The name of the peering service SKU.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The SKU that defines the tier and kind of the peering.
     */
    export interface PeeringSku {
        /**
         * The family of the peering SKU.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the peering SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * The size of the peering SKU.
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of the peering SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The SKU that defines the tier and kind of the peering.
     */
    export interface PeeringSkuResponse {
        /**
         * The family of the peering SKU.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the peering SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * The size of the peering SKU.
         */
        size?: pulumi.Input<string>;
        /**
         * The tier of the peering SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The sub resource.
     */
    export interface SubResource {
        /**
         * The identifier of the referenced resource.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The sub resource.
     */
    export interface SubResourceResponse {
        /**
         * The identifier of the referenced resource.
         */
        id?: pulumi.Input<string>;
    }
}

export namespace policyinsights {
    /**
     * The deployment status summary for all deployments created by the remediation.
     */
    export interface RemediationDeploymentSummaryResponse {
        /**
         * The number of deployments required by the remediation that have failed.
         */
        failedDeployments: pulumi.Input<number>;
        /**
         * The number of deployments required by the remediation that have succeeded.
         */
        successfulDeployments: pulumi.Input<number>;
        /**
         * The number of deployments required by the remediation.
         */
        totalDeployments: pulumi.Input<number>;
    }

    /**
     * The filters that will be applied to determine which resources to remediate.
     */
    export interface RemediationFilters {
        /**
         * The resource locations that will be remediated.
         */
        locations?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The filters that will be applied to determine which resources to remediate.
     */
    export interface RemediationFiltersResponse {
        /**
         * The resource locations that will be remediated.
         */
        locations?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The remediation properties.
     */
    export interface RemediationProperties {
        /**
         * The filters that will be applied to determine which resources to remediate.
         */
        filters?: pulumi.Input<inputs.policyinsights.RemediationFilters>;
        /**
         * The resource ID of the policy assignment that should be remediated.
         */
        policyAssignmentId?: pulumi.Input<string>;
        /**
         * The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
         */
        policyDefinitionReferenceId?: pulumi.Input<string>;
        /**
         * The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
         */
        resourceDiscoveryMode?: pulumi.Input<string>;
    }

    /**
     * The remediation properties.
     */
    export interface RemediationPropertiesResponse {
        /**
         * The time at which the remediation was created.
         */
        createdOn: pulumi.Input<string>;
        /**
         * The deployment status summary for all deployments created by the remediation.
         */
        deploymentStatus: pulumi.Input<inputs.policyinsights.RemediationDeploymentSummaryResponse>;
        /**
         * The filters that will be applied to determine which resources to remediate.
         */
        filters?: pulumi.Input<inputs.policyinsights.RemediationFiltersResponse>;
        /**
         * The time at which the remediation was last updated.
         */
        lastUpdatedOn: pulumi.Input<string>;
        /**
         * The resource ID of the policy assignment that should be remediated.
         */
        policyAssignmentId?: pulumi.Input<string>;
        /**
         * The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
         */
        policyDefinitionReferenceId?: pulumi.Input<string>;
        /**
         * The status of the remediation.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
         */
        resourceDiscoveryMode?: pulumi.Input<string>;
    }
}

export namespace powerbi {
    export interface AzureSku {
        /**
         * SKU name
         */
        name: pulumi.Input<string>;
        /**
         * SKU tier
         */
        tier: pulumi.Input<string>;
    }

    export interface AzureSkuResponse {
        /**
         * SKU name
         */
        name: pulumi.Input<string>;
        /**
         * SKU tier
         */
        tier: pulumi.Input<string>;
    }

}

export namespace powerbidedicated {
    /**
     * An array of administrator user identities
     */
    export interface DedicatedCapacityAdministrators {
        /**
         * An array of administrator user identities.
         */
        members?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * An array of administrator user identities
     */
    export interface DedicatedCapacityAdministratorsResponse {
        /**
         * An array of administrator user identities.
         */
        members?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of Dedicated Capacity resource.
     */
    export interface DedicatedCapacityProperties {
        /**
         * A collection of Dedicated capacity administrators
         */
        administration?: pulumi.Input<inputs.powerbidedicated.DedicatedCapacityAdministrators>;
    }

    /**
     * Properties of Dedicated Capacity resource.
     */
    export interface DedicatedCapacityPropertiesResponse {
        /**
         * A collection of Dedicated capacity administrators
         */
        administration?: pulumi.Input<inputs.powerbidedicated.DedicatedCapacityAdministratorsResponse>;
        /**
         * The current deployment state of PowerBI Dedicated resource. The provisioningState is to indicate states for resource provisioning.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The current state of PowerBI Dedicated resource. The state is to indicate more states outside of resource provisioning.
         */
        state: pulumi.Input<string>;
    }

    /**
     * Represents the SKU name and Azure pricing tier for PowerBI Dedicated resource.
     */
    export interface ResourceSku {
        /**
         * Name of the SKU level.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the Azure pricing tier to which the SKU applies.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Represents the SKU name and Azure pricing tier for PowerBI Dedicated resource.
     */
    export interface ResourceSkuResponse {
        /**
         * Name of the SKU level.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the Azure pricing tier to which the SKU applies.
         */
        tier?: pulumi.Input<string>;
    }
}

export namespace recoveryservices {
    /**
     * The properties of an add provider request.
     */
    export interface AddRecoveryServicesProviderInputProperties {
        /**
         * The identity provider input for DRA authentication.
         */
        authenticationIdentityInput: pulumi.Input<inputs.recoveryservices.IdentityProviderInput>;
        /**
         * The name of the machine where the provider is getting added.
         */
        machineName: pulumi.Input<string>;
        /**
         * The identity provider input for resource access.
         */
        resourceAccessIdentityInput: pulumi.Input<inputs.recoveryservices.IdentityProviderInput>;
    }

    /**
     * The properties of an add vCenter request.
     */
    export interface AddVCenterRequestProperties {
        /**
         * The friendly name of the vCenter.
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The IP address of the vCenter to be discovered.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * The port number for discovery.
         */
        port?: pulumi.Input<string>;
        /**
         * The process server Id from where the discovery is orchestrated.
         */
        processServerId?: pulumi.Input<string>;
        /**
         * The account Id which has privileges to discover the vCenter.
         */
        runAsAccountId?: pulumi.Input<string>;
    }

    /**
     * Common input details for network mapping operation.
     */
    export interface CreateNetworkMappingInputProperties {
        /**
         * Fabric specific input properties.
         */
        fabricSpecificDetails?: pulumi.Input<inputs.recoveryservices.FabricSpecificCreateNetworkMappingInput>;
        /**
         * Recovery fabric Name.
         */
        recoveryFabricName?: pulumi.Input<string>;
        /**
         * Recovery network Id.
         */
        recoveryNetworkId?: pulumi.Input<string>;
    }

    /**
     * Policy creation properties.
     */
    export interface CreatePolicyInputProperties {
        /**
         * The ReplicationProviderSettings.
         */
        providerSpecificInput?: pulumi.Input<inputs.recoveryservices.PolicyProviderSpecificInput>;
    }

    /**
     * Configure pairing input properties.
     */
    export interface CreateProtectionContainerMappingInputProperties {
        /**
         * Applicable policy.
         */
        policyId?: pulumi.Input<string>;
        /**
         * Provider specific input for pairing.
         */
        providerSpecificInput?: pulumi.Input<inputs.recoveryservices.ReplicationProviderSpecificContainerMappingInput>;
        /**
         * The target unique protection container name.
         */
        targetProtectionContainerId?: pulumi.Input<string>;
    }

    /**
     * Recovery plan creation properties.
     */
    export interface CreateRecoveryPlanInputProperties {
        /**
         * The failover deployment model.
         */
        failoverDeploymentModel?: pulumi.Input<string>;
        /**
         * The recovery plan groups.
         */
        groups: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanGroup>[]>;
        /**
         * The primary fabric Id.
         */
        primaryFabricId: pulumi.Input<string>;
        /**
         * The provider specific input.
         */
        providerSpecificInput?: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanProviderSpecificInput>[]>;
        /**
         * The recovery fabric Id.
         */
        recoveryFabricId: pulumi.Input<string>;
    }

    /**
     * Current job details of the migration item.
     */
    export interface CurrentJobDetailsResponse {
        /**
         * The ARM Id of the job being executed.
         */
        jobId?: pulumi.Input<string>;
        /**
         * The job name.
         */
        jobName?: pulumi.Input<string>;
        /**
         * The start time of the job.
         */
        startTime?: pulumi.Input<string>;
    }

    /**
     * Current scenario details of the protected entity.
     */
    export interface CurrentScenarioDetailsResponse {
        /**
         * ARM Id of the job being executed.
         */
        jobId?: pulumi.Input<string>;
        /**
         * Scenario name.
         */
        scenarioName?: pulumi.Input<string>;
        /**
         * Start time of the workflow.
         */
        startTime?: pulumi.Input<string>;
    }

    /**
     * Enable migration input properties.
     */
    export interface EnableMigrationInputProperties {
        /**
         * The policy Id.
         */
        policyId: pulumi.Input<string>;
        /**
         * The provider specific details.
         */
        providerSpecificDetails: pulumi.Input<inputs.recoveryservices.EnableMigrationProviderSpecificInput>;
    }

    /**
     * Enable migration provider specific input.
     */
    export interface EnableMigrationProviderSpecificInput {
        /**
         * The class type.
         */
        instanceType: pulumi.Input<string>;
    }

    /**
     * Enable protection input properties.
     */
    export interface EnableProtectionInputProperties {
        /**
         * The Policy Id.
         */
        policyId?: pulumi.Input<string>;
        /**
         * The protectable item Id.
         */
        protectableItemId?: pulumi.Input<string>;
        /**
         * The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
         */
        providerSpecificDetails?: pulumi.Input<inputs.recoveryservices.EnableProtectionProviderSpecificInput>;
    }

    /**
     * Enable protection provider specific input.
     */
    export interface EnableProtectionProviderSpecificInput {
        /**
         * The class type.
         */
        instanceType?: pulumi.Input<string>;
    }

    /**
     * Encryption details for the fabric.
     */
    export interface EncryptionDetailsResponse {
        /**
         * The key encryption key certificate expiry date.
         */
        kekCertExpiryDate?: pulumi.Input<string>;
        /**
         * The key encryption key certificate thumbprint.
         */
        kekCertThumbprint?: pulumi.Input<string>;
        /**
         * The key encryption key state for the Vmm.
         */
        kekState?: pulumi.Input<string>;
    }

    /**
     * Properties of site details provided during the time of site creation
     */
    export interface FabricCreationInputProperties {
        /**
         * Fabric provider specific creation input.
         */
        customDetails?: pulumi.Input<inputs.recoveryservices.FabricSpecificCreationInput>;
    }

    /**
     * Fabric properties.
     */
    export interface FabricPropertiesResponse {
        /**
         * BCDR state of the fabric.
         */
        bcdrState?: pulumi.Input<string>;
        /**
         * Fabric specific settings.
         */
        customDetails?: pulumi.Input<inputs.recoveryservices.FabricSpecificDetailsResponse>;
        /**
         * Encryption details for the fabric.
         */
        encryptionDetails?: pulumi.Input<inputs.recoveryservices.EncryptionDetailsResponse>;
        /**
         * Friendly name of the fabric.
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * Health of fabric.
         */
        health?: pulumi.Input<string>;
        /**
         * Fabric health error details.
         */
        healthErrorDetails?: pulumi.Input<pulumi.Input<inputs.recoveryservices.HealthErrorResponse>[]>;
        /**
         * Dra Registration Id.
         */
        internalIdentifier?: pulumi.Input<string>;
        /**
         * Rollover encryption details for the fabric.
         */
        rolloverEncryptionDetails?: pulumi.Input<inputs.recoveryservices.EncryptionDetailsResponse>;
    }

    /**
     * Input details specific to fabrics during Network Mapping.
     */
    export interface FabricSpecificCreateNetworkMappingInput {
        /**
         * The instance type.
         */
        instanceType?: pulumi.Input<string>;
    }

    /**
     * Fabric provider specific settings.
     */
    export interface FabricSpecificCreationInput {
        /**
         * Gets the class type.
         */
        instanceType?: pulumi.Input<string>;
    }

    /**
     * Fabric specific details.
     */
    export interface FabricSpecificDetailsResponse {
        /**
         * Gets the class type. Overridden in derived classes.
         */
        instanceType: pulumi.Input<string>;
    }

    /**
     * Health Error
     */
    export interface HealthErrorResponse {
        /**
         * Error creation time (UTC)
         */
        creationTimeUtc?: pulumi.Input<string>;
        /**
         * Value indicating whether the health error is customer resolvable.
         */
        customerResolvability?: pulumi.Input<string>;
        /**
         * ID of the entity.
         */
        entityId?: pulumi.Input<string>;
        /**
         * Category of error.
         */
        errorCategory?: pulumi.Input<string>;
        /**
         * Error code.
         */
        errorCode?: pulumi.Input<string>;
        /**
         * The health error unique id.
         */
        errorId?: pulumi.Input<string>;
        /**
         * Level of error.
         */
        errorLevel?: pulumi.Input<string>;
        /**
         * Error message.
         */
        errorMessage?: pulumi.Input<string>;
        /**
         * Source of error.
         */
        errorSource?: pulumi.Input<string>;
        /**
         * Type of error.
         */
        errorType?: pulumi.Input<string>;
        /**
         * The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
         */
        innerHealthErrors?: pulumi.Input<pulumi.Input<inputs.recoveryservices.InnerHealthErrorResponse>[]>;
        /**
         * Possible causes of error.
         */
        possibleCauses?: pulumi.Input<string>;
        /**
         * Recommended action to resolve error.
         */
        recommendedAction?: pulumi.Input<string>;
        /**
         * DRA error message.
         */
        recoveryProviderErrorMessage?: pulumi.Input<string>;
        /**
         * Summary message of the entity.
         */
        summaryMessage?: pulumi.Input<string>;
    }

    /**
     * Identity for the resource.
     */
    export interface IdentityData {
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Identity for the resource.
     */
    export interface IdentityDataResponse {
        /**
         * The principal ID of resource identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant ID of resource.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Identity provider details.
     */
    export interface IdentityProviderDetailsResponse {
        /**
         * The base authority for Azure Active Directory authentication.
         */
        aadAuthority?: pulumi.Input<string>;
        /**
         * The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        audience?: pulumi.Input<string>;
        /**
         * The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        objectId?: pulumi.Input<string>;
        /**
         * The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * Identity provider input.
     */
    export interface IdentityProviderInput {
        /**
         * The base authority for Azure Active Directory authentication.
         */
        aadAuthority: pulumi.Input<string>;
        /**
         * The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        applicationId: pulumi.Input<string>;
        /**
         * The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        audience: pulumi.Input<string>;
        /**
         * The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        objectId: pulumi.Input<string>;
        /**
         * The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
     */
    export interface InnerHealthErrorResponse {
        /**
         * Error creation time (UTC)
         */
        creationTimeUtc?: pulumi.Input<string>;
        /**
         * ID of the entity.
         */
        entityId?: pulumi.Input<string>;
        /**
         * Category of error.
         */
        errorCategory?: pulumi.Input<string>;
        /**
         * Error code.
         */
        errorCode?: pulumi.Input<string>;
        /**
         * Level of error.
         */
        errorLevel?: pulumi.Input<string>;
        /**
         * Error message.
         */
        errorMessage?: pulumi.Input<string>;
        /**
         * Source of error.
         */
        errorSource?: pulumi.Input<string>;
        /**
         * Type of error.
         */
        errorType?: pulumi.Input<string>;
        /**
         * Possible causes of error.
         */
        possibleCauses?: pulumi.Input<string>;
        /**
         * Recommended action to resolve error.
         */
        recommendedAction?: pulumi.Input<string>;
        /**
         * DRA error message.
         */
        recoveryProviderErrorMessage?: pulumi.Input<string>;
        /**
         * Summary message of the entity.
         */
        summaryMessage?: pulumi.Input<string>;
    }

    /**
     * Migration item properties.
     */
    export interface MigrationItemPropertiesResponse {
        /**
         * The allowed operations on the migration item, based on the current migration state of the item.
         */
        allowedOperations: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The current job details.
         */
        currentJob: pulumi.Input<inputs.recoveryservices.CurrentJobDetailsResponse>;
        /**
         * The consolidated health.
         */
        health: pulumi.Input<string>;
        /**
         * The list of health errors.
         */
        healthErrors: pulumi.Input<pulumi.Input<inputs.recoveryservices.HealthErrorResponse>[]>;
        /**
         * The on-premise virtual machine name.
         */
        machineName: pulumi.Input<string>;
        /**
         * The migration status.
         */
        migrationState: pulumi.Input<string>;
        /**
         * The migration state description.
         */
        migrationStateDescription: pulumi.Input<string>;
        /**
         * The name of policy governing this item.
         */
        policyFriendlyName: pulumi.Input<string>;
        /**
         * The ARM Id of policy governing this item.
         */
        policyId: pulumi.Input<string>;
        /**
         * The migration provider custom settings.
         */
        providerSpecificDetails?: pulumi.Input<inputs.recoveryservices.MigrationProviderSpecificSettingsResponse>;
        /**
         * The recovery services provider ARM Id.
         */
        recoveryServicesProviderId: pulumi.Input<string>;
        /**
         * The test migrate state.
         */
        testMigrateState: pulumi.Input<string>;
        /**
         * The test migrate state description.
         */
        testMigrateStateDescription: pulumi.Input<string>;
    }

    /**
     * Migration provider specific settings.
     */
    export interface MigrationProviderSpecificSettingsResponse {
        /**
         * Gets the instance type.
         */
        instanceType: pulumi.Input<string>;
    }

    /**
     * Network Mapping fabric specific settings.
     */
    export interface NetworkMappingFabricSpecificSettingsResponse {
        /**
         * Gets the Instance type.
         */
        instanceType: pulumi.Input<string>;
    }

    /**
     * Network Mapping Properties.
     */
    export interface NetworkMappingPropertiesResponse {
        /**
         * The fabric specific settings.
         */
        fabricSpecificSettings?: pulumi.Input<inputs.recoveryservices.NetworkMappingFabricSpecificSettingsResponse>;
        /**
         * The primary fabric friendly name.
         */
        primaryFabricFriendlyName?: pulumi.Input<string>;
        /**
         * The primary network friendly name.
         */
        primaryNetworkFriendlyName?: pulumi.Input<string>;
        /**
         * The primary network id for network mapping.
         */
        primaryNetworkId?: pulumi.Input<string>;
        /**
         * The recovery fabric ARM id.
         */
        recoveryFabricArmId?: pulumi.Input<string>;
        /**
         * The recovery fabric friendly name.
         */
        recoveryFabricFriendlyName?: pulumi.Input<string>;
        /**
         * The recovery network friendly name.
         */
        recoveryNetworkFriendlyName?: pulumi.Input<string>;
        /**
         * The recovery network id for network mapping.
         */
        recoveryNetworkId?: pulumi.Input<string>;
        /**
         * The pairing state for network mapping.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * Protection profile custom data details.
     */
    export interface PolicyPropertiesResponse {
        /**
         * The FriendlyName.
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The ReplicationChannelSetting.
         */
        providerSpecificDetails?: pulumi.Input<inputs.recoveryservices.PolicyProviderSpecificDetailsResponse>;
    }

    /**
     * Base class for Provider specific details for policies.
     */
    export interface PolicyProviderSpecificDetailsResponse {
        /**
         * Gets the class type. Overridden in derived classes.
         */
        instanceType: pulumi.Input<string>;
    }

    /**
     * Base class for provider specific input
     */
    export interface PolicyProviderSpecificInput {
        /**
         * The class type.
         */
        instanceType?: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint network resource that is linked to the Private Endpoint connection
     */
    export interface PrivateEndpoint {
        /**
         * Gets or sets id
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Private Endpoint Connection Response Properties
     */
    export interface PrivateEndpointConnection {
        /**
         * Gets or sets private endpoint associated with the private endpoint connection
         */
        privateEndpoint?: pulumi.Input<inputs.recoveryservices.PrivateEndpoint>;
        /**
         * Gets or sets private link service connection state
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.recoveryservices.PrivateLinkServiceConnectionState>;
        /**
         * Gets or sets provisioning state of the private endpoint connection
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Private Endpoint Connection Response Properties
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * Gets or sets private endpoint associated with the private endpoint connection
         */
        privateEndpoint?: pulumi.Input<inputs.recoveryservices.PrivateEndpointResponse>;
        /**
         * Gets or sets private link service connection state
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.recoveryservices.PrivateLinkServiceConnectionStateResponse>;
        /**
         * Gets or sets provisioning state of the private endpoint connection
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Information to be stored in Vault properties as an element of privateEndpointConnections List.
     */
    export interface PrivateEndpointConnectionVaultPropertiesResponse {
        /**
         * Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
         */
        id: pulumi.Input<string>;
        /**
         * Private Endpoint Connection Response Properties.
         */
        properties?: pulumi.Input<inputs.recoveryservices.PrivateEndpointConnectionResponse>;
    }

    /**
     * The Private Endpoint network resource that is linked to the Private Endpoint connection
     */
    export interface PrivateEndpointResponse {
        /**
         * Gets or sets id
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Private Link Service Connection State
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * Gets or sets actions required
         */
        actionRequired?: pulumi.Input<string>;
        /**
         * Gets or sets description
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the status
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Private Link Service Connection State
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * Gets or sets actions required
         */
        actionRequired?: pulumi.Input<string>;
        /**
         * Gets or sets description
         */
        description?: pulumi.Input<string>;
        /**
         * Gets or sets the status
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Protection container mapping properties.
     */
    export interface ProtectionContainerMappingPropertiesResponse {
        /**
         * Health of pairing.
         */
        health?: pulumi.Input<string>;
        /**
         * Health error.
         */
        healthErrorDetails?: pulumi.Input<pulumi.Input<inputs.recoveryservices.HealthErrorResponse>[]>;
        /**
         * Friendly name of replication policy.
         */
        policyFriendlyName?: pulumi.Input<string>;
        /**
         * Policy ARM Id.
         */
        policyId?: pulumi.Input<string>;
        /**
         * Provider specific provider details.
         */
        providerSpecificDetails?: pulumi.Input<inputs.recoveryservices.ProtectionContainerMappingProviderSpecificDetailsResponse>;
        /**
         * Friendly name of source fabric.
         */
        sourceFabricFriendlyName?: pulumi.Input<string>;
        /**
         * Friendly name of source protection container.
         */
        sourceProtectionContainerFriendlyName?: pulumi.Input<string>;
        /**
         * Association Status
         */
        state?: pulumi.Input<string>;
        /**
         * Friendly name of target fabric.
         */
        targetFabricFriendlyName?: pulumi.Input<string>;
        /**
         * Friendly name of paired container.
         */
        targetProtectionContainerFriendlyName?: pulumi.Input<string>;
        /**
         * Paired protection container ARM ID.
         */
        targetProtectionContainerId?: pulumi.Input<string>;
    }

    /**
     * Container mapping provider specific details.
     */
    export interface ProtectionContainerMappingProviderSpecificDetailsResponse {
        /**
         * Gets the class type. Overridden in derived classes.
         */
        instanceType: pulumi.Input<string>;
    }

    /**
     * The base class for a backup policy. Workload-specific backup policies are derived from this class.
     */
    export interface ProtectionPolicy {
        /**
         * This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
         */
        backupManagementType?: pulumi.Input<string>;
        /**
         * The number of items associated with this policy.
         */
        protectedItemsCount?: pulumi.Input<number>;
    }

    /**
     * The base class for a backup policy. Workload-specific backup policies are derived from this class.
     */
    export interface ProtectionPolicyResponse {
        /**
         * This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
         */
        backupManagementType?: pulumi.Input<string>;
        /**
         * The number of items associated with this policy.
         */
        protectedItemsCount?: pulumi.Input<number>;
    }

    /**
     * Recovery plan action details.
     */
    export interface RecoveryPlanAction {
        /**
         * The action name.
         */
        actionName: pulumi.Input<string>;
        /**
         * The custom details.
         */
        customDetails: pulumi.Input<inputs.recoveryservices.RecoveryPlanActionDetails>;
        /**
         * The list of failover directions.
         */
        failoverDirections: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The list of failover types.
         */
        failoverTypes: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Recovery plan action custom details.
     */
    export interface RecoveryPlanActionDetails {
    }

    /**
     * Recovery plan action custom details.
     */
    export interface RecoveryPlanActionDetailsResponse {
        /**
         * Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
         */
        instanceType: pulumi.Input<string>;
    }

    /**
     * Recovery plan action details.
     */
    export interface RecoveryPlanActionResponse {
        /**
         * The action name.
         */
        actionName: pulumi.Input<string>;
        /**
         * The custom details.
         */
        customDetails: pulumi.Input<inputs.recoveryservices.RecoveryPlanActionDetailsResponse>;
        /**
         * The list of failover directions.
         */
        failoverDirections: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The list of failover types.
         */
        failoverTypes: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Recovery plan group details.
     */
    export interface RecoveryPlanGroup {
        /**
         * The end group actions.
         */
        endGroupActions?: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanAction>[]>;
        /**
         * The group type.
         */
        groupType: pulumi.Input<string>;
        /**
         * The list of protected items.
         */
        replicationProtectedItems?: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanProtectedItem>[]>;
        /**
         * The start group actions.
         */
        startGroupActions?: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanAction>[]>;
    }

    /**
     * Recovery plan group details.
     */
    export interface RecoveryPlanGroupResponse {
        /**
         * The end group actions.
         */
        endGroupActions?: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanActionResponse>[]>;
        /**
         * The group type.
         */
        groupType: pulumi.Input<string>;
        /**
         * The list of protected items.
         */
        replicationProtectedItems?: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanProtectedItemResponse>[]>;
        /**
         * The start group actions.
         */
        startGroupActions?: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanActionResponse>[]>;
    }

    /**
     * Recovery plan custom details.
     */
    export interface RecoveryPlanPropertiesResponse {
        /**
         * The list of allowed operations.
         */
        allowedOperations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The current scenario details.
         */
        currentScenario?: pulumi.Input<inputs.recoveryservices.CurrentScenarioDetailsResponse>;
        /**
         * The recovery plan status.
         */
        currentScenarioStatus?: pulumi.Input<string>;
        /**
         * The recovery plan status description.
         */
        currentScenarioStatusDescription?: pulumi.Input<string>;
        /**
         * The failover deployment model.
         */
        failoverDeploymentModel?: pulumi.Input<string>;
        /**
         * The friendly name.
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The recovery plan groups.
         */
        groups?: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanGroupResponse>[]>;
        /**
         * The start time of the last planned failover.
         */
        lastPlannedFailoverTime?: pulumi.Input<string>;
        /**
         * The start time of the last test failover.
         */
        lastTestFailoverTime?: pulumi.Input<string>;
        /**
         * The start time of the last unplanned failover.
         */
        lastUnplannedFailoverTime?: pulumi.Input<string>;
        /**
         * The primary fabric friendly name.
         */
        primaryFabricFriendlyName?: pulumi.Input<string>;
        /**
         * The primary fabric Id.
         */
        primaryFabricId?: pulumi.Input<string>;
        /**
         * The provider id and provider specific details.
         */
        providerSpecificDetails: pulumi.Input<pulumi.Input<inputs.recoveryservices.RecoveryPlanProviderSpecificDetailsResponse>[]>;
        /**
         * The recovery fabric friendly name.
         */
        recoveryFabricFriendlyName?: pulumi.Input<string>;
        /**
         * The recovery fabric Id.
         */
        recoveryFabricId?: pulumi.Input<string>;
        /**
         * The list of replication providers.
         */
        replicationProviders?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Recovery plan protected item.
     */
    export interface RecoveryPlanProtectedItem {
        /**
         * The ARM Id of the recovery plan protected item.
         */
        id?: pulumi.Input<string>;
        /**
         * The virtual machine Id.
         */
        virtualMachineId?: pulumi.Input<string>;
    }

    /**
     * Recovery plan protected item.
     */
    export interface RecoveryPlanProtectedItemResponse {
        /**
         * The ARM Id of the recovery plan protected item.
         */
        id?: pulumi.Input<string>;
        /**
         * The virtual machine Id.
         */
        virtualMachineId?: pulumi.Input<string>;
    }

    /**
     * Recovery plan provider specific details.
     */
    export interface RecoveryPlanProviderSpecificDetailsResponse {
        /**
         * Gets the Instance type.
         */
        instanceType: pulumi.Input<string>;
    }

    /**
     * Recovery plan provider specific input base class.
     */
    export interface RecoveryPlanProviderSpecificInput {
        /**
         * Gets the Instance type.
         */
        instanceType?: pulumi.Input<string>;
    }

    /**
     * Recovery services provider properties.
     */
    export interface RecoveryServicesProviderPropertiesResponse {
        /**
         * The scenarios allowed on this provider.
         */
        allowedScenarios?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The authentication identity details.
         */
        authenticationIdentityDetails?: pulumi.Input<inputs.recoveryservices.IdentityProviderDetailsResponse>;
        /**
         * A value indicating whether DRA is responsive.
         */
        connectionStatus?: pulumi.Input<string>;
        /**
         * The DRA Id.
         */
        draIdentifier?: pulumi.Input<string>;
        /**
         * The fabric friendly name.
         */
        fabricFriendlyName?: pulumi.Input<string>;
        /**
         * Type of the site.
         */
        fabricType?: pulumi.Input<string>;
        /**
         * Friendly name of the DRA.
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The recovery services provider health error details.
         */
        healthErrorDetails?: pulumi.Input<pulumi.Input<inputs.recoveryservices.HealthErrorResponse>[]>;
        /**
         * Time when last heartbeat was sent by the DRA.
         */
        lastHeartBeat?: pulumi.Input<string>;
        /**
         * Number of protected VMs currently managed by the DRA.
         */
        protectedItemCount?: pulumi.Input<number>;
        /**
         * The provider version.
         */
        providerVersion?: pulumi.Input<string>;
        /**
         * The provider version details.
         */
        providerVersionDetails?: pulumi.Input<inputs.recoveryservices.VersionDetailsResponse>;
        /**
         * Expiry date of the version.
         */
        providerVersionExpiryDate?: pulumi.Input<string>;
        /**
         * DRA version status.
         */
        providerVersionState?: pulumi.Input<string>;
        /**
         * The resource access identity details.
         */
        resourceAccessIdentityDetails?: pulumi.Input<inputs.recoveryservices.IdentityProviderDetailsResponse>;
        /**
         * The fabric provider.
         */
        serverVersion?: pulumi.Input<string>;
    }

    /**
     * Replication protected item custom data details.
     */
    export interface ReplicationProtectedItemPropertiesResponse {
        /**
         * The Current active location of the PE.
         */
        activeLocation?: pulumi.Input<string>;
        /**
         * The allowed operations on the Replication protected item.
         */
        allowedOperations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The current scenario.
         */
        currentScenario?: pulumi.Input<inputs.recoveryservices.CurrentScenarioDetailsResponse>;
        /**
         * The consolidated failover health for the VM.
         */
        failoverHealth?: pulumi.Input<string>;
        /**
         * The recovery point ARM Id to which the Vm was failed over.
         */
        failoverRecoveryPointId?: pulumi.Input<string>;
        /**
         * The name.
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * List of health errors.
         */
        healthErrors?: pulumi.Input<pulumi.Input<inputs.recoveryservices.HealthErrorResponse>[]>;
        /**
         * The Last successful failover time.
         */
        lastSuccessfulFailoverTime?: pulumi.Input<string>;
        /**
         * The Last successful test failover time.
         */
        lastSuccessfulTestFailoverTime?: pulumi.Input<string>;
        /**
         * The name of Policy governing this PE.
         */
        policyFriendlyName?: pulumi.Input<string>;
        /**
         * The ID of Policy governing this PE.
         */
        policyId?: pulumi.Input<string>;
        /**
         * The friendly name of the primary fabric.
         */
        primaryFabricFriendlyName?: pulumi.Input<string>;
        /**
         * The fabric provider of the primary fabric.
         */
        primaryFabricProvider?: pulumi.Input<string>;
        /**
         * The name of primary protection container friendly name.
         */
        primaryProtectionContainerFriendlyName?: pulumi.Input<string>;
        /**
         * The protected item ARM Id.
         */
        protectableItemId?: pulumi.Input<string>;
        /**
         * The type of protected item type.
         */
        protectedItemType?: pulumi.Input<string>;
        /**
         * The protection status.
         */
        protectionState?: pulumi.Input<string>;
        /**
         * The protection state description.
         */
        protectionStateDescription?: pulumi.Input<string>;
        /**
         * The Replication provider custom settings.
         */
        providerSpecificDetails?: pulumi.Input<inputs.recoveryservices.ReplicationProviderSpecificSettingsResponse>;
        /**
         * The recovery container Id.
         */
        recoveryContainerId?: pulumi.Input<string>;
        /**
         * The friendly name of recovery fabric.
         */
        recoveryFabricFriendlyName?: pulumi.Input<string>;
        /**
         * The Arm Id of recovery fabric.
         */
        recoveryFabricId?: pulumi.Input<string>;
        /**
         * The name of recovery container friendly name.
         */
        recoveryProtectionContainerFriendlyName?: pulumi.Input<string>;
        /**
         * The recovery provider ARM Id.
         */
        recoveryServicesProviderId?: pulumi.Input<string>;
        /**
         * The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
         */
        replicationHealth?: pulumi.Input<string>;
        /**
         * The Test failover state.
         */
        testFailoverState?: pulumi.Input<string>;
        /**
         * The Test failover state description.
         */
        testFailoverStateDescription?: pulumi.Input<string>;
    }

    /**
     * Provider specific input for pairing operations.
     */
    export interface ReplicationProviderSpecificContainerMappingInput {
        /**
         * The class type.
         */
        instanceType?: pulumi.Input<string>;
    }

    /**
     * Replication provider specific settings.
     */
    export interface ReplicationProviderSpecificSettingsResponse {
        /**
         * Gets the Instance type.
         */
        instanceType: pulumi.Input<string>;
    }

    /**
     * Identifies the unique system identifier for each Azure resource.
     */
    export interface Sku {
        /**
         * The Sku name.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Identifies the unique system identifier for each Azure resource.
     */
    export interface SkuResponse {
        /**
         * The Sku name.
         */
        name: pulumi.Input<string>;
    }

    /**
     * Storage mapping properties.
     */
    export interface StorageClassificationMappingPropertiesResponse {
        /**
         * Target storage object Id.
         */
        targetStorageClassificationId?: pulumi.Input<string>;
    }

    /**
     * Storage mapping input properties.
     */
    export interface StorageMappingInputProperties {
        /**
         * The ID of the storage object.
         */
        targetStorageClassificationId?: pulumi.Input<string>;
    }

    /**
     * Details for upgrading vault.
     */
    export interface UpgradeDetails {
    }

    /**
     * Details for upgrading vault.
     */
    export interface UpgradeDetailsResponse {
        /**
         * UTC time at which the upgrade operation has ended.
         */
        endTimeUtc: pulumi.Input<string>;
        /**
         * UTC time at which the upgrade operation status was last updated.
         */
        lastUpdatedTimeUtc: pulumi.Input<string>;
        /**
         * Message to the user containing information about the upgrade operation.
         */
        message: pulumi.Input<string>;
        /**
         * ID of the vault upgrade operation.
         */
        operationId: pulumi.Input<string>;
        /**
         * Resource ID of the vault before the upgrade.
         */
        previousResourceId: pulumi.Input<string>;
        /**
         * UTC time at which the upgrade operation has started.
         */
        startTimeUtc: pulumi.Input<string>;
        /**
         * Status of the vault upgrade operation.
         */
        status: pulumi.Input<string>;
        /**
         * The way the vault upgrade was triggered.
         */
        triggerType: pulumi.Input<string>;
        /**
         * Resource ID of the upgraded vault.
         */
        upgradedResourceId: pulumi.Input<string>;
    }

    /**
     * vCenter properties.
     */
    export interface VCenterPropertiesResponse {
        /**
         * The VCenter discovery status.
         */
        discoveryStatus?: pulumi.Input<string>;
        /**
         * The ARM resource name of the fabric containing this VCenter.
         */
        fabricArmResourceName?: pulumi.Input<string>;
        /**
         * Friendly name of the vCenter.
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * The health errors for this VCenter.
         */
        healthErrors?: pulumi.Input<pulumi.Input<inputs.recoveryservices.HealthErrorResponse>[]>;
        /**
         * The infrastructure Id of vCenter.
         */
        infrastructureId?: pulumi.Input<string>;
        /**
         * VCenter internal ID.
         */
        internalId?: pulumi.Input<string>;
        /**
         * The IP address of the vCenter.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * The time when the last heartbeat was received by vCenter.
         */
        lastHeartbeat?: pulumi.Input<string>;
        /**
         * The port number for discovery.
         */
        port?: pulumi.Input<string>;
        /**
         * The process server Id.
         */
        processServerId?: pulumi.Input<string>;
        /**
         * The account Id which has privileges to discover the vCenter.
         */
        runAsAccountId?: pulumi.Input<string>;
    }

    /**
     * Properties of the vault.
     */
    export interface VaultProperties {
        /**
         * Details for upgrading vault.
         */
        upgradeDetails?: pulumi.Input<inputs.recoveryservices.UpgradeDetails>;
    }

    /**
     * Properties of the vault.
     */
    export interface VaultPropertiesResponse {
        /**
         * List of private endpoint connection.
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.recoveryservices.PrivateEndpointConnectionVaultPropertiesResponse>[]>;
        /**
         * Private endpoint state for backup.
         */
        privateEndpointStateForBackup: pulumi.Input<string>;
        /**
         * Private endpoint state for site recovery.
         */
        privateEndpointStateForSiteRecovery: pulumi.Input<string>;
        /**
         * Provisioning State.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Details for upgrading vault.
         */
        upgradeDetails?: pulumi.Input<inputs.recoveryservices.UpgradeDetailsResponse>;
    }

    /**
     * Version related details.
     */
    export interface VersionDetailsResponse {
        /**
         * Version expiry date.
         */
        expiryDate?: pulumi.Input<string>;
        /**
         * A value indicating whether security update required.
         */
        status?: pulumi.Input<string>;
        /**
         * The agent version.
         */
        version?: pulumi.Input<string>;
    }
}

export namespace redhatopenshift {
    /**
     * APIServerProfile represents an API server profile.
     */
    export interface APIServerProfile {
        /**
         * The IP of the cluster API server (immutable).
         */
        ip?: pulumi.Input<string>;
        /**
         * The URL to access the cluster API server (immutable).
         */
        url?: pulumi.Input<string>;
        /**
         * API server visibility (immutable).
         */
        visibility?: pulumi.Input<string>;
    }

    /**
     * APIServerProfile represents an API server profile.
     */
    export interface APIServerProfileResponse {
        /**
         * The IP of the cluster API server (immutable).
         */
        ip?: pulumi.Input<string>;
        /**
         * The URL to access the cluster API server (immutable).
         */
        url?: pulumi.Input<string>;
        /**
         * API server visibility (immutable).
         */
        visibility?: pulumi.Input<string>;
    }

    /**
     * ClusterProfile represents a cluster profile.
     */
    export interface ClusterProfile {
        /**
         * The domain for the cluster (immutable).
         */
        domain?: pulumi.Input<string>;
        /**
         * The pull secret for the cluster (immutable).
         */
        pullSecret?: pulumi.Input<string>;
        /**
         * The ID of the cluster resource group (immutable).
         */
        resourceGroupId?: pulumi.Input<string>;
        /**
         * The version of the cluster (immutable).
         */
        version?: pulumi.Input<string>;
    }

    /**
     * ClusterProfile represents a cluster profile.
     */
    export interface ClusterProfileResponse {
        /**
         * The domain for the cluster (immutable).
         */
        domain?: pulumi.Input<string>;
        /**
         * The pull secret for the cluster (immutable).
         */
        pullSecret?: pulumi.Input<string>;
        /**
         * The ID of the cluster resource group (immutable).
         */
        resourceGroupId?: pulumi.Input<string>;
        /**
         * The version of the cluster (immutable).
         */
        version?: pulumi.Input<string>;
    }

    /**
     * ConsoleProfile represents a console profile.
     */
    export interface ConsoleProfile {
        /**
         * The URL to access the cluster console (immutable).
         */
        url?: pulumi.Input<string>;
    }

    /**
     * ConsoleProfile represents a console profile.
     */
    export interface ConsoleProfileResponse {
        /**
         * The URL to access the cluster console (immutable).
         */
        url?: pulumi.Input<string>;
    }

    /**
     * IngressProfile represents an ingress profile.
     */
    export interface IngressProfile {
        /**
         * The IP of the ingress (immutable).
         */
        ip?: pulumi.Input<string>;
        /**
         * The ingress profile name.  Must be "default" (immutable).
         */
        name?: pulumi.Input<string>;
        /**
         * Ingress visibility (immutable).
         */
        visibility?: pulumi.Input<string>;
    }

    /**
     * IngressProfile represents an ingress profile.
     */
    export interface IngressProfileResponse {
        /**
         * The IP of the ingress (immutable).
         */
        ip?: pulumi.Input<string>;
        /**
         * The ingress profile name.  Must be "default" (immutable).
         */
        name?: pulumi.Input<string>;
        /**
         * Ingress visibility (immutable).
         */
        visibility?: pulumi.Input<string>;
    }

    /**
     * MasterProfile represents a master profile.
     */
    export interface MasterProfile {
        /**
         * The Azure resource ID of the master subnet (immutable).
         */
        subnetId?: pulumi.Input<string>;
        /**
         * The size of the master VMs (immutable).
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * MasterProfile represents a master profile.
     */
    export interface MasterProfileResponse {
        /**
         * The Azure resource ID of the master subnet (immutable).
         */
        subnetId?: pulumi.Input<string>;
        /**
         * The size of the master VMs (immutable).
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * NetworkProfile represents a network profile.
     */
    export interface NetworkProfile {
        /**
         * The CIDR used for OpenShift/Kubernetes Pods (immutable).
         */
        podCidr?: pulumi.Input<string>;
        /**
         * The CIDR used for OpenShift/Kubernetes Services (immutable).
         */
        serviceCidr?: pulumi.Input<string>;
    }

    /**
     * NetworkProfile represents a network profile.
     */
    export interface NetworkProfileResponse {
        /**
         * The CIDR used for OpenShift/Kubernetes Pods (immutable).
         */
        podCidr?: pulumi.Input<string>;
        /**
         * The CIDR used for OpenShift/Kubernetes Services (immutable).
         */
        serviceCidr?: pulumi.Input<string>;
    }

    /**
     * OpenShiftClusterProperties represents an OpenShift cluster's properties.
     */
    export interface OpenShiftClusterProperties {
        /**
         * The cluster API server profile.
         */
        apiserverProfile?: pulumi.Input<inputs.redhatopenshift.APIServerProfile>;
        /**
         * The cluster profile.
         */
        clusterProfile?: pulumi.Input<inputs.redhatopenshift.ClusterProfile>;
        /**
         * The console profile.
         */
        consoleProfile?: pulumi.Input<inputs.redhatopenshift.ConsoleProfile>;
        /**
         * The cluster ingress profiles.
         */
        ingressProfiles?: pulumi.Input<pulumi.Input<inputs.redhatopenshift.IngressProfile>[]>;
        /**
         * The cluster master profile.
         */
        masterProfile?: pulumi.Input<inputs.redhatopenshift.MasterProfile>;
        /**
         * The cluster network profile.
         */
        networkProfile?: pulumi.Input<inputs.redhatopenshift.NetworkProfile>;
        /**
         * The cluster provisioning state (immutable).
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The cluster service principal profile.
         */
        servicePrincipalProfile?: pulumi.Input<inputs.redhatopenshift.ServicePrincipalProfile>;
        /**
         * The cluster worker profiles.
         */
        workerProfiles?: pulumi.Input<pulumi.Input<inputs.redhatopenshift.WorkerProfile>[]>;
    }

    /**
     * OpenShiftClusterProperties represents an OpenShift cluster's properties.
     */
    export interface OpenShiftClusterPropertiesResponse {
        /**
         * The cluster API server profile.
         */
        apiserverProfile?: pulumi.Input<inputs.redhatopenshift.APIServerProfileResponse>;
        /**
         * The cluster profile.
         */
        clusterProfile?: pulumi.Input<inputs.redhatopenshift.ClusterProfileResponse>;
        /**
         * The console profile.
         */
        consoleProfile?: pulumi.Input<inputs.redhatopenshift.ConsoleProfileResponse>;
        /**
         * The cluster ingress profiles.
         */
        ingressProfiles?: pulumi.Input<pulumi.Input<inputs.redhatopenshift.IngressProfileResponse>[]>;
        /**
         * The cluster master profile.
         */
        masterProfile?: pulumi.Input<inputs.redhatopenshift.MasterProfileResponse>;
        /**
         * The cluster network profile.
         */
        networkProfile?: pulumi.Input<inputs.redhatopenshift.NetworkProfileResponse>;
        /**
         * The cluster provisioning state (immutable).
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * The cluster service principal profile.
         */
        servicePrincipalProfile?: pulumi.Input<inputs.redhatopenshift.ServicePrincipalProfileResponse>;
        /**
         * The cluster worker profiles.
         */
        workerProfiles?: pulumi.Input<pulumi.Input<inputs.redhatopenshift.WorkerProfileResponse>[]>;
    }

    /**
     * ServicePrincipalProfile represents a service principal profile.
     */
    export interface ServicePrincipalProfile {
        /**
         * The client ID used for the cluster (immutable).
         */
        clientId?: pulumi.Input<string>;
        /**
         * The client secret used for the cluster (immutable).
         */
        clientSecret?: pulumi.Input<string>;
    }

    /**
     * ServicePrincipalProfile represents a service principal profile.
     */
    export interface ServicePrincipalProfileResponse {
        /**
         * The client ID used for the cluster (immutable).
         */
        clientId?: pulumi.Input<string>;
        /**
         * The client secret used for the cluster (immutable).
         */
        clientSecret?: pulumi.Input<string>;
    }

    /**
     * WorkerProfile represents a worker profile.
     */
    export interface WorkerProfile {
        /**
         * The number of worker VMs.  Must be between 3 and 20 (immutable).
         */
        count?: pulumi.Input<number>;
        /**
         * The disk size of the worker VMs.  Must be 128 or greater (immutable).
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * The worker profile name.  Must be "worker" (immutable).
         */
        name?: pulumi.Input<string>;
        /**
         * The Azure resource ID of the worker subnet (immutable).
         */
        subnetId?: pulumi.Input<string>;
        /**
         * The size of the worker VMs (immutable).
         */
        vmSize?: pulumi.Input<string>;
    }

    /**
     * WorkerProfile represents a worker profile.
     */
    export interface WorkerProfileResponse {
        /**
         * The number of worker VMs.  Must be between 3 and 20 (immutable).
         */
        count?: pulumi.Input<number>;
        /**
         * The disk size of the worker VMs.  Must be 128 or greater (immutable).
         */
        diskSizeGB?: pulumi.Input<number>;
        /**
         * The worker profile name.  Must be "worker" (immutable).
         */
        name?: pulumi.Input<string>;
        /**
         * The Azure resource ID of the worker subnet (immutable).
         */
        subnetId?: pulumi.Input<string>;
        /**
         * The size of the worker VMs (immutable).
         */
        vmSize?: pulumi.Input<string>;
    }
}

export namespace relay {
    /**
     * Authorization rule properties.
     */
    export interface AuthorizationRuleProperties {
        /**
         * The rights associated with the rule.
         */
        rights: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Authorization rule properties.
     */
    export interface AuthorizationRuleResponseProperties {
        /**
         * The rights associated with the rule.
         */
        rights: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of the HybridConnection.
     */
    export interface HybridConnectionProperties {
        /**
         * Returns true if client authorization is needed for this hybrid connection; otherwise, false.
         */
        requiresClientAuthorization?: pulumi.Input<boolean>;
        /**
         * The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.
         */
        userMetadata?: pulumi.Input<string>;
    }

    /**
     * Properties of the HybridConnection.
     */
    export interface HybridConnectionResponseProperties {
        /**
         * The time the hybrid connection was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.
         */
        listenerCount: pulumi.Input<number>;
        /**
         * Returns true if client authorization is needed for this hybrid connection; otherwise, false.
         */
        requiresClientAuthorization?: pulumi.Input<boolean>;
        /**
         * The time the namespace was updated.
         */
        updatedAt: pulumi.Input<string>;
        /**
         * The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.
         */
        userMetadata?: pulumi.Input<string>;
    }

    /**
     * Properties of the namespace.
     */
    export interface RelayNamespaceProperties {
    }

    /**
     * Properties of the namespace.
     */
    export interface RelayNamespacePropertiesResponse {
        /**
         * The time the namespace was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * Identifier for Azure Insights metrics.
         */
        metricId: pulumi.Input<string>;
        provisioningState: pulumi.Input<string>;
        /**
         * Endpoint you can use to perform Service Bus operations.
         */
        serviceBusEndpoint: pulumi.Input<string>;
        /**
         * The time the namespace was updated.
         */
        updatedAt: pulumi.Input<string>;
    }

    /**
     * SKU of the namespace.
     */
    export interface Sku {
        /**
         * Name of this SKU.
         */
        name: pulumi.Input<string>;
        /**
         * The tier of this SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * SKU of the namespace.
     */
    export interface SkuResponse {
        /**
         * Name of this SKU.
         */
        name: pulumi.Input<string>;
        /**
         * The tier of this SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Properties of the WCF relay.
     */
    export interface WcfRelayProperties {
        /**
         * WCF relay type.
         */
        relayType?: pulumi.Input<string>;
        /**
         * Returns true if client authorization is needed for this relay; otherwise, false.
         */
        requiresClientAuthorization?: pulumi.Input<boolean>;
        /**
         * Returns true if transport security is needed for this relay; otherwise, false.
         */
        requiresTransportSecurity?: pulumi.Input<boolean>;
        /**
         * The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored.
         */
        userMetadata?: pulumi.Input<string>;
    }

    /**
     * Properties of the WCF relay.
     */
    export interface WcfRelayResponseProperties {
        /**
         * The time the WCF relay was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * Returns true if the relay is dynamic; otherwise, false.
         */
        isDynamic: pulumi.Input<boolean>;
        /**
         * The number of listeners for this relay. Note that min :1 and max:25 are supported.
         */
        listenerCount: pulumi.Input<number>;
        /**
         * WCF relay type.
         */
        relayType?: pulumi.Input<string>;
        /**
         * Returns true if client authorization is needed for this relay; otherwise, false.
         */
        requiresClientAuthorization?: pulumi.Input<boolean>;
        /**
         * Returns true if transport security is needed for this relay; otherwise, false.
         */
        requiresTransportSecurity?: pulumi.Input<boolean>;
        /**
         * The time the namespace was updated.
         */
        updatedAt: pulumi.Input<string>;
        /**
         * The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored.
         */
        userMetadata?: pulumi.Input<string>;
    }
}

export namespace resources {
    /**
     * The type of the paths for alias.
     */
    export interface AliasPathResponse {
        /**
         * The API versions.
         */
        apiVersions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The path of an alias.
         */
        path?: pulumi.Input<string>;
        /**
         * The pattern for an alias path.
         */
        pattern?: pulumi.Input<inputs.resources.AliasPatternResponse>;
    }

    /**
     * The type of the pattern for an alias path.
     */
    export interface AliasPatternResponse {
        /**
         * The alias pattern phrase.
         */
        phrase?: pulumi.Input<string>;
        /**
         * The type of alias pattern
         */
        type?: pulumi.Input<string>;
        /**
         * The alias pattern variable.
         */
        variable?: pulumi.Input<string>;
    }

    /**
     * The alias type. 
     */
    export interface AliasResponse {
        /**
         * The default path for an alias.
         */
        defaultPath?: pulumi.Input<string>;
        /**
         * The default pattern for an alias.
         */
        defaultPattern?: pulumi.Input<inputs.resources.AliasPatternResponse>;
        /**
         * The alias name.
         */
        name?: pulumi.Input<string>;
        /**
         * The paths for an alias.
         */
        paths?: pulumi.Input<pulumi.Input<inputs.resources.AliasPathResponse>[]>;
        /**
         * The type of the alias.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Deployment dependency information.
     */
    export interface BasicDependencyResponse {
        /**
         * The ID of the dependency.
         */
        id?: pulumi.Input<string>;
        /**
         * The dependency resource name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * The dependency resource type.
         */
        resourceType?: pulumi.Input<string>;
    }

    /**
     * The debug setting.
     */
    export interface DebugSetting {
        /**
         * Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
         */
        detailLevel?: pulumi.Input<string>;
    }

    /**
     * The debug setting.
     */
    export interface DebugSettingResponse {
        /**
         * Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
         */
        detailLevel?: pulumi.Input<string>;
    }

    /**
     * Deployment dependency information.
     */
    export interface DependencyResponse {
        /**
         * The list of dependencies.
         */
        dependsOn?: pulumi.Input<pulumi.Input<inputs.resources.BasicDependencyResponse>[]>;
        /**
         * The ID of the dependency.
         */
        id?: pulumi.Input<string>;
        /**
         * The dependency resource name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * The dependency resource type.
         */
        resourceType?: pulumi.Input<string>;
    }

    /**
     * Deployment properties.
     */
    export interface DeploymentProperties {
        /**
         * The debug setting of the deployment.
         */
        debugSetting?: pulumi.Input<inputs.resources.DebugSetting>;
        /**
         * The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.
         */
        mode: pulumi.Input<string>;
        /**
         * The deployment on error behavior.
         */
        onErrorDeployment?: pulumi.Input<inputs.resources.OnErrorDeployment>;
        /**
         * Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
         */
        parametersLink?: pulumi.Input<inputs.resources.ParametersLink>;
        /**
         * The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.
         */
        template?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The URI of the template. Use either the templateLink property or the template property, but not both.
         */
        templateLink?: pulumi.Input<inputs.resources.TemplateLink>;
    }

    /**
     * Deployment properties with additional details.
     */
    export interface DeploymentPropertiesExtendedResponse {
        /**
         * The correlation ID of the deployment.
         */
        correlationId: pulumi.Input<string>;
        /**
         * The debug setting of the deployment.
         */
        debugSetting: pulumi.Input<inputs.resources.DebugSettingResponse>;
        /**
         * The list of deployment dependencies.
         */
        dependencies: pulumi.Input<pulumi.Input<inputs.resources.DependencyResponse>[]>;
        /**
         * The duration of the template deployment.
         */
        duration: pulumi.Input<string>;
        /**
         * The deployment error.
         */
        error: pulumi.Input<inputs.resources.ErrorResponseResponse>;
        /**
         * The deployment mode. Possible values are Incremental and Complete.
         */
        mode: pulumi.Input<string>;
        /**
         * The deployment on error behavior.
         */
        onErrorDeployment: pulumi.Input<inputs.resources.OnErrorDeploymentExtendedResponse>;
        /**
         * Array of provisioned resources.
         */
        outputResources: pulumi.Input<pulumi.Input<inputs.resources.ResourceReferenceResponse>[]>;
        /**
         * Key/value pairs that represent deployment output.
         */
        outputs: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Deployment parameters. 
         */
        parameters: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The URI referencing the parameters. 
         */
        parametersLink: pulumi.Input<inputs.resources.ParametersLinkResponse>;
        /**
         * The list of resource providers needed for the deployment.
         */
        providers: pulumi.Input<pulumi.Input<inputs.resources.ProviderResponse>[]>;
        /**
         * Denotes the state of provisioning.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The hash produced for the template.
         */
        templateHash: pulumi.Input<string>;
        /**
         * The URI referencing the template.
         */
        templateLink: pulumi.Input<inputs.resources.TemplateLinkResponse>;
        /**
         * The timestamp of the template deployment.
         */
        timestamp: pulumi.Input<string>;
        /**
         * Array of validated resources.
         */
        validatedResources: pulumi.Input<pulumi.Input<inputs.resources.ResourceReferenceResponse>[]>;
    }

    /**
     * The resource management error additional info.
     */
    export interface ErrorAdditionalInfoResponse {
        /**
         * The additional info.
         */
        info: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The additional info type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The resource management error response.
     */
    export interface ErrorResponseResponse {
        /**
         * The error additional info.
         */
        additionalInfo: pulumi.Input<pulumi.Input<inputs.resources.ErrorAdditionalInfoResponse>[]>;
        /**
         * The error code.
         */
        code: pulumi.Input<string>;
        /**
         * The error details.
         */
        details: pulumi.Input<pulumi.Input<inputs.resources.ErrorResponseResponse>[]>;
        /**
         * The error message.
         */
        message: pulumi.Input<string>;
        /**
         * The error target.
         */
        target: pulumi.Input<string>;
    }

    /**
     * Deployment on error behavior.
     */
    export interface OnErrorDeployment {
        /**
         * The deployment to be used on error case.
         */
        deploymentName?: pulumi.Input<string>;
        /**
         * The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Deployment on error behavior with additional details.
     */
    export interface OnErrorDeploymentExtendedResponse {
        /**
         * The deployment to be used on error case.
         */
        deploymentName?: pulumi.Input<string>;
        /**
         * The state of the provisioning for the on error deployment.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Entity representing the reference to the deployment parameters.
     */
    export interface ParametersLink {
        /**
         * If included, must match the ContentVersion in the template.
         */
        contentVersion?: pulumi.Input<string>;
        /**
         * The URI of the parameters file.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Entity representing the reference to the deployment parameters.
     */
    export interface ParametersLinkResponse {
        /**
         * If included, must match the ContentVersion in the template.
         */
        contentVersion?: pulumi.Input<string>;
        /**
         * The URI of the parameters file.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Resource type managed by the resource provider.
     */
    export interface ProviderResourceTypeResponse {
        /**
         * The aliases that are supported by this resource type.
         */
        aliases?: pulumi.Input<pulumi.Input<inputs.resources.AliasResponse>[]>;
        /**
         * The API version.
         */
        apiVersions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The additional capabilities offered by this resource type.
         */
        capabilities?: pulumi.Input<string>;
        /**
         * The collection of locations where this resource type can be created.
         */
        locations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The properties.
         */
        properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The resource type.
         */
        resourceType?: pulumi.Input<string>;
    }

    /**
     * Resource provider information.
     */
    export interface ProviderResponse {
        /**
         * The provider ID.
         */
        id: pulumi.Input<string>;
        /**
         * The namespace of the resource provider.
         */
        namespace?: pulumi.Input<string>;
        /**
         * The registration policy of the resource provider.
         */
        registrationPolicy: pulumi.Input<string>;
        /**
         * The registration state of the resource provider.
         */
        registrationState: pulumi.Input<string>;
        /**
         * The collection of provider resource types.
         */
        resourceTypes: pulumi.Input<pulumi.Input<inputs.resources.ProviderResourceTypeResponse>[]>;
    }

    /**
     * The resource Id model.
     */
    export interface ResourceReferenceResponse {
        /**
         * The fully qualified resource Id.
         */
        id: pulumi.Input<string>;
    }

    /**
     * Entity representing the reference to the template.
     */
    export interface TemplateLink {
        /**
         * If included, must match the ContentVersion in the template.
         */
        contentVersion?: pulumi.Input<string>;
        /**
         * The resource id of a Template Spec. Use either the id or uri property, but not both.
         */
        id?: pulumi.Input<string>;
        /**
         * Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
         */
        relativePath?: pulumi.Input<string>;
        /**
         * The URI of the template to deploy. Use either the uri or id property, but not both.
         */
        uri?: pulumi.Input<string>;
    }

    /**
     * Entity representing the reference to the template.
     */
    export interface TemplateLinkResponse {
        /**
         * If included, must match the ContentVersion in the template.
         */
        contentVersion?: pulumi.Input<string>;
        /**
         * The resource id of a Template Spec. Use either the id or uri property, but not both.
         */
        id?: pulumi.Input<string>;
        /**
         * Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
         */
        relativePath?: pulumi.Input<string>;
        /**
         * The URI of the template to deploy. Use either the uri or id property, but not both.
         */
        uri?: pulumi.Input<string>;
    }
}

export namespace scheduler {
    export interface HttpAuthentication {
        /**
         * Gets or sets the HTTP authentication type.
         */
        type: pulumi.Input<string>;
    }

    export interface HttpAuthenticationResponse {
        /**
         * Gets or sets the HTTP authentication type.
         */
        type: pulumi.Input<string>;
    }

    export interface HttpRequest {
        /**
         * Gets or sets the authentication method of the request.
         */
        authentication?: pulumi.Input<inputs.scheduler.HttpAuthentication>;
        /**
         * Gets or sets the request body.
         */
        body?: pulumi.Input<string>;
        /**
         * Gets or sets the headers.
         */
        headers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the method of the request.
         */
        method?: pulumi.Input<string>;
        /**
         * Gets or sets the URI of the request.
         */
        uri?: pulumi.Input<string>;
    }

    export interface HttpRequestResponse {
        /**
         * Gets or sets the authentication method of the request.
         */
        authentication?: pulumi.Input<inputs.scheduler.HttpAuthenticationResponse>;
        /**
         * Gets or sets the request body.
         */
        body?: pulumi.Input<string>;
        /**
         * Gets or sets the headers.
         */
        headers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the method of the request.
         */
        method?: pulumi.Input<string>;
        /**
         * Gets or sets the URI of the request.
         */
        uri?: pulumi.Input<string>;
    }

    export interface JobAction {
        /**
         * Gets or sets the error action.
         */
        errorAction?: pulumi.Input<inputs.scheduler.JobErrorAction>;
        /**
         * Gets or sets the storage queue message.
         */
        queueMessage?: pulumi.Input<inputs.scheduler.StorageQueueMessage>;
        /**
         * Gets or sets the http requests.
         */
        request?: pulumi.Input<inputs.scheduler.HttpRequest>;
        /**
         * Gets or sets the retry policy.
         */
        retryPolicy?: pulumi.Input<inputs.scheduler.RetryPolicy>;
        /**
         * Gets or sets the service bus queue message.
         */
        serviceBusQueueMessage?: pulumi.Input<inputs.scheduler.ServiceBusQueueMessage>;
        /**
         * Gets or sets the service bus topic message.
         */
        serviceBusTopicMessage?: pulumi.Input<inputs.scheduler.ServiceBusTopicMessage>;
        /**
         * Gets or sets the job action type.
         */
        type?: pulumi.Input<string>;
    }

    export interface JobActionResponse {
        /**
         * Gets or sets the error action.
         */
        errorAction?: pulumi.Input<inputs.scheduler.JobErrorActionResponse>;
        /**
         * Gets or sets the storage queue message.
         */
        queueMessage?: pulumi.Input<inputs.scheduler.StorageQueueMessageResponse>;
        /**
         * Gets or sets the http requests.
         */
        request?: pulumi.Input<inputs.scheduler.HttpRequestResponse>;
        /**
         * Gets or sets the retry policy.
         */
        retryPolicy?: pulumi.Input<inputs.scheduler.RetryPolicyResponse>;
        /**
         * Gets or sets the service bus queue message.
         */
        serviceBusQueueMessage?: pulumi.Input<inputs.scheduler.ServiceBusQueueMessageResponse>;
        /**
         * Gets or sets the service bus topic message.
         */
        serviceBusTopicMessage?: pulumi.Input<inputs.scheduler.ServiceBusTopicMessageResponse>;
        /**
         * Gets or sets the job action type.
         */
        type?: pulumi.Input<string>;
    }

    export interface JobCollectionProperties {
        /**
         * Gets or sets the job collection quota.
         */
        quota?: pulumi.Input<inputs.scheduler.JobCollectionQuota>;
        /**
         * Gets or sets the SKU.
         */
        sku?: pulumi.Input<inputs.scheduler.Sku>;
        /**
         * Gets or sets the state.
         */
        state?: pulumi.Input<string>;
    }

    export interface JobCollectionPropertiesResponse {
        /**
         * Gets or sets the job collection quota.
         */
        quota?: pulumi.Input<inputs.scheduler.JobCollectionQuotaResponse>;
        /**
         * Gets or sets the SKU.
         */
        sku?: pulumi.Input<inputs.scheduler.SkuResponse>;
        /**
         * Gets or sets the state.
         */
        state?: pulumi.Input<string>;
    }

    export interface JobCollectionQuota {
        /**
         * Gets or set the maximum job count.
         */
        maxJobCount?: pulumi.Input<number>;
        /**
         * Gets or sets the maximum job occurrence.
         */
        maxJobOccurrence?: pulumi.Input<number>;
        /**
         * Gets or set the maximum recurrence.
         */
        maxRecurrence?: pulumi.Input<inputs.scheduler.JobMaxRecurrence>;
    }

    export interface JobCollectionQuotaResponse {
        /**
         * Gets or set the maximum job count.
         */
        maxJobCount?: pulumi.Input<number>;
        /**
         * Gets or sets the maximum job occurrence.
         */
        maxJobOccurrence?: pulumi.Input<number>;
        /**
         * Gets or set the maximum recurrence.
         */
        maxRecurrence?: pulumi.Input<inputs.scheduler.JobMaxRecurrenceResponse>;
    }

    export interface JobErrorAction {
        /**
         * Gets or sets the storage queue message.
         */
        queueMessage?: pulumi.Input<inputs.scheduler.StorageQueueMessage>;
        /**
         * Gets or sets the http requests.
         */
        request?: pulumi.Input<inputs.scheduler.HttpRequest>;
        /**
         * Gets or sets the retry policy.
         */
        retryPolicy?: pulumi.Input<inputs.scheduler.RetryPolicy>;
        /**
         * Gets or sets the service bus queue message.
         */
        serviceBusQueueMessage?: pulumi.Input<inputs.scheduler.ServiceBusQueueMessage>;
        /**
         * Gets or sets the service bus topic message.
         */
        serviceBusTopicMessage?: pulumi.Input<inputs.scheduler.ServiceBusTopicMessage>;
        /**
         * Gets or sets the job error action type.
         */
        type?: pulumi.Input<string>;
    }

    export interface JobErrorActionResponse {
        /**
         * Gets or sets the storage queue message.
         */
        queueMessage?: pulumi.Input<inputs.scheduler.StorageQueueMessageResponse>;
        /**
         * Gets or sets the http requests.
         */
        request?: pulumi.Input<inputs.scheduler.HttpRequestResponse>;
        /**
         * Gets or sets the retry policy.
         */
        retryPolicy?: pulumi.Input<inputs.scheduler.RetryPolicyResponse>;
        /**
         * Gets or sets the service bus queue message.
         */
        serviceBusQueueMessage?: pulumi.Input<inputs.scheduler.ServiceBusQueueMessageResponse>;
        /**
         * Gets or sets the service bus topic message.
         */
        serviceBusTopicMessage?: pulumi.Input<inputs.scheduler.ServiceBusTopicMessageResponse>;
        /**
         * Gets or sets the job error action type.
         */
        type?: pulumi.Input<string>;
    }

    export interface JobMaxRecurrence {
        /**
         * Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
         */
        frequency?: pulumi.Input<string>;
        /**
         * Gets or sets the interval between retries.
         */
        interval?: pulumi.Input<number>;
    }

    export interface JobMaxRecurrenceResponse {
        /**
         * Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
         */
        frequency?: pulumi.Input<string>;
        /**
         * Gets or sets the interval between retries.
         */
        interval?: pulumi.Input<number>;
    }

    export interface JobProperties {
        /**
         * Gets or sets the job action.
         */
        action?: pulumi.Input<inputs.scheduler.JobAction>;
        /**
         * Gets or sets the job recurrence.
         */
        recurrence?: pulumi.Input<inputs.scheduler.JobRecurrence>;
        /**
         * Gets or sets the job start time.
         */
        startTime?: pulumi.Input<string>;
        /**
         * Gets or set the job state.
         */
        state?: pulumi.Input<string>;
    }

    export interface JobPropertiesResponse {
        /**
         * Gets or sets the job action.
         */
        action?: pulumi.Input<inputs.scheduler.JobActionResponse>;
        /**
         * Gets or sets the job recurrence.
         */
        recurrence?: pulumi.Input<inputs.scheduler.JobRecurrenceResponse>;
        /**
         * Gets or sets the job start time.
         */
        startTime?: pulumi.Input<string>;
        /**
         * Gets or set the job state.
         */
        state?: pulumi.Input<string>;
        /**
         * Gets the job status.
         */
        status: pulumi.Input<inputs.scheduler.JobStatusResponse>;
    }

    export interface JobRecurrence {
        /**
         * Gets or sets the maximum number of times that the job should run.
         */
        count?: pulumi.Input<number>;
        /**
         * Gets or sets the time at which the job will complete.
         */
        endTime?: pulumi.Input<string>;
        /**
         * Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
         */
        frequency?: pulumi.Input<string>;
        /**
         * Gets or sets the interval between retries.
         */
        interval?: pulumi.Input<number>;
        schedule?: pulumi.Input<inputs.scheduler.JobRecurrenceSchedule>;
    }

    export interface JobRecurrenceResponse {
        /**
         * Gets or sets the maximum number of times that the job should run.
         */
        count?: pulumi.Input<number>;
        /**
         * Gets or sets the time at which the job will complete.
         */
        endTime?: pulumi.Input<string>;
        /**
         * Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
         */
        frequency?: pulumi.Input<string>;
        /**
         * Gets or sets the interval between retries.
         */
        interval?: pulumi.Input<number>;
        schedule?: pulumi.Input<inputs.scheduler.JobRecurrenceScheduleResponse>;
    }

    export interface JobRecurrenceSchedule {
        /**
         * Gets or sets the hours of the day that the job should execute at.
         */
        hours?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Gets or sets the minutes of the hour that the job should execute at.
         */
        minutes?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Gets or sets the days of the month that the job should execute on. Must be between 1 and 31.
         */
        monthDays?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Gets or sets the occurrences of days within a month.
         */
        monthlyOccurrences?: pulumi.Input<pulumi.Input<inputs.scheduler.JobRecurrenceScheduleMonthlyOccurrence>[]>;
        /**
         * Gets or sets the days of the week that the job should execute on.
         */
        weekDays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobRecurrenceScheduleMonthlyOccurrence {
        /**
         * Gets or sets the occurrence. Must be between -5 and 5.
         */
        Occurrence?: pulumi.Input<number>;
        /**
         * Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
         */
        day?: pulumi.Input<string>;
    }

    export interface JobRecurrenceScheduleMonthlyOccurrenceResponse {
        /**
         * Gets or sets the occurrence. Must be between -5 and 5.
         */
        Occurrence?: pulumi.Input<number>;
        /**
         * Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
         */
        day?: pulumi.Input<string>;
    }

    export interface JobRecurrenceScheduleResponse {
        /**
         * Gets or sets the hours of the day that the job should execute at.
         */
        hours?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Gets or sets the minutes of the hour that the job should execute at.
         */
        minutes?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Gets or sets the days of the month that the job should execute on. Must be between 1 and 31.
         */
        monthDays?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Gets or sets the occurrences of days within a month.
         */
        monthlyOccurrences?: pulumi.Input<pulumi.Input<inputs.scheduler.JobRecurrenceScheduleMonthlyOccurrenceResponse>[]>;
        /**
         * Gets or sets the days of the week that the job should execute on.
         */
        weekDays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobStatusResponse {
        /**
         * Gets the number of times this job has executed.
         */
        executionCount: pulumi.Input<number>;
        /**
         * Gets the number of times this job has failed.
         */
        failureCount: pulumi.Input<number>;
        /**
         * Gets the number of faulted occurrences (occurrences that were retried and failed as many times as the retry policy states).
         */
        faultedCount: pulumi.Input<number>;
        /**
         * Gets the time the last occurrence executed in ISO-8601 format.  Could be empty if job has not run yet.
         */
        lastExecutionTime: pulumi.Input<string>;
        /**
         * Gets the time of the next occurrence in ISO-8601 format. Could be empty if the job is completed.
         */
        nextExecutionTime: pulumi.Input<string>;
    }

    export interface RetryPolicy {
        /**
         * Gets or sets the number of times a retry should be attempted.
         */
        retryCount?: pulumi.Input<number>;
        /**
         * Gets or sets the retry interval between retries, specify duration in ISO 8601 format.
         */
        retryInterval?: pulumi.Input<string>;
        /**
         * Gets or sets the retry strategy to be used.
         */
        retryType?: pulumi.Input<string>;
    }

    export interface RetryPolicyResponse {
        /**
         * Gets or sets the number of times a retry should be attempted.
         */
        retryCount?: pulumi.Input<number>;
        /**
         * Gets or sets the retry interval between retries, specify duration in ISO 8601 format.
         */
        retryInterval?: pulumi.Input<string>;
        /**
         * Gets or sets the retry strategy to be used.
         */
        retryType?: pulumi.Input<string>;
    }

    export interface ServiceBusAuthentication {
        /**
         * Gets or sets the SAS key.
         */
        sasKey?: pulumi.Input<string>;
        /**
         * Gets or sets the SAS key name.
         */
        sasKeyName?: pulumi.Input<string>;
        /**
         * Gets or sets the authentication type.
         */
        type?: pulumi.Input<string>;
    }

    export interface ServiceBusAuthenticationResponse {
        /**
         * Gets or sets the SAS key.
         */
        sasKey?: pulumi.Input<string>;
        /**
         * Gets or sets the SAS key name.
         */
        sasKeyName?: pulumi.Input<string>;
        /**
         * Gets or sets the authentication type.
         */
        type?: pulumi.Input<string>;
    }

    export interface ServiceBusBrokeredMessageProperties {
        /**
         * Gets or sets the content type.
         */
        contentType?: pulumi.Input<string>;
        /**
         * Gets or sets the correlation ID.
         */
        correlationId?: pulumi.Input<string>;
        /**
         * Gets or sets the force persistence.
         */
        forcePersistence?: pulumi.Input<boolean>;
        /**
         * Gets or sets the label.
         */
        label?: pulumi.Input<string>;
        /**
         * Gets or sets the message ID.
         */
        messageId?: pulumi.Input<string>;
        /**
         * Gets or sets the partition key.
         */
        partitionKey?: pulumi.Input<string>;
        /**
         * Gets or sets the reply to.
         */
        replyTo?: pulumi.Input<string>;
        /**
         * Gets or sets the reply to session ID.
         */
        replyToSessionId?: pulumi.Input<string>;
        /**
         * Gets or sets the scheduled enqueue time UTC.
         */
        scheduledEnqueueTimeUtc?: pulumi.Input<string>;
        /**
         * Gets or sets the session ID.
         */
        sessionId?: pulumi.Input<string>;
        /**
         * Gets or sets the time to live.
         */
        timeToLive?: pulumi.Input<string>;
        /**
         * Gets or sets the to.
         */
        to?: pulumi.Input<string>;
        /**
         * Gets or sets the via partition key.
         */
        viaPartitionKey?: pulumi.Input<string>;
    }

    export interface ServiceBusBrokeredMessagePropertiesResponse {
        /**
         * Gets or sets the content type.
         */
        contentType?: pulumi.Input<string>;
        /**
         * Gets or sets the correlation ID.
         */
        correlationId?: pulumi.Input<string>;
        /**
         * Gets or sets the force persistence.
         */
        forcePersistence?: pulumi.Input<boolean>;
        /**
         * Gets or sets the label.
         */
        label?: pulumi.Input<string>;
        /**
         * Gets or sets the message ID.
         */
        messageId?: pulumi.Input<string>;
        /**
         * Gets or sets the partition key.
         */
        partitionKey?: pulumi.Input<string>;
        /**
         * Gets or sets the reply to.
         */
        replyTo?: pulumi.Input<string>;
        /**
         * Gets or sets the reply to session ID.
         */
        replyToSessionId?: pulumi.Input<string>;
        /**
         * Gets or sets the scheduled enqueue time UTC.
         */
        scheduledEnqueueTimeUtc?: pulumi.Input<string>;
        /**
         * Gets or sets the session ID.
         */
        sessionId?: pulumi.Input<string>;
        /**
         * Gets or sets the time to live.
         */
        timeToLive?: pulumi.Input<string>;
        /**
         * Gets or sets the to.
         */
        to?: pulumi.Input<string>;
        /**
         * Gets or sets the via partition key.
         */
        viaPartitionKey?: pulumi.Input<string>;
    }

    export interface ServiceBusQueueMessage {
        /**
         * Gets or sets the Service Bus authentication.
         */
        authentication?: pulumi.Input<inputs.scheduler.ServiceBusAuthentication>;
        /**
         * Gets or sets the brokered message properties.
         */
        brokeredMessageProperties?: pulumi.Input<inputs.scheduler.ServiceBusBrokeredMessageProperties>;
        /**
         * Gets or sets the custom message properties.
         */
        customMessageProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the message.
         */
        message?: pulumi.Input<string>;
        /**
         * Gets or sets the namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * Gets or sets the queue name.
         */
        queueName?: pulumi.Input<string>;
        /**
         * Gets or sets the transport type.
         */
        transportType?: pulumi.Input<string>;
    }

    export interface ServiceBusQueueMessageResponse {
        /**
         * Gets or sets the Service Bus authentication.
         */
        authentication?: pulumi.Input<inputs.scheduler.ServiceBusAuthenticationResponse>;
        /**
         * Gets or sets the brokered message properties.
         */
        brokeredMessageProperties?: pulumi.Input<inputs.scheduler.ServiceBusBrokeredMessagePropertiesResponse>;
        /**
         * Gets or sets the custom message properties.
         */
        customMessageProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the message.
         */
        message?: pulumi.Input<string>;
        /**
         * Gets or sets the namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * Gets or sets the queue name.
         */
        queueName?: pulumi.Input<string>;
        /**
         * Gets or sets the transport type.
         */
        transportType?: pulumi.Input<string>;
    }

    export interface ServiceBusTopicMessage {
        /**
         * Gets or sets the Service Bus authentication.
         */
        authentication?: pulumi.Input<inputs.scheduler.ServiceBusAuthentication>;
        /**
         * Gets or sets the brokered message properties.
         */
        brokeredMessageProperties?: pulumi.Input<inputs.scheduler.ServiceBusBrokeredMessageProperties>;
        /**
         * Gets or sets the custom message properties.
         */
        customMessageProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the message.
         */
        message?: pulumi.Input<string>;
        /**
         * Gets or sets the namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * Gets or sets the topic path.
         */
        topicPath?: pulumi.Input<string>;
        /**
         * Gets or sets the transport type.
         */
        transportType?: pulumi.Input<string>;
    }

    export interface ServiceBusTopicMessageResponse {
        /**
         * Gets or sets the Service Bus authentication.
         */
        authentication?: pulumi.Input<inputs.scheduler.ServiceBusAuthenticationResponse>;
        /**
         * Gets or sets the brokered message properties.
         */
        brokeredMessageProperties?: pulumi.Input<inputs.scheduler.ServiceBusBrokeredMessagePropertiesResponse>;
        /**
         * Gets or sets the custom message properties.
         */
        customMessageProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Gets or sets the message.
         */
        message?: pulumi.Input<string>;
        /**
         * Gets or sets the namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * Gets or sets the topic path.
         */
        topicPath?: pulumi.Input<string>;
        /**
         * Gets or sets the transport type.
         */
        transportType?: pulumi.Input<string>;
    }

    export interface Sku {
        /**
         * Gets or set the SKU.
         */
        name?: pulumi.Input<string>;
    }

    export interface SkuResponse {
        /**
         * Gets or set the SKU.
         */
        name?: pulumi.Input<string>;
    }

    export interface StorageQueueMessage {
        /**
         * Gets or sets the message.
         */
        message?: pulumi.Input<string>;
        /**
         * Gets or sets the queue name.
         */
        queueName?: pulumi.Input<string>;
        /**
         * Gets or sets the SAS key.
         */
        sasToken?: pulumi.Input<string>;
        /**
         * Gets or sets the storage account name.
         */
        storageAccount?: pulumi.Input<string>;
    }

    export interface StorageQueueMessageResponse {
        /**
         * Gets or sets the message.
         */
        message?: pulumi.Input<string>;
        /**
         * Gets or sets the queue name.
         */
        queueName?: pulumi.Input<string>;
        /**
         * Gets or sets the SAS key.
         */
        sasToken?: pulumi.Input<string>;
        /**
         * Gets or sets the storage account name.
         */
        storageAccount?: pulumi.Input<string>;
    }
}

export namespace search {
    /**
     * Identity for the resource.
     */
    export interface Identity {
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Identity for the resource.
     */
    export interface IdentityResponse {
        /**
         * The principal ID of resource identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant ID of resource.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The IP restriction rule of the Azure Cognitive Search service.
     */
    export interface IpRule {
        /**
         * Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * The IP restriction rule of the Azure Cognitive Search service.
     */
    export interface IpRuleResponse {
        /**
         * Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Network specific rules that determine how the Azure Cognitive Search service may be reached.
     */
    export interface NetworkRuleSet {
        /**
         * A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.search.IpRule>[]>;
    }

    /**
     * Network specific rules that determine how the Azure Cognitive Search service may be reached.
     */
    export interface NetworkRuleSetResponse {
        /**
         * A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.search.IpRuleResponse>[]>;
    }

    /**
     * Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * The private endpoint resource from Microsoft.Network provider.
         */
        privateEndpoint?: pulumi.Input<inputs.search.PrivateEndpointConnectionPropertiesProperties>;
        /**
         * Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.search.PrivateEndpointConnectionPropertiesProperties>;
    }

    /**
     * The private endpoint resource from Microsoft.Network provider.
     */
    export interface PrivateEndpointConnectionPropertiesProperties {
        /**
         * The resource id of the private endpoint resource from Microsoft.Network provider.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The private endpoint resource from Microsoft.Network provider.
         */
        privateEndpoint?: pulumi.Input<inputs.search.PrivateEndpointConnectionPropertiesResponseProperties>;
        /**
         * Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.search.PrivateEndpointConnectionPropertiesResponseProperties>;
    }

    /**
     * The private endpoint resource from Microsoft.Network provider.
     */
    export interface PrivateEndpointConnectionPropertiesResponseProperties {
        /**
         * The resource id of the private endpoint resource from Microsoft.Network provider.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Describes an existing Private Endpoint connection to the Azure Cognitive Search service.
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * The ID of the private endpoint connection. This can be used with the Azure Resource Manager to link resources together.
         */
        id: pulumi.Input<string>;
        /**
         * The name of the private endpoint connection.
         */
        name: pulumi.Input<string>;
        /**
         * Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
         */
        properties?: pulumi.Input<inputs.search.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Properties of the Search service.
     */
    export interface SearchServiceProperties {
        /**
         * Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
         */
        hostingMode?: pulumi.Input<string>;
        /**
         * Network specific rules that determine how the Azure Cognitive Search service may be reached.
         */
        networkRuleSet?: pulumi.Input<inputs.search.NetworkRuleSet>;
        /**
         * The number of partitions in the Search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.
         */
        partitionCount?: pulumi.Input<number>;
        /**
         * This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * The number of replicas in the Search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.
         */
        replicaCount?: pulumi.Input<number>;
    }

    /**
     * Properties of the Search service.
     */
    export interface SearchServicePropertiesResponse {
        /**
         * Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
         */
        hostingMode?: pulumi.Input<string>;
        /**
         * Network specific rules that determine how the Azure Cognitive Search service may be reached.
         */
        networkRuleSet?: pulumi.Input<inputs.search.NetworkRuleSetResponse>;
        /**
         * The number of partitions in the Search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.
         */
        partitionCount?: pulumi.Input<number>;
        /**
         * The list of private endpoint connections to the Azure Cognitive Search service.
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.search.PrivateEndpointConnectionResponse>[]>;
        /**
         * The state of the last provisioning operation performed on the Search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create Search service. This is because the free service uses capacity that is already set up.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
         */
        publicNetworkAccess?: pulumi.Input<string>;
        /**
         * The number of replicas in the Search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.
         */
        replicaCount?: pulumi.Input<number>;
        /**
         * The list of shared private link resources managed by the Azure Cognitive Search service.
         */
        sharedPrivateLinkResources: pulumi.Input<pulumi.Input<inputs.search.SharedPrivateLinkResourceResponse>[]>;
        /**
         * The status of the Search service. Possible values include: 'running': The Search service is running and no provisioning operations are underway. 'provisioning': The Search service is being provisioned or scaled up or down. 'deleting': The Search service is being deleted. 'degraded': The Search service is degraded. This can occur when the underlying search units are not healthy. The Search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The Search service is disabled. In this state, the service will reject all API requests. 'error': The Search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.
         */
        status: pulumi.Input<string>;
        /**
         * The details of the Search service status.
         */
        statusDetails: pulumi.Input<string>;
    }

    /**
     * Describes the properties of an existing Shared Private Link Resource managed by the Azure Cognitive Search service.
     */
    export interface SharedPrivateLinkResourceProperties {
        /**
         * The group id from the provider of resource the shared private link resource is for.
         */
        groupId?: pulumi.Input<string>;
        /**
         * The resource id of the resource the shared private link resource is for.
         */
        privateLinkResourceId?: pulumi.Input<string>;
        /**
         * The request message for requesting approval of the shared private link resource.
         */
        requestMessage?: pulumi.Input<string>;
        /**
         * Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of an existing Shared Private Link Resource managed by the Azure Cognitive Search service.
     */
    export interface SharedPrivateLinkResourcePropertiesResponse {
        /**
         * The group id from the provider of resource the shared private link resource is for.
         */
        groupId?: pulumi.Input<string>;
        /**
         * The resource id of the resource the shared private link resource is for.
         */
        privateLinkResourceId?: pulumi.Input<string>;
        /**
         * The request message for requesting approval of the shared private link resource.
         */
        requestMessage?: pulumi.Input<string>;
        /**
         * Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Describes a Shared Private Link Resource managed by the Azure Cognitive Search service.
     */
    export interface SharedPrivateLinkResourceResponse {
        /**
         * The ID of the shared private link resource.
         */
        id: pulumi.Input<string>;
        /**
         * The name of the shared private link resource.
         */
        name: pulumi.Input<string>;
        /**
         * Describes the properties of a Shared Private Link Resource managed by the Azure Cognitive Search service.
         */
        properties?: pulumi.Input<inputs.search.SharedPrivateLinkResourcePropertiesResponse>;
        /**
         * The resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits.
     */
    export interface Sku {
        /**
         * The SKU of the Search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits.
     */
    export interface SkuResponse {
        /**
         * The SKU of the Search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
         */
        name?: pulumi.Input<string>;
    }
}

export namespace security {
    /**
     * Security Solution setting data
     */
    export interface IoTSecuritySolutionProperties {
        /**
         * Disabled data sources. Disabling these data sources compromises the system.
         */
        disabledDataSources?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Resource display name.
         */
        displayName: pulumi.Input<string>;
        /**
         * List of additional options for exporting to workspace data.
         */
        export?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * IoT Hub resource IDs
         */
        iotHubs: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of the configuration status for each recommendation type.
         */
        recommendationsConfiguration?: pulumi.Input<inputs.security.RecommendationConfigurationList>;
        /**
         * Status of the IoT Security solution.
         */
        status?: pulumi.Input<string>;
        /**
         * Unmasked IP address logging status
         */
        unmaskedIpLoggingStatus?: pulumi.Input<string>;
        /**
         * Properties of the IoT Security solution's user defined resources.
         */
        userDefinedResources?: pulumi.Input<inputs.security.UserDefinedResourcesProperties>;
        /**
         * Workspace resource ID
         */
        workspace?: pulumi.Input<string>;
    }

    /**
     * Security Solution setting data
     */
    export interface IoTSecuritySolutionPropertiesResponse {
        /**
         * List of resources that were automatically discovered as relevant to the security solution.
         */
        autoDiscoveredResources: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Disabled data sources. Disabling these data sources compromises the system.
         */
        disabledDataSources?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Resource display name.
         */
        displayName: pulumi.Input<string>;
        /**
         * List of additional options for exporting to workspace data.
         */
        export?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * IoT Hub resource IDs
         */
        iotHubs: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of the configuration status for each recommendation type.
         */
        recommendationsConfiguration?: pulumi.Input<inputs.security.RecommendationConfigurationListResponse>;
        /**
         * Status of the IoT Security solution.
         */
        status?: pulumi.Input<string>;
        /**
         * Unmasked IP address logging status
         */
        unmaskedIpLoggingStatus?: pulumi.Input<string>;
        /**
         * Properties of the IoT Security solution's user defined resources.
         */
        userDefinedResources?: pulumi.Input<inputs.security.UserDefinedResourcesPropertiesResponse>;
        /**
         * Workspace resource ID
         */
        workspace?: pulumi.Input<string>;
    }

    export interface JitNetworkAccessPolicyProperties {
        requests?: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessRequest>[]>;
        /**
         * Configurations for Microsoft.Compute/virtualMachines resource type.
         */
        virtualMachines: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessPolicyVirtualMachine>[]>;
    }

    export interface JitNetworkAccessPolicyPropertiesResponse {
        /**
         * Gets the provisioning state of the Just-in-Time policy.
         */
        provisioningState: pulumi.Input<string>;
        requests?: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessRequestResponse>[]>;
        /**
         * Configurations for Microsoft.Compute/virtualMachines resource type.
         */
        virtualMachines: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessPolicyVirtualMachineResponse>[]>;
    }

    export interface JitNetworkAccessPolicyVirtualMachine {
        /**
         * Resource ID of the virtual machine that is linked to this policy
         */
        id: pulumi.Input<string>;
        /**
         * Port configurations for the virtual machine
         */
        ports: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessPortRule>[]>;
        /**
         * Public IP address of the Azure Firewall that is linked to this policy, if applicable
         */
        publicIpAddress?: pulumi.Input<string>;
    }

    export interface JitNetworkAccessPolicyVirtualMachineResponse {
        /**
         * Resource ID of the virtual machine that is linked to this policy
         */
        id: pulumi.Input<string>;
        /**
         * Port configurations for the virtual machine
         */
        ports: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessPortRuleResponse>[]>;
        /**
         * Public IP address of the Azure Firewall that is linked to this policy, if applicable
         */
        publicIpAddress?: pulumi.Input<string>;
    }

    export interface JitNetworkAccessPortRule {
        /**
         * Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
         */
        allowedSourceAddressPrefix?: pulumi.Input<string>;
        /**
         * Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
         */
        allowedSourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Maximum duration requests can be made for. In ISO 8601 duration format. Minimum 5 minutes, maximum 1 day
         */
        maxRequestAccessDuration: pulumi.Input<string>;
        number: pulumi.Input<inputs.security.PortNumber>;
        protocol: pulumi.Input<string>;
    }

    export interface JitNetworkAccessPortRuleResponse {
        /**
         * Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
         */
        allowedSourceAddressPrefix?: pulumi.Input<string>;
        /**
         * Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
         */
        allowedSourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Maximum duration requests can be made for. In ISO 8601 duration format. Minimum 5 minutes, maximum 1 day
         */
        maxRequestAccessDuration: pulumi.Input<string>;
        number: pulumi.Input<inputs.security.PortNumberResponse>;
        protocol: pulumi.Input<string>;
    }

    export interface JitNetworkAccessRequest {
        /**
         * The justification for making the initiate request
         */
        justification?: pulumi.Input<string>;
        /**
         * The identity of the person who made the request
         */
        requestor: pulumi.Input<string>;
        /**
         * The start time of the request in UTC
         */
        startTimeUtc: pulumi.Input<string>;
        virtualMachines: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessRequestVirtualMachine>[]>;
    }

    export interface JitNetworkAccessRequestPort {
        /**
         * Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
         */
        allowedSourceAddressPrefix?: pulumi.Input<string>;
        /**
         * Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
         */
        allowedSourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The date & time at which the request ends in UTC
         */
        endTimeUtc: pulumi.Input<string>;
        /**
         * The port which is mapped to this port's `number` in the Azure Firewall, if applicable
         */
        mappedPort?: pulumi.Input<number>;
        number: pulumi.Input<inputs.security.PortNumber>;
        /**
         * The status of the port
         */
        status: pulumi.Input<string>;
        /**
         * A description of why the `status` has its value
         */
        statusReason: pulumi.Input<string>;
    }

    export interface JitNetworkAccessRequestPortResponse {
        /**
         * Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
         */
        allowedSourceAddressPrefix?: pulumi.Input<string>;
        /**
         * Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
         */
        allowedSourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The date & time at which the request ends in UTC
         */
        endTimeUtc: pulumi.Input<string>;
        /**
         * The port which is mapped to this port's `number` in the Azure Firewall, if applicable
         */
        mappedPort?: pulumi.Input<number>;
        number: pulumi.Input<inputs.security.PortNumberResponse>;
        /**
         * The status of the port
         */
        status: pulumi.Input<string>;
        /**
         * A description of why the `status` has its value
         */
        statusReason: pulumi.Input<string>;
    }

    export interface JitNetworkAccessRequestResponse {
        /**
         * The justification for making the initiate request
         */
        justification?: pulumi.Input<string>;
        /**
         * The identity of the person who made the request
         */
        requestor: pulumi.Input<string>;
        /**
         * The start time of the request in UTC
         */
        startTimeUtc: pulumi.Input<string>;
        virtualMachines: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessRequestVirtualMachineResponse>[]>;
    }

    export interface JitNetworkAccessRequestVirtualMachine {
        /**
         * Resource ID of the virtual machine that is linked to this policy
         */
        id: pulumi.Input<string>;
        /**
         * The ports that were opened for the virtual machine
         */
        ports: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessRequestPort>[]>;
    }

    export interface JitNetworkAccessRequestVirtualMachineResponse {
        /**
         * Resource ID of the virtual machine that is linked to this policy
         */
        id: pulumi.Input<string>;
        /**
         * The ports that were opened for the virtual machine
         */
        ports: pulumi.Input<pulumi.Input<inputs.security.JitNetworkAccessRequestPortResponse>[]>;
    }

    export interface PortNumber {
    }

    export interface PortNumberResponse {
    }

    /**
     * List of the configuration status for each recommendation type.
     */
    export interface RecommendationConfigurationList {
    }

    /**
     * List of the configuration status for each recommendation type.
     */
    export interface RecommendationConfigurationListResponse {
    }

    /**
     * Properties of the IoT Security solution's user defined resources.
     */
    export interface UserDefinedResourcesProperties {
        /**
         * Azure Resource Graph query which represents the security solution's user defined resources. Required to start with "where type != "Microsoft.Devices/IotHubs""
         */
        query: pulumi.Input<string>;
        /**
         * List of Azure subscription ids on which the user defined resources query should be executed.
         */
        querySubscriptions: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of the IoT Security solution's user defined resources.
     */
    export interface UserDefinedResourcesPropertiesResponse {
        /**
         * Azure Resource Graph query which represents the security solution's user defined resources. Required to start with "where type != "Microsoft.Devices/IotHubs""
         */
        query: pulumi.Input<string>;
        /**
         * List of Azure subscription ids on which the user defined resources query should be executed.
         */
        querySubscriptions: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace servicebus {
    /**
     * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
     */
    export interface Action {
        /**
         * This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
         */
        compatibilityLevel?: pulumi.Input<number>;
        /**
         * Value that indicates whether the rule action requires preprocessing.
         */
        requiresPreprocessing?: pulumi.Input<boolean>;
        /**
         * SQL expression. e.g. MyProperty='ABC'
         */
        sqlExpression?: pulumi.Input<string>;
    }

    /**
     * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
     */
    export interface ActionResponse {
        /**
         * This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
         */
        compatibilityLevel?: pulumi.Input<number>;
        /**
         * Value that indicates whether the rule action requires preprocessing.
         */
        requiresPreprocessing?: pulumi.Input<boolean>;
        /**
         * SQL expression. e.g. MyProperty='ABC'
         */
        sqlExpression?: pulumi.Input<string>;
    }

    /**
     * Properties required to the Create Or Update Alias(Disaster Recovery configurations)
     */
    export interface ArmDisasterRecoveryProperties {
        /**
         * Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
         */
        alternateName?: pulumi.Input<string>;
        /**
         * ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
         */
        partnerNamespace?: pulumi.Input<string>;
    }

    /**
     * Properties required to the Create Or Update Alias(Disaster Recovery configurations)
     */
    export interface ArmDisasterRecoveryResponseProperties {
        /**
         * Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
         */
        alternateName?: pulumi.Input<string>;
        /**
         * ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
         */
        partnerNamespace?: pulumi.Input<string>;
        /**
         * Number of entities pending to be replicated.
         */
        pendingReplicationOperationsCount: pulumi.Input<number>;
        /**
         * Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
         */
        provisioningState: pulumi.Input<string>;
        /**
         * role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
         */
        role: pulumi.Input<string>;
    }

    /**
     * Represents the correlation filter expression.
     */
    export interface CorrelationFilter {
        /**
         * Content type of the message.
         */
        contentType?: pulumi.Input<string>;
        /**
         * Identifier of the correlation.
         */
        correlationId?: pulumi.Input<string>;
        /**
         * Application specific label.
         */
        label?: pulumi.Input<string>;
        /**
         * Identifier of the message.
         */
        messageId?: pulumi.Input<string>;
        /**
         * dictionary object for custom filters
         */
        properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Address of the queue to reply to.
         */
        replyTo?: pulumi.Input<string>;
        /**
         * Session identifier to reply to.
         */
        replyToSessionId?: pulumi.Input<string>;
        /**
         * Value that indicates whether the rule action requires preprocessing.
         */
        requiresPreprocessing?: pulumi.Input<boolean>;
        /**
         * Session identifier.
         */
        sessionId?: pulumi.Input<string>;
        /**
         * Address to send to.
         */
        to?: pulumi.Input<string>;
    }

    /**
     * Represents the correlation filter expression.
     */
    export interface CorrelationFilterResponse {
        /**
         * Content type of the message.
         */
        contentType?: pulumi.Input<string>;
        /**
         * Identifier of the correlation.
         */
        correlationId?: pulumi.Input<string>;
        /**
         * Application specific label.
         */
        label?: pulumi.Input<string>;
        /**
         * Identifier of the message.
         */
        messageId?: pulumi.Input<string>;
        /**
         * dictionary object for custom filters
         */
        properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Address of the queue to reply to.
         */
        replyTo?: pulumi.Input<string>;
        /**
         * Session identifier to reply to.
         */
        replyToSessionId?: pulumi.Input<string>;
        /**
         * Value that indicates whether the rule action requires preprocessing.
         */
        requiresPreprocessing?: pulumi.Input<boolean>;
        /**
         * Session identifier.
         */
        sessionId?: pulumi.Input<string>;
        /**
         * Address to send to.
         */
        to?: pulumi.Input<string>;
    }

    /**
     * Message Count Details.
     */
    export interface MessageCountDetailsResponse {
        /**
         * Number of active messages in the queue, topic, or subscription.
         */
        activeMessageCount: pulumi.Input<number>;
        /**
         * Number of messages that are dead lettered.
         */
        deadLetterMessageCount: pulumi.Input<number>;
        /**
         * Number of scheduled messages.
         */
        scheduledMessageCount: pulumi.Input<number>;
        /**
         * Number of messages transferred into dead letters.
         */
        transferDeadLetterMessageCount: pulumi.Input<number>;
        /**
         * Number of messages transferred to another queue, topic, or subscription.
         */
        transferMessageCount: pulumi.Input<number>;
    }

    /**
     * Properties required to the Create Migration Configuration
     */
    export interface MigrationConfigPropertiesProperties {
        /**
         * Name to access Standard Namespace after migration
         */
        postMigrationName: pulumi.Input<string>;
        /**
         * Existing premium Namespace ARM Id name which has no entities, will be used for migration
         */
        targetNamespace: pulumi.Input<string>;
    }

    /**
     * Properties required to the Create Migration Configuration
     */
    export interface MigrationConfigPropertiesResponseProperties {
        /**
         * State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active
         */
        migrationState: pulumi.Input<string>;
        /**
         * Number of entities pending to be replicated.
         */
        pendingReplicationOperationsCount: pulumi.Input<number>;
        /**
         * Name to access Standard Namespace after migration
         */
        postMigrationName: pulumi.Input<string>;
        /**
         * Provisioning state of Migration Configuration 
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Existing premium Namespace ARM Id name which has no entities, will be used for migration
         */
        targetNamespace: pulumi.Input<string>;
    }

    /**
     * Description of Rule Resource.
     */
    export interface Ruleproperties {
        /**
         * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
         */
        action?: pulumi.Input<inputs.servicebus.Action>;
        /**
         * Properties of correlationFilter
         */
        correlationFilter?: pulumi.Input<inputs.servicebus.CorrelationFilter>;
        /**
         * Filter type that is evaluated against a BrokeredMessage.
         */
        filterType?: pulumi.Input<string>;
        /**
         * Properties of sqlFilter
         */
        sqlFilter?: pulumi.Input<inputs.servicebus.SqlFilter>;
    }

    /**
     * Description of Rule Resource.
     */
    export interface RulepropertiesResponse {
        /**
         * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
         */
        action?: pulumi.Input<inputs.servicebus.ActionResponse>;
        /**
         * Properties of correlationFilter
         */
        correlationFilter?: pulumi.Input<inputs.servicebus.CorrelationFilterResponse>;
        /**
         * Filter type that is evaluated against a BrokeredMessage.
         */
        filterType?: pulumi.Input<string>;
        /**
         * Properties of sqlFilter
         */
        sqlFilter?: pulumi.Input<inputs.servicebus.SqlFilterResponse>;
    }

    /**
     * AuthorizationRule properties.
     */
    export interface SBAuthorizationRuleProperties {
        /**
         * The rights associated with the rule.
         */
        rights: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * AuthorizationRule properties.
     */
    export interface SBAuthorizationRuleResponseProperties {
        /**
         * The rights associated with the rule.
         */
        rights: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of the namespace.
     */
    export interface SBNamespaceProperties {
    }

    /**
     * Properties of the namespace.
     */
    export interface SBNamespacePropertiesResponse {
        /**
         * The time the namespace was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * Identifier for Azure Insights metrics
         */
        metricId: pulumi.Input<string>;
        /**
         * Provisioning state of the namespace.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Endpoint you can use to perform Service Bus operations.
         */
        serviceBusEndpoint: pulumi.Input<string>;
        /**
         * The time the namespace was updated.
         */
        updatedAt: pulumi.Input<string>;
    }

    /**
     * The Queue Properties definition.
     */
    export interface SBQueueProperties {
        /**
         * ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
         */
        autoDeleteOnIdle?: pulumi.Input<string>;
        /**
         * A value that indicates whether this queue has dead letter support when a message expires.
         */
        deadLetteringOnMessageExpiration?: pulumi.Input<boolean>;
        /**
         * ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
         */
        defaultMessageTimeToLive?: pulumi.Input<string>;
        /**
         * ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
         */
        duplicateDetectionHistoryTimeWindow?: pulumi.Input<string>;
        /**
         * Value that indicates whether server-side batched operations are enabled.
         */
        enableBatchedOperations?: pulumi.Input<boolean>;
        /**
         * A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.
         */
        enableExpress?: pulumi.Input<boolean>;
        /**
         * A value that indicates whether the queue is to be partitioned across multiple message brokers.
         */
        enablePartitioning?: pulumi.Input<boolean>;
        /**
         * Queue/Topic name to forward the Dead Letter message
         */
        forwardDeadLetteredMessagesTo?: pulumi.Input<string>;
        /**
         * Queue/Topic name to forward the messages
         */
        forwardTo?: pulumi.Input<string>;
        /**
         * ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
         */
        lockDuration?: pulumi.Input<string>;
        /**
         * The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.
         */
        maxDeliveryCount?: pulumi.Input<number>;
        /**
         * The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
         */
        maxSizeInMegabytes?: pulumi.Input<number>;
        /**
         * A value indicating if this queue requires duplicate detection.
         */
        requiresDuplicateDetection?: pulumi.Input<boolean>;
        /**
         * A value that indicates whether the queue supports the concept of sessions.
         */
        requiresSession?: pulumi.Input<boolean>;
        /**
         * Enumerates the possible values for the status of a messaging entity.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The Queue Properties definition.
     */
    export interface SBQueuePropertiesResponse {
        /**
         * Last time a message was sent, or the last time there was a receive request to this queue.
         */
        accessedAt: pulumi.Input<string>;
        /**
         * ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
         */
        autoDeleteOnIdle?: pulumi.Input<string>;
        /**
         * Message Count Details.
         */
        countDetails: pulumi.Input<inputs.servicebus.MessageCountDetailsResponse>;
        /**
         * The exact time the message was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * A value that indicates whether this queue has dead letter support when a message expires.
         */
        deadLetteringOnMessageExpiration?: pulumi.Input<boolean>;
        /**
         * ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
         */
        defaultMessageTimeToLive?: pulumi.Input<string>;
        /**
         * ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
         */
        duplicateDetectionHistoryTimeWindow?: pulumi.Input<string>;
        /**
         * Value that indicates whether server-side batched operations are enabled.
         */
        enableBatchedOperations?: pulumi.Input<boolean>;
        /**
         * A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.
         */
        enableExpress?: pulumi.Input<boolean>;
        /**
         * A value that indicates whether the queue is to be partitioned across multiple message brokers.
         */
        enablePartitioning?: pulumi.Input<boolean>;
        /**
         * Queue/Topic name to forward the Dead Letter message
         */
        forwardDeadLetteredMessagesTo?: pulumi.Input<string>;
        /**
         * Queue/Topic name to forward the messages
         */
        forwardTo?: pulumi.Input<string>;
        /**
         * ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
         */
        lockDuration?: pulumi.Input<string>;
        /**
         * The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.
         */
        maxDeliveryCount?: pulumi.Input<number>;
        /**
         * The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
         */
        maxSizeInMegabytes?: pulumi.Input<number>;
        /**
         * The number of messages in the queue.
         */
        messageCount: pulumi.Input<number>;
        /**
         * A value indicating if this queue requires duplicate detection.
         */
        requiresDuplicateDetection?: pulumi.Input<boolean>;
        /**
         * A value that indicates whether the queue supports the concept of sessions.
         */
        requiresSession?: pulumi.Input<boolean>;
        /**
         * The size of the queue, in bytes.
         */
        sizeInBytes: pulumi.Input<number>;
        /**
         * Enumerates the possible values for the status of a messaging entity.
         */
        status?: pulumi.Input<string>;
        /**
         * The exact time the message was updated.
         */
        updatedAt: pulumi.Input<string>;
    }

    /**
     * SKU of the namespace.
     */
    export interface SBSku {
        /**
         * The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Name of this SKU.
         */
        name: pulumi.Input<string>;
        /**
         * The billing tier of this particular SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * SKU of the namespace.
     */
    export interface SBSkuResponse {
        /**
         * The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Name of this SKU.
         */
        name: pulumi.Input<string>;
        /**
         * The billing tier of this particular SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Description of Subscription Resource.
     */
    export interface SBSubscriptionProperties {
        /**
         * ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
         */
        autoDeleteOnIdle?: pulumi.Input<string>;
        /**
         * Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.
         */
        deadLetteringOnFilterEvaluationExceptions?: pulumi.Input<boolean>;
        /**
         * Value that indicates whether a subscription has dead letter support when a message expires.
         */
        deadLetteringOnMessageExpiration?: pulumi.Input<boolean>;
        /**
         * ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
         */
        defaultMessageTimeToLive?: pulumi.Input<string>;
        /**
         * ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
         */
        duplicateDetectionHistoryTimeWindow?: pulumi.Input<string>;
        /**
         * Value that indicates whether server-side batched operations are enabled.
         */
        enableBatchedOperations?: pulumi.Input<boolean>;
        /**
         * Queue/Topic name to forward the Dead Letter message
         */
        forwardDeadLetteredMessagesTo?: pulumi.Input<string>;
        /**
         * Queue/Topic name to forward the messages
         */
        forwardTo?: pulumi.Input<string>;
        /**
         * ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.
         */
        lockDuration?: pulumi.Input<string>;
        /**
         * Number of maximum deliveries.
         */
        maxDeliveryCount?: pulumi.Input<number>;
        /**
         * Value indicating if a subscription supports the concept of sessions.
         */
        requiresSession?: pulumi.Input<boolean>;
        /**
         * Enumerates the possible values for the status of a messaging entity.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Description of Subscription Resource.
     */
    export interface SBSubscriptionPropertiesResponse {
        /**
         * Last time there was a receive request to this subscription.
         */
        accessedAt: pulumi.Input<string>;
        /**
         * ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
         */
        autoDeleteOnIdle?: pulumi.Input<string>;
        /**
         * Message count details
         */
        countDetails: pulumi.Input<inputs.servicebus.MessageCountDetailsResponse>;
        /**
         * Exact time the message was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.
         */
        deadLetteringOnFilterEvaluationExceptions?: pulumi.Input<boolean>;
        /**
         * Value that indicates whether a subscription has dead letter support when a message expires.
         */
        deadLetteringOnMessageExpiration?: pulumi.Input<boolean>;
        /**
         * ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
         */
        defaultMessageTimeToLive?: pulumi.Input<string>;
        /**
         * ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
         */
        duplicateDetectionHistoryTimeWindow?: pulumi.Input<string>;
        /**
         * Value that indicates whether server-side batched operations are enabled.
         */
        enableBatchedOperations?: pulumi.Input<boolean>;
        /**
         * Queue/Topic name to forward the Dead Letter message
         */
        forwardDeadLetteredMessagesTo?: pulumi.Input<string>;
        /**
         * Queue/Topic name to forward the messages
         */
        forwardTo?: pulumi.Input<string>;
        /**
         * ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.
         */
        lockDuration?: pulumi.Input<string>;
        /**
         * Number of maximum deliveries.
         */
        maxDeliveryCount?: pulumi.Input<number>;
        /**
         * Number of messages.
         */
        messageCount: pulumi.Input<number>;
        /**
         * Value indicating if a subscription supports the concept of sessions.
         */
        requiresSession?: pulumi.Input<boolean>;
        /**
         * Enumerates the possible values for the status of a messaging entity.
         */
        status?: pulumi.Input<string>;
        /**
         * The exact time the message was updated.
         */
        updatedAt: pulumi.Input<string>;
    }

    /**
     * The Topic Properties definition.
     */
    export interface SBTopicProperties {
        /**
         * ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
         */
        autoDeleteOnIdle?: pulumi.Input<string>;
        /**
         * ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
         */
        defaultMessageTimeToLive?: pulumi.Input<string>;
        /**
         * ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
         */
        duplicateDetectionHistoryTimeWindow?: pulumi.Input<string>;
        /**
         * Value that indicates whether server-side batched operations are enabled.
         */
        enableBatchedOperations?: pulumi.Input<boolean>;
        /**
         * Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
         */
        enableExpress?: pulumi.Input<boolean>;
        /**
         * Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.
         */
        enablePartitioning?: pulumi.Input<boolean>;
        /**
         * Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.
         */
        maxSizeInMegabytes?: pulumi.Input<number>;
        /**
         * Value indicating if this topic requires duplicate detection.
         */
        requiresDuplicateDetection?: pulumi.Input<boolean>;
        /**
         * Enumerates the possible values for the status of a messaging entity.
         */
        status?: pulumi.Input<string>;
        /**
         * Value that indicates whether the topic supports ordering.
         */
        supportOrdering?: pulumi.Input<boolean>;
    }

    /**
     * The Topic Properties definition.
     */
    export interface SBTopicPropertiesResponse {
        /**
         * Last time the message was sent, or a request was received, for this topic.
         */
        accessedAt: pulumi.Input<string>;
        /**
         * ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
         */
        autoDeleteOnIdle?: pulumi.Input<string>;
        /**
         * Message count details
         */
        countDetails: pulumi.Input<inputs.servicebus.MessageCountDetailsResponse>;
        /**
         * Exact time the message was created.
         */
        createdAt: pulumi.Input<string>;
        /**
         * ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
         */
        defaultMessageTimeToLive?: pulumi.Input<string>;
        /**
         * ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
         */
        duplicateDetectionHistoryTimeWindow?: pulumi.Input<string>;
        /**
         * Value that indicates whether server-side batched operations are enabled.
         */
        enableBatchedOperations?: pulumi.Input<boolean>;
        /**
         * Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
         */
        enableExpress?: pulumi.Input<boolean>;
        /**
         * Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.
         */
        enablePartitioning?: pulumi.Input<boolean>;
        /**
         * Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.
         */
        maxSizeInMegabytes?: pulumi.Input<number>;
        /**
         * Value indicating if this topic requires duplicate detection.
         */
        requiresDuplicateDetection?: pulumi.Input<boolean>;
        /**
         * Size of the topic, in bytes.
         */
        sizeInBytes: pulumi.Input<number>;
        /**
         * Enumerates the possible values for the status of a messaging entity.
         */
        status?: pulumi.Input<string>;
        /**
         * Number of subscriptions.
         */
        subscriptionCount: pulumi.Input<number>;
        /**
         * Value that indicates whether the topic supports ordering.
         */
        supportOrdering?: pulumi.Input<boolean>;
        /**
         * The exact time the message was updated.
         */
        updatedAt: pulumi.Input<string>;
    }

    /**
     * Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.
     */
    export interface SqlFilter {
        /**
         * This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
         */
        compatibilityLevel?: pulumi.Input<number>;
        /**
         * Value that indicates whether the rule action requires preprocessing.
         */
        requiresPreprocessing?: pulumi.Input<boolean>;
        /**
         * The SQL expression. e.g. MyProperty='ABC'
         */
        sqlExpression?: pulumi.Input<string>;
    }

    /**
     * Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.
     */
    export interface SqlFilterResponse {
        /**
         * This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
         */
        compatibilityLevel?: pulumi.Input<number>;
        /**
         * Value that indicates whether the rule action requires preprocessing.
         */
        requiresPreprocessing?: pulumi.Input<boolean>;
        /**
         * The SQL expression. e.g. MyProperty='ABC'
         */
        sqlExpression?: pulumi.Input<string>;
    }
}

export namespace servicefabric {
    /**
     * Defines a map that contains specific application delta health policies for different applications.
     * Each entry specifies as key the application name and as value an ApplicationDeltaHealthPolicy used to evaluate the application health when upgrading the cluster.
     * The application name should include the 'fabric:' URI scheme.
     * The map is empty by default.
     */
    export interface ApplicationDeltaHealthPolicyMap {
    }

    /**
     * Defines a map that contains specific application delta health policies for different applications.
     * Each entry specifies as key the application name and as value an ApplicationDeltaHealthPolicy used to evaluate the application health when upgrading the cluster.
     * The application name should include the 'fabric:' URI scheme.
     * The map is empty by default.
     */
    export interface ApplicationDeltaHealthPolicyMapResponse {
    }

    /**
     * Defines a map that contains specific application health policies for different applications.
     * Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
     * The application name should include the 'fabric:' URI scheme.
     * The map is empty by default.
     */
    export interface ApplicationHealthPolicyMap {
    }

    /**
     * Defines a map that contains specific application health policies for different applications.
     * Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
     * The application name should include the 'fabric:' URI scheme.
     * The map is empty by default.
     */
    export interface ApplicationHealthPolicyMapResponse {
    }

    /**
     * List of application capacity metric description.
     */
    export interface ApplicationMetricDescriptionList {
    }

    /**
     * List of application capacity metric description.
     */
    export interface ApplicationMetricDescriptionListResponse {
    }

    /**
     * List of application parameters with overridden values from their default values specified in the application manifest.
     */
    export interface ApplicationParameterList {
    }

    /**
     * List of application parameters with overridden values from their default values specified in the application manifest.
     */
    export interface ApplicationParameterListResponse {
    }

    /**
     * The application resource properties.
     */
    export interface ApplicationResourceProperties {
        /**
         * List of user assigned identities for the application, each mapped to a friendly name.
         */
        managedIdentities?: pulumi.Input<pulumi.Input<inputs.servicefabric.ApplicationUserAssignedIdentity>[]>;
        /**
         * The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
         */
        maximumNodes?: pulumi.Input<number>;
        /**
         * List of application capacity metric description.
         */
        metrics?: pulumi.Input<inputs.servicefabric.ApplicationMetricDescriptionList>;
        /**
         * The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
         */
        minimumNodes?: pulumi.Input<number>;
        /**
         * List of application parameters with overridden values from their default values specified in the application manifest.
         */
        parameters?: pulumi.Input<inputs.servicefabric.ApplicationParameterList>;
        /**
         * Remove the current application capacity settings.
         */
        removeApplicationCapacity?: pulumi.Input<boolean>;
        /**
         * The application type name as defined in the application manifest.
         */
        typeName?: pulumi.Input<string>;
        /**
         * The version of the application type as defined in the application manifest.
         */
        typeVersion?: pulumi.Input<string>;
        /**
         * Describes the policy for a monitored application upgrade.
         */
        upgradePolicy?: pulumi.Input<inputs.servicefabric.ApplicationUpgradePolicy>;
    }

    /**
     * The application resource properties.
     */
    export interface ApplicationResourcePropertiesResponse {
        /**
         * List of user assigned identities for the application, each mapped to a friendly name.
         */
        managedIdentities?: pulumi.Input<pulumi.Input<inputs.servicefabric.ApplicationUserAssignedIdentityResponse>[]>;
        /**
         * The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
         */
        maximumNodes?: pulumi.Input<number>;
        /**
         * List of application capacity metric description.
         */
        metrics?: pulumi.Input<inputs.servicefabric.ApplicationMetricDescriptionListResponse>;
        /**
         * The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
         */
        minimumNodes?: pulumi.Input<number>;
        /**
         * List of application parameters with overridden values from their default values specified in the application manifest.
         */
        parameters?: pulumi.Input<inputs.servicefabric.ApplicationParameterListResponse>;
        /**
         * The current deployment or provisioning state, which only appears in the response
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Remove the current application capacity settings.
         */
        removeApplicationCapacity?: pulumi.Input<boolean>;
        /**
         * The application type name as defined in the application manifest.
         */
        typeName?: pulumi.Input<string>;
        /**
         * The version of the application type as defined in the application manifest.
         */
        typeVersion?: pulumi.Input<string>;
        /**
         * Describes the policy for a monitored application upgrade.
         */
        upgradePolicy?: pulumi.Input<inputs.servicefabric.ApplicationUpgradePolicyResponse>;
    }

    /**
     * List of application type parameters that can be overridden when creating or updating the application.
     */
    export interface ApplicationTypeParameterListResponse {
    }

    /**
     * The application type name properties
     */
    export interface ApplicationTypeResourceProperties {
    }

    /**
     * The application type name properties
     */
    export interface ApplicationTypeResourcePropertiesResponse {
        /**
         * The current deployment or provisioning state, which only appears in the response.
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * The properties of the application type version resource.
     */
    export interface ApplicationTypeVersionResourceProperties {
        /**
         * The URL to the application package
         */
        appPackageUrl: pulumi.Input<string>;
    }

    /**
     * The properties of the application type version resource.
     */
    export interface ApplicationTypeVersionResourcePropertiesResponse {
        /**
         * The URL to the application package
         */
        appPackageUrl: pulumi.Input<string>;
        /**
         * List of application type parameters that can be overridden when creating or updating the application.
         */
        defaultParameterList: pulumi.Input<inputs.servicefabric.ApplicationTypeParameterListResponse>;
        /**
         * The current deployment or provisioning state, which only appears in the response
         */
        provisioningState: pulumi.Input<string>;
    }

    export interface ApplicationTypeVersionsCleanupPolicy {
        /**
         * Number of unused versions per application type to keep.
         */
        maxUnusedVersionsToKeep: pulumi.Input<number>;
    }

    export interface ApplicationTypeVersionsCleanupPolicyResponse {
        /**
         * Number of unused versions per application type to keep.
         */
        maxUnusedVersionsToKeep: pulumi.Input<number>;
    }

    /**
     * Describes the policy for a monitored application upgrade.
     */
    export interface ApplicationUpgradePolicy {
        /**
         * Defines a health policy used to evaluate the health of an application or one of its children entities.
         */
        applicationHealthPolicy?: pulumi.Input<inputs.servicefabric.ArmApplicationHealthPolicy>;
        /**
         * If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
         */
        forceRestart?: pulumi.Input<inputs.servicefabric.ForceRestart>;
        /**
         * The policy used for monitoring the application upgrade
         */
        rollingUpgradeMonitoringPolicy?: pulumi.Input<inputs.servicefabric.ArmRollingUpgradeMonitoringPolicy>;
        /**
         * The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.
         */
        upgradeMode?: pulumi.Input<string>;
        /**
         * The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).
         */
        upgradeReplicaSetCheckTimeout?: pulumi.Input<string>;
    }

    /**
     * Describes the policy for a monitored application upgrade.
     */
    export interface ApplicationUpgradePolicyResponse {
        /**
         * Defines a health policy used to evaluate the health of an application or one of its children entities.
         */
        applicationHealthPolicy?: pulumi.Input<inputs.servicefabric.ArmApplicationHealthPolicyResponse>;
        /**
         * If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
         */
        forceRestart?: pulumi.Input<inputs.servicefabric.ForceRestartResponse>;
        /**
         * The policy used for monitoring the application upgrade
         */
        rollingUpgradeMonitoringPolicy?: pulumi.Input<inputs.servicefabric.ArmRollingUpgradeMonitoringPolicyResponse>;
        /**
         * The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.
         */
        upgradeMode?: pulumi.Input<string>;
        /**
         * The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).
         */
        upgradeReplicaSetCheckTimeout?: pulumi.Input<string>;
    }

    export interface ApplicationUserAssignedIdentity {
        /**
         * The friendly name of user assigned identity.
         */
        name: pulumi.Input<string>;
        /**
         * The principal id of user assigned identity.
         */
        principalId: pulumi.Input<string>;
    }

    export interface ApplicationUserAssignedIdentityResponse {
        /**
         * The friendly name of user assigned identity.
         */
        name: pulumi.Input<string>;
        /**
         * The principal id of user assigned identity.
         */
        principalId: pulumi.Input<string>;
    }

    /**
     * Defines a health policy used to evaluate the health of an application or one of its children entities.
     */
    export interface ArmApplicationHealthPolicy {
        /**
         * Indicates whether warnings are treated with the same severity as errors.
         */
        considerWarningAsError?: pulumi.Input<boolean>;
        /**
         * The health policy used by default to evaluate the health of a service type.
         */
        defaultServiceTypeHealthPolicy?: pulumi.Input<inputs.servicefabric.ArmServiceTypeHealthPolicy>;
        /**
         * The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.
         * The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.
         * This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.
         * The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
         */
        maxPercentUnhealthyDeployedApplications?: pulumi.Input<number>;
        /**
         * The map with service type health policy per service type name. The map is empty by default.
         */
        serviceTypeHealthPolicyMap?: pulumi.Input<inputs.servicefabric.ArmServiceTypeHealthPolicyMap>;
    }

    /**
     * Defines a health policy used to evaluate the health of an application or one of its children entities.
     */
    export interface ArmApplicationHealthPolicyResponse {
        /**
         * Indicates whether warnings are treated with the same severity as errors.
         */
        considerWarningAsError?: pulumi.Input<boolean>;
        /**
         * The health policy used by default to evaluate the health of a service type.
         */
        defaultServiceTypeHealthPolicy?: pulumi.Input<inputs.servicefabric.ArmServiceTypeHealthPolicyResponse>;
        /**
         * The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.
         * The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.
         * This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.
         * The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
         */
        maxPercentUnhealthyDeployedApplications?: pulumi.Input<number>;
        /**
         * The map with service type health policy per service type name. The map is empty by default.
         */
        serviceTypeHealthPolicyMap?: pulumi.Input<inputs.servicefabric.ArmServiceTypeHealthPolicyMapResponse>;
    }

    /**
     * The policy used for monitoring the application upgrade
     */
    export interface ArmRollingUpgradeMonitoringPolicy {
        /**
         * The activation Mode of the service package
         */
        failureAction?: pulumi.Input<string>;
        /**
         * The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        healthCheckRetryTimeout?: pulumi.Input<string>;
        /**
         * The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        healthCheckStableDuration?: pulumi.Input<string>;
        /**
         * The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        healthCheckWaitDuration?: pulumi.Input<string>;
        /**
         * The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        upgradeDomainTimeout?: pulumi.Input<string>;
        /**
         * The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        upgradeTimeout?: pulumi.Input<string>;
    }

    /**
     * The policy used for monitoring the application upgrade
     */
    export interface ArmRollingUpgradeMonitoringPolicyResponse {
        /**
         * The activation Mode of the service package
         */
        failureAction?: pulumi.Input<string>;
        /**
         * The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        healthCheckRetryTimeout?: pulumi.Input<string>;
        /**
         * The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        healthCheckStableDuration?: pulumi.Input<string>;
        /**
         * The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        healthCheckWaitDuration?: pulumi.Input<string>;
        /**
         * The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        upgradeDomainTimeout?: pulumi.Input<string>;
        /**
         * The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
         */
        upgradeTimeout?: pulumi.Input<string>;
    }

    /**
     * Represents the health policy used to evaluate the health of services belonging to a service type.
     */
    export interface ArmServiceTypeHealthPolicy {
        /**
         * The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
         */
        maxPercentUnhealthyPartitionsPerService?: pulumi.Input<number>;
        /**
         * The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
         */
        maxPercentUnhealthyReplicasPerPartition?: pulumi.Input<number>;
        /**
         * The maximum percentage of services allowed to be unhealthy before your application is considered in error.
         */
        maxPercentUnhealthyServices?: pulumi.Input<number>;
    }

    /**
     * Defines a ServiceTypeHealthPolicy per service type name.
     *
     * The entries in the map replace the default service type health policy for each specified service type.
     * For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently.
     * With policy per service type, there's more granular control of the health of the service.
     *
     * If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
     */
    export interface ArmServiceTypeHealthPolicyMap {
    }

    /**
     * Defines a ServiceTypeHealthPolicy per service type name.
     *
     * The entries in the map replace the default service type health policy for each specified service type.
     * For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently.
     * With policy per service type, there's more granular control of the health of the service.
     *
     * If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
     */
    export interface ArmServiceTypeHealthPolicyMapResponse {
    }

    /**
     * Represents the health policy used to evaluate the health of services belonging to a service type.
     */
    export interface ArmServiceTypeHealthPolicyResponse {
        /**
         * The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
         */
        maxPercentUnhealthyPartitionsPerService?: pulumi.Input<number>;
        /**
         * The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
         */
        maxPercentUnhealthyReplicasPerPartition?: pulumi.Input<number>;
        /**
         * The maximum percentage of services allowed to be unhealthy before your application is considered in error.
         */
        maxPercentUnhealthyServices?: pulumi.Input<number>;
    }

    /**
     * The settings to enable AAD authentication on the cluster.
     */
    export interface AzureActiveDirectory {
        /**
         * Azure active directory client application id.
         */
        clientApplication?: pulumi.Input<string>;
        /**
         * Azure active directory cluster application id.
         */
        clusterApplication?: pulumi.Input<string>;
        /**
         * Azure active directory tenant id.
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * The settings to enable AAD authentication on the cluster.
     */
    export interface AzureActiveDirectoryResponse {
        /**
         * Azure active directory client application id.
         */
        clientApplication?: pulumi.Input<string>;
        /**
         * Azure active directory cluster application id.
         */
        clusterApplication?: pulumi.Input<string>;
        /**
         * Azure active directory tenant id.
         */
        tenantId?: pulumi.Input<string>;
    }

    /**
     * Describes the certificate details.
     */
    export interface CertificateDescription {
        /**
         * Thumbprint of the primary certificate.
         */
        thumbprint: pulumi.Input<string>;
        /**
         * Thumbprint of the secondary certificate.
         */
        thumbprintSecondary?: pulumi.Input<string>;
        /**
         * The local certificate store location.
         */
        x509StoreName?: pulumi.Input<string>;
    }

    /**
     * Describes the certificate details.
     */
    export interface CertificateDescriptionResponse {
        /**
         * Thumbprint of the primary certificate.
         */
        thumbprint: pulumi.Input<string>;
        /**
         * Thumbprint of the secondary certificate.
         */
        thumbprintSecondary?: pulumi.Input<string>;
        /**
         * The local certificate store location.
         */
        x509StoreName?: pulumi.Input<string>;
    }

    /**
     * Describes the client certificate details using common name.
     */
    export interface ClientCertificateCommonName {
        /**
         * The common name of the client certificate.
         */
        certificateCommonName: pulumi.Input<string>;
        /**
         * The issuer thumbprint of the client certificate.
         */
        certificateIssuerThumbprint: pulumi.Input<string>;
        /**
         * Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
         */
        isAdmin: pulumi.Input<boolean>;
    }

    /**
     * Describes the client certificate details using common name.
     */
    export interface ClientCertificateCommonNameResponse {
        /**
         * The common name of the client certificate.
         */
        certificateCommonName: pulumi.Input<string>;
        /**
         * The issuer thumbprint of the client certificate.
         */
        certificateIssuerThumbprint: pulumi.Input<string>;
        /**
         * Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
         */
        isAdmin: pulumi.Input<boolean>;
    }

    /**
     * Describes the client certificate details using thumbprint.
     */
    export interface ClientCertificateThumbprint {
        /**
         * The thumbprint of the client certificate.
         */
        certificateThumbprint: pulumi.Input<string>;
        /**
         * Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
         */
        isAdmin: pulumi.Input<boolean>;
    }

    /**
     * Describes the client certificate details using thumbprint.
     */
    export interface ClientCertificateThumbprintResponse {
        /**
         * The thumbprint of the client certificate.
         */
        certificateThumbprint: pulumi.Input<string>;
        /**
         * Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
         */
        isAdmin: pulumi.Input<boolean>;
    }

    /**
     * Defines a health policy used to evaluate the health of the cluster or of a cluster node.
     */
    export interface ClusterHealthPolicy {
        /**
         * Defines the application health policy map used to evaluate the health of an application or one of its children entities.
         */
        applicationHealthPolicies?: pulumi.Input<inputs.servicefabric.ApplicationHealthPolicyMap>;
        /**
         * The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.
         *
         * The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.
         * If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.
         * This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.
         * The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.
         */
        maxPercentUnhealthyApplications?: pulumi.Input<number>;
        /**
         * The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.
         *
         * The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.
         * If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.
         * The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.
         * The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
         *
         * In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.
         */
        maxPercentUnhealthyNodes?: pulumi.Input<number>;
    }

    /**
     * Defines a health policy used to evaluate the health of the cluster or of a cluster node.
     */
    export interface ClusterHealthPolicyResponse {
        /**
         * Defines the application health policy map used to evaluate the health of an application or one of its children entities.
         */
        applicationHealthPolicies?: pulumi.Input<inputs.servicefabric.ApplicationHealthPolicyMapResponse>;
        /**
         * The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.
         *
         * The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.
         * If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.
         * This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.
         * The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.
         */
        maxPercentUnhealthyApplications?: pulumi.Input<number>;
        /**
         * The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.
         *
         * The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.
         * If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.
         * The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.
         * The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
         *
         * In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.
         */
        maxPercentUnhealthyNodes?: pulumi.Input<number>;
    }

    /**
     * Describes the cluster resource properties.
     */
    export interface ClusterProperties {
        /**
         * The list of add-on features to enable in the cluster.
         */
        addOnFeatures?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The policy used to clean up unused versions.
         */
        applicationTypeVersionsCleanupPolicy?: pulumi.Input<inputs.servicefabric.ApplicationTypeVersionsCleanupPolicy>;
        /**
         * The AAD authentication settings of the cluster.
         */
        azureActiveDirectory?: pulumi.Input<inputs.servicefabric.AzureActiveDirectory>;
        /**
         * The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.
         */
        certificate?: pulumi.Input<inputs.servicefabric.CertificateDescription>;
        /**
         * Describes a list of server certificates referenced by common name that are used to secure the cluster.
         */
        certificateCommonNames?: pulumi.Input<inputs.servicefabric.ServerCertificateCommonNames>;
        /**
         * The list of client certificates referenced by common name that are allowed to manage the cluster.
         */
        clientCertificateCommonNames?: pulumi.Input<pulumi.Input<inputs.servicefabric.ClientCertificateCommonName>[]>;
        /**
         * The list of client certificates referenced by thumbprint that are allowed to manage the cluster.
         */
        clientCertificateThumbprints?: pulumi.Input<pulumi.Input<inputs.servicefabric.ClientCertificateThumbprint>[]>;
        /**
         * The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
         */
        clusterCodeVersion?: pulumi.Input<string>;
        /**
         * The storage account information for storing Service Fabric diagnostic logs.
         */
        diagnosticsStorageAccountConfig?: pulumi.Input<inputs.servicefabric.DiagnosticsStorageAccountConfig>;
        /**
         * Indicates if the event store service is enabled.
         */
        eventStoreServiceEnabled?: pulumi.Input<boolean>;
        /**
         * The list of custom fabric settings to configure the cluster.
         */
        fabricSettings?: pulumi.Input<pulumi.Input<inputs.servicefabric.SettingsSectionDescription>[]>;
        /**
         * The http management endpoint of the cluster.
         */
        managementEndpoint: pulumi.Input<string>;
        /**
         * The list of node types in the cluster.
         */
        nodeTypes: pulumi.Input<pulumi.Input<inputs.servicefabric.NodeTypeDescription>[]>;
        /**
         * The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).
         *
         *   - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
         *   - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
         *   - Silver - Run the System services with a target replica set count of 5.
         *   - Gold - Run the System services with a target replica set count of 7.
         *   - Platinum - Run the System services with a target replica set count of 9.
         */
        reliabilityLevel?: pulumi.Input<string>;
        /**
         * The server certificate used by reverse proxy.
         */
        reverseProxyCertificate?: pulumi.Input<inputs.servicefabric.CertificateDescription>;
        /**
         * Describes a list of server certificates referenced by common name that are used to secure the cluster.
         */
        reverseProxyCertificateCommonNames?: pulumi.Input<inputs.servicefabric.ServerCertificateCommonNames>;
        /**
         * The policy to use when upgrading the cluster.
         */
        upgradeDescription?: pulumi.Input<inputs.servicefabric.ClusterUpgradePolicy>;
        /**
         * The upgrade mode of the cluster when new Service Fabric runtime version is available.
         *
         *   - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.
         *   - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
         */
        upgradeMode?: pulumi.Input<string>;
        /**
         * The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
         */
        vmImage?: pulumi.Input<string>;
    }

    /**
     * Describes the cluster resource properties.
     */
    export interface ClusterPropertiesResponse {
        /**
         * The list of add-on features to enable in the cluster.
         */
        addOnFeatures?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The policy used to clean up unused versions.
         */
        applicationTypeVersionsCleanupPolicy?: pulumi.Input<inputs.servicefabric.ApplicationTypeVersionsCleanupPolicyResponse>;
        /**
         * The Service Fabric runtime versions available for this cluster.
         */
        availableClusterVersions: pulumi.Input<pulumi.Input<inputs.servicefabric.ClusterVersionDetailsResponse>[]>;
        /**
         * The AAD authentication settings of the cluster.
         */
        azureActiveDirectory?: pulumi.Input<inputs.servicefabric.AzureActiveDirectoryResponse>;
        /**
         * The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.
         */
        certificate?: pulumi.Input<inputs.servicefabric.CertificateDescriptionResponse>;
        /**
         * Describes a list of server certificates referenced by common name that are used to secure the cluster.
         */
        certificateCommonNames?: pulumi.Input<inputs.servicefabric.ServerCertificateCommonNamesResponse>;
        /**
         * The list of client certificates referenced by common name that are allowed to manage the cluster.
         */
        clientCertificateCommonNames?: pulumi.Input<pulumi.Input<inputs.servicefabric.ClientCertificateCommonNameResponse>[]>;
        /**
         * The list of client certificates referenced by thumbprint that are allowed to manage the cluster.
         */
        clientCertificateThumbprints?: pulumi.Input<pulumi.Input<inputs.servicefabric.ClientCertificateThumbprintResponse>[]>;
        /**
         * The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
         */
        clusterCodeVersion?: pulumi.Input<string>;
        /**
         * The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.
         */
        clusterEndpoint: pulumi.Input<string>;
        /**
         * A service generated unique identifier for the cluster resource.
         */
        clusterId: pulumi.Input<string>;
        /**
         * The current state of the cluster.
         *
         *   - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.
         *   - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.
         *   - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.
         *   - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.
         *   - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.
         *   - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.
         *   - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.
         *   - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.
         *   - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.
         *   - Ready - Indicates that the cluster is in a stable state.
         */
        clusterState: pulumi.Input<string>;
        /**
         * The storage account information for storing Service Fabric diagnostic logs.
         */
        diagnosticsStorageAccountConfig?: pulumi.Input<inputs.servicefabric.DiagnosticsStorageAccountConfigResponse>;
        /**
         * Indicates if the event store service is enabled.
         */
        eventStoreServiceEnabled?: pulumi.Input<boolean>;
        /**
         * The list of custom fabric settings to configure the cluster.
         */
        fabricSettings?: pulumi.Input<pulumi.Input<inputs.servicefabric.SettingsSectionDescriptionResponse>[]>;
        /**
         * The http management endpoint of the cluster.
         */
        managementEndpoint: pulumi.Input<string>;
        /**
         * The list of node types in the cluster.
         */
        nodeTypes: pulumi.Input<pulumi.Input<inputs.servicefabric.NodeTypeDescriptionResponse>[]>;
        /**
         * The provisioning state of the cluster resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).
         *
         *   - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
         *   - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
         *   - Silver - Run the System services with a target replica set count of 5.
         *   - Gold - Run the System services with a target replica set count of 7.
         *   - Platinum - Run the System services with a target replica set count of 9.
         */
        reliabilityLevel?: pulumi.Input<string>;
        /**
         * The server certificate used by reverse proxy.
         */
        reverseProxyCertificate?: pulumi.Input<inputs.servicefabric.CertificateDescriptionResponse>;
        /**
         * Describes a list of server certificates referenced by common name that are used to secure the cluster.
         */
        reverseProxyCertificateCommonNames?: pulumi.Input<inputs.servicefabric.ServerCertificateCommonNamesResponse>;
        /**
         * The policy to use when upgrading the cluster.
         */
        upgradeDescription?: pulumi.Input<inputs.servicefabric.ClusterUpgradePolicyResponse>;
        /**
         * The upgrade mode of the cluster when new Service Fabric runtime version is available.
         *
         *   - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.
         *   - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
         */
        upgradeMode?: pulumi.Input<string>;
        /**
         * The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
         */
        vmImage?: pulumi.Input<string>;
    }

    /**
     * Describes the delta health policies for the cluster upgrade.
     */
    export interface ClusterUpgradeDeltaHealthPolicy {
        /**
         * Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.
         */
        applicationDeltaHealthPolicies?: pulumi.Input<inputs.servicefabric.ApplicationDeltaHealthPolicyMap>;
        /**
         * The maximum allowed percentage of applications health degradation allowed during cluster upgrades.
         * The delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.
         * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.
         */
        maxPercentDeltaUnhealthyApplications: pulumi.Input<number>;
        /**
         * The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.
         * The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.
         * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
         */
        maxPercentDeltaUnhealthyNodes: pulumi.Input<number>;
        /**
         * The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.
         * The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.
         * The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.
         */
        maxPercentUpgradeDomainDeltaUnhealthyNodes: pulumi.Input<number>;
    }

    /**
     * Describes the delta health policies for the cluster upgrade.
     */
    export interface ClusterUpgradeDeltaHealthPolicyResponse {
        /**
         * Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.
         */
        applicationDeltaHealthPolicies?: pulumi.Input<inputs.servicefabric.ApplicationDeltaHealthPolicyMapResponse>;
        /**
         * The maximum allowed percentage of applications health degradation allowed during cluster upgrades.
         * The delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.
         * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.
         */
        maxPercentDeltaUnhealthyApplications: pulumi.Input<number>;
        /**
         * The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.
         * The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.
         * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
         */
        maxPercentDeltaUnhealthyNodes: pulumi.Input<number>;
        /**
         * The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.
         * The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.
         * The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.
         */
        maxPercentUpgradeDomainDeltaUnhealthyNodes: pulumi.Input<number>;
    }

    /**
     * Describes the policy used when upgrading the cluster.
     */
    export interface ClusterUpgradePolicy {
        /**
         * The cluster delta health policy used when upgrading the cluster.
         */
        deltaHealthPolicy?: pulumi.Input<inputs.servicefabric.ClusterUpgradeDeltaHealthPolicy>;
        /**
         * If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
         */
        forceRestart?: pulumi.Input<boolean>;
        /**
         * The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        healthCheckRetryTimeout: pulumi.Input<string>;
        /**
         * The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        healthCheckStableDuration: pulumi.Input<string>;
        /**
         * The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        healthCheckWaitDuration: pulumi.Input<string>;
        /**
         * The cluster health policy used when upgrading the cluster.
         */
        healthPolicy: pulumi.Input<inputs.servicefabric.ClusterHealthPolicy>;
        /**
         * The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        upgradeDomainTimeout: pulumi.Input<string>;
        /**
         * The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        upgradeReplicaSetCheckTimeout: pulumi.Input<string>;
        /**
         * The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        upgradeTimeout: pulumi.Input<string>;
    }

    /**
     * Describes the policy used when upgrading the cluster.
     */
    export interface ClusterUpgradePolicyResponse {
        /**
         * The cluster delta health policy used when upgrading the cluster.
         */
        deltaHealthPolicy?: pulumi.Input<inputs.servicefabric.ClusterUpgradeDeltaHealthPolicyResponse>;
        /**
         * If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
         */
        forceRestart?: pulumi.Input<boolean>;
        /**
         * The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        healthCheckRetryTimeout: pulumi.Input<string>;
        /**
         * The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        healthCheckStableDuration: pulumi.Input<string>;
        /**
         * The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        healthCheckWaitDuration: pulumi.Input<string>;
        /**
         * The cluster health policy used when upgrading the cluster.
         */
        healthPolicy: pulumi.Input<inputs.servicefabric.ClusterHealthPolicyResponse>;
        /**
         * The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        upgradeDomainTimeout: pulumi.Input<string>;
        /**
         * The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        upgradeReplicaSetCheckTimeout: pulumi.Input<string>;
        /**
         * The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
         */
        upgradeTimeout: pulumi.Input<string>;
    }

    /**
     * The detail of the Service Fabric runtime version result
     */
    export interface ClusterVersionDetailsResponse {
        /**
         * The Service Fabric runtime version of the cluster.
         */
        codeVersion?: pulumi.Input<string>;
        /**
         * Indicates if this version is for Windows or Linux operating system.
         */
        environment?: pulumi.Input<string>;
        /**
         * The date of expiry of support of the version.
         */
        supportExpiryUtc?: pulumi.Input<string>;
    }

    /**
     * A list that describes the correlation of the service with other services.
     */
    export interface CorrelationSchemeList {
    }

    /**
     * A list that describes the correlation of the service with other services.
     */
    export interface CorrelationSchemeListResponse {
    }

    /**
     * The storage account information for storing Service Fabric diagnostic logs.
     */
    export interface DiagnosticsStorageAccountConfig {
        /**
         * The blob endpoint of the azure storage account.
         */
        blobEndpoint: pulumi.Input<string>;
        /**
         * The protected diagnostics storage key name.
         */
        protectedAccountKeyName: pulumi.Input<string>;
        /**
         * The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other.
         */
        protectedAccountKeyName2?: pulumi.Input<string>;
        /**
         * The queue endpoint of the azure storage account.
         */
        queueEndpoint: pulumi.Input<string>;
        /**
         * The Azure storage account name.
         */
        storageAccountName: pulumi.Input<string>;
        /**
         * The table endpoint of the azure storage account.
         */
        tableEndpoint: pulumi.Input<string>;
    }

    /**
     * The storage account information for storing Service Fabric diagnostic logs.
     */
    export interface DiagnosticsStorageAccountConfigResponse {
        /**
         * The blob endpoint of the azure storage account.
         */
        blobEndpoint: pulumi.Input<string>;
        /**
         * The protected diagnostics storage key name.
         */
        protectedAccountKeyName: pulumi.Input<string>;
        /**
         * The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other.
         */
        protectedAccountKeyName2?: pulumi.Input<string>;
        /**
         * The queue endpoint of the azure storage account.
         */
        queueEndpoint: pulumi.Input<string>;
        /**
         * The Azure storage account name.
         */
        storageAccountName: pulumi.Input<string>;
        /**
         * The table endpoint of the azure storage account.
         */
        tableEndpoint: pulumi.Input<string>;
    }

    /**
     * Port range details
     */
    export interface EndpointRangeDescription {
        /**
         * End port of a range of ports
         */
        endPort: pulumi.Input<number>;
        /**
         * Starting port of a range of ports
         */
        startPort: pulumi.Input<number>;
    }

    /**
     * Port range details
     */
    export interface EndpointRangeDescriptionResponse {
        /**
         * End port of a range of ports
         */
        endPort: pulumi.Input<number>;
        /**
         * Starting port of a range of ports
         */
        startPort: pulumi.Input<number>;
    }

    /**
     * If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
     */
    export interface ForceRestart {
    }

    /**
     * If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
     */
    export interface ForceRestartResponse {
    }

    /**
     * Describes the managed identities for an Azure resource.
     */
    export interface ManagedIdentity {
        /**
         * The type of managed identity for the resource.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
         * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<inputs.servicefabric.UserAssignedIdentityMap>;
    }

    /**
     * Describes the managed identities for an Azure resource.
     */
    export interface ManagedIdentityResponse {
        /**
         * The principal id of the managed identity. This property will only be provided for a system assigned identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id of the managed identity. This property will only be provided for a system assigned identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of managed identity for the resource.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
         * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<inputs.servicefabric.UserAssignedIdentityMapResponse>;
    }

    /**
     * Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.
     */
    export interface NodeTypeDescription {
        /**
         * The range of ports from which cluster assigned port to Service Fabric applications.
         */
        applicationPorts?: pulumi.Input<inputs.servicefabric.EndpointRangeDescription>;
        /**
         * The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.
         */
        capacities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The TCP cluster management endpoint port.
         */
        clientConnectionEndpointPort: pulumi.Input<number>;
        /**
         * The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).
         *
         *   - Bronze - No privileges. This is the default.
         *   - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.
         *   - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.
         */
        durabilityLevel?: pulumi.Input<string>;
        /**
         * The range of ephemeral ports that nodes in this node type should be configured with.
         */
        ephemeralPorts?: pulumi.Input<inputs.servicefabric.EndpointRangeDescription>;
        /**
         * The HTTP cluster management endpoint port.
         */
        httpGatewayEndpointPort: pulumi.Input<number>;
        /**
         * The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters.
         */
        isPrimary: pulumi.Input<boolean>;
        /**
         * The name of the node type.
         */
        name: pulumi.Input<string>;
        /**
         * The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.
         */
        placementProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The endpoint used by reverse proxy.
         */
        reverseProxyEndpointPort?: pulumi.Input<number>;
        /**
         * The number of nodes in the node type. This count should match the capacity property in the corresponding VirtualMachineScaleSet resource.
         */
        vmInstanceCount: pulumi.Input<number>;
    }

    /**
     * Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.
     */
    export interface NodeTypeDescriptionResponse {
        /**
         * The range of ports from which cluster assigned port to Service Fabric applications.
         */
        applicationPorts?: pulumi.Input<inputs.servicefabric.EndpointRangeDescriptionResponse>;
        /**
         * The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.
         */
        capacities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The TCP cluster management endpoint port.
         */
        clientConnectionEndpointPort: pulumi.Input<number>;
        /**
         * The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).
         *
         *   - Bronze - No privileges. This is the default.
         *   - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.
         *   - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.
         */
        durabilityLevel?: pulumi.Input<string>;
        /**
         * The range of ephemeral ports that nodes in this node type should be configured with.
         */
        ephemeralPorts?: pulumi.Input<inputs.servicefabric.EndpointRangeDescriptionResponse>;
        /**
         * The HTTP cluster management endpoint port.
         */
        httpGatewayEndpointPort: pulumi.Input<number>;
        /**
         * The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters.
         */
        isPrimary: pulumi.Input<boolean>;
        /**
         * The name of the node type.
         */
        name: pulumi.Input<string>;
        /**
         * The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.
         */
        placementProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The endpoint used by reverse proxy.
         */
        reverseProxyEndpointPort?: pulumi.Input<number>;
        /**
         * The number of nodes in the node type. This count should match the capacity property in the corresponding VirtualMachineScaleSet resource.
         */
        vmInstanceCount: pulumi.Input<number>;
    }

    /**
     * Describes how the service is partitioned.
     */
    export interface PartitionSchemeDescription {
        /**
         * Specifies how the service is partitioned.
         */
        partitionScheme: pulumi.Input<string>;
    }

    /**
     * Describes how the service is partitioned.
     */
    export interface PartitionSchemeDescriptionResponse {
        /**
         * Specifies how the service is partitioned.
         */
        partitionScheme: pulumi.Input<string>;
    }

    /**
     * Describes the server certificate details using common name.
     */
    export interface ServerCertificateCommonName {
        /**
         * The common name of the server certificate.
         */
        certificateCommonName: pulumi.Input<string>;
        /**
         * The issuer thumbprint of the server certificate.
         */
        certificateIssuerThumbprint: pulumi.Input<string>;
    }

    /**
     * Describes the server certificate details using common name.
     */
    export interface ServerCertificateCommonNameResponse {
        /**
         * The common name of the server certificate.
         */
        certificateCommonName: pulumi.Input<string>;
        /**
         * The issuer thumbprint of the server certificate.
         */
        certificateIssuerThumbprint: pulumi.Input<string>;
    }

    /**
     * Describes a list of server certificates referenced by common name that are used to secure the cluster.
     */
    export interface ServerCertificateCommonNames {
        /**
         * The list of server certificates referenced by common name that are used to secure the cluster.
         */
        commonNames?: pulumi.Input<pulumi.Input<inputs.servicefabric.ServerCertificateCommonName>[]>;
        /**
         * The local certificate store location.
         */
        x509StoreName?: pulumi.Input<string>;
    }

    /**
     * Describes a list of server certificates referenced by common name that are used to secure the cluster.
     */
    export interface ServerCertificateCommonNamesResponse {
        /**
         * The list of server certificates referenced by common name that are used to secure the cluster.
         */
        commonNames?: pulumi.Input<pulumi.Input<inputs.servicefabric.ServerCertificateCommonNameResponse>[]>;
        /**
         * The local certificate store location.
         */
        x509StoreName?: pulumi.Input<string>;
    }

    /**
     * The service load metrics is given as an array of ServiceLoadMetricDescription objects.
     */
    export interface ServiceLoadMetricsList {
    }

    /**
     * The service load metrics is given as an array of ServiceLoadMetricDescription objects.
     */
    export interface ServiceLoadMetricsListResponse {
    }

    /**
     * A list that describes the correlation of the service with other services.
     */
    export interface ServicePlacementPoliciesList {
    }

    /**
     * A list that describes the correlation of the service with other services.
     */
    export interface ServicePlacementPoliciesListResponse {
    }

    /**
     * The service resource properties.
     */
    export interface ServiceResourceProperties {
        /**
         * A list that describes the correlation of the service with other services.
         */
        correlationScheme?: pulumi.Input<inputs.servicefabric.CorrelationSchemeList>;
        /**
         * Specifies the move cost for the service.
         */
        defaultMoveCost?: pulumi.Input<string>;
        /**
         * Describes how the service is partitioned.
         */
        partitionDescription?: pulumi.Input<inputs.servicefabric.PartitionSchemeDescription>;
        /**
         * The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".
         */
        placementConstraints?: pulumi.Input<string>;
        /**
         * Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.
         */
        serviceDnsName?: pulumi.Input<string>;
        /**
         * The kind of service (Stateless or Stateful).
         */
        serviceKind: pulumi.Input<string>;
        /**
         * The service load metrics is given as an array of ServiceLoadMetricDescription objects.
         */
        serviceLoadMetrics?: pulumi.Input<inputs.servicefabric.ServiceLoadMetricsList>;
        /**
         * The activation Mode of the service package
         */
        servicePackageActivationMode?: pulumi.Input<string>;
        /**
         * A list that describes the correlation of the service with other services.
         */
        servicePlacementPolicies?: pulumi.Input<inputs.servicefabric.ServicePlacementPoliciesList>;
        /**
         * The name of the service type
         */
        serviceTypeName?: pulumi.Input<string>;
    }

    /**
     * The service resource properties.
     */
    export interface ServiceResourcePropertiesResponse {
        /**
         * A list that describes the correlation of the service with other services.
         */
        correlationScheme?: pulumi.Input<inputs.servicefabric.CorrelationSchemeListResponse>;
        /**
         * Specifies the move cost for the service.
         */
        defaultMoveCost?: pulumi.Input<string>;
        /**
         * Describes how the service is partitioned.
         */
        partitionDescription?: pulumi.Input<inputs.servicefabric.PartitionSchemeDescriptionResponse>;
        /**
         * The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".
         */
        placementConstraints?: pulumi.Input<string>;
        /**
         * The current deployment or provisioning state, which only appears in the response
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.
         */
        serviceDnsName?: pulumi.Input<string>;
        /**
         * The kind of service (Stateless or Stateful).
         */
        serviceKind: pulumi.Input<string>;
        /**
         * The service load metrics is given as an array of ServiceLoadMetricDescription objects.
         */
        serviceLoadMetrics?: pulumi.Input<inputs.servicefabric.ServiceLoadMetricsListResponse>;
        /**
         * The activation Mode of the service package
         */
        servicePackageActivationMode?: pulumi.Input<string>;
        /**
         * A list that describes the correlation of the service with other services.
         */
        servicePlacementPolicies?: pulumi.Input<inputs.servicefabric.ServicePlacementPoliciesListResponse>;
        /**
         * The name of the service type
         */
        serviceTypeName?: pulumi.Input<string>;
    }

    /**
     * Describes a parameter in fabric settings of the cluster.
     */
    export interface SettingsParameterDescription {
        /**
         * The parameter name of fabric setting.
         */
        name: pulumi.Input<string>;
        /**
         * The parameter value of fabric setting.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Describes a parameter in fabric settings of the cluster.
     */
    export interface SettingsParameterDescriptionResponse {
        /**
         * The parameter name of fabric setting.
         */
        name: pulumi.Input<string>;
        /**
         * The parameter value of fabric setting.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Describes a section in the fabric settings of the cluster.
     */
    export interface SettingsSectionDescription {
        /**
         * The section name of the fabric settings.
         */
        name: pulumi.Input<string>;
        /**
         * The collection of parameters in the section.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.servicefabric.SettingsParameterDescription>[]>;
    }

    /**
     * Describes a section in the fabric settings of the cluster.
     */
    export interface SettingsSectionDescriptionResponse {
        /**
         * The section name of the fabric settings.
         */
        name: pulumi.Input<string>;
        /**
         * The collection of parameters in the section.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.servicefabric.SettingsParameterDescriptionResponse>[]>;
    }

    /**
     * The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
     * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    export interface UserAssignedIdentityMap {
    }

    /**
     * The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
     * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    export interface UserAssignedIdentityMapResponse {
    }
}

export namespace signalrservice {
    /**
     * Network ACL
     */
    export interface NetworkACL {
        /**
         * Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
         */
        allow?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
         */
        deny?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Network ACL
     */
    export interface NetworkACLResponse {
        /**
         * Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
         */
        allow?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
         */
        deny?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Private endpoint
     */
    export interface PrivateEndpoint {
        /**
         * Full qualified Id of the private endpoint
         */
        id?: pulumi.Input<string>;
    }

    /**
     * ACL for a private endpoint
     */
    export interface PrivateEndpointACL {
        /**
         * Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
         */
        allow?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
         */
        deny?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the private endpoint connection
         */
        name: pulumi.Input<string>;
    }

    /**
     * ACL for a private endpoint
     */
    export interface PrivateEndpointACLResponse {
        /**
         * Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
         */
        allow?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
         */
        deny?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the private endpoint connection
         */
        name: pulumi.Input<string>;
    }

    /**
     * Private endpoint connection properties
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * Private endpoint associated with the private endpoint connection
         */
        privateEndpoint?: pulumi.Input<inputs.signalrservice.PrivateEndpoint>;
        /**
         * Connection state
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.signalrservice.PrivateLinkServiceConnectionState>;
    }

    /**
     * Private endpoint connection properties
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * Private endpoint associated with the private endpoint connection
         */
        privateEndpoint?: pulumi.Input<inputs.signalrservice.PrivateEndpointResponse>;
        /**
         * Connection state
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.signalrservice.PrivateLinkServiceConnectionStateResponse>;
        /**
         * Provisioning state of the private endpoint connection
         */
        provisioningState: pulumi.Input<string>;
    }

    /**
     * A private endpoint connection to SignalR resource
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * Fully qualified resource Id for the resource.
         */
        id: pulumi.Input<string>;
        /**
         * The name of the resource.
         */
        name: pulumi.Input<string>;
        /**
         * Properties of the private endpoint connection
         */
        properties?: pulumi.Input<inputs.signalrservice.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The type of the resource - e.g. "Microsoft.SignalRService/SignalR"
         */
        type: pulumi.Input<string>;
    }

    /**
     * Private endpoint
     */
    export interface PrivateEndpointResponse {
        /**
         * Full qualified Id of the private endpoint
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Connection state of the private endpoint connection
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Connection state of the private endpoint connection
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The billing information of the SignalR resource.
     */
    export interface ResourceSku {
        /**
         * Optional, integer. The unit count of SignalR resource. 1 by default.
         * 
         * If present, following values are allowed:
         *     Free: 1
         *     Standard: 1,2,5,10,20,50,100
         */
        capacity?: pulumi.Input<number>;
        /**
         * Optional string. For future use.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the SKU. Required.
         * 
         * Allowed values: Standard_S1, Free_F1
         */
        name: pulumi.Input<string>;
        /**
         * Optional string. For future use.
         */
        size?: pulumi.Input<string>;
        /**
         * Optional tier of this particular SKU. 'Standard' or 'Free'. 
         * 
         * `Basic` is deprecated, use `Standard` instead.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The billing information of the SignalR resource.
     */
    export interface ResourceSkuResponse {
        /**
         * Optional, integer. The unit count of SignalR resource. 1 by default.
         * 
         * If present, following values are allowed:
         *     Free: 1
         *     Standard: 1,2,5,10,20,50,100
         */
        capacity?: pulumi.Input<number>;
        /**
         * Optional string. For future use.
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the SKU. Required.
         * 
         * Allowed values: Standard_S1, Free_F1
         */
        name: pulumi.Input<string>;
        /**
         * Optional string. For future use.
         */
        size?: pulumi.Input<string>;
        /**
         * Optional tier of this particular SKU. 'Standard' or 'Free'. 
         * 
         * `Basic` is deprecated, use `Standard` instead.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The settings for the Upstream when the Azure SignalR is in server-less mode.
     */
    export interface ServerlessUpstreamSettings {
        /**
         * Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects.
         */
        templates?: pulumi.Input<pulumi.Input<inputs.signalrservice.UpstreamTemplate>[]>;
    }

    /**
     * The settings for the Upstream when the Azure SignalR is in server-less mode.
     */
    export interface ServerlessUpstreamSettingsResponse {
        /**
         * Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects.
         */
        templates?: pulumi.Input<pulumi.Input<inputs.signalrservice.UpstreamTemplateResponse>[]>;
    }

    /**
     * Cross-Origin Resource Sharing (CORS) settings.
     */
    export interface SignalRCorsSettings {
        /**
         * Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use "*" to allow all. If omitted, allow all by default.
         */
        allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Cross-Origin Resource Sharing (CORS) settings.
     */
    export interface SignalRCorsSettingsResponse {
        /**
         * Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use "*" to allow all. If omitted, allow all by default.
         */
        allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Feature of a SignalR resource, which controls the SignalR runtime behavior.
     */
    export interface SignalRFeature {
        /**
         * FeatureFlags is the supported features of Azure SignalR service.
         * - ServiceMode: Flag for backend server for SignalR service. Values allowed: "Default": have your own backend server; "Serverless": your application doesn't have a backend server; "Classic": for backward compatibility. Support both Default and Serverless mode but not recommended; "PredefinedOnly": for future use.
         * - EnableConnectivityLogs: "true"/"false", to enable/disable the connectivity log category respectively.
         */
        flag: pulumi.Input<string>;
        /**
         * Optional properties related to this feature.
         */
        properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Feature of a SignalR resource, which controls the SignalR runtime behavior.
     */
    export interface SignalRFeatureResponse {
        /**
         * FeatureFlags is the supported features of Azure SignalR service.
         * - ServiceMode: Flag for backend server for SignalR service. Values allowed: "Default": have your own backend server; "Serverless": your application doesn't have a backend server; "Classic": for backward compatibility. Support both Default and Serverless mode but not recommended; "PredefinedOnly": for future use.
         * - EnableConnectivityLogs: "true"/"false", to enable/disable the connectivity log category respectively.
         */
        flag: pulumi.Input<string>;
        /**
         * Optional properties related to this feature.
         */
        properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Network ACLs for SignalR
     */
    export interface SignalRNetworkACLs {
        /**
         * Default action when no other rule matches
         */
        defaultAction?: pulumi.Input<string>;
        /**
         * ACLs for requests from private endpoints
         */
        privateEndpoints?: pulumi.Input<pulumi.Input<inputs.signalrservice.PrivateEndpointACL>[]>;
        /**
         * ACL for requests from public network
         */
        publicNetwork?: pulumi.Input<inputs.signalrservice.NetworkACL>;
    }

    /**
     * Network ACLs for SignalR
     */
    export interface SignalRNetworkACLsResponse {
        /**
         * Default action when no other rule matches
         */
        defaultAction?: pulumi.Input<string>;
        /**
         * ACLs for requests from private endpoints
         */
        privateEndpoints?: pulumi.Input<pulumi.Input<inputs.signalrservice.PrivateEndpointACLResponse>[]>;
        /**
         * ACL for requests from public network
         */
        publicNetwork?: pulumi.Input<inputs.signalrservice.NetworkACLResponse>;
    }

    /**
     * A class that describes the properties of the SignalR service that should contain more read-only properties than AzSignalR.Models.SignalRCreateOrUpdateProperties
     */
    export interface SignalRProperties {
        /**
         * Cross-Origin Resource Sharing (CORS) settings.
         */
        cors?: pulumi.Input<inputs.signalrservice.SignalRCorsSettings>;
        /**
         * List of SignalR featureFlags. e.g. ServiceMode.
         * 
         * FeatureFlags that are not included in the parameters for the update operation will not be modified.
         * And the response will only include featureFlags that are explicitly set. 
         * When a featureFlag is not explicitly set, SignalR service will use its globally default value. 
         * But keep in mind, the default value doesn't mean "false". It varies in terms of different FeatureFlags.
         */
        features?: pulumi.Input<pulumi.Input<inputs.signalrservice.SignalRFeature>[]>;
        /**
         * Prefix for the hostName of the SignalR service. Retained for future use.
         * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
         */
        hostNamePrefix?: pulumi.Input<string>;
        /**
         * Network ACLs
         */
        networkACLs?: pulumi.Input<inputs.signalrservice.SignalRNetworkACLs>;
        /**
         * Upstream settings when the Azure SignalR is in server-less mode.
         */
        upstream?: pulumi.Input<inputs.signalrservice.ServerlessUpstreamSettings>;
    }

    /**
     * A class that describes the properties of the SignalR service that should contain more read-only properties than AzSignalR.Models.SignalRCreateOrUpdateProperties
     */
    export interface SignalRPropertiesResponse {
        /**
         * Cross-Origin Resource Sharing (CORS) settings.
         */
        cors?: pulumi.Input<inputs.signalrservice.SignalRCorsSettingsResponse>;
        /**
         * The publicly accessible IP of the SignalR service.
         */
        externalIP: pulumi.Input<string>;
        /**
         * List of SignalR featureFlags. e.g. ServiceMode.
         * 
         * FeatureFlags that are not included in the parameters for the update operation will not be modified.
         * And the response will only include featureFlags that are explicitly set. 
         * When a featureFlag is not explicitly set, SignalR service will use its globally default value. 
         * But keep in mind, the default value doesn't mean "false". It varies in terms of different FeatureFlags.
         */
        features?: pulumi.Input<pulumi.Input<inputs.signalrservice.SignalRFeatureResponse>[]>;
        /**
         * FQDN of the SignalR service instance. Format: xxx.service.signalr.net
         */
        hostName: pulumi.Input<string>;
        /**
         * Prefix for the hostName of the SignalR service. Retained for future use.
         * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
         */
        hostNamePrefix?: pulumi.Input<string>;
        /**
         * Network ACLs
         */
        networkACLs?: pulumi.Input<inputs.signalrservice.SignalRNetworkACLsResponse>;
        /**
         * Private endpoint connections to the SignalR resource.
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.signalrservice.PrivateEndpointConnectionResponse>[]>;
        /**
         * Provisioning state of the resource.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The publicly accessible port of the SignalR service which is designed for browser/client side usage.
         */
        publicPort: pulumi.Input<number>;
        /**
         * The publicly accessible port of the SignalR service which is designed for customer server side usage.
         */
        serverPort: pulumi.Input<number>;
        /**
         * Upstream settings when the Azure SignalR is in server-less mode.
         */
        upstream?: pulumi.Input<inputs.signalrservice.ServerlessUpstreamSettingsResponse>;
        /**
         * Version of the SignalR resource. Probably you need the same or higher version of client SDKs.
         */
        version: pulumi.Input<string>;
    }

    /**
     * Upstream template item settings. It defines the Upstream URL of the incoming requests.
     * The template defines the pattern of the event, the hub or the category of the incoming request that matches current URL template.
     */
    export interface UpstreamTemplate {
        /**
         * Gets or sets the matching pattern for category names. If not set, it matches any category.
         * There are 3 kind of patterns supported:
         *     1. "*", it to matches any category name
         *     2. Combine multiple categories with ",", for example "connections,messages", it matches category "connections" and "messages"
         *     3. The single category name, for example, "connections", it matches the category "connections"
         */
        categoryPattern?: pulumi.Input<string>;
        /**
         * Gets or sets the matching pattern for event names. If not set, it matches any event.
         * There are 3 kind of patterns supported:
         *     1. "*", it to matches any event name
         *     2. Combine multiple events with ",", for example "connect,disconnect", it matches event "connect" and "disconnect"
         *     3. The single event name, for example, "connect", it matches "connect"
         */
        eventPattern?: pulumi.Input<string>;
        /**
         * Gets or sets the matching pattern for hub names. If not set, it matches any hub.
         * There are 3 kind of patterns supported:
         *     1. "*", it to matches any hub name
         *     2. Combine multiple hubs with ",", for example "hub1,hub2", it matches "hub1" and "hub2"
         *     3. The single hub name, for example, "hub1", it matches "hub1"
         */
        hubPattern?: pulumi.Input<string>;
        /**
         * Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in.
         * For example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with a client request from hub `chat` connects, it will first POST to this URL: `http://example.com/chat/api/connect`.
         */
        urlTemplate: pulumi.Input<string>;
    }

    /**
     * Upstream template item settings. It defines the Upstream URL of the incoming requests.
     * The template defines the pattern of the event, the hub or the category of the incoming request that matches current URL template.
     */
    export interface UpstreamTemplateResponse {
        /**
         * Gets or sets the matching pattern for category names. If not set, it matches any category.
         * There are 3 kind of patterns supported:
         *     1. "*", it to matches any category name
         *     2. Combine multiple categories with ",", for example "connections,messages", it matches category "connections" and "messages"
         *     3. The single category name, for example, "connections", it matches the category "connections"
         */
        categoryPattern?: pulumi.Input<string>;
        /**
         * Gets or sets the matching pattern for event names. If not set, it matches any event.
         * There are 3 kind of patterns supported:
         *     1. "*", it to matches any event name
         *     2. Combine multiple events with ",", for example "connect,disconnect", it matches event "connect" and "disconnect"
         *     3. The single event name, for example, "connect", it matches "connect"
         */
        eventPattern?: pulumi.Input<string>;
        /**
         * Gets or sets the matching pattern for hub names. If not set, it matches any hub.
         * There are 3 kind of patterns supported:
         *     1. "*", it to matches any hub name
         *     2. Combine multiple hubs with ",", for example "hub1,hub2", it matches "hub1" and "hub2"
         *     3. The single hub name, for example, "hub1", it matches "hub1"
         */
        hubPattern?: pulumi.Input<string>;
        /**
         * Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in.
         * For example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with a client request from hub `chat` connects, it will first POST to this URL: `http://example.com/chat/api/connect`.
         */
        urlTemplate: pulumi.Input<string>;
    }
}

export namespace solutions {
    /**
     * Managed application artifact.
     */
    export interface ApplicationArtifactResponse {
        /**
         * The managed application artifact name.
         */
        name: pulumi.Input<string>;
        /**
         * The managed application artifact type.
         */
        type: pulumi.Input<string>;
        /**
         * The managed application artifact blob uri.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * The managed application provider authorization.
     */
    export interface ApplicationAuthorization {
        /**
         * The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
         */
        principalId: pulumi.Input<string>;
        /**
         * The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
         */
        roleDefinitionId: pulumi.Input<string>;
    }

    /**
     * The managed application provider authorization.
     */
    export interface ApplicationAuthorizationResponse {
        /**
         * The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
         */
        principalId: pulumi.Input<string>;
        /**
         * The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
         */
        roleDefinitionId: pulumi.Input<string>;
    }

    /**
     * Managed application billing details definition.
     */
    export interface ApplicationBillingDetailsDefinitionResponse {
        /**
         * The managed application resource usage Id.
         */
        resourceUsageId?: pulumi.Input<string>;
    }

    /**
     * The application client details to track the entity creating/updating the managed app resource.
     */
    export interface ApplicationClientDetailsResponse {
        /**
         * The client application Id.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * The client Oid.
         */
        oid?: pulumi.Input<string>;
        /**
         * The client Puid
         */
        puid?: pulumi.Input<string>;
    }

    /**
     * Application definition artifact.
     */
    export interface ApplicationDefinitionArtifact {
        /**
         * The managed application definition artifact name.
         */
        name: pulumi.Input<string>;
        /**
         * The managed application definition artifact type.
         */
        type: pulumi.Input<string>;
        /**
         * The managed application definition artifact blob uri.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Application definition artifact.
     */
    export interface ApplicationDefinitionArtifactResponse {
        /**
         * The managed application definition artifact name.
         */
        name: pulumi.Input<string>;
        /**
         * The managed application definition artifact type.
         */
        type: pulumi.Input<string>;
        /**
         * The managed application definition artifact blob uri.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * The managed application definition properties.
     */
    export interface ApplicationDefinitionProperties {
        /**
         * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
         */
        artifacts?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationDefinitionArtifact>[]>;
        /**
         * The managed application provider authorizations.
         */
        authorizations?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationAuthorization>[]>;
        /**
         * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
         */
        createUiDefinition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The managed application deployment policy.
         */
        deploymentPolicy?: pulumi.Input<inputs.solutions.ApplicationDeploymentPolicy>;
        /**
         * The managed application definition description.
         */
        description?: pulumi.Input<string>;
        /**
         * The managed application definition display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * A value indicating whether the package is enabled or not.
         */
        isEnabled?: pulumi.Input<boolean>;
        /**
         * The managed application lock level.
         */
        lockLevel: pulumi.Input<string>;
        /**
         * The managed application locking policy.
         */
        lockingPolicy?: pulumi.Input<inputs.solutions.ApplicationPackageLockingPolicyDefinition>;
        /**
         * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
         */
        mainTemplate?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The managed application management policy that determines publisher's access to the managed resource group.
         */
        managementPolicy?: pulumi.Input<inputs.solutions.ApplicationManagementPolicy>;
        /**
         * The managed application notification policy.
         */
        notificationPolicy?: pulumi.Input<inputs.solutions.ApplicationNotificationPolicy>;
        /**
         * The managed application definition package file Uri. Use this element
         */
        packageFileUri?: pulumi.Input<string>;
        /**
         * The managed application provider policies.
         */
        policies?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationPolicy>[]>;
    }

    /**
     * The managed application definition properties.
     */
    export interface ApplicationDefinitionPropertiesResponse {
        /**
         * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
         */
        artifacts?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationDefinitionArtifactResponse>[]>;
        /**
         * The managed application provider authorizations.
         */
        authorizations?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationAuthorizationResponse>[]>;
        /**
         * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
         */
        createUiDefinition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The managed application deployment policy.
         */
        deploymentPolicy?: pulumi.Input<inputs.solutions.ApplicationDeploymentPolicyResponse>;
        /**
         * The managed application definition description.
         */
        description?: pulumi.Input<string>;
        /**
         * The managed application definition display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * A value indicating whether the package is enabled or not.
         */
        isEnabled?: pulumi.Input<boolean>;
        /**
         * The managed application lock level.
         */
        lockLevel: pulumi.Input<string>;
        /**
         * The managed application locking policy.
         */
        lockingPolicy?: pulumi.Input<inputs.solutions.ApplicationPackageLockingPolicyDefinitionResponse>;
        /**
         * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
         */
        mainTemplate?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The managed application management policy that determines publisher's access to the managed resource group.
         */
        managementPolicy?: pulumi.Input<inputs.solutions.ApplicationManagementPolicyResponse>;
        /**
         * The managed application notification policy.
         */
        notificationPolicy?: pulumi.Input<inputs.solutions.ApplicationNotificationPolicyResponse>;
        /**
         * The managed application definition package file Uri. Use this element
         */
        packageFileUri?: pulumi.Input<string>;
        /**
         * The managed application provider policies.
         */
        policies?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationPolicyResponse>[]>;
    }

    /**
     * Managed application deployment policy.
     */
    export interface ApplicationDeploymentPolicy {
        /**
         * The managed application deployment mode.
         */
        deploymentMode: pulumi.Input<string>;
    }

    /**
     * Managed application deployment policy.
     */
    export interface ApplicationDeploymentPolicyResponse {
        /**
         * The managed application deployment mode.
         */
        deploymentMode: pulumi.Input<string>;
    }

    /**
     * Managed application Jit access policy.
     */
    export interface ApplicationJitAccessPolicy {
        /**
         * Whether the JIT access is enabled.
         */
        jitAccessEnabled: pulumi.Input<boolean>;
        /**
         * JIT approval mode.
         */
        jitApprovalMode?: pulumi.Input<string>;
        /**
         * The JIT approvers
         */
        jitApprovers?: pulumi.Input<pulumi.Input<inputs.solutions.JitApproverDefinition>[]>;
        /**
         * The maximum duration JIT access is granted. This is an ISO8601 time period value.
         */
        maximumJitAccessDuration?: pulumi.Input<string>;
    }

    /**
     * Managed application Jit access policy.
     */
    export interface ApplicationJitAccessPolicyResponse {
        /**
         * Whether the JIT access is enabled.
         */
        jitAccessEnabled: pulumi.Input<boolean>;
        /**
         * JIT approval mode.
         */
        jitApprovalMode?: pulumi.Input<string>;
        /**
         * The JIT approvers
         */
        jitApprovers?: pulumi.Input<pulumi.Input<inputs.solutions.JitApproverDefinitionResponse>[]>;
        /**
         * The maximum duration JIT access is granted. This is an ISO8601 time period value.
         */
        maximumJitAccessDuration?: pulumi.Input<string>;
    }

    /**
     * Managed application management policy.
     */
    export interface ApplicationManagementPolicy {
        /**
         * The managed application management mode.
         */
        mode?: pulumi.Input<string>;
    }

    /**
     * Managed application management policy.
     */
    export interface ApplicationManagementPolicyResponse {
        /**
         * The managed application management mode.
         */
        mode?: pulumi.Input<string>;
    }

    /**
     * Managed application notification endpoint.
     */
    export interface ApplicationNotificationEndpoint {
        /**
         * The managed application notification endpoint uri.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Managed application notification endpoint.
     */
    export interface ApplicationNotificationEndpointResponse {
        /**
         * The managed application notification endpoint uri.
         */
        uri: pulumi.Input<string>;
    }

    /**
     * Managed application notification policy.
     */
    export interface ApplicationNotificationPolicy {
        /**
         * The managed application notification endpoint.
         */
        notificationEndpoints: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationNotificationEndpoint>[]>;
    }

    /**
     * Managed application notification policy.
     */
    export interface ApplicationNotificationPolicyResponse {
        /**
         * The managed application notification endpoint.
         */
        notificationEndpoints: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationNotificationEndpointResponse>[]>;
    }

    /**
     * The application package contact information.
     */
    export interface ApplicationPackageContactResponse {
        /**
         * The contact name.
         */
        contactName?: pulumi.Input<string>;
        /**
         * The contact email.
         */
        email: pulumi.Input<string>;
        /**
         * The contact phone number.
         */
        phone: pulumi.Input<string>;
    }

    /**
     * Managed application locking policy.
     */
    export interface ApplicationPackageLockingPolicyDefinition {
        /**
         * The deny assignment excluded actions.
         */
        allowedActions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Managed application locking policy.
     */
    export interface ApplicationPackageLockingPolicyDefinitionResponse {
        /**
         * The deny assignment excluded actions.
         */
        allowedActions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The appliance package support URLs.
     */
    export interface ApplicationPackageSupportUrlsResponse {
        /**
         * The government cloud support URL.
         */
        governmentCloud?: pulumi.Input<string>;
        /**
         * The public azure support URL.
         */
        publicAzure?: pulumi.Input<string>;
    }

    /**
     * Managed application policy.
     */
    export interface ApplicationPolicy {
        /**
         * The policy name
         */
        name?: pulumi.Input<string>;
        /**
         * The policy parameters.
         */
        parameters?: pulumi.Input<string>;
        /**
         * The policy definition Id.
         */
        policyDefinitionId?: pulumi.Input<string>;
    }

    /**
     * Managed application policy.
     */
    export interface ApplicationPolicyResponse {
        /**
         * The policy name
         */
        name?: pulumi.Input<string>;
        /**
         * The policy parameters.
         */
        parameters?: pulumi.Input<string>;
        /**
         * The policy definition Id.
         */
        policyDefinitionId?: pulumi.Input<string>;
    }

    /**
     * The managed application properties.
     */
    export interface ApplicationProperties {
        /**
         * The fully qualified path of managed application definition Id.
         */
        applicationDefinitionId?: pulumi.Input<string>;
        /**
         * The managed application Jit access policy.
         */
        jitAccessPolicy?: pulumi.Input<inputs.solutions.ApplicationJitAccessPolicy>;
        /**
         * The managed resource group Id.
         */
        managedResourceGroupId?: pulumi.Input<string>;
        /**
         * Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * The managed application properties.
     */
    export interface ApplicationPropertiesResponse {
        /**
         * The fully qualified path of managed application definition Id.
         */
        applicationDefinitionId?: pulumi.Input<string>;
        /**
         * The collection of managed application artifacts.
         */
        artifacts: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationArtifactResponse>[]>;
        /**
         * The  read-only authorizations property that is retrieved from the application package.
         */
        authorizations: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationAuthorizationResponse>[]>;
        /**
         * The managed application billing details.
         */
        billingDetails: pulumi.Input<inputs.solutions.ApplicationBillingDetailsDefinitionResponse>;
        /**
         * The client entity that created the JIT request.
         */
        createdBy: pulumi.Input<inputs.solutions.ApplicationClientDetailsResponse>;
        /**
         * The read-only customer support property that is retrieved from the application package.
         */
        customerSupport: pulumi.Input<inputs.solutions.ApplicationPackageContactResponse>;
        /**
         * The managed application Jit access policy.
         */
        jitAccessPolicy?: pulumi.Input<inputs.solutions.ApplicationJitAccessPolicyResponse>;
        /**
         * The managed resource group Id.
         */
        managedResourceGroupId?: pulumi.Input<string>;
        /**
         * The managed application management mode.
         */
        managementMode: pulumi.Input<string>;
        /**
         * Name and value pairs that define the managed application outputs.
         */
        outputs: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The managed application provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The publisher tenant Id.
         */
        publisherTenantId: pulumi.Input<string>;
        /**
         * The read-only support URLs property that is retrieved from the application package.
         */
        supportUrls: pulumi.Input<inputs.solutions.ApplicationPackageSupportUrlsResponse>;
        /**
         * The client entity that last updated the JIT request.
         */
        updatedBy: pulumi.Input<inputs.solutions.ApplicationClientDetailsResponse>;
    }

    /**
     * Identity for the resource.
     */
    export interface Identity {
        /**
         * The identity type.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the resource.
     */
    export interface IdentityResponse {
        /**
         * The principal ID of resource identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant ID of resource.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * JIT approver definition.
     */
    export interface JitApproverDefinition {
        /**
         * The approver display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The approver service principal Id.
         */
        id: pulumi.Input<string>;
        /**
         * The approver type.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * JIT approver definition.
     */
    export interface JitApproverDefinitionResponse {
        /**
         * The approver display name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The approver service principal Id.
         */
        id: pulumi.Input<string>;
        /**
         * The approver type.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The JIT authorization policies.
     */
    export interface JitAuthorizationPolicies {
        /**
         * The the principal id that will be granted JIT access.
         */
        principalId: pulumi.Input<string>;
        /**
         * The role definition id that will be granted to the Principal.
         */
        roleDefinitionId: pulumi.Input<string>;
    }

    /**
     * The JIT authorization policies.
     */
    export interface JitAuthorizationPoliciesResponse {
        /**
         * The the principal id that will be granted JIT access.
         */
        principalId: pulumi.Input<string>;
        /**
         * The role definition id that will be granted to the Principal.
         */
        roleDefinitionId: pulumi.Input<string>;
    }

    /**
     * Information about JIT request properties
     */
    export interface JitRequestProperties {
        /**
         * The parent application id.
         */
        applicationResourceId: pulumi.Input<string>;
        /**
         * The JIT authorization policies.
         */
        jitAuthorizationPolicies: pulumi.Input<pulumi.Input<inputs.solutions.JitAuthorizationPolicies>[]>;
        /**
         * The JIT request properties.
         */
        jitSchedulingPolicy: pulumi.Input<inputs.solutions.JitSchedulingPolicy>;
    }

    /**
     * Information about JIT request properties
     */
    export interface JitRequestPropertiesResponse {
        /**
         * The parent application id.
         */
        applicationResourceId: pulumi.Input<string>;
        /**
         * The client entity that created the JIT request.
         */
        createdBy: pulumi.Input<inputs.solutions.ApplicationClientDetailsResponse>;
        /**
         * The JIT authorization policies.
         */
        jitAuthorizationPolicies: pulumi.Input<pulumi.Input<inputs.solutions.JitAuthorizationPoliciesResponse>[]>;
        /**
         * The JIT request state.
         */
        jitRequestState: pulumi.Input<string>;
        /**
         * The JIT request properties.
         */
        jitSchedulingPolicy: pulumi.Input<inputs.solutions.JitSchedulingPolicyResponse>;
        /**
         * The JIT request provisioning state.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The publisher tenant id.
         */
        publisherTenantId: pulumi.Input<string>;
        /**
         * The client entity that last updated the JIT request.
         */
        updatedBy: pulumi.Input<inputs.solutions.ApplicationClientDetailsResponse>;
    }

    /**
     * The JIT scheduling policies.
     */
    export interface JitSchedulingPolicy {
        duration: pulumi.Input<string>;
        /**
         * The start time of the request.
         */
        startTime: pulumi.Input<string>;
        /**
         * The type of JIT schedule.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The JIT scheduling policies.
     */
    export interface JitSchedulingPolicyResponse {
        duration: pulumi.Input<string>;
        /**
         * The start time of the request.
         */
        startTime: pulumi.Input<string>;
        /**
         * The type of JIT schedule.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Plan for the managed application.
     */
    export interface Plan {
        /**
         * The plan name.
         */
        name: pulumi.Input<string>;
        /**
         * The product code.
         */
        product: pulumi.Input<string>;
        /**
         * The promotion code.
         */
        promotionCode?: pulumi.Input<string>;
        /**
         * The publisher ID.
         */
        publisher: pulumi.Input<string>;
        /**
         * The plan's version.
         */
        version: pulumi.Input<string>;
    }

    /**
     * Plan for the managed application.
     */
    export interface PlanResponse {
        /**
         * The plan name.
         */
        name: pulumi.Input<string>;
        /**
         * The product code.
         */
        product: pulumi.Input<string>;
        /**
         * The promotion code.
         */
        promotionCode?: pulumi.Input<string>;
        /**
         * The publisher ID.
         */
        publisher: pulumi.Input<string>;
        /**
         * The plan's version.
         */
        version: pulumi.Input<string>;
    }

    /**
     * SKU for the resource.
     */
    export interface Sku {
        /**
         * The SKU capacity.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The SKU family.
         */
        family?: pulumi.Input<string>;
        /**
         * The SKU model.
         */
        model?: pulumi.Input<string>;
        /**
         * The SKU name.
         */
        name: pulumi.Input<string>;
        /**
         * The SKU size.
         */
        size?: pulumi.Input<string>;
        /**
         * The SKU tier.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * SKU for the resource.
     */
    export interface SkuResponse {
        /**
         * The SKU capacity.
         */
        capacity?: pulumi.Input<number>;
        /**
         * The SKU family.
         */
        family?: pulumi.Input<string>;
        /**
         * The SKU model.
         */
        model?: pulumi.Input<string>;
        /**
         * The SKU name.
         */
        name: pulumi.Input<string>;
        /**
         * The SKU size.
         */
        size?: pulumi.Input<string>;
        /**
         * The SKU tier.
         */
        tier?: pulumi.Input<string>;
    }
}

export namespace sql {
    /**
     * Represents the properties of a database.
     */
    export interface DatabaseProperties {
        /**
         * The collation of the database. If createMode is not Default, this value is ignored.
         */
        collation?: pulumi.Input<string>;
        /**
         * Specifies the mode of database creation.
         *
         * Default: regular database creation.
         *
         * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.
         *
         * OnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.
         *
         * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.
         *
         * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.
         *
         * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.
         *
         * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.
         *
         * Copy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.
         */
        createMode?: pulumi.Input<string>;
        /**
         * The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.
         * 
         * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
         * 
         * ```azurecli
         * az sql db list-editions -l <location> -o table
         * ````
         * 
         * ```powershell
         * Get-AzSqlServerServiceObjective -Location <location>
         * ````
         */
        edition?: pulumi.Input<string>;
        /**
         * The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.
         */
        elasticPoolName?: pulumi.Input<string>;
        /**
         * The max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: "Capabilities_ListByLocation."
         */
        maxSizeBytes?: pulumi.Input<string>;
        /**
         * Conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition.
         */
        readScale?: pulumi.Input<string>;
        /**
         * Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.
         */
        recoveryServicesRecoveryPointResourceId?: pulumi.Input<string>;
        /**
         * The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.
         * 
         * The list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.
         */
        requestedServiceObjectiveId?: pulumi.Input<string>;
        /**
         * The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. 
         * 
         * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
         * 
         * ```azurecli
         * az sql db list-editions -l <location> -o table
         * ````
         * 
         * ```powershell
         * Get-AzSqlServerServiceObjective -Location <location>
         * ````
         */
        requestedServiceObjectiveName?: pulumi.Input<string>;
        /**
         * Conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value.
         */
        restorePointInTime?: pulumi.Input<string>;
        /**
         * Indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition.
         */
        sampleName?: pulumi.Input<string>;
        /**
         * Conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted.
         */
        sourceDatabaseDeletionDate?: pulumi.Input<string>;
        /**
         * Conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created.
         */
        sourceDatabaseId?: pulumi.Input<string>;
        /**
         * Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
         */
        zoneRedundant?: pulumi.Input<boolean>;
    }

    /**
     * Represents the properties of a database.
     */
    export interface DatabasePropertiesResponse {
        /**
         * The collation of the database. If createMode is not Default, this value is ignored.
         */
        collation?: pulumi.Input<string>;
        /**
         * The containment state of the database.
         */
        containmentState: pulumi.Input<number>;
        /**
         * Specifies the mode of database creation.
         *
         * Default: regular database creation.
         *
         * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.
         *
         * OnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.
         *
         * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.
         *
         * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.
         *
         * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.
         *
         * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.
         *
         * Copy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.
         */
        createMode?: pulumi.Input<string>;
        /**
         * The creation date of the database (ISO8601 format).
         */
        creationDate: pulumi.Input<string>;
        /**
         * The current service level objective ID of the database. This is the ID of the service level objective that is currently active.
         */
        currentServiceObjectiveId: pulumi.Input<string>;
        /**
         * The ID of the database.
         */
        databaseId: pulumi.Input<string>;
        /**
         * The default secondary region for this database.
         */
        defaultSecondaryLocation: pulumi.Input<string>;
        /**
         * This records the earliest start date and time that restore is available for this database (ISO8601 format).
         */
        earliestRestoreDate: pulumi.Input<string>;
        /**
         * The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.
         * 
         * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
         * 
         * ```azurecli
         * az sql db list-editions -l <location> -o table
         * ````
         * 
         * ```powershell
         * Get-AzSqlServerServiceObjective -Location <location>
         * ````
         */
        edition?: pulumi.Input<string>;
        /**
         * The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.
         */
        elasticPoolName?: pulumi.Input<string>;
        /**
         * The resource identifier of the failover group containing this database.
         */
        failoverGroupId: pulumi.Input<string>;
        /**
         * The max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: "Capabilities_ListByLocation."
         */
        maxSizeBytes?: pulumi.Input<string>;
        /**
         * Conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition.
         */
        readScale?: pulumi.Input<string>;
        /**
         * The recommended indices for this database.
         */
        recommendedIndex: pulumi.Input<pulumi.Input<inputs.sql.RecommendedIndexResponse>[]>;
        /**
         * Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.
         */
        recoveryServicesRecoveryPointResourceId?: pulumi.Input<string>;
        /**
         * The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.
         * 
         * The list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.
         */
        requestedServiceObjectiveId?: pulumi.Input<string>;
        /**
         * The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. 
         * 
         * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
         * 
         * ```azurecli
         * az sql db list-editions -l <location> -o table
         * ````
         * 
         * ```powershell
         * Get-AzSqlServerServiceObjective -Location <location>
         * ````
         */
        requestedServiceObjectiveName?: pulumi.Input<string>;
        /**
         * Conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value.
         */
        restorePointInTime?: pulumi.Input<string>;
        /**
         * Indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition.
         */
        sampleName?: pulumi.Input<string>;
        /**
         * The current service level objective of the database.
         */
        serviceLevelObjective: pulumi.Input<string>;
        /**
         * The list of service tier advisors for this database. Expanded property
         */
        serviceTierAdvisors: pulumi.Input<pulumi.Input<inputs.sql.ServiceTierAdvisorResponse>[]>;
        /**
         * Conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted.
         */
        sourceDatabaseDeletionDate?: pulumi.Input<string>;
        /**
         * Conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created.
         */
        sourceDatabaseId?: pulumi.Input<string>;
        /**
         * The status of the database.
         */
        status: pulumi.Input<string>;
        /**
         * The transparent data encryption info for this database.
         */
        transparentDataEncryption: pulumi.Input<pulumi.Input<inputs.sql.TransparentDataEncryptionResponse>[]>;
        /**
         * Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
         */
        zoneRedundant?: pulumi.Input<boolean>;
    }

    /**
     * Represents the properties of a disaster recovery configuration.
     */
    export interface DisasterRecoveryConfigurationPropertiesResponse {
        /**
         * Whether or not failover can be done automatically.
         */
        autoFailover: pulumi.Input<string>;
        /**
         * How aggressive the automatic failover should be.
         */
        failoverPolicy: pulumi.Input<string>;
        /**
         * Logical name of the server.
         */
        logicalServerName: pulumi.Input<string>;
        /**
         * Logical name of the partner server.
         */
        partnerLogicalServerName: pulumi.Input<string>;
        /**
         * Id of the partner server.
         */
        partnerServerId: pulumi.Input<string>;
        /**
         * The role of the current server in the disaster recovery configuration.
         */
        role: pulumi.Input<string>;
        /**
         * The status of the disaster recovery configuration.
         */
        status: pulumi.Input<string>;
    }

    /**
     * Represents the properties of an elastic pool.
     */
    export interface ElasticPoolProperties {
        /**
         * The maximum DTU any one database can consume.
         */
        databaseDtuMax?: pulumi.Input<number>;
        /**
         * The minimum DTU all databases are guaranteed.
         */
        databaseDtuMin?: pulumi.Input<number>;
        /**
         * The total shared DTU for the database elastic pool.
         */
        dtu?: pulumi.Input<number>;
        /**
         * The edition of the elastic pool.
         */
        edition?: pulumi.Input<string>;
        /**
         * Gets storage limit for the database elastic pool in MB.
         */
        storageMB?: pulumi.Input<number>;
        /**
         * Whether or not this database elastic pool is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
         */
        zoneRedundant?: pulumi.Input<boolean>;
    }

    /**
     * Represents the properties of an elastic pool.
     */
    export interface ElasticPoolPropertiesResponse {
        /**
         * The creation date of the elastic pool (ISO8601 format).
         */
        creationDate: pulumi.Input<string>;
        /**
         * The maximum DTU any one database can consume.
         */
        databaseDtuMax?: pulumi.Input<number>;
        /**
         * The minimum DTU all databases are guaranteed.
         */
        databaseDtuMin?: pulumi.Input<number>;
        /**
         * The total shared DTU for the database elastic pool.
         */
        dtu?: pulumi.Input<number>;
        /**
         * The edition of the elastic pool.
         */
        edition?: pulumi.Input<string>;
        /**
         * The state of the elastic pool.
         */
        state: pulumi.Input<string>;
        /**
         * Gets storage limit for the database elastic pool in MB.
         */
        storageMB?: pulumi.Input<number>;
        /**
         * Whether or not this database elastic pool is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
         */
        zoneRedundant?: pulumi.Input<boolean>;
    }

    /**
     * Represents the properties of a server firewall rule.
     */
    export interface FirewallRuleProperties {
        /**
         * The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value '0.0.0.0' to represent all Azure-internal IP addresses.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' to represent all Azure-internal IP addresses.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * Represents the properties of a server firewall rule.
     */
    export interface FirewallRulePropertiesResponse {
        /**
         * The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value '0.0.0.0' to represent all Azure-internal IP addresses.
         */
        endIpAddress: pulumi.Input<string>;
        /**
         * The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' to represent all Azure-internal IP addresses.
         */
        startIpAddress: pulumi.Input<string>;
    }

    /**
     * The impact of an operation, both in absolute and relative terms.
     */
    export interface OperationImpactResponse {
        /**
         * The absolute impact to dimension.
         */
        changeValueAbsolute: pulumi.Input<number>;
        /**
         * The relative impact to dimension (null if not applicable)
         */
        changeValueRelative: pulumi.Input<number>;
        /**
         * The name of the impact dimension.
         */
        name: pulumi.Input<string>;
        /**
         * The unit in which estimated impact to dimension is measured.
         */
        unit: pulumi.Input<string>;
    }

    /**
     * Represents the properties of a database recommended index.
     */
    export interface RecommendedIndexPropertiesResponse {
        /**
         * The proposed index action. You can create a missing index, drop an unused index, or rebuild an existing index to improve its performance.
         */
        action: pulumi.Input<string>;
        /**
         * Columns over which to build index
         */
        columns: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The UTC datetime showing when this resource was created (ISO8601 format).
         */
        created: pulumi.Input<string>;
        /**
         * The estimated impact of doing recommended index action.
         */
        estimatedImpact: pulumi.Input<pulumi.Input<inputs.sql.OperationImpactResponse>[]>;
        /**
         * The list of column names to be included in the index
         */
        includedColumns: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The full build index script
         */
        indexScript: pulumi.Input<string>;
        /**
         * The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE)
         */
        indexType: pulumi.Input<string>;
        /**
         * The UTC datetime of when was this resource last changed (ISO8601 format).
         */
        lastModified: pulumi.Input<string>;
        /**
         * The values reported after index action is complete.
         */
        reportedImpact: pulumi.Input<pulumi.Input<inputs.sql.OperationImpactResponse>[]>;
        /**
         * The schema where table to build index over resides
         */
        schema: pulumi.Input<string>;
        /**
         * The current recommendation state.
         */
        state: pulumi.Input<string>;
        /**
         * The table on which to build index.
         */
        table: pulumi.Input<string>;
    }

    /**
     * Represents a database recommended index.
     */
    export interface RecommendedIndexResponse {
        /**
         * Resource ID.
         */
        id: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The properties representing the resource.
         */
        properties: pulumi.Input<inputs.sql.RecommendedIndexPropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The properties of an server Administrator.
     */
    export interface ServerAdministratorProperties {
        /**
         * The type of administrator.
         */
        administratorType: pulumi.Input<string>;
        /**
         * The server administrator login value.
         */
        login: pulumi.Input<string>;
        /**
         * The server administrator Sid (Secure ID).
         */
        sid: pulumi.Input<string>;
        /**
         * The server Active Directory Administrator tenant id.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * The properties of an server Administrator.
     */
    export interface ServerAdministratorPropertiesResponse {
        /**
         * The type of administrator.
         */
        administratorType: pulumi.Input<string>;
        /**
         * The server administrator login value.
         */
        login: pulumi.Input<string>;
        /**
         * The server administrator Sid (Secure ID).
         */
        sid: pulumi.Input<string>;
        /**
         * The server Active Directory Administrator tenant id.
         */
        tenantId: pulumi.Input<string>;
    }

    /**
     * The properties of a server communication link.
     */
    export interface ServerCommunicationLinkProperties {
        /**
         * The name of the partner server.
         */
        partnerServer: pulumi.Input<string>;
    }

    /**
     * The properties of a server communication link.
     */
    export interface ServerCommunicationLinkPropertiesResponse {
        /**
         * The name of the partner server.
         */
        partnerServer: pulumi.Input<string>;
        /**
         * The state.
         */
        state: pulumi.Input<string>;
    }

    /**
     * Represents the properties of a server.
     */
    export interface ServerProperties {
        /**
         * Administrator username for the server. Can only be specified when the server is being created (and is required for creation).
         */
        administratorLogin?: pulumi.Input<string>;
        /**
         * The administrator login password (required for server creation).
         */
        administratorLoginPassword?: pulumi.Input<string>;
        /**
         * The version of the server.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Represents the properties of a server.
     */
    export interface ServerPropertiesResponse {
        /**
         * Administrator username for the server. Can only be specified when the server is being created (and is required for creation).
         */
        administratorLogin?: pulumi.Input<string>;
        /**
         * The administrator login password (required for server creation).
         */
        administratorLoginPassword?: pulumi.Input<string>;
        /**
         * The display name of the Azure Active Directory object with admin permissions on this server. Legacy parameter, always null. To check for Active Directory admin, query .../servers/{serverName}/administrators
         */
        externalAdministratorLogin: pulumi.Input<string>;
        /**
         * The ID of the Active Azure Directory object with admin permissions on this server. Legacy parameter, always null. To check for Active Directory admin, query .../servers/{serverName}/administrators.
         */
        externalAdministratorSid: pulumi.Input<string>;
        /**
         * The fully qualified domain name of the server.
         */
        fullyQualifiedDomainName: pulumi.Input<string>;
        /**
         * The state of the server.
         */
        state: pulumi.Input<string>;
        /**
         * The version of the server.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Represents the properties of a Service Tier Advisor.
     */
    export interface ServiceTierAdvisorPropertiesResponse {
        /**
         * The activeTimeRatio for service tier advisor.
         */
        activeTimeRatio: pulumi.Input<number>;
        /**
         * Gets or sets avgDtu for service tier advisor.
         */
        avgDtu: pulumi.Input<number>;
        /**
         * Gets or sets confidence for service tier advisor.
         */
        confidence: pulumi.Input<number>;
        /**
         * Gets or sets currentServiceLevelObjective for service tier advisor.
         */
        currentServiceLevelObjective: pulumi.Input<string>;
        /**
         * Gets or sets currentServiceLevelObjectiveId for service tier advisor.
         */
        currentServiceLevelObjectiveId: pulumi.Input<string>;
        /**
         * Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor.
         */
        databaseSizeBasedRecommendationServiceLevelObjective: pulumi.Input<string>;
        /**
         * Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor.
         */
        databaseSizeBasedRecommendationServiceLevelObjectiveId: pulumi.Input<string>;
        /**
         * Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor.
         */
        disasterPlanBasedRecommendationServiceLevelObjective: pulumi.Input<string>;
        /**
         * Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor.
         */
        disasterPlanBasedRecommendationServiceLevelObjectiveId: pulumi.Input<string>;
        /**
         * Gets or sets maxDtu for service tier advisor.
         */
        maxDtu: pulumi.Input<number>;
        /**
         * Gets or sets maxSizeInGB for service tier advisor.
         */
        maxSizeInGB: pulumi.Input<number>;
        /**
         * Gets or sets minDtu for service tier advisor.
         */
        minDtu: pulumi.Input<number>;
        /**
         * The observation period start (ISO8601 format).
         */
        observationPeriodEnd: pulumi.Input<string>;
        /**
         * The observation period start (ISO8601 format).
         */
        observationPeriodStart: pulumi.Input<string>;
        /**
         * Gets or sets overallRecommendationServiceLevelObjective for service tier advisor.
         */
        overallRecommendationServiceLevelObjective: pulumi.Input<string>;
        /**
         * Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor.
         */
        overallRecommendationServiceLevelObjectiveId: pulumi.Input<string>;
        /**
         * Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor.
         */
        serviceLevelObjectiveUsageMetrics: pulumi.Input<pulumi.Input<inputs.sql.SloUsageMetricResponse>[]>;
        /**
         * Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor.
         */
        usageBasedRecommendationServiceLevelObjective: pulumi.Input<string>;
        /**
         * Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor.
         */
        usageBasedRecommendationServiceLevelObjectiveId: pulumi.Input<string>;
    }

    /**
     * Represents a Service Tier Advisor.
     */
    export interface ServiceTierAdvisorResponse {
        /**
         * Resource ID.
         */
        id: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * The properties representing the resource.
         */
        properties: pulumi.Input<inputs.sql.ServiceTierAdvisorPropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * A Slo Usage Metric.
     */
    export interface SloUsageMetricResponse {
        /**
         * Gets or sets inRangeTimeRatio for SLO usage metric.
         */
        inRangeTimeRatio: pulumi.Input<number>;
        /**
         * The serviceLevelObjective for SLO usage metric.
         */
        serviceLevelObjective: pulumi.Input<string>;
        /**
         * The serviceLevelObjectiveId for SLO usage metric.
         */
        serviceLevelObjectiveId: pulumi.Input<string>;
    }

    /**
     * Represents the properties of a database transparent data encryption.
     */
    export interface TransparentDataEncryptionPropertiesResponse {
        /**
         * The status of the database transparent data encryption.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * Represents a database transparent data encryption configuration.
     */
    export interface TransparentDataEncryptionResponse {
        /**
         * Resource ID.
         */
        id: pulumi.Input<string>;
        /**
         * Resource location.
         */
        location: pulumi.Input<string>;
        /**
         * Resource name.
         */
        name: pulumi.Input<string>;
        /**
         * Represents the properties of the resource.
         */
        properties?: pulumi.Input<inputs.sql.TransparentDataEncryptionPropertiesResponse>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }
}

export namespace storage {
    /**
     * Settings properties for Active Directory (AD).
     */
    export interface ActiveDirectoryProperties {
        /**
         * Specifies the security identifier (SID) for Azure Storage.
         */
        azureStorageSid: pulumi.Input<string>;
        /**
         * Specifies the domain GUID.
         */
        domainGuid: pulumi.Input<string>;
        /**
         * Specifies the primary domain that the AD DNS server is authoritative for.
         */
        domainName: pulumi.Input<string>;
        /**
         * Specifies the security identifier (SID).
         */
        domainSid: pulumi.Input<string>;
        /**
         * Specifies the Active Directory forest to get.
         */
        forestName: pulumi.Input<string>;
        /**
         * Specifies the NetBIOS domain name.
         */
        netBiosDomainName: pulumi.Input<string>;
    }

    /**
     * Settings properties for Active Directory (AD).
     */
    export interface ActiveDirectoryPropertiesResponse {
        /**
         * Specifies the security identifier (SID) for Azure Storage.
         */
        azureStorageSid: pulumi.Input<string>;
        /**
         * Specifies the domain GUID.
         */
        domainGuid: pulumi.Input<string>;
        /**
         * Specifies the primary domain that the AD DNS server is authoritative for.
         */
        domainName: pulumi.Input<string>;
        /**
         * Specifies the security identifier (SID).
         */
        domainSid: pulumi.Input<string>;
        /**
         * Specifies the Active Directory forest to get.
         */
        forestName: pulumi.Input<string>;
        /**
         * Specifies the NetBIOS domain name.
         */
        netBiosDomainName: pulumi.Input<string>;
    }

    /**
     * Settings for Azure Files identity based authentication.
     */
    export interface AzureFilesIdentityBasedAuthentication {
        /**
         * Required if choose AD.
         */
        activeDirectoryProperties?: pulumi.Input<inputs.storage.ActiveDirectoryProperties>;
        /**
         * Indicates the directory service used.
         */
        directoryServiceOptions: pulumi.Input<string>;
    }

    /**
     * Settings for Azure Files identity based authentication.
     */
    export interface AzureFilesIdentityBasedAuthenticationResponse {
        /**
         * Required if choose AD.
         */
        activeDirectoryProperties?: pulumi.Input<inputs.storage.ActiveDirectoryPropertiesResponse>;
        /**
         * Indicates the directory service used.
         */
        directoryServiceOptions: pulumi.Input<string>;
    }

    /**
     * Blob restore parameters
     */
    export interface BlobRestoreParametersResponse {
        /**
         * Blob ranges to restore.
         */
        blobRanges: pulumi.Input<pulumi.Input<inputs.storage.BlobRestoreRangeResponse>[]>;
        /**
         * Restore blob to the specified time.
         */
        timeToRestore: pulumi.Input<string>;
    }

    /**
     * Blob range
     */
    export interface BlobRestoreRangeResponse {
        /**
         * Blob end range. This is exclusive. Empty means account end.
         */
        endRange: pulumi.Input<string>;
        /**
         * Blob start range. This is inclusive. Empty means account start.
         */
        startRange: pulumi.Input<string>;
    }

    /**
     * Blob restore status.
     */
    export interface BlobRestoreStatusResponse {
        /**
         * Failure reason when blob restore is failed.
         */
        failureReason: pulumi.Input<string>;
        /**
         * Blob restore request parameters.
         */
        parameters: pulumi.Input<inputs.storage.BlobRestoreParametersResponse>;
        /**
         * Id for tracking blob restore request.
         */
        restoreId: pulumi.Input<string>;
        /**
         * The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.
         */
        status: pulumi.Input<string>;
    }

    /**
     * The properties of a container.
     */
    export interface ContainerProperties {
        /**
         * Default the container to use specified encryption scope for all writes.
         */
        defaultEncryptionScope?: pulumi.Input<string>;
        /**
         * Block override of encryption scope from the container default.
         */
        denyEncryptionScopeOverride?: pulumi.Input<boolean>;
        /**
         * A name-value pair to associate with the container as metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies whether data in the container may be accessed publicly and the level of access.
         */
        publicAccess?: pulumi.Input<string>;
    }

    /**
     * The properties of a container.
     */
    export interface ContainerPropertiesResponse {
        /**
         * Default the container to use specified encryption scope for all writes.
         */
        defaultEncryptionScope?: pulumi.Input<string>;
        /**
         * Indicates whether the blob container was deleted.
         */
        deleted: pulumi.Input<boolean>;
        /**
         * Blob container deletion time.
         */
        deletedTime: pulumi.Input<string>;
        /**
         * Block override of encryption scope from the container default.
         */
        denyEncryptionScopeOverride?: pulumi.Input<boolean>;
        /**
         * The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.
         */
        hasImmutabilityPolicy: pulumi.Input<boolean>;
        /**
         * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
         */
        hasLegalHold: pulumi.Input<boolean>;
        /**
         * The ImmutabilityPolicy property of the container.
         */
        immutabilityPolicy: pulumi.Input<inputs.storage.ImmutabilityPolicyPropertiesResponse>;
        /**
         * Returns the date and time the container was last modified.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.
         */
        leaseDuration: pulumi.Input<string>;
        /**
         * Lease state of the container.
         */
        leaseState: pulumi.Input<string>;
        /**
         * The lease status of the container.
         */
        leaseStatus: pulumi.Input<string>;
        /**
         * The LegalHold property of the container.
         */
        legalHold: pulumi.Input<inputs.storage.LegalHoldPropertiesResponse>;
        /**
         * A name-value pair to associate with the container as metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies whether data in the container may be accessed publicly and the level of access.
         */
        publicAccess?: pulumi.Input<string>;
        /**
         * Remaining retention days for soft deleted blob container.
         */
        remainingRetentionDays: pulumi.Input<number>;
        /**
         * The version of the deleted blob container.
         */
        version: pulumi.Input<string>;
    }

    /**
     * The custom domain assigned to this storage account. This can be set via Update.
     */
    export interface CustomDomain {
        /**
         * Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
         */
        name: pulumi.Input<string>;
        /**
         * Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
         */
        useSubDomainName?: pulumi.Input<boolean>;
    }

    /**
     * The custom domain assigned to this storage account. This can be set via Update.
     */
    export interface CustomDomainResponse {
        /**
         * Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
         */
        name: pulumi.Input<string>;
        /**
         * Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
         */
        useSubDomainName?: pulumi.Input<boolean>;
    }

    /**
     * Object to define the number of days after creation.
     */
    export interface DateAfterCreation {
        /**
         * Value indicating the age in days after creation
         */
        daysAfterCreationGreaterThan: pulumi.Input<number>;
    }

    /**
     * Object to define the number of days after creation.
     */
    export interface DateAfterCreationResponse {
        /**
         * Value indicating the age in days after creation
         */
        daysAfterCreationGreaterThan: pulumi.Input<number>;
    }

    /**
     * Object to define the number of days after last modification.
     */
    export interface DateAfterModification {
        /**
         * Value indicating the age in days after last modification
         */
        daysAfterModificationGreaterThan: pulumi.Input<number>;
    }

    /**
     * Object to define the number of days after last modification.
     */
    export interface DateAfterModificationResponse {
        /**
         * Value indicating the age in days after last modification
         */
        daysAfterModificationGreaterThan: pulumi.Input<number>;
    }

    /**
     * The encryption settings on the storage account.
     */
    export interface Encryption {
        /**
         * The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
         */
        keySource: pulumi.Input<string>;
        /**
         * Properties provided by key vault.
         */
        keyvaultproperties?: pulumi.Input<inputs.storage.KeyVaultProperties>;
        /**
         * A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
         */
        requireInfrastructureEncryption?: pulumi.Input<boolean>;
        /**
         * List of services which support encryption.
         */
        services?: pulumi.Input<inputs.storage.EncryptionServices>;
    }

    /**
     * The encryption settings on the storage account.
     */
    export interface EncryptionResponse {
        /**
         * The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
         */
        keySource: pulumi.Input<string>;
        /**
         * Properties provided by key vault.
         */
        keyvaultproperties?: pulumi.Input<inputs.storage.KeyVaultPropertiesResponse>;
        /**
         * A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
         */
        requireInfrastructureEncryption?: pulumi.Input<boolean>;
        /**
         * List of services which support encryption.
         */
        services?: pulumi.Input<inputs.storage.EncryptionServicesResponse>;
    }

    /**
     * A service that allows server-side encryption to be used.
     */
    export interface EncryptionService {
        /**
         * A boolean indicating whether or not the service encrypts the data as it is stored.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
         */
        keyType?: pulumi.Input<string>;
    }

    /**
     * A service that allows server-side encryption to be used.
     */
    export interface EncryptionServiceResponse {
        /**
         * A boolean indicating whether or not the service encrypts the data as it is stored.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
         */
        keyType?: pulumi.Input<string>;
        /**
         * Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
         */
        lastEnabledTime: pulumi.Input<string>;
    }

    /**
     * A list of services that support encryption.
     */
    export interface EncryptionServices {
        /**
         * The encryption function of the blob storage service.
         */
        blob?: pulumi.Input<inputs.storage.EncryptionService>;
        /**
         * The encryption function of the file storage service.
         */
        file?: pulumi.Input<inputs.storage.EncryptionService>;
        /**
         * The encryption function of the queue storage service.
         */
        queue?: pulumi.Input<inputs.storage.EncryptionService>;
        /**
         * The encryption function of the table storage service.
         */
        table?: pulumi.Input<inputs.storage.EncryptionService>;
    }

    /**
     * A list of services that support encryption.
     */
    export interface EncryptionServicesResponse {
        /**
         * The encryption function of the blob storage service.
         */
        blob?: pulumi.Input<inputs.storage.EncryptionServiceResponse>;
        /**
         * The encryption function of the file storage service.
         */
        file?: pulumi.Input<inputs.storage.EncryptionServiceResponse>;
        /**
         * The encryption function of the queue storage service.
         */
        queue?: pulumi.Input<inputs.storage.EncryptionServiceResponse>;
        /**
         * The encryption function of the table storage service.
         */
        table?: pulumi.Input<inputs.storage.EncryptionServiceResponse>;
    }

    /**
     * The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
     */
    export interface EndpointsResponse {
        /**
         * Gets the blob endpoint.
         */
        blob: pulumi.Input<string>;
        /**
         * Gets the dfs endpoint.
         */
        dfs: pulumi.Input<string>;
        /**
         * Gets the file endpoint.
         */
        file: pulumi.Input<string>;
        /**
         * Gets the internet routing storage endpoints
         */
        internetEndpoints?: pulumi.Input<inputs.storage.StorageAccountInternetEndpointsResponse>;
        /**
         * Gets the microsoft routing storage endpoints.
         */
        microsoftEndpoints?: pulumi.Input<inputs.storage.StorageAccountMicrosoftEndpointsResponse>;
        /**
         * Gets the queue endpoint.
         */
        queue: pulumi.Input<string>;
        /**
         * Gets the table endpoint.
         */
        table: pulumi.Input<string>;
        /**
         * Gets the web endpoint.
         */
        web: pulumi.Input<string>;
    }

    /**
     * The properties of the file share.
     */
    export interface FileShareProperties {
        /**
         * Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.
         */
        accessTier?: pulumi.Input<string>;
        /**
         * The authentication protocol that is used for the file share. Can only be specified when creating a share.
         */
        enabledProtocols?: pulumi.Input<string>;
        /**
         * A name-value pair to associate with the share as metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The property is for NFS share only. The default is NoRootSquash.
         */
        rootSquash?: pulumi.Input<string>;
        /**
         * The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.
         */
        shareQuota?: pulumi.Input<number>;
    }

    /**
     * The properties of the file share.
     */
    export interface FileSharePropertiesResponse {
        /**
         * Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.
         */
        accessTier?: pulumi.Input<string>;
        /**
         * Indicates the last modification time for share access tier.
         */
        accessTierChangeTime: pulumi.Input<string>;
        /**
         * Indicates if there is a pending transition for access tier.
         */
        accessTierStatus: pulumi.Input<string>;
        /**
         * Indicates whether the share was deleted.
         */
        deleted: pulumi.Input<boolean>;
        /**
         * The deleted time if the share was deleted.
         */
        deletedTime: pulumi.Input<string>;
        /**
         * The authentication protocol that is used for the file share. Can only be specified when creating a share.
         */
        enabledProtocols?: pulumi.Input<string>;
        /**
         * Returns the date and time the share was last modified.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * A name-value pair to associate with the share as metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Remaining retention days for share that was soft deleted.
         */
        remainingRetentionDays: pulumi.Input<number>;
        /**
         * The property is for NFS share only. The default is NoRootSquash.
         */
        rootSquash?: pulumi.Input<string>;
        /**
         * The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.
         */
        shareQuota?: pulumi.Input<number>;
        /**
         * The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.
         */
        shareUsageBytes: pulumi.Input<number>;
        /**
         * The version of the share.
         */
        version: pulumi.Input<string>;
    }

    /**
     * Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
     */
    export interface GeoReplicationStatsResponse {
        /**
         * A boolean flag which indicates whether or not account failover is supported for the account.
         */
        canFailover: pulumi.Input<boolean>;
        /**
         * All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
         */
        lastSyncTime: pulumi.Input<string>;
        /**
         * The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
         */
        status: pulumi.Input<string>;
    }

    /**
     * IP rule with specific IP or IP range in CIDR format.
     */
    export interface IPRule {
        /**
         * The action of IP ACL rule.
         */
        action?: pulumi.Input<string>;
        /**
         * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
         */
        value: pulumi.Input<string>;
    }

    /**
     * IP rule with specific IP or IP range in CIDR format.
     */
    export interface IPRuleResponse {
        /**
         * The action of IP ACL rule.
         */
        action?: pulumi.Input<string>;
        /**
         * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Identity for the resource.
     */
    export interface Identity {
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Identity for the resource.
     */
    export interface IdentityResponse {
        /**
         * The principal ID of resource identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant ID of resource.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The identity type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The properties of an ImmutabilityPolicy of a blob container.
     */
    export interface ImmutabilityPolicyPropertiesResponse {
        /**
         * ImmutabilityPolicy Etag.
         */
        etag: pulumi.Input<string>;
        /**
         * The properties of an ImmutabilityPolicy of a blob container.
         */
        properties?: pulumi.Input<inputs.storage.ImmutabilityPolicyPropertyResponse>;
        /**
         * The ImmutabilityPolicy update history of the blob container.
         */
        updateHistory: pulumi.Input<pulumi.Input<inputs.storage.UpdateHistoryPropertyResponse>[]>;
    }

    /**
     * The properties of an ImmutabilityPolicy of a blob container.
     */
    export interface ImmutabilityPolicyProperty {
        /**
         * This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
         */
        allowProtectedAppendWrites?: pulumi.Input<boolean>;
        /**
         * The immutability period for the blobs in the container since the policy creation, in days.
         */
        immutabilityPeriodSinceCreationInDays?: pulumi.Input<number>;
    }

    /**
     * The properties of an ImmutabilityPolicy of a blob container.
     */
    export interface ImmutabilityPolicyPropertyResponse {
        /**
         * This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
         */
        allowProtectedAppendWrites?: pulumi.Input<boolean>;
        /**
         * The immutability period for the blobs in the container since the policy creation, in days.
         */
        immutabilityPeriodSinceCreationInDays?: pulumi.Input<number>;
        /**
         * The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
         */
        state: pulumi.Input<string>;
    }

    /**
     * Properties of key vault.
     */
    export interface KeyVaultProperties {
        /**
         * The name of KeyVault key.
         */
        keyname?: pulumi.Input<string>;
        /**
         * The Uri of KeyVault.
         */
        keyvaulturi?: pulumi.Input<string>;
        /**
         * The version of KeyVault key.
         */
        keyversion?: pulumi.Input<string>;
    }

    /**
     * Properties of key vault.
     */
    export interface KeyVaultPropertiesResponse {
        /**
         * The object identifier of the current versioned Key Vault Key in use.
         */
        currentVersionedKeyIdentifier: pulumi.Input<string>;
        /**
         * The name of KeyVault key.
         */
        keyname?: pulumi.Input<string>;
        /**
         * The Uri of KeyVault.
         */
        keyvaulturi?: pulumi.Input<string>;
        /**
         * The version of KeyVault key.
         */
        keyversion?: pulumi.Input<string>;
        /**
         * Timestamp of last rotation of the Key Vault Key.
         */
        lastKeyRotationTimestamp: pulumi.Input<string>;
    }

    /**
     * The LegalHold property of a blob container.
     */
    export interface LegalHoldPropertiesResponse {
        /**
         * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
         */
        hasLegalHold: pulumi.Input<boolean>;
        /**
         * The list of LegalHold tags of a blob container.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.storage.TagPropertyResponse>[]>;
    }

    /**
     * Actions are applied to the filtered blobs when the execution condition is met.
     */
    export interface ManagementPolicyAction {
        /**
         * The management policy action for base blob
         */
        baseBlob?: pulumi.Input<inputs.storage.ManagementPolicyBaseBlob>;
        /**
         * The management policy action for snapshot
         */
        snapshot?: pulumi.Input<inputs.storage.ManagementPolicySnapShot>;
    }

    /**
     * Actions are applied to the filtered blobs when the execution condition is met.
     */
    export interface ManagementPolicyActionResponse {
        /**
         * The management policy action for base blob
         */
        baseBlob?: pulumi.Input<inputs.storage.ManagementPolicyBaseBlobResponse>;
        /**
         * The management policy action for snapshot
         */
        snapshot?: pulumi.Input<inputs.storage.ManagementPolicySnapShotResponse>;
    }

    /**
     * Management policy action for base blob.
     */
    export interface ManagementPolicyBaseBlob {
        /**
         * The function to delete the blob
         */
        delete?: pulumi.Input<inputs.storage.DateAfterModification>;
        /**
         * The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
         */
        tierToArchive?: pulumi.Input<inputs.storage.DateAfterModification>;
        /**
         * The function to tier blobs to cool storage. Support blobs currently at Hot tier
         */
        tierToCool?: pulumi.Input<inputs.storage.DateAfterModification>;
    }

    /**
     * Management policy action for base blob.
     */
    export interface ManagementPolicyBaseBlobResponse {
        /**
         * The function to delete the blob
         */
        delete?: pulumi.Input<inputs.storage.DateAfterModificationResponse>;
        /**
         * The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
         */
        tierToArchive?: pulumi.Input<inputs.storage.DateAfterModificationResponse>;
        /**
         * The function to tier blobs to cool storage. Support blobs currently at Hot tier
         */
        tierToCool?: pulumi.Input<inputs.storage.DateAfterModificationResponse>;
    }

    /**
     * An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
     */
    export interface ManagementPolicyDefinition {
        /**
         * An object that defines the action set.
         */
        actions: pulumi.Input<inputs.storage.ManagementPolicyAction>;
        /**
         * An object that defines the filter set.
         */
        filters?: pulumi.Input<inputs.storage.ManagementPolicyFilter>;
    }

    /**
     * An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
     */
    export interface ManagementPolicyDefinitionResponse {
        /**
         * An object that defines the action set.
         */
        actions: pulumi.Input<inputs.storage.ManagementPolicyActionResponse>;
        /**
         * An object that defines the filter set.
         */
        filters?: pulumi.Input<inputs.storage.ManagementPolicyFilterResponse>;
    }

    /**
     * Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. 
     */
    export interface ManagementPolicyFilter {
        /**
         * An array of blob index tag based filters, there can be at most 10 tag filters
         */
        blobIndexMatch?: pulumi.Input<pulumi.Input<inputs.storage.TagFilter>[]>;
        /**
         * An array of predefined enum values. Only blockBlob is supported.
         */
        blobTypes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An array of strings for prefixes to be match.
         */
        prefixMatch?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. 
     */
    export interface ManagementPolicyFilterResponse {
        /**
         * An array of blob index tag based filters, there can be at most 10 tag filters
         */
        blobIndexMatch?: pulumi.Input<pulumi.Input<inputs.storage.TagFilterResponse>[]>;
        /**
         * An array of predefined enum values. Only blockBlob is supported.
         */
        blobTypes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An array of strings for prefixes to be match.
         */
        prefixMatch?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The Storage Account ManagementPolicy properties.
     */
    export interface ManagementPolicyProperties {
        /**
         * The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
         */
        policy: pulumi.Input<inputs.storage.ManagementPolicySchema>;
    }

    /**
     * The Storage Account ManagementPolicy properties.
     */
    export interface ManagementPolicyPropertiesResponse {
        /**
         * Returns the date and time the ManagementPolicies was last modified.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
         */
        policy: pulumi.Input<inputs.storage.ManagementPolicySchemaResponse>;
    }

    /**
     * An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
     */
    export interface ManagementPolicyRule {
        /**
         * An object that defines the Lifecycle rule.
         */
        definition: pulumi.Input<inputs.storage.ManagementPolicyDefinition>;
        /**
         * Rule is enabled if set to true.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
         */
        name: pulumi.Input<string>;
        /**
         * The valid value is Lifecycle
         */
        type: pulumi.Input<string>;
    }

    /**
     * An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
     */
    export interface ManagementPolicyRuleResponse {
        /**
         * An object that defines the Lifecycle rule.
         */
        definition: pulumi.Input<inputs.storage.ManagementPolicyDefinitionResponse>;
        /**
         * Rule is enabled if set to true.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
         */
        name: pulumi.Input<string>;
        /**
         * The valid value is Lifecycle
         */
        type: pulumi.Input<string>;
    }

    /**
     * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
     */
    export interface ManagementPolicySchema {
        /**
         * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
         */
        rules: pulumi.Input<pulumi.Input<inputs.storage.ManagementPolicyRule>[]>;
    }

    /**
     * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
     */
    export interface ManagementPolicySchemaResponse {
        /**
         * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
         */
        rules: pulumi.Input<pulumi.Input<inputs.storage.ManagementPolicyRuleResponse>[]>;
    }

    /**
     * Management policy action for snapshot.
     */
    export interface ManagementPolicySnapShot {
        /**
         * The function to delete the blob snapshot
         */
        delete?: pulumi.Input<inputs.storage.DateAfterCreation>;
    }

    /**
     * Management policy action for snapshot.
     */
    export interface ManagementPolicySnapShotResponse {
        /**
         * The function to delete the blob snapshot
         */
        delete?: pulumi.Input<inputs.storage.DateAfterCreationResponse>;
    }

    /**
     * Network rule set
     */
    export interface NetworkRuleSet {
        /**
         * Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
         */
        bypass?: pulumi.Input<string>;
        /**
         * Specifies the default action of allow or deny when no other rules match.
         */
        defaultAction: pulumi.Input<string>;
        /**
         * Sets the IP ACL rules
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.storage.IPRule>[]>;
        /**
         * Sets the virtual network rules
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.storage.VirtualNetworkRule>[]>;
    }

    /**
     * Network rule set
     */
    export interface NetworkRuleSetResponse {
        /**
         * Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
         */
        bypass?: pulumi.Input<string>;
        /**
         * Specifies the default action of allow or deny when no other rules match.
         */
        defaultAction: pulumi.Input<string>;
        /**
         * Sets the IP ACL rules
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.storage.IPRuleResponse>[]>;
        /**
         * Sets the virtual network rules
         */
        virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.storage.VirtualNetworkRuleResponse>[]>;
    }

    /**
     * Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
     */
    export interface ObjectReplicationPolicyFilter {
        /**
         * Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
         */
        minCreationTime?: pulumi.Input<string>;
        /**
         * Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
         */
        prefixMatch?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
     */
    export interface ObjectReplicationPolicyFilterResponse {
        /**
         * Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
         */
        minCreationTime?: pulumi.Input<string>;
        /**
         * Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
         */
        prefixMatch?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The Storage Account ObjectReplicationPolicy properties.
     */
    export interface ObjectReplicationPolicyProperties {
        /**
         * Required. Destination account name.
         */
        destinationAccount: pulumi.Input<string>;
        /**
         * The storage account object replication rules.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.storage.ObjectReplicationPolicyRule>[]>;
        /**
         * Required. Source account name.
         */
        sourceAccount: pulumi.Input<string>;
    }

    /**
     * The Storage Account ObjectReplicationPolicy properties.
     */
    export interface ObjectReplicationPolicyPropertiesResponse {
        /**
         * Required. Destination account name.
         */
        destinationAccount: pulumi.Input<string>;
        /**
         * Indicates when the policy is enabled on the source account.
         */
        enabledTime: pulumi.Input<string>;
        /**
         * A unique id for object replication policy.
         */
        policyId: pulumi.Input<string>;
        /**
         * The storage account object replication rules.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.storage.ObjectReplicationPolicyRuleResponse>[]>;
        /**
         * Required. Source account name.
         */
        sourceAccount: pulumi.Input<string>;
    }

    /**
     * The replication policy rule between two containers.
     */
    export interface ObjectReplicationPolicyRule {
        /**
         * Required. Destination container name.
         */
        destinationContainer: pulumi.Input<string>;
        /**
         * Optional. An object that defines the filter set.
         */
        filters?: pulumi.Input<inputs.storage.ObjectReplicationPolicyFilter>;
        /**
         * Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.
         */
        ruleId?: pulumi.Input<string>;
        /**
         * Required. Source container name.
         */
        sourceContainer: pulumi.Input<string>;
    }

    /**
     * The replication policy rule between two containers.
     */
    export interface ObjectReplicationPolicyRuleResponse {
        /**
         * Required. Destination container name.
         */
        destinationContainer: pulumi.Input<string>;
        /**
         * Optional. An object that defines the filter set.
         */
        filters?: pulumi.Input<inputs.storage.ObjectReplicationPolicyFilterResponse>;
        /**
         * Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.
         */
        ruleId?: pulumi.Input<string>;
        /**
         * Required. Source container name.
         */
        sourceContainer: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpoint {
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.storage.PrivateEndpoint>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.storage.PrivateLinkServiceConnectionState>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.storage.PrivateEndpointResponse>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.storage.PrivateLinkServiceConnectionStateResponse>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint Connection resource.
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
         */
        id: pulumi.Input<string>;
        /**
         * The name of the resource
         */
        name: pulumi.Input<string>;
        /**
         * Resource properties.
         */
        properties?: pulumi.Input<inputs.storage.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpointResponse {
        /**
         * The ARM identifier for Private Endpoint
         */
        id: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    export interface QueueProperties {
        /**
         * A name-value pair that represents queue metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    export interface QueuePropertiesResponse {
        /**
         * Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.
         */
        approximateMessageCount: pulumi.Input<number>;
        /**
         * A name-value pair that represents queue metadata.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
     */
    export interface RoutingPreference {
        /**
         * A boolean flag which indicates whether internet routing storage endpoints are to be published
         */
        publishInternetEndpoints?: pulumi.Input<boolean>;
        /**
         * A boolean flag which indicates whether microsoft routing storage endpoints are to be published
         */
        publishMicrosoftEndpoints?: pulumi.Input<boolean>;
        /**
         * Routing Choice defines the kind of network routing opted by the user.
         */
        routingChoice?: pulumi.Input<string>;
    }

    /**
     * Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
     */
    export interface RoutingPreferenceResponse {
        /**
         * A boolean flag which indicates whether internet routing storage endpoints are to be published
         */
        publishInternetEndpoints?: pulumi.Input<boolean>;
        /**
         * A boolean flag which indicates whether microsoft routing storage endpoints are to be published
         */
        publishMicrosoftEndpoints?: pulumi.Input<boolean>;
        /**
         * Routing Choice defines the kind of network routing opted by the user.
         */
        routingChoice?: pulumi.Input<string>;
    }

    /**
     * The SKU of the storage account.
     */
    export interface Sku {
        /**
         * The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
         */
        name: pulumi.Input<string>;
        /**
         * The SKU tier. This is based on the SKU name.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The SKU of the storage account.
     */
    export interface SkuResponse {
        /**
         * The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
         */
        name: pulumi.Input<string>;
        /**
         * The SKU tier. This is based on the SKU name.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.
     */
    export interface StorageAccountInternetEndpointsResponse {
        /**
         * Gets the blob endpoint.
         */
        blob: pulumi.Input<string>;
        /**
         * Gets the dfs endpoint.
         */
        dfs: pulumi.Input<string>;
        /**
         * Gets the file endpoint.
         */
        file: pulumi.Input<string>;
        /**
         * Gets the web endpoint.
         */
        web: pulumi.Input<string>;
    }

    /**
     * The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint.
     */
    export interface StorageAccountMicrosoftEndpointsResponse {
        /**
         * Gets the blob endpoint.
         */
        blob: pulumi.Input<string>;
        /**
         * Gets the dfs endpoint.
         */
        dfs: pulumi.Input<string>;
        /**
         * Gets the file endpoint.
         */
        file: pulumi.Input<string>;
        /**
         * Gets the queue endpoint.
         */
        queue: pulumi.Input<string>;
        /**
         * Gets the table endpoint.
         */
        table: pulumi.Input<string>;
        /**
         * Gets the web endpoint.
         */
        web: pulumi.Input<string>;
    }

    /**
     * The parameters used to create the storage account.
     */
    export interface StorageAccountPropertiesCreateParameters {
        /**
         * Required for storage accounts where kind = BlobStorage. The access tier used for billing.
         */
        accessTier?: pulumi.Input<string>;
        /**
         * Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.
         */
        allowBlobPublicAccess?: pulumi.Input<boolean>;
        /**
         * Provides the identity based authentication settings for Azure Files.
         */
        azureFilesIdentityBasedAuthentication?: pulumi.Input<inputs.storage.AzureFilesIdentityBasedAuthentication>;
        /**
         * User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
         */
        customDomain?: pulumi.Input<inputs.storage.CustomDomain>;
        /**
         * Not applicable. Azure Storage encryption is enabled for all storage accounts and cannot be disabled.
         */
        encryption?: pulumi.Input<inputs.storage.Encryption>;
        /**
         * Account HierarchicalNamespace enabled if sets to true.
         */
        isHnsEnabled?: pulumi.Input<boolean>;
        /**
         * Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
         */
        largeFileSharesState?: pulumi.Input<string>;
        /**
         * Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
         */
        minimumTlsVersion?: pulumi.Input<string>;
        /**
         * Network rule set
         */
        networkAcls?: pulumi.Input<inputs.storage.NetworkRuleSet>;
        /**
         * Maintains information about the network routing choice opted by the user for data transfer
         */
        routingPreference?: pulumi.Input<inputs.storage.RoutingPreference>;
        /**
         * Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.
         */
        supportsHttpsTrafficOnly?: pulumi.Input<boolean>;
    }

    /**
     * Properties of the storage account.
     */
    export interface StorageAccountPropertiesResponse {
        /**
         * Required for storage accounts where kind = BlobStorage. The access tier used for billing.
         */
        accessTier: pulumi.Input<string>;
        /**
         * Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.
         */
        allowBlobPublicAccess?: pulumi.Input<boolean>;
        /**
         * Provides the identity based authentication settings for Azure Files.
         */
        azureFilesIdentityBasedAuthentication?: pulumi.Input<inputs.storage.AzureFilesIdentityBasedAuthenticationResponse>;
        /**
         * Blob restore status
         */
        blobRestoreStatus: pulumi.Input<inputs.storage.BlobRestoreStatusResponse>;
        /**
         * Gets the creation date and time of the storage account in UTC.
         */
        creationTime: pulumi.Input<string>;
        /**
         * Gets the custom domain the user assigned to this storage account.
         */
        customDomain: pulumi.Input<inputs.storage.CustomDomainResponse>;
        /**
         * Gets the encryption settings on the account. If unspecified, the account is unencrypted.
         */
        encryption: pulumi.Input<inputs.storage.EncryptionResponse>;
        /**
         * If the failover is in progress, the value will be true, otherwise, it will be null.
         */
        failoverInProgress: pulumi.Input<boolean>;
        /**
         * Geo Replication Stats
         */
        geoReplicationStats: pulumi.Input<inputs.storage.GeoReplicationStatsResponse>;
        /**
         * Account HierarchicalNamespace enabled if sets to true.
         */
        isHnsEnabled?: pulumi.Input<boolean>;
        /**
         * Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
         */
        largeFileSharesState?: pulumi.Input<string>;
        /**
         * Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
         */
        lastGeoFailoverTime: pulumi.Input<string>;
        /**
         * Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
         */
        minimumTlsVersion?: pulumi.Input<string>;
        /**
         * Network rule set
         */
        networkAcls: pulumi.Input<inputs.storage.NetworkRuleSetResponse>;
        /**
         * Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
         */
        primaryEndpoints: pulumi.Input<inputs.storage.EndpointsResponse>;
        /**
         * Gets the location of the primary data center for the storage account.
         */
        primaryLocation: pulumi.Input<string>;
        /**
         * List of private endpoint connection associated with the specified storage account
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.storage.PrivateEndpointConnectionResponse>[]>;
        /**
         * Gets the status of the storage account at the time the operation was called.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Maintains information about the network routing choice opted by the user for data transfer
         */
        routingPreference?: pulumi.Input<inputs.storage.RoutingPreferenceResponse>;
        /**
         * Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.
         */
        secondaryEndpoints: pulumi.Input<inputs.storage.EndpointsResponse>;
        /**
         * Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
         */
        secondaryLocation: pulumi.Input<string>;
        /**
         * Gets the status indicating whether the primary location of the storage account is available or unavailable.
         */
        statusOfPrimary: pulumi.Input<string>;
        /**
         * Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
         */
        statusOfSecondary: pulumi.Input<string>;
        /**
         * Allows https traffic only to storage service if sets to true.
         */
        supportsHttpsTrafficOnly?: pulumi.Input<boolean>;
    }

    export interface TablePropertiesResponse {
        /**
         * Table name under the specified account
         */
        tableName: pulumi.Input<string>;
    }

    /**
     * Blob index tag based filtering for blob objects
     */
    export interface TagFilter {
        /**
         * This is the filter tag name, it can have 1 - 128 characters
         */
        name: pulumi.Input<string>;
        /**
         * This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
         */
        op: pulumi.Input<string>;
        /**
         * This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
         */
        value: pulumi.Input<string>;
    }

    /**
     * Blob index tag based filtering for blob objects
     */
    export interface TagFilterResponse {
        /**
         * This is the filter tag name, it can have 1 - 128 characters
         */
        name: pulumi.Input<string>;
        /**
         * This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
         */
        op: pulumi.Input<string>;
        /**
         * This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
         */
        value: pulumi.Input<string>;
    }

    /**
     * A tag of the LegalHold of a blob container.
     */
    export interface TagPropertyResponse {
        /**
         * Returns the Object ID of the user who added the tag.
         */
        objectIdentifier: pulumi.Input<string>;
        /**
         * The tag value.
         */
        tag: pulumi.Input<string>;
        /**
         * Returns the Tenant ID that issued the token for the user who added the tag.
         */
        tenantId: pulumi.Input<string>;
        /**
         * Returns the date and time the tag was added.
         */
        timestamp: pulumi.Input<string>;
        /**
         * Returns the User Principal Name of the user who added the tag.
         */
        upn: pulumi.Input<string>;
    }

    /**
     * An update history of the ImmutabilityPolicy of a blob container.
     */
    export interface UpdateHistoryPropertyResponse {
        /**
         * The immutability period for the blobs in the container since the policy creation, in days.
         */
        immutabilityPeriodSinceCreationInDays: pulumi.Input<number>;
        /**
         * Returns the Object ID of the user who updated the ImmutabilityPolicy.
         */
        objectIdentifier: pulumi.Input<string>;
        /**
         * Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
         */
        tenantId: pulumi.Input<string>;
        /**
         * Returns the date and time the ImmutabilityPolicy was updated.
         */
        timestamp: pulumi.Input<string>;
        /**
         * The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
         */
        update: pulumi.Input<string>;
        /**
         * Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
         */
        upn: pulumi.Input<string>;
    }

    /**
     * Virtual Network rule.
     */
    export interface VirtualNetworkRule {
        /**
         * The action of virtual network rule.
         */
        action?: pulumi.Input<string>;
        /**
         * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
         */
        id: pulumi.Input<string>;
        /**
         * Gets the state of virtual network rule.
         */
        state?: pulumi.Input<string>;
    }

    /**
     * Virtual Network rule.
     */
    export interface VirtualNetworkRuleResponse {
        /**
         * The action of virtual network rule.
         */
        action?: pulumi.Input<string>;
        /**
         * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
         */
        id: pulumi.Input<string>;
        /**
         * Gets the state of virtual network rule.
         */
        state?: pulumi.Input<string>;
    }
}

export namespace storagecache {
    /**
     * Cache encryption settings.
     */
    export interface CacheEncryptionSettings {
        /**
         * Specifies the location of the key encryption key in Key Vault.
         */
        keyEncryptionKey?: pulumi.Input<inputs.storagecache.KeyVaultKeyReference>;
    }

    /**
     * Cache encryption settings.
     */
    export interface CacheEncryptionSettingsResponse {
        /**
         * Specifies the location of the key encryption key in Key Vault.
         */
        keyEncryptionKey?: pulumi.Input<inputs.storagecache.KeyVaultKeyReferenceResponse>;
    }

    /**
     * An indication of Cache health. Gives more information about health than just that related to provisioning.
     */
    export interface CacheHealthResponse {
        /**
         * List of Cache health states.
         */
        state?: pulumi.Input<string>;
        /**
         * Describes explanation of state.
         */
        statusDescription?: pulumi.Input<string>;
    }

    /**
     * Cache identity properties.
     */
    export interface CacheIdentity {
        /**
         * The type of identity used for the cache
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Cache identity properties.
     */
    export interface CacheIdentityResponse {
        /**
         * The principal id of the cache.
         */
        principalId: pulumi.Input<string>;
        /**
         * The tenant id associated with the cache.
         */
        tenantId: pulumi.Input<string>;
        /**
         * The type of identity used for the cache
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Cache network settings.
     */
    export interface CacheNetworkSettings {
        /**
         * The IPv4 maximum transmission unit configured for the subnet.
         */
        mtu?: pulumi.Input<number>;
    }

    /**
     * Cache network settings.
     */
    export interface CacheNetworkSettingsResponse {
        /**
         * The IPv4 maximum transmission unit configured for the subnet.
         */
        mtu?: pulumi.Input<number>;
        /**
         * Array of additional IP addresses used by this Cache.
         */
        utilityAddresses: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of the Cache.
     */
    export interface CacheProperties {
        /**
         * The size of this Cache, in GB.
         */
        cacheSizeGB?: pulumi.Input<number>;
        /**
         * Specifies encryption settings of the cache.
         */
        encryptionSettings?: pulumi.Input<inputs.storagecache.CacheEncryptionSettings>;
        /**
         * Specifies network settings of the cache.
         */
        networkSettings?: pulumi.Input<inputs.storagecache.CacheNetworkSettings>;
        /**
         * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Specifies security settings of the cache.
         */
        securitySettings?: pulumi.Input<inputs.storagecache.CacheSecuritySettings>;
        /**
         * Subnet used for the Cache.
         */
        subnet?: pulumi.Input<string>;
        /**
         * Upgrade status of the Cache.
         */
        upgradeStatus?: pulumi.Input<inputs.storagecache.CacheUpgradeStatus>;
    }

    /**
     * Properties of the Cache.
     */
    export interface CacheResponseProperties {
        /**
         * The size of this Cache, in GB.
         */
        cacheSizeGB?: pulumi.Input<number>;
        /**
         * Specifies encryption settings of the cache.
         */
        encryptionSettings?: pulumi.Input<inputs.storagecache.CacheEncryptionSettingsResponse>;
        /**
         * Health of the Cache.
         */
        health: pulumi.Input<inputs.storagecache.CacheHealthResponse>;
        /**
         * Array of IP addresses that can be used by clients mounting this Cache.
         */
        mountAddresses: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies network settings of the cache.
         */
        networkSettings?: pulumi.Input<inputs.storagecache.CacheNetworkSettingsResponse>;
        /**
         * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Specifies security settings of the cache.
         */
        securitySettings?: pulumi.Input<inputs.storagecache.CacheSecuritySettingsResponse>;
        /**
         * Subnet used for the Cache.
         */
        subnet?: pulumi.Input<string>;
        /**
         * Upgrade status of the Cache.
         */
        upgradeStatus?: pulumi.Input<inputs.storagecache.CacheUpgradeStatusResponse>;
    }

    /**
     * Cache security settings.
     */
    export interface CacheSecuritySettings {
        /**
         * root squash of cache property.
         */
        rootSquash?: pulumi.Input<boolean>;
    }

    /**
     * Cache security settings.
     */
    export interface CacheSecuritySettingsResponse {
        /**
         * root squash of cache property.
         */
        rootSquash?: pulumi.Input<boolean>;
    }

    /**
     * Properties describing the software upgrade state of the Cache.
     */
    export interface CacheUpgradeStatus {
    }

    /**
     * Properties describing the software upgrade state of the Cache.
     */
    export interface CacheUpgradeStatusResponse {
        /**
         * Version string of the firmware currently installed on this Cache.
         */
        currentFirmwareVersion: pulumi.Input<string>;
        /**
         * Time at which the pending firmware update will automatically be installed on the Cache.
         */
        firmwareUpdateDeadline: pulumi.Input<string>;
        /**
         * True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
         */
        firmwareUpdateStatus: pulumi.Input<string>;
        /**
         * Time of the last successful firmware update.
         */
        lastFirmwareUpdate: pulumi.Input<string>;
        /**
         * When firmwareUpdateAvailable is true, this field holds the version string for the update.
         */
        pendingFirmwareVersion: pulumi.Input<string>;
    }

    /**
     * Properties pertained to ClfsTarget
     */
    export interface ClfsTarget {
        /**
         * Resource ID of storage container.
         */
        target?: pulumi.Input<string>;
    }

    /**
     * Properties pertained to ClfsTarget
     */
    export interface ClfsTargetResponse {
        /**
         * Resource ID of storage container.
         */
        target?: pulumi.Input<string>;
    }

    /**
     * Describes a reference to Key Vault Key.
     */
    export interface KeyVaultKeyReference {
        /**
         * The URL referencing a key encryption key in Key Vault.
         */
        keyUrl: pulumi.Input<string>;
        /**
         * Describes a resource Id to source Key Vault.
         */
        sourceVault: pulumi.Input<inputs.storagecache.KeyVaultKeyReferenceProperties>;
    }

    /**
     * Describes a resource Id to source Key Vault.
     */
    export interface KeyVaultKeyReferenceProperties {
        /**
         * Resource Id.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Describes a reference to Key Vault Key.
     */
    export interface KeyVaultKeyReferenceResponse {
        /**
         * The URL referencing a key encryption key in Key Vault.
         */
        keyUrl: pulumi.Input<string>;
        /**
         * Describes a resource Id to source Key Vault.
         */
        sourceVault: pulumi.Input<inputs.storagecache.KeyVaultKeyReferenceResponseProperties>;
    }

    /**
     * Describes a resource Id to source Key Vault.
     */
    export interface KeyVaultKeyReferenceResponseProperties {
        /**
         * Resource Id.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * A namespace junction.
     */
    export interface NamespaceJunction {
        /**
         * Namespace path on a Cache for a Storage Target.
         */
        namespacePath?: pulumi.Input<string>;
        /**
         * NFS export where targetPath exists.
         */
        nfsExport?: pulumi.Input<string>;
        /**
         * Path in Storage Target to which namespacePath points.
         */
        targetPath?: pulumi.Input<string>;
    }

    /**
     * A namespace junction.
     */
    export interface NamespaceJunctionResponse {
        /**
         * Namespace path on a Cache for a Storage Target.
         */
        namespacePath?: pulumi.Input<string>;
        /**
         * NFS export where targetPath exists.
         */
        nfsExport?: pulumi.Input<string>;
        /**
         * Path in Storage Target to which namespacePath points.
         */
        targetPath?: pulumi.Input<string>;
    }

    /**
     * Properties pertained to Nfs3Target
     */
    export interface Nfs3Target {
        /**
         * IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
         */
        target?: pulumi.Input<string>;
        /**
         * Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
         */
        usageModel?: pulumi.Input<string>;
    }

    /**
     * Properties pertained to Nfs3Target
     */
    export interface Nfs3TargetResponse {
        /**
         * IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
         */
        target?: pulumi.Input<string>;
        /**
         * Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
         */
        usageModel?: pulumi.Input<string>;
    }

    /**
     * Properties of the Storage Target.
     */
    export interface StorageTargetProperties {
        /**
         * Properties when targetType is clfs.
         */
        clfs?: pulumi.Input<inputs.storagecache.ClfsTarget>;
        /**
         * List of Cache namespace junctions to target for namespace associations.
         */
        junctions?: pulumi.Input<pulumi.Input<inputs.storagecache.NamespaceJunction>[]>;
        /**
         * Properties when targetType is nfs3.
         */
        nfs3?: pulumi.Input<inputs.storagecache.Nfs3Target>;
        /**
         * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Type of the Storage Target.
         */
        targetBaseType: pulumi.Input<string>;
        /**
         * Type of the Storage Target.
         */
        targetType?: pulumi.Input<string>;
        /**
         * Properties when targetType is unknown.
         */
        unknown?: pulumi.Input<inputs.storagecache.UnknownTarget>;
    }

    /**
     * Properties of the Storage Target.
     */
    export interface StorageTargetPropertiesResponse {
        /**
         * Properties when targetType is clfs.
         */
        clfs?: pulumi.Input<inputs.storagecache.ClfsTargetResponse>;
        /**
         * List of Cache namespace junctions to target for namespace associations.
         */
        junctions?: pulumi.Input<pulumi.Input<inputs.storagecache.NamespaceJunctionResponse>[]>;
        /**
         * Properties when targetType is nfs3.
         */
        nfs3?: pulumi.Input<inputs.storagecache.Nfs3TargetResponse>;
        /**
         * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Type of the Storage Target.
         */
        targetBaseType: pulumi.Input<string>;
        /**
         * Type of the Storage Target.
         */
        targetType?: pulumi.Input<string>;
        /**
         * Properties when targetType is unknown.
         */
        unknown?: pulumi.Input<inputs.storagecache.UnknownTargetResponse>;
    }

    /**
     * Properties of an unknown type of Storage Target.
     */
    export interface UnknownProperties {
    }

    /**
     * Properties of an unknown type of Storage Target.
     */
    export interface UnknownPropertiesResponse {
    }

    /**
     * Properties pertained to UnknownTarget
     */
    export interface UnknownTarget {
        /**
         * Dictionary of string->string pairs containing information about the Storage Target.
         */
        unknownMap?: pulumi.Input<inputs.storagecache.UnknownProperties>;
    }

    /**
     * Properties pertained to UnknownTarget
     */
    export interface UnknownTargetResponse {
        /**
         * Dictionary of string->string pairs containing information about the Storage Target.
         */
        unknownMap?: pulumi.Input<inputs.storagecache.UnknownPropertiesResponse>;
    }
}

export namespace storagesync {
    /**
     * CloudEndpoint Properties object.
     */
    export interface CloudEndpointCreateParametersProperties {
        /**
         * Azure file share name
         */
        azureFileShareName?: pulumi.Input<string>;
        /**
         * Friendly Name
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * Storage Account Resource Id
         */
        storageAccountResourceId?: pulumi.Input<string>;
        /**
         * Storage Account Tenant Id
         */
        storageAccountTenantId?: pulumi.Input<string>;
    }

    /**
     * CloudEndpoint Properties object.
     */
    export interface CloudEndpointPropertiesResponse {
        /**
         * Azure file share name
         */
        azureFileShareName?: pulumi.Input<string>;
        /**
         * Backup Enabled
         */
        backupEnabled: pulumi.Input<string>;
        /**
         * Friendly Name
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * Resource Last Operation Name
         */
        lastOperationName?: pulumi.Input<string>;
        /**
         * CloudEndpoint lastWorkflowId
         */
        lastWorkflowId?: pulumi.Input<string>;
        /**
         * Partnership Id
         */
        partnershipId?: pulumi.Input<string>;
        /**
         * CloudEndpoint Provisioning State
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Storage Account Resource Id
         */
        storageAccountResourceId?: pulumi.Input<string>;
        /**
         * Storage Account Tenant Id
         */
        storageAccountTenantId?: pulumi.Input<string>;
    }

    /**
     * Server endpoint cloud tiering status object.
     */
    export interface CloudTieringCachePerformanceResponse {
        /**
         * Count of bytes that were served from the local server
         */
        cacheHitBytes: pulumi.Input<number>;
        /**
         * Percentage of total bytes (hit + miss) that were served from the local server
         */
        cacheHitBytesPercent: pulumi.Input<number>;
        /**
         * Count of bytes that were served from the cloud
         */
        cacheMissBytes: pulumi.Input<number>;
        /**
         * Last updated timestamp
         */
        lastUpdatedTimestamp: pulumi.Input<string>;
    }

    /**
     * Status of the date policy
     */
    export interface CloudTieringDatePolicyStatusResponse {
        /**
         * Last updated timestamp
         */
        lastUpdatedTimestamp: pulumi.Input<string>;
        /**
         * Most recent access time of tiered files
         */
        tieredFilesMostRecentAccessTimestamp: pulumi.Input<string>;
    }

    /**
     * Server endpoint cloud tiering status object.
     */
    export interface CloudTieringFilesNotTieringResponse {
        /**
         * Array of tiering errors
         */
        errors: pulumi.Input<pulumi.Input<inputs.storagesync.FilesNotTieringErrorResponse>[]>;
        /**
         * Last updated timestamp
         */
        lastUpdatedTimestamp: pulumi.Input<string>;
        /**
         * Last cloud tiering result (HResult)
         */
        totalFileCount: pulumi.Input<number>;
    }

    /**
     * Server endpoint cloud tiering status object.
     */
    export interface CloudTieringSpaceSavingsResponse {
        /**
         * Cached content size on the server
         */
        cachedSizeBytes: pulumi.Input<number>;
        /**
         * Last updated timestamp
         */
        lastUpdatedTimestamp: pulumi.Input<string>;
        /**
         * Count of bytes saved on the server
         */
        spaceSavingsBytes: pulumi.Input<number>;
        /**
         * Percentage of cached size over total size
         */
        spaceSavingsPercent: pulumi.Input<number>;
        /**
         * Total size of content in the azure file share
         */
        totalSizeCloudBytes: pulumi.Input<number>;
        /**
         * Volume size
         */
        volumeSizeBytes: pulumi.Input<number>;
    }

    /**
     * Status of the volume free space policy
     */
    export interface CloudTieringVolumeFreeSpacePolicyStatusResponse {
        /**
         * Current volume free space percentage.
         */
        currentVolumeFreeSpacePercent: pulumi.Input<number>;
        /**
         * In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.
         */
        effectiveVolumeFreeSpacePolicy: pulumi.Input<number>;
        /**
         * Last updated timestamp
         */
        lastUpdatedTimestamp: pulumi.Input<string>;
    }

    /**
     * Files not tiering error object
     */
    export interface FilesNotTieringErrorResponse {
        /**
         * Error code (HResult)
         */
        errorCode: pulumi.Input<number>;
        /**
         * Count of files with this error
         */
        fileCount: pulumi.Input<number>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpoint {
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionProperties {
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.storagesync.PrivateEndpoint>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.storagesync.PrivateLinkServiceConnectionState>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * Properties of the PrivateEndpointConnectProperties.
     */
    export interface PrivateEndpointConnectionPropertiesResponse {
        /**
         * The resource of private end point.
         */
        privateEndpoint?: pulumi.Input<inputs.storagesync.PrivateEndpointResponse>;
        /**
         * A collection of information about the state of the connection between service consumer and provider.
         */
        privateLinkServiceConnectionState: pulumi.Input<inputs.storagesync.PrivateLinkServiceConnectionStateResponse>;
        /**
         * The provisioning state of the private endpoint connection resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint Connection resource.
     */
    export interface PrivateEndpointConnectionResponse {
        /**
         * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
         */
        id: pulumi.Input<string>;
        /**
         * The name of the resource
         */
        name: pulumi.Input<string>;
        /**
         * Resource properties.
         */
        properties?: pulumi.Input<inputs.storagesync.PrivateEndpointConnectionPropertiesResponse>;
        /**
         * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The Private Endpoint resource.
     */
    export interface PrivateEndpointResponse {
        /**
         * The ARM identifier for Private Endpoint
         */
        id: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionState {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    export interface PrivateLinkServiceConnectionStateResponse {
        /**
         * A message indicating if changes on the service provider require any updates on the consumer.
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * The reason for approval/rejection of the connection.
         */
        description?: pulumi.Input<string>;
        /**
         * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         */
        status?: pulumi.Input<string>;
    }

    /**
     * RegisteredServer Create Properties object.
     */
    export interface RegisteredServerCreateParametersProperties {
        /**
         * Registered Server Agent Version
         */
        agentVersion?: pulumi.Input<string>;
        /**
         * Registered Server clusterId
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Registered Server clusterName
         */
        clusterName?: pulumi.Input<string>;
        /**
         * Friendly Name
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * Registered Server last heart beat
         */
        lastHeartBeat?: pulumi.Input<string>;
        /**
         * Registered Server Certificate
         */
        serverCertificate?: pulumi.Input<string>;
        /**
         * Registered Server serverId
         */
        serverId?: pulumi.Input<string>;
        /**
         * Registered Server OS Version
         */
        serverOSVersion?: pulumi.Input<string>;
        /**
         * Registered Server serverRole
         */
        serverRole?: pulumi.Input<string>;
    }

    /**
     * RegisteredServer Properties object.
     */
    export interface RegisteredServerPropertiesResponse {
        /**
         * Registered Server Agent Version
         */
        agentVersion?: pulumi.Input<string>;
        /**
         * Registered Server clusterId
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Registered Server clusterName
         */
        clusterName?: pulumi.Input<string>;
        /**
         * Resource discoveryEndpointUri
         */
        discoveryEndpointUri?: pulumi.Input<string>;
        /**
         * Friendly Name
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * Registered Server last heart beat
         */
        lastHeartBeat?: pulumi.Input<string>;
        /**
         * Resource Last Operation Name
         */
        lastOperationName?: pulumi.Input<string>;
        /**
         * Registered Server lastWorkflowId
         */
        lastWorkflowId?: pulumi.Input<string>;
        /**
         * Management Endpoint Uri
         */
        managementEndpointUri?: pulumi.Input<string>;
        /**
         * Monitoring Configuration
         */
        monitoringConfiguration?: pulumi.Input<string>;
        /**
         * Telemetry Endpoint Uri
         */
        monitoringEndpointUri?: pulumi.Input<string>;
        /**
         * Registered Server Provisioning State
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Resource Location
         */
        resourceLocation?: pulumi.Input<string>;
        /**
         * Registered Server Certificate
         */
        serverCertificate?: pulumi.Input<string>;
        /**
         * Registered Server serverId
         */
        serverId?: pulumi.Input<string>;
        /**
         * Registered Server Management Error Code
         */
        serverManagementErrorCode?: pulumi.Input<number>;
        /**
         * Registered Server OS Version
         */
        serverOSVersion?: pulumi.Input<string>;
        /**
         * Registered Server serverRole
         */
        serverRole?: pulumi.Input<string>;
        /**
         * Service Location
         */
        serviceLocation?: pulumi.Input<string>;
        /**
         * Registered Server storageSyncServiceUid
         */
        storageSyncServiceUid?: pulumi.Input<string>;
    }

    /**
     * Server endpoint cloud tiering status object.
     */
    export interface ServerEndpointCloudTieringStatusResponse {
        /**
         * Information regarding how well the local cache on the server is performing.
         */
        cachePerformance: pulumi.Input<inputs.storagesync.CloudTieringCachePerformanceResponse>;
        /**
         * Status of the date policy
         */
        datePolicyStatus: pulumi.Input<inputs.storagesync.CloudTieringDatePolicyStatusResponse>;
        /**
         * Information regarding files that failed to be tiered
         */
        filesNotTiering: pulumi.Input<inputs.storagesync.CloudTieringFilesNotTieringResponse>;
        /**
         * Cloud tiering health state.
         */
        health: pulumi.Input<string>;
        /**
         * The last updated timestamp of health state
         */
        healthLastUpdatedTimestamp: pulumi.Input<string>;
        /**
         * Last cloud tiering result (HResult)
         */
        lastCloudTieringResult: pulumi.Input<number>;
        /**
         * Last cloud tiering success timestamp
         */
        lastSuccessTimestamp: pulumi.Input<string>;
        /**
         * Last updated timestamp
         */
        lastUpdatedTimestamp: pulumi.Input<string>;
        /**
         * Information regarding how much local space cloud tiering is saving.
         */
        spaceSavings: pulumi.Input<inputs.storagesync.CloudTieringSpaceSavingsResponse>;
        /**
         * Status of the volume free space policy
         */
        volumeFreeSpacePolicyStatus: pulumi.Input<inputs.storagesync.CloudTieringVolumeFreeSpacePolicyStatusResponse>;
    }

    /**
     * ServerEndpoint Properties object.
     */
    export interface ServerEndpointCreateParametersProperties {
        /**
         * Cloud Tiering.
         */
        cloudTiering?: pulumi.Input<string>;
        /**
         * Friendly Name
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * Policy for how namespace and files are recalled during FastDr.
         */
        initialDownloadPolicy?: pulumi.Input<string>;
        /**
         * Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
         */
        localCacheMode?: pulumi.Input<string>;
        /**
         * Offline data transfer
         */
        offlineDataTransfer?: pulumi.Input<string>;
        /**
         * Offline data transfer share name
         */
        offlineDataTransferShareName?: pulumi.Input<string>;
        /**
         * Server Local path.
         */
        serverLocalPath?: pulumi.Input<string>;
        /**
         * Server Resource Id.
         */
        serverResourceId?: pulumi.Input<string>;
        /**
         * Tier files older than days.
         */
        tierFilesOlderThanDays?: pulumi.Input<number>;
        /**
         * Level of free space to be maintained by Cloud Tiering if it is enabled.
         */
        volumeFreeSpacePercent?: pulumi.Input<number>;
    }

    /**
     * Files not syncing error object
     */
    export interface ServerEndpointFilesNotSyncingErrorResponse {
        /**
         * Error code (HResult)
         */
        errorCode: pulumi.Input<number>;
        /**
         * Count of persistent files not syncing with the specified error code
         */
        persistentCount: pulumi.Input<number>;
        /**
         * Count of transient files not syncing with the specified error code
         */
        transientCount: pulumi.Input<number>;
    }

    /**
     * ServerEndpoint Properties object.
     */
    export interface ServerEndpointPropertiesResponse {
        /**
         * Cloud Tiering.
         */
        cloudTiering?: pulumi.Input<string>;
        /**
         * Cloud tiering status. Only populated if cloud tiering is enabled.
         */
        cloudTieringStatus: pulumi.Input<inputs.storagesync.ServerEndpointCloudTieringStatusResponse>;
        /**
         * Friendly Name
         */
        friendlyName?: pulumi.Input<string>;
        /**
         * Policy for how namespace and files are recalled during FastDr.
         */
        initialDownloadPolicy?: pulumi.Input<string>;
        /**
         * Resource Last Operation Name
         */
        lastOperationName: pulumi.Input<string>;
        /**
         * ServerEndpoint lastWorkflowId
         */
        lastWorkflowId: pulumi.Input<string>;
        /**
         * Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
         */
        localCacheMode?: pulumi.Input<string>;
        /**
         * Offline data transfer
         */
        offlineDataTransfer?: pulumi.Input<string>;
        /**
         * Offline data transfer share name
         */
        offlineDataTransferShareName?: pulumi.Input<string>;
        /**
         * Offline data transfer storage account resource ID
         */
        offlineDataTransferStorageAccountResourceId: pulumi.Input<string>;
        /**
         * Offline data transfer storage account tenant ID
         */
        offlineDataTransferStorageAccountTenantId: pulumi.Input<string>;
        /**
         * ServerEndpoint Provisioning State
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Recall status. Only populated if cloud tiering is enabled.
         */
        recallStatus: pulumi.Input<inputs.storagesync.ServerEndpointRecallStatusResponse>;
        /**
         * Server Local path.
         */
        serverLocalPath?: pulumi.Input<string>;
        /**
         * Server Resource Id.
         */
        serverResourceId?: pulumi.Input<string>;
        /**
         * Server Endpoint sync status
         */
        syncStatus: pulumi.Input<inputs.storagesync.ServerEndpointSyncStatusResponse>;
        /**
         * Tier files older than days.
         */
        tierFilesOlderThanDays?: pulumi.Input<number>;
        /**
         * Level of free space to be maintained by Cloud Tiering if it is enabled.
         */
        volumeFreeSpacePercent?: pulumi.Input<number>;
    }

    /**
     * Server endpoint recall error object
     */
    export interface ServerEndpointRecallErrorResponse {
        /**
         * Count of occurences of the error
         */
        count: pulumi.Input<number>;
        /**
         * Error code (HResult)
         */
        errorCode: pulumi.Input<number>;
    }

    /**
     * Server endpoint recall status object.
     */
    export interface ServerEndpointRecallStatusResponse {
        /**
         * Last updated timestamp
         */
        lastUpdatedTimestamp: pulumi.Input<string>;
        /**
         * Array of recall errors
         */
        recallErrors: pulumi.Input<pulumi.Input<inputs.storagesync.ServerEndpointRecallErrorResponse>[]>;
        /**
         * Total count of recall errors.
         */
        totalRecallErrorsCount: pulumi.Input<number>;
    }

    /**
     * Sync Session status object.
     */
    export interface ServerEndpointSyncActivityStatusResponse {
        /**
         * Applied bytes
         */
        appliedBytes: pulumi.Input<number>;
        /**
         * Applied item count.
         */
        appliedItemCount: pulumi.Input<number>;
        /**
         * Per item error count
         */
        perItemErrorCount: pulumi.Input<number>;
        /**
         * Timestamp when properties were updated
         */
        timestamp: pulumi.Input<string>;
        /**
         * Total bytes (if available)
         */
        totalBytes: pulumi.Input<number>;
        /**
         * Total item count (if available)
         */
        totalItemCount: pulumi.Input<number>;
    }

    /**
     * Sync Session status object.
     */
    export interface ServerEndpointSyncSessionStatusResponse {
        /**
         * Array of per-item errors coming from the last sync session.
         */
        filesNotSyncingErrors: pulumi.Input<pulumi.Input<inputs.storagesync.ServerEndpointFilesNotSyncingErrorResponse>[]>;
        /**
         * Last sync per item error count.
         */
        lastSyncPerItemErrorCount: pulumi.Input<number>;
        /**
         * Last sync result (HResult)
         */
        lastSyncResult: pulumi.Input<number>;
        /**
         * Last sync success timestamp
         */
        lastSyncSuccessTimestamp: pulumi.Input<string>;
        /**
         * Last sync timestamp
         */
        lastSyncTimestamp: pulumi.Input<string>;
        /**
         * Count of persistent files not syncing.
         */
        persistentFilesNotSyncingCount: pulumi.Input<number>;
        /**
         * Count of transient files not syncing.
         */
        transientFilesNotSyncingCount: pulumi.Input<number>;
    }

    /**
     * Server Endpoint sync status
     */
    export interface ServerEndpointSyncStatusResponse {
        /**
         * Combined Health Status.
         */
        combinedHealth: pulumi.Input<string>;
        /**
         * Download sync activity
         */
        downloadActivity: pulumi.Input<inputs.storagesync.ServerEndpointSyncActivityStatusResponse>;
        /**
         * Download Health Status.
         */
        downloadHealth: pulumi.Input<string>;
        /**
         * Download Status
         */
        downloadStatus: pulumi.Input<inputs.storagesync.ServerEndpointSyncSessionStatusResponse>;
        /**
         * Last Updated Timestamp
         */
        lastUpdatedTimestamp: pulumi.Input<string>;
        /**
         * Offline Data Transfer State
         */
        offlineDataTransferStatus: pulumi.Input<string>;
        /**
         * Sync activity
         */
        syncActivity: pulumi.Input<string>;
        /**
         * Total count of persistent files not syncing (combined upload + download).
         */
        totalPersistentFilesNotSyncingCount: pulumi.Input<number>;
        /**
         * Upload sync activity
         */
        uploadActivity: pulumi.Input<inputs.storagesync.ServerEndpointSyncActivityStatusResponse>;
        /**
         * Upload Health Status.
         */
        uploadHealth: pulumi.Input<string>;
        /**
         * Upload Status
         */
        uploadStatus: pulumi.Input<inputs.storagesync.ServerEndpointSyncSessionStatusResponse>;
    }

    /**
     * StorageSyncService Properties object.
     */
    export interface StorageSyncServiceCreateParametersProperties {
        /**
         * Incoming Traffic Policy
         */
        incomingTrafficPolicy?: pulumi.Input<string>;
    }

    /**
     * Storage Sync Service Properties object.
     */
    export interface StorageSyncServicePropertiesResponse {
        /**
         * Incoming Traffic Policy
         */
        incomingTrafficPolicy?: pulumi.Input<string>;
        /**
         * Resource Last Operation Name
         */
        lastOperationName: pulumi.Input<string>;
        /**
         * StorageSyncService lastWorkflowId
         */
        lastWorkflowId: pulumi.Input<string>;
        /**
         * List of private endpoint connection associated with the specified storage sync service
         */
        privateEndpointConnections: pulumi.Input<pulumi.Input<inputs.storagesync.PrivateEndpointConnectionResponse>[]>;
        /**
         * StorageSyncService Provisioning State
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Storage Sync service status.
         */
        storageSyncServiceStatus: pulumi.Input<number>;
        /**
         * Storage Sync service Uid
         */
        storageSyncServiceUid: pulumi.Input<string>;
    }

    /**
     * Sync Group Create Properties object.
     */
    export interface SyncGroupCreateParametersProperties {
    }

    /**
     * SyncGroup Properties object.
     */
    export interface SyncGroupPropertiesResponse {
        /**
         * Sync group status
         */
        syncGroupStatus: pulumi.Input<string>;
        /**
         * Unique Id
         */
        uniqueId: pulumi.Input<string>;
    }
}

export namespace storsimple {
    /**
     * The properties of access control record.
     */
    export interface AccessControlRecordProperties {
        /**
         * The iSCSI initiator name (IQN).
         */
        initiatorName: pulumi.Input<string>;
    }

    /**
     * The properties of access control record.
     */
    export interface AccessControlRecordPropertiesResponse {
        /**
         * The iSCSI initiator name (IQN).
         */
        initiatorName: pulumi.Input<string>;
        /**
         * The number of volumes using the access control record.
         */
        volumeCount: pulumi.Input<number>;
    }

    /**
     * Represent the secrets intended for encryption with asymmetric key pair.
     */
    export interface AsymmetricEncryptedSecret {
        /**
         * The algorithm used to encrypt "Value".
         */
        encryptionAlgorithm: pulumi.Input<string>;
        /**
         * Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
         */
        encryptionCertThumbprint?: pulumi.Input<string>;
        /**
         * The value of the secret.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Represent the secrets intended for encryption with asymmetric key pair.
     */
    export interface AsymmetricEncryptedSecretResponse {
        /**
         * The algorithm used to encrypt "Value".
         */
        encryptionAlgorithm: pulumi.Input<string>;
        /**
         * Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
         */
        encryptionCertThumbprint?: pulumi.Input<string>;
        /**
         * The value of the secret.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The properties of the backup policy.
     */
    export interface BackupPolicyProperties {
        /**
         * The path IDs of the volumes which are part of the backup policy.
         */
        volumeIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The properties of the backup policy.
     */
    export interface BackupPolicyPropertiesResponse {
        /**
         * The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
         */
        backupPolicyCreationType: pulumi.Input<string>;
        /**
         * The time of the last backup for the backup policy.
         */
        lastBackupTime: pulumi.Input<string>;
        /**
         * The time of the next backup for the backup policy.
         */
        nextBackupTime: pulumi.Input<string>;
        /**
         * Indicates whether at least one of the schedules in the backup policy is active or not.
         */
        scheduledBackupStatus: pulumi.Input<string>;
        /**
         * The count of schedules the backup policy contains.
         */
        schedulesCount: pulumi.Input<number>;
        /**
         * If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
         */
        ssmHostName: pulumi.Input<string>;
        /**
         * The path IDs of the volumes which are part of the backup policy.
         */
        volumeIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The Backup Schedule Group Properties
     */
    export interface BackupScheduleGroupProperties {
        /**
         * The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
         */
        startTime: pulumi.Input<inputs.storsimple.Time>;
    }

    /**
     * The Backup Schedule Group Properties
     */
    export interface BackupScheduleGroupPropertiesResponse {
        /**
         * The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
         */
        startTime: pulumi.Input<inputs.storsimple.TimeResponse>;
    }

    /**
     * The properties of the backup schedule.
     */
    export interface BackupScheduleProperties {
        /**
         * The type of backup which needs to be taken.
         */
        backupType: pulumi.Input<string>;
        /**
         * The number of backups to be retained.
         */
        retentionCount: pulumi.Input<number>;
        /**
         * The schedule recurrence.
         */
        scheduleRecurrence: pulumi.Input<inputs.storsimple.ScheduleRecurrence>;
        /**
         * The schedule status.
         */
        scheduleStatus: pulumi.Input<string>;
        /**
         * The start time of the schedule.
         */
        startTime: pulumi.Input<string>;
    }

    /**
     * The properties of the backup schedule.
     */
    export interface BackupSchedulePropertiesResponse {
        /**
         * The type of backup which needs to be taken.
         */
        backupType: pulumi.Input<string>;
        /**
         * The last successful backup run which was triggered for the schedule.
         */
        lastSuccessfulRun: pulumi.Input<string>;
        /**
         * The number of backups to be retained.
         */
        retentionCount: pulumi.Input<number>;
        /**
         * The schedule recurrence.
         */
        scheduleRecurrence: pulumi.Input<inputs.storsimple.ScheduleRecurrenceResponse>;
        /**
         * The schedule status.
         */
        scheduleStatus: pulumi.Input<string>;
        /**
         * The start time of the schedule.
         */
        startTime: pulumi.Input<string>;
    }

    /**
     * The properties of the bandwidth setting.
     */
    export interface BandwidthRateSettingProperties {
        /**
         * The schedules.
         */
        schedules: pulumi.Input<pulumi.Input<inputs.storsimple.BandwidthSchedule>[]>;
    }

    /**
     * The properties of the bandwidth setting.
     */
    export interface BandwidthRateSettingPropertiesResponse {
        /**
         * The schedules.
         */
        schedules: pulumi.Input<pulumi.Input<inputs.storsimple.BandwidthScheduleResponse>[]>;
        /**
         * The number of volumes that uses the bandwidth setting.
         */
        volumeCount: pulumi.Input<number>;
    }

    /**
     * The schedule for bandwidth setting.
     */
    export interface BandwidthSchedule {
        /**
         * The days of the week when this schedule is applicable.
         */
        days: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The rate in Mbps.
         */
        rateInMbps: pulumi.Input<number>;
        /**
         * The start time of the schedule.
         */
        start: pulumi.Input<inputs.storsimple.Time>;
        /**
         * The stop time of the schedule.
         */
        stop: pulumi.Input<inputs.storsimple.Time>;
    }

    /**
     * The schedule for bandwidth setting.
     */
    export interface BandwidthScheduleResponse {
        /**
         * The days of the week when this schedule is applicable.
         */
        days: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The rate in Mbps.
         */
        rateInMbps: pulumi.Input<number>;
        /**
         * The start time of the schedule.
         */
        start: pulumi.Input<inputs.storsimple.TimeResponse>;
        /**
         * The stop time of the schedule.
         */
        stop: pulumi.Input<inputs.storsimple.TimeResponse>;
    }

    /**
     * Chap properties
     */
    export interface ChapProperties {
        /**
         * The chap password.
         */
        password: pulumi.Input<inputs.storsimple.AsymmetricEncryptedSecret>;
    }

    /**
     * Chap properties
     */
    export interface ChapPropertiesResponse {
        /**
         * The chap password.
         */
        password: pulumi.Input<inputs.storsimple.AsymmetricEncryptedSecretResponse>;
    }

    /**
     * The file server properties.
     */
    export interface FileServerProperties {
        /**
         * The backup policy id.
         */
        backupScheduleGroupId: pulumi.Input<string>;
        /**
         * The description of the file server
         */
        description?: pulumi.Input<string>;
        /**
         * Domain of the file server
         */
        domainName: pulumi.Input<string>;
        /**
         * The storage domain id.
         */
        storageDomainId: pulumi.Input<string>;
    }

    /**
     * The file server properties.
     */
    export interface FileServerPropertiesResponse {
        /**
         * The backup policy id.
         */
        backupScheduleGroupId: pulumi.Input<string>;
        /**
         * The description of the file server
         */
        description?: pulumi.Input<string>;
        /**
         * Domain of the file server
         */
        domainName: pulumi.Input<string>;
        /**
         * The storage domain id.
         */
        storageDomainId: pulumi.Input<string>;
    }

    /**
     * The File Share.
     */
    export interface FileShareProperties {
        /**
         * The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
         */
        adminUser: pulumi.Input<string>;
        /**
         * The data policy
         */
        dataPolicy: pulumi.Input<string>;
        /**
         * Description for file share
         */
        description?: pulumi.Input<string>;
        /**
         * The monitoring status
         */
        monitoringStatus: pulumi.Input<string>;
        /**
         * The total provisioned capacity in Bytes
         */
        provisionedCapacityInBytes: pulumi.Input<number>;
        /**
         * The Share Status
         */
        shareStatus: pulumi.Input<string>;
    }

    /**
     * The File Share.
     */
    export interface FileSharePropertiesResponse {
        /**
         * The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
         */
        adminUser: pulumi.Input<string>;
        /**
         * The data policy
         */
        dataPolicy: pulumi.Input<string>;
        /**
         * Description for file share
         */
        description?: pulumi.Input<string>;
        /**
         * The local used capacity in Bytes.
         */
        localUsedCapacityInBytes: pulumi.Input<number>;
        /**
         * The monitoring status
         */
        monitoringStatus: pulumi.Input<string>;
        /**
         * The total provisioned capacity in Bytes
         */
        provisionedCapacityInBytes: pulumi.Input<number>;
        /**
         * The Share Status
         */
        shareStatus: pulumi.Input<string>;
        /**
         * The used capacity in Bytes.
         */
        usedCapacityInBytes: pulumi.Input<number>;
    }

    /**
     * The iSCSI disk properties.
     */
    export interface ISCSIDiskProperties {
        /**
         * The access control records.
         */
        accessControlRecords: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The data policy.
         */
        dataPolicy: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        /**
         * The disk status.
         */
        diskStatus: pulumi.Input<string>;
        /**
         * The monitoring.
         */
        monitoringStatus: pulumi.Input<string>;
        /**
         * The provisioned capacity in bytes.
         */
        provisionedCapacityInBytes: pulumi.Input<number>;
    }

    /**
     * The iSCSI disk properties.
     */
    export interface ISCSIDiskPropertiesResponse {
        /**
         * The access control records.
         */
        accessControlRecords: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The data policy.
         */
        dataPolicy: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        /**
         * The disk status.
         */
        diskStatus: pulumi.Input<string>;
        /**
         * The local used capacity in bytes.
         */
        localUsedCapacityInBytes: pulumi.Input<number>;
        /**
         * The monitoring.
         */
        monitoringStatus: pulumi.Input<string>;
        /**
         * The provisioned capacity in bytes.
         */
        provisionedCapacityInBytes: pulumi.Input<number>;
        /**
         * The used capacity in bytes.
         */
        usedCapacityInBytes: pulumi.Input<number>;
    }

    /**
     * The iSCSI server properties.
     */
    export interface ISCSIServerProperties {
        /**
         * The backup policy id.
         */
        backupScheduleGroupId: pulumi.Input<string>;
        /**
         * The chap id.
         */
        chapId?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        /**
         * The reverse chap id.
         */
        reverseChapId?: pulumi.Input<string>;
        /**
         * The storage domain id.
         */
        storageDomainId: pulumi.Input<string>;
    }

    /**
     * The iSCSI server properties.
     */
    export interface ISCSIServerPropertiesResponse {
        /**
         * The backup policy id.
         */
        backupScheduleGroupId: pulumi.Input<string>;
        /**
         * The chap id.
         */
        chapId?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        /**
         * The reverse chap id.
         */
        reverseChapId?: pulumi.Input<string>;
        /**
         * The storage domain id.
         */
        storageDomainId: pulumi.Input<string>;
    }

    /**
     * The properties of the manager extended info.
     */
    export interface ManagerExtendedInfoProperties {
        /**
         * Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
         */
        algorithm: pulumi.Input<string>;
        /**
         * Represents the CEK of the resource.
         */
        encryptionKey?: pulumi.Input<string>;
        /**
         * Represents the Cert thumbprint that was used to encrypt the CEK.
         */
        encryptionKeyThumbprint?: pulumi.Input<string>;
        /**
         * Represents the CIK of the resource.
         */
        integrityKey: pulumi.Input<string>;
        /**
         * Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
         */
        portalCertificateThumbprint?: pulumi.Input<string>;
        /**
         * The version of the extended info being persisted.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * The properties of the manager extended info.
     */
    export interface ManagerExtendedInfoPropertiesResponse {
        /**
         * Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
         */
        algorithm: pulumi.Input<string>;
        /**
         * Represents the CEK of the resource.
         */
        encryptionKey?: pulumi.Input<string>;
        /**
         * Represents the Cert thumbprint that was used to encrypt the CEK.
         */
        encryptionKeyThumbprint?: pulumi.Input<string>;
        /**
         * Represents the CIK of the resource.
         */
        integrityKey: pulumi.Input<string>;
        /**
         * Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
         */
        portalCertificateThumbprint?: pulumi.Input<string>;
        /**
         * The version of the extended info being persisted.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Intrinsic settings which refers to the type of the StorSimple Manager.
     */
    export interface ManagerIntrinsicSettings {
        /**
         * The type of StorSimple Manager.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Intrinsic settings which refers to the type of the StorSimple Manager.
     */
    export interface ManagerIntrinsicSettingsResponse {
        /**
         * The type of StorSimple Manager.
         */
        type: pulumi.Input<string>;
    }

    /**
     * The properties of the StorSimple Manager.
     */
    export interface ManagerProperties {
        /**
         * Represents the type of StorSimple Manager.
         */
        cisIntrinsicSettings?: pulumi.Input<inputs.storsimple.ManagerIntrinsicSettings>;
        /**
         * Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Specifies the Sku.
         */
        sku?: pulumi.Input<inputs.storsimple.ManagerSku>;
    }

    /**
     * The properties of the StorSimple Manager.
     */
    export interface ManagerPropertiesResponse {
        /**
         * Represents the type of StorSimple Manager.
         */
        cisIntrinsicSettings?: pulumi.Input<inputs.storsimple.ManagerIntrinsicSettingsResponse>;
        /**
         * Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Specifies the Sku.
         */
        sku?: pulumi.Input<inputs.storsimple.ManagerSkuResponse>;
    }

    /**
     * The Sku.
     */
    export interface ManagerSku {
        /**
         * Refers to the sku name which should be "Standard"
         */
        name: pulumi.Input<string>;
    }

    /**
     * The Sku.
     */
    export interface ManagerSkuResponse {
        /**
         * Refers to the sku name which should be "Standard"
         */
        name: pulumi.Input<string>;
    }

    /**
     * The schedule recurrence.
     */
    export interface ScheduleRecurrence {
        /**
         * The recurrence type.
         */
        recurrenceType: pulumi.Input<string>;
        /**
         * The recurrence value.
         */
        recurrenceValue: pulumi.Input<number>;
        /**
         * The week days list. Applicable only for schedules of recurrence type 'weekly'.
         */
        weeklyDaysList?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The schedule recurrence.
     */
    export interface ScheduleRecurrenceResponse {
        /**
         * The recurrence type.
         */
        recurrenceType: pulumi.Input<string>;
        /**
         * The recurrence value.
         */
        recurrenceValue: pulumi.Input<number>;
        /**
         * The week days list. Applicable only for schedules of recurrence type 'weekly'.
         */
        weeklyDaysList?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The storage account credential properties.
     */
    export interface StorageAccountCredentialProperties {
        /**
         * The details of the storage account password.
         */
        accessKey?: pulumi.Input<inputs.storsimple.AsymmetricEncryptedSecret>;
        /**
         * The storage endpoint
         */
        endPoint: pulumi.Input<string>;
        /**
         * Signifies whether SSL needs to be enabled or not.
         */
        sslStatus: pulumi.Input<string>;
    }

    /**
     * The storage account credential properties.
     */
    export interface StorageAccountCredentialPropertiesResponse {
        /**
         * The details of the storage account password.
         */
        accessKey?: pulumi.Input<inputs.storsimple.AsymmetricEncryptedSecretResponse>;
        /**
         * The storage endpoint
         */
        endPoint: pulumi.Input<string>;
        /**
         * Signifies whether SSL needs to be enabled or not.
         */
        sslStatus: pulumi.Input<string>;
        /**
         * The count of volumes using this storage account credential.
         */
        volumesCount: pulumi.Input<number>;
    }

    /**
     * The storage domain properties.
     */
    export interface StorageDomainProperties {
        /**
         * The encryption key used to encrypt the data. This is a user secret.
         */
        encryptionKey?: pulumi.Input<inputs.storsimple.AsymmetricEncryptedSecret>;
        /**
         * The encryption status "Enabled | Disabled".
         */
        encryptionStatus: pulumi.Input<string>;
        /**
         * The storage account credentials.
         */
        storageAccountCredentialIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The storage domain properties.
     */
    export interface StorageDomainPropertiesResponse {
        /**
         * The encryption key used to encrypt the data. This is a user secret.
         */
        encryptionKey?: pulumi.Input<inputs.storsimple.AsymmetricEncryptedSecretResponse>;
        /**
         * The encryption status "Enabled | Disabled".
         */
        encryptionStatus: pulumi.Input<string>;
        /**
         * The storage account credentials.
         */
        storageAccountCredentialIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The time.
     */
    export interface Time {
        /**
         * The hour.
         */
        hours: pulumi.Input<number>;
        /**
         * The minute.
         */
        minutes: pulumi.Input<number>;
        /**
         * The second.
         */
        seconds: pulumi.Input<number>;
    }

    /**
     * The time.
     */
    export interface TimeResponse {
        /**
         * The hour.
         */
        hours: pulumi.Input<number>;
        /**
         * The minute.
         */
        minutes: pulumi.Input<number>;
        /**
         * The second.
         */
        seconds: pulumi.Input<number>;
    }

    /**
     * The properties of volume container.
     */
    export interface VolumeContainerProperties {
        /**
         * The bandwidth-rate set on the volume container.
         */
        bandWidthRateInMbps?: pulumi.Input<number>;
        /**
         * The ID of the bandwidth setting associated with the volume container.
         */
        bandwidthSettingId?: pulumi.Input<string>;
        /**
         * The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
         */
        encryptionKey?: pulumi.Input<inputs.storsimple.AsymmetricEncryptedSecret>;
        /**
         * The path ID of storage account associated with the volume container.
         */
        storageAccountCredentialId: pulumi.Input<string>;
    }

    /**
     * The properties of volume container.
     */
    export interface VolumeContainerPropertiesResponse {
        /**
         * The bandwidth-rate set on the volume container.
         */
        bandWidthRateInMbps?: pulumi.Input<number>;
        /**
         * The ID of the bandwidth setting associated with the volume container.
         */
        bandwidthSettingId?: pulumi.Input<string>;
        /**
         * The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
         */
        encryptionKey?: pulumi.Input<inputs.storsimple.AsymmetricEncryptedSecretResponse>;
        /**
         * The flag to denote whether encryption is enabled or not.
         */
        encryptionStatus: pulumi.Input<string>;
        /**
         * The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
         */
        ownerShipStatus: pulumi.Input<string>;
        /**
         * The path ID of storage account associated with the volume container.
         */
        storageAccountCredentialId: pulumi.Input<string>;
        /**
         * The total cloud storage for the volume container.
         */
        totalCloudStorageUsageInBytes: pulumi.Input<number>;
        /**
         * The number of volumes in the volume Container.
         */
        volumeCount: pulumi.Input<number>;
    }

    /**
     * The properties of volume.
     */
    export interface VolumeProperties {
        /**
         * The IDs of the access control records, associated with the volume.
         */
        accessControlRecordIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The monitoring status of the volume.
         */
        monitoringStatus: pulumi.Input<string>;
        /**
         * The size of the volume in bytes.
         */
        sizeInBytes: pulumi.Input<number>;
        /**
         * The volume status.
         */
        volumeStatus: pulumi.Input<string>;
        /**
         * The type of the volume.
         */
        volumeType: pulumi.Input<string>;
    }

    /**
     * The properties of volume.
     */
    export interface VolumePropertiesResponse {
        /**
         * The IDs of the access control records, associated with the volume.
         */
        accessControlRecordIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The IDs of the backup policies, in which this volume is part of.
         */
        backupPolicyIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The backup status of the volume.
         */
        backupStatus: pulumi.Input<string>;
        /**
         * The monitoring status of the volume.
         */
        monitoringStatus: pulumi.Input<string>;
        /**
         * The operation status on the volume.
         */
        operationStatus: pulumi.Input<string>;
        /**
         * The size of the volume in bytes.
         */
        sizeInBytes: pulumi.Input<number>;
        /**
         * The ID of the volume container, in which this volume is created.
         */
        volumeContainerId: pulumi.Input<string>;
        /**
         * The volume status.
         */
        volumeStatus: pulumi.Input<string>;
        /**
         * The type of the volume.
         */
        volumeType: pulumi.Input<string>;
    }
}

export namespace streamanalytics {
    /**
     * Condition applicable to the resource, or to the job overall, that warrant customer attention.
     */
    export interface DiagnosticConditionResponse {
        /**
         * The opaque diagnostic code.
         */
        code: pulumi.Input<string>;
        /**
         * The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
         */
        message: pulumi.Input<string>;
        /**
         * The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.
         */
        since: pulumi.Input<string>;
    }

    /**
     * Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
     */
    export interface DiagnosticsResponse {
        /**
         * A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
         */
        conditions: pulumi.Input<pulumi.Input<inputs.streamanalytics.DiagnosticConditionResponse>[]>;
    }

    /**
     * A function object, containing all information associated with the named function. All functions are contained under a streaming job.
     */
    export interface Function {
        /**
         * Resource name
         */
        name?: pulumi.Input<string>;
        /**
         * The properties that are associated with a function.
         */
        properties?: pulumi.Input<inputs.streamanalytics.FunctionProperties>;
    }

    /**
     * The properties that are associated with a function.
     */
    export interface FunctionProperties {
        /**
         * Indicates the type of function.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The properties that are associated with a function.
     */
    export interface FunctionPropertiesResponse {
        /**
         * The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
         */
        etag: pulumi.Input<string>;
        /**
         * Indicates the type of function.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * A function object, containing all information associated with the named function. All functions are contained under a streaming job.
     */
    export interface FunctionResponse {
        /**
         * Resource Id
         */
        id: pulumi.Input<string>;
        /**
         * Resource name
         */
        name?: pulumi.Input<string>;
        /**
         * The properties that are associated with a function.
         */
        properties?: pulumi.Input<inputs.streamanalytics.FunctionPropertiesResponse>;
        /**
         * Resource type
         */
        type: pulumi.Input<string>;
    }

    /**
     * An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
     */
    export interface Input {
        /**
         * Resource name
         */
        name?: pulumi.Input<string>;
        /**
         * The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
         */
        properties?: pulumi.Input<inputs.streamanalytics.InputProperties>;
    }

    /**
     * The properties that are associated with an input.
     */
    export interface InputProperties {
        /**
         * Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
         */
        serialization?: pulumi.Input<inputs.streamanalytics.Serialization>;
        /**
         * Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The properties that are associated with an input.
     */
    export interface InputPropertiesResponse {
        /**
         * Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
         */
        diagnostics: pulumi.Input<inputs.streamanalytics.DiagnosticsResponse>;
        /**
         * The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
         */
        etag: pulumi.Input<string>;
        /**
         * Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
         */
        serialization?: pulumi.Input<inputs.streamanalytics.SerializationResponse>;
        /**
         * Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
     */
    export interface InputResponse {
        /**
         * Resource Id
         */
        id: pulumi.Input<string>;
        /**
         * Resource name
         */
        name?: pulumi.Input<string>;
        /**
         * The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
         */
        properties?: pulumi.Input<inputs.streamanalytics.InputPropertiesResponse>;
        /**
         * Resource type
         */
        type: pulumi.Input<string>;
    }

    /**
     * An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
     */
    export interface Output {
        /**
         * Resource name
         */
        name?: pulumi.Input<string>;
        /**
         * The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
         */
        properties?: pulumi.Input<inputs.streamanalytics.OutputProperties>;
    }

    /**
     * Describes the data source that output will be written to.
     */
    export interface OutputDataSource {
        /**
         * Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Describes the data source that output will be written to.
     */
    export interface OutputDataSourceResponse {
        /**
         * Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The properties that are associated with an output.
     */
    export interface OutputProperties {
        /**
         * Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
         */
        datasource?: pulumi.Input<inputs.streamanalytics.OutputDataSource>;
        /**
         * Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
         */
        serialization?: pulumi.Input<inputs.streamanalytics.Serialization>;
    }

    /**
     * The properties that are associated with an output.
     */
    export interface OutputPropertiesResponse {
        /**
         * Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
         */
        datasource?: pulumi.Input<inputs.streamanalytics.OutputDataSourceResponse>;
        /**
         * Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
         */
        diagnostics: pulumi.Input<inputs.streamanalytics.DiagnosticsResponse>;
        /**
         * The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
         */
        etag: pulumi.Input<string>;
        /**
         * Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
         */
        serialization?: pulumi.Input<inputs.streamanalytics.SerializationResponse>;
    }

    /**
     * An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
     */
    export interface OutputResponse {
        /**
         * Resource Id
         */
        id: pulumi.Input<string>;
        /**
         * Resource name
         */
        name?: pulumi.Input<string>;
        /**
         * The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
         */
        properties?: pulumi.Input<inputs.streamanalytics.OutputPropertiesResponse>;
        /**
         * Resource type
         */
        type: pulumi.Input<string>;
    }

    /**
     * Describes how data from an input is serialized or how data is serialized when written to an output.
     */
    export interface Serialization {
        /**
         * Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Describes how data from an input is serialized or how data is serialized when written to an output.
     */
    export interface SerializationResponse {
        /**
         * Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The properties that are associated with a SKU.
     */
    export interface Sku {
        /**
         * The name of the SKU. Required on PUT (CreateOrReplace) requests.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The properties that are associated with a SKU.
     */
    export interface SkuResponse {
        /**
         * The name of the SKU. Required on PUT (CreateOrReplace) requests.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * The properties that are associated with a streaming job.
     */
    export interface StreamingJobProperties {
        /**
         * Controls certain runtime behaviors of the streaming job.
         */
        compatibilityLevel?: pulumi.Input<string>;
        /**
         * The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
         */
        dataLocale?: pulumi.Input<string>;
        /**
         * The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
         */
        eventsLateArrivalMaxDelayInSeconds?: pulumi.Input<number>;
        /**
         * The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
         */
        eventsOutOfOrderMaxDelayInSeconds?: pulumi.Input<number>;
        /**
         * Indicates the policy to apply to events that arrive out of order in the input event stream.
         */
        eventsOutOfOrderPolicy?: pulumi.Input<string>;
        /**
         * A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
         */
        functions?: pulumi.Input<pulumi.Input<inputs.streamanalytics.Function>[]>;
        /**
         * A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
         */
        inputs?: pulumi.Input<pulumi.Input<inputs.streamanalytics.Input>[]>;
        /**
         * Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
         */
        outputErrorPolicy?: pulumi.Input<string>;
        /**
         * This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
         */
        outputStartMode?: pulumi.Input<string>;
        /**
         * Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
         */
        outputStartTime?: pulumi.Input<string>;
        /**
         * A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
         */
        outputs?: pulumi.Input<pulumi.Input<inputs.streamanalytics.Output>[]>;
        /**
         * Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
         */
        sku?: pulumi.Input<inputs.streamanalytics.Sku>;
        /**
         * Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
         */
        transformation?: pulumi.Input<inputs.streamanalytics.Transformation>;
    }

    /**
     * The properties that are associated with a streaming job.
     */
    export interface StreamingJobPropertiesResponse {
        /**
         * Controls certain runtime behaviors of the streaming job.
         */
        compatibilityLevel?: pulumi.Input<string>;
        /**
         * Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.
         */
        createdDate: pulumi.Input<string>;
        /**
         * The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
         */
        dataLocale?: pulumi.Input<string>;
        /**
         * The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
         */
        etag: pulumi.Input<string>;
        /**
         * The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
         */
        eventsLateArrivalMaxDelayInSeconds?: pulumi.Input<number>;
        /**
         * The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
         */
        eventsOutOfOrderMaxDelayInSeconds?: pulumi.Input<number>;
        /**
         * Indicates the policy to apply to events that arrive out of order in the input event stream.
         */
        eventsOutOfOrderPolicy?: pulumi.Input<string>;
        /**
         * A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
         */
        functions?: pulumi.Input<pulumi.Input<inputs.streamanalytics.FunctionResponse>[]>;
        /**
         * A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
         */
        inputs?: pulumi.Input<pulumi.Input<inputs.streamanalytics.InputResponse>[]>;
        /**
         * A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.
         */
        jobId: pulumi.Input<string>;
        /**
         * Describes the state of the streaming job.
         */
        jobState: pulumi.Input<string>;
        /**
         * Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.
         */
        lastOutputEventTime: pulumi.Input<string>;
        /**
         * Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
         */
        outputErrorPolicy?: pulumi.Input<string>;
        /**
         * This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
         */
        outputStartMode?: pulumi.Input<string>;
        /**
         * Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
         */
        outputStartTime?: pulumi.Input<string>;
        /**
         * A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
         */
        outputs?: pulumi.Input<pulumi.Input<inputs.streamanalytics.OutputResponse>[]>;
        /**
         * Describes the provisioning status of the streaming job.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
         */
        sku?: pulumi.Input<inputs.streamanalytics.SkuResponse>;
        /**
         * Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
         */
        transformation?: pulumi.Input<inputs.streamanalytics.TransformationResponse>;
    }

    /**
     * A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
     */
    export interface Transformation {
        /**
         * Resource name
         */
        name?: pulumi.Input<string>;
        /**
         * The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
         */
        properties?: pulumi.Input<inputs.streamanalytics.TransformationProperties>;
    }

    /**
     * The properties that are associated with a transformation.
     */
    export interface TransformationProperties {
        /**
         * Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
         */
        query?: pulumi.Input<string>;
        /**
         * Specifies the number of streaming units that the streaming job uses.
         */
        streamingUnits?: pulumi.Input<number>;
    }

    /**
     * The properties that are associated with a transformation.
     */
    export interface TransformationPropertiesResponse {
        /**
         * The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
         */
        etag: pulumi.Input<string>;
        /**
         * Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
         */
        query?: pulumi.Input<string>;
        /**
         * Specifies the number of streaming units that the streaming job uses.
         */
        streamingUnits?: pulumi.Input<number>;
    }

    /**
     * A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
     */
    export interface TransformationResponse {
        /**
         * Resource Id
         */
        id: pulumi.Input<string>;
        /**
         * Resource name
         */
        name?: pulumi.Input<string>;
        /**
         * The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
         */
        properties?: pulumi.Input<inputs.streamanalytics.TransformationPropertiesResponse>;
        /**
         * Resource type
         */
        type: pulumi.Input<string>;
    }
}

export namespace timeseriesinsights {
    export interface AccessPolicyResourceProperties {
        /**
         * An description of the access policy.
         */
        description?: pulumi.Input<string>;
        /**
         * The objectId of the principal in Azure Active Directory.
         */
        principalObjectId?: pulumi.Input<string>;
        /**
         * The list of roles the principal is assigned on the environment.
         */
        roles?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccessPolicyResourcePropertiesResponse {
        /**
         * An description of the access policy.
         */
        description?: pulumi.Input<string>;
        /**
         * The objectId of the principal in Azure Active Directory.
         */
        principalObjectId?: pulumi.Input<string>;
        /**
         * The list of roles the principal is assigned on the environment.
         */
        roles?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties used to create an environment.
     */
    export interface EnvironmentCreationProperties {
        /**
         * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
         */
        dataRetentionTime: pulumi.Input<string>;
        /**
         * The list of partition keys according to which the data in the environment will be ordered.
         */
        partitionKeyProperties?: pulumi.Input<pulumi.Input<inputs.timeseriesinsights.PartitionKeyProperty>[]>;
        /**
         * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
         */
        storageLimitExceededBehavior?: pulumi.Input<string>;
    }

    /**
     * Properties of the environment.
     */
    export interface EnvironmentResourcePropertiesResponse {
        /**
         * The time the resource was created.
         */
        creationTime: pulumi.Input<string>;
        /**
         * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
         */
        dataAccessFqdn: pulumi.Input<string>;
        /**
         * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
         */
        dataAccessId: pulumi.Input<string>;
        /**
         * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
         */
        dataRetentionTime: pulumi.Input<string>;
        /**
         * The list of partition keys according to which the data in the environment will be ordered.
         */
        partitionKeyProperties?: pulumi.Input<pulumi.Input<inputs.timeseriesinsights.PartitionKeyPropertyResponse>[]>;
        /**
         * Provisioning state of the resource.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
         */
        status?: pulumi.Input<inputs.timeseriesinsights.EnvironmentStatusResponse>;
        /**
         * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
         */
        storageLimitExceededBehavior?: pulumi.Input<string>;
    }

    /**
     * An object that contains the details about an environment's state.
     */
    export interface EnvironmentStateDetailsResponse {
        /**
         * Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
         */
        code?: pulumi.Input<string>;
        /**
         * A message that describes the state in detail.
         */
        message?: pulumi.Input<string>;
    }

    /**
     * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
     */
    export interface EnvironmentStatusResponse {
        /**
         * An object that represents the status of ingress on an environment.
         */
        ingress?: pulumi.Input<inputs.timeseriesinsights.IngressEnvironmentStatusResponse>;
    }

    /**
     * An object that represents the status of ingress on an environment.
     */
    export interface IngressEnvironmentStatusResponse {
        /**
         * This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
         */
        state?: pulumi.Input<string>;
        /**
         * An object that contains the details about an environment's state.
         */
        stateDetails?: pulumi.Input<inputs.timeseriesinsights.EnvironmentStateDetailsResponse>;
    }

    /**
     * The structure of the property that a partition key can have. An environment can have multiple such properties.
     */
    export interface PartitionKeyProperty {
        /**
         * The name of the property.
         */
        name?: pulumi.Input<string>;
        /**
         * The type of the property.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * The structure of the property that a partition key can have. An environment can have multiple such properties.
     */
    export interface PartitionKeyPropertyResponse {
        /**
         * The name of the property.
         */
        name?: pulumi.Input<string>;
        /**
         * The type of the property.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Properties used to create a reference data set.
     */
    export interface ReferenceDataSetCreationProperties {
        /**
         * The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
         */
        dataStringComparisonBehavior?: pulumi.Input<string>;
        /**
         * The list of key properties for the reference data set.
         */
        keyProperties: pulumi.Input<pulumi.Input<inputs.timeseriesinsights.ReferenceDataSetKeyProperty>[]>;
    }

    /**
     * A key property for the reference data set. A reference data set can have multiple key properties.
     */
    export interface ReferenceDataSetKeyProperty {
        /**
         * The name of the key property.
         */
        name?: pulumi.Input<string>;
        /**
         * The type of the key property.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * A key property for the reference data set. A reference data set can have multiple key properties.
     */
    export interface ReferenceDataSetKeyPropertyResponse {
        /**
         * The name of the key property.
         */
        name?: pulumi.Input<string>;
        /**
         * The type of the key property.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Properties of the reference data set.
     */
    export interface ReferenceDataSetResourcePropertiesResponse {
        /**
         * The time the resource was created.
         */
        creationTime: pulumi.Input<string>;
        /**
         * The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
         */
        dataStringComparisonBehavior?: pulumi.Input<string>;
        /**
         * The list of key properties for the reference data set.
         */
        keyProperties: pulumi.Input<pulumi.Input<inputs.timeseriesinsights.ReferenceDataSetKeyPropertyResponse>[]>;
        /**
         * Provisioning state of the resource.
         */
        provisioningState?: pulumi.Input<string>;
    }

    /**
     * The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
     */
    export interface Sku {
        /**
         * The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
         */
        capacity: pulumi.Input<number>;
        /**
         * The name of this SKU.
         */
        name: pulumi.Input<string>;
    }

    /**
     * The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
     */
    export interface SkuResponse {
        /**
         * The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
         */
        capacity: pulumi.Input<number>;
        /**
         * The name of this SKU.
         */
        name: pulumi.Input<string>;
    }
}

export namespace virtualmachineimages {
    /**
     * Describes a unit of image customization
     */
    export interface ImageTemplateCustomizer {
        /**
         * Friendly Name to provide context on what this customization step does
         */
        name?: pulumi.Input<string>;
        /**
         * The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
         */
        type: pulumi.Input<string>;
    }

    /**
     * Describes a unit of image customization
     */
    export interface ImageTemplateCustomizerResponse {
        /**
         * Friendly Name to provide context on what this customization step does
         */
        name?: pulumi.Input<string>;
        /**
         * The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
         */
        type: pulumi.Input<string>;
    }

    /**
     * Generic distribution object
     */
    export interface ImageTemplateDistributor {
        /**
         * Tags that will be applied to the artifact once it has been created/updated by the distributor.
         */
        artifactTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The name to be used for the associated RunOutput.
         */
        runOutputName: pulumi.Input<string>;
        /**
         * Type of distribution.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Generic distribution object
     */
    export interface ImageTemplateDistributorResponse {
        /**
         * Tags that will be applied to the artifact once it has been created/updated by the distributor.
         */
        artifactTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The name to be used for the associated RunOutput.
         */
        runOutputName: pulumi.Input<string>;
        /**
         * Type of distribution.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Identity for the image template.
     */
    export interface ImageTemplateIdentity {
        /**
         * The type of identity used for the image template. The type 'None' will remove any identities from the image template.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the image template. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Identity for the image template.
     */
    export interface ImageTemplateIdentityResponse {
        /**
         * The type of identity used for the image template. The type 'None' will remove any identities from the image template.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user identities associated with the image template. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Describes the latest status of running an image template
     */
    export interface ImageTemplateLastRunStatusResponse {
        /**
         * End time of the last run (UTC)
         */
        endTime?: pulumi.Input<string>;
        /**
         * Verbose information about the last run state
         */
        message?: pulumi.Input<string>;
        /**
         * State of the last run
         */
        runState?: pulumi.Input<string>;
        /**
         * Sub-state of the last run
         */
        runSubState?: pulumi.Input<string>;
        /**
         * Start time of the last run (UTC)
         */
        startTime?: pulumi.Input<string>;
    }

    /**
     * Describes the properties of an image template
     */
    export interface ImageTemplateProperties {
        /**
         * Maximum duration to wait while building the image template. Omit or specify 0 to use the default (4 hours).
         */
        buildTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * Specifies the properties used to describe the customization steps of the image, like Image source etc
         */
        customize?: pulumi.Input<pulumi.Input<inputs.virtualmachineimages.ImageTemplateCustomizer>[]>;
        /**
         * The distribution targets where the image output needs to go to.
         */
        distribute: pulumi.Input<pulumi.Input<inputs.virtualmachineimages.ImageTemplateDistributor>[]>;
        /**
         * Specifies the properties used to describe the source image.
         */
        source: pulumi.Input<inputs.virtualmachineimages.ImageTemplateSource>;
        /**
         * Describes how virtual machine is set up to build images
         */
        vmProfile?: pulumi.Input<inputs.virtualmachineimages.ImageTemplateVmProfile>;
    }

    /**
     * Describes the properties of an image template
     */
    export interface ImageTemplatePropertiesResponse {
        /**
         * Maximum duration to wait while building the image template. Omit or specify 0 to use the default (4 hours).
         */
        buildTimeoutInMinutes?: pulumi.Input<number>;
        /**
         * Specifies the properties used to describe the customization steps of the image, like Image source etc
         */
        customize?: pulumi.Input<pulumi.Input<inputs.virtualmachineimages.ImageTemplateCustomizerResponse>[]>;
        /**
         * The distribution targets where the image output needs to go to.
         */
        distribute: pulumi.Input<pulumi.Input<inputs.virtualmachineimages.ImageTemplateDistributorResponse>[]>;
        /**
         * State of 'run' that is currently executing or was last executed.
         */
        lastRunStatus: pulumi.Input<inputs.virtualmachineimages.ImageTemplateLastRunStatusResponse>;
        /**
         * Provisioning error, if any
         */
        provisioningError: pulumi.Input<inputs.virtualmachineimages.ProvisioningErrorResponse>;
        /**
         * Provisioning state of the resource
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Specifies the properties used to describe the source image.
         */
        source: pulumi.Input<inputs.virtualmachineimages.ImageTemplateSourceResponse>;
        /**
         * Describes how virtual machine is set up to build images
         */
        vmProfile?: pulumi.Input<inputs.virtualmachineimages.ImageTemplateVmProfileResponse>;
    }

    /**
     * Describes a virtual machine image source for building, customizing and distributing
     */
    export interface ImageTemplateSource {
        /**
         * Specifies the type of source image you want to start with.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Describes a virtual machine image source for building, customizing and distributing
     */
    export interface ImageTemplateSourceResponse {
        /**
         * Specifies the type of source image you want to start with.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Describes the virtual machine used to build, customize and capture images
     */
    export interface ImageTemplateVmProfile {
        /**
         * Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
         */
        osDiskSizeGB?: pulumi.Input<number>;
        /**
         * Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2).
         */
        vmSize?: pulumi.Input<string>;
        /**
         * Optional configuration of the virtual network to use to deploy the build virtual machine in. Omit if no specific virtual network needs to be used.
         */
        vnetConfig?: pulumi.Input<inputs.virtualmachineimages.VirtualNetworkConfig>;
    }

    /**
     * Describes the virtual machine used to build, customize and capture images
     */
    export interface ImageTemplateVmProfileResponse {
        /**
         * Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
         */
        osDiskSizeGB?: pulumi.Input<number>;
        /**
         * Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2).
         */
        vmSize?: pulumi.Input<string>;
        /**
         * Optional configuration of the virtual network to use to deploy the build virtual machine in. Omit if no specific virtual network needs to be used.
         */
        vnetConfig?: pulumi.Input<inputs.virtualmachineimages.VirtualNetworkConfigResponse>;
    }

    /**
     * Describes the error happened when create or update an image template
     */
    export interface ProvisioningErrorResponse {
        /**
         * Verbose error message about the provisioning failure
         */
        message?: pulumi.Input<string>;
        /**
         * Error code of the provisioning failure
         */
        provisioningErrorCode?: pulumi.Input<string>;
    }

    /**
     * Virtual Network configuration.
     */
    export interface VirtualNetworkConfig {
        /**
         * Resource id of a pre-existing subnet.
         */
        subnetId?: pulumi.Input<string>;
    }

    /**
     * Virtual Network configuration.
     */
    export interface VirtualNetworkConfigResponse {
        /**
         * Resource id of a pre-existing subnet.
         */
        subnetId?: pulumi.Input<string>;
    }
}

export namespace vmwarecloudsimple {
    /**
     * Properties of dedicated cloud node
     */
    export interface DedicatedCloudNodeProperties {
        /**
         * Availability Zone id, e.g. "az1"
         */
        availabilityZoneId: pulumi.Input<string>;
        /**
         * count of nodes to create
         */
        nodesCount: pulumi.Input<number>;
        /**
         * Placement Group id, e.g. "n1"
         */
        placementGroupId: pulumi.Input<string>;
        /**
         * purchase id
         */
        purchaseId: pulumi.Input<string>;
        /**
         * Dedicated Cloud Nodes SKU's description
         */
        skuDescription?: pulumi.Input<inputs.vmwarecloudsimple.SkuDescription>;
    }

    /**
     * Properties of dedicated cloud node
     */
    export interface DedicatedCloudNodePropertiesResponse {
        /**
         * Availability Zone id, e.g. "az1"
         */
        availabilityZoneId: pulumi.Input<string>;
        /**
         * Availability Zone name, e.g. "Availability Zone 1"
         */
        availabilityZoneName: pulumi.Input<string>;
        /**
         * VMWare Cloud Rack Name
         */
        cloudRackName: pulumi.Input<string>;
        /**
         * date time the resource was created
         */
        created: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * count of nodes to create
         */
        nodesCount: pulumi.Input<number>;
        /**
         * Placement Group id, e.g. "n1"
         */
        placementGroupId: pulumi.Input<string>;
        /**
         * Placement Name, e.g. "Placement Group 1"
         */
        placementGroupName: pulumi.Input<string>;
        /**
         * Private Cloud Id
         */
        privateCloudId: pulumi.Input<string>;
        /**
         * Resource Pool Name
         */
        privateCloudName: pulumi.Input<string>;
        /**
         * The provisioning status of the resource
         */
        provisioningState: pulumi.Input<string>;
        /**
         * purchase id
         */
        purchaseId: pulumi.Input<string>;
        /**
         * Dedicated Cloud Nodes SKU's description
         */
        skuDescription?: pulumi.Input<inputs.vmwarecloudsimple.SkuDescriptionResponse>;
        /**
         * Node status, indicates is private cloud set up on this node or not
         */
        status: pulumi.Input<string>;
        /**
         * VMWare Cluster Name
         */
        vmwareClusterName: pulumi.Input<string>;
    }

    /**
     * Properties of dedicated cloud service
     */
    export interface DedicatedCloudServiceProperties {
        /**
         * gateway Subnet for the account. It will collect the subnet address and always treat it as /28
         */
        gatewaySubnet: pulumi.Input<string>;
    }

    /**
     * Properties of dedicated cloud service
     */
    export interface DedicatedCloudServicePropertiesResponse {
        /**
         * gateway Subnet for the account. It will collect the subnet address and always treat it as /28
         */
        gatewaySubnet: pulumi.Input<string>;
        /**
         * indicates whether account onboarded or not in a given region
         */
        isAccountOnboarded: pulumi.Input<string>;
        /**
         * total nodes purchased
         */
        nodes: pulumi.Input<number>;
        /**
         * link to a service management web portal
         */
        serviceURL: pulumi.Input<string>;
    }

    /**
     * Guest OS Customization properties
     */
    export interface GuestOSCustomization {
        /**
         * List of dns servers to use
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Virtual Machine hostname
         */
        hostName?: pulumi.Input<string>;
        /**
         * Password for login
         */
        password?: pulumi.Input<string>;
        /**
         * id of customization policy
         */
        policyId?: pulumi.Input<string>;
        /**
         * Username for login
         */
        username?: pulumi.Input<string>;
    }

    /**
     * Guest OS Customization properties
     */
    export interface GuestOSCustomizationResponse {
        /**
         * List of dns servers to use
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Virtual Machine hostname
         */
        hostName?: pulumi.Input<string>;
        /**
         * Password for login
         */
        password?: pulumi.Input<string>;
        /**
         * id of customization policy
         */
        policyId?: pulumi.Input<string>;
        /**
         * Username for login
         */
        username?: pulumi.Input<string>;
    }

    /**
     * Guest OS nic customization
     */
    export interface GuestOSNICCustomization {
        /**
         * IP address allocation method
         */
        allocation?: pulumi.Input<string>;
        /**
         * List of dns servers to use
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Gateway addresses assigned to nic
         */
        gateway?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Static ip address for nic
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * Network mask for nic
         */
        mask?: pulumi.Input<string>;
        /**
         * primary WINS server for Windows
         */
        primaryWinsServer?: pulumi.Input<string>;
        /**
         * secondary WINS server for Windows
         */
        secondaryWinsServer?: pulumi.Input<string>;
    }

    /**
     * Guest OS nic customization
     */
    export interface GuestOSNICCustomizationResponse {
        /**
         * IP address allocation method
         */
        allocation?: pulumi.Input<string>;
        /**
         * List of dns servers to use
         */
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Gateway addresses assigned to nic
         */
        gateway?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Static ip address for nic
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * Network mask for nic
         */
        mask?: pulumi.Input<string>;
        /**
         * primary WINS server for Windows
         */
        primaryWinsServer?: pulumi.Input<string>;
        /**
         * secondary WINS server for Windows
         */
        secondaryWinsServer?: pulumi.Input<string>;
    }

    /**
     * Resource pool model
     */
    export interface ResourcePool {
        /**
         * resource pool id (privateCloudId:vsphereId)
         */
        id: pulumi.Input<string>;
        /**
         * Resource pool properties
         */
        properties?: pulumi.Input<inputs.vmwarecloudsimple.ResourcePoolProperties>;
    }

    /**
     * Properties of resource pool
     */
    export interface ResourcePoolProperties {
    }

    /**
     * Properties of resource pool
     */
    export interface ResourcePoolPropertiesResponse {
        /**
         * Hierarchical resource pool name
         */
        fullName: pulumi.Input<string>;
    }

    /**
     * Resource pool model
     */
    export interface ResourcePoolResponse {
        /**
         * resource pool id (privateCloudId:vsphereId)
         */
        id: pulumi.Input<string>;
        /**
         * Azure region
         */
        location: pulumi.Input<string>;
        /**
         * {ResourcePoolName}
         */
        name: pulumi.Input<string>;
        /**
         * The Private Cloud Id
         */
        privateCloudId: pulumi.Input<string>;
        /**
         * Resource pool properties
         */
        properties?: pulumi.Input<inputs.vmwarecloudsimple.ResourcePoolPropertiesResponse>;
        /**
         * {resourceProviderNamespace}/{resourceType}
         */
        type: pulumi.Input<string>;
    }

    /**
     * The purchase SKU for CloudSimple paid resources
     */
    export interface Sku {
        /**
         * The capacity of the SKU
         */
        capacity?: pulumi.Input<string>;
        /**
         * dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200 2400MHz DDR4 ECC Registered DIMM, ...
         */
        description?: pulumi.Input<string>;
        /**
         * If the service has different generations of hardware, for the same SKU, then that can be captured here
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the SKU for VMWare CloudSimple Node
         */
        name: pulumi.Input<string>;
        /**
         * The tier of the SKU
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The purchase SKU for CloudSimple paid resources
     */
    export interface SkuDescription {
        /**
         * SKU's id
         */
        id: pulumi.Input<string>;
        /**
         * SKU's name
         */
        name: pulumi.Input<string>;
    }

    /**
     * The purchase SKU for CloudSimple paid resources
     */
    export interface SkuDescriptionResponse {
        /**
         * SKU's id
         */
        id: pulumi.Input<string>;
        /**
         * SKU's name
         */
        name: pulumi.Input<string>;
    }

    /**
     * The purchase SKU for CloudSimple paid resources
     */
    export interface SkuResponse {
        /**
         * The capacity of the SKU
         */
        capacity?: pulumi.Input<string>;
        /**
         * dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200 2400MHz DDR4 ECC Registered DIMM, ...
         */
        description?: pulumi.Input<string>;
        /**
         * If the service has different generations of hardware, for the same SKU, then that can be captured here
         */
        family?: pulumi.Input<string>;
        /**
         * The name of the SKU for VMWare CloudSimple Node
         */
        name: pulumi.Input<string>;
        /**
         * The tier of the SKU
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Tags model
     */
    export interface Tags {
    }

    /**
     * Tags model
     */
    export interface TagsResponse {
    }

    /**
     * Virtual disk model
     */
    export interface VirtualDisk {
        /**
         * Disk's Controller id
         */
        controllerId: pulumi.Input<string>;
        /**
         * Disk's independence mode type
         */
        independenceMode: pulumi.Input<string>;
        /**
         * Disk's total size
         */
        totalSize: pulumi.Input<number>;
        /**
         * Disk's id
         */
        virtualDiskId?: pulumi.Input<string>;
    }

    /**
     * Virtual disk controller model
     */
    export interface VirtualDiskControllerResponse {
        /**
         * Controller's id
         */
        id: pulumi.Input<string>;
        /**
         * The display name of Controller
         */
        name: pulumi.Input<string>;
        /**
         * dik controller subtype (VMWARE_PARAVIRTUAL, BUS_PARALLEL, LSI_PARALLEL, LSI_SAS)
         */
        subType: pulumi.Input<string>;
        /**
         * disk controller type (SCSI)
         */
        type: pulumi.Input<string>;
    }

    /**
     * Virtual disk model
     */
    export interface VirtualDiskResponse {
        /**
         * Disk's Controller id
         */
        controllerId: pulumi.Input<string>;
        /**
         * Disk's independence mode type
         */
        independenceMode: pulumi.Input<string>;
        /**
         * Disk's total size
         */
        totalSize: pulumi.Input<number>;
        /**
         * Disk's id
         */
        virtualDiskId?: pulumi.Input<string>;
        /**
         * Disk's display name
         */
        virtualDiskName: pulumi.Input<string>;
    }

    /**
     * Properties of virtual machine
     */
    export interface VirtualMachineProperties {
        /**
         * The amount of memory
         */
        amountOfRam: pulumi.Input<number>;
        /**
         * Virtual machine properties
         */
        customization?: pulumi.Input<inputs.vmwarecloudsimple.GuestOSCustomization>;
        /**
         * The list of Virtual Disks
         */
        disks?: pulumi.Input<pulumi.Input<inputs.vmwarecloudsimple.VirtualDisk>[]>;
        /**
         * Expose Guest OS or not
         */
        exposeToGuestVM?: pulumi.Input<boolean>;
        /**
         * The list of Virtual NICs
         */
        nics?: pulumi.Input<pulumi.Input<inputs.vmwarecloudsimple.VirtualNic>[]>;
        /**
         * The number of CPU cores
         */
        numberOfCores: pulumi.Input<number>;
        /**
         * Password for login. Deprecated - use customization property
         */
        password?: pulumi.Input<string>;
        /**
         * Private Cloud Id
         */
        privateCloudId: pulumi.Input<string>;
        /**
         * Virtual Machines Resource Pool
         */
        resourcePool?: pulumi.Input<inputs.vmwarecloudsimple.ResourcePool>;
        /**
         * Virtual Machine Template Id
         */
        templateId?: pulumi.Input<string>;
        /**
         * Username for login. Deprecated - use customization property
         */
        username?: pulumi.Input<string>;
        /**
         * The list of Virtual VSphere Networks
         */
        vSphereNetworks?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Properties of virtual machine
     */
    export interface VirtualMachinePropertiesResponse {
        /**
         * The amount of memory
         */
        amountOfRam: pulumi.Input<number>;
        /**
         * The list of Virtual Disks' Controllers
         */
        controllers: pulumi.Input<pulumi.Input<inputs.vmwarecloudsimple.VirtualDiskControllerResponse>[]>;
        /**
         * Virtual machine properties
         */
        customization?: pulumi.Input<inputs.vmwarecloudsimple.GuestOSCustomizationResponse>;
        /**
         * The list of Virtual Disks
         */
        disks?: pulumi.Input<pulumi.Input<inputs.vmwarecloudsimple.VirtualDiskResponse>[]>;
        /**
         * The DNS name of Virtual Machine in VCenter
         */
        dnsname: pulumi.Input<string>;
        /**
         * Expose Guest OS or not
         */
        exposeToGuestVM?: pulumi.Input<boolean>;
        /**
         * The path to virtual machine folder in VCenter
         */
        folder: pulumi.Input<string>;
        /**
         * The name of Guest OS
         */
        guestOS: pulumi.Input<string>;
        /**
         * The Guest OS type
         */
        guestOSType: pulumi.Input<string>;
        /**
         * The list of Virtual NICs
         */
        nics?: pulumi.Input<pulumi.Input<inputs.vmwarecloudsimple.VirtualNicResponse>[]>;
        /**
         * The number of CPU cores
         */
        numberOfCores: pulumi.Input<number>;
        /**
         * Password for login. Deprecated - use customization property
         */
        password?: pulumi.Input<string>;
        /**
         * Private Cloud Id
         */
        privateCloudId: pulumi.Input<string>;
        /**
         * The provisioning status of the resource
         */
        provisioningState: pulumi.Input<string>;
        /**
         * The public ip of Virtual Machine
         */
        publicIP: pulumi.Input<string>;
        /**
         * Virtual Machines Resource Pool
         */
        resourcePool?: pulumi.Input<inputs.vmwarecloudsimple.ResourcePoolResponse>;
        /**
         * The status of Virtual machine
         */
        status: pulumi.Input<string>;
        /**
         * Virtual Machine Template Id
         */
        templateId?: pulumi.Input<string>;
        /**
         * Username for login. Deprecated - use customization property
         */
        username?: pulumi.Input<string>;
        /**
         * The list of Virtual VSphere Networks
         */
        vSphereNetworks?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The internal id of Virtual Machine in VCenter
         */
        vmId: pulumi.Input<string>;
        /**
         * VMware tools version
         */
        vmwaretools: pulumi.Input<string>;
    }

    /**
     * Virtual network model
     */
    export interface VirtualNetwork {
        /**
         * virtual network id (privateCloudId:vsphereId)
         */
        id: pulumi.Input<string>;
        /**
         * Virtual Network properties
         */
        properties?: pulumi.Input<inputs.vmwarecloudsimple.VirtualNetworkProperties>;
    }

    /**
     * Properties of virtual network
     */
    export interface VirtualNetworkProperties {
    }

    /**
     * Properties of virtual network
     */
    export interface VirtualNetworkPropertiesResponse {
        /**
         * The Private Cloud id
         */
        privateCloudId: pulumi.Input<string>;
    }

    /**
     * Virtual network model
     */
    export interface VirtualNetworkResponse {
        /**
         * can be used in vm creation/deletion
         */
        assignable: pulumi.Input<boolean>;
        /**
         * virtual network id (privateCloudId:vsphereId)
         */
        id: pulumi.Input<string>;
        /**
         * Azure region
         */
        location: pulumi.Input<string>;
        /**
         * {VirtualNetworkName}
         */
        name: pulumi.Input<string>;
        /**
         * Virtual Network properties
         */
        properties?: pulumi.Input<inputs.vmwarecloudsimple.VirtualNetworkPropertiesResponse>;
        /**
         * {resourceProviderNamespace}/{resourceType}
         */
        type: pulumi.Input<string>;
    }

    /**
     * Virtual NIC model
     */
    export interface VirtualNic {
        /**
         * guest OS customization for nic
         */
        customization?: pulumi.Input<inputs.vmwarecloudsimple.GuestOSNICCustomization>;
        /**
         * NIC ip address
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * NIC MAC address
         */
        macAddress?: pulumi.Input<string>;
        /**
         * Virtual Network
         */
        network: pulumi.Input<inputs.vmwarecloudsimple.VirtualNetwork>;
        /**
         * NIC type
         */
        nicType: pulumi.Input<string>;
        /**
         * Is NIC powered on/off on boot
         */
        powerOnBoot?: pulumi.Input<boolean>;
        /**
         * NIC id
         */
        virtualNicId?: pulumi.Input<string>;
    }

    /**
     * Virtual NIC model
     */
    export interface VirtualNicResponse {
        /**
         * guest OS customization for nic
         */
        customization?: pulumi.Input<inputs.vmwarecloudsimple.GuestOSNICCustomizationResponse>;
        /**
         * NIC ip address
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * NIC MAC address
         */
        macAddress?: pulumi.Input<string>;
        /**
         * Virtual Network
         */
        network: pulumi.Input<inputs.vmwarecloudsimple.VirtualNetworkResponse>;
        /**
         * NIC type
         */
        nicType: pulumi.Input<string>;
        /**
         * Is NIC powered on/off on boot
         */
        powerOnBoot?: pulumi.Input<boolean>;
        /**
         * NIC id
         */
        virtualNicId?: pulumi.Input<string>;
        /**
         * NIC name
         */
        virtualNicName: pulumi.Input<string>;
    }
}

export namespace web {
    /**
     * Information about the formal API definition for the app.
     */
    export interface ApiDefinitionInfo {
        /**
         * The URL of the API definition.
         */
        url?: pulumi.Input<string>;
    }

    /**
     * Information about the formal API definition for the app.
     */
    export interface ApiDefinitionInfoResponse {
        /**
         * The URL of the API definition.
         */
        url?: pulumi.Input<string>;
    }

    /**
     * Azure API management (APIM) configuration linked to the app.
     */
    export interface ApiManagementConfig {
        /**
         * APIM-Api Identifier.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Azure API management (APIM) configuration linked to the app.
     */
    export interface ApiManagementConfigResponse {
        /**
         * APIM-Api Identifier.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Description of an App Service Environment.
     */
    export interface AppServiceEnvironment {
        /**
         * API Management Account associated with the App Service Environment.
         */
        apiManagementAccountId?: pulumi.Input<string>;
        /**
         * Custom settings for changing the behavior of the App Service Environment.
         */
        clusterSettings?: pulumi.Input<pulumi.Input<inputs.web.NameValuePair>[]>;
        /**
         * DNS suffix of the App Service Environment.
         */
        dnsSuffix?: pulumi.Input<string>;
        /**
         * True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
         * (most likely because NSG blocked the incoming traffic).
         */
        dynamicCacheEnabled?: pulumi.Input<boolean>;
        /**
         * Scale factor for front-ends.
         */
        frontEndScaleFactor?: pulumi.Input<number>;
        /**
         * Flag that displays whether an ASE has linux workers or not
         */
        hasLinuxWorkers?: pulumi.Input<boolean>;
        /**
         * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
         */
        internalLoadBalancingMode?: pulumi.Input<string>;
        /**
         * Number of IP SSL addresses reserved for the App Service Environment.
         */
        ipsslAddressCount?: pulumi.Input<number>;
        /**
         * Location of the App Service Environment, e.g. "West US".
         */
        location: pulumi.Input<string>;
        /**
         * Number of front-end instances.
         */
        multiRoleCount?: pulumi.Input<number>;
        /**
         * Front-end VM size, e.g. "Medium", "Large".
         */
        multiSize?: pulumi.Input<string>;
        /**
         * Name of the App Service Environment.
         */
        name: pulumi.Input<string>;
        /**
         * Access control list for controlling traffic to the App Service Environment.
         */
        networkAccessControlList?: pulumi.Input<pulumi.Input<inputs.web.NetworkAccessControlEntry>[]>;
        /**
         * Key Vault ID for ILB App Service Environment default SSL certificate
         */
        sslCertKeyVaultId?: pulumi.Input<string>;
        /**
         * Key Vault Secret Name for ILB App Service Environment default SSL certificate
         */
        sslCertKeyVaultSecretName?: pulumi.Input<string>;
        /**
         * <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
         *  (most likely because NSG blocked the incoming traffic).
         */
        suspended?: pulumi.Input<boolean>;
        /**
         * User added ip ranges to whitelist on ASE db
         */
        userWhitelistedIpRanges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Description of the Virtual Network.
         */
        virtualNetwork: pulumi.Input<inputs.web.VirtualNetworkProfile>;
        /**
         * Name of the Virtual Network for the App Service Environment.
         */
        vnetName?: pulumi.Input<string>;
        /**
         * Resource group of the Virtual Network.
         */
        vnetResourceGroupName?: pulumi.Input<string>;
        /**
         * Subnet of the Virtual Network.
         */
        vnetSubnetName?: pulumi.Input<string>;
        /**
         * Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
         */
        workerPools: pulumi.Input<pulumi.Input<inputs.web.WorkerPool>[]>;
    }

    /**
     * Description of an App Service Environment.
     */
    export interface AppServiceEnvironmentResponse {
        /**
         * List of comma separated strings describing which VM sizes are allowed for front-ends.
         */
        allowedMultiSizes: pulumi.Input<string>;
        /**
         * List of comma separated strings describing which VM sizes are allowed for workers.
         */
        allowedWorkerSizes: pulumi.Input<string>;
        /**
         * API Management Account associated with the App Service Environment.
         */
        apiManagementAccountId?: pulumi.Input<string>;
        /**
         * Custom settings for changing the behavior of the App Service Environment.
         */
        clusterSettings?: pulumi.Input<pulumi.Input<inputs.web.NameValuePairResponse>[]>;
        /**
         * Edition of the metadata database for the App Service Environment, e.g. "Standard".
         */
        databaseEdition: pulumi.Input<string>;
        /**
         * Service objective of the metadata database for the App Service Environment, e.g. "S0".
         */
        databaseServiceObjective: pulumi.Input<string>;
        /**
         * Default Scale Factor for FrontEnds.
         */
        defaultFrontEndScaleFactor: pulumi.Input<number>;
        /**
         * DNS suffix of the App Service Environment.
         */
        dnsSuffix?: pulumi.Input<string>;
        /**
         * True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
         * (most likely because NSG blocked the incoming traffic).
         */
        dynamicCacheEnabled?: pulumi.Input<boolean>;
        /**
         * Current total, used, and available worker capacities.
         */
        environmentCapacities: pulumi.Input<pulumi.Input<inputs.web.StampCapacityResponse>[]>;
        /**
         * True/false indicating whether the App Service Environment is healthy.
         */
        environmentIsHealthy: pulumi.Input<boolean>;
        /**
         * Detailed message about with results of the last check of the App Service Environment.
         */
        environmentStatus: pulumi.Input<string>;
        /**
         * Scale factor for front-ends.
         */
        frontEndScaleFactor?: pulumi.Input<number>;
        /**
         * Flag that displays whether an ASE has linux workers or not
         */
        hasLinuxWorkers?: pulumi.Input<boolean>;
        /**
         * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
         */
        internalLoadBalancingMode?: pulumi.Input<string>;
        /**
         * Number of IP SSL addresses reserved for the App Service Environment.
         */
        ipsslAddressCount?: pulumi.Input<number>;
        /**
         * Last deployment action on the App Service Environment.
         */
        lastAction: pulumi.Input<string>;
        /**
         * Result of the last deployment action on the App Service Environment.
         */
        lastActionResult: pulumi.Input<string>;
        /**
         * Location of the App Service Environment, e.g. "West US".
         */
        location: pulumi.Input<string>;
        /**
         * Maximum number of VMs in the App Service Environment.
         */
        maximumNumberOfMachines: pulumi.Input<number>;
        /**
         * Number of front-end instances.
         */
        multiRoleCount?: pulumi.Input<number>;
        /**
         * Front-end VM size, e.g. "Medium", "Large".
         */
        multiSize?: pulumi.Input<string>;
        /**
         * Name of the App Service Environment.
         */
        name: pulumi.Input<string>;
        /**
         * Access control list for controlling traffic to the App Service Environment.
         */
        networkAccessControlList?: pulumi.Input<pulumi.Input<inputs.web.NetworkAccessControlEntryResponse>[]>;
        /**
         * Provisioning state of the App Service Environment.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * Resource group of the App Service Environment.
         */
        resourceGroup: pulumi.Input<string>;
        /**
         * Key Vault ID for ILB App Service Environment default SSL certificate
         */
        sslCertKeyVaultId?: pulumi.Input<string>;
        /**
         * Key Vault Secret Name for ILB App Service Environment default SSL certificate
         */
        sslCertKeyVaultSecretName?: pulumi.Input<string>;
        /**
         * Current status of the App Service Environment.
         */
        status: pulumi.Input<string>;
        /**
         * Subscription of the App Service Environment.
         */
        subscriptionId: pulumi.Input<string>;
        /**
         * <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
         *  (most likely because NSG blocked the incoming traffic).
         */
        suspended?: pulumi.Input<boolean>;
        /**
         * Number of upgrade domains of the App Service Environment.
         */
        upgradeDomains: pulumi.Input<number>;
        /**
         * User added ip ranges to whitelist on ASE db
         */
        userWhitelistedIpRanges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Description of IP SSL mapping for the App Service Environment.
         */
        vipMappings: pulumi.Input<pulumi.Input<inputs.web.VirtualIPMappingResponse>[]>;
        /**
         * Description of the Virtual Network.
         */
        virtualNetwork: pulumi.Input<inputs.web.VirtualNetworkProfileResponse>;
        /**
         * Name of the Virtual Network for the App Service Environment.
         */
        vnetName?: pulumi.Input<string>;
        /**
         * Resource group of the Virtual Network.
         */
        vnetResourceGroupName?: pulumi.Input<string>;
        /**
         * Subnet of the Virtual Network.
         */
        vnetSubnetName?: pulumi.Input<string>;
        /**
         * Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
         */
        workerPools: pulumi.Input<pulumi.Input<inputs.web.WorkerPoolResponse>[]>;
    }

    /**
     * AppServicePlan resource specific properties
     */
    export interface AppServicePlanProperties {
        /**
         * The time when the server farm free offer expires.
         */
        freeOfferExpirationTime?: pulumi.Input<string>;
        /**
         * Specification for the App Service Environment to use for the App Service plan.
         */
        hostingEnvironmentProfile?: pulumi.Input<inputs.web.HostingEnvironmentProfile>;
        /**
         * If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
         */
        hyperV?: pulumi.Input<boolean>;
        /**
         * If <code>true</code>, this App Service Plan owns spot instances.
         */
        isSpot?: pulumi.Input<boolean>;
        /**
         * Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
         */
        isXenon?: pulumi.Input<boolean>;
        /**
         * Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan
         */
        maximumElasticWorkerCount?: pulumi.Input<number>;
        /**
         * If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
         * If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
         */
        perSiteScaling?: pulumi.Input<boolean>;
        /**
         * If Linux app service plan <code>true</code>, <code>false</code> otherwise.
         */
        reserved?: pulumi.Input<boolean>;
        /**
         * The time when the server farm expires. Valid only if it is a spot server farm.
         */
        spotExpirationTime?: pulumi.Input<string>;
        /**
         * Scaling worker count.
         */
        targetWorkerCount?: pulumi.Input<number>;
        /**
         * Scaling worker size ID.
         */
        targetWorkerSizeId?: pulumi.Input<number>;
        /**
         * Target worker tier assigned to the App Service plan.
         */
        workerTierName?: pulumi.Input<string>;
    }

    /**
     * AppServicePlan resource specific properties
     */
    export interface AppServicePlanResponseProperties {
        /**
         * The time when the server farm free offer expires.
         */
        freeOfferExpirationTime?: pulumi.Input<string>;
        /**
         * Geographical location for the App Service plan.
         */
        geoRegion: pulumi.Input<string>;
        /**
         * Specification for the App Service Environment to use for the App Service plan.
         */
        hostingEnvironmentProfile?: pulumi.Input<inputs.web.HostingEnvironmentProfileResponse>;
        /**
         * If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
         */
        hyperV?: pulumi.Input<boolean>;
        /**
         * If <code>true</code>, this App Service Plan owns spot instances.
         */
        isSpot?: pulumi.Input<boolean>;
        /**
         * Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
         */
        isXenon?: pulumi.Input<boolean>;
        /**
         * Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan
         */
        maximumElasticWorkerCount?: pulumi.Input<number>;
        /**
         * Maximum number of instances that can be assigned to this App Service plan.
         */
        maximumNumberOfWorkers: pulumi.Input<number>;
        /**
         * Number of apps assigned to this App Service plan.
         */
        numberOfSites: pulumi.Input<number>;
        /**
         * If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
         * If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
         */
        perSiteScaling?: pulumi.Input<boolean>;
        /**
         * Provisioning state of the App Service Environment.
         */
        provisioningState: pulumi.Input<string>;
        /**
         * If Linux app service plan <code>true</code>, <code>false</code> otherwise.
         */
        reserved?: pulumi.Input<boolean>;
        /**
         * Resource group of the App Service plan.
         */
        resourceGroup: pulumi.Input<string>;
        /**
         * The time when the server farm expires. Valid only if it is a spot server farm.
         */
        spotExpirationTime?: pulumi.Input<string>;
        /**
         * App Service plan status.
         */
        status: pulumi.Input<string>;
        /**
         * App Service plan subscription.
         */
        subscription: pulumi.Input<string>;
        /**
         * Scaling worker count.
         */
        targetWorkerCount?: pulumi.Input<number>;
        /**
         * Scaling worker size ID.
         */
        targetWorkerSizeId?: pulumi.Input<number>;
        /**
         * Target worker tier assigned to the App Service plan.
         */
        workerTierName?: pulumi.Input<string>;
    }

    /**
     * A wrapper for an ARM resource id
     */
    export interface ArmIdWrapperResponse {
        id: pulumi.Input<string>;
    }

    /**
     * Actions which to take by the auto-heal module when a rule is triggered.
     */
    export interface AutoHealActions {
        /**
         * Predefined action to be taken.
         */
        actionType?: pulumi.Input<string>;
        /**
         * Custom action to be taken.
         */
        customAction?: pulumi.Input<inputs.web.AutoHealCustomAction>;
        /**
         * Minimum time the process must execute
         * before taking the action
         */
        minProcessExecutionTime?: pulumi.Input<string>;
    }

    /**
     * Actions which to take by the auto-heal module when a rule is triggered.
     */
    export interface AutoHealActionsResponse {
        /**
         * Predefined action to be taken.
         */
        actionType?: pulumi.Input<string>;
        /**
         * Custom action to be taken.
         */
        customAction?: pulumi.Input<inputs.web.AutoHealCustomActionResponse>;
        /**
         * Minimum time the process must execute
         * before taking the action
         */
        minProcessExecutionTime?: pulumi.Input<string>;
    }

    /**
     * Custom action to be executed
     * when an auto heal rule is triggered.
     */
    export interface AutoHealCustomAction {
        /**
         * Executable to be run.
         */
        exe?: pulumi.Input<string>;
        /**
         * Parameters for the executable.
         */
        parameters?: pulumi.Input<string>;
    }

    /**
     * Custom action to be executed
     * when an auto heal rule is triggered.
     */
    export interface AutoHealCustomActionResponse {
        /**
         * Executable to be run.
         */
        exe?: pulumi.Input<string>;
        /**
         * Parameters for the executable.
         */
        parameters?: pulumi.Input<string>;
    }

    /**
     * Rules that can be defined for auto-heal.
     */
    export interface AutoHealRules {
        /**
         * Actions to be executed when a rule is triggered.
         */
        actions?: pulumi.Input<inputs.web.AutoHealActions>;
        /**
         * Conditions that describe when to execute the auto-heal actions.
         */
        triggers?: pulumi.Input<inputs.web.AutoHealTriggers>;
    }

    /**
     * Rules that can be defined for auto-heal.
     */
    export interface AutoHealRulesResponse {
        /**
         * Actions to be executed when a rule is triggered.
         */
        actions?: pulumi.Input<inputs.web.AutoHealActionsResponse>;
        /**
         * Conditions that describe when to execute the auto-heal actions.
         */
        triggers?: pulumi.Input<inputs.web.AutoHealTriggersResponse>;
    }

    /**
     * Triggers for auto-heal.
     */
    export interface AutoHealTriggers {
        /**
         * A rule based on private bytes.
         */
        privateBytesInKB?: pulumi.Input<number>;
        /**
         * A rule based on total requests.
         */
        requests?: pulumi.Input<inputs.web.RequestsBasedTrigger>;
        /**
         * A rule based on request execution time.
         */
        slowRequests?: pulumi.Input<inputs.web.SlowRequestsBasedTrigger>;
        /**
         * A rule based on status codes.
         */
        statusCodes?: pulumi.Input<pulumi.Input<inputs.web.StatusCodesBasedTrigger>[]>;
    }

    /**
     * Triggers for auto-heal.
     */
    export interface AutoHealTriggersResponse {
        /**
         * A rule based on private bytes.
         */
        privateBytesInKB?: pulumi.Input<number>;
        /**
         * A rule based on total requests.
         */
        requests?: pulumi.Input<inputs.web.RequestsBasedTriggerResponse>;
        /**
         * A rule based on request execution time.
         */
        slowRequests?: pulumi.Input<inputs.web.SlowRequestsBasedTriggerResponse>;
        /**
         * A rule based on status codes.
         */
        statusCodes?: pulumi.Input<pulumi.Input<inputs.web.StatusCodesBasedTriggerResponse>[]>;
    }

    /**
     * Describes the capabilities/features allowed for a specific SKU.
     */
    export interface Capability {
        /**
         * Name of the SKU capability.
         */
        name?: pulumi.Input<string>;
        /**
         * Reason of the SKU capability.
         */
        reason?: pulumi.Input<string>;
        /**
         * Value of the SKU capability.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Describes the capabilities/features allowed for a specific SKU.
     */
    export interface CapabilityResponse {
        /**
         * Name of the SKU capability.
         */
        name?: pulumi.Input<string>;
        /**
         * Reason of the SKU capability.
         */
        reason?: pulumi.Input<string>;
        /**
         * Value of the SKU capability.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Certificate resource specific properties
     */
    export interface CertificateProperties {
        /**
         * CNAME of the certificate to be issued via free certificate
         */
        canonicalName?: pulumi.Input<string>;
        /**
         * Host names the certificate applies to.
         */
        hostNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Key Vault Csm resource Id.
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * Key Vault secret name.
         */
        keyVaultSecretName?: pulumi.Input<string>;
        /**
         * Certificate password.
         */
        password: pulumi.Input<string>;
        /**
         * Pfx blob.
         */
        pfxBlob?: pulumi.Input<string>;
        /**
         * Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
         */
        serverFarmId?: pulumi.Input<string>;
    }

    /**
     * Certificate resource specific properties
     */
    export interface CertificateResponseProperties {
        /**
         * CNAME of the certificate to be issued via free certificate
         */
        canonicalName?: pulumi.Input<string>;
        /**
         * Raw bytes of .cer file
         */
        cerBlob: pulumi.Input<string>;
        /**
         * Certificate expiration date.
         */
        expirationDate: pulumi.Input<string>;
        /**
         * Friendly name of the certificate.
         */
        friendlyName: pulumi.Input<string>;
        /**
         * Host names the certificate applies to.
         */
        hostNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specification for the App Service Environment to use for the certificate.
         */
        hostingEnvironmentProfile: pulumi.Input<inputs.web.HostingEnvironmentProfileResponse>;
        /**
         * Certificate issue Date.
         */
        issueDate: pulumi.Input<string>;
        /**
         * Certificate issuer.
         */
        issuer: pulumi.Input<string>;
        /**
         * Key Vault Csm resource Id.
         */
        keyVaultId?: pulumi.Input<string>;
        /**
         * Key Vault secret name.
         */
        keyVaultSecretName?: pulumi.Input<string>;
        /**
         * Status of the Key Vault secret.
         */
        keyVaultSecretStatus: pulumi.Input<string>;
        /**
         * Certificate password.
         */
        password: pulumi.Input<string>;
        /**
         * Pfx blob.
         */
        pfxBlob?: pulumi.Input<string>;
        /**
         * Public key hash.
         */
        publicKeyHash: pulumi.Input<string>;
        /**
         * Self link.
         */
        selfLink: pulumi.Input<string>;
        /**
         * Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
         */
        serverFarmId?: pulumi.Input<string>;
        /**
         * App name.
         */
        siteName: pulumi.Input<string>;
        /**
         * Subject name of the certificate.
         */
        subjectName: pulumi.Input<string>;
        /**
         * Certificate thumbprint.
         */
        thumbprint: pulumi.Input<string>;
        /**
         * Is the certificate valid?.
         */
        valid: pulumi.Input<boolean>;
    }

    /**
     * Information needed for cloning operation.
     */
    export interface CloningInfo {
        /**
         * Application setting overrides for cloned app. If specified, these settings override the settings cloned 
         * from source app. Otherwise, application settings from source app are retained.
         */
        appSettingsOverrides?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
         */
        cloneCustomHostNames?: pulumi.Input<boolean>;
        /**
         * <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
         */
        cloneSourceControl?: pulumi.Input<boolean>;
        /**
         * <code>true</code> to configure load balancing for source and destination app.
         */
        configureLoadBalancing?: pulumi.Input<boolean>;
        /**
         * Correlation ID of cloning operation. This ID ties multiple cloning operations
         * together to use the same snapshot.
         */
        correlationId?: pulumi.Input<string>;
        /**
         * App Service Environment.
         */
        hostingEnvironment?: pulumi.Input<string>;
        /**
         * <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
         */
        overwrite?: pulumi.Input<boolean>;
        /**
         * ARM resource ID of the source app. App resource ID is of the form 
         * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and 
         * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
         */
        sourceWebAppId: pulumi.Input<string>;
        /**
         * Location of source app ex: West US or North Europe
         */
        sourceWebAppLocation?: pulumi.Input<string>;
        /**
         * ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form 
         * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
         */
        trafficManagerProfileId?: pulumi.Input<string>;
        /**
         * Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
         */
        trafficManagerProfileName?: pulumi.Input<string>;
    }

    /**
     * Information needed for cloning operation.
     */
    export interface CloningInfoResponse {
        /**
         * Application setting overrides for cloned app. If specified, these settings override the settings cloned 
         * from source app. Otherwise, application settings from source app are retained.
         */
        appSettingsOverrides?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
         */
        cloneCustomHostNames?: pulumi.Input<boolean>;
        /**
         * <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
         */
        cloneSourceControl?: pulumi.Input<boolean>;
        /**
         * <code>true</code> to configure load balancing for source and destination app.
         */
        configureLoadBalancing?: pulumi.Input<boolean>;
        /**
         * Correlation ID of cloning operation. This ID ties multiple cloning operations
         * together to use the same snapshot.
         */
        correlationId?: pulumi.Input<string>;
        /**
         * App Service Environment.
         */
        hostingEnvironment?: pulumi.Input<string>;
        /**
         * <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
         */
        overwrite?: pulumi.Input<boolean>;
        /**
         * ARM resource ID of the source app. App resource ID is of the form 
         * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and 
         * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
         */
        sourceWebAppId: pulumi.Input<string>;
        /**
         * Location of source app ex: West US or North Europe
         */
        sourceWebAppLocation?: pulumi.Input<string>;
        /**
         * ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form 
         * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
         */
        trafficManagerProfileId?: pulumi.Input<string>;
        /**
         * Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
         */
        trafficManagerProfileName?: pulumi.Input<string>;
    }

    /**
     * Database connection string information.
     */
    export interface ConnStringInfo {
        /**
         * Connection string value.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * Name of connection string.
         */
        name?: pulumi.Input<string>;
        /**
         * Type of database.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Database connection string information.
     */
    export interface ConnStringInfoResponse {
        /**
         * Connection string value.
         */
        connectionString?: pulumi.Input<string>;
        /**
         * Name of connection string.
         */
        name?: pulumi.Input<string>;
        /**
         * Type of database.
         */
        type?: pulumi.Input<string>;
    }

    /**
     * Cross-Origin Resource Sharing (CORS) settings for the app.
     */
    export interface CorsSettings {
        /**
         * Gets or sets the list of origins that should be allowed to make cross-origin
         * calls (for example: http://example.com:12345). Use "*" to allow all.
         */
        allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Gets or sets whether CORS requests with credentials are allowed. See 
         * https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
         * for more details.
         */
        supportCredentials?: pulumi.Input<boolean>;
    }

    /**
     * Cross-Origin Resource Sharing (CORS) settings for the app.
     */
    export interface CorsSettingsResponse {
        /**
         * Gets or sets the list of origins that should be allowed to make cross-origin
         * calls (for example: http://example.com:12345). Use "*" to allow all.
         */
        allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Gets or sets whether CORS requests with credentials are allowed. See 
         * https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
         * for more details.
         */
        supportCredentials?: pulumi.Input<boolean>;
    }

    /**
     * Deployment resource specific properties
     */
    export interface DeploymentProperties {
        /**
         * True if deployment is currently active, false if completed and null if not started.
         */
        active?: pulumi.Input<boolean>;
        /**
         * Who authored the deployment.
         */
        author?: pulumi.Input<string>;
        /**
         * Author email.
         */
        author_email?: pulumi.Input<string>;
        /**
         * Who performed the deployment.
         */
        deployer?: pulumi.Input<string>;
        /**
         * Details on deployment.
         */
        details?: pulumi.Input<string>;
        /**
         * End time.
         */
        end_time?: pulumi.Input<string>;
        /**
         * Details about deployment status.
         */
        message?: pulumi.Input<string>;
        /**
         * Start time.
         */
        start_time?: pulumi.Input<string>;
        /**
         * Deployment status.
         */
        status?: pulumi.Input<number>;
    }

    /**
     * Deployment resource specific properties
     */
    export interface DeploymentResponseProperties {
        /**
         * True if deployment is currently active, false if completed and null if not started.
         */
        active?: pulumi.Input<boolean>;
        /**
         * Who authored the deployment.
         */
        author?: pulumi.Input<string>;
        /**
         * Author email.
         */
        author_email?: pulumi.Input<string>;
        /**
         * Who performed the deployment.
         */
        deployer?: pulumi.Input<string>;
        /**
         * Details on deployment.
         */
        details?: pulumi.Input<string>;
        /**
         * End time.
         */
        end_time?: pulumi.Input<string>;
        /**
         * Details about deployment status.
         */
        message?: pulumi.Input<string>;
        /**
         * Start time.
         */
        start_time?: pulumi.Input<string>;
        /**
         * Deployment status.
         */
        status?: pulumi.Input<number>;
    }

    /**
     * Routing rules in production experiments.
     */
    export interface Experiments {
        /**
         * List of ramp-up rules.
         */
        rampUpRules?: pulumi.Input<pulumi.Input<inputs.web.RampUpRule>[]>;
    }

    /**
     * Routing rules in production experiments.
     */
    export interface ExperimentsResponse {
        /**
         * List of ramp-up rules.
         */
        rampUpRules?: pulumi.Input<pulumi.Input<inputs.web.RampUpRuleResponse>[]>;
    }

    /**
     * FunctionEnvelope resource specific properties
     */
    export interface FunctionEnvelopeProperties {
        /**
         * Config information.
         */
        config?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Config URI.
         */
        config_href?: pulumi.Input<string>;
        /**
         * File list.
         */
        files?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Function App ID.
         */
        function_app_id?: pulumi.Input<string>;
        /**
         * Function URI.
         */
        href?: pulumi.Input<string>;
        /**
         * The invocation URL
         */
        invoke_url_template?: pulumi.Input<string>;
        /**
         * Gets or sets a value indicating whether the function is disabled
         */
        isDisabled?: pulumi.Input<boolean>;
        /**
         * The function language
         */
        language?: pulumi.Input<string>;
        /**
         * Script URI.
         */
        script_href?: pulumi.Input<string>;
        /**
         * Script root path URI.
         */
        script_root_path_href?: pulumi.Input<string>;
        /**
         * Secrets file URI.
         */
        secrets_file_href?: pulumi.Input<string>;
        /**
         * Test data used when testing via the Azure Portal.
         */
        test_data?: pulumi.Input<string>;
        /**
         * Test data URI.
         */
        test_data_href?: pulumi.Input<string>;
    }

    /**
     * FunctionEnvelope resource specific properties
     */
    export interface FunctionEnvelopeResponseProperties {
        /**
         * Config information.
         */
        config?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Config URI.
         */
        config_href?: pulumi.Input<string>;
        /**
         * File list.
         */
        files?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Function App ID.
         */
        function_app_id?: pulumi.Input<string>;
        /**
         * Function URI.
         */
        href?: pulumi.Input<string>;
        /**
         * The invocation URL
         */
        invoke_url_template?: pulumi.Input<string>;
        /**
         * Gets or sets a value indicating whether the function is disabled
         */
        isDisabled?: pulumi.Input<boolean>;
        /**
         * The function language
         */
        language?: pulumi.Input<string>;
        /**
         * Script URI.
         */
        script_href?: pulumi.Input<string>;
        /**
         * Script root path URI.
         */
        script_root_path_href?: pulumi.Input<string>;
        /**
         * Secrets file URI.
         */
        secrets_file_href?: pulumi.Input<string>;
        /**
         * Test data used when testing via the Azure Portal.
         */
        test_data?: pulumi.Input<string>;
        /**
         * Test data URI.
         */
        test_data_href?: pulumi.Input<string>;
    }

    /**
     * The IIS handler mappings used to define which handler processes HTTP requests with certain extension. 
     * For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
     */
    export interface HandlerMapping {
        /**
         * Command-line arguments to be passed to the script processor.
         */
        arguments?: pulumi.Input<string>;
        /**
         * Requests with this extension will be handled using the specified FastCGI application.
         */
        extension?: pulumi.Input<string>;
        /**
         * The absolute path to the FastCGI application.
         */
        scriptProcessor?: pulumi.Input<string>;
    }

    /**
     * The IIS handler mappings used to define which handler processes HTTP requests with certain extension. 
     * For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
     */
    export interface HandlerMappingResponse {
        /**
         * Command-line arguments to be passed to the script processor.
         */
        arguments?: pulumi.Input<string>;
        /**
         * Requests with this extension will be handled using the specified FastCGI application.
         */
        extension?: pulumi.Input<string>;
        /**
         * The absolute path to the FastCGI application.
         */
        scriptProcessor?: pulumi.Input<string>;
    }

    /**
     * HostNameBinding resource specific properties
     */
    export interface HostNameBindingProperties {
        /**
         * Azure resource name.
         */
        azureResourceName?: pulumi.Input<string>;
        /**
         * Azure resource type.
         */
        azureResourceType?: pulumi.Input<string>;
        /**
         * Custom DNS record type.
         */
        customHostNameDnsRecordType?: pulumi.Input<string>;
        /**
         * Fully qualified ARM domain resource URI.
         */
        domainId?: pulumi.Input<string>;
        /**
         * Hostname type.
         */
        hostNameType?: pulumi.Input<string>;
        /**
         * App Service app name.
         */
        siteName?: pulumi.Input<string>;
        /**
         * SSL type
         */
        sslState?: pulumi.Input<string>;
        /**
         * SSL certificate thumbprint
         */
        thumbprint?: pulumi.Input<string>;
    }

    /**
     * HostNameBinding resource specific properties
     */
    export interface HostNameBindingResponseProperties {
        /**
         * Azure resource name.
         */
        azureResourceName?: pulumi.Input<string>;
        /**
         * Azure resource type.
         */
        azureResourceType?: pulumi.Input<string>;
        /**
         * Custom DNS record type.
         */
        customHostNameDnsRecordType?: pulumi.Input<string>;
        /**
         * Fully qualified ARM domain resource URI.
         */
        domainId?: pulumi.Input<string>;
        /**
         * Hostname type.
         */
        hostNameType?: pulumi.Input<string>;
        /**
         * App Service app name.
         */
        siteName?: pulumi.Input<string>;
        /**
         * SSL type
         */
        sslState?: pulumi.Input<string>;
        /**
         * SSL certificate thumbprint
         */
        thumbprint?: pulumi.Input<string>;
        /**
         * Virtual IP address assigned to the hostname if IP based SSL is enabled.
         */
        virtualIP: pulumi.Input<string>;
    }

    /**
     * SSL-enabled hostname.
     */
    export interface HostNameSslState {
        /**
         * Indicates whether the hostname is a standard or repository hostname.
         */
        hostType?: pulumi.Input<string>;
        /**
         * Hostname.
         */
        name?: pulumi.Input<string>;
        /**
         * SSL type.
         */
        sslState?: pulumi.Input<string>;
        /**
         * SSL certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
        /**
         * Set to <code>true</code> to update existing hostname.
         */
        toUpdate?: pulumi.Input<boolean>;
        /**
         * Virtual IP address assigned to the hostname if IP based SSL is enabled.
         */
        virtualIP?: pulumi.Input<string>;
    }

    /**
     * SSL-enabled hostname.
     */
    export interface HostNameSslStateResponse {
        /**
         * Indicates whether the hostname is a standard or repository hostname.
         */
        hostType?: pulumi.Input<string>;
        /**
         * Hostname.
         */
        name?: pulumi.Input<string>;
        /**
         * SSL type.
         */
        sslState?: pulumi.Input<string>;
        /**
         * SSL certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
        /**
         * Set to <code>true</code> to update existing hostname.
         */
        toUpdate?: pulumi.Input<boolean>;
        /**
         * Virtual IP address assigned to the hostname if IP based SSL is enabled.
         */
        virtualIP?: pulumi.Input<string>;
    }

    /**
     * Specification for an App Service Environment to use for this resource.
     */
    export interface HostingEnvironmentProfile {
        /**
         * Resource ID of the App Service Environment.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Specification for an App Service Environment to use for this resource.
     */
    export interface HostingEnvironmentProfileResponse {
        /**
         * Resource ID of the App Service Environment.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the App Service Environment.
         */
        name: pulumi.Input<string>;
        /**
         * Resource type of the App Service Environment.
         */
        type: pulumi.Input<string>;
    }

    /**
     * HybridConnection resource specific properties
     */
    export interface HybridConnectionProperties {
        /**
         * The hostname of the endpoint.
         */
        hostname?: pulumi.Input<string>;
        /**
         * The port of the endpoint.
         */
        port?: pulumi.Input<number>;
        /**
         * The ARM URI to the Service Bus relay.
         */
        relayArmUri?: pulumi.Input<string>;
        /**
         * The name of the Service Bus relay.
         */
        relayName?: pulumi.Input<string>;
        /**
         * The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
         */
        sendKeyName?: pulumi.Input<string>;
        /**
         * The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
         * normally, use the POST /listKeys API instead.
         */
        sendKeyValue?: pulumi.Input<string>;
        /**
         * The name of the Service Bus namespace.
         */
        serviceBusNamespace?: pulumi.Input<string>;
        /**
         * The suffix for the service bus endpoint. By default this is .servicebus.windows.net
         */
        serviceBusSuffix?: pulumi.Input<string>;
    }

    /**
     * HybridConnection resource specific properties
     */
    export interface HybridConnectionResponseProperties {
        /**
         * The hostname of the endpoint.
         */
        hostname?: pulumi.Input<string>;
        /**
         * The port of the endpoint.
         */
        port?: pulumi.Input<number>;
        /**
         * The ARM URI to the Service Bus relay.
         */
        relayArmUri?: pulumi.Input<string>;
        /**
         * The name of the Service Bus relay.
         */
        relayName?: pulumi.Input<string>;
        /**
         * The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
         */
        sendKeyName?: pulumi.Input<string>;
        /**
         * The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
         * normally, use the POST /listKeys API instead.
         */
        sendKeyValue?: pulumi.Input<string>;
        /**
         * The name of the Service Bus namespace.
         */
        serviceBusNamespace?: pulumi.Input<string>;
        /**
         * The suffix for the service bus endpoint. By default this is .servicebus.windows.net
         */
        serviceBusSuffix?: pulumi.Input<string>;
    }

    /**
     * Identifier resource specific properties
     */
    export interface IdentifierProperties {
        /**
         * String representation of the identity.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Identifier resource specific properties
     */
    export interface IdentifierResponseProperties {
        /**
         * String representation of the identity.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * IP security restriction on an app.
     */
    export interface IpSecurityRestriction {
        /**
         * Allow or Deny access for this IP range.
         */
        action?: pulumi.Input<string>;
        /**
         * IP restriction rule description.
         */
        description?: pulumi.Input<string>;
        /**
         * IP address the security restriction is valid for.
         * It can be in form of pure ipv4 address (required SubnetMask property) or
         * CIDR notation such as ipv4/mask (leading bit match). For CIDR,
         * SubnetMask property must not be specified.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * IP restriction rule name.
         */
        name?: pulumi.Input<string>;
        /**
         * Priority of IP restriction rule.
         */
        priority?: pulumi.Input<number>;
        /**
         * Subnet mask for the range of IP addresses the restriction is valid for.
         */
        subnetMask?: pulumi.Input<string>;
        /**
         * (internal) Subnet traffic tag
         */
        subnetTrafficTag?: pulumi.Input<number>;
        /**
         * Defines what this IP filter will be used for. This is to support IP filtering on proxies.
         */
        tag?: pulumi.Input<string>;
        /**
         * Virtual network resource id
         */
        vnetSubnetResourceId?: pulumi.Input<string>;
        /**
         * (internal) Vnet traffic tag
         */
        vnetTrafficTag?: pulumi.Input<number>;
    }

    /**
     * IP security restriction on an app.
     */
    export interface IpSecurityRestrictionResponse {
        /**
         * Allow or Deny access for this IP range.
         */
        action?: pulumi.Input<string>;
        /**
         * IP restriction rule description.
         */
        description?: pulumi.Input<string>;
        /**
         * IP address the security restriction is valid for.
         * It can be in form of pure ipv4 address (required SubnetMask property) or
         * CIDR notation such as ipv4/mask (leading bit match). For CIDR,
         * SubnetMask property must not be specified.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * IP restriction rule name.
         */
        name?: pulumi.Input<string>;
        /**
         * Priority of IP restriction rule.
         */
        priority?: pulumi.Input<number>;
        /**
         * Subnet mask for the range of IP addresses the restriction is valid for.
         */
        subnetMask?: pulumi.Input<string>;
        /**
         * (internal) Subnet traffic tag
         */
        subnetTrafficTag?: pulumi.Input<number>;
        /**
         * Defines what this IP filter will be used for. This is to support IP filtering on proxies.
         */
        tag?: pulumi.Input<string>;
        /**
         * Virtual network resource id
         */
        vnetSubnetResourceId?: pulumi.Input<string>;
        /**
         * (internal) Vnet traffic tag
         */
        vnetTrafficTag?: pulumi.Input<number>;
    }

    /**
     * Managed service identity.
     */
    export interface ManagedServiceIdentity {
        /**
         * Type of managed service identity.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Managed service identity.
     */
    export interface ManagedServiceIdentityResponse {
        /**
         * Principal Id of managed service identity.
         */
        principalId: pulumi.Input<string>;
        /**
         * Tenant of managed service identity.
         */
        tenantId: pulumi.Input<string>;
        /**
         * Type of managed service identity.
         */
        type?: pulumi.Input<string>;
        /**
         * The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
         */
        userAssignedIdentities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    /**
     * Name value pair.
     */
    export interface NameValuePair {
        /**
         * Pair name.
         */
        name?: pulumi.Input<string>;
        /**
         * Pair value.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Name value pair.
     */
    export interface NameValuePairResponse {
        /**
         * Pair name.
         */
        name?: pulumi.Input<string>;
        /**
         * Pair value.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Network access control entry.
     */
    export interface NetworkAccessControlEntry {
        /**
         * Action object.
         */
        action?: pulumi.Input<string>;
        /**
         * Description of network access control entry.
         */
        description?: pulumi.Input<string>;
        /**
         * Order of precedence.
         */
        order?: pulumi.Input<number>;
        /**
         * Remote subnet.
         */
        remoteSubnet?: pulumi.Input<string>;
    }

    /**
     * Network access control entry.
     */
    export interface NetworkAccessControlEntryResponse {
        /**
         * Action object.
         */
        action?: pulumi.Input<string>;
        /**
         * Description of network access control entry.
         */
        description?: pulumi.Input<string>;
        /**
         * Order of precedence.
         */
        order?: pulumi.Input<number>;
        /**
         * Remote subnet.
         */
        remoteSubnet?: pulumi.Input<string>;
    }

    /**
     * PremierAddOn resource specific properties
     */
    export interface PremierAddOnProperties {
        /**
         * Premier add on Marketplace offer.
         */
        marketplaceOffer?: pulumi.Input<string>;
        /**
         * Premier add on Marketplace publisher.
         */
        marketplacePublisher?: pulumi.Input<string>;
        /**
         * Premier add on Product.
         */
        product?: pulumi.Input<string>;
        /**
         * Premier add on SKU.
         */
        sku?: pulumi.Input<string>;
        /**
         * Premier add on Vendor.
         */
        vendor?: pulumi.Input<string>;
    }

    /**
     * PremierAddOn resource specific properties
     */
    export interface PremierAddOnResponseProperties {
        /**
         * Premier add on Marketplace offer.
         */
        marketplaceOffer?: pulumi.Input<string>;
        /**
         * Premier add on Marketplace publisher.
         */
        marketplacePublisher?: pulumi.Input<string>;
        /**
         * Premier add on Product.
         */
        product?: pulumi.Input<string>;
        /**
         * Premier add on SKU.
         */
        sku?: pulumi.Input<string>;
        /**
         * Premier add on Vendor.
         */
        vendor?: pulumi.Input<string>;
    }

    /**
     * A request to approve or reject a private endpoint connection
     */
    export interface PrivateLinkConnectionApprovalRequest {
        /**
         * The state of a private link connection
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.web.PrivateLinkConnectionState>;
    }

    /**
     * The state of a private link connection
     */
    export interface PrivateLinkConnectionState {
        /**
         * ActionsRequired for a private link connection
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * Description of a private link connection
         */
        description?: pulumi.Input<string>;
        /**
         * Status of a private link connection
         */
        status?: pulumi.Input<string>;
    }

    /**
     * The state of a private link connection
     */
    export interface PrivateLinkConnectionStateResponse {
        /**
         * ActionsRequired for a private link connection
         */
        actionsRequired?: pulumi.Input<string>;
        /**
         * Description of a private link connection
         */
        description?: pulumi.Input<string>;
        /**
         * Status of a private link connection
         */
        status?: pulumi.Input<string>;
    }

    /**
     * PublicCertificate resource specific properties
     */
    export interface PublicCertificateProperties {
        /**
         * Public Certificate byte array
         */
        blob?: pulumi.Input<string>;
        /**
         * Public Certificate Location
         */
        publicCertificateLocation?: pulumi.Input<string>;
    }

    /**
     * PublicCertificate resource specific properties
     */
    export interface PublicCertificateResponseProperties {
        /**
         * Public Certificate byte array
         */
        blob?: pulumi.Input<string>;
        /**
         * Public Certificate Location
         */
        publicCertificateLocation?: pulumi.Input<string>;
        /**
         * Certificate Thumbprint
         */
        thumbprint: pulumi.Input<string>;
    }

    /**
     * Push settings for the App.
     */
    export interface PushSettings {
        /**
         * Kind of resource.
         */
        kind?: pulumi.Input<string>;
        /**
         * PushSettings resource specific properties
         */
        properties?: pulumi.Input<inputs.web.PushSettingsProperties>;
    }

    /**
     * PushSettings resource specific properties
     */
    export interface PushSettingsProperties {
        /**
         * Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
         */
        dynamicTagsJson?: pulumi.Input<string>;
        /**
         * Gets or sets a flag indicating whether the Push endpoint is enabled.
         */
        isPushEnabled: pulumi.Input<boolean>;
        /**
         * Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
         */
        tagWhitelistJson?: pulumi.Input<string>;
        /**
         * Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
         * Tags can consist of alphanumeric characters and the following:
         * '_', '@', '#', '.', ':', '-'. 
         * Validation should be performed at the PushRequestHandler.
         */
        tagsRequiringAuth?: pulumi.Input<string>;
    }

    /**
     * Push settings for the App.
     */
    export interface PushSettingsResponse {
        /**
         * Resource Id.
         */
        id: pulumi.Input<string>;
        /**
         * Kind of resource.
         */
        kind?: pulumi.Input<string>;
        /**
         * Resource Name.
         */
        name: pulumi.Input<string>;
        /**
         * PushSettings resource specific properties
         */
        properties?: pulumi.Input<inputs.web.PushSettingsResponseProperties>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * PushSettings resource specific properties
     */
    export interface PushSettingsResponseProperties {
        /**
         * Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
         */
        dynamicTagsJson?: pulumi.Input<string>;
        /**
         * Gets or sets a flag indicating whether the Push endpoint is enabled.
         */
        isPushEnabled: pulumi.Input<boolean>;
        /**
         * Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
         */
        tagWhitelistJson?: pulumi.Input<string>;
        /**
         * Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
         * Tags can consist of alphanumeric characters and the following:
         * '_', '@', '#', '.', ':', '-'. 
         * Validation should be performed at the PushRequestHandler.
         */
        tagsRequiringAuth?: pulumi.Input<string>;
    }

    /**
     * Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
     */
    export interface RampUpRule {
        /**
         * Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
         */
        actionHostName?: pulumi.Input<string>;
        /**
         * Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
         * https://www.siteextensions.net/packages/TiPCallback/
         */
        changeDecisionCallbackUrl?: pulumi.Input<string>;
        /**
         * Specifies interval in minutes to reevaluate ReroutePercentage.
         */
        changeIntervalInMinutes?: pulumi.Input<number>;
        /**
         * In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or 
         * <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm 
         * can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
         */
        changeStep?: pulumi.Input<number>;
        /**
         * Specifies upper boundary below which ReroutePercentage will stay.
         */
        maxReroutePercentage?: pulumi.Input<number>;
        /**
         * Specifies lower boundary above which ReroutePercentage will stay.
         */
        minReroutePercentage?: pulumi.Input<number>;
        /**
         * Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
         */
        name?: pulumi.Input<string>;
        /**
         * Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
         */
        reroutePercentage?: pulumi.Input<number>;
    }

    /**
     * Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
     */
    export interface RampUpRuleResponse {
        /**
         * Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
         */
        actionHostName?: pulumi.Input<string>;
        /**
         * Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
         * https://www.siteextensions.net/packages/TiPCallback/
         */
        changeDecisionCallbackUrl?: pulumi.Input<string>;
        /**
         * Specifies interval in minutes to reevaluate ReroutePercentage.
         */
        changeIntervalInMinutes?: pulumi.Input<number>;
        /**
         * In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or 
         * <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm 
         * can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
         */
        changeStep?: pulumi.Input<number>;
        /**
         * Specifies upper boundary below which ReroutePercentage will stay.
         */
        maxReroutePercentage?: pulumi.Input<number>;
        /**
         * Specifies lower boundary above which ReroutePercentage will stay.
         */
        minReroutePercentage?: pulumi.Input<number>;
        /**
         * Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
         */
        name?: pulumi.Input<string>;
        /**
         * Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
         */
        reroutePercentage?: pulumi.Input<number>;
    }

    /**
     * RelayServiceConnectionEntity resource specific properties
     */
    export interface RelayServiceConnectionEntityProperties {
        biztalkUri?: pulumi.Input<string>;
        entityConnectionString?: pulumi.Input<string>;
        entityName?: pulumi.Input<string>;
        hostname?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        resourceConnectionString?: pulumi.Input<string>;
        resourceType?: pulumi.Input<string>;
    }

    /**
     * RelayServiceConnectionEntity resource specific properties
     */
    export interface RelayServiceConnectionEntityResponseProperties {
        biztalkUri?: pulumi.Input<string>;
        entityConnectionString?: pulumi.Input<string>;
        entityName?: pulumi.Input<string>;
        hostname?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        resourceConnectionString?: pulumi.Input<string>;
        resourceType?: pulumi.Input<string>;
    }

    /**
     * A remote private endpoint connection
     */
    export interface RemotePrivateEndpointConnectionResponse {
        /**
         * PrivateEndpoint of a remote private endpoint connection
         */
        privateEndpoint?: pulumi.Input<inputs.web.ArmIdWrapperResponse>;
        /**
         * The state of a private link connection
         */
        privateLinkServiceConnectionState?: pulumi.Input<inputs.web.PrivateLinkConnectionStateResponse>;
        provisioningState: pulumi.Input<string>;
    }

    /**
     * Trigger based on total requests.
     */
    export interface RequestsBasedTrigger {
        /**
         * Request Count.
         */
        count?: pulumi.Input<number>;
        /**
         * Time interval.
         */
        timeInterval?: pulumi.Input<string>;
    }

    /**
     * Trigger based on total requests.
     */
    export interface RequestsBasedTriggerResponse {
        /**
         * Request Count.
         */
        count?: pulumi.Input<number>;
        /**
         * Time interval.
         */
        timeInterval?: pulumi.Input<string>;
    }

    /**
     * Configuration of an App Service app.
     */
    export interface SiteConfig {
        /**
         * <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
         */
        alwaysOn?: pulumi.Input<boolean>;
        /**
         * Information about the formal API definition for the app.
         */
        apiDefinition?: pulumi.Input<inputs.web.ApiDefinitionInfo>;
        /**
         * Azure API management settings linked to the app.
         */
        apiManagementConfig?: pulumi.Input<inputs.web.ApiManagementConfig>;
        /**
         * App command line to launch.
         */
        appCommandLine?: pulumi.Input<string>;
        /**
         * Application settings.
         */
        appSettings?: pulumi.Input<pulumi.Input<inputs.web.NameValuePair>[]>;
        /**
         * <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
         */
        autoHealEnabled?: pulumi.Input<boolean>;
        /**
         * Auto Heal rules.
         */
        autoHealRules?: pulumi.Input<inputs.web.AutoHealRules>;
        /**
         * Auto-swap slot name.
         */
        autoSwapSlotName?: pulumi.Input<string>;
        /**
         * Connection strings.
         */
        connectionStrings?: pulumi.Input<pulumi.Input<inputs.web.ConnStringInfo>[]>;
        /**
         * Cross-Origin Resource Sharing (CORS) settings.
         */
        cors?: pulumi.Input<inputs.web.CorsSettings>;
        /**
         * Default documents.
         */
        defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
         */
        detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
        /**
         * Document root.
         */
        documentRoot?: pulumi.Input<string>;
        /**
         * This is work around for polymorphic types.
         */
        experiments?: pulumi.Input<inputs.web.Experiments>;
        /**
         * State of FTP / FTPS service
         */
        ftpsState?: pulumi.Input<string>;
        /**
         * Handler mappings.
         */
        handlerMappings?: pulumi.Input<pulumi.Input<inputs.web.HandlerMapping>[]>;
        /**
         * Health check path
         */
        healthCheckPath?: pulumi.Input<string>;
        /**
         * Http20Enabled: configures a web site to allow clients to connect over http2.0
         */
        http20Enabled?: pulumi.Input<boolean>;
        /**
         * <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
         */
        httpLoggingEnabled?: pulumi.Input<boolean>;
        /**
         * IP security restrictions for main.
         */
        ipSecurityRestrictions?: pulumi.Input<pulumi.Input<inputs.web.IpSecurityRestriction>[]>;
        /**
         * Java container.
         */
        javaContainer?: pulumi.Input<string>;
        /**
         * Java container version.
         */
        javaContainerVersion?: pulumi.Input<string>;
        /**
         * Java version.
         */
        javaVersion?: pulumi.Input<string>;
        /**
         * Site limits.
         */
        limits?: pulumi.Input<inputs.web.SiteLimits>;
        /**
         * Linux App Framework and version
         */
        linuxFxVersion?: pulumi.Input<string>;
        /**
         * Site load balancing.
         */
        loadBalancing?: pulumi.Input<string>;
        /**
         * <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
         */
        localMySqlEnabled?: pulumi.Input<boolean>;
        /**
         * HTTP logs directory size limit.
         */
        logsDirectorySizeLimit?: pulumi.Input<number>;
        /**
         * Managed pipeline mode.
         */
        managedPipelineMode?: pulumi.Input<string>;
        /**
         * Managed Service Identity Id
         */
        managedServiceIdentityId?: pulumi.Input<number>;
        /**
         * MinTlsVersion: configures the minimum version of TLS required for SSL requests
         */
        minTlsVersion?: pulumi.Input<string>;
        /**
         * .NET Framework version.
         */
        netFrameworkVersion?: pulumi.Input<string>;
        /**
         * Version of Node.js.
         */
        nodeVersion?: pulumi.Input<string>;
        /**
         * Number of workers.
         */
        numberOfWorkers?: pulumi.Input<number>;
        /**
         * Version of PHP.
         */
        phpVersion?: pulumi.Input<string>;
        /**
         * Version of PowerShell.
         */
        powerShellVersion?: pulumi.Input<string>;
        /**
         * Number of preWarmed instances.
         * This setting only applies to the Consumption and Elastic Plans
         */
        preWarmedInstanceCount?: pulumi.Input<number>;
        /**
         * Publishing user name.
         */
        publishingUsername?: pulumi.Input<string>;
        /**
         * Push endpoint settings.
         */
        push?: pulumi.Input<inputs.web.PushSettings>;
        /**
         * Version of Python.
         */
        pythonVersion?: pulumi.Input<string>;
        /**
         * <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
         */
        remoteDebuggingEnabled?: pulumi.Input<boolean>;
        /**
         * Remote debugging version.
         */
        remoteDebuggingVersion?: pulumi.Input<string>;
        /**
         * <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
         */
        requestTracingEnabled?: pulumi.Input<boolean>;
        /**
         * Request tracing expiration time.
         */
        requestTracingExpirationTime?: pulumi.Input<string>;
        /**
         * IP security restrictions for scm.
         */
        scmIpSecurityRestrictions?: pulumi.Input<pulumi.Input<inputs.web.IpSecurityRestriction>[]>;
        /**
         * IP security restrictions for scm to use main.
         */
        scmIpSecurityRestrictionsUseMain?: pulumi.Input<boolean>;
        /**
         * SCM type.
         */
        scmType?: pulumi.Input<string>;
        /**
         * Tracing options.
         */
        tracingOptions?: pulumi.Input<string>;
        /**
         * <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
         */
        use32BitWorkerProcess?: pulumi.Input<boolean>;
        /**
         * Virtual applications.
         */
        virtualApplications?: pulumi.Input<pulumi.Input<inputs.web.VirtualApplication>[]>;
        /**
         * Virtual Network name.
         */
        vnetName?: pulumi.Input<string>;
        /**
         * <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
         */
        webSocketsEnabled?: pulumi.Input<boolean>;
        /**
         * Xenon App Framework and version
         */
        windowsFxVersion?: pulumi.Input<string>;
        /**
         * Explicit Managed Service Identity Id
         */
        xManagedServiceIdentityId?: pulumi.Input<number>;
    }

    /**
     * Configuration of an App Service app.
     */
    export interface SiteConfigResponse {
        /**
         * <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
         */
        alwaysOn?: pulumi.Input<boolean>;
        /**
         * Information about the formal API definition for the app.
         */
        apiDefinition?: pulumi.Input<inputs.web.ApiDefinitionInfoResponse>;
        /**
         * Azure API management settings linked to the app.
         */
        apiManagementConfig?: pulumi.Input<inputs.web.ApiManagementConfigResponse>;
        /**
         * App command line to launch.
         */
        appCommandLine?: pulumi.Input<string>;
        /**
         * Application settings.
         */
        appSettings?: pulumi.Input<pulumi.Input<inputs.web.NameValuePairResponse>[]>;
        /**
         * <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
         */
        autoHealEnabled?: pulumi.Input<boolean>;
        /**
         * Auto Heal rules.
         */
        autoHealRules?: pulumi.Input<inputs.web.AutoHealRulesResponse>;
        /**
         * Auto-swap slot name.
         */
        autoSwapSlotName?: pulumi.Input<string>;
        /**
         * Connection strings.
         */
        connectionStrings?: pulumi.Input<pulumi.Input<inputs.web.ConnStringInfoResponse>[]>;
        /**
         * Cross-Origin Resource Sharing (CORS) settings.
         */
        cors?: pulumi.Input<inputs.web.CorsSettingsResponse>;
        /**
         * Default documents.
         */
        defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
         */
        detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
        /**
         * Document root.
         */
        documentRoot?: pulumi.Input<string>;
        /**
         * This is work around for polymorphic types.
         */
        experiments?: pulumi.Input<inputs.web.ExperimentsResponse>;
        /**
         * State of FTP / FTPS service
         */
        ftpsState?: pulumi.Input<string>;
        /**
         * Handler mappings.
         */
        handlerMappings?: pulumi.Input<pulumi.Input<inputs.web.HandlerMappingResponse>[]>;
        /**
         * Health check path
         */
        healthCheckPath?: pulumi.Input<string>;
        /**
         * Http20Enabled: configures a web site to allow clients to connect over http2.0
         */
        http20Enabled?: pulumi.Input<boolean>;
        /**
         * <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
         */
        httpLoggingEnabled?: pulumi.Input<boolean>;
        /**
         * IP security restrictions for main.
         */
        ipSecurityRestrictions?: pulumi.Input<pulumi.Input<inputs.web.IpSecurityRestrictionResponse>[]>;
        /**
         * Java container.
         */
        javaContainer?: pulumi.Input<string>;
        /**
         * Java container version.
         */
        javaContainerVersion?: pulumi.Input<string>;
        /**
         * Java version.
         */
        javaVersion?: pulumi.Input<string>;
        /**
         * Site limits.
         */
        limits?: pulumi.Input<inputs.web.SiteLimitsResponse>;
        /**
         * Linux App Framework and version
         */
        linuxFxVersion?: pulumi.Input<string>;
        /**
         * Site load balancing.
         */
        loadBalancing?: pulumi.Input<string>;
        /**
         * <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
         */
        localMySqlEnabled?: pulumi.Input<boolean>;
        /**
         * HTTP logs directory size limit.
         */
        logsDirectorySizeLimit?: pulumi.Input<number>;
        /**
         * Site MachineKey.
         */
        machineKey: pulumi.Input<inputs.web.SiteMachineKeyResponse>;
        /**
         * Managed pipeline mode.
         */
        managedPipelineMode?: pulumi.Input<string>;
        /**
         * Managed Service Identity Id
         */
        managedServiceIdentityId?: pulumi.Input<number>;
        /**
         * MinTlsVersion: configures the minimum version of TLS required for SSL requests
         */
        minTlsVersion?: pulumi.Input<string>;
        /**
         * .NET Framework version.
         */
        netFrameworkVersion?: pulumi.Input<string>;
        /**
         * Version of Node.js.
         */
        nodeVersion?: pulumi.Input<string>;
        /**
         * Number of workers.
         */
        numberOfWorkers?: pulumi.Input<number>;
        /**
         * Version of PHP.
         */
        phpVersion?: pulumi.Input<string>;
        /**
         * Version of PowerShell.
         */
        powerShellVersion?: pulumi.Input<string>;
        /**
         * Number of preWarmed instances.
         * This setting only applies to the Consumption and Elastic Plans
         */
        preWarmedInstanceCount?: pulumi.Input<number>;
        /**
         * Publishing user name.
         */
        publishingUsername?: pulumi.Input<string>;
        /**
         * Push endpoint settings.
         */
        push?: pulumi.Input<inputs.web.PushSettingsResponse>;
        /**
         * Version of Python.
         */
        pythonVersion?: pulumi.Input<string>;
        /**
         * <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
         */
        remoteDebuggingEnabled?: pulumi.Input<boolean>;
        /**
         * Remote debugging version.
         */
        remoteDebuggingVersion?: pulumi.Input<string>;
        /**
         * <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
         */
        requestTracingEnabled?: pulumi.Input<boolean>;
        /**
         * Request tracing expiration time.
         */
        requestTracingExpirationTime?: pulumi.Input<string>;
        /**
         * IP security restrictions for scm.
         */
        scmIpSecurityRestrictions?: pulumi.Input<pulumi.Input<inputs.web.IpSecurityRestrictionResponse>[]>;
        /**
         * IP security restrictions for scm to use main.
         */
        scmIpSecurityRestrictionsUseMain?: pulumi.Input<boolean>;
        /**
         * SCM type.
         */
        scmType?: pulumi.Input<string>;
        /**
         * Tracing options.
         */
        tracingOptions?: pulumi.Input<string>;
        /**
         * <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
         */
        use32BitWorkerProcess?: pulumi.Input<boolean>;
        /**
         * Virtual applications.
         */
        virtualApplications?: pulumi.Input<pulumi.Input<inputs.web.VirtualApplicationResponse>[]>;
        /**
         * Virtual Network name.
         */
        vnetName?: pulumi.Input<string>;
        /**
         * <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
         */
        webSocketsEnabled?: pulumi.Input<boolean>;
        /**
         * Xenon App Framework and version
         */
        windowsFxVersion?: pulumi.Input<string>;
        /**
         * Explicit Managed Service Identity Id
         */
        xManagedServiceIdentityId?: pulumi.Input<number>;
    }

    /**
     * SiteExtensionInfo resource specific properties
     */
    export interface SiteExtensionInfoResponseProperties {
        /**
         * List of authors.
         */
        authors?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Site Extension comment.
         */
        comment?: pulumi.Input<string>;
        /**
         * Detailed description.
         */
        description?: pulumi.Input<string>;
        /**
         * Count of downloads.
         */
        download_count?: pulumi.Input<number>;
        /**
         * Site extension ID.
         */
        extension_id?: pulumi.Input<string>;
        /**
         * Site extension type.
         */
        extension_type?: pulumi.Input<string>;
        /**
         * Extension URL.
         */
        extension_url?: pulumi.Input<string>;
        /**
         * Feed URL.
         */
        feed_url?: pulumi.Input<string>;
        /**
         * Icon URL.
         */
        icon_url?: pulumi.Input<string>;
        /**
         * Installed timestamp.
         */
        installed_date_time?: pulumi.Input<string>;
        /**
         * Installer command line parameters.
         */
        installer_command_line_params?: pulumi.Input<string>;
        /**
         * License URL.
         */
        license_url?: pulumi.Input<string>;
        /**
         * <code>true</code> if the local version is the latest version; <code>false</code> otherwise.
         */
        local_is_latest_version?: pulumi.Input<boolean>;
        /**
         * Local path.
         */
        local_path?: pulumi.Input<string>;
        /**
         * Project URL.
         */
        project_url?: pulumi.Input<string>;
        /**
         * Provisioning state.
         */
        provisioningState?: pulumi.Input<string>;
        /**
         * Published timestamp.
         */
        published_date_time?: pulumi.Input<string>;
        /**
         * Summary description.
         */
        summary?: pulumi.Input<string>;
        title?: pulumi.Input<string>;
        /**
         * Version information.
         */
        version?: pulumi.Input<string>;
    }

    /**
     * Metric limits set on an app.
     */
    export interface SiteLimits {
        /**
         * Maximum allowed disk size usage in MB.
         */
        maxDiskSizeInMb?: pulumi.Input<number>;
        /**
         * Maximum allowed memory usage in MB.
         */
        maxMemoryInMb?: pulumi.Input<number>;
        /**
         * Maximum allowed CPU usage percentage.
         */
        maxPercentageCpu?: pulumi.Input<number>;
    }

    /**
     * Metric limits set on an app.
     */
    export interface SiteLimitsResponse {
        /**
         * Maximum allowed disk size usage in MB.
         */
        maxDiskSizeInMb?: pulumi.Input<number>;
        /**
         * Maximum allowed memory usage in MB.
         */
        maxMemoryInMb?: pulumi.Input<number>;
        /**
         * Maximum allowed CPU usage percentage.
         */
        maxPercentageCpu?: pulumi.Input<number>;
    }

    /**
     * MachineKey of an app.
     */
    export interface SiteMachineKeyResponse {
        /**
         * Algorithm used for decryption.
         */
        decryption?: pulumi.Input<string>;
        /**
         * Decryption key.
         */
        decryptionKey?: pulumi.Input<string>;
        /**
         * MachineKey validation.
         */
        validation?: pulumi.Input<string>;
        /**
         * Validation key.
         */
        validationKey?: pulumi.Input<string>;
    }

    /**
     * Site resource specific properties
     */
    export interface SiteProperties {
        /**
         * <code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.
         */
        clientAffinityEnabled?: pulumi.Input<boolean>;
        /**
         * <code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.
         */
        clientCertEnabled?: pulumi.Input<boolean>;
        /**
         * client certificate authentication comma-separated exclusion paths
         */
        clientCertExclusionPaths?: pulumi.Input<string>;
        /**
         * If specified during app creation, the app is cloned from a source app.
         */
        cloningInfo?: pulumi.Input<inputs.web.CloningInfo>;
        /**
         * Size of the function container.
         */
        containerSize?: pulumi.Input<number>;
        /**
         * Maximum allowed daily memory-time quota (applicable on dynamic apps only).
         */
        dailyMemoryTimeQuota?: pulumi.Input<number>;
        /**
         * <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Hostname SSL states are used to manage the SSL bindings for app's hostnames.
         */
        hostNameSslStates?: pulumi.Input<pulumi.Input<inputs.web.HostNameSslState>[]>;
        /**
         * <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
         *  If <code>true</code>, the app is only accessible via API management process.
         */
        hostNamesDisabled?: pulumi.Input<boolean>;
        /**
         * App Service Environment to use for the app.
         */
        hostingEnvironmentProfile?: pulumi.Input<inputs.web.HostingEnvironmentProfile>;
        /**
         * HttpsOnly: configures a web site to accept only https requests. Issues redirect for
         * http requests
         */
        httpsOnly?: pulumi.Input<boolean>;
        /**
         * Hyper-V sandbox.
         */
        hyperV?: pulumi.Input<boolean>;
        /**
         * Obsolete: Hyper-V sandbox.
         */
        isXenon?: pulumi.Input<boolean>;
        /**
         * Site redundancy mode
         */
        redundancyMode?: pulumi.Input<string>;
        /**
         * <code>true</code> if reserved; otherwise, <code>false</code>.
         */
        reserved?: pulumi.Input<boolean>;
        /**
         * <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.
         */
        scmSiteAlsoStopped?: pulumi.Input<boolean>;
        /**
         * Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
         */
        serverFarmId?: pulumi.Input<string>;
        /**
         * Configuration of the app.
         */
        siteConfig?: pulumi.Input<inputs.web.SiteConfig>;
    }

    /**
     * Site resource specific properties
     */
    export interface SiteResponseProperties {
        /**
         * Management information availability state for the app.
         */
        availabilityState: pulumi.Input<string>;
        /**
         * <code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.
         */
        clientAffinityEnabled?: pulumi.Input<boolean>;
        /**
         * <code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.
         */
        clientCertEnabled?: pulumi.Input<boolean>;
        /**
         * client certificate authentication comma-separated exclusion paths
         */
        clientCertExclusionPaths?: pulumi.Input<string>;
        /**
         * If specified during app creation, the app is cloned from a source app.
         */
        cloningInfo?: pulumi.Input<inputs.web.CloningInfoResponse>;
        /**
         * Size of the function container.
         */
        containerSize?: pulumi.Input<number>;
        /**
         * Maximum allowed daily memory-time quota (applicable on dynamic apps only).
         */
        dailyMemoryTimeQuota?: pulumi.Input<number>;
        /**
         * Default hostname of the app. Read-only.
         */
        defaultHostName: pulumi.Input<string>;
        /**
         * <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,
         * the app is not served on those hostnames.
         */
        enabledHostNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Hostname SSL states are used to manage the SSL bindings for app's hostnames.
         */
        hostNameSslStates?: pulumi.Input<pulumi.Input<inputs.web.HostNameSslStateResponse>[]>;
        /**
         * Hostnames associated with the app.
         */
        hostNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
         *  If <code>true</code>, the app is only accessible via API management process.
         */
        hostNamesDisabled?: pulumi.Input<boolean>;
        /**
         * App Service Environment to use for the app.
         */
        hostingEnvironmentProfile?: pulumi.Input<inputs.web.HostingEnvironmentProfileResponse>;
        /**
         * HttpsOnly: configures a web site to accept only https requests. Issues redirect for
         * http requests
         */
        httpsOnly?: pulumi.Input<boolean>;
        /**
         * Hyper-V sandbox.
         */
        hyperV?: pulumi.Input<boolean>;
        /**
         * Specifies an operation id if this site has a pending operation.
         */
        inProgressOperationId: pulumi.Input<string>;
        /**
         * <code>true</code> if the app is a default container; otherwise, <code>false</code>.
         */
        isDefaultContainer: pulumi.Input<boolean>;
        /**
         * Obsolete: Hyper-V sandbox.
         */
        isXenon?: pulumi.Input<boolean>;
        /**
         * Last time the app was modified, in UTC. Read-only.
         */
        lastModifiedTimeUtc: pulumi.Input<string>;
        /**
         * Maximum number of workers.
         * This only applies to Functions container.
         */
        maxNumberOfWorkers: pulumi.Input<number>;
        /**
         * List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.
         */
        outboundIpAddresses: pulumi.Input<string>;
        /**
         * List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants except dataComponent. Read-only.
         */
        possibleOutboundIpAddresses: pulumi.Input<string>;
        /**
         * Site redundancy mode
         */
        redundancyMode?: pulumi.Input<string>;
        /**
         * Name of the repository site.
         */
        repositorySiteName: pulumi.Input<string>;
        /**
         * <code>true</code> if reserved; otherwise, <code>false</code>.
         */
        reserved?: pulumi.Input<boolean>;
        /**
         * Name of the resource group the app belongs to. Read-only.
         */
        resourceGroup: pulumi.Input<string>;
        /**
         * <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.
         */
        scmSiteAlsoStopped?: pulumi.Input<boolean>;
        /**
         * Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
         */
        serverFarmId?: pulumi.Input<string>;
        /**
         * Configuration of the app.
         */
        siteConfig?: pulumi.Input<inputs.web.SiteConfigResponse>;
        /**
         * Status of the last deployment slot swap operation.
         */
        slotSwapStatus: pulumi.Input<inputs.web.SlotSwapStatusResponse>;
        /**
         * Current state of the app.
         */
        state: pulumi.Input<string>;
        /**
         * App suspended till in case memory-time quota is exceeded.
         */
        suspendedTill: pulumi.Input<string>;
        /**
         * Specifies which deployment slot this app will swap into. Read-only.
         */
        targetSwapSlot: pulumi.Input<string>;
        /**
         * Azure Traffic Manager hostnames associated with the app. Read-only.
         */
        trafficManagerHostNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * State indicating whether the app has exceeded its quota usage. Read-only.
         */
        usageState: pulumi.Input<string>;
    }

    /**
     * SiteSourceControl resource specific properties
     */
    export interface SiteSourceControlProperties {
        /**
         * Name of branch to use for deployment.
         */
        branch?: pulumi.Input<string>;
        /**
         * <code>true</code> to enable deployment rollback; otherwise, <code>false</code>.
         */
        deploymentRollbackEnabled?: pulumi.Input<boolean>;
        /**
         * <code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).
         */
        isManualIntegration?: pulumi.Input<boolean>;
        /**
         * <code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.
         */
        isMercurial?: pulumi.Input<boolean>;
        /**
         * Repository or source control URL.
         */
        repoUrl?: pulumi.Input<string>;
    }

    /**
     * SiteSourceControl resource specific properties
     */
    export interface SiteSourceControlResponseProperties {
        /**
         * Name of branch to use for deployment.
         */
        branch?: pulumi.Input<string>;
        /**
         * <code>true</code> to enable deployment rollback; otherwise, <code>false</code>.
         */
        deploymentRollbackEnabled?: pulumi.Input<boolean>;
        /**
         * <code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).
         */
        isManualIntegration?: pulumi.Input<boolean>;
        /**
         * <code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.
         */
        isMercurial?: pulumi.Input<boolean>;
        /**
         * Repository or source control URL.
         */
        repoUrl?: pulumi.Input<string>;
    }

    /**
     * Description of the App Service plan scale options.
     */
    export interface SkuCapacity {
        /**
         * Default number of workers for this App Service plan SKU.
         */
        default?: pulumi.Input<number>;
        /**
         * Maximum number of workers for this App Service plan SKU.
         */
        maximum?: pulumi.Input<number>;
        /**
         * Minimum number of workers for this App Service plan SKU.
         */
        minimum?: pulumi.Input<number>;
        /**
         * Available scale configurations for an App Service plan.
         */
        scaleType?: pulumi.Input<string>;
    }

    /**
     * Description of the App Service plan scale options.
     */
    export interface SkuCapacityResponse {
        /**
         * Default number of workers for this App Service plan SKU.
         */
        default?: pulumi.Input<number>;
        /**
         * Maximum number of workers for this App Service plan SKU.
         */
        maximum?: pulumi.Input<number>;
        /**
         * Minimum number of workers for this App Service plan SKU.
         */
        minimum?: pulumi.Input<number>;
        /**
         * Available scale configurations for an App Service plan.
         */
        scaleType?: pulumi.Input<string>;
    }

    /**
     * Description of a SKU for a scalable resource.
     */
    export interface SkuDescription {
        /**
         * Capabilities of the SKU, e.g., is traffic manager enabled?
         */
        capabilities?: pulumi.Input<pulumi.Input<inputs.web.Capability>[]>;
        /**
         * Current number of instances assigned to the resource.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Family code of the resource SKU.
         */
        family?: pulumi.Input<string>;
        /**
         * Locations of the SKU.
         */
        locations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the resource SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * Size specifier of the resource SKU.
         */
        size?: pulumi.Input<string>;
        /**
         * Min, max, and default scale values of the SKU.
         */
        skuCapacity?: pulumi.Input<inputs.web.SkuCapacity>;
        /**
         * Service tier of the resource SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * Description of a SKU for a scalable resource.
     */
    export interface SkuDescriptionResponse {
        /**
         * Capabilities of the SKU, e.g., is traffic manager enabled?
         */
        capabilities?: pulumi.Input<pulumi.Input<inputs.web.CapabilityResponse>[]>;
        /**
         * Current number of instances assigned to the resource.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Family code of the resource SKU.
         */
        family?: pulumi.Input<string>;
        /**
         * Locations of the SKU.
         */
        locations?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the resource SKU.
         */
        name?: pulumi.Input<string>;
        /**
         * Size specifier of the resource SKU.
         */
        size?: pulumi.Input<string>;
        /**
         * Min, max, and default scale values of the SKU.
         */
        skuCapacity?: pulumi.Input<inputs.web.SkuCapacityResponse>;
        /**
         * Service tier of the resource SKU.
         */
        tier?: pulumi.Input<string>;
    }

    /**
     * The status of the last successful slot swap operation.
     */
    export interface SlotSwapStatusResponse {
        /**
         * The destination slot of the last swap operation.
         */
        destinationSlotName: pulumi.Input<string>;
        /**
         * The source slot of the last swap operation.
         */
        sourceSlotName: pulumi.Input<string>;
        /**
         * The time the last successful slot swap completed.
         */
        timestampUtc: pulumi.Input<string>;
    }

    /**
     * Trigger based on request execution time.
     */
    export interface SlowRequestsBasedTrigger {
        /**
         * Request Count.
         */
        count?: pulumi.Input<number>;
        /**
         * Time interval.
         */
        timeInterval?: pulumi.Input<string>;
        /**
         * Time taken.
         */
        timeTaken?: pulumi.Input<string>;
    }

    /**
     * Trigger based on request execution time.
     */
    export interface SlowRequestsBasedTriggerResponse {
        /**
         * Request Count.
         */
        count?: pulumi.Input<number>;
        /**
         * Time interval.
         */
        timeInterval?: pulumi.Input<string>;
        /**
         * Time taken.
         */
        timeTaken?: pulumi.Input<string>;
    }

    /**
     * Stamp capacity information.
     */
    export interface StampCapacityResponse {
        /**
         * Available capacity (# of machines, bytes of storage etc...).
         */
        availableCapacity?: pulumi.Input<number>;
        /**
         * Shared/dedicated workers.
         */
        computeMode?: pulumi.Input<string>;
        /**
         * If <code>true</code>, it includes basic apps.
         * Basic apps are not used for capacity allocation.
         */
        excludeFromCapacityAllocation?: pulumi.Input<boolean>;
        /**
         * <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
         */
        isApplicableForAllComputeModes?: pulumi.Input<boolean>;
        /**
         * Is this a linux stamp capacity
         */
        isLinux?: pulumi.Input<boolean>;
        /**
         * Name of the stamp.
         */
        name?: pulumi.Input<string>;
        /**
         * Shared or Dedicated.
         */
        siteMode?: pulumi.Input<string>;
        /**
         * Total capacity (# of machines, bytes of storage etc...).
         */
        totalCapacity?: pulumi.Input<number>;
        /**
         * Name of the unit.
         */
        unit?: pulumi.Input<string>;
        /**
         * Size of the machines.
         */
        workerSize?: pulumi.Input<string>;
        /**
         * Size ID of machines: 
         * 0 - Small
         * 1 - Medium
         * 2 - Large
         */
        workerSizeId?: pulumi.Input<number>;
    }

    /**
     * Build properties for the static site.
     */
    export interface StaticSiteBuildProperties {
        /**
         * The path to the api code within the repository.
         */
        apiLocation?: pulumi.Input<string>;
        /**
         * The path of the app artifacts after building.
         */
        appArtifactLocation?: pulumi.Input<string>;
        /**
         * The path to the app code within the repository.
         */
        appLocation?: pulumi.Input<string>;
    }

    /**
     * Build properties for the static site.
     */
    export interface StaticSiteBuildPropertiesResponse {
        /**
         * The path to the api code within the repository.
         */
        apiLocation?: pulumi.Input<string>;
        /**
         * The path of the app artifacts after building.
         */
        appArtifactLocation?: pulumi.Input<string>;
        /**
         * The path to the app code within the repository.
         */
        appLocation?: pulumi.Input<string>;
    }

    /**
     * A static site.
     */
    export interface StaticSiteDefinition {
        /**
         * The target branch in the repository.
         */
        branch?: pulumi.Input<string>;
        /**
         * Build properties to configure on the repository.
         */
        buildProperties?: pulumi.Input<inputs.web.StaticSiteBuildProperties>;
        /**
         * A user's github repository token. This is used to setup the Github Actions workflow file and API secrets.
         */
        repositoryToken?: pulumi.Input<string>;
        /**
         * URL for the repository of the static site.
         */
        repositoryUrl?: pulumi.Input<string>;
    }

    /**
     * A static site.
     */
    export interface StaticSiteResponse {
        /**
         * The target branch in the repository.
         */
        branch?: pulumi.Input<string>;
        /**
         * Build properties to configure on the repository.
         */
        buildProperties?: pulumi.Input<inputs.web.StaticSiteBuildPropertiesResponse>;
        /**
         * The custom domains associated with this static site.
         */
        customDomains: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The default autogenerated hostname for the static site.
         */
        defaultHostname: pulumi.Input<string>;
        /**
         * A user's github repository token. This is used to setup the Github Actions workflow file and API secrets.
         */
        repositoryToken?: pulumi.Input<string>;
        /**
         * URL for the repository of the static site.
         */
        repositoryUrl?: pulumi.Input<string>;
    }

    /**
     * Trigger based on status code.
     */
    export interface StatusCodesBasedTrigger {
        /**
         * Request Count.
         */
        count?: pulumi.Input<number>;
        /**
         * HTTP status code.
         */
        status?: pulumi.Input<number>;
        /**
         * Request Sub Status.
         */
        subStatus?: pulumi.Input<number>;
        /**
         * Time interval.
         */
        timeInterval?: pulumi.Input<string>;
        /**
         * Win32 error code.
         */
        win32Status?: pulumi.Input<number>;
    }

    /**
     * Trigger based on status code.
     */
    export interface StatusCodesBasedTriggerResponse {
        /**
         * Request Count.
         */
        count?: pulumi.Input<number>;
        /**
         * HTTP status code.
         */
        status?: pulumi.Input<number>;
        /**
         * Request Sub Status.
         */
        subStatus?: pulumi.Input<number>;
        /**
         * Time interval.
         */
        timeInterval?: pulumi.Input<string>;
        /**
         * Win32 error code.
         */
        win32Status?: pulumi.Input<number>;
    }

    /**
     * SwiftVirtualNetwork resource specific properties
     */
    export interface SwiftVirtualNetworkProperties {
        /**
         * The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
         */
        subnetResourceId?: pulumi.Input<string>;
        /**
         * A flag that specifies if the scale unit this Web App is on supports Swift integration.
         */
        swiftSupported?: pulumi.Input<boolean>;
    }

    /**
     * SwiftVirtualNetwork resource specific properties
     */
    export interface SwiftVirtualNetworkResponseProperties {
        /**
         * The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
         */
        subnetResourceId?: pulumi.Input<string>;
        /**
         * A flag that specifies if the scale unit this Web App is on supports Swift integration.
         */
        swiftSupported?: pulumi.Input<boolean>;
    }

    /**
     * Virtual application in an app.
     */
    export interface VirtualApplication {
        /**
         * Physical path.
         */
        physicalPath?: pulumi.Input<string>;
        /**
         * <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
         */
        preloadEnabled?: pulumi.Input<boolean>;
        /**
         * Virtual directories for virtual application.
         */
        virtualDirectories?: pulumi.Input<pulumi.Input<inputs.web.VirtualDirectory>[]>;
        /**
         * Virtual path.
         */
        virtualPath?: pulumi.Input<string>;
    }

    /**
     * Virtual application in an app.
     */
    export interface VirtualApplicationResponse {
        /**
         * Physical path.
         */
        physicalPath?: pulumi.Input<string>;
        /**
         * <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
         */
        preloadEnabled?: pulumi.Input<boolean>;
        /**
         * Virtual directories for virtual application.
         */
        virtualDirectories?: pulumi.Input<pulumi.Input<inputs.web.VirtualDirectoryResponse>[]>;
        /**
         * Virtual path.
         */
        virtualPath?: pulumi.Input<string>;
    }

    /**
     * Directory for virtual application.
     */
    export interface VirtualDirectory {
        /**
         * Physical path.
         */
        physicalPath?: pulumi.Input<string>;
        /**
         * Path to virtual application.
         */
        virtualPath?: pulumi.Input<string>;
    }

    /**
     * Directory for virtual application.
     */
    export interface VirtualDirectoryResponse {
        /**
         * Physical path.
         */
        physicalPath?: pulumi.Input<string>;
        /**
         * Path to virtual application.
         */
        virtualPath?: pulumi.Input<string>;
    }

    /**
     * Virtual IP mapping.
     */
    export interface VirtualIPMappingResponse {
        /**
         * Is virtual IP mapping in use.
         */
        inUse?: pulumi.Input<boolean>;
        /**
         * Internal HTTP port.
         */
        internalHttpPort?: pulumi.Input<number>;
        /**
         * Internal HTTPS port.
         */
        internalHttpsPort?: pulumi.Input<number>;
        /**
         * name of the service that virtual IP is assigned to
         */
        serviceName?: pulumi.Input<string>;
        /**
         * Virtual IP address.
         */
        virtualIP?: pulumi.Input<string>;
    }

    /**
     * Specification for using a Virtual Network.
     */
    export interface VirtualNetworkProfile {
        /**
         * Resource id of the Virtual Network.
         */
        id?: pulumi.Input<string>;
        /**
         * Subnet within the Virtual Network.
         */
        subnet?: pulumi.Input<string>;
    }

    /**
     * Specification for using a Virtual Network.
     */
    export interface VirtualNetworkProfileResponse {
        /**
         * Resource id of the Virtual Network.
         */
        id?: pulumi.Input<string>;
        /**
         * Name of the Virtual Network (read-only).
         */
        name: pulumi.Input<string>;
        /**
         * Subnet within the Virtual Network.
         */
        subnet?: pulumi.Input<string>;
        /**
         * Resource type of the Virtual Network (read-only).
         */
        type: pulumi.Input<string>;
    }

    /**
     * VnetInfo resource specific properties
     */
    export interface VnetInfoProperties {
        /**
         * A certificate file (.cer) blob containing the public key of the private key used to authenticate a 
         * Point-To-Site VPN connection.
         */
        certBlob?: pulumi.Input<string>;
        /**
         * DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.
         */
        dnsServers?: pulumi.Input<string>;
        /**
         * Flag that is used to denote if this is VNET injection
         */
        isSwift?: pulumi.Input<boolean>;
        /**
         * The Virtual Network's resource ID.
         */
        vnetResourceId?: pulumi.Input<string>;
    }

    /**
     * VnetInfo resource specific properties
     */
    export interface VnetInfoResponseProperties {
        /**
         * A certificate file (.cer) blob containing the public key of the private key used to authenticate a 
         * Point-To-Site VPN connection.
         */
        certBlob?: pulumi.Input<string>;
        /**
         * The client certificate thumbprint.
         */
        certThumbprint: pulumi.Input<string>;
        /**
         * DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.
         */
        dnsServers?: pulumi.Input<string>;
        /**
         * Flag that is used to denote if this is VNET injection
         */
        isSwift?: pulumi.Input<boolean>;
        /**
         * <code>true</code> if a resync is required; otherwise, <code>false</code>.
         */
        resyncRequired: pulumi.Input<boolean>;
        /**
         * The routes that this Virtual Network connection uses.
         */
        routes: pulumi.Input<pulumi.Input<inputs.web.VnetRouteResponse>[]>;
        /**
         * The Virtual Network's resource ID.
         */
        vnetResourceId?: pulumi.Input<string>;
    }

    /**
     * VnetRoute resource specific properties
     */
    export interface VnetRouteProperties {
        /**
         * The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
         */
        endAddress?: pulumi.Input<string>;
        /**
         * The type of route this is:
         * DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
         * INHERITED - Routes inherited from the real Virtual Network routes
         * STATIC - Static route set on the app only
         *
         * These values will be used for syncing an app's routes with those from a Virtual Network.
         */
        routeType?: pulumi.Input<string>;
        /**
         * The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
         */
        startAddress?: pulumi.Input<string>;
    }

    /**
     * Virtual Network route contract used to pass routing information for a Virtual Network.
     */
    export interface VnetRouteResponse {
        /**
         * Resource Id.
         */
        id: pulumi.Input<string>;
        /**
         * Kind of resource.
         */
        kind?: pulumi.Input<string>;
        /**
         * Resource Name.
         */
        name: pulumi.Input<string>;
        /**
         * VnetRoute resource specific properties
         */
        properties?: pulumi.Input<inputs.web.VnetRouteResponseProperties>;
        /**
         * Resource type.
         */
        type: pulumi.Input<string>;
    }

    /**
     * VnetRoute resource specific properties
     */
    export interface VnetRouteResponseProperties {
        /**
         * The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
         */
        endAddress?: pulumi.Input<string>;
        /**
         * The type of route this is:
         * DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
         * INHERITED - Routes inherited from the real Virtual Network routes
         * STATIC - Static route set on the app only
         *
         * These values will be used for syncing an app's routes with those from a Virtual Network.
         */
        routeType?: pulumi.Input<string>;
        /**
         * The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
         */
        startAddress?: pulumi.Input<string>;
    }

    /**
     * Worker pool of an App Service Environment.
     */
    export interface WorkerPool {
        /**
         * Shared or dedicated app hosting.
         */
        computeMode?: pulumi.Input<string>;
        /**
         * Number of instances in the worker pool.
         */
        workerCount?: pulumi.Input<number>;
        /**
         * VM size of the worker pool instances.
         */
        workerSize?: pulumi.Input<string>;
        /**
         * Worker size ID for referencing this worker pool.
         */
        workerSizeId?: pulumi.Input<number>;
    }

    /**
     * Worker pool of an App Service Environment.
     */
    export interface WorkerPoolResponse {
        /**
         * Shared or dedicated app hosting.
         */
        computeMode?: pulumi.Input<string>;
        /**
         * Names of all instances in the worker pool (read only).
         */
        instanceNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Number of instances in the worker pool.
         */
        workerCount?: pulumi.Input<number>;
        /**
         * VM size of the worker pool instances.
         */
        workerSize?: pulumi.Input<string>;
        /**
         * Worker size ID for referencing this worker pool.
         */
        workerSizeId?: pulumi.Input<number>;
    }
}

export namespace windowsiot {
    /**
     * The properties of a Windows IoT Device Service.
     */
    export interface DeviceServicePropertiesResponse {
        /**
         * Windows IoT Device Service OEM AAD domain
         */
        adminDomainName?: pulumi.Input<string>;
        /**
         * Windows IoT Device Service ODM AAD domain
         */
        billingDomainName?: pulumi.Input<string>;
        /**
         * Windows IoT Device Service notes.
         */
        notes?: pulumi.Input<string>;
        /**
         * Windows IoT Device Service device allocation,
         */
        quantity?: pulumi.Input<number>;
        /**
         * Windows IoT Device Service start date,
         */
        startDate: pulumi.Input<string>;
    }
}

