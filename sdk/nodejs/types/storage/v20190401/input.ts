// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Settings properties for Active Directory (AD).
 */
export interface ActiveDirectoryPropertiesArgs {
    /**
     * Specifies the security identifier (SID) for Azure Storage.
     */
    azureStorageSid: pulumi.Input<string>;
    /**
     * Specifies the domain GUID.
     */
    domainGuid: pulumi.Input<string>;
    /**
     * Specifies the primary domain that the AD DNS server is authoritative for.
     */
    domainName: pulumi.Input<string>;
    /**
     * Specifies the security identifier (SID).
     */
    domainSid: pulumi.Input<string>;
    /**
     * Specifies the Active Directory forest to get.
     */
    forestName: pulumi.Input<string>;
    /**
     * Specifies the NetBIOS domain name.
     */
    netBiosDomainName: pulumi.Input<string>;
}

/**
 * Settings for Azure Files identity based authentication.
 */
export interface AzureFilesIdentityBasedAuthenticationArgs {
    /**
     * Required if choose AD.
     */
    activeDirectoryProperties?: pulumi.Input<inputs.storage.v20190401.ActiveDirectoryPropertiesArgs>;
    /**
     * Indicates the directory service used.
     */
    directoryServiceOptions: pulumi.Input<string | enums.storage.v20190401.DirectoryServiceOptions>;
}

/**
 * The blob service properties for change feed events.
 */
export interface ChangeFeedArgs {
    /**
     * Indicates whether change feed event logging is enabled for the Blob service.
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * Specifies a CORS rule for the Blob service.
 */
export interface CorsRuleArgs {
    /**
     * Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
     */
    allowedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
     */
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
     */
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required if CorsRule element is present. A list of response headers to expose to CORS clients.
     */
    exposedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
     */
    maxAgeInSeconds: pulumi.Input<number>;
}

/**
 * Sets the CORS rules. You can include up to five CorsRule elements in the request. 
 */
export interface CorsRulesArgs {
    /**
     * The List of CORS rules. You can include up to five CorsRule elements in the request. 
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.storage.v20190401.CorsRuleArgs>[]>;
}

/**
 * The custom domain assigned to this storage account. This can be set via Update.
 */
export interface CustomDomainArgs {
    /**
     * Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
     */
    name: pulumi.Input<string>;
    /**
     * Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
     */
    useSubDomainName?: pulumi.Input<boolean>;
}

/**
 * Object to define the number of days after creation.
 */
export interface DateAfterCreationArgs {
    /**
     * Value indicating the age in days after creation
     */
    daysAfterCreationGreaterThan: pulumi.Input<number>;
}

/**
 * Object to define the number of days after last modification.
 */
export interface DateAfterModificationArgs {
    /**
     * Value indicating the age in days after last modification
     */
    daysAfterModificationGreaterThan: pulumi.Input<number>;
}

/**
 * The blob service properties for soft delete.
 */
export interface DeleteRetentionPolicyArgs {
    /**
     * Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.
     */
    days?: pulumi.Input<number>;
    /**
     * Indicates whether DeleteRetentionPolicy is enabled for the Blob service.
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The encryption settings on the storage account.
 */
export interface EncryptionArgs {
    /**
     * The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
     */
    keySource: pulumi.Input<string | enums.storage.v20190401.KeySource>;
    /**
     * Properties provided by key vault.
     */
    keyVaultProperties?: pulumi.Input<inputs.storage.v20190401.KeyVaultPropertiesArgs>;
    /**
     * List of services which support encryption.
     */
    services?: pulumi.Input<inputs.storage.v20190401.EncryptionServicesArgs>;
}
/**
 * encryptionArgsProvideDefaults sets the appropriate defaults for EncryptionArgs
 */
export function encryptionArgsProvideDefaults(val: EncryptionArgs): EncryptionArgs {
    return {
        ...val,
        keySource: (val.keySource) ?? "Microsoft.Storage",
    };
}

/**
 * A service that allows server-side encryption to be used.
 */
export interface EncryptionServiceArgs {
    /**
     * A boolean indicating whether or not the service encrypts the data as it is stored.
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * A list of services that support encryption.
 */
export interface EncryptionServicesArgs {
    /**
     * The encryption function of the blob storage service.
     */
    blob?: pulumi.Input<inputs.storage.v20190401.EncryptionServiceArgs>;
    /**
     * The encryption function of the file storage service.
     */
    file?: pulumi.Input<inputs.storage.v20190401.EncryptionServiceArgs>;
}

/**
 * IP rule with specific IP or IP range in CIDR format.
 */
export interface IPRuleArgs {
    /**
     * The action of IP ACL rule.
     */
    action?: pulumi.Input<enums.storage.v20190401.Action>;
    /**
     * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
     */
    iPAddressOrRange: pulumi.Input<string>;
}
/**
 * ipruleArgsProvideDefaults sets the appropriate defaults for IPRuleArgs
 */
export function ipruleArgsProvideDefaults(val: IPRuleArgs): IPRuleArgs {
    return {
        ...val,
        action: (val.action) ?? "Allow",
    };
}

/**
 * Identity for the resource.
 */
export interface IdentityArgs {
    /**
     * The identity type.
     */
    type: pulumi.Input<enums.storage.v20190401.IdentityType>;
}

/**
 * Properties of key vault.
 */
export interface KeyVaultPropertiesArgs {
    /**
     * The name of KeyVault key.
     */
    keyName?: pulumi.Input<string>;
    /**
     * The Uri of KeyVault.
     */
    keyVaultUri?: pulumi.Input<string>;
    /**
     * The version of KeyVault key.
     */
    keyVersion?: pulumi.Input<string>;
}

/**
 * Actions are applied to the filtered blobs when the execution condition is met.
 */
export interface ManagementPolicyActionArgs {
    /**
     * The management policy action for base blob
     */
    baseBlob?: pulumi.Input<inputs.storage.v20190401.ManagementPolicyBaseBlobArgs>;
    /**
     * The management policy action for snapshot
     */
    snapshot?: pulumi.Input<inputs.storage.v20190401.ManagementPolicySnapShotArgs>;
}

/**
 * Management policy action for base blob.
 */
export interface ManagementPolicyBaseBlobArgs {
    /**
     * The function to delete the blob
     */
    delete?: pulumi.Input<inputs.storage.v20190401.DateAfterModificationArgs>;
    /**
     * The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
     */
    tierToArchive?: pulumi.Input<inputs.storage.v20190401.DateAfterModificationArgs>;
    /**
     * The function to tier blobs to cool storage. Support blobs currently at Hot tier
     */
    tierToCool?: pulumi.Input<inputs.storage.v20190401.DateAfterModificationArgs>;
}

/**
 * An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
 */
export interface ManagementPolicyDefinitionArgs {
    /**
     * An object that defines the action set.
     */
    actions: pulumi.Input<inputs.storage.v20190401.ManagementPolicyActionArgs>;
    /**
     * An object that defines the filter set.
     */
    filters?: pulumi.Input<inputs.storage.v20190401.ManagementPolicyFilterArgs>;
}

/**
 * Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. 
 */
export interface ManagementPolicyFilterArgs {
    /**
     * An array of predefined enum values. Only blockBlob is supported.
     */
    blobTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of strings for prefixes to be match.
     */
    prefixMatch?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
 */
export interface ManagementPolicyRuleArgs {
    /**
     * An object that defines the Lifecycle rule.
     */
    definition: pulumi.Input<inputs.storage.v20190401.ManagementPolicyDefinitionArgs>;
    /**
     * Rule is enabled if set to true.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
     */
    name: pulumi.Input<string>;
    /**
     * The valid value is Lifecycle
     */
    type: pulumi.Input<string | enums.storage.v20190401.RuleType>;
}

/**
 * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
 */
export interface ManagementPolicySchemaArgs {
    /**
     * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
     */
    rules: pulumi.Input<pulumi.Input<inputs.storage.v20190401.ManagementPolicyRuleArgs>[]>;
}

/**
 * Management policy action for snapshot.
 */
export interface ManagementPolicySnapShotArgs {
    /**
     * The function to delete the blob snapshot
     */
    delete?: pulumi.Input<inputs.storage.v20190401.DateAfterCreationArgs>;
}

/**
 * Network rule set
 */
export interface NetworkRuleSetArgs {
    /**
     * Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
     */
    bypass?: pulumi.Input<string | enums.storage.v20190401.Bypass>;
    /**
     * Specifies the default action of allow or deny when no other rules match.
     */
    defaultAction: pulumi.Input<enums.storage.v20190401.DefaultAction>;
    /**
     * Sets the IP ACL rules
     */
    ipRules?: pulumi.Input<pulumi.Input<inputs.storage.v20190401.IPRuleArgs>[]>;
    /**
     * Sets the virtual network rules
     */
    virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.storage.v20190401.VirtualNetworkRuleArgs>[]>;
}
/**
 * networkRuleSetArgsProvideDefaults sets the appropriate defaults for NetworkRuleSetArgs
 */
export function networkRuleSetArgsProvideDefaults(val: NetworkRuleSetArgs): NetworkRuleSetArgs {
    return {
        ...val,
        bypass: (val.bypass) ?? "AzureServices",
        defaultAction: (val.defaultAction) ?? "Allow",
    };
}

/**
 * The restriction because of which SKU cannot be used.
 */
export interface RestrictionArgs {
    /**
     * The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
     */
    reasonCode?: pulumi.Input<string | enums.storage.v20190401.ReasonCode>;
}

/**
 * The SKU of the storage account.
 */
export interface SkuArgs {
    /**
     * Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
     */
    name: pulumi.Input<string | enums.storage.v20190401.SkuName>;
    /**
     * The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
     */
    restrictions?: pulumi.Input<pulumi.Input<inputs.storage.v20190401.RestrictionArgs>[]>;
}

/**
 * Virtual Network rule.
 */
export interface VirtualNetworkRuleArgs {
    /**
     * The action of virtual network rule.
     */
    action?: pulumi.Input<enums.storage.v20190401.Action>;
    /**
     * Gets the state of virtual network rule.
     */
    state?: pulumi.Input<enums.storage.v20190401.State>;
    /**
     * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
     */
    virtualNetworkResourceId: pulumi.Input<string>;
}
/**
 * virtualNetworkRuleArgsProvideDefaults sets the appropriate defaults for VirtualNetworkRuleArgs
 */
export function virtualNetworkRuleArgsProvideDefaults(val: VirtualNetworkRuleArgs): VirtualNetworkRuleArgs {
    return {
        ...val,
        action: (val.action) ?? "Allow",
    };
}

