// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The custom domain assigned to this storage account. This can be set via Update.
 */
export interface CustomDomainArgs {
    /**
     * Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
     */
    name: pulumi.Input<string>;
    /**
     * Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
     */
    useSubDomainName?: pulumi.Input<boolean>;
}

/**
 * The encryption settings on the storage account.
 */
export interface EncryptionArgs {
    /**
     * The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
     */
    keySource: pulumi.Input<string | enums.storage.v20180201.KeySource>;
    /**
     * Properties provided by key vault.
     */
    keyVaultProperties?: pulumi.Input<inputs.storage.v20180201.KeyVaultPropertiesArgs>;
    /**
     * List of services which support encryption.
     */
    services?: pulumi.Input<inputs.storage.v20180201.EncryptionServicesArgs>;
}
/**
 * encryptionArgsProvideDefaults sets the appropriate defaults for EncryptionArgs
 */
export function encryptionArgsProvideDefaults(val: EncryptionArgs): EncryptionArgs {
    return {
        ...val,
        keySource: (val.keySource) ?? "Microsoft.Storage",
    };
}

/**
 * A service that allows server-side encryption to be used.
 */
export interface EncryptionServiceArgs {
    /**
     * A boolean indicating whether or not the service encrypts the data as it is stored.
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * A list of services that support encryption.
 */
export interface EncryptionServicesArgs {
    /**
     * The encryption function of the blob storage service.
     */
    blob?: pulumi.Input<inputs.storage.v20180201.EncryptionServiceArgs>;
    /**
     * The encryption function of the file storage service.
     */
    file?: pulumi.Input<inputs.storage.v20180201.EncryptionServiceArgs>;
}

/**
 * IP rule with specific IP or IP range in CIDR format.
 */
export interface IPRuleArgs {
    /**
     * The action of IP ACL rule.
     */
    action?: pulumi.Input<enums.storage.v20180201.Action>;
    /**
     * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
     */
    iPAddressOrRange: pulumi.Input<string>;
}
/**
 * ipruleArgsProvideDefaults sets the appropriate defaults for IPRuleArgs
 */
export function ipruleArgsProvideDefaults(val: IPRuleArgs): IPRuleArgs {
    return {
        ...val,
        action: (val.action) ?? "Allow",
    };
}

/**
 * Identity for the resource.
 */
export interface IdentityArgs {
    /**
     * The identity type.
     */
    type: pulumi.Input<enums.storage.v20180201.IdentityType>;
}

/**
 * Properties of key vault.
 */
export interface KeyVaultPropertiesArgs {
    /**
     * The name of KeyVault key.
     */
    keyName?: pulumi.Input<string>;
    /**
     * The Uri of KeyVault.
     */
    keyVaultUri?: pulumi.Input<string>;
    /**
     * The version of KeyVault key.
     */
    keyVersion?: pulumi.Input<string>;
}

/**
 * Network rule set
 */
export interface NetworkRuleSetArgs {
    /**
     * Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
     */
    bypass?: pulumi.Input<string | enums.storage.v20180201.Bypass>;
    /**
     * Specifies the default action of allow or deny when no other rules match.
     */
    defaultAction: pulumi.Input<enums.storage.v20180201.DefaultAction>;
    /**
     * Sets the IP ACL rules
     */
    ipRules?: pulumi.Input<pulumi.Input<inputs.storage.v20180201.IPRuleArgs>[]>;
    /**
     * Sets the virtual network rules
     */
    virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.storage.v20180201.VirtualNetworkRuleArgs>[]>;
}
/**
 * networkRuleSetArgsProvideDefaults sets the appropriate defaults for NetworkRuleSetArgs
 */
export function networkRuleSetArgsProvideDefaults(val: NetworkRuleSetArgs): NetworkRuleSetArgs {
    return {
        ...val,
        bypass: (val.bypass) ?? "AzureServices",
        defaultAction: (val.defaultAction) ?? "Allow",
    };
}

/**
 * The restriction because of which SKU cannot be used.
 */
export interface RestrictionArgs {
    /**
     * The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
     */
    reasonCode?: pulumi.Input<string | enums.storage.v20180201.ReasonCode>;
}

/**
 * The SKU of the storage account.
 */
export interface SkuArgs {
    /**
     * Gets or sets the sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType.
     */
    name: pulumi.Input<enums.storage.v20180201.SkuName>;
    /**
     * The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
     */
    restrictions?: pulumi.Input<pulumi.Input<inputs.storage.v20180201.RestrictionArgs>[]>;
}

/**
 * Virtual Network rule.
 */
export interface VirtualNetworkRuleArgs {
    /**
     * The action of virtual network rule.
     */
    action?: pulumi.Input<enums.storage.v20180201.Action>;
    /**
     * Gets the state of virtual network rule.
     */
    state?: pulumi.Input<enums.storage.v20180201.State>;
    /**
     * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
     */
    virtualNetworkResourceId: pulumi.Input<string>;
}
/**
 * virtualNetworkRuleArgsProvideDefaults sets the appropriate defaults for VirtualNetworkRuleArgs
 */
export function virtualNetworkRuleArgsProvideDefaults(val: VirtualNetworkRuleArgs): VirtualNetworkRuleArgs {
    return {
        ...val,
        action: (val.action) ?? "Allow",
    };
}

