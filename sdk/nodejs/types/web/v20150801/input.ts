// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Information about the formal API definition for the web app.
 */
export interface ApiDefinitionInfoArgs {
    /**
     * The URL of the API definition.
     */
    url?: pulumi.Input<string>;
}

/**
 * Application logs configuration
 */
export interface ApplicationLogsConfigArgs {
    /**
     * Application logs to blob storage configuration
     */
    azureBlobStorage?: pulumi.Input<inputs.web.v20150801.AzureBlobStorageApplicationLogsConfigArgs>;
    /**
     * Application logs to azure table storage configuration
     */
    azureTableStorage?: pulumi.Input<inputs.web.v20150801.AzureTableStorageApplicationLogsConfigArgs>;
    /**
     * Application logs to file system configuration
     */
    fileSystem?: pulumi.Input<inputs.web.v20150801.FileSystemApplicationLogsConfigArgs>;
}

/**
 * AutoHealActions - Describes the actions which can be
 *             taken by the auto-heal module when a rule is triggered.
 */
export interface AutoHealActionsArgs {
    /**
     * ActionType - predefined action to be taken
     */
    actionType: pulumi.Input<enums.web.v20150801.AutoHealActionType>;
    /**
     * CustomAction - custom action to be taken
     */
    customAction?: pulumi.Input<inputs.web.v20150801.AutoHealCustomActionArgs>;
    /**
     * MinProcessExecutionTime - minimum time the process must execute
     *             before taking the action
     */
    minProcessExecutionTime?: pulumi.Input<string>;
}

/**
 * AutoHealCustomAction - Describes the custom action to be executed
 *             when an auto heal rule is triggered.
 */
export interface AutoHealCustomActionArgs {
    /**
     * Executable to be run
     */
    exe?: pulumi.Input<string>;
    /**
     * Parameters for the executable
     */
    parameters?: pulumi.Input<string>;
}

/**
 * AutoHealRules - describes the rules which can be defined for auto-heal
 */
export interface AutoHealRulesArgs {
    /**
     * Actions - Actions to be executed when a rule is triggered
     */
    actions?: pulumi.Input<inputs.web.v20150801.AutoHealActionsArgs>;
    /**
     * Triggers - Conditions that describe when to execute the auto-heal actions
     */
    triggers?: pulumi.Input<inputs.web.v20150801.AutoHealTriggersArgs>;
}

/**
 * AutoHealTriggers - describes the triggers for auto-heal.
 */
export interface AutoHealTriggersArgs {
    /**
     * PrivateBytesInKB - Defines a rule based on private bytes
     */
    privateBytesInKB?: pulumi.Input<number>;
    /**
     * Requests - Defines a rule based on total requests
     */
    requests?: pulumi.Input<inputs.web.v20150801.RequestsBasedTriggerArgs>;
    /**
     * SlowRequests - Defines a rule based on request execution time
     */
    slowRequests?: pulumi.Input<inputs.web.v20150801.SlowRequestsBasedTriggerArgs>;
    /**
     * StatusCodes - Defines a rule based on status codes
     */
    statusCodes?: pulumi.Input<pulumi.Input<inputs.web.v20150801.StatusCodesBasedTriggerArgs>[]>;
}

/**
 * Application logs azure blob storage configuration
 */
export interface AzureBlobStorageApplicationLogsConfigArgs {
    /**
     * Log level
     */
    level?: pulumi.Input<enums.web.v20150801.LogLevel>;
    /**
     * Retention in days.
     *             Remove blobs older than X days.
     *             0 or lower means no retention.
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * SAS url to a azure blob container with read/write/list/delete permissions
     */
    sasUrl?: pulumi.Input<string>;
}

/**
 * Http logs to azure blob storage configuration
 */
export interface AzureBlobStorageHttpLogsConfigArgs {
    /**
     * Enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Retention in days.
     *             Remove blobs older than X days.
     *             0 or lower means no retention.
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * SAS url to a azure blob container with read/write/list/delete permissions
     */
    sasUrl?: pulumi.Input<string>;
}

/**
 * Application logs to azure table storage configuration
 */
export interface AzureTableStorageApplicationLogsConfigArgs {
    /**
     * Log level
     */
    level?: pulumi.Input<enums.web.v20150801.LogLevel>;
    /**
     * SAS url to an azure table with add/query/delete permissions
     */
    sasUrl?: pulumi.Input<string>;
}

/**
 * Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
 */
export interface BackupSchedule {
    /**
     * How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
     */
    frequencyInterval?: number;
    /**
     * How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
     */
    frequencyUnit: enums.web.v20150801.FrequencyUnit;
    /**
     * True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
     */
    keepAtLeastOneBackup?: boolean;
    /**
     * The last time when this schedule was triggered
     */
    lastExecutionTime?: string;
    /**
     * After how many days backups should be deleted
     */
    retentionPeriodInDays?: number;
    /**
     * When the schedule should start working
     */
    startTime?: string;
}

/**
 * Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
 */
export interface BackupScheduleArgs {
    /**
     * How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
     */
    frequencyInterval?: pulumi.Input<number>;
    /**
     * How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
     */
    frequencyUnit: pulumi.Input<enums.web.v20150801.FrequencyUnit>;
    /**
     * True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
     */
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    /**
     * The last time when this schedule was triggered
     */
    lastExecutionTime?: pulumi.Input<string>;
    /**
     * After how many days backups should be deleted
     */
    retentionPeriodInDays?: pulumi.Input<number>;
    /**
     * When the schedule should start working
     */
    startTime?: pulumi.Input<string>;
}

/**
 * Represents information needed for cloning operation
 */
export interface CloningInfoArgs {
    /**
     * Application settings overrides for cloned web app. If specified these settings will override the settings cloned 
     *             from source web app. If not specified, application settings from source web app are retained.
     */
    appSettingsOverrides?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * If true, clone custom hostnames from source web app
     */
    cloneCustomHostNames?: pulumi.Input<boolean>;
    /**
     * Clone source control from source web app
     */
    cloneSourceControl?: pulumi.Input<boolean>;
    /**
     * If specified configure load balancing for source and clone site
     */
    configureLoadBalancing?: pulumi.Input<boolean>;
    /**
     * Correlation Id of cloning operation. This id ties multiple cloning operations
     *             together to use the same snapshot
     */
    correlationId?: pulumi.Input<string>;
    /**
     * Hosting environment
     */
    hostingEnvironment?: pulumi.Input<string>;
    /**
     * Overwrite destination web app
     */
    overwrite?: pulumi.Input<boolean>;
    /**
     * ARM resource id of the source web app. Web app resource id is of the form 
     *             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and 
     *             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
     */
    sourceWebAppId?: pulumi.Input<string>;
    /**
     * ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form 
     *             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
     */
    trafficManagerProfileId?: pulumi.Input<string>;
    /**
     * Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
     */
    trafficManagerProfileName?: pulumi.Input<string>;
}

/**
 * Represents database connection string information
 */
export interface ConnStringInfoArgs {
    /**
     * Connection string value
     */
    connectionString?: pulumi.Input<string>;
    /**
     * Name of connection string
     */
    name?: pulumi.Input<string>;
    /**
     * Type of database
     */
    type: pulumi.Input<enums.web.v20150801.DatabaseServerType>;
}

/**
 * Database connection string value to type pair
 */
export interface ConnStringValueTypePairArgs {
    /**
     * Type of database
     */
    type: pulumi.Input<enums.web.v20150801.DatabaseServerType>;
    /**
     * Value of pair
     */
    value?: pulumi.Input<string>;
}

/**
 * Cross-Origin Resource Sharing (CORS) settings for the web app.
 */
export interface CorsSettingsArgs {
    /**
     * Gets or sets the list of origins that should be allowed to make cross-origin
     *             calls (for example: http://example.com:12345). Use "*" to allow all.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Note: properties are serialized in JSON format and stored in DB. 
 *             if new properties are added they might not be in the previous data rows 
 *             so please handle nulls
 */
export interface DatabaseBackupSetting {
    /**
     * Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.
     */
    connectionString?: string;
    /**
     * Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
     *             This is used during restore with overwrite connection strings options.
     */
    connectionStringName?: string;
    /**
     * SqlAzure / MySql
     */
    databaseType?: string;
    name?: string;
}

/**
 * Note: properties are serialized in JSON format and stored in DB. 
 *             if new properties are added they might not be in the previous data rows 
 *             so please handle nulls
 */
export interface DatabaseBackupSettingArgs {
    /**
     * Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
     *             This is used during restore with overwrite connection strings options.
     */
    connectionStringName?: pulumi.Input<string>;
    /**
     * SqlAzure / MySql
     */
    databaseType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

/**
 * Enabled configuration
 */
export interface EnabledConfigArgs {
    /**
     * Enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * Class containing Routing in production experiments
 */
export interface ExperimentsArgs {
    /**
     * List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
     */
    rampUpRules?: pulumi.Input<pulumi.Input<inputs.web.v20150801.RampUpRuleArgs>[]>;
}

/**
 * Application logs to file system configuration
 */
export interface FileSystemApplicationLogsConfigArgs {
    /**
     * Log level
     */
    level?: pulumi.Input<enums.web.v20150801.LogLevel>;
}

/**
 * Http logs to file system configuration
 */
export interface FileSystemHttpLogsConfigArgs {
    /**
     * Enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Retention in days.
     *             Remove files older than X days.
     *             0 or lower means no retention.
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * Maximum size in megabytes that http log files can use.
     *             When reached old log files will be removed to make space for new ones.
     *             Value can range between 25 and 100.
     */
    retentionInMb?: pulumi.Input<number>;
}

/**
 * The IIS handler mappings used to define which handler processes HTTP requests with certain extension. 
 *             For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
 */
export interface HandlerMappingArgs {
    /**
     * Command-line arguments to be passed to the script processor.
     */
    arguments?: pulumi.Input<string>;
    /**
     * Requests with this extension will be handled using the specified FastCGI application.
     */
    extension?: pulumi.Input<string>;
    /**
     * The absolute path to the FastCGI application.
     */
    scriptProcessor?: pulumi.Input<string>;
}

/**
 * Object that represents a SSL-enabled host name.
 */
export interface HostNameSslStateArgs {
    /**
     * Host name
     */
    name?: pulumi.Input<string>;
    /**
     * SSL type
     */
    sslState: pulumi.Input<enums.web.v20150801.SslState>;
    /**
     * SSL cert thumbprint
     */
    thumbprint?: pulumi.Input<string>;
    /**
     * Set this flag to update existing host name
     */
    toUpdate?: pulumi.Input<boolean>;
    /**
     * Virtual IP address assigned to the host name if IP based SSL is enabled
     */
    virtualIP?: pulumi.Input<string>;
}

/**
 * Specification for a hostingEnvironment (App Service Environment) to use for this resource
 */
export interface HostingEnvironmentProfileArgs {
    /**
     * Resource id of the hostingEnvironment (App Service Environment)
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the hostingEnvironment (App Service Environment) (read only)
     */
    name?: pulumi.Input<string>;
    /**
     * Resource type of the hostingEnvironment (App Service Environment) (read only)
     */
    type?: pulumi.Input<string>;
}

/**
 * Http logs configuration
 */
export interface HttpLogsConfigArgs {
    /**
     * Http logs to azure blob storage configuration
     */
    azureBlobStorage?: pulumi.Input<inputs.web.v20150801.AzureBlobStorageHttpLogsConfigArgs>;
    /**
     * Http logs to file system configuration
     */
    fileSystem?: pulumi.Input<inputs.web.v20150801.FileSystemHttpLogsConfigArgs>;
}

/**
 * Represents an ip security restriction on a web app.
 */
export interface IpSecurityRestrictionArgs {
    /**
     * IP address the security restriction is valid for
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Subnet mask for the range of IP addresses the restriction is valid for
     */
    subnetMask?: pulumi.Input<string>;
}

/**
 * Name value pair
 */
export interface NameValuePairArgs {
    /**
     * Pair name
     */
    name?: pulumi.Input<string>;
    /**
     * Pair value
     */
    value?: pulumi.Input<string>;
}

export interface NetworkAccessControlEntryArgs {
    action?: pulumi.Input<enums.web.v20150801.AccessControlEntryAction>;
    description?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    remoteSubnet?: pulumi.Input<string>;
}

/**
 * Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance
 */
export interface RampUpRuleArgs {
    /**
     * Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net
     */
    actionHostName?: pulumi.Input<string>;
    /**
     * Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.
     *             https://www.siteextensions.net/packages/TiPCallback/
     */
    changeDecisionCallbackUrl?: pulumi.Input<string>;
    /**
     * [Optional] Specifies interval in minutes to reevaluate ReroutePercentage
     */
    changeIntervalInMinutes?: pulumi.Input<number>;
    /**
     * [Optional] In auto ramp up scenario this is the step to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches 
     *             {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
     *             Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
     */
    changeStep?: pulumi.Input<number>;
    /**
     * [Optional] Specifies upper boundary below which ReroutePercentage will stay.
     */
    maxReroutePercentage?: pulumi.Input<number>;
    /**
     * [Optional] Specifies lower boundary above which ReroutePercentage will stay.
     */
    minReroutePercentage?: pulumi.Input<number>;
    /**
     * Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
     */
    name?: pulumi.Input<string>;
    /**
     * Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
     */
    reroutePercentage?: pulumi.Input<number>;
}

/**
 * RequestsBasedTrigger
 */
export interface RequestsBasedTriggerArgs {
    /**
     * Count
     */
    count?: pulumi.Input<number>;
    /**
     * TimeInterval
     */
    timeInterval?: pulumi.Input<string>;
}

/**
 * Configuration of Azure web site
 */
export interface SiteConfigArgs {
    /**
     * Always On
     */
    alwaysOn?: pulumi.Input<boolean>;
    /**
     * Information about the formal API definition for the web app.
     */
    apiDefinition?: pulumi.Input<inputs.web.v20150801.ApiDefinitionInfoArgs>;
    /**
     * App Command Line to launch
     */
    appCommandLine?: pulumi.Input<string>;
    /**
     * Application Settings
     */
    appSettings?: pulumi.Input<pulumi.Input<inputs.web.v20150801.NameValuePairArgs>[]>;
    /**
     * Auto heal enabled
     */
    autoHealEnabled?: pulumi.Input<boolean>;
    /**
     * Auto heal rules
     */
    autoHealRules?: pulumi.Input<inputs.web.v20150801.AutoHealRulesArgs>;
    /**
     * Auto swap slot name
     */
    autoSwapSlotName?: pulumi.Input<string>;
    /**
     * Connection strings
     */
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.web.v20150801.ConnStringInfoArgs>[]>;
    /**
     * Cross-Origin Resource Sharing (CORS) settings.
     */
    cors?: pulumi.Input<inputs.web.v20150801.CorsSettingsArgs>;
    /**
     * Default documents
     */
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Detailed error logging enabled
     */
    detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
    /**
     * Document root
     */
    documentRoot?: pulumi.Input<string>;
    /**
     * This is work around for polymorphic types
     */
    experiments?: pulumi.Input<inputs.web.v20150801.ExperimentsArgs>;
    /**
     * Handler mappings
     */
    handlerMappings?: pulumi.Input<pulumi.Input<inputs.web.v20150801.HandlerMappingArgs>[]>;
    /**
     * HTTP logging Enabled
     */
    httpLoggingEnabled?: pulumi.Input<boolean>;
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
    /**
     * Ip Security restrictions
     */
    ipSecurityRestrictions?: pulumi.Input<pulumi.Input<inputs.web.v20150801.IpSecurityRestrictionArgs>[]>;
    /**
     * Java container
     */
    javaContainer?: pulumi.Input<string>;
    /**
     * Java container version
     */
    javaContainerVersion?: pulumi.Input<string>;
    /**
     * Java version
     */
    javaVersion?: pulumi.Input<string>;
    /**
     * Kind of resource
     */
    kind?: pulumi.Input<string>;
    /**
     * Site limits
     */
    limits?: pulumi.Input<inputs.web.v20150801.SiteLimitsArgs>;
    /**
     * Site load balancing
     */
    loadBalancing?: pulumi.Input<enums.web.v20150801.SiteLoadBalancing>;
    /**
     * Local mysql enabled
     */
    localMySqlEnabled?: pulumi.Input<boolean>;
    /**
     * Resource Location
     */
    location: pulumi.Input<string>;
    /**
     * HTTP Logs Directory size limit
     */
    logsDirectorySizeLimit?: pulumi.Input<number>;
    /**
     * Managed pipeline mode
     */
    managedPipelineMode?: pulumi.Input<enums.web.v20150801.ManagedPipelineMode>;
    /**
     * Site Metadata
     */
    metadata?: pulumi.Input<pulumi.Input<inputs.web.v20150801.NameValuePairArgs>[]>;
    /**
     * Resource Name
     */
    name?: pulumi.Input<string>;
    /**
     * Net Framework Version
     */
    netFrameworkVersion?: pulumi.Input<string>;
    /**
     * Version of Node
     */
    nodeVersion?: pulumi.Input<string>;
    /**
     * Number of workers
     */
    numberOfWorkers?: pulumi.Input<number>;
    /**
     * Version of PHP
     */
    phpVersion?: pulumi.Input<string>;
    /**
     * Publishing password
     */
    publishingPassword?: pulumi.Input<string>;
    /**
     * Publishing user name
     */
    publishingUsername?: pulumi.Input<string>;
    /**
     * Version of Python
     */
    pythonVersion?: pulumi.Input<string>;
    /**
     * Remote Debugging Enabled
     */
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    /**
     * Remote Debugging Version
     */
    remoteDebuggingVersion?: pulumi.Input<string>;
    /**
     * Enable request tracing
     */
    requestTracingEnabled?: pulumi.Input<boolean>;
    /**
     * Request tracing expiration time
     */
    requestTracingExpirationTime?: pulumi.Input<string>;
    /**
     * SCM type
     */
    scmType?: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Tracing options
     */
    tracingOptions?: pulumi.Input<string>;
    /**
     * Resource type
     */
    type?: pulumi.Input<string>;
    /**
     * Use 32 bit worker process
     */
    use32BitWorkerProcess?: pulumi.Input<boolean>;
    /**
     * Virtual applications
     */
    virtualApplications?: pulumi.Input<pulumi.Input<inputs.web.v20150801.VirtualApplicationArgs>[]>;
    /**
     * Vnet name
     */
    vnetName?: pulumi.Input<string>;
    /**
     * Web socket enabled.
     */
    webSocketsEnabled?: pulumi.Input<boolean>;
}

/**
 * Represents metric limits set on a web app.
 */
export interface SiteLimitsArgs {
    /**
     * Maximum allowed disk size usage in MB
     */
    maxDiskSizeInMb?: pulumi.Input<number>;
    /**
     * Maximum allowed memory usage in MB
     */
    maxMemoryInMb?: pulumi.Input<number>;
    /**
     * Maximum allowed CPU usage percentage
     */
    maxPercentageCpu?: pulumi.Input<number>;
}

/**
 * Describes a sku for a scalable resource
 */
export interface SkuDescriptionArgs {
    /**
     * Current number of instances assigned to the resource
     */
    capacity?: pulumi.Input<number>;
    /**
     * Family code of the resource sku
     */
    family?: pulumi.Input<string>;
    /**
     * Name of the resource sku
     */
    name?: pulumi.Input<string>;
    /**
     * Size specifier of the resource sku
     */
    size?: pulumi.Input<string>;
    /**
     * Service Tier of the resource sku
     */
    tier?: pulumi.Input<string>;
}

/**
 * SlowRequestsBasedTrigger
 */
export interface SlowRequestsBasedTriggerArgs {
    /**
     * Count
     */
    count?: pulumi.Input<number>;
    /**
     * TimeInterval
     */
    timeInterval?: pulumi.Input<string>;
    /**
     * TimeTaken
     */
    timeTaken?: pulumi.Input<string>;
}

/**
 * Class containing stamp capacity information
 */
export interface StampCapacityArgs {
    /**
     * Available capacity (# of machines, bytes of storage etc...)
     */
    availableCapacity?: pulumi.Input<number>;
    /**
     * Shared/Dedicated workers
     */
    computeMode?: pulumi.Input<enums.web.v20150801.ComputeModeOptions>;
    /**
     * If true it includes basic sites
     *             Basic sites are not used for capacity allocation.
     */
    excludeFromCapacityAllocation?: pulumi.Input<boolean>;
    /**
     * Is capacity applicable for all sites?
     */
    isApplicableForAllComputeModes?: pulumi.Input<boolean>;
    /**
     * Name of the stamp
     */
    name?: pulumi.Input<string>;
    /**
     * Shared or Dedicated
     */
    siteMode?: pulumi.Input<string>;
    /**
     * Total capacity (# of machines, bytes of storage etc...)
     */
    totalCapacity?: pulumi.Input<number>;
    /**
     * Name of the unit
     */
    unit?: pulumi.Input<string>;
    /**
     * Size of the machines
     */
    workerSize?: pulumi.Input<enums.web.v20150801.WorkerSizeOptions>;
    /**
     * Size Id of machines: 
     *             0 - Small
     *             1 - Medium
     *             2 - Large
     */
    workerSizeId?: pulumi.Input<number>;
}

/**
 * StatusCodeBasedTrigger
 */
export interface StatusCodesBasedTriggerArgs {
    /**
     * Count
     */
    count?: pulumi.Input<number>;
    /**
     * HTTP status code
     */
    status?: pulumi.Input<number>;
    /**
     * SubStatus
     */
    subStatus?: pulumi.Input<number>;
    /**
     * TimeInterval
     */
    timeInterval?: pulumi.Input<string>;
    /**
     * Win32 error code
     */
    win32Status?: pulumi.Input<number>;
}

export interface VirtualApplicationArgs {
    physicalPath?: pulumi.Input<string>;
    preloadEnabled?: pulumi.Input<boolean>;
    virtualDirectories?: pulumi.Input<pulumi.Input<inputs.web.v20150801.VirtualDirectoryArgs>[]>;
    virtualPath?: pulumi.Input<string>;
}

export interface VirtualDirectoryArgs {
    physicalPath?: pulumi.Input<string>;
    virtualPath?: pulumi.Input<string>;
}

/**
 * Class that represents a VIP mapping
 */
export interface VirtualIPMappingArgs {
    /**
     * Is VIP mapping in use
     */
    inUse?: pulumi.Input<boolean>;
    /**
     * Internal HTTP port
     */
    internalHttpPort?: pulumi.Input<number>;
    /**
     * Internal HTTPS port
     */
    internalHttpsPort?: pulumi.Input<number>;
    /**
     * Virtual IP address
     */
    virtualIP?: pulumi.Input<string>;
}

/**
 * Specification for using a virtual network
 */
export interface VirtualNetworkProfileArgs {
    /**
     * Resource id of the virtual network
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the virtual network (read-only)
     */
    name?: pulumi.Input<string>;
    /**
     * Subnet within the virtual network
     */
    subnet?: pulumi.Input<string>;
    /**
     * Resource type of the virtual network (read-only)
     */
    type?: pulumi.Input<string>;
}

/**
 * VnetRoute contract used to pass routing information for a vnet.
 */
export interface VnetRouteArgs {
    /**
     * The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
     */
    endAddress?: pulumi.Input<string>;
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
    /**
     * Kind of resource
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource Location
     */
    location: pulumi.Input<string>;
    /**
     * Resource Name
     */
    name?: pulumi.Input<string>;
    /**
     * The type of route this is:
     *             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
     *             INHERITED - Routes inherited from the real Virtual Network routes
     *             STATIC - Static route set on the web app only
     *             
     *             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
     *             with new INHERITED routes.
     */
    routeType?: pulumi.Input<string>;
    /**
     * The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
     */
    startAddress?: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource type
     */
    type?: pulumi.Input<string>;
}

/**
 * Worker pool of a hostingEnvironment (App Service Environment)
 */
export interface WorkerPoolArgs {
    /**
     * Shared or dedicated web app hosting
     */
    computeMode?: pulumi.Input<enums.web.v20150801.ComputeModeOptions>;
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
    /**
     * Names of all instances in the worker pool (read only)
     */
    instanceNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kind of resource
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource Location
     */
    location: pulumi.Input<string>;
    /**
     * Resource Name
     */
    name?: pulumi.Input<string>;
    /**
     * Describes a sku for a scalable resource
     */
    sku?: pulumi.Input<inputs.web.v20150801.SkuDescriptionArgs>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource type
     */
    type?: pulumi.Input<string>;
    /**
     * Number of instances in the worker pool
     */
    workerCount?: pulumi.Input<number>;
    /**
     * VM size of the worker pool instances
     */
    workerSize?: pulumi.Input<string>;
    /**
     * Worker size id for referencing this worker pool
     */
    workerSizeId?: pulumi.Input<number>;
}

