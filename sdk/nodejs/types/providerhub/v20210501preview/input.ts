// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

export interface AuthorizationActionMappingArgs {
    desired?: pulumi.Input<string>;
    original?: pulumi.Input<string>;
}

/**
 * Properties of the rollout.
 */
export interface DefaultRolloutPropertiesArgs {
    /**
     * The provisioned state of the resource.
     */
    provisioningState?: pulumi.Input<string | enums.providerhub.v20210501preview.ProvisioningState>;
    specification?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutPropertiesSpecificationArgs>;
    status?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutPropertiesStatusArgs>;
}

export interface DefaultRolloutPropertiesSpecificationArgs {
    canary?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutSpecificationCanaryArgs>;
    expeditedRollout?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutSpecificationExpeditedRolloutArgs>;
    highTraffic?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutSpecificationHighTrafficArgs>;
    lowTraffic?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutSpecificationLowTrafficArgs>;
    mediumTraffic?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutSpecificationMediumTrafficArgs>;
    providerRegistration?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutSpecificationProviderRegistrationArgs>;
    resourceTypeRegistrations?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationArgs>[]>;
    restOfTheWorldGroupOne?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutSpecificationRestOfTheWorldGroupOneArgs>;
    restOfTheWorldGroupTwo?: pulumi.Input<inputs.providerhub.v20210501preview.DefaultRolloutSpecificationRestOfTheWorldGroupTwoArgs>;
}

export interface DefaultRolloutPropertiesStatusArgs {
    completedRegions?: pulumi.Input<pulumi.Input<string>[]>;
    failedOrSkippedRegions?: pulumi.Input<{[key: string]: pulumi.Input<inputs.providerhub.v20210501preview.ExtendedErrorInfoArgs>}>;
    nextTrafficRegion?: pulumi.Input<string | enums.providerhub.v20210501preview.TrafficRegionCategory>;
    nextTrafficRegionScheduledTime?: pulumi.Input<string>;
    subscriptionReregistrationResult?: pulumi.Input<string | enums.providerhub.v20210501preview.SubscriptionReregistrationResult>;
}

export interface DefaultRolloutSpecificationCanaryArgs {
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    skipRegions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DefaultRolloutSpecificationExpeditedRolloutArgs {
    /**
     * Indicates whether expedited rollout is enabled/disabled
     */
    enabled?: pulumi.Input<boolean>;
}

export interface DefaultRolloutSpecificationHighTrafficArgs {
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    waitDuration?: pulumi.Input<string>;
}

export interface DefaultRolloutSpecificationLowTrafficArgs {
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    waitDuration?: pulumi.Input<string>;
}

export interface DefaultRolloutSpecificationMediumTrafficArgs {
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    waitDuration?: pulumi.Input<string>;
}

export interface DefaultRolloutSpecificationProviderRegistrationArgs {
    properties?: pulumi.Input<inputs.providerhub.v20210501preview.ProviderRegistrationPropertiesArgs>;
}

export interface DefaultRolloutSpecificationRestOfTheWorldGroupOneArgs {
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    waitDuration?: pulumi.Input<string>;
}

export interface DefaultRolloutSpecificationRestOfTheWorldGroupTwoArgs {
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    waitDuration?: pulumi.Input<string>;
}

export interface ExtendedErrorInfoArgs {
    additionalInfo?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.TypedErrorInfoArgs>[]>;
    code?: pulumi.Input<string>;
    details?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ExtendedErrorInfoArgs>[]>;
    message?: pulumi.Input<string>;
    target?: pulumi.Input<string>;
}

export interface ExtendedLocationOptionsArgs {
    supportedPolicy?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface LightHouseAuthorizationArgs {
    principalId: pulumi.Input<string>;
    roleDefinitionId: pulumi.Input<string>;
}

export interface LinkedAccessCheckArgs {
    actionName?: pulumi.Input<string>;
    linkedAction?: pulumi.Input<string>;
    linkedActionVerb?: pulumi.Input<string>;
    linkedProperty?: pulumi.Input<string>;
    linkedType?: pulumi.Input<string>;
}

export interface LoggingRuleArgs {
    action: pulumi.Input<string>;
    detailLevel: pulumi.Input<string | enums.providerhub.v20210501preview.LoggingDetails>;
    direction: pulumi.Input<string | enums.providerhub.v20210501preview.LoggingDirections>;
    hiddenPropertyPaths?: pulumi.Input<inputs.providerhub.v20210501preview.LoggingRuleHiddenPropertyPathsArgs>;
}

export interface LoggingRuleHiddenPropertyPathsArgs {
    hiddenPathsOnRequest?: pulumi.Input<pulumi.Input<string>[]>;
    hiddenPathsOnResponse?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NotificationEndpointArgs {
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    notificationDestination?: pulumi.Input<string>;
}

export interface NotificationRegistrationPropertiesArgs {
    includedEvents?: pulumi.Input<pulumi.Input<string>[]>;
    messageScope?: pulumi.Input<string | enums.providerhub.v20210501preview.MessageScope>;
    notificationEndpoints?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.NotificationEndpointArgs>[]>;
    notificationMode?: pulumi.Input<string | enums.providerhub.v20210501preview.NotificationMode>;
    /**
     * The provisioned state of the resource.
     */
    provisioningState?: pulumi.Input<string | enums.providerhub.v20210501preview.ProvisioningState>;
}

/**
 * Properties of an Operation.
 */
export interface OperationsDefinitionArgs {
    actionType?: pulumi.Input<string>;
    /**
     * Display information of the operation.
     */
    display: pulumi.Input<inputs.providerhub.v20210501preview.OperationsDefinitionDisplayArgs>;
    /**
     * Indicates whether the operation applies to data-plane.
     */
    isDataAction?: pulumi.Input<boolean>;
    /**
     * Name of the operation.
     */
    name: pulumi.Input<string>;
    origin?: pulumi.Input<string>;
    properties?: any;
}

/**
 * Display information of the operation.
 */
export interface OperationsDefinitionDisplayArgs {
    description: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    provider: pulumi.Input<string>;
    resource: pulumi.Input<string>;
}

export interface ProviderHubMetadataProviderAuthenticationArgs {
    allowedAudiences: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProviderHubMetadataThirdPartyProviderAuthorizationArgs {
    authorizations?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.LightHouseAuthorizationArgs>[]>;
    managedByTenantId?: pulumi.Input<string>;
}

export interface ProviderRegistrationPropertiesArgs {
    capabilities?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ResourceProviderCapabilitiesArgs>[]>;
    featuresRule?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceProviderManifestPropertiesFeaturesRuleArgs>;
    management?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceProviderManifestPropertiesManagementArgs>;
    metadata?: any;
    namespace?: pulumi.Input<string>;
    providerAuthentication?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceProviderManifestPropertiesProviderAuthenticationArgs>;
    providerAuthorizations?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ResourceProviderAuthorizationArgs>[]>;
    providerHubMetadata?: pulumi.Input<inputs.providerhub.v20210501preview.ProviderRegistrationPropertiesProviderHubMetadataArgs>;
    providerType?: pulumi.Input<string | enums.providerhub.v20210501preview.ResourceProviderType>;
    providerVersion?: pulumi.Input<string>;
    /**
     * The provisioned state of the resource.
     */
    provisioningState?: pulumi.Input<string | enums.providerhub.v20210501preview.ProvisioningState>;
    requestHeaderOptions?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceProviderManifestPropertiesRequestHeaderOptionsArgs>;
    requiredFeatures?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProviderRegistrationPropertiesProviderHubMetadataArgs {
    providerAuthentication?: pulumi.Input<inputs.providerhub.v20210501preview.ProviderHubMetadataProviderAuthenticationArgs>;
    providerAuthorizations?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ResourceProviderAuthorizationArgs>[]>;
    thirdPartyProviderAuthorization?: pulumi.Input<inputs.providerhub.v20210501preview.ProviderHubMetadataThirdPartyProviderAuthorizationArgs>;
}

export interface ResourceConcurrencyControlOptionArgs {
    policy?: pulumi.Input<string | enums.providerhub.v20210501preview.Policy>;
}

export interface ResourceProviderAuthorizationArgs {
    applicationId?: pulumi.Input<string>;
    managedByRoleDefinitionId?: pulumi.Input<string>;
    roleDefinitionId?: pulumi.Input<string>;
}

export interface ResourceProviderCapabilitiesArgs {
    effect: pulumi.Input<string | enums.providerhub.v20210501preview.ResourceProviderCapabilitiesEffect>;
    quotaId: pulumi.Input<string>;
    requiredFeatures?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourceProviderManifestPropertiesFeaturesRuleArgs {
    requiredFeaturesPolicy: pulumi.Input<string | enums.providerhub.v20210501preview.FeaturesPolicy>;
}

export interface ResourceProviderManifestPropertiesManagementArgs {
    incidentContactEmail?: pulumi.Input<string>;
    incidentRoutingService?: pulumi.Input<string>;
    incidentRoutingTeam?: pulumi.Input<string>;
    manifestOwners?: pulumi.Input<pulumi.Input<string>[]>;
    resourceAccessPolicy?: pulumi.Input<string>;
    resourceAccessRoles?: pulumi.Input<any[]>;
    schemaOwners?: pulumi.Input<pulumi.Input<string>[]>;
    serviceTreeInfos?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ServiceTreeInfoArgs>[]>;
}

export interface ResourceProviderManifestPropertiesProviderAuthenticationArgs {
    allowedAudiences: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourceProviderManifestPropertiesRequestHeaderOptionsArgs {
    optInHeaders?: pulumi.Input<string | enums.providerhub.v20210501preview.OptInHeaderType>;
}

export interface ResourceTypeEndpointArgs {
    apiVersions?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    extensions?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeExtensionArgs>[]>;
    featuresRule?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeEndpointFeaturesRuleArgs>;
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    requiredFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    timeout?: pulumi.Input<string>;
}

export interface ResourceTypeEndpointFeaturesRuleArgs {
    requiredFeaturesPolicy: pulumi.Input<string | enums.providerhub.v20210501preview.FeaturesPolicy>;
}

export interface ResourceTypeExtensionArgs {
    endpointUri?: pulumi.Input<string>;
    extensionCategories?: pulumi.Input<pulumi.Input<string | enums.providerhub.v20210501preview.ExtensionCategory>[]>;
    timeout?: pulumi.Input<string>;
}

export interface ResourceTypeExtensionOptionsResourceCreationBeginArgs {
    request?: pulumi.Input<pulumi.Input<string | enums.providerhub.v20210501preview.ExtensionOptionType>[]>;
    response?: pulumi.Input<pulumi.Input<string | enums.providerhub.v20210501preview.ExtensionOptionType>[]>;
}

export interface ResourceTypeRegistrationArgs {
    properties?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesArgs>;
}

export interface ResourceTypeRegistrationPropertiesArgs {
    allowedUnauthorizedActions?: pulumi.Input<pulumi.Input<string>[]>;
    authorizationActionMappings?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.AuthorizationActionMappingArgs>[]>;
    checkNameAvailabilitySpecifications?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecificationsArgs>;
    defaultApiVersion?: pulumi.Input<string>;
    disallowedActionVerbs?: pulumi.Input<pulumi.Input<string>[]>;
    enableAsyncOperation?: pulumi.Input<boolean>;
    enableThirdPartyS2S?: pulumi.Input<boolean>;
    endpoints?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeEndpointArgs>[]>;
    extendedLocations?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ExtendedLocationOptionsArgs>[]>;
    extensionOptions?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesExtensionOptionsArgs>;
    featuresRule?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesFeaturesRuleArgs>;
    identityManagement?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesIdentityManagementArgs>;
    isPureProxy?: pulumi.Input<boolean>;
    linkedAccessChecks?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.LinkedAccessCheckArgs>[]>;
    loggingRules?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.LoggingRuleArgs>[]>;
    management?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesManagementArgs>;
    marketplaceType?: pulumi.Input<string>;
    /**
     * The provisioned state of the resource.
     */
    provisioningState?: pulumi.Input<string | enums.providerhub.v20210501preview.ProvisioningState>;
    regionality?: pulumi.Input<string | enums.providerhub.v20210501preview.Regionality>;
    requestHeaderOptions?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesRequestHeaderOptionsArgs>;
    requiredFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    resourceConcurrencyControlOptions?: pulumi.Input<{[key: string]: pulumi.Input<inputs.providerhub.v20210501preview.ResourceConcurrencyControlOptionArgs>}>;
    resourceDeletionPolicy?: pulumi.Input<string | enums.providerhub.v20210501preview.ResourceDeletionPolicy>;
    resourceGraphConfiguration?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesResourceGraphConfigurationArgs>;
    resourceMovePolicy?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesResourceMovePolicyArgs>;
    routingType?: pulumi.Input<string | enums.providerhub.v20210501preview.RoutingType>;
    serviceTreeInfos?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ServiceTreeInfoArgs>[]>;
    subscriptionLifecycleNotificationSpecifications?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsArgs>;
    subscriptionStateRules?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.SubscriptionStateRuleArgs>[]>;
    swaggerSpecifications?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.SwaggerSpecificationArgs>[]>;
    templateDeploymentOptions?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeRegistrationPropertiesTemplateDeploymentOptionsArgs>;
    throttlingRules?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ThrottlingRuleArgs>[]>;
}

export interface ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecificationsArgs {
    enableDefaultValidation?: pulumi.Input<boolean>;
    resourceTypesWithCustomValidation?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourceTypeRegistrationPropertiesExtensionOptionsArgs {
    resourceCreationBegin?: pulumi.Input<inputs.providerhub.v20210501preview.ResourceTypeExtensionOptionsResourceCreationBeginArgs>;
}

export interface ResourceTypeRegistrationPropertiesFeaturesRuleArgs {
    requiredFeaturesPolicy: pulumi.Input<string | enums.providerhub.v20210501preview.FeaturesPolicy>;
}

export interface ResourceTypeRegistrationPropertiesIdentityManagementArgs {
    applicationId?: pulumi.Input<string>;
    type?: pulumi.Input<string | enums.providerhub.v20210501preview.IdentityManagementTypes>;
}

export interface ResourceTypeRegistrationPropertiesManagementArgs {
    incidentContactEmail?: pulumi.Input<string>;
    incidentRoutingService?: pulumi.Input<string>;
    incidentRoutingTeam?: pulumi.Input<string>;
    manifestOwners?: pulumi.Input<pulumi.Input<string>[]>;
    resourceAccessPolicy?: pulumi.Input<string>;
    resourceAccessRoles?: pulumi.Input<any[]>;
    schemaOwners?: pulumi.Input<pulumi.Input<string>[]>;
    serviceTreeInfos?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ServiceTreeInfoArgs>[]>;
}

export interface ResourceTypeRegistrationPropertiesRequestHeaderOptionsArgs {
    optInHeaders?: pulumi.Input<string | enums.providerhub.v20210501preview.OptInHeaderType>;
}

export interface ResourceTypeRegistrationPropertiesResourceGraphConfigurationArgs {
    apiVersion?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
}

export interface ResourceTypeRegistrationPropertiesResourceMovePolicyArgs {
    crossResourceGroupMoveEnabled?: pulumi.Input<boolean>;
    crossSubscriptionMoveEnabled?: pulumi.Input<boolean>;
    validationRequired?: pulumi.Input<boolean>;
}

export interface ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsArgs {
    softDeleteTTL?: pulumi.Input<string>;
    subscriptionStateOverrideActions?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.SubscriptionStateOverrideActionArgs>[]>;
}

export interface ResourceTypeRegistrationPropertiesTemplateDeploymentOptionsArgs {
    preflightOptions?: pulumi.Input<pulumi.Input<string | enums.providerhub.v20210501preview.PreflightOption>[]>;
    preflightSupported?: pulumi.Input<boolean>;
}

export interface ServiceTreeInfoArgs {
    componentId?: pulumi.Input<string>;
    serviceId?: pulumi.Input<string>;
}

export interface SkuCapabilityArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SkuCostArgs {
    extendedUnit?: pulumi.Input<string>;
    meterId: pulumi.Input<string>;
    quantity?: pulumi.Input<number>;
}

export interface SkuLocationInfoArgs {
    extendedLocations?: pulumi.Input<pulumi.Input<string>[]>;
    location: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    zoneDetails?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.SkuZoneDetailArgs>[]>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SkuResourcePropertiesArgs {
    /**
     * The provisioned state of the resource.
     */
    provisioningState?: pulumi.Input<string | enums.providerhub.v20210501preview.ProvisioningState>;
    skuSettings: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.SkuSettingArgs>[]>;
}

export interface SkuSettingArgs {
    capabilities?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.SkuCapabilityArgs>[]>;
    capacity?: pulumi.Input<inputs.providerhub.v20210501preview.SkuSettingCapacityArgs>;
    costs?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.SkuCostArgs>[]>;
    family?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    locationInfo?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.SkuLocationInfoArgs>[]>;
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    requiredFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    requiredQuotaIds?: pulumi.Input<pulumi.Input<string>[]>;
    size?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface SkuSettingCapacityArgs {
    default?: pulumi.Input<number>;
    maximum?: pulumi.Input<number>;
    minimum: pulumi.Input<number>;
    scaleType?: pulumi.Input<string | enums.providerhub.v20210501preview.SkuScaleType>;
}

export interface SkuZoneDetailArgs {
    capabilities?: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.SkuCapabilityArgs>[]>;
    name?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SubscriptionStateOverrideActionArgs {
    action: pulumi.Input<string | enums.providerhub.v20210501preview.SubscriptionNotificationOperation>;
    state: pulumi.Input<string | enums.providerhub.v20210501preview.SubscriptionTransitioningState>;
}

export interface SubscriptionStateRuleArgs {
    allowedActions?: pulumi.Input<pulumi.Input<string>[]>;
    state?: pulumi.Input<string | enums.providerhub.v20210501preview.SubscriptionState>;
}

export interface SwaggerSpecificationArgs {
    apiVersions?: pulumi.Input<pulumi.Input<string>[]>;
    swaggerSpecFolderUri?: pulumi.Input<string>;
}

export interface ThrottlingMetricArgs {
    interval?: pulumi.Input<string>;
    limit: pulumi.Input<number>;
    type: pulumi.Input<string | enums.providerhub.v20210501preview.ThrottlingMetricType>;
}

export interface ThrottlingRuleArgs {
    action: pulumi.Input<string>;
    metrics: pulumi.Input<pulumi.Input<inputs.providerhub.v20210501preview.ThrottlingMetricArgs>[]>;
    requiredFeatures?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TypedErrorInfoArgs {
    type: pulumi.Input<string>;
}

