// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Gets or sets the application server configuration.
 */
export interface ApplicationServerConfigurationArgs {
    /**
     * The number of app server instances.
     */
    instanceCount: pulumi.Input<number>;
    /**
     * The subnet id.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Gets or sets the virtual machine configuration.
     */
    virtualMachineConfiguration: pulumi.Input<inputs.workloads.v20211201preview.VirtualMachineConfigurationArgs>;
}

/**
 * Backup profile
 */
export interface BackupProfileArgs {
    /**
     * Whether to enable Azure backup for the workload
     */
    backupEnabled: pulumi.Input<string | enums.workloads.v20211201preview.EnableBackup>;
}

/**
 * Cache profile
 */
export interface CacheProfileArgs {
    /**
     * Cache capacity
     */
    capacity: pulumi.Input<number>;
    /**
     * Cache family
     */
    family: pulumi.Input<string | enums.workloads.v20211201preview.RedisCacheFamily>;
    /**
     * Cache name
     */
    name?: pulumi.Input<string>;
    /**
     * Cache SKU name
     */
    skuName: pulumi.Input<string>;
}

/**
 * Gets or sets the central server configuration.
 */
export interface CentralServerConfigurationArgs {
    /**
     * The number of central server VMs.
     */
    instanceCount: pulumi.Input<number>;
    /**
     * The subnet id.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Gets or sets the virtual machine configuration.
     */
    virtualMachineConfiguration: pulumi.Input<inputs.workloads.v20211201preview.VirtualMachineConfigurationArgs>;
}

/**
 * Gets or sets the DB2 provider properties.
 */
export interface DB2ProviderInstancePropertiesArgs {
    /**
     * Gets or sets the db2 database name.
     */
    dbName?: pulumi.Input<string>;
    /**
     * Gets or sets the db2 database password.
     */
    dbPassword?: pulumi.Input<string>;
    /**
     * Gets or sets the key vault URI to secret with the database password.
     */
    dbPasswordUri?: pulumi.Input<string>;
    /**
     * Gets or sets the db2 database sql port.
     */
    dbPort?: pulumi.Input<string>;
    /**
     * Gets or sets the db2 database user name.
     */
    dbUsername?: pulumi.Input<string>;
    /**
     * Gets or sets the target virtual machine name.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The provider type. For example, the value can be SapHana.
     * Expected value is 'Db2'.
     */
    providerType: pulumi.Input<"Db2">;
    /**
     * Gets or sets the SAP System Identifier
     */
    sapSid?: pulumi.Input<string>;
    /**
     * Gets or sets the blob URI to SSL certificate for the DB2 Database.
     */
    sslCertificateUri?: pulumi.Input<string>;
    /**
     * Gets or sets certificate preference if secure communication is enabled.
     */
    sslPreference?: pulumi.Input<string | enums.workloads.v20211201preview.SslPreference>;
}

/**
 * Gets or sets the database configuration.
 */
export interface DatabaseConfigurationArgs {
    /**
     * The database type.
     */
    databaseType?: pulumi.Input<string | enums.workloads.v20211201preview.SAPDatabaseType>;
    /**
     * The number of database VMs.
     */
    instanceCount: pulumi.Input<number>;
    /**
     * The subnet id.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Gets or sets the virtual machine configuration.
     */
    virtualMachineConfiguration: pulumi.Input<inputs.workloads.v20211201preview.VirtualMachineConfigurationArgs>;
}

/**
 * Workload database profile
 */
export interface DatabaseProfileArgs {
    /**
     * Backup retention days for the server
     */
    backupRetentionDays?: pulumi.Input<number>;
    /**
     * Whether to enable HA for the server
     */
    haEnabled?: pulumi.Input<string | enums.workloads.v20211201preview.HAEnabled>;
    /**
     * Database server name
     */
    serverName?: pulumi.Input<string>;
    /**
     * The name of the server SKU, e.g. Standard_D32s_v4
     */
    sku: pulumi.Input<string>;
    /**
     * Whether to enable SSL enforcement on the database
     */
    sslEnforcementEnabled?: pulumi.Input<string | enums.workloads.v20211201preview.EnableSslEnforcement>;
    /**
     * Database storage size in GB
     */
    storageInGB?: pulumi.Input<number>;
    /**
     * Storage IOPS for the server
     */
    storageIops?: pulumi.Input<number>;
    /**
     * SKU name for database storage
     */
    storageSku?: pulumi.Input<string>;
    /**
     * Tier of the server SKU
     */
    tier: pulumi.Input<enums.workloads.v20211201preview.DatabaseTier>;
    /**
     * Database type
     */
    type: pulumi.Input<string | enums.workloads.v20211201preview.DatabaseType>;
    /**
     * Database version
     */
    version?: pulumi.Input<string>;
}

/**
 * Defines the url and storage account ID where deployer VM packages are uploaded
 */
export interface DeployerVmPackagesArgs {
    /**
     * The deployer VM packages storage account id
     */
    storageAccountId?: pulumi.Input<string>;
    /**
     * The URL to the deployer VM packages file.
     */
    url?: pulumi.Input<string>;
}

/**
 * Deployment Configuration.
 */
export interface DeploymentConfigurationArgs {
    /**
     * The geo-location where the SAP system is to be created.
     */
    appLocation?: pulumi.Input<string>;
    /**
     * The configuration Type.
     * Expected value is 'Deployment'.
     */
    configurationType: pulumi.Input<"Deployment">;
    /**
     * The infrastructure configuration.
     */
    infrastructureConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.SingleServerConfigurationArgs | inputs.workloads.v20211201preview.ThreeTierConfigurationArgs>;
    /**
     * The software configuration.
     */
    softwareConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.ExternalInstallationSoftwareConfigurationArgs | inputs.workloads.v20211201preview.SAPInstallWithoutOSConfigSoftwareConfigurationArgs | inputs.workloads.v20211201preview.ServiceInitiatedSoftwareConfigurationArgs>;
}

/**
 * Deployment along with OS Configuration.
 */
export interface DeploymentWithOSConfigurationArgs {
    /**
     * The geo-location where the SAP system is to be created.
     */
    appLocation?: pulumi.Input<string>;
    /**
     * The configuration Type.
     * Expected value is 'DeploymentWithOSConfig'.
     */
    configurationType: pulumi.Input<"DeploymentWithOSConfig">;
    /**
     * The infrastructure configuration.
     */
    infrastructureConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.SingleServerConfigurationArgs | inputs.workloads.v20211201preview.ThreeTierConfigurationArgs>;
    /**
     * The OS and SAP configuration.
     */
    osSapConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.OsSapConfigurationArgs>;
    /**
     * The software configuration.
     */
    softwareConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.ExternalInstallationSoftwareConfigurationArgs | inputs.workloads.v20211201preview.SAPInstallWithoutOSConfigSoftwareConfigurationArgs | inputs.workloads.v20211201preview.ServiceInitiatedSoftwareConfigurationArgs>;
}

/**
 * Discovery Details.
 */
export interface DiscoveryConfigurationArgs {
    /**
     * The virtual machine ID of the Central Server.
     */
    centralServerVmId?: pulumi.Input<string>;
    /**
     * The configuration Type.
     * Expected value is 'Discovery'.
     */
    configurationType: pulumi.Input<"Discovery">;
}

/**
 * Disk resource creation details
 */
export interface DiskInfoArgs {
    /**
     * Disk size in GB
     */
    sizeInGB?: pulumi.Input<number>;
    /**
     * Storage type
     */
    storageType: pulumi.Input<enums.workloads.v20211201preview.DiskStorageType>;
}

/**
 * The SAP Software configuration Input when the software is installed externally outside the service.
 */
export interface ExternalInstallationSoftwareConfigurationArgs {
    /**
     * The resource ID of the virtual machine containing the central server instance.
     */
    centralServerVmId?: pulumi.Input<string>;
    /**
     * The SAP software installation Type.
     * Expected value is 'External'.
     */
    softwareInstallationType: pulumi.Input<"External">;
}

/**
 * File share profile
 */
export interface FileshareProfileArgs {
    /**
     * File share size in GB
     */
    shareSizeInGB?: pulumi.Input<number>;
    /**
     * Share type
     */
    shareType: pulumi.Input<string | enums.workloads.v20211201preview.FileShareType>;
    /**
     * File share backing storage type
     */
    storageType: pulumi.Input<string | enums.workloads.v20211201preview.FileShareStorageType>;
}

/**
 * Gets or sets the provider properties.
 */
export interface HanaDbProviderInstancePropertiesArgs {
    /**
     * Gets or sets the hana database name.
     */
    dbName?: pulumi.Input<string>;
    /**
     * Gets or sets the database password.
     */
    dbPassword?: pulumi.Input<string>;
    /**
     * Gets or sets the key vault URI to secret with the database password.
     */
    dbPasswordUri?: pulumi.Input<string>;
    /**
     * Gets or sets the blob URI to SSL certificate for the DB.
     */
    dbSslCertificateUri?: pulumi.Input<string>;
    /**
     * Gets or sets the database user name.
     */
    dbUsername?: pulumi.Input<string>;
    /**
     * Gets or sets the target virtual machine size.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Gets or sets the database instance number.
     */
    instanceNumber?: pulumi.Input<string>;
    /**
     * The provider type. For example, the value can be SapHana.
     * Expected value is 'SapHana'.
     */
    providerType: pulumi.Input<"SapHana">;
    /**
     * Gets or sets the database sql port.
     */
    sqlPort?: pulumi.Input<string>;
    /**
     * Gets or sets the blob URI to SSL certificate for the DB.
     */
    sslCertificateUri?: pulumi.Input<string>;
    /**
     * Gets or sets the hostname(s) in the SSL certificate.
     */
    sslHostNameInCertificate?: pulumi.Input<string>;
    /**
     * Gets or sets certificate preference if secure communication is enabled.
     */
    sslPreference?: pulumi.Input<string | enums.workloads.v20211201preview.SslPreference>;
}

/**
 * Gets or sets the high availability configuration.
 */
export interface HighAvailabilityConfigurationArgs {
    /**
     * The high availability type.
     */
    highAvailabilityType: pulumi.Input<string | enums.workloads.v20211201preview.SAPHighAvailabilityType>;
}

/**
 * Gets or sets the HA software configuration.
 */
export interface HighAvailabilitySoftwareConfigurationArgs {
    /**
     * The fencing client id.
     */
    fencingClientId: pulumi.Input<string>;
    /**
     * The fencing client id secret/password. The secret should never expire. This will be used pacemaker to start/stop the cluster VMs.
     */
    fencingClientPassword: pulumi.Input<string>;
}

/**
 * Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
 */
export interface ImageReferenceArgs {
    /**
     * Specifies the offer of the platform image or marketplace image used to create the virtual machine.
     */
    offer?: pulumi.Input<string>;
    /**
     * The image publisher.
     */
    publisher?: pulumi.Input<string>;
    /**
     * Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call.
     */
    sharedGalleryImageId?: pulumi.Input<string>;
    /**
     * The image SKU.
     */
    sku?: pulumi.Input<string>;
    /**
     * Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
     */
    version?: pulumi.Input<string>;
}

/**
 * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
 */
export interface LinuxConfigurationArgs {
    /**
     * Specifies whether password authentication should be disabled.
     */
    disablePasswordAuthentication?: pulumi.Input<boolean>;
    /**
     * The OS Type
     * Expected value is 'Linux'.
     */
    osType: pulumi.Input<"Linux">;
    /**
     * Specifies the ssh key configuration for a Linux OS. (This property is deprecated, please use 'sshKeyPair' instead)
     */
    ssh?: pulumi.Input<inputs.workloads.v20211201preview.SshConfigurationArgs>;
    /**
     * The SSH Key-pair used to authenticate with the VM's.
     */
    sshKeyPair?: pulumi.Input<inputs.workloads.v20211201preview.SshKeyPairArgs>;
}

/**
 * Managed resource group configuration
 */
export interface ManagedRGConfigurationArgs {
    /**
     * Managed resource group name
     */
    name?: pulumi.Input<string>;
}

/**
 * Gets or sets the SQL server provider properties.
 */
export interface MsSqlServerProviderInstancePropertiesArgs {
    /**
     * Gets or sets the database password.
     */
    dbPassword?: pulumi.Input<string>;
    /**
     * Gets or sets the key vault URI to secret with the database password.
     */
    dbPasswordUri?: pulumi.Input<string>;
    /**
     * Gets or sets the database sql port.
     */
    dbPort?: pulumi.Input<string>;
    /**
     * Gets or sets the database user name.
     */
    dbUsername?: pulumi.Input<string>;
    /**
     * Gets or sets the SQL server host name.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The provider type. For example, the value can be SapHana.
     * Expected value is 'MsSqlServer'.
     */
    providerType: pulumi.Input<"MsSqlServer">;
    /**
     * Gets or sets the SAP System Identifier
     */
    sapSid?: pulumi.Input<string>;
    /**
     * Gets or sets the blob URI to SSL certificate for the SQL Database.
     */
    sslCertificateUri?: pulumi.Input<string>;
    /**
     * Gets or sets certificate preference if secure communication is enabled.
     */
    sslPreference?: pulumi.Input<string | enums.workloads.v20211201preview.SslPreference>;
}

/**
 * Defines the network configuration type for SAP system infrastructure that is being deployed 
 */
export interface NetworkConfigurationArgs {
    /**
     * Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed
     */
    isSecondaryIpEnabled?: pulumi.Input<boolean>;
}
/**
 * networkConfigurationArgsProvideDefaults sets the appropriate defaults for NetworkConfigurationArgs
 */
export function networkConfigurationArgsProvideDefaults(val: NetworkConfigurationArgs): NetworkConfigurationArgs {
    return {
        ...val,
        isSecondaryIpEnabled: (val.isSecondaryIpEnabled) ?? false,
    };
}

/**
 * Network profile
 */
export interface NetworkProfileArgs {
    /**
     * Whether to enable Azure front door
     */
    azureFrontDoorEnabled?: pulumi.Input<string | enums.workloads.v20211201preview.AzureFrontDoorEnabled>;
    /**
     * Capacity, applicable only for Application Gateway
     */
    capacity?: pulumi.Input<number>;
    /**
     * Load balancer SKU
     */
    loadBalancerSku?: pulumi.Input<string>;
    /**
     * Load balancer tier
     */
    loadBalancerTier?: pulumi.Input<string>;
    /**
     * Load balancer type
     */
    loadBalancerType: pulumi.Input<string | enums.workloads.v20211201preview.LoadBalancerType>;
}

/**
 * VM or VMSS node profile
 */
export interface NodeProfileArgs {
    /**
     * Data disks details. This property is not in use right now
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.workloads.v20211201preview.DiskInfoArgs>[]>;
    /**
     * VM or VMSS name
     */
    name?: pulumi.Input<string>;
    /**
     * VM SKU for node(s)
     */
    nodeSku: pulumi.Input<string>;
    /**
     * OS disk details
     */
    osDisk: pulumi.Input<inputs.workloads.v20211201preview.DiskInfoArgs>;
    /**
     * OS image used for creating the nodes
     */
    osImage: pulumi.Input<inputs.workloads.v20211201preview.OsImageProfileArgs>;
}

/**
 * Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.
 */
export interface OSProfileArgs {
    /**
     * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * Specifies Windows operating system settings on the virtual machine.
     */
    osConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.LinuxConfigurationArgs | inputs.workloads.v20211201preview.WindowsConfigurationArgs>;
}

/**
 * OS image profile
 */
export interface OsImageProfileArgs {
    /**
     * OS image offer
     */
    offer?: pulumi.Input<string | enums.workloads.v20211201preview.OSImageOffer>;
    /**
     * OS image publisher
     */
    publisher?: pulumi.Input<string | enums.workloads.v20211201preview.OSImagePublisher>;
    /**
     * OS image sku
     */
    sku?: pulumi.Input<string | enums.workloads.v20211201preview.OSImageSku>;
    /**
     * OS image version
     */
    version?: pulumi.Input<string | enums.workloads.v20211201preview.OSImageVersion>;
}

/**
 * Defines the OS and SAP Configurations for Deployment
 */
export interface OsSapConfigurationArgs {
    /**
     * The url and storage account ID where deployer VM packages are uploaded
     */
    deployerVmPackages?: pulumi.Input<inputs.workloads.v20211201preview.DeployerVmPackagesArgs>;
    /**
     * The FQDN to set for the SAP system
     */
    sapFqdn?: pulumi.Input<string>;
}

/**
 * PHP profile
 */
export interface PhpProfileArgs {
    /**
     * PHP version
     */
    version: pulumi.Input<string | enums.workloads.v20211201preview.PHPVersion>;
}

/**
 * Identity for the resource. Currently not supported
 */
export interface PhpWorkloadResourceIdentityArgs {
    /**
     * Type of manage identity
     */
    type: pulumi.Input<string | enums.workloads.v20211201preview.ManagedServiceIdentityType>;
    /**
     * User assigned identities dictionary
     */
    userAssignedIdentities?: pulumi.Input<{[key: string]: any}>;
}

/**
 * Gets or sets the PrometheusHaCluster provider properties.
 */
export interface PrometheusHaClusterProviderInstancePropertiesArgs {
    /**
     * Gets or sets the clusterName.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Gets or sets the target machine name.
     */
    hostname?: pulumi.Input<string>;
    /**
     * URL of the Node Exporter endpoint.
     */
    prometheusUrl?: pulumi.Input<string>;
    /**
     * The provider type. For example, the value can be SapHana.
     * Expected value is 'PrometheusHaCluster'.
     */
    providerType: pulumi.Input<"PrometheusHaCluster">;
    /**
     * Gets or sets the cluster sid.
     */
    sid?: pulumi.Input<string>;
    /**
     * Gets or sets the blob URI to SSL certificate for the HA cluster exporter.
     */
    sslCertificateUri?: pulumi.Input<string>;
    /**
     * Gets or sets certificate preference if secure communication is enabled.
     */
    sslPreference?: pulumi.Input<string | enums.workloads.v20211201preview.SslPreference>;
}

/**
 * Gets or sets the PrometheusOS provider properties.
 */
export interface PrometheusOSProviderInstancePropertiesArgs {
    /**
     * URL of the Node Exporter endpoint
     */
    prometheusUrl?: pulumi.Input<string>;
    /**
     * The provider type. For example, the value can be SapHana.
     * Expected value is 'PrometheusOS'.
     */
    providerType: pulumi.Input<"PrometheusOS">;
    /**
     * Gets or sets the blob URI to SSL certificate for the prometheus node exporter.
     */
    sslCertificateUri?: pulumi.Input<string>;
    /**
     * Gets or sets certificate preference if secure communication is enabled.
     */
    sslPreference?: pulumi.Input<string | enums.workloads.v20211201preview.SslPreference>;
}

/**
 * The SAP Software configuration Input when the software is to be installed by service without OS Configurations
 */
export interface SAPInstallWithoutOSConfigSoftwareConfigurationArgs {
    /**
     * The URL to the SAP Build of Materials(BOM) file.
     */
    bomUrl: pulumi.Input<string>;
    /**
     * Gets or sets the HA software configuration.
     */
    highAvailabilitySoftwareConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.HighAvailabilitySoftwareConfigurationArgs>;
    /**
     * The SAP bits storage account id.
     */
    sapBitsStorageAccountId: pulumi.Input<string>;
    /**
     * The SAP software installation Type.
     * Expected value is 'SAPInstallWithoutOSConfig'.
     */
    softwareInstallationType: pulumi.Input<"SAPInstallWithoutOSConfig">;
    /**
     * The software version to install.
     */
    softwareVersion: pulumi.Input<string>;
}

/**
 * Gets or sets the provider properties.
 */
export interface SapNetWeaverProviderInstancePropertiesArgs {
    /**
     * The provider type. For example, the value can be SapHana.
     * Expected value is 'SapNetWeaver'.
     */
    providerType: pulumi.Input<"SapNetWeaver">;
    /**
     * Gets or sets the SAP Client ID.
     */
    sapClientId?: pulumi.Input<string>;
    /**
     * Gets or sets the list of HostFile Entries
     */
    sapHostFileEntries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Gets or sets the target virtual machine IP Address/FQDN.
     */
    sapHostname?: pulumi.Input<string>;
    /**
     * Gets or sets the instance number of SAP NetWeaver.
     */
    sapInstanceNr?: pulumi.Input<string>;
    /**
     * Sets the SAP password.
     */
    sapPassword?: pulumi.Input<string>;
    /**
     * Gets or sets the key vault URI to secret with the SAP password.
     */
    sapPasswordUri?: pulumi.Input<string>;
    /**
     * Gets or sets the SAP HTTP port number.
     */
    sapPortNumber?: pulumi.Input<string>;
    /**
     * Gets or sets the SAP System Identifier
     */
    sapSid?: pulumi.Input<string>;
    /**
     * Gets or sets the blob URI to SSL certificate for the SAP system.
     */
    sapSslCertificateUri?: pulumi.Input<string>;
    /**
     * Gets or sets the SAP user name.
     */
    sapUsername?: pulumi.Input<string>;
    /**
     * Gets or sets the blob URI to SSL certificate for the SAP system.
     */
    sslCertificateUri?: pulumi.Input<string>;
    /**
     * Gets or sets certificate preference if secure communication is enabled.
     */
    sslPreference?: pulumi.Input<string | enums.workloads.v20211201preview.SslPreference>;
}

/**
 * Search profile
 */
export interface SearchProfileArgs {
    /**
     * Data disks details. This property is not in use right now
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.workloads.v20211201preview.DiskInfoArgs>[]>;
    /**
     * VM or VMSS name
     */
    name?: pulumi.Input<string>;
    /**
     * VM SKU for node(s)
     */
    nodeSku: pulumi.Input<string>;
    /**
     * OS disk details
     */
    osDisk: pulumi.Input<inputs.workloads.v20211201preview.DiskInfoArgs>;
    /**
     * OS image used for creating the nodes
     */
    osImage: pulumi.Input<inputs.workloads.v20211201preview.OsImageProfileArgs>;
    /**
     * Search type
     */
    searchType: pulumi.Input<string | enums.workloads.v20211201preview.SearchType>;
}

/**
 * The SAP Software configuration Input when the software is to be installed by service.
 */
export interface ServiceInitiatedSoftwareConfigurationArgs {
    /**
     * The URL to the SAP Build of Materials(BOM) file.
     */
    bomUrl: pulumi.Input<string>;
    /**
     * Gets or sets the HA software configuration.
     */
    highAvailabilitySoftwareConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.HighAvailabilitySoftwareConfigurationArgs>;
    /**
     * The SAP bits storage account id.
     */
    sapBitsStorageAccountId: pulumi.Input<string>;
    /**
     * The FQDN to set for the SAP system during install.
     */
    sapFqdn: pulumi.Input<string>;
    /**
     * The SAP software installation Type.
     * Expected value is 'ServiceInitiated'.
     */
    softwareInstallationType: pulumi.Input<"ServiceInitiated">;
    /**
     * The software version to install.
     */
    softwareVersion: pulumi.Input<string>;
    /**
     * The SSH private key.
     */
    sshPrivateKey: pulumi.Input<string>;
}

/**
 * Gets or sets the single server configuration.
 */
export interface SingleServerConfigurationArgs {
    /**
     * The application resource group where SAP system resources will be deployed.
     */
    appResourceGroup: pulumi.Input<string>;
    /**
     * The database type.
     */
    databaseType?: pulumi.Input<string | enums.workloads.v20211201preview.SAPDatabaseType>;
    /**
     * The type of SAP deployment, single server or Three tier.
     * Expected value is 'SingleServer'.
     */
    deploymentType: pulumi.Input<"SingleServer">;
    /**
     * Network configuration for the server
     */
    networkConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.NetworkConfigurationArgs>;
    /**
     * The subnet id.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Gets or sets the virtual machine configuration.
     */
    virtualMachineConfiguration: pulumi.Input<inputs.workloads.v20211201preview.VirtualMachineConfigurationArgs>;
}
/**
 * singleServerConfigurationArgsProvideDefaults sets the appropriate defaults for SingleServerConfigurationArgs
 */
export function singleServerConfigurationArgsProvideDefaults(val: SingleServerConfigurationArgs): SingleServerConfigurationArgs {
    return {
        ...val,
        networkConfiguration: (val.networkConfiguration ? pulumi.output(val.networkConfiguration).apply(inputs.workloads.v20211201preview.networkConfigurationArgsProvideDefaults) : undefined),
    };
}

/**
 * Workload website profile
 */
export interface SiteProfileArgs {
    /**
     * Domain name for the application site URL
     */
    domainName?: pulumi.Input<string>;
}

/**
 * The resource model definition representing SKU
 */
export interface SkuArgs {
    /**
     * If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
     */
    capacity?: pulumi.Input<number>;
    /**
     * If the service has different generations of hardware, for the same SKU, then that can be captured here.
     */
    family?: pulumi.Input<string>;
    /**
     * The name of the SKU. Ex - P3. It is typically a letter+number code
     */
    name: pulumi.Input<string>;
    /**
     * The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. 
     */
    size?: pulumi.Input<string>;
    /**
     * This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
     */
    tier?: pulumi.Input<enums.workloads.v20211201preview.SkuTier>;
}

/**
 * SSH configuration for Linux based VMs running on Azure
 */
export interface SshConfigurationArgs {
    /**
     * The list of SSH public keys used to authenticate with linux based VMs.
     */
    publicKeys?: pulumi.Input<pulumi.Input<inputs.workloads.v20211201preview.SshPublicKeyArgs>[]>;
}

/**
 * The SSH Key-pair used to authenticate with the VM. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
 */
export interface SshKeyPairArgs {
    /**
     * SSH private key.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * SSH public key
     */
    publicKey?: pulumi.Input<string>;
}

/**
 * Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
 */
export interface SshPublicKeyArgs {
    /**
     * SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
     */
    keyData?: pulumi.Input<string>;
}

/**
 * Gets or sets the three tier SAP configuration.
 */
export interface ThreeTierConfigurationArgs {
    /**
     * The application resource group where SAP system resources will be deployed.
     */
    appResourceGroup: pulumi.Input<string>;
    /**
     * The application server configuration.
     */
    applicationServer: pulumi.Input<inputs.workloads.v20211201preview.ApplicationServerConfigurationArgs>;
    /**
     * The central server configuration.
     */
    centralServer: pulumi.Input<inputs.workloads.v20211201preview.CentralServerConfigurationArgs>;
    /**
     * The database configuration.
     */
    databaseServer: pulumi.Input<inputs.workloads.v20211201preview.DatabaseConfigurationArgs>;
    /**
     * The type of SAP deployment, single server or Three tier.
     * Expected value is 'ThreeTier'.
     */
    deploymentType: pulumi.Input<"ThreeTier">;
    /**
     * The high availability configuration.
     */
    highAvailabilityConfig?: pulumi.Input<inputs.workloads.v20211201preview.HighAvailabilityConfigurationArgs>;
    /**
     * Network configuration common to all servers
     */
    networkConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.NetworkConfigurationArgs>;
}
/**
 * threeTierConfigurationArgsProvideDefaults sets the appropriate defaults for ThreeTierConfigurationArgs
 */
export function threeTierConfigurationArgsProvideDefaults(val: ThreeTierConfigurationArgs): ThreeTierConfigurationArgs {
    return {
        ...val,
        networkConfiguration: (val.networkConfiguration ? pulumi.output(val.networkConfiguration).apply(inputs.workloads.v20211201preview.networkConfigurationArgsProvideDefaults) : undefined),
    };
}

/**
 * Managed service identity (user assigned identities)
 */
export interface UserAssignedServiceIdentityArgs {
    /**
     * Type of manage identity
     */
    type: pulumi.Input<string | enums.workloads.v20211201preview.ManagedServiceIdentityType>;
    /**
     * User assigned identities dictionary
     */
    userAssignedIdentities?: pulumi.Input<{[key: string]: any}>;
}

/**
 * User profile to configure on a compute resources such as VM, VMSS
 */
export interface UserProfileArgs {
    /**
     * SSH public key data
     */
    sshPublicKey: pulumi.Input<string>;
    /**
     * User name
     */
    userName: pulumi.Input<string>;
}

/**
 * Defines the virtual machine configuration.
 */
export interface VirtualMachineConfigurationArgs {
    /**
     * The image reference.
     */
    imageReference: pulumi.Input<inputs.workloads.v20211201preview.ImageReferenceArgs>;
    /**
     * The OS profile.
     */
    osProfile: pulumi.Input<inputs.workloads.v20211201preview.OSProfileArgs>;
    /**
     * The virtual machine size.
     */
    vmSize: pulumi.Input<string>;
}

/**
 * VMSS profile
 */
export interface VmssNodesProfileArgs {
    /**
     * Maximum number of nodes for autoscale
     */
    autoScaleMaxCount?: pulumi.Input<number>;
    /**
     * Minimum number of nodes for autoscale
     */
    autoScaleMinCount?: pulumi.Input<number>;
    /**
     * Data disks details. This property is not in use right now
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.workloads.v20211201preview.DiskInfoArgs>[]>;
    /**
     * VM or VMSS name
     */
    name?: pulumi.Input<string>;
    /**
     * VM SKU for node(s)
     */
    nodeSku: pulumi.Input<string>;
    /**
     * OS disk details
     */
    osDisk: pulumi.Input<inputs.workloads.v20211201preview.DiskInfoArgs>;
    /**
     * OS image used for creating the nodes
     */
    osImage: pulumi.Input<inputs.workloads.v20211201preview.OsImageProfileArgs>;
}

/**
 * Specifies Windows operating system settings on the virtual machine.
 */
export interface WindowsConfigurationArgs {
    /**
     * The OS Type
     * Expected value is 'Windows'.
     */
    osType: pulumi.Input<"Windows">;
}

