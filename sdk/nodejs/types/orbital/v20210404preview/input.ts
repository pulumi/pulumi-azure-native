// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Contact Profile link
 */
export interface ContactProfileLinkArgs {
    /**
     * Contact Profile Link Channel
     */
    channels: pulumi.Input<pulumi.Input<inputs.orbital.v20210404preview.ContactProfileLinkChannelArgs>[]>;
    /**
     * Direction (uplink or downlink)
     */
    direction: pulumi.Input<string | enums.orbital.v20210404preview.Direction>;
    /**
     * Effective Isotropic Radiated Power (EIRP) in dBW.
     */
    eirpdBW?: pulumi.Input<number>;
    /**
     * Gain To Noise Temperature in db/K.
     */
    gainOverTemperature?: pulumi.Input<number>;
    /**
     * polarization. eg (RHCP, LHCP)
     */
    polarization: pulumi.Input<string | enums.orbital.v20210404preview.Polarization>;
}

/**
 * Contact Profile Link Channel
 */
export interface ContactProfileLinkChannelArgs {
    /**
     * Bandwidth in MHz
     */
    bandwidthMHz: pulumi.Input<number>;
    /**
     * Center Frequency in MHz
     */
    centerFrequencyMHz: pulumi.Input<number>;
    /**
     * Configuration for decoding
     */
    decodingConfiguration?: pulumi.Input<string>;
    /**
     * Configuration for demodulation
     */
    demodulationConfiguration?: pulumi.Input<string>;
    /**
     * Configuration for encoding
     */
    encodingConfiguration?: pulumi.Input<string>;
    /**
     * Customer End point to store/retrieve data during a contact.
     */
    endPoint: pulumi.Input<inputs.orbital.v20210404preview.EndPointArgs>;
    /**
     * Configuration for modulation
     */
    modulationConfiguration?: pulumi.Input<string>;
}

/**
 * Customer End point to store/retrieve data during a contact.
 */
export interface EndPointArgs {
    /**
     * Name of an end point.
     */
    endPointName: pulumi.Input<string>;
    /**
     * IP Address.
     */
    ipAddress: pulumi.Input<string>;
    /**
     * TCP port to listen on to receive data.
     */
    port: pulumi.Input<string>;
    /**
     * Protocol either UDP or TCP.
     */
    protocol: pulumi.Input<string | enums.orbital.v20210404preview.Protocol>;
}

/**
 * Resource Reference
 */
export interface ResourceReference {
    /**
     * Resource ID.
     */
    id?: string;
}

/**
 * Resource Reference
 */
export interface ResourceReferenceArgs {
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
}

/**
 * Spacecraft Link
 */
export interface SpacecraftLinkArgs {
    /**
     * Bandwidth in MHz
     */
    bandwidthMHz: pulumi.Input<number>;
    /**
     * Center Frequency in MHz
     */
    centerFrequencyMHz: pulumi.Input<number>;
    /**
     * Direction (uplink or downlink)
     */
    direction: pulumi.Input<string | enums.orbital.v20210404preview.Direction>;
    /**
     * polarization. eg (RHCP, LHCP)
     */
    polarization: pulumi.Input<string | enums.orbital.v20210404preview.Polarization>;
}

