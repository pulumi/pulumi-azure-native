// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20190601preview from "./v20190601preview/output";
/**
 * The collection of Connectivity related groups and policies within the Managed Network
 */
export interface ConnectivityCollectionResponse {
    /**
     * The collection of connectivity related Managed Network Groups within the Managed Network
     */
    groups: outputs.managednetwork.ManagedNetworkGroupResponse[];
    /**
     * The collection of Managed Network Peering Policies within the Managed Network
     */
    peerings: outputs.managednetwork.ManagedNetworkPeeringPolicyResponse[];
}

/**
 * The Managed Network Group resource
 */
export interface ManagedNetworkGroupResponse {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag: string;
    /**
     * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    id: string;
    /**
     * Responsibility role under which this Managed Network Group will be created
     */
    kind?: string;
    /**
     * The geo-location where the resource lives
     */
    location?: string;
    /**
     * The collection of management groups covered by the Managed Network
     */
    managementGroups?: outputs.managednetwork.ResourceIdResponse[];
    /**
     * The name of the resource
     */
    name: string;
    /**
     * Provisioning state of the ManagedNetwork resource.
     */
    provisioningState: string;
    /**
     * The collection of  subnets covered by the Managed Network
     */
    subnets?: outputs.managednetwork.ResourceIdResponse[];
    /**
     * The collection of subscriptions covered by the Managed Network
     */
    subscriptions?: outputs.managednetwork.ResourceIdResponse[];
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    type: string;
    /**
     * The collection of virtual nets covered by the Managed Network
     */
    virtualNetworks?: outputs.managednetwork.ResourceIdResponse[];
}

/**
 * Properties of a Managed Network Peering Policy
 */
export interface ManagedNetworkPeeringPolicyPropertiesResponse {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    etag: string;
    /**
     * Gets or sets the hub virtual network ID
     */
    hub?: outputs.managednetwork.ResourceIdResponse;
    /**
     * Gets or sets the mesh group IDs
     */
    mesh?: outputs.managednetwork.ResourceIdResponse[];
    /**
     * Provisioning state of the ManagedNetwork resource.
     */
    provisioningState: string;
    /**
     * Gets or sets the spokes group IDs
     */
    spokes?: outputs.managednetwork.ResourceIdResponse[];
    /**
     * Gets or sets the connectivity type of a network structure policy
     */
    type: string;
}

/**
 * The Managed Network Peering Policy resource
 */
export interface ManagedNetworkPeeringPolicyResponse {
    /**
     * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    id: string;
    /**
     * The geo-location where the resource lives
     */
    location?: string;
    /**
     * The name of the resource
     */
    name: string;
    /**
     * Gets or sets the properties of a Managed Network Policy
     */
    properties?: outputs.managednetwork.ManagedNetworkPeeringPolicyPropertiesResponse;
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    type: string;
}

/**
 * Generic pointer to a resource
 */
export interface ResourceIdResponse {
    /**
     * Resource Id
     */
    id?: string;
}

/**
 * Scope of a Managed Network
 */
export interface ScopeResponse {
    /**
     * The collection of management groups covered by the Managed Network
     */
    managementGroups?: outputs.managednetwork.ResourceIdResponse[];
    /**
     * The collection of  subnets covered by the Managed Network
     */
    subnets?: outputs.managednetwork.ResourceIdResponse[];
    /**
     * The collection of subscriptions covered by the Managed Network
     */
    subscriptions?: outputs.managednetwork.ResourceIdResponse[];
    /**
     * The collection of virtual nets covered by the Managed Network
     */
    virtualNetworks?: outputs.managednetwork.ResourceIdResponse[];
}

