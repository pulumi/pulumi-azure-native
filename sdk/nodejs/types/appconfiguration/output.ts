// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20190201preview from "./v20190201preview/output";
export * as v20191001 from "./v20191001/output";
export * as v20191101preview from "./v20191101preview/output";
export * as v20200601 from "./v20200601/output";
export * as v20200701preview from "./v20200701preview/output";
export * as v20210301preview from "./v20210301preview/output";
export * as v20211001preview from "./v20211001preview/output";
export * as v20220301preview from "./v20220301preview/output";
export * as v20220501 from "./v20220501/output";
/**
 * An API key used for authenticating with a configuration store endpoint.
 */
export interface ApiKeyResponse {
    /**
     * A connection string that can be used by supporting clients for authentication.
     */
    connectionString: string;
    /**
     * The key ID.
     */
    id: string;
    /**
     * The last time any of the key's properties were modified.
     */
    lastModified: string;
    /**
     * A name for the key describing its usage.
     */
    name: string;
    /**
     * Whether this key can only be used for read operations.
     */
    readOnly: boolean;
    /**
     * The value of the key that is used for authentication purposes.
     */
    value: string;
}

/**
 * The encryption settings for a configuration store.
 */
export interface EncryptionPropertiesResponse {
    /**
     * Key vault properties.
     */
    keyVaultProperties?: outputs.appconfiguration.KeyVaultPropertiesResponse;
}

/**
 * Settings concerning key vault encryption for a configuration store.
 */
export interface KeyVaultPropertiesResponse {
    /**
     * The client id of the identity which will be used to access key vault.
     */
    identityClientId?: string;
    /**
     * The URI of the key vault key used to encrypt data.
     */
    keyIdentifier?: string;
}

/**
 * A reference to a related private endpoint connection.
 */
export interface PrivateEndpointConnectionReferenceResponse {
    /**
     * The resource ID.
     */
    id: string;
    /**
     * The name of the resource.
     */
    name: string;
    /**
     * The resource of private endpoint.
     */
    privateEndpoint?: outputs.appconfiguration.PrivateEndpointResponse;
    /**
     * A collection of information about the state of the connection between service consumer and provider.
     */
    privateLinkServiceConnectionState: outputs.appconfiguration.PrivateLinkServiceConnectionStateResponse;
    /**
     * The provisioning status of the private endpoint connection.
     */
    provisioningState: string;
    /**
     * The type of the resource.
     */
    type: string;
}

/**
 * Private endpoint which a connection belongs to.
 */
export interface PrivateEndpointResponse {
    /**
     * The resource Id for private endpoint
     */
    id?: string;
}

/**
 * The state of a private link service connection.
 */
export interface PrivateLinkServiceConnectionStateResponse {
    /**
     * Any action that is required beyond basic workflow (approve/ reject/ disconnect)
     */
    actionsRequired: string;
    /**
     * The private link service connection description.
     */
    description?: string;
    /**
     * The private link service connection status.
     */
    status?: string;
}

/**
 * An identity that can be associated with a resource.
 */
export interface ResourceIdentityResponse {
    /**
     * The principal id of the identity. This property will only be provided for a system-assigned identity.
     */
    principalId: string;
    /**
     * The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
     */
    tenantId: string;
    /**
     * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
     */
    type?: string;
    /**
     * The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
     */
    userAssignedIdentities?: {[key: string]: outputs.appconfiguration.UserIdentityResponse};
}

/**
 * Describes a configuration store SKU.
 */
export interface SkuResponse {
    /**
     * The SKU name of the configuration store.
     */
    name: string;
}

/**
 * A resource identity that is managed by the user of the service.
 */
export interface UserIdentityResponse {
    /**
     * The client ID of the user-assigned identity.
     */
    clientId: string;
    /**
     * The principal ID of the user-assigned identity.
     */
    principalId: string;
}

