// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * A Machine Learning compute based on AKS.
 */
export interface AKSResponse {
    /**
     * Location for the underlying compute
     */
    computeLocation?: string;
    /**
     * The type of compute
     * Expected value is 'AKS'.
     */
    computeType: "AKS";
    /**
     * The date and time when the compute was created.
     */
    createdOn: string;
    /**
     * The description of the Machine Learning compute.
     */
    description?: string;
    /**
     * The date and time when the compute was last modified.
     */
    modifiedOn: string;
    /**
     * AKS properties
     */
    properties?: outputs.machinelearningservices.v20180301preview.AKSResponseProperties;
    /**
     * Errors during provisioning
     */
    provisioningErrors: outputs.machinelearningservices.v20180301preview.MachineLearningServiceErrorResponse[];
    /**
     * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
     */
    provisioningState: string;
    /**
     * ARM resource id of the compute
     */
    resourceId?: string;
}

/**
 * AKS properties
 */
export interface AKSResponseProperties {
    /**
     * Number of agents
     */
    agentCount?: number;
    /**
     * Agent virtual machine size
     */
    agentVMSize?: string;
    /**
     * Cluster full qualified domain name
     */
    clusterFqdn?: string;
    /**
     * SSL configuration
     */
    sslConfiguration?: outputs.machinelearningservices.v20180301preview.SslConfigurationResponse;
    /**
     * System services
     */
    systemServices?: outputs.machinelearningservices.v20180301preview.SystemServiceResponse[];
}

/**
 * A Machine Learning compute based on Azure BatchAI.
 */
export interface BatchAIResponse {
    /**
     * Location for the underlying compute
     */
    computeLocation?: string;
    /**
     * The type of compute
     * Expected value is 'BatchAI'.
     */
    computeType: "BatchAI";
    /**
     * The date and time when the compute was created.
     */
    createdOn: string;
    /**
     * The description of the Machine Learning compute.
     */
    description?: string;
    /**
     * The date and time when the compute was last modified.
     */
    modifiedOn: string;
    /**
     * BatchAI properties
     */
    properties?: outputs.machinelearningservices.v20180301preview.BatchAIResponseProperties;
    /**
     * Errors during provisioning
     */
    provisioningErrors: outputs.machinelearningservices.v20180301preview.MachineLearningServiceErrorResponse[];
    /**
     * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
     */
    provisioningState: string;
    /**
     * ARM resource id of the compute
     */
    resourceId?: string;
}

/**
 * BatchAI properties
 */
export interface BatchAIResponseProperties {
    /**
     * Scale settings for BatchAI
     */
    scaleSettings?: outputs.machinelearningservices.v20180301preview.ScaleSettingsResponse;
    /**
     * Virtual Machine priority
     */
    vmPriority?: string;
    /**
     * Virtual Machine Size
     */
    vmSize?: string;
}

/**
 * A DataFactory compute.
 */
export interface DataFactoryResponse {
    /**
     * Location for the underlying compute
     */
    computeLocation?: string;
    /**
     * The type of compute
     * Expected value is 'DataFactory'.
     */
    computeType: "DataFactory";
    /**
     * The date and time when the compute was created.
     */
    createdOn: string;
    /**
     * The description of the Machine Learning compute.
     */
    description?: string;
    /**
     * The date and time when the compute was last modified.
     */
    modifiedOn: string;
    /**
     * Errors during provisioning
     */
    provisioningErrors: outputs.machinelearningservices.v20180301preview.MachineLearningServiceErrorResponse[];
    /**
     * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
     */
    provisioningState: string;
    /**
     * ARM resource id of the compute
     */
    resourceId?: string;
}

/**
 * Error detail information.
 */
export interface ErrorDetailResponse {
    /**
     * Error code.
     */
    code: string;
    /**
     * Error message.
     */
    message: string;
}

/**
 * Error response information.
 */
export interface ErrorResponseResponse {
    /**
     * Error code.
     */
    code: string;
    /**
     * An array of error detail objects.
     */
    details?: outputs.machinelearningservices.v20180301preview.ErrorDetailResponse[];
    /**
     * Error message.
     */
    message: string;
}

/**
 * A HDInsight compute.
 */
export interface HDInsightResponse {
    /**
     * Location for the underlying compute
     */
    computeLocation?: string;
    /**
     * The type of compute
     * Expected value is 'HDInsight'.
     */
    computeType: "HDInsight";
    /**
     * The date and time when the compute was created.
     */
    createdOn: string;
    /**
     * The description of the Machine Learning compute.
     */
    description?: string;
    /**
     * The date and time when the compute was last modified.
     */
    modifiedOn: string;
    properties?: outputs.machinelearningservices.v20180301preview.HDInsightResponseProperties;
    /**
     * Errors during provisioning
     */
    provisioningErrors: outputs.machinelearningservices.v20180301preview.MachineLearningServiceErrorResponse[];
    /**
     * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
     */
    provisioningState: string;
    /**
     * ARM resource id of the compute
     */
    resourceId?: string;
}

export interface HDInsightResponseProperties {
    /**
     * Public IP address of the master node of the cluster.
     */
    address?: string;
    /**
     * Admin credentials for master node of the cluster
     */
    administratorAccount?: outputs.machinelearningservices.v20180301preview.VirtualMachineSshCredentialsResponse;
    /**
     * Port open for ssh connections on the master node of the cluster.
     */
    sshPort?: number;
}

/**
 * Identity for the resource.
 */
export interface IdentityResponse {
    /**
     * The principal ID of resource identity.
     */
    principalId: string;
    /**
     * The tenant ID of resource.
     */
    tenantId: string;
    /**
     * The identity type.
     */
    type?: string;
}

/**
 * Wrapper for error response to follow ARM guidelines.
 */
export interface MachineLearningServiceErrorResponse {
    /**
     * The error response.
     */
    error?: outputs.machinelearningservices.v20180301preview.ErrorResponseResponse;
}

export interface PasswordResponse {
    name: string;
    value: string;
}

export interface RegistryListCredentialsResultResponse {
    location: string;
    passwords?: outputs.machinelearningservices.v20180301preview.PasswordResponse[];
    username: string;
}

/**
 * scale settings for BatchAI Compute
 */
export interface ScaleSettingsResponse {
    /**
     * Enable or disable auto scale
     */
    autoScaleEnabled?: boolean;
    /**
     * Max number of nodes to use
     */
    maxNodeCount?: number;
    /**
     * Min number of nodes to use
     */
    minNodeCount?: number;
}

/**
 * The SSL configuration for scoring
 */
export interface SslConfigurationResponse {
    /**
     * Cert data
     */
    cert?: string;
    /**
     * CNAME of the cert
     */
    cname?: string;
    /**
     * Key data
     */
    key?: string;
    /**
     * Enable or disable SSL for scoring
     */
    status?: string;
}

/**
 * A system service running on a compute.
 */
export interface SystemServiceResponse {
    /**
     * Public IP address
     */
    publicIpAddress: string;
    /**
     * The type of this system service.
     */
    systemServiceType: string;
    /**
     * The version for this type.
     */
    version: string;
}

/**
 * A Machine Learning compute based on Azure Virtual Machines.
 */
export interface VirtualMachineResponse {
    /**
     * Location for the underlying compute
     */
    computeLocation?: string;
    /**
     * The type of compute
     * Expected value is 'VirtualMachine'.
     */
    computeType: "VirtualMachine";
    /**
     * The date and time when the compute was created.
     */
    createdOn: string;
    /**
     * The description of the Machine Learning compute.
     */
    description?: string;
    /**
     * The date and time when the compute was last modified.
     */
    modifiedOn: string;
    properties?: outputs.machinelearningservices.v20180301preview.VirtualMachineResponseProperties;
    /**
     * Errors during provisioning
     */
    provisioningErrors: outputs.machinelearningservices.v20180301preview.MachineLearningServiceErrorResponse[];
    /**
     * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
     */
    provisioningState: string;
    /**
     * ARM resource id of the compute
     */
    resourceId?: string;
}

export interface VirtualMachineResponseProperties {
    /**
     * Public IP address of the virtual machine.
     */
    address?: string;
    /**
     * Admin credentials for virtual machine
     */
    administratorAccount?: outputs.machinelearningservices.v20180301preview.VirtualMachineSshCredentialsResponse;
    /**
     * Port open for ssh connections.
     */
    sshPort?: number;
    /**
     * Virtual Machine size
     */
    virtualMachineSize?: string;
}

/**
 * Admin credentials for virtual machine
 */
export interface VirtualMachineSshCredentialsResponse {
    /**
     * Password of admin account
     */
    password?: string;
    /**
     * Private key data
     */
    privateKeyData?: string;
    /**
     * Public key data
     */
    publicKeyData?: string;
    /**
     * Username of admin account
     */
    username?: string;
}

