// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * A Machine Learning compute based on AKS.
 */
export interface AKSArgs {
    /**
     * Location for the underlying compute
     */
    computeLocation?: pulumi.Input<string>;
    /**
     * The type of compute
     * Expected value is 'AKS'.
     */
    computeType: pulumi.Input<"AKS">;
    /**
     * The description of the Machine Learning compute.
     */
    description?: pulumi.Input<string>;
    /**
     * AKS properties
     */
    properties?: pulumi.Input<inputs.machinelearningservices.v20200218preview.AKSPropertiesArgs>;
    /**
     * ARM resource id of the underlying compute
     */
    resourceId?: pulumi.Input<string>;
}

/**
 * AKS properties
 */
export interface AKSPropertiesArgs {
    /**
     * Number of agents
     */
    agentCount?: pulumi.Input<number>;
    /**
     * Agent virtual machine size
     */
    agentVMSize?: pulumi.Input<string>;
    /**
     * AKS networking configuration for vnet
     */
    aksNetworkingConfiguration?: pulumi.Input<inputs.machinelearningservices.v20200218preview.AksNetworkingConfigurationArgs>;
    /**
     * Cluster full qualified domain name
     */
    clusterFqdn?: pulumi.Input<string>;
    /**
     * SSL configuration
     */
    sslConfiguration?: pulumi.Input<inputs.machinelearningservices.v20200218preview.SslConfigurationArgs>;
}

/**
 * Advance configuration for AKS networking
 */
export interface AksNetworkingConfigurationArgs {
    /**
     * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
     */
    dnsServiceIP?: pulumi.Input<string>;
    /**
     * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
     */
    dockerBridgeCidr?: pulumi.Input<string>;
    /**
     * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
     */
    serviceCidr?: pulumi.Input<string>;
    /**
     * Virtual network subnet resource ID the compute nodes belong to
     */
    subnetId?: pulumi.Input<string>;
}

/**
 * An Azure Machine Learning compute.
 */
export interface AmlComputeArgs {
    /**
     * Location for the underlying compute
     */
    computeLocation?: pulumi.Input<string>;
    /**
     * The type of compute
     * Expected value is 'AmlCompute'.
     */
    computeType: pulumi.Input<"AmlCompute">;
    /**
     * The description of the Machine Learning compute.
     */
    description?: pulumi.Input<string>;
    /**
     * AML Compute properties
     */
    properties?: pulumi.Input<inputs.machinelearningservices.v20200218preview.AmlComputePropertiesArgs>;
    /**
     * ARM resource id of the underlying compute
     */
    resourceId?: pulumi.Input<string>;
}
/**
 * amlComputeArgsProvideDefaults sets the appropriate defaults for AmlComputeArgs
 */
export function amlComputeArgsProvideDefaults(val: AmlComputeArgs): AmlComputeArgs {
    return {
        ...val,
        properties: (val.properties ? pulumi.output(val.properties).apply(inputs.machinelearningservices.v20200218preview.amlComputePropertiesArgsProvideDefaults) : undefined),
    };
}

/**
 * AML Compute properties
 */
export interface AmlComputePropertiesArgs {
    /**
     * OS Type.
     */
    osType?: pulumi.Input<string | enums.machinelearningservices.v20200218preview.OsType>;
    /**
     * State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
     */
    remoteLoginPortPublicAccess?: pulumi.Input<string | enums.machinelearningservices.v20200218preview.RemoteLoginPortPublicAccess>;
    /**
     * Scale settings for AML Compute
     */
    scaleSettings?: pulumi.Input<inputs.machinelearningservices.v20200218preview.ScaleSettingsArgs>;
    /**
     * Virtual network subnet resource ID the compute nodes belong to.
     */
    subnet?: pulumi.Input<inputs.machinelearningservices.v20200218preview.ResourceIdArgs>;
    /**
     * Credentials for an administrator user account that will be created on each compute node.
     */
    userAccountCredentials?: pulumi.Input<inputs.machinelearningservices.v20200218preview.UserAccountCredentialsArgs>;
    /**
     * The ARM resource identifier of the virtual machine image for the compute nodes. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{gallery name}/images/{image definition name}/versions/{version id}. The virtual machine image must be in the same region and subscription as the cluster.
     */
    virtualMachineImage?: pulumi.Input<inputs.machinelearningservices.v20200218preview.ResourceIdArgs>;
    /**
     * Virtual Machine priority
     */
    vmPriority?: pulumi.Input<string | enums.machinelearningservices.v20200218preview.VmPriority>;
    /**
     * Virtual Machine Size
     */
    vmSize?: pulumi.Input<string>;
}
/**
 * amlComputePropertiesArgsProvideDefaults sets the appropriate defaults for AmlComputePropertiesArgs
 */
export function amlComputePropertiesArgsProvideDefaults(val: AmlComputePropertiesArgs): AmlComputePropertiesArgs {
    return {
        ...val,
        osType: (val.osType) ?? "Linux",
        remoteLoginPortPublicAccess: (val.remoteLoginPortPublicAccess) ?? "NotSpecified",
        scaleSettings: (val.scaleSettings ? pulumi.output(val.scaleSettings).apply(inputs.machinelearningservices.v20200218preview.scaleSettingsArgsProvideDefaults) : undefined),
    };
}

/**
 * A user that can be assigned to a compute instance.
 */
export interface AssignedUserArgs {
    /**
     * User’s AAD Object Id.
     */
    objectId: pulumi.Input<string>;
    /**
     * User’s AAD Tenant Id.
     */
    tenantId: pulumi.Input<string>;
}

/**
 * An Azure Machine Learning compute instance.
 */
export interface ComputeInstanceArgs {
    /**
     * Location for the underlying compute
     */
    computeLocation?: pulumi.Input<string>;
    /**
     * The type of compute
     * Expected value is 'ComputeInstance'.
     */
    computeType: pulumi.Input<"ComputeInstance">;
    /**
     * The description of the Machine Learning compute.
     */
    description?: pulumi.Input<string>;
    /**
     * Compute Instance properties
     */
    properties?: pulumi.Input<inputs.machinelearningservices.v20200218preview.ComputeInstancePropertiesArgs>;
    /**
     * ARM resource id of the underlying compute
     */
    resourceId?: pulumi.Input<string>;
}
/**
 * computeInstanceArgsProvideDefaults sets the appropriate defaults for ComputeInstanceArgs
 */
export function computeInstanceArgsProvideDefaults(val: ComputeInstanceArgs): ComputeInstanceArgs {
    return {
        ...val,
        properties: (val.properties ? pulumi.output(val.properties).apply(inputs.machinelearningservices.v20200218preview.computeInstancePropertiesArgsProvideDefaults) : undefined),
    };
}

/**
 * Compute Instance properties
 */
export interface ComputeInstancePropertiesArgs {
    /**
     * Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
     */
    applicationSharingPolicy?: pulumi.Input<string | enums.machinelearningservices.v20200218preview.ApplicationSharingPolicy>;
    /**
     * The Compute Instance Authorization type. Available values are personal (default).
     */
    computeInstanceAuthorizationType?: pulumi.Input<string | enums.machinelearningservices.v20200218preview.ComputeInstanceAuthorizationType>;
    /**
     * Settings for a personal compute instance.
     */
    personalComputeInstanceSettings?: pulumi.Input<inputs.machinelearningservices.v20200218preview.PersonalComputeInstanceSettingsArgs>;
    /**
     * Specifies policy and settings for SSH access.
     */
    sshSettings?: pulumi.Input<inputs.machinelearningservices.v20200218preview.ComputeInstanceSshSettingsArgs>;
    /**
     * Virtual network subnet resource ID the compute nodes belong to.
     */
    subnet?: pulumi.Input<inputs.machinelearningservices.v20200218preview.ResourceIdArgs>;
    /**
     * Virtual Machine Size
     */
    vmSize?: pulumi.Input<string>;
}
/**
 * computeInstancePropertiesArgsProvideDefaults sets the appropriate defaults for ComputeInstancePropertiesArgs
 */
export function computeInstancePropertiesArgsProvideDefaults(val: ComputeInstancePropertiesArgs): ComputeInstancePropertiesArgs {
    return {
        ...val,
        applicationSharingPolicy: (val.applicationSharingPolicy) ?? "Shared",
        computeInstanceAuthorizationType: (val.computeInstanceAuthorizationType) ?? "personal",
        sshSettings: (val.sshSettings ? pulumi.output(val.sshSettings).apply(inputs.machinelearningservices.v20200218preview.computeInstanceSshSettingsArgsProvideDefaults) : undefined),
    };
}

/**
 * Specifies policy and settings for SSH access.
 */
export interface ComputeInstanceSshSettingsArgs {
    /**
     * Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
     */
    adminPublicKey?: pulumi.Input<string>;
    /**
     * State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
     */
    sshPublicAccess?: pulumi.Input<string | enums.machinelearningservices.v20200218preview.SshPublicAccess>;
}
/**
 * computeInstanceSshSettingsArgsProvideDefaults sets the appropriate defaults for ComputeInstanceSshSettingsArgs
 */
export function computeInstanceSshSettingsArgsProvideDefaults(val: ComputeInstanceSshSettingsArgs): ComputeInstanceSshSettingsArgs {
    return {
        ...val,
        sshPublicAccess: (val.sshPublicAccess) ?? "Disabled",
    };
}

/**
 * A DataFactory compute.
 */
export interface DataFactoryArgs {
    /**
     * Location for the underlying compute
     */
    computeLocation?: pulumi.Input<string>;
    /**
     * The type of compute
     * Expected value is 'DataFactory'.
     */
    computeType: pulumi.Input<"DataFactory">;
    /**
     * The description of the Machine Learning compute.
     */
    description?: pulumi.Input<string>;
    /**
     * ARM resource id of the underlying compute
     */
    resourceId?: pulumi.Input<string>;
}

/**
 * A DataLakeAnalytics compute.
 */
export interface DataLakeAnalyticsArgs {
    /**
     * Location for the underlying compute
     */
    computeLocation?: pulumi.Input<string>;
    /**
     * The type of compute
     * Expected value is 'DataLakeAnalytics'.
     */
    computeType: pulumi.Input<"DataLakeAnalytics">;
    /**
     * The description of the Machine Learning compute.
     */
    description?: pulumi.Input<string>;
    properties?: pulumi.Input<inputs.machinelearningservices.v20200218preview.DataLakeAnalyticsPropertiesArgs>;
    /**
     * ARM resource id of the underlying compute
     */
    resourceId?: pulumi.Input<string>;
}

export interface DataLakeAnalyticsPropertiesArgs {
    /**
     * DataLake Store Account Name
     */
    dataLakeStoreAccountName?: pulumi.Input<string>;
}

/**
 * A DataFactory compute.
 */
export interface DatabricksArgs {
    /**
     * Location for the underlying compute
     */
    computeLocation?: pulumi.Input<string>;
    /**
     * The type of compute
     * Expected value is 'Databricks'.
     */
    computeType: pulumi.Input<"Databricks">;
    /**
     * The description of the Machine Learning compute.
     */
    description?: pulumi.Input<string>;
    properties?: pulumi.Input<inputs.machinelearningservices.v20200218preview.DatabricksPropertiesArgs>;
    /**
     * ARM resource id of the underlying compute
     */
    resourceId?: pulumi.Input<string>;
}

export interface DatabricksPropertiesArgs {
    /**
     * Databricks access token
     */
    databricksAccessToken?: pulumi.Input<string>;
}

export interface EncryptionPropertyArgs {
    /**
     * Customer Key vault properties.
     */
    keyVaultProperties: pulumi.Input<inputs.machinelearningservices.v20200218preview.KeyVaultPropertiesArgs>;
    /**
     * Indicates whether or not the encryption is enabled for the workspace.
     */
    status: pulumi.Input<string | enums.machinelearningservices.v20200218preview.EncryptionStatus>;
}

/**
 * A HDInsight compute.
 */
export interface HDInsightArgs {
    /**
     * Location for the underlying compute
     */
    computeLocation?: pulumi.Input<string>;
    /**
     * The type of compute
     * Expected value is 'HDInsight'.
     */
    computeType: pulumi.Input<"HDInsight">;
    /**
     * The description of the Machine Learning compute.
     */
    description?: pulumi.Input<string>;
    properties?: pulumi.Input<inputs.machinelearningservices.v20200218preview.HDInsightPropertiesArgs>;
    /**
     * ARM resource id of the underlying compute
     */
    resourceId?: pulumi.Input<string>;
}

export interface HDInsightPropertiesArgs {
    /**
     * Public IP address of the master node of the cluster.
     */
    address?: pulumi.Input<string>;
    /**
     * Admin credentials for master node of the cluster
     */
    administratorAccount?: pulumi.Input<inputs.machinelearningservices.v20200218preview.VirtualMachineSshCredentialsArgs>;
    /**
     * Port open for ssh connections on the master node of the cluster.
     */
    sshPort?: pulumi.Input<number>;
}

/**
 * Identity for the resource.
 */
export interface IdentityArgs {
    /**
     * The identity type.
     */
    type?: pulumi.Input<enums.machinelearningservices.v20200218preview.ResourceIdentityType>;
}

export interface KeyVaultPropertiesArgs {
    /**
     * For future use - The client id of the identity which will be used to access key vault.
     */
    identityClientId?: pulumi.Input<string>;
    /**
     * Key vault uri to access the encryption key.
     */
    keyIdentifier: pulumi.Input<string>;
    /**
     * The ArmId of the keyVault where the customer owned encryption key is present.
     */
    keyVaultArmId: pulumi.Input<string>;
}

/**
 * Settings for a personal compute instance.
 */
export interface PersonalComputeInstanceSettingsArgs {
    /**
     * A user explicitly assigned to a personal compute instance.
     */
    assignedUser?: pulumi.Input<inputs.machinelearningservices.v20200218preview.AssignedUserArgs>;
}

/**
 * A collection of information about the state of the connection between service consumer and provider.
 */
export interface PrivateLinkServiceConnectionStateArgs {
    /**
     * A message indicating if changes on the service provider require any updates on the consumer.
     */
    actionRequired?: pulumi.Input<string>;
    /**
     * The reason for approval/rejection of the connection.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
     */
    status?: pulumi.Input<string | enums.machinelearningservices.v20200218preview.PrivateEndpointServiceConnectionStatus>;
}

/**
 * Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
 */
export interface ResourceIdArgs {
    /**
     * The ID of the resource
     */
    id: pulumi.Input<string>;
}

/**
 * scale settings for AML Compute
 */
export interface ScaleSettingsArgs {
    /**
     * Max number of nodes to use
     */
    maxNodeCount: pulumi.Input<number>;
    /**
     * Min number of nodes to use
     */
    minNodeCount?: pulumi.Input<number>;
    /**
     * Node Idle Time before scaling down amlCompute
     */
    nodeIdleTimeBeforeScaleDown?: pulumi.Input<string>;
}
/**
 * scaleSettingsArgsProvideDefaults sets the appropriate defaults for ScaleSettingsArgs
 */
export function scaleSettingsArgsProvideDefaults(val: ScaleSettingsArgs): ScaleSettingsArgs {
    return {
        ...val,
        minNodeCount: (val.minNodeCount) ?? 0,
    };
}

/**
 * Sku of the resource
 */
export interface SkuArgs {
    /**
     * Name of the sku
     */
    name?: pulumi.Input<string>;
    /**
     * Tier of the sku like Basic or Enterprise
     */
    tier?: pulumi.Input<string>;
}

/**
 * The ssl configuration for scoring
 */
export interface SslConfigurationArgs {
    /**
     * Cert data
     */
    cert?: pulumi.Input<string>;
    /**
     * CNAME of the cert
     */
    cname?: pulumi.Input<string>;
    /**
     * Key data
     */
    key?: pulumi.Input<string>;
    /**
     * Enable or disable ssl for scoring
     */
    status?: pulumi.Input<string>;
}

/**
 * Settings for user account that gets created on each on the nodes of a compute.
 */
export interface UserAccountCredentialsArgs {
    /**
     * Name of the administrator user account which can be used to SSH to nodes.
     */
    adminUserName: pulumi.Input<string>;
    /**
     * Password of the administrator user account.
     */
    adminUserPassword?: pulumi.Input<string>;
    /**
     * SSH public key of the administrator user account. This property is only supported on Linux based clusters.
     */
    adminUserSshPublicKey?: pulumi.Input<string>;
}

/**
 * A Machine Learning compute based on Azure Virtual Machines.
 */
export interface VirtualMachineArgs {
    /**
     * Location for the underlying compute
     */
    computeLocation?: pulumi.Input<string>;
    /**
     * The type of compute
     * Expected value is 'VirtualMachine'.
     */
    computeType: pulumi.Input<"VirtualMachine">;
    /**
     * The description of the Machine Learning compute.
     */
    description?: pulumi.Input<string>;
    properties?: pulumi.Input<inputs.machinelearningservices.v20200218preview.VirtualMachinePropertiesArgs>;
    /**
     * ARM resource id of the underlying compute
     */
    resourceId?: pulumi.Input<string>;
}

export interface VirtualMachinePropertiesArgs {
    /**
     * Public IP address of the virtual machine.
     */
    address?: pulumi.Input<string>;
    /**
     * Admin credentials for virtual machine
     */
    administratorAccount?: pulumi.Input<inputs.machinelearningservices.v20200218preview.VirtualMachineSshCredentialsArgs>;
    /**
     * Port open for ssh connections.
     */
    sshPort?: pulumi.Input<number>;
    /**
     * Virtual Machine size
     */
    virtualMachineSize?: pulumi.Input<string>;
}

/**
 * Admin credentials for virtual machine
 */
export interface VirtualMachineSshCredentialsArgs {
    /**
     * Password of admin account
     */
    password?: pulumi.Input<string>;
    /**
     * Private key data
     */
    privateKeyData?: pulumi.Input<string>;
    /**
     * Public key data
     */
    publicKeyData?: pulumi.Input<string>;
    /**
     * Username of admin account
     */
    username?: pulumi.Input<string>;
}

