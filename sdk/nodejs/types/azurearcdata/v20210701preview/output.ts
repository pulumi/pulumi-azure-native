// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Username and password for basic login authentication.
 */
export interface BasicLoginInformationResponse {
    /**
     * Login username.
     */
    username?: string;
}

/**
 * The data controller properties.
 */
export interface DataControllerPropertiesResponse {
    /**
     * Username and password for basic login authentication.
     */
    basicLoginInformation?: outputs.azurearcdata.v20210701preview.BasicLoginInformationResponse;
    /**
     * The infrastructure the data controller is running on.
     */
    infrastructure?: string;
    /**
     * The raw kubernetes information
     */
    k8sRaw?: any;
    /**
     * Last uploaded date from Kubernetes cluster. Defaults to current date time
     */
    lastUploadedDate?: string;
    /**
     * Log analytics workspace id and primary key
     */
    logAnalyticsWorkspaceConfig?: outputs.azurearcdata.v20210701preview.LogAnalyticsWorkspaceConfigResponse;
    /**
     * Properties from the Kubernetes data controller
     */
    onPremiseProperty?: outputs.azurearcdata.v20210701preview.OnPremisePropertyResponse;
    provisioningState: string;
    /**
     * Service principal for uploading billing, metrics and logs.
     */
    uploadServicePrincipal?: outputs.azurearcdata.v20210701preview.UploadServicePrincipalResponse;
    /**
     * Properties on upload watermark.  Mostly timestamp for each upload data type
     */
    uploadWatermark?: outputs.azurearcdata.v20210701preview.UploadWatermarkResponse;
}
/**
 * dataControllerPropertiesResponseProvideDefaults sets the appropriate defaults for DataControllerPropertiesResponse
 */
export function dataControllerPropertiesResponseProvideDefaults(val: DataControllerPropertiesResponse): DataControllerPropertiesResponse {
    return {
        ...val,
        infrastructure: (val.infrastructure) ?? "other",
    };
}

/**
 * The complex type of the extended location.
 */
export interface ExtendedLocationResponse {
    /**
     * The name of the extended location.
     */
    name?: string;
    /**
     * The type of the extended location.
     */
    type?: string;
}

/**
 * Log analytics workspace id and primary key
 */
export interface LogAnalyticsWorkspaceConfigResponse {
    /**
     * Azure Log Analytics workspace ID
     */
    workspaceId?: string;
}

/**
 * Properties from the Kubernetes data controller
 */
export interface OnPremisePropertyResponse {
    /**
     * A globally unique ID identifying the associated Kubernetes cluster
     */
    id: string;
    /**
     * Certificate that contains the Kubernetes cluster public key used to verify signing
     */
    publicSigningKey: string;
    /**
     * Unique thumbprint returned to customer to verify the certificate being uploaded
     */
    signingCertificateThumbprint?: string;
}

/**
 * Postgres Instance properties.
 */
export interface PostgresInstancePropertiesResponse {
    /**
     * The instance admin
     */
    admin?: string;
    /**
     * Username and password for basic authentication.
     */
    basicLoginInformation?: outputs.azurearcdata.v20210701preview.BasicLoginInformationResponse;
    /**
     * The data controller id
     */
    dataControllerId?: string;
    /**
     * The raw kubernetes information
     */
    k8sRaw?: any;
    /**
     * Last uploaded date from Kubernetes cluster. Defaults to current date time
     */
    lastUploadedDate?: string;
    provisioningState: string;
}

/**
 * The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc
 */
export interface PostgresInstanceSkuResponse {
    /**
     * If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
     */
    capacity?: number;
    /**
     * Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. 
     */
    dev?: boolean;
    /**
     * If the service has different generations of hardware, for the same SKU, then that can be captured here.
     */
    family?: string;
    /**
     * The name of the SKU.  It is typically a letter+number code
     */
    name: string;
    /**
     * The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. 
     */
    size?: string;
    /**
     * This field is required to be implemented by the Resource Provider if the service has more than one tier.
     */
    tier?: string;
}
/**
 * postgresInstanceSkuResponseProvideDefaults sets the appropriate defaults for PostgresInstanceSkuResponse
 */
export function postgresInstanceSkuResponseProvideDefaults(val: PostgresInstanceSkuResponse): PostgresInstanceSkuResponse {
    return {
        ...val,
        dev: (val.dev) ?? true,
        tier: (val.tier) ?? "Hyperscale",
    };
}

/**
 * Properties of sqlManagedInstance.
 */
export interface SqlManagedInstancePropertiesResponse {
    /**
     * The instance admin user
     */
    admin?: string;
    /**
     * Username and password for basic authentication.
     */
    basicLoginInformation?: outputs.azurearcdata.v20210701preview.BasicLoginInformationResponse;
    /**
     * null
     */
    dataControllerId?: string;
    /**
     * The instance end time
     */
    endTime?: string;
    /**
     * The raw kubernetes information
     */
    k8sRaw?: any;
    /**
     * Last uploaded date from Kubernetes cluster. Defaults to current date time
     */
    lastUploadedDate?: string;
    /**
     * The license type to apply for this managed instance.
     */
    licenseType?: string;
    provisioningState: string;
    /**
     * The instance start time
     */
    startTime?: string;
}
/**
 * sqlManagedInstancePropertiesResponseProvideDefaults sets the appropriate defaults for SqlManagedInstancePropertiesResponse
 */
export function sqlManagedInstancePropertiesResponseProvideDefaults(val: SqlManagedInstancePropertiesResponse): SqlManagedInstancePropertiesResponse {
    return {
        ...val,
        licenseType: (val.licenseType) ?? "BasePrice",
    };
}

/**
 * The resource model definition representing SKU for Azure Managed Instance - Azure Arc
 */
export interface SqlManagedInstanceSkuResponse {
    capacity?: number;
    /**
     * Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. 
     */
    dev?: boolean;
    family?: string;
    /**
     * The name of the SKU.
     */
    name: string;
    /**
     * The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. 
     */
    size?: string;
    /**
     * The tier for this managed instance.
     */
    tier?: string;
}
/**
 * sqlManagedInstanceSkuResponseProvideDefaults sets the appropriate defaults for SqlManagedInstanceSkuResponse
 */
export function sqlManagedInstanceSkuResponseProvideDefaults(val: SqlManagedInstanceSkuResponse): SqlManagedInstanceSkuResponse {
    return {
        ...val,
        dev: (val.dev) ?? true,
        tier: (val.tier) ?? "GeneralPurpose",
    };
}

/**
 * Properties of SqlServerInstance.
 */
export interface SqlServerInstancePropertiesResponse {
    /**
     * Status of Azure Defender.
     */
    azureDefenderStatus?: string;
    /**
     * Timestamp of last Azure Defender status update.
     */
    azureDefenderStatusLastUpdated?: string;
    /**
     * SQL Server collation.
     */
    collation?: string;
    /**
     * ARM Resource id of the container resource (Azure Arc for Servers).
     */
    containerResourceId: string;
    /**
     * The time when the resource was created.
     */
    createTime: string;
    /**
     * SQL Server current version.
     */
    currentVersion?: string;
    /**
     * SQL Server edition.
     */
    edition?: string;
    /**
     * SQL Server instance name.
     */
    instanceName?: string;
    /**
     * SQL Server license type.
     */
    licenseType?: string;
    /**
     * SQL Server update level.
     */
    patchLevel?: string;
    /**
     * SQL Server product ID.
     */
    productId?: string;
    provisioningState: string;
    /**
     * The cloud connectivity status.
     */
    status: string;
    /**
     * Dynamic TCP ports used by SQL Server.
     */
    tcpDynamicPorts?: string;
    /**
     * Static TCP ports used by SQL Server.
     */
    tcpStaticPorts?: string;
    /**
     * The number of logical processors used by the SQL Server instance.
     */
    vCore?: string;
    /**
     * SQL Server version.
     */
    version?: string;
}

/**
 * Read only system data
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC)
     */
    createdAt?: string;
    /**
     * An identifier for the identity that created the resource
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource
     */
    createdByType?: string;
    /**
     * The timestamp of resource last modification (UTC)
     */
    lastModifiedAt?: string;
    /**
     * An identifier for the identity that last modified the resource
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource
     */
    lastModifiedByType?: string;
}

/**
 * Service principal for uploading billing, metrics and logs.
 */
export interface UploadServicePrincipalResponse {
    /**
     * Authority for the service principal. Example: https://login.microsoftonline.com/
     */
    authority?: string;
    /**
     * Client ID of the service principal for uploading data.
     */
    clientId?: string;
    /**
     * Tenant ID of the service principal.
     */
    tenantId?: string;
}

/**
 * Properties on upload watermark.  Mostly timestamp for each upload data type
 */
export interface UploadWatermarkResponse {
    /**
     * Last uploaded date for logs from kubernetes cluster. Defaults to current date time
     */
    logs?: string;
    /**
     * Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
     */
    metrics?: string;
    /**
     * Last uploaded date for usages from kubernetes cluster. Defaults to current date time
     */
    usages?: string;
}

