// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Username and password for basic login authentication.
 */
export interface BasicLoginInformationArgs {
    /**
     * Login password.
     */
    password?: pulumi.Input<string>;
    /**
     * Login username.
     */
    username?: pulumi.Input<string>;
}

/**
 * The data controller properties.
 */
export interface DataControllerPropertiesArgs {
    /**
     * Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes native API.
     */
    basicLoginInformation?: pulumi.Input<inputs.azurearcdata.v20211101.BasicLoginInformationArgs>;
    /**
     * If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
     */
    extensionId?: pulumi.Input<string>;
    /**
     * The infrastructure the data controller is running on.
     */
    infrastructure?: pulumi.Input<enums.azurearcdata.v20211101.Infrastructure>;
    /**
     * The raw kubernetes information
     */
    k8sRaw?: any;
    /**
     * Last uploaded date from Kubernetes cluster. Defaults to current date time
     */
    lastUploadedDate?: pulumi.Input<string>;
    /**
     * Log analytics workspace id and primary key
     */
    logAnalyticsWorkspaceConfig?: pulumi.Input<inputs.azurearcdata.v20211101.LogAnalyticsWorkspaceConfigArgs>;
    /**
     * Login credential for logs dashboard on the Kubernetes cluster.
     */
    logsDashboardCredential?: pulumi.Input<inputs.azurearcdata.v20211101.BasicLoginInformationArgs>;
    /**
     * Login credential for metrics dashboard on the Kubernetes cluster.
     */
    metricsDashboardCredential?: pulumi.Input<inputs.azurearcdata.v20211101.BasicLoginInformationArgs>;
    /**
     * Properties from the Kubernetes data controller
     */
    onPremiseProperty?: pulumi.Input<inputs.azurearcdata.v20211101.OnPremisePropertyArgs>;
    /**
     * Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity.
     */
    uploadServicePrincipal?: pulumi.Input<inputs.azurearcdata.v20211101.UploadServicePrincipalArgs>;
    /**
     * Properties on upload watermark.  Mostly timestamp for each upload data type
     */
    uploadWatermark?: pulumi.Input<inputs.azurearcdata.v20211101.UploadWatermarkArgs>;
}
/**
 * dataControllerPropertiesArgsProvideDefaults sets the appropriate defaults for DataControllerPropertiesArgs
 */
export function dataControllerPropertiesArgsProvideDefaults(val: DataControllerPropertiesArgs): DataControllerPropertiesArgs {
    return {
        ...val,
        infrastructure: (val.infrastructure) ?? "other",
    };
}

/**
 * The complex type of the extended location.
 */
export interface ExtendedLocationArgs {
    /**
     * The name of the extended location.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of the extended location.
     */
    type?: pulumi.Input<string | enums.azurearcdata.v20211101.ExtendedLocationTypes>;
}

/**
 * The kubernetes resource limits and requests used to restrict or reserve resource usage.
 */
export interface K8sResourceRequirementsArgs {
    /**
     * Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
     */
    limits?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
     */
    requests?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The kubernetes scheduling information.
 */
export interface K8sSchedulingArgs {
    /**
     * The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
     */
    default?: pulumi.Input<inputs.azurearcdata.v20211101.K8sSchedulingOptionsArgs>;
}

/**
 * The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
 */
export interface K8sSchedulingOptionsArgs {
    /**
     * The kubernetes resource limits and requests used to restrict or reserve resource usage.
     */
    resources?: pulumi.Input<inputs.azurearcdata.v20211101.K8sResourceRequirementsArgs>;
}

/**
 * Log analytics workspace id and primary key
 */
export interface LogAnalyticsWorkspaceConfigArgs {
    /**
     * Primary key of the workspace
     */
    primaryKey?: pulumi.Input<string>;
    /**
     * Azure Log Analytics workspace ID
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * Properties from the Kubernetes data controller
 */
export interface OnPremisePropertyArgs {
    /**
     * A globally unique ID identifying the associated Kubernetes cluster
     */
    id: pulumi.Input<string>;
    /**
     * Certificate that contains the Kubernetes cluster public key used to verify signing
     */
    publicSigningKey: pulumi.Input<string>;
    /**
     * Unique thumbprint returned to customer to verify the certificate being uploaded
     */
    signingCertificateThumbprint?: pulumi.Input<string>;
}

/**
 * The raw kubernetes information.
 */
export interface SqlManagedInstanceK8sRawArgs {
    /**
     * The kubernetes spec information.
     */
    spec?: pulumi.Input<inputs.azurearcdata.v20211101.SqlManagedInstanceK8sSpecArgs>;
}

/**
 * The kubernetes spec information.
 */
export interface SqlManagedInstanceK8sSpecArgs {
    /**
     * This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'.
     */
    replicas?: pulumi.Input<number>;
    /**
     * The kubernetes scheduling information.
     */
    scheduling?: pulumi.Input<inputs.azurearcdata.v20211101.K8sSchedulingArgs>;
}

/**
 * Properties of sqlManagedInstance.
 */
export interface SqlManagedInstancePropertiesArgs {
    /**
     * The instance admin user
     */
    admin?: pulumi.Input<string>;
    /**
     * Username and password for basic authentication.
     */
    basicLoginInformation?: pulumi.Input<inputs.azurearcdata.v20211101.BasicLoginInformationArgs>;
    /**
     * If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * null
     */
    dataControllerId?: pulumi.Input<string>;
    /**
     * The instance end time
     */
    endTime?: pulumi.Input<string>;
    /**
     * If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
     */
    extensionId?: pulumi.Input<string>;
    /**
     * The raw kubernetes information
     */
    k8sRaw?: pulumi.Input<inputs.azurearcdata.v20211101.SqlManagedInstanceK8sRawArgs>;
    /**
     * Last uploaded date from Kubernetes cluster. Defaults to current date time
     */
    lastUploadedDate?: pulumi.Input<string>;
    /**
     * The license type to apply for this managed instance.
     */
    licenseType?: pulumi.Input<string | enums.azurearcdata.v20211101.ArcSqlManagedInstanceLicenseType>;
    /**
     * The instance start time
     */
    startTime?: pulumi.Input<string>;
}
/**
 * sqlManagedInstancePropertiesArgsProvideDefaults sets the appropriate defaults for SqlManagedInstancePropertiesArgs
 */
export function sqlManagedInstancePropertiesArgsProvideDefaults(val: SqlManagedInstancePropertiesArgs): SqlManagedInstancePropertiesArgs {
    return {
        ...val,
        licenseType: (val.licenseType) ?? "BasePrice",
    };
}

/**
 * The resource model definition representing SKU for Azure Managed Instance - Azure Arc
 */
export interface SqlManagedInstanceSkuArgs {
    capacity?: pulumi.Input<number>;
    /**
     * Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. 
     */
    dev?: pulumi.Input<boolean>;
    family?: pulumi.Input<string>;
    /**
     * The name of the SKU.
     */
    name: pulumi.Input<string>;
    /**
     * The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. 
     */
    size?: pulumi.Input<string>;
    /**
     * The pricing tier for the instance.
     */
    tier?: pulumi.Input<enums.azurearcdata.v20211101.SqlManagedInstanceSkuTier>;
}
/**
 * sqlManagedInstanceSkuArgsProvideDefaults sets the appropriate defaults for SqlManagedInstanceSkuArgs
 */
export function sqlManagedInstanceSkuArgsProvideDefaults(val: SqlManagedInstanceSkuArgs): SqlManagedInstanceSkuArgs {
    return {
        ...val,
        dev: (val.dev) ?? true,
        tier: (val.tier) ?? "GeneralPurpose",
    };
}

/**
 * Properties of SqlServerInstance.
 */
export interface SqlServerInstancePropertiesArgs {
    /**
     * Status of Azure Defender.
     */
    azureDefenderStatus?: pulumi.Input<string | enums.azurearcdata.v20211101.DefenderStatus>;
    /**
     * Timestamp of last Azure Defender status update.
     */
    azureDefenderStatusLastUpdated?: pulumi.Input<string>;
    /**
     * SQL Server collation.
     */
    collation?: pulumi.Input<string>;
    /**
     * ARM Resource id of the container resource (Azure Arc for Servers).
     */
    containerResourceId: pulumi.Input<string>;
    /**
     * SQL Server current version.
     */
    currentVersion?: pulumi.Input<string>;
    /**
     * SQL Server edition.
     */
    edition?: pulumi.Input<string | enums.azurearcdata.v20211101.EditionType>;
    /**
     * SQL Server instance name.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * SQL Server license type.
     */
    licenseType?: pulumi.Input<string | enums.azurearcdata.v20211101.ArcSqlServerLicenseType>;
    /**
     * SQL Server update level.
     */
    patchLevel?: pulumi.Input<string>;
    /**
     * SQL Server product ID.
     */
    productId?: pulumi.Input<string>;
    /**
     * The cloud connectivity status.
     */
    status: pulumi.Input<string | enums.azurearcdata.v20211101.ConnectionStatus>;
    /**
     * Dynamic TCP ports used by SQL Server.
     */
    tcpDynamicPorts?: pulumi.Input<string>;
    /**
     * Static TCP ports used by SQL Server.
     */
    tcpStaticPorts?: pulumi.Input<string>;
    /**
     * The number of logical processors used by the SQL Server instance.
     */
    vCore?: pulumi.Input<string>;
    /**
     * SQL Server version.
     */
    version?: pulumi.Input<string | enums.azurearcdata.v20211101.SqlVersion>;
}

/**
 * Service principal for uploading billing, metrics and logs.
 */
export interface UploadServicePrincipalArgs {
    /**
     * Authority for the service principal. Example: https://login.microsoftonline.com/
     */
    authority?: pulumi.Input<string>;
    /**
     * Client ID of the service principal for uploading data.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Secret of the service principal
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Tenant ID of the service principal.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * Properties on upload watermark.  Mostly timestamp for each upload data type
 */
export interface UploadWatermarkArgs {
    /**
     * Last uploaded date for logs from kubernetes cluster. Defaults to current date time
     */
    logs?: pulumi.Input<string>;
    /**
     * Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
     */
    metrics?: pulumi.Input<string>;
    /**
     * Last uploaded date for usages from kubernetes cluster. Defaults to current date time
     */
    usages?: pulumi.Input<string>;
}

