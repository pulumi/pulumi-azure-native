// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export * as v20210601preview from "./v20210601preview/input";
export * as v20210701preview from "./v20210701preview/input";
export * as v20210801 from "./v20210801/input";
export * as v20211101 from "./v20211101/input";
export * as v20220301preview from "./v20220301preview/input";
/**
 * DNS server details
 */
export interface ActiveDirectoryConnectorDNSDetailsArgs {
    /**
     * DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
     */
    domainName?: pulumi.Input<string>;
    /**
     * List of Active Directory DNS server IP addresses.
     */
    nameserverIPAddresses: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
     */
    preferK8sDnsForPtrLookups?: pulumi.Input<boolean>;
    /**
     * Replica count for DNS proxy service. Default value is 1.
     */
    replicas?: pulumi.Input<number>;
}
/**
 * activeDirectoryConnectorDNSDetailsArgsProvideDefaults sets the appropriate defaults for ActiveDirectoryConnectorDNSDetailsArgs
 */
export function activeDirectoryConnectorDNSDetailsArgsProvideDefaults(val: ActiveDirectoryConnectorDNSDetailsArgs): ActiveDirectoryConnectorDNSDetailsArgs {
    return {
        ...val,
        preferK8sDnsForPtrLookups: (val.preferK8sDnsForPtrLookups) ?? true,
        replicas: (val.replicas) ?? 1,
    };
}

/**
 * Active Directory domain details
 */
export interface ActiveDirectoryConnectorDomainDetailsArgs {
    /**
     * null
     */
    domainControllers: pulumi.Input<inputs.azurearcdata.ActiveDirectoryDomainControllersArgs>;
    /**
     * NETBIOS name of the Active Directory domain.
     */
    netbiosDomainName?: pulumi.Input<string>;
    /**
     * The distinguished name of the Active Directory Organizational Unit.
     */
    ouDistinguishedName?: pulumi.Input<string>;
    /**
     * Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
     */
    realm: pulumi.Input<string>;
    /**
     * The service account provisioning mode for this Active Directory connector.
     */
    serviceAccountProvisioning?: pulumi.Input<string | enums.azurearcdata.AccountProvisioningMode>;
}
/**
 * activeDirectoryConnectorDomainDetailsArgsProvideDefaults sets the appropriate defaults for ActiveDirectoryConnectorDomainDetailsArgs
 */
export function activeDirectoryConnectorDomainDetailsArgsProvideDefaults(val: ActiveDirectoryConnectorDomainDetailsArgs): ActiveDirectoryConnectorDomainDetailsArgs {
    return {
        ...val,
        serviceAccountProvisioning: (val.serviceAccountProvisioning) ?? "manual",
    };
}

/**
 * The properties of an Active Directory connector resource
 */
export interface ActiveDirectoryConnectorPropertiesArgs {
    /**
     * Username and password for domain service account authentication.
     */
    domainServiceAccountLoginInformation?: pulumi.Input<inputs.azurearcdata.BasicLoginInformationArgs>;
    /**
     * null
     */
    spec: pulumi.Input<inputs.azurearcdata.ActiveDirectoryConnectorSpecArgs>;
    /**
     * null
     */
    status?: pulumi.Input<inputs.azurearcdata.ActiveDirectoryConnectorStatusArgs>;
}
/**
 * activeDirectoryConnectorPropertiesArgsProvideDefaults sets the appropriate defaults for ActiveDirectoryConnectorPropertiesArgs
 */
export function activeDirectoryConnectorPropertiesArgsProvideDefaults(val: ActiveDirectoryConnectorPropertiesArgs): ActiveDirectoryConnectorPropertiesArgs {
    return {
        ...val,
        spec: pulumi.output(val.spec).apply(inputs.azurearcdata.activeDirectoryConnectorSpecArgsProvideDefaults),
    };
}

/**
 * The specifications of the AD Kubernetes resource.
 */
export interface ActiveDirectoryConnectorSpecArgs {
    /**
     * null
     */
    activeDirectory: pulumi.Input<inputs.azurearcdata.ActiveDirectoryConnectorDomainDetailsArgs>;
    /**
     * null
     */
    dns: pulumi.Input<inputs.azurearcdata.ActiveDirectoryConnectorDNSDetailsArgs>;
}
/**
 * activeDirectoryConnectorSpecArgsProvideDefaults sets the appropriate defaults for ActiveDirectoryConnectorSpecArgs
 */
export function activeDirectoryConnectorSpecArgsProvideDefaults(val: ActiveDirectoryConnectorSpecArgs): ActiveDirectoryConnectorSpecArgs {
    return {
        ...val,
        activeDirectory: pulumi.output(val.activeDirectory).apply(inputs.azurearcdata.activeDirectoryConnectorDomainDetailsArgsProvideDefaults),
        dns: pulumi.output(val.dns).apply(inputs.azurearcdata.activeDirectoryConnectorDNSDetailsArgsProvideDefaults),
    };
}

/**
 * The status of the Kubernetes custom resource.
 */
export interface ActiveDirectoryConnectorStatusArgs {
    /**
     * The time that the custom resource was last updated.
     */
    lastUpdateTime?: pulumi.Input<string>;
    /**
     * The version of the replicaSet associated with the AD connector custom resource.
     */
    observedGeneration?: pulumi.Input<number>;
    /**
     * The state of the AD connector custom resource.
     */
    state?: pulumi.Input<string>;
}

/**
 * Information about a domain controller in the AD domain.
 */
export interface ActiveDirectoryDomainControllerArgs {
    /**
     * Fully-qualified domain name of a domain controller in the AD domain.
     */
    hostname: pulumi.Input<string>;
}

/**
 * Details about the Active Directory domain controllers associated with this AD connector instance
 */
export interface ActiveDirectoryDomainControllersArgs {
    /**
     * Information about the Primary Domain Controller (PDC) in the AD domain.
     */
    primaryDomainController?: pulumi.Input<inputs.azurearcdata.ActiveDirectoryDomainControllerArgs>;
    /**
     * null
     */
    secondaryDomainControllers?: pulumi.Input<pulumi.Input<inputs.azurearcdata.ActiveDirectoryDomainControllerArgs>[]>;
}

/**
 * Username and password for basic login authentication.
 */
export interface BasicLoginInformationArgs {
    /**
     * Login password.
     */
    password?: pulumi.Input<string>;
    /**
     * Login username.
     */
    username?: pulumi.Input<string>;
}

/**
 * The data controller properties.
 */
export interface DataControllerPropertiesArgs {
    /**
     * Username and password for basic login authentication.
     */
    basicLoginInformation?: pulumi.Input<inputs.azurearcdata.BasicLoginInformationArgs>;
    /**
     * The raw kubernetes information
     */
    k8sRaw?: any;
    /**
     * Last uploaded date from Kubernetes cluster. Defaults to current date time
     */
    lastUploadedDate?: pulumi.Input<string>;
    /**
     * Log analytics workspace id and primary key
     */
    logAnalyticsWorkspaceConfig?: pulumi.Input<inputs.azurearcdata.LogAnalyticsWorkspaceConfigArgs>;
    /**
     * Properties from the Kubernetes data controller
     */
    onPremiseProperty?: pulumi.Input<inputs.azurearcdata.OnPremisePropertyArgs>;
    /**
     * Service principal for uploading billing, metrics and logs.
     */
    uploadServicePrincipal?: pulumi.Input<inputs.azurearcdata.UploadServicePrincipalArgs>;
    /**
     * Properties on upload watermark.  Mostly timestamp for each upload data type
     */
    uploadWatermark?: pulumi.Input<inputs.azurearcdata.UploadWatermarkArgs>;
}

/**
 * The complex type of the extended location.
 */
export interface ExtendedLocationArgs {
    /**
     * The name of the extended location.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of the extended location.
     */
    type?: pulumi.Input<string | enums.azurearcdata.ExtendedLocationTypes>;
}

/**
 * Log analytics workspace id and primary key
 */
export interface LogAnalyticsWorkspaceConfigArgs {
    /**
     * Primary key of the workspace
     */
    primaryKey?: pulumi.Input<string>;
    /**
     * Azure Log Analytics workspace ID
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * Properties from the Kubernetes data controller
 */
export interface OnPremisePropertyArgs {
    /**
     * A globally unique ID identifying the associated Kubernetes cluster
     */
    id: pulumi.Input<string>;
    /**
     * Certificate that contains the Kubernetes cluster public key used to verify signing
     */
    publicSigningKey: pulumi.Input<string>;
    /**
     * Unique thumbprint returned to customer to verify the certificate being uploaded
     */
    signingCertificateThumbprint?: pulumi.Input<string>;
}

/**
 * Postgres Instance properties.
 */
export interface PostgresInstancePropertiesArgs {
    /**
     * The instance admin
     */
    admin?: pulumi.Input<string>;
    /**
     * Username and password for basic authentication.
     */
    basicLoginInformation?: pulumi.Input<inputs.azurearcdata.BasicLoginInformationArgs>;
    /**
     * The data controller id
     */
    dataControllerId?: pulumi.Input<string>;
    /**
     * The raw kubernetes information
     */
    k8sRaw?: any;
    /**
     * Last uploaded date from Kubernetes cluster. Defaults to current date time
     */
    lastUploadedDate?: pulumi.Input<string>;
}

/**
 * The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc
 */
export interface PostgresInstanceSkuArgs {
    /**
     * If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
     */
    capacity?: pulumi.Input<number>;
    /**
     * Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. 
     */
    dev?: pulumi.Input<boolean>;
    /**
     * If the service has different generations of hardware, for the same SKU, then that can be captured here.
     */
    family?: pulumi.Input<string>;
    /**
     * The name of the SKU.  It is typically a letter+number code
     */
    name: pulumi.Input<string>;
    /**
     * The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. 
     */
    size?: pulumi.Input<string>;
    /**
     * This field is required to be implemented by the Resource Provider if the service has more than one tier.
     */
    tier?: pulumi.Input<enums.azurearcdata.PostgresInstanceSkuTier>;
}
/**
 * postgresInstanceSkuArgsProvideDefaults sets the appropriate defaults for PostgresInstanceSkuArgs
 */
export function postgresInstanceSkuArgsProvideDefaults(val: PostgresInstanceSkuArgs): PostgresInstanceSkuArgs {
    return {
        ...val,
        dev: (val.dev) ?? true,
        tier: (val.tier) ?? "Hyperscale",
    };
}

/**
 * Properties of sqlManagedInstance.
 */
export interface SqlManagedInstancePropertiesArgs {
    /**
     * The instance admin user
     */
    admin?: pulumi.Input<string>;
    /**
     * Username and password for basic authentication.
     */
    basicLoginInformation?: pulumi.Input<inputs.azurearcdata.BasicLoginInformationArgs>;
    /**
     * null
     */
    dataControllerId?: pulumi.Input<string>;
    /**
     * The instance end time
     */
    endTime?: pulumi.Input<string>;
    /**
     * The raw kubernetes information
     */
    k8sRaw?: any;
    /**
     * Last uploaded date from Kubernetes cluster. Defaults to current date time
     */
    lastUploadedDate?: pulumi.Input<string>;
    /**
     * The instance start time
     */
    startTime?: pulumi.Input<string>;
}

/**
 * The resource model definition representing SKU for Azure Managed Instance - Azure Arc
 */
export interface SqlManagedInstanceSkuArgs {
    /**
     * If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
     */
    capacity?: pulumi.Input<number>;
    /**
     * Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. 
     */
    dev?: pulumi.Input<boolean>;
    /**
     * If the service has different generations of hardware, for the same SKU, then that can be captured here.
     */
    family?: pulumi.Input<string>;
    /**
     * The name of the SKU.  It is typically a letter+number code
     */
    name: pulumi.Input<string>;
    /**
     * The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. 
     */
    size?: pulumi.Input<string>;
    /**
     * This field is required to be implemented by the Resource Provider if the service has more than one tier.
     */
    tier?: pulumi.Input<enums.azurearcdata.SqlManagedInstanceSkuTier>;
}
/**
 * sqlManagedInstanceSkuArgsProvideDefaults sets the appropriate defaults for SqlManagedInstanceSkuArgs
 */
export function sqlManagedInstanceSkuArgsProvideDefaults(val: SqlManagedInstanceSkuArgs): SqlManagedInstanceSkuArgs {
    return {
        ...val,
        dev: (val.dev) ?? true,
        tier: (val.tier) ?? "GeneralPurpose",
    };
}

/**
 * Properties of SqlServerInstance.
 */
export interface SqlServerInstancePropertiesArgs {
    /**
     * SQL Server collation.
     */
    collation?: pulumi.Input<string>;
    /**
     * ARM Resource id of the container resource (Azure Arc for Servers).
     */
    containerResourceId: pulumi.Input<string>;
    /**
     * SQL Server current version.
     */
    currentVersion?: pulumi.Input<string>;
    /**
     * SQL Server edition.
     */
    edition?: pulumi.Input<string>;
    /**
     * SQL Server instance name.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * SQL Server license type.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * SQL Server update level.
     */
    patchLevel?: pulumi.Input<string>;
    /**
     * SQL Server product ID.
     */
    productId?: pulumi.Input<string>;
    /**
     * The cloud connectivity status.
     */
    status: pulumi.Input<string>;
    /**
     * Dynamic TCP ports used by SQL Server.
     */
    tcpDynamicPorts?: pulumi.Input<string>;
    /**
     * Static TCP ports used by SQL Server.
     */
    tcpStaticPorts?: pulumi.Input<string>;
    /**
     * The number of logical processors used by the SQL Server instance.
     */
    vCore?: pulumi.Input<string>;
    /**
     * SQL Server version.
     */
    version?: pulumi.Input<string>;
}

/**
 * Service principal for uploading billing, metrics and logs.
 */
export interface UploadServicePrincipalArgs {
    /**
     * Authority for the service principal. Example: https://login.microsoftonline.com/
     */
    authority?: pulumi.Input<string>;
    /**
     * Client ID of the service principal for uploading data.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Secret of the service principal
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Tenant ID of the service principal.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * Properties on upload watermark.  Mostly timestamp for each upload data type
 */
export interface UploadWatermarkArgs {
    /**
     * Last uploaded date for logs from kubernetes cluster. Defaults to current date time
     */
    logs?: pulumi.Input<string>;
    /**
     * Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
     */
    metrics?: pulumi.Input<string>;
    /**
     * Last uploaded date for usages from kubernetes cluster. Defaults to current date time
     */
    usages?: pulumi.Input<string>;
}

