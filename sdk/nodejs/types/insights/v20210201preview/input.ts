// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Actions to invoke when the alert fires.
 */
export interface ActionsArgs {
    /**
     * Action Group resource Ids to invoke when the alert fires.
     */
    actionGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The properties of an alert payload.
     */
    customProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * A condition of the scheduled query rule.
 */
export interface ConditionArgs {
    /**
     * List of Dimensions conditions
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.insights.v20210201preview.DimensionArgs>[]>;
    /**
     * The minimum number of violations required within the selected lookback time window required to raise an alert. Relevant only for rules of the kind LogAlert.
     */
    failingPeriods?: pulumi.Input<inputs.insights.v20210201preview.ConditionFailingPeriodsArgs>;
    /**
     * The column containing the metric measure number. Relevant only for rules of the kind LogAlert.
     */
    metricMeasureColumn?: pulumi.Input<string>;
    /**
     * The name of the metric to be sent. Relevant and required only for rules of the kind LogToMetric.
     */
    metricName?: pulumi.Input<string>;
    /**
     * The criteria operator. Relevant and required only for rules of the kind LogAlert.
     */
    operator?: pulumi.Input<string | enums.insights.v20210201preview.ConditionOperator>;
    /**
     * Log query alert
     */
    query?: pulumi.Input<string>;
    /**
     * The column containing the resource id. The content of the column must be a uri formatted as resource id. Relevant only for rules of the kind LogAlert.
     */
    resourceIdColumn?: pulumi.Input<string>;
    /**
     * the criteria threshold value that activates the alert. Relevant and required only for rules of the kind LogAlert.
     */
    threshold?: pulumi.Input<number>;
    /**
     * Aggregation type. Relevant and required only for rules of the kind LogAlert.
     */
    timeAggregation?: pulumi.Input<string | enums.insights.v20210201preview.TimeAggregation>;
}
/**
 * conditionArgsProvideDefaults sets the appropriate defaults for ConditionArgs
 */
export function conditionArgsProvideDefaults(val: ConditionArgs): ConditionArgs {
    return {
        ...val,
        failingPeriods: (val.failingPeriods ? pulumi.output(val.failingPeriods).apply(inputs.insights.v20210201preview.conditionFailingPeriodsArgsProvideDefaults) : undefined),
    };
}

/**
 * The minimum number of violations required within the selected lookback time window required to raise an alert. Relevant only for rules of the kind LogAlert.
 */
export interface ConditionFailingPeriodsArgs {
    /**
     * The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods. Default value is 1
     */
    minFailingPeriodsToAlert?: pulumi.Input<number>;
    /**
     * The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points. Default value is 1
     */
    numberOfEvaluationPeriods?: pulumi.Input<number>;
}
/**
 * conditionFailingPeriodsArgsProvideDefaults sets the appropriate defaults for ConditionFailingPeriodsArgs
 */
export function conditionFailingPeriodsArgsProvideDefaults(val: ConditionFailingPeriodsArgs): ConditionFailingPeriodsArgs {
    return {
        ...val,
        minFailingPeriodsToAlert: (val.minFailingPeriodsToAlert) ?? 1,
        numberOfEvaluationPeriods: (val.numberOfEvaluationPeriods) ?? 1,
    };
}

/**
 * Dimension splitting and filtering definition
 */
export interface DimensionArgs {
    /**
     * Name of the dimension
     */
    name: pulumi.Input<string>;
    /**
     * Operator for dimension values
     */
    operator: pulumi.Input<string | enums.insights.v20210201preview.DimensionOperator>;
    /**
     * List of dimension values
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The rule criteria that defines the conditions of the scheduled query rule.
 */
export interface ScheduledQueryRuleCriteriaArgs {
    /**
     * A list of conditions to evaluate against the specified scopes
     */
    allOf?: pulumi.Input<pulumi.Input<inputs.insights.v20210201preview.ConditionArgs>[]>;
}

