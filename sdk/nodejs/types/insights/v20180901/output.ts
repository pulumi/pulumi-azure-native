// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * An arm role receiver.
 */
export interface ArmRoleReceiverResponse {
    /**
     * The name of the arm role receiver. Names must be unique across all receivers within an action group.
     */
    name: string;
    /**
     * The arm role id.
     */
    roleId: string;
}

/**
 * The Azure Automation Runbook notification receiver.
 */
export interface AutomationRunbookReceiverResponse {
    /**
     * The Azure automation account Id which holds this runbook and authenticate to Azure resource.
     */
    automationAccountId: string;
    /**
     * Indicates whether this instance is global runbook.
     */
    isGlobalRunbook: boolean;
    /**
     * Indicates name of the webhook.
     */
    name?: string;
    /**
     * The name for this runbook.
     */
    runbookName: string;
    /**
     * The URI where webhooks should be sent.
     */
    serviceUri?: string;
    /**
     * The resource id for webhook linked to this runbook.
     */
    webhookResourceId: string;
}

/**
 * The Azure mobile App push notification receiver.
 */
export interface AzureAppPushReceiverResponse {
    /**
     * The email address registered for the Azure mobile app.
     */
    emailAddress: string;
    /**
     * The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.
     */
    name: string;
}

/**
 * An azure function receiver.
 */
export interface AzureFunctionReceiverResponse {
    /**
     * The azure resource id of the function app.
     */
    functionAppResourceId: string;
    /**
     * The function name in the function app.
     */
    functionName: string;
    /**
     * The http trigger url where http request sent to.
     */
    httpTriggerUrl: string;
    /**
     * The name of the azure function receiver. Names must be unique across all receivers within an action group.
     */
    name: string;
}

/**
 * An email receiver.
 */
export interface EmailReceiverResponse {
    /**
     * The email address of this receiver.
     */
    emailAddress: string;
    /**
     * The name of the email receiver. Names must be unique across all receivers within an action group.
     */
    name: string;
    /**
     * The receiver status of the e-mail.
     */
    status: string;
}

/**
 * An Itsm receiver.
 */
export interface ItsmReceiverResponse {
    /**
     * Unique identification of ITSM connection among multiple defined in above workspace.
     */
    connectionId: string;
    /**
     * The name of the Itsm receiver. Names must be unique across all receivers within an action group.
     */
    name: string;
    /**
     * Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
     */
    region: string;
    /**
     * JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
     */
    ticketConfiguration: string;
    /**
     * OMS LA instance identifier.
     */
    workspaceId: string;
}

/**
 * A logic app receiver.
 */
export interface LogicAppReceiverResponse {
    /**
     * The callback url where http request sent to.
     */
    callbackUrl: string;
    /**
     * The name of the logic app receiver. Names must be unique across all receivers within an action group.
     */
    name: string;
    /**
     * The azure resource id of the logic app receiver.
     */
    resourceId: string;
}

/**
 * An SMS receiver.
 */
export interface SmsReceiverResponse {
    /**
     * The country code of the SMS receiver.
     */
    countryCode: string;
    /**
     * The name of the SMS receiver. Names must be unique across all receivers within an action group.
     */
    name: string;
    /**
     * The phone number of the SMS receiver.
     */
    phoneNumber: string;
    /**
     * The status of the receiver.
     */
    status: string;
}

/**
 * A voice receiver.
 */
export interface VoiceReceiverResponse {
    /**
     * The country code of the voice receiver.
     */
    countryCode: string;
    /**
     * The name of the voice receiver. Names must be unique across all receivers within an action group.
     */
    name: string;
    /**
     * The phone number of the voice receiver.
     */
    phoneNumber: string;
}

/**
 * A webhook receiver.
 */
export interface WebhookReceiverResponse {
    /**
     * The name of the webhook receiver. Names must be unique across all receivers within an action group.
     */
    name: string;
    /**
     * The URI where webhooks should be sent.
     */
    serviceUri: string;
}

