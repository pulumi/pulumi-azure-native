// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The Azure Automation Runbook notification receiver.
 */
export interface AutomationRunbookReceiverArgs {
    /**
     * The Azure automation account Id which holds this runbook and authenticate to Azure resource.
     */
    automationAccountId: pulumi.Input<string>;
    /**
     * Indicates whether this instance is global runbook.
     */
    isGlobalRunbook: pulumi.Input<boolean>;
    /**
     * Indicates name of the webhook.
     */
    name?: pulumi.Input<string>;
    /**
     * The name for this runbook.
     */
    runbookName: pulumi.Input<string>;
    /**
     * The URI where webhooks should be sent.
     */
    serviceUri?: pulumi.Input<string>;
    /**
     * The resource id for webhook linked to this runbook.
     */
    webhookResourceId: pulumi.Input<string>;
}

/**
 * The Azure mobile App push notification receiver.
 */
export interface AzureAppPushReceiverArgs {
    /**
     * The email address registered for the Azure mobile app.
     */
    emailAddress: pulumi.Input<string>;
    /**
     * The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.
     */
    name: pulumi.Input<string>;
}

/**
 * An azure function receiver.
 */
export interface AzureFunctionReceiverArgs {
    /**
     * The azure resource id of the function app.
     */
    functionAppResourceId: pulumi.Input<string>;
    /**
     * The function name in the function app.
     */
    functionName: pulumi.Input<string>;
    /**
     * The http trigger url where http request sent to.
     */
    httpTriggerUrl: pulumi.Input<string>;
    /**
     * The name of the azure function receiver. Names must be unique across all receivers within an action group.
     */
    name: pulumi.Input<string>;
}

/**
 * Criterion for dynamic threshold.
 */
export interface DynamicMetricCriteriaArgs {
    /**
     * The extent of deviation required to trigger an alert. This will affect how tight the threshold is to the metric series pattern.
     */
    alertSensitivity: pulumi.Input<string | enums.insights.v20180301.DynamicThresholdSensitivity>;
    /**
     * Specifies the type of threshold criteria
     * Expected value is 'DynamicThresholdCriterion'.
     */
    criterionType: pulumi.Input<"DynamicThresholdCriterion">;
    /**
     * List of dimension conditions.
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.insights.v20180301.MetricDimensionArgs>[]>;
    /**
     * The minimum number of violations required within the selected lookback time window required to raise an alert.
     */
    failingPeriods: pulumi.Input<inputs.insights.v20180301.DynamicThresholdFailingPeriodsArgs>;
    /**
     * Use this option to set the date from which to start learning the metric historical data and calculate the dynamic thresholds (in ISO8601 format)
     */
    ignoreDataBefore?: pulumi.Input<string>;
    /**
     * Name of the metric.
     */
    metricName: pulumi.Input<string>;
    /**
     * Namespace of the metric.
     */
    metricNamespace?: pulumi.Input<string>;
    /**
     * Name of the criteria.
     */
    name: pulumi.Input<string>;
    /**
     * The operator used to compare the metric value against the threshold.
     */
    operator: pulumi.Input<string | enums.insights.v20180301.DynamicThresholdOperator>;
    /**
     * Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped.
     */
    skipMetricValidation?: pulumi.Input<boolean>;
    /**
     * the criteria time aggregation types.
     */
    timeAggregation: pulumi.Input<string | enums.insights.v20180301.AggregationTypeEnum>;
}

/**
 * The minimum number of violations required within the selected lookback time window required to raise an alert.
 */
export interface DynamicThresholdFailingPeriodsArgs {
    /**
     * The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods.
     */
    minFailingPeriodsToAlert: pulumi.Input<number>;
    /**
     * The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points.
     */
    numberOfEvaluationPeriods: pulumi.Input<number>;
}

/**
 * An email receiver.
 */
export interface EmailReceiverArgs {
    /**
     * The email address of this receiver.
     */
    emailAddress: pulumi.Input<string>;
    /**
     * The name of the email receiver. Names must be unique across all receivers within an action group.
     */
    name: pulumi.Input<string>;
}

/**
 * An Itsm receiver.
 */
export interface ItsmReceiverArgs {
    /**
     * Unique identification of ITSM connection among multiple defined in above workspace.
     */
    connectionId: pulumi.Input<string>;
    /**
     * The name of the Itsm receiver. Names must be unique across all receivers within an action group.
     */
    name: pulumi.Input<string>;
    /**
     * Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
     */
    region: pulumi.Input<string>;
    /**
     * JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
     */
    ticketConfiguration: pulumi.Input<string>;
    /**
     * OMS LA instance identifier.
     */
    workspaceId: pulumi.Input<string>;
}

/**
 * A logic app receiver.
 */
export interface LogicAppReceiverArgs {
    /**
     * The callback url where http request sent to.
     */
    callbackUrl: pulumi.Input<string>;
    /**
     * The name of the logic app receiver. Names must be unique across all receivers within an action group.
     */
    name: pulumi.Input<string>;
    /**
     * The azure resource id of the logic app receiver.
     */
    resourceId: pulumi.Input<string>;
}

/**
 * An alert action.
 */
export interface MetricAlertActionArgs {
    /**
     * the id of the action group to use.
     */
    actionGroupId?: pulumi.Input<string>;
    /**
     * This field allows specifying custom properties, which would be appended to the alert payload sent as input to the webhook.
     */
    webHookProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Specifies the metric alert criteria for multiple resource that has multiple metric criteria.
 */
export interface MetricAlertMultipleResourceMultipleMetricCriteriaArgs {
    /**
     * the list of multiple metric criteria for this 'all of' operation. 
     */
    allOf?: pulumi.Input<pulumi.Input<inputs.insights.v20180301.DynamicMetricCriteriaArgs | inputs.insights.v20180301.MetricCriteriaArgs>[]>;
    /**
     * specifies the type of the alert criteria.
     * Expected value is 'Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria'.
     */
    odataType: pulumi.Input<"Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria">;
}

/**
 * Specifies the metric alert criteria for a single resource that has multiple metric criteria.
 */
export interface MetricAlertSingleResourceMultipleMetricCriteriaArgs {
    /**
     * The list of metric criteria for this 'all of' operation. 
     */
    allOf?: pulumi.Input<pulumi.Input<inputs.insights.v20180301.MetricCriteriaArgs>[]>;
    /**
     * specifies the type of the alert criteria.
     * Expected value is 'Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria'.
     */
    odataType: pulumi.Input<"Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria">;
}

/**
 * Criterion to filter metrics.
 */
export interface MetricCriteriaArgs {
    /**
     * Specifies the type of threshold criteria
     * Expected value is 'StaticThresholdCriterion'.
     */
    criterionType: pulumi.Input<"StaticThresholdCriterion">;
    /**
     * List of dimension conditions.
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.insights.v20180301.MetricDimensionArgs>[]>;
    /**
     * Name of the metric.
     */
    metricName: pulumi.Input<string>;
    /**
     * Namespace of the metric.
     */
    metricNamespace?: pulumi.Input<string>;
    /**
     * Name of the criteria.
     */
    name: pulumi.Input<string>;
    /**
     * the criteria operator.
     */
    operator: pulumi.Input<string | enums.insights.v20180301.Operator>;
    /**
     * Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped.
     */
    skipMetricValidation?: pulumi.Input<boolean>;
    /**
     * the criteria threshold value that activates the alert.
     */
    threshold: pulumi.Input<number>;
    /**
     * the criteria time aggregation types.
     */
    timeAggregation: pulumi.Input<string | enums.insights.v20180301.AggregationTypeEnum>;
}

/**
 * Specifies a metric dimension.
 */
export interface MetricDimensionArgs {
    /**
     * Name of the dimension.
     */
    name: pulumi.Input<string>;
    /**
     * the dimension operator. Only 'Include' and 'Exclude' are supported
     */
    operator: pulumi.Input<string>;
    /**
     * list of dimension values.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * An SMS receiver.
 */
export interface SmsReceiverArgs {
    /**
     * The country code of the SMS receiver.
     */
    countryCode: pulumi.Input<string>;
    /**
     * The name of the SMS receiver. Names must be unique across all receivers within an action group.
     */
    name: pulumi.Input<string>;
    /**
     * The phone number of the SMS receiver.
     */
    phoneNumber: pulumi.Input<string>;
}

/**
 * A voice receiver.
 */
export interface VoiceReceiverArgs {
    /**
     * The country code of the voice receiver.
     */
    countryCode: pulumi.Input<string>;
    /**
     * The name of the voice receiver. Names must be unique across all receivers within an action group.
     */
    name: pulumi.Input<string>;
    /**
     * The phone number of the voice receiver.
     */
    phoneNumber: pulumi.Input<string>;
}

/**
 * A webhook receiver.
 */
export interface WebhookReceiverArgs {
    /**
     * The name of the webhook receiver. Names must be unique across all receivers within an action group.
     */
    name: pulumi.Input<string>;
    /**
     * The URI where webhooks should be sent.
     */
    serviceUri: pulumi.Input<string>;
}

/**
 * Specifies the metric alert rule criteria for a web test resource.
 */
export interface WebtestLocationAvailabilityCriteriaArgs {
    /**
     * The Application Insights resource Id.
     */
    componentId: pulumi.Input<string>;
    /**
     * The number of failed locations.
     */
    failedLocationCount: pulumi.Input<number>;
    /**
     * specifies the type of the alert criteria.
     * Expected value is 'Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria'.
     */
    odataType: pulumi.Input<"Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria">;
    /**
     * The Application Insights web test Id.
     */
    webTestId: pulumi.Input<string>;
}

