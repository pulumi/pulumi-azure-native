// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.
 */
export interface AccessPolicyEntryArgs {
    /**
     *  Application ID of the client making request on behalf of a principal
     */
    applicationId?: pulumi.Input<string>;
    /**
     * The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
     */
    objectId: pulumi.Input<string>;
    /**
     * Permissions the identity has for keys, secrets and certificates.
     */
    permissions: pulumi.Input<inputs.keyvault.v20150601.PermissionsArgs>;
    /**
     * The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
     */
    tenantId: pulumi.Input<string>;
}

/**
 * Permissions the identity has for keys, secrets and certificates.
 */
export interface PermissionsArgs {
    /**
     * Permissions to certificates
     */
    certificates?: pulumi.Input<pulumi.Input<string | enums.keyvault.v20150601.CertificatePermissions>[]>;
    /**
     * Permissions to keys
     */
    keys?: pulumi.Input<pulumi.Input<string | enums.keyvault.v20150601.KeyPermissions>[]>;
    /**
     * Permissions to secrets
     */
    secrets?: pulumi.Input<pulumi.Input<string | enums.keyvault.v20150601.SecretPermissions>[]>;
}

/**
 * SKU details
 */
export interface SkuArgs {
    /**
     * SKU family name
     */
    family: pulumi.Input<string | enums.keyvault.v20150601.SkuFamily>;
    /**
     * SKU name to specify whether the key vault is a standard vault or a premium vault.
     */
    name: pulumi.Input<enums.keyvault.v20150601.SkuName>;
}

/**
 * Properties of the vault
 */
export interface VaultPropertiesArgs {
    /**
     * An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.
     */
    accessPolicies: pulumi.Input<pulumi.Input<inputs.keyvault.v20150601.AccessPolicyEntryArgs>[]>;
    /**
     * Property to specify whether the 'soft delete' functionality is enabled for this key vault.
     */
    enableSoftDelete?: pulumi.Input<boolean>;
    /**
     * Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.
     */
    enabledForDeployment?: pulumi.Input<boolean>;
    /**
     * Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.
     */
    enabledForDiskEncryption?: pulumi.Input<boolean>;
    /**
     * Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.
     */
    enabledForTemplateDeployment?: pulumi.Input<boolean>;
    /**
     * SKU details
     */
    sku: pulumi.Input<inputs.keyvault.v20150601.SkuArgs>;
    /**
     * The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
     */
    tenantId: pulumi.Input<string>;
    /**
     * The URI of the vault for performing operations on keys and secrets.
     */
    vaultUri?: pulumi.Input<string>;
}

