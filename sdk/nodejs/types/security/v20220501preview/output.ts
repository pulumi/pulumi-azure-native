// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The aws connector environment data
 */
export interface AWSEnvironmentDataResponse {
    /**
     * The type of the environment data.
     * Expected value is 'AwsAccount'.
     */
    environmentType: "AwsAccount";
    /**
     * The AWS account's organizational data
     */
    organizationalData?: outputs.security.v20220501preview.AwsOrganizationalDataMasterResponse | outputs.security.v20220501preview.AwsOrganizationalDataMemberResponse;
}

/**
 * The awsOrganization data for the master account
 */
export interface AwsOrganizationalDataMasterResponse {
    /**
     * If the multi cloud account is of membership type organization, list of accounts excluded from offering
     */
    excludedAccountIds?: string[];
    /**
     * The multi cloud account's membership type in the organization
     * Expected value is 'Organization'.
     */
    organizationMembershipType: "Organization";
    /**
     * If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
     */
    stacksetName?: string;
}

/**
 * The awsOrganization data for the member account
 */
export interface AwsOrganizationalDataMemberResponse {
    /**
     * The multi cloud account's membership type in the organization
     * Expected value is 'Member'.
     */
    organizationMembershipType: "Member";
    /**
     * If the multi cloud account is not of membership type organization, this will be the ID of the account's parent
     */
    parentHierarchyId?: string;
}

/**
 * The AzureDevOps scope connector's environment data
 */
export interface AzureDevOpsScopeEnvironmentDataResponse {
    /**
     * The type of the environment data.
     * Expected value is 'AzureDevOpsScope'.
     */
    environmentType: "AzureDevOpsScope";
}

/**
 * The CSPM monitoring for AWS offering
 */
export interface CspmMonitorAwsOfferingResponse {
    /**
     * The offering description.
     */
    description: string;
    /**
     * The native cloud connection configuration
     */
    nativeCloudConnection?: outputs.security.v20220501preview.CspmMonitorAwsOfferingResponseNativeCloudConnection;
    /**
     * The type of the security offering.
     * Expected value is 'CspmMonitorAws'.
     */
    offeringType: "CspmMonitorAws";
}

/**
 * The native cloud connection configuration
 */
export interface CspmMonitorAwsOfferingResponseNativeCloudConnection {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: string;
}

/**
 * The CSPM monitoring for AzureDevOps offering
 */
export interface CspmMonitorAzureDevOpsOfferingResponse {
    /**
     * The offering description.
     */
    description: string;
    /**
     * The type of the security offering.
     * Expected value is 'CspmMonitorAzureDevOps'.
     */
    offeringType: "CspmMonitorAzureDevOps";
}

/**
 * The CSPM monitoring for GCP offering
 */
export interface CspmMonitorGcpOfferingResponse {
    /**
     * The offering description.
     */
    description: string;
    /**
     * The native cloud connection configuration
     */
    nativeCloudConnection?: outputs.security.v20220501preview.CspmMonitorGcpOfferingResponseNativeCloudConnection;
    /**
     * The type of the security offering.
     * Expected value is 'CspmMonitorGcp'.
     */
    offeringType: "CspmMonitorGcp";
}

/**
 * The native cloud connection configuration
 */
export interface CspmMonitorGcpOfferingResponseNativeCloudConnection {
    /**
     * The service account email address in GCP for this offering
     */
    serviceAccountEmailAddress?: string;
    /**
     * The GCP workload identity provider id for the offering
     */
    workloadIdentityProviderId?: string;
}

/**
 * The CSPM monitoring for github offering
 */
export interface CspmMonitorGithubOfferingResponse {
    /**
     * The offering description.
     */
    description: string;
    /**
     * The type of the security offering.
     * Expected value is 'CspmMonitorGithub'.
     */
    offeringType: "CspmMonitorGithub";
}

/**
 * The Defender for Databases AWS offering
 */
export interface DefenderFoDatabasesAwsOfferingResponse {
    /**
     * The ARC autoprovisioning configuration
     */
    arcAutoProvisioning?: outputs.security.v20220501preview.DefenderFoDatabasesAwsOfferingResponseArcAutoProvisioning;
    /**
     * The offering description.
     */
    description: string;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForDatabasesAws'.
     */
    offeringType: "DefenderForDatabasesAws";
}

/**
 * The ARC autoprovisioning configuration
 */
export interface DefenderFoDatabasesAwsOfferingResponseArcAutoProvisioning {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: string;
    /**
     * Is arc auto provisioning enabled
     */
    enabled?: boolean;
    /**
     * Metadata of Service Principal secret for autoprovisioning
     */
    servicePrincipalSecretMetadata?: outputs.security.v20220501preview.DefenderFoDatabasesAwsOfferingResponseServicePrincipalSecretMetadata;
}

/**
 * Metadata of Service Principal secret for autoprovisioning
 */
export interface DefenderFoDatabasesAwsOfferingResponseServicePrincipalSecretMetadata {
    /**
     * expiration date of service principal secret
     */
    expiryDate?: string;
    /**
     * name of secret resource in parameter store
     */
    parameterNameInStore?: string;
    /**
     * region of parameter store where secret is kept
     */
    parameterStoreRegion?: string;
}

/**
 * The Defender for Containers AWS offering
 */
export interface DefenderForContainersAwsOfferingResponse {
    /**
     * Is audit logs pipeline auto provisioning enabled
     */
    autoProvisioning?: boolean;
    /**
     * The cloudwatch to kinesis connection configuration
     */
    cloudWatchToKinesis?: outputs.security.v20220501preview.DefenderForContainersAwsOfferingResponseCloudWatchToKinesis;
    /**
     * The container vulnerability assessment configuration
     */
    containerVulnerabilityAssessment?: outputs.security.v20220501preview.DefenderForContainersAwsOfferingResponseContainerVulnerabilityAssessment;
    /**
     * The container vulnerability assessment task configuration
     */
    containerVulnerabilityAssessmentTask?: outputs.security.v20220501preview.DefenderForContainersAwsOfferingResponseContainerVulnerabilityAssessmentTask;
    /**
     * The offering description.
     */
    description: string;
    /**
     * Enable container vulnerability assessment feature
     */
    enableContainerVulnerabilityAssessment?: boolean;
    /**
     * The kinesis to s3 connection configuration
     */
    kinesisToS3?: outputs.security.v20220501preview.DefenderForContainersAwsOfferingResponseKinesisToS3;
    /**
     * The retention time in days of kube audit logs set on the CloudWatch log group
     */
    kubeAuditRetentionTime?: number;
    /**
     * The kubernetes to scuba connection configuration
     */
    kubernetesScubaReader?: outputs.security.v20220501preview.DefenderForContainersAwsOfferingResponseKubernetesScubaReader;
    /**
     * The kubernetes service connection configuration
     */
    kubernetesService?: outputs.security.v20220501preview.DefenderForContainersAwsOfferingResponseKubernetesService;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForContainersAws'.
     */
    offeringType: "DefenderForContainersAws";
    /**
     * The externalId used by the data reader to prevent the confused deputy attack
     */
    scubaExternalId?: string;
}

/**
 * The cloudwatch to kinesis connection configuration
 */
export interface DefenderForContainersAwsOfferingResponseCloudWatchToKinesis {
    /**
     * The cloud role ARN in AWS used by CloudWatch to transfer data into Kinesis
     */
    cloudRoleArn?: string;
}

/**
 * The container vulnerability assessment configuration
 */
export interface DefenderForContainersAwsOfferingResponseContainerVulnerabilityAssessment {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: string;
}

/**
 * The container vulnerability assessment task configuration
 */
export interface DefenderForContainersAwsOfferingResponseContainerVulnerabilityAssessmentTask {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: string;
}

/**
 * The kinesis to s3 connection configuration
 */
export interface DefenderForContainersAwsOfferingResponseKinesisToS3 {
    /**
     * The cloud role ARN in AWS used by Kinesis to transfer data into S3
     */
    cloudRoleArn?: string;
}

/**
 * The kubernetes to scuba connection configuration
 */
export interface DefenderForContainersAwsOfferingResponseKubernetesScubaReader {
    /**
     * The cloud role ARN in AWS for this feature used for reading data
     */
    cloudRoleArn?: string;
}

/**
 * The kubernetes service connection configuration
 */
export interface DefenderForContainersAwsOfferingResponseKubernetesService {
    /**
     * The cloud role ARN in AWS for this feature used for provisioning resources
     */
    cloudRoleArn?: string;
}

/**
 * The containers GCP offering
 */
export interface DefenderForContainersGcpOfferingResponse {
    /**
     * Is audit logs data collection enabled
     */
    auditLogsAutoProvisioningFlag?: boolean;
    /**
     * The native cloud connection configuration
     */
    dataPipelineNativeCloudConnection?: outputs.security.v20220501preview.DefenderForContainersGcpOfferingResponseDataPipelineNativeCloudConnection;
    /**
     * Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled
     */
    defenderAgentAutoProvisioningFlag?: boolean;
    /**
     * The offering description.
     */
    description: string;
    /**
     * The native cloud connection configuration
     */
    nativeCloudConnection?: outputs.security.v20220501preview.DefenderForContainersGcpOfferingResponseNativeCloudConnection;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForContainersGcp'.
     */
    offeringType: "DefenderForContainersGcp";
    /**
     * Is Policy Kubernetes agent auto provisioning enabled
     */
    policyAgentAutoProvisioningFlag?: boolean;
}

/**
 * The native cloud connection configuration
 */
export interface DefenderForContainersGcpOfferingResponseDataPipelineNativeCloudConnection {
    /**
     * The data collection service account email address in GCP for this offering
     */
    serviceAccountEmailAddress?: string;
    /**
     * The data collection GCP workload identity provider id for this offering
     */
    workloadIdentityProviderId?: string;
}

/**
 * The native cloud connection configuration
 */
export interface DefenderForContainersGcpOfferingResponseNativeCloudConnection {
    /**
     * The service account email address in GCP for this offering
     */
    serviceAccountEmailAddress?: string;
    /**
     * The GCP workload identity provider id for this offering
     */
    workloadIdentityProviderId?: string;
}

/**
 * The Defender for Databases GCP offering configurations
 */
export interface DefenderForDatabasesGcpOfferingResponse {
    /**
     * The ARC autoprovisioning configuration
     */
    arcAutoProvisioning?: outputs.security.v20220501preview.DefenderForDatabasesGcpOfferingResponseArcAutoProvisioning;
    /**
     * The native cloud connection configuration
     */
    defenderForDatabasesArcAutoProvisioning?: outputs.security.v20220501preview.DefenderForDatabasesGcpOfferingResponseDefenderForDatabasesArcAutoProvisioning;
    /**
     * The offering description.
     */
    description: string;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForDatabasesGcp'.
     */
    offeringType: "DefenderForDatabasesGcp";
}

/**
 * The ARC autoprovisioning configuration
 */
export interface DefenderForDatabasesGcpOfferingResponseArcAutoProvisioning {
    /**
     * Configuration for ARC autoprovisioning
     */
    configuration?: outputs.security.v20220501preview.DefenderForDatabasesGcpOfferingResponseConfiguration;
    /**
     * Is arc auto provisioning enabled
     */
    enabled?: boolean;
}

/**
 * Configuration for ARC autoprovisioning
 */
export interface DefenderForDatabasesGcpOfferingResponseConfiguration {
    /**
     * The agent onboarding service account numeric id
     */
    agentOnboardingServiceAccountNumericId?: string;
    /**
     * The Azure service principal client id for agent onboarding
     */
    clientId?: string;
}

/**
 * The native cloud connection configuration
 */
export interface DefenderForDatabasesGcpOfferingResponseDefenderForDatabasesArcAutoProvisioning {
    /**
     * The service account email address in GCP for this offering
     */
    serviceAccountEmailAddress?: string;
    /**
     * The GCP workload identity provider id for this offering
     */
    workloadIdentityProviderId?: string;
}

/**
 * The Defender for Servers AWS offering
 */
export interface DefenderForServersAwsOfferingResponse {
    /**
     * The ARC autoprovisioning configuration
     */
    arcAutoProvisioning?: outputs.security.v20220501preview.DefenderForServersAwsOfferingResponseArcAutoProvisioning;
    /**
     * The Defender for servers connection configuration
     */
    defenderForServers?: outputs.security.v20220501preview.DefenderForServersAwsOfferingResponseDefenderForServers;
    /**
     * The offering description.
     */
    description: string;
    /**
     * The Microsoft Defender for Endpoint autoprovisioning configuration
     */
    mdeAutoProvisioning?: outputs.security.v20220501preview.DefenderForServersAwsOfferingResponseMdeAutoProvisioning;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForServersAws'.
     */
    offeringType: "DefenderForServersAws";
    /**
     * configuration for the servers offering subPlan
     */
    subPlan?: outputs.security.v20220501preview.DefenderForServersAwsOfferingResponseSubPlan;
    /**
     * The Vulnerability Assessment autoprovisioning configuration
     */
    vaAutoProvisioning?: outputs.security.v20220501preview.DefenderForServersAwsOfferingResponseVaAutoProvisioning;
    /**
     * The Microsoft Defender for Server VM scanning configuration
     */
    vmScanners?: outputs.security.v20220501preview.DefenderForServersAwsOfferingResponseVmScanners;
}

/**
 * The ARC autoprovisioning configuration
 */
export interface DefenderForServersAwsOfferingResponseArcAutoProvisioning {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: string;
    /**
     * Is arc auto provisioning enabled
     */
    enabled?: boolean;
    /**
     * Metadata of Service Principal secret for autoprovisioning
     */
    servicePrincipalSecretMetadata?: outputs.security.v20220501preview.DefenderForServersAwsOfferingResponseServicePrincipalSecretMetadata;
}

/**
 * configuration for Vulnerability Assessment autoprovisioning
 */
export interface DefenderForServersAwsOfferingResponseConfiguration {
    /**
     * The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
     */
    type?: string;
}

/**
 * configuration for Microsoft Defender for Server VM scanning
 */
export interface DefenderForServersAwsOfferingResponseConfigurationConfiguration {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: string;
    /**
     * VM tags that indicates that VM should not be scanned
     */
    exclusionTags?: any;
    /**
     * The scanning mode for the vm scan.
     */
    scanningMode?: string;
}

/**
 * The Defender for servers connection configuration
 */
export interface DefenderForServersAwsOfferingResponseDefenderForServers {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: string;
}

/**
 * The Microsoft Defender for Endpoint autoprovisioning configuration
 */
export interface DefenderForServersAwsOfferingResponseMdeAutoProvisioning {
    /**
     * configuration for Microsoft Defender for Endpoint autoprovisioning
     */
    configuration?: any;
    /**
     * Is Microsoft Defender for Endpoint auto provisioning enabled
     */
    enabled?: boolean;
}

/**
 * Metadata of Service Principal secret for autoprovisioning
 */
export interface DefenderForServersAwsOfferingResponseServicePrincipalSecretMetadata {
    /**
     * expiration date of service principal secret
     */
    expiryDate?: string;
    /**
     * name of secret resource in parameter store
     */
    parameterNameInStore?: string;
    /**
     * region of parameter store where secret is kept
     */
    parameterStoreRegion?: string;
}

/**
 * configuration for the servers offering subPlan
 */
export interface DefenderForServersAwsOfferingResponseSubPlan {
    /**
     * The available sub plans
     */
    type?: string;
}

/**
 * The Vulnerability Assessment autoprovisioning configuration
 */
export interface DefenderForServersAwsOfferingResponseVaAutoProvisioning {
    /**
     * configuration for Vulnerability Assessment autoprovisioning
     */
    configuration?: outputs.security.v20220501preview.DefenderForServersAwsOfferingResponseConfiguration;
    /**
     * Is Vulnerability Assessment auto provisioning enabled
     */
    enabled?: boolean;
}

/**
 * The Microsoft Defender for Server VM scanning configuration
 */
export interface DefenderForServersAwsOfferingResponseVmScanners {
    /**
     * configuration for Microsoft Defender for Server VM scanning
     */
    configuration?: outputs.security.v20220501preview.DefenderForServersAwsOfferingResponseConfigurationConfiguration;
    /**
     * Is Microsoft Defender for Server VM scanning enabled
     */
    enabled?: boolean;
}

/**
 * The Defender for Servers GCP offering configurations
 */
export interface DefenderForServersGcpOfferingResponse {
    /**
     * The ARC autoprovisioning configuration
     */
    arcAutoProvisioning?: outputs.security.v20220501preview.DefenderForServersGcpOfferingResponseArcAutoProvisioning;
    /**
     * The Defender for servers connection configuration
     */
    defenderForServers?: outputs.security.v20220501preview.DefenderForServersGcpOfferingResponseDefenderForServers;
    /**
     * The offering description.
     */
    description: string;
    /**
     * The Microsoft Defender for Endpoint autoprovisioning configuration
     */
    mdeAutoProvisioning?: outputs.security.v20220501preview.DefenderForServersGcpOfferingResponseMdeAutoProvisioning;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForServersGcp'.
     */
    offeringType: "DefenderForServersGcp";
    /**
     * configuration for the servers offering subPlan
     */
    subPlan?: outputs.security.v20220501preview.DefenderForServersGcpOfferingResponseSubPlan;
    /**
     * The Vulnerability Assessment autoprovisioning configuration
     */
    vaAutoProvisioning?: outputs.security.v20220501preview.DefenderForServersGcpOfferingResponseVaAutoProvisioning;
}

/**
 * The ARC autoprovisioning configuration
 */
export interface DefenderForServersGcpOfferingResponseArcAutoProvisioning {
    /**
     * Configuration for ARC autoprovisioning
     */
    configuration?: outputs.security.v20220501preview.DefenderForServersGcpOfferingResponseConfiguration;
    /**
     * Is arc auto provisioning enabled
     */
    enabled?: boolean;
}

/**
 * Configuration for ARC autoprovisioning
 */
export interface DefenderForServersGcpOfferingResponseConfiguration {
    /**
     * The agent onboarding service account numeric id
     */
    agentOnboardingServiceAccountNumericId?: string;
    /**
     * The Azure service principal client id for agent onboarding
     */
    clientId?: string;
}

/**
 * configuration for Vulnerability Assessment autoprovisioning
 */
export interface DefenderForServersGcpOfferingResponseConfigurationConfiguration {
    /**
     * The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
     */
    type?: string;
}

/**
 * The Defender for servers connection configuration
 */
export interface DefenderForServersGcpOfferingResponseDefenderForServers {
    /**
     * The service account email address in GCP for this feature
     */
    serviceAccountEmailAddress?: string;
    /**
     * The workload identity provider id in GCP for this feature
     */
    workloadIdentityProviderId?: string;
}

/**
 * The Microsoft Defender for Endpoint autoprovisioning configuration
 */
export interface DefenderForServersGcpOfferingResponseMdeAutoProvisioning {
    /**
     * configuration for Microsoft Defender for Endpoint autoprovisioning
     */
    configuration?: any;
    /**
     * Is Microsoft Defender for Endpoint auto provisioning enabled
     */
    enabled?: boolean;
}

/**
 * configuration for the servers offering subPlan
 */
export interface DefenderForServersGcpOfferingResponseSubPlan {
    /**
     * The available sub plans
     */
    type?: string;
}

/**
 * The Vulnerability Assessment autoprovisioning configuration
 */
export interface DefenderForServersGcpOfferingResponseVaAutoProvisioning {
    /**
     * configuration for Vulnerability Assessment autoprovisioning
     */
    configuration?: outputs.security.v20220501preview.DefenderForServersGcpOfferingResponseConfigurationConfiguration;
    /**
     * Is Vulnerability Assessment auto provisioning enabled
     */
    enabled?: boolean;
}

/**
 * The gcpOrganization data for the member account
 */
export interface GcpOrganizationalDataMemberResponse {
    /**
     * The GCP management project number from organizational onboarding
     */
    managementProjectNumber?: string;
    /**
     * The multi cloud account's membership type in the organization
     * Expected value is 'Member'.
     */
    organizationMembershipType: "Member";
    /**
     * If the multi cloud account is not of membership type organization, this will be the ID of the project's parent
     */
    parentHierarchyId?: string;
}

/**
 * The gcpOrganization data for the parent account
 */
export interface GcpOrganizationalDataOrganizationResponse {
    /**
     * If the multi cloud account is of membership type organization, list of accounts excluded from offering
     */
    excludedProjectNumbers?: string[];
    /**
     * The multi cloud account's membership type in the organization
     * Expected value is 'Organization'.
     */
    organizationMembershipType: "Organization";
    /**
     * The service account email address which represents the organization level permissions container.
     */
    serviceAccountEmailAddress?: string;
    /**
     * The GCP workload identity provider id which represents the permissions required to auto provision security connectors
     */
    workloadIdentityProviderId?: string;
}

/**
 * The details about the project represented by the security connector
 */
export interface GcpProjectDetailsResponse {
    /**
     * The GCP Project id
     */
    projectId?: string;
    /**
     * The unique GCP Project number
     */
    projectNumber?: string;
    /**
     * The GCP workload identity federation pool id
     */
    workloadIdentityPoolId: string;
}

/**
 * The GCP project connector environment data
 */
export interface GcpProjectEnvironmentDataResponse {
    /**
     * The type of the environment data.
     * Expected value is 'GcpProject'.
     */
    environmentType: "GcpProject";
    /**
     * The Gcp project's organizational data
     */
    organizationalData?: outputs.security.v20220501preview.GcpOrganizationalDataMemberResponse | outputs.security.v20220501preview.GcpOrganizationalDataOrganizationResponse;
    /**
     * The Gcp project's details
     */
    projectDetails?: outputs.security.v20220501preview.GcpProjectDetailsResponse;
}

/**
 * The github scope connector's environment data
 */
export interface GithubScopeEnvironmentDataResponse {
    /**
     * The type of the environment data.
     * Expected value is 'GithubScope'.
     */
    environmentType: "GithubScope";
}

/**
 * The information protection for AWS offering
 */
export interface InformationProtectionAwsOfferingResponse {
    /**
     * The offering description.
     */
    description: string;
    /**
     * The native cloud connection configuration
     */
    informationProtection?: outputs.security.v20220501preview.InformationProtectionAwsOfferingResponseInformationProtection;
    /**
     * The type of the security offering.
     * Expected value is 'InformationProtectionAws'.
     */
    offeringType: "InformationProtectionAws";
}

/**
 * The native cloud connection configuration
 */
export interface InformationProtectionAwsOfferingResponseInformationProtection {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataResponse {
    /**
     * The timestamp of resource creation (UTC).
     */
    createdAt?: string;
    /**
     * The identity that created the resource.
     */
    createdBy?: string;
    /**
     * The type of identity that created the resource.
     */
    createdByType?: string;
    /**
     * The timestamp of resource last modification (UTC)
     */
    lastModifiedAt?: string;
    /**
     * The identity that last modified the resource.
     */
    lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     */
    lastModifiedByType?: string;
}

