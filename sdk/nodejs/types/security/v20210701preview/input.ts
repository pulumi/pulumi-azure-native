// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The CSPM monitoring for AWS offering configurations
 */
export interface CspmMonitorAwsOfferingArgs {
    /**
     * The native cloud connection configuration
     */
    nativeCloudConnection?: pulumi.Input<inputs.security.v20210701preview.CspmMonitorAwsOfferingNativeCloudConnectionArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'CspmMonitorAws'.
     */
    offeringType: pulumi.Input<"CspmMonitorAws">;
}

/**
 * The native cloud connection configuration
 */
export interface CspmMonitorAwsOfferingNativeCloudConnectionArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The Defender for Containers AWS offering configurations
 */
export interface DefenderForContainersAwsOfferingArgs {
    /**
     * The cloudwatch to kinesis connection configuration
     */
    cloudWatchToKinesis?: pulumi.Input<inputs.security.v20210701preview.DefenderForContainersAwsOfferingCloudWatchToKinesisArgs>;
    /**
     * The kinesis to s3 connection configuration
     */
    kinesisToS3?: pulumi.Input<inputs.security.v20210701preview.DefenderForContainersAwsOfferingKinesisToS3Args>;
    /**
     * The kubernetes to scuba connection configuration
     */
    kubernetesScubaReader?: pulumi.Input<inputs.security.v20210701preview.DefenderForContainersAwsOfferingKubernetesScubaReaderArgs>;
    /**
     * The kubernetes service connection configuration
     */
    kubernetesService?: pulumi.Input<inputs.security.v20210701preview.DefenderForContainersAwsOfferingKubernetesServiceArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForContainersAws'.
     */
    offeringType: pulumi.Input<"DefenderForContainersAws">;
}

/**
 * The cloudwatch to kinesis connection configuration
 */
export interface DefenderForContainersAwsOfferingCloudWatchToKinesisArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The kinesis to s3 connection configuration
 */
export interface DefenderForContainersAwsOfferingKinesisToS3Args {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The kubernetes to scuba connection configuration
 */
export interface DefenderForContainersAwsOfferingKubernetesScubaReaderArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The kubernetes service connection configuration
 */
export interface DefenderForContainersAwsOfferingKubernetesServiceArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The Defender for Servers AWS offering configurations
 */
export interface DefenderForServersAwsOfferingArgs {
    /**
     * The ARC autoprovisioning configuration
     */
    arcAutoProvisioning?: pulumi.Input<inputs.security.v20210701preview.DefenderForServersAwsOfferingArcAutoProvisioningArgs>;
    /**
     * The Defender for servers connection configuration
     */
    defenderForServers?: pulumi.Input<inputs.security.v20210701preview.DefenderForServersAwsOfferingDefenderForServersArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForServersAws'.
     */
    offeringType: pulumi.Input<"DefenderForServersAws">;
}

/**
 * The ARC autoprovisioning configuration
 */
export interface DefenderForServersAwsOfferingArcAutoProvisioningArgs {
    /**
     * Is arc auto provisioning enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Metadata of Service Principal secret for autoprovisioning
     */
    servicePrincipalSecretMetadata?: pulumi.Input<inputs.security.v20210701preview.DefenderForServersAwsOfferingServicePrincipalSecretMetadataArgs>;
}

/**
 * The Defender for servers connection configuration
 */
export interface DefenderForServersAwsOfferingDefenderForServersArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * Metadata of Service Principal secret for autoprovisioning
 */
export interface DefenderForServersAwsOfferingServicePrincipalSecretMetadataArgs {
    /**
     * expiration date of service principal secret
     */
    expiryDate?: pulumi.Input<string>;
    /**
     * name of secret resource in parameter store
     */
    parameterNameInStore?: pulumi.Input<string>;
    /**
     * region of parameter store where secret is kept
     */
    parameterStoreRegion?: pulumi.Input<string>;
}

/**
 * The information protection for AWS offering configurations
 */
export interface InformationProtectionAwsOfferingArgs {
    /**
     * The native cloud connection configuration
     */
    informationProtection?: pulumi.Input<inputs.security.v20210701preview.InformationProtectionAwsOfferingInformationProtectionArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'InformationProtectionAws'.
     */
    offeringType: pulumi.Input<"InformationProtectionAws">;
}

/**
 * The native cloud connection configuration
 */
export interface InformationProtectionAwsOfferingInformationProtectionArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The multi cloud account's organizational data
 */
export interface SecurityConnectorPropertiesOrganizationalDataArgs {
    /**
     * If the multi cloud account is of membership type organization, list of accounts excluded from offering
     */
    excludedAccountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The multi cloud account's membership type in the organization
     */
    organizationMembershipType?: pulumi.Input<string | enums.security.v20210701preview.OrganizationMembershipType>;
    /**
     * If the multi cloud account is not of membership type organization, this will be the ID of the account's parent
     */
    parentHierarchyId?: pulumi.Input<string>;
    /**
     * If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
     */
    stacksetName?: pulumi.Input<string>;
}

