// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The aws connector environment data
 */
export interface AwsEnvironmentDataArgs {
    /**
     * The type of the environment data.
     * Expected value is 'AwsAccount'.
     */
    environmentType: pulumi.Input<"AwsAccount">;
    /**
     * The AWS account's organizational data
     */
    organizationalData?: pulumi.Input<inputs.security.v20220801preview.AwsOrganizationalDataMasterArgs | inputs.security.v20220801preview.AwsOrganizationalDataMemberArgs>;
}

/**
 * The awsOrganization data for the master account
 */
export interface AwsOrganizationalDataMasterArgs {
    /**
     * If the multi cloud account is of membership type organization, list of accounts excluded from offering
     */
    excludedAccountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The multi cloud account's membership type in the organization
     * Expected value is 'Organization'.
     */
    organizationMembershipType: pulumi.Input<"Organization">;
    /**
     * If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
     */
    stacksetName?: pulumi.Input<string>;
}

/**
 * The awsOrganization data for the member account
 */
export interface AwsOrganizationalDataMemberArgs {
    /**
     * The multi cloud account's membership type in the organization
     * Expected value is 'Member'.
     */
    organizationMembershipType: pulumi.Input<"Member">;
    /**
     * If the multi cloud account is not of membership type organization, this will be the ID of the account's parent
     */
    parentHierarchyId?: pulumi.Input<string>;
}

/**
 * The AzureDevOps scope connector's environment data
 */
export interface AzureDevOpsScopeEnvironmentDataArgs {
    /**
     * The type of the environment data.
     * Expected value is 'AzureDevOpsScope'.
     */
    environmentType: pulumi.Input<"AzureDevOpsScope">;
}

/**
 * The CSPM monitoring for AWS offering
 */
export interface CspmMonitorAwsOfferingArgs {
    /**
     * The native cloud connection configuration
     */
    nativeCloudConnection?: pulumi.Input<inputs.security.v20220801preview.CspmMonitorAwsOfferingNativeCloudConnectionArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'CspmMonitorAws'.
     */
    offeringType: pulumi.Input<"CspmMonitorAws">;
}

/**
 * The native cloud connection configuration
 */
export interface CspmMonitorAwsOfferingNativeCloudConnectionArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The CSPM monitoring for AzureDevOps offering
 */
export interface CspmMonitorAzureDevOpsOfferingArgs {
    /**
     * The type of the security offering.
     * Expected value is 'CspmMonitorAzureDevOps'.
     */
    offeringType: pulumi.Input<"CspmMonitorAzureDevOps">;
}

/**
 * The CSPM monitoring for GCP offering
 */
export interface CspmMonitorGcpOfferingArgs {
    /**
     * The native cloud connection configuration
     */
    nativeCloudConnection?: pulumi.Input<inputs.security.v20220801preview.CspmMonitorGcpOfferingNativeCloudConnectionArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'CspmMonitorGcp'.
     */
    offeringType: pulumi.Input<"CspmMonitorGcp">;
}

/**
 * The native cloud connection configuration
 */
export interface CspmMonitorGcpOfferingNativeCloudConnectionArgs {
    /**
     * The service account email address in GCP for this offering
     */
    serviceAccountEmailAddress?: pulumi.Input<string>;
    /**
     * The GCP workload identity provider id for the offering
     */
    workloadIdentityProviderId?: pulumi.Input<string>;
}

/**
 * The CSPM monitoring for github offering
 */
export interface CspmMonitorGithubOfferingArgs {
    /**
     * The type of the security offering.
     * Expected value is 'CspmMonitorGithub'.
     */
    offeringType: pulumi.Input<"CspmMonitorGithub">;
}

/**
 * The CSPM P1 for Aws offering
 */
export interface DefenderCspmAwsOfferingArgs {
    /**
     * The type of the security offering.
     * Expected value is 'DefenderCspmAws'.
     */
    offeringType: pulumi.Input<"DefenderCspmAws">;
    /**
     * The Microsoft Defender for Server VM scanning configuration
     */
    vmScanners?: pulumi.Input<inputs.security.v20220801preview.DefenderCspmAwsOfferingVmScannersArgs>;
}

/**
 * configuration for Microsoft Defender for Server VM scanning
 */
export interface DefenderCspmAwsOfferingConfigurationArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
    /**
     * VM tags that indicates that VM should not be scanned
     */
    exclusionTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The scanning mode for the vm scan.
     */
    scanningMode?: pulumi.Input<string | enums.security.v20220801preview.ScanningMode>;
}

/**
 * The Microsoft Defender for Server VM scanning configuration
 */
export interface DefenderCspmAwsOfferingVmScannersArgs {
    /**
     * configuration for Microsoft Defender for Server VM scanning
     */
    configuration?: pulumi.Input<inputs.security.v20220801preview.DefenderCspmAwsOfferingConfigurationArgs>;
    /**
     * Is Microsoft Defender for Server VM scanning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The CSPM P1 for GCP offering
 */
export interface DefenderCspmGcpOfferingArgs {
    /**
     * The type of the security offering.
     * Expected value is 'DefenderCspmGcp'.
     */
    offeringType: pulumi.Input<"DefenderCspmGcp">;
}

/**
 * The Defender for Databases AWS offering
 */
export interface DefenderFoDatabasesAwsOfferingArgs {
    /**
     * The ARC autoprovisioning configuration
     */
    arcAutoProvisioning?: pulumi.Input<inputs.security.v20220801preview.DefenderFoDatabasesAwsOfferingArcAutoProvisioningArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForDatabasesAws'.
     */
    offeringType: pulumi.Input<"DefenderForDatabasesAws">;
    /**
     * The RDS configuration
     */
    rds?: pulumi.Input<inputs.security.v20220801preview.DefenderFoDatabasesAwsOfferingRdsArgs>;
}

/**
 * The ARC autoprovisioning configuration
 */
export interface DefenderFoDatabasesAwsOfferingArcAutoProvisioningArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
    /**
     * Is arc auto provisioning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The RDS configuration
 */
export interface DefenderFoDatabasesAwsOfferingRdsArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
    /**
     * Is RDS protection enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The Defender for Containers AWS offering
 */
export interface DefenderForContainersAwsOfferingArgs {
    /**
     * Is audit logs pipeline auto provisioning enabled
     */
    autoProvisioning?: pulumi.Input<boolean>;
    /**
     * The cloudwatch to kinesis connection configuration
     */
    cloudWatchToKinesis?: pulumi.Input<inputs.security.v20220801preview.DefenderForContainersAwsOfferingCloudWatchToKinesisArgs>;
    /**
     * The container vulnerability assessment configuration
     */
    containerVulnerabilityAssessment?: pulumi.Input<inputs.security.v20220801preview.DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentArgs>;
    /**
     * The container vulnerability assessment task configuration
     */
    containerVulnerabilityAssessmentTask?: pulumi.Input<inputs.security.v20220801preview.DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTaskArgs>;
    /**
     * Enable container vulnerability assessment feature
     */
    enableContainerVulnerabilityAssessment?: pulumi.Input<boolean>;
    /**
     * The kinesis to s3 connection configuration
     */
    kinesisToS3?: pulumi.Input<inputs.security.v20220801preview.DefenderForContainersAwsOfferingKinesisToS3Args>;
    /**
     * The retention time in days of kube audit logs set on the CloudWatch log group
     */
    kubeAuditRetentionTime?: pulumi.Input<number>;
    /**
     * The kubernetes to scuba connection configuration
     */
    kubernetesScubaReader?: pulumi.Input<inputs.security.v20220801preview.DefenderForContainersAwsOfferingKubernetesScubaReaderArgs>;
    /**
     * The kubernetes service connection configuration
     */
    kubernetesService?: pulumi.Input<inputs.security.v20220801preview.DefenderForContainersAwsOfferingKubernetesServiceArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForContainersAws'.
     */
    offeringType: pulumi.Input<"DefenderForContainersAws">;
    /**
     * The externalId used by the data reader to prevent the confused deputy attack
     */
    scubaExternalId?: pulumi.Input<string>;
}

/**
 * The cloudwatch to kinesis connection configuration
 */
export interface DefenderForContainersAwsOfferingCloudWatchToKinesisArgs {
    /**
     * The cloud role ARN in AWS used by CloudWatch to transfer data into Kinesis
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The container vulnerability assessment configuration
 */
export interface DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The container vulnerability assessment task configuration
 */
export interface DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTaskArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The kinesis to s3 connection configuration
 */
export interface DefenderForContainersAwsOfferingKinesisToS3Args {
    /**
     * The cloud role ARN in AWS used by Kinesis to transfer data into S3
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The kubernetes to scuba connection configuration
 */
export interface DefenderForContainersAwsOfferingKubernetesScubaReaderArgs {
    /**
     * The cloud role ARN in AWS for this feature used for reading data
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The kubernetes service connection configuration
 */
export interface DefenderForContainersAwsOfferingKubernetesServiceArgs {
    /**
     * The cloud role ARN in AWS for this feature used for provisioning resources
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The containers GCP offering
 */
export interface DefenderForContainersGcpOfferingArgs {
    /**
     * Is audit logs data collection enabled
     */
    auditLogsAutoProvisioningFlag?: pulumi.Input<boolean>;
    /**
     * The native cloud connection configuration
     */
    dataPipelineNativeCloudConnection?: pulumi.Input<inputs.security.v20220801preview.DefenderForContainersGcpOfferingDataPipelineNativeCloudConnectionArgs>;
    /**
     * Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled
     */
    defenderAgentAutoProvisioningFlag?: pulumi.Input<boolean>;
    /**
     * The native cloud connection configuration
     */
    nativeCloudConnection?: pulumi.Input<inputs.security.v20220801preview.DefenderForContainersGcpOfferingNativeCloudConnectionArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForContainersGcp'.
     */
    offeringType: pulumi.Input<"DefenderForContainersGcp">;
    /**
     * Is Policy Kubernetes agent auto provisioning enabled
     */
    policyAgentAutoProvisioningFlag?: pulumi.Input<boolean>;
}

/**
 * The native cloud connection configuration
 */
export interface DefenderForContainersGcpOfferingDataPipelineNativeCloudConnectionArgs {
    /**
     * The data collection service account email address in GCP for this offering
     */
    serviceAccountEmailAddress?: pulumi.Input<string>;
    /**
     * The data collection GCP workload identity provider id for this offering
     */
    workloadIdentityProviderId?: pulumi.Input<string>;
}

/**
 * The native cloud connection configuration
 */
export interface DefenderForContainersGcpOfferingNativeCloudConnectionArgs {
    /**
     * The service account email address in GCP for this offering
     */
    serviceAccountEmailAddress?: pulumi.Input<string>;
    /**
     * The GCP workload identity provider id for this offering
     */
    workloadIdentityProviderId?: pulumi.Input<string>;
}

/**
 * The Defender for Databases GCP offering configurations
 */
export interface DefenderForDatabasesGcpOfferingArgs {
    /**
     * The ARC autoprovisioning configuration
     */
    arcAutoProvisioning?: pulumi.Input<inputs.security.v20220801preview.DefenderForDatabasesGcpOfferingArcAutoProvisioningArgs>;
    /**
     * The native cloud connection configuration
     */
    defenderForDatabasesArcAutoProvisioning?: pulumi.Input<inputs.security.v20220801preview.DefenderForDatabasesGcpOfferingDefenderForDatabasesArcAutoProvisioningArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForDatabasesGcp'.
     */
    offeringType: pulumi.Input<"DefenderForDatabasesGcp">;
}

/**
 * The ARC autoprovisioning configuration
 */
export interface DefenderForDatabasesGcpOfferingArcAutoProvisioningArgs {
    /**
     * Is arc auto provisioning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The native cloud connection configuration
 */
export interface DefenderForDatabasesGcpOfferingDefenderForDatabasesArcAutoProvisioningArgs {
    /**
     * The service account email address in GCP for this offering
     */
    serviceAccountEmailAddress?: pulumi.Input<string>;
    /**
     * The GCP workload identity provider id for this offering
     */
    workloadIdentityProviderId?: pulumi.Input<string>;
}

/**
 * The Defender for DevOps for Azure DevOps offering
 */
export interface DefenderForDevOpsAzureDevOpsOfferingArgs {
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForDevOpsAzureDevOps'.
     */
    offeringType: pulumi.Input<"DefenderForDevOpsAzureDevOps">;
}

/**
 * The Defender for DevOps for Github offering
 */
export interface DefenderForDevOpsGithubOfferingArgs {
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForDevOpsGithub'.
     */
    offeringType: pulumi.Input<"DefenderForDevOpsGithub">;
}

/**
 * The Defender for Servers AWS offering
 */
export interface DefenderForServersAwsOfferingArgs {
    /**
     * The ARC autoprovisioning configuration
     */
    arcAutoProvisioning?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersAwsOfferingArcAutoProvisioningArgs>;
    /**
     * The Defender for servers connection configuration
     */
    defenderForServers?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersAwsOfferingDefenderForServersArgs>;
    /**
     * The Microsoft Defender for Endpoint autoprovisioning configuration
     */
    mdeAutoProvisioning?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersAwsOfferingMdeAutoProvisioningArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForServersAws'.
     */
    offeringType: pulumi.Input<"DefenderForServersAws">;
    /**
     * configuration for the servers offering subPlan
     */
    subPlan?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersAwsOfferingSubPlanArgs>;
    /**
     * The Vulnerability Assessment autoprovisioning configuration
     */
    vaAutoProvisioning?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersAwsOfferingVaAutoProvisioningArgs>;
    /**
     * The Microsoft Defender for Server VM scanning configuration
     */
    vmScanners?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersAwsOfferingVmScannersArgs>;
}

/**
 * The ARC autoprovisioning configuration
 */
export interface DefenderForServersAwsOfferingArcAutoProvisioningArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
    /**
     * Is arc auto provisioning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * configuration for Vulnerability Assessment autoprovisioning
 */
export interface DefenderForServersAwsOfferingConfigurationArgs {
    /**
     * The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
     */
    type?: pulumi.Input<string | enums.security.v20220801preview.Type>;
}

/**
 * configuration for Microsoft Defender for Server VM scanning
 */
export interface DefenderForServersAwsOfferingConfigurationConfigurationArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
    /**
     * VM tags that indicates that VM should not be scanned
     */
    exclusionTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The scanning mode for the vm scan.
     */
    scanningMode?: pulumi.Input<string | enums.security.v20220801preview.ScanningMode>;
}

/**
 * The Defender for servers connection configuration
 */
export interface DefenderForServersAwsOfferingDefenderForServersArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

/**
 * The Microsoft Defender for Endpoint autoprovisioning configuration
 */
export interface DefenderForServersAwsOfferingMdeAutoProvisioningArgs {
    /**
     * configuration for Microsoft Defender for Endpoint autoprovisioning
     */
    configuration?: any;
    /**
     * Is Microsoft Defender for Endpoint auto provisioning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * configuration for the servers offering subPlan
 */
export interface DefenderForServersAwsOfferingSubPlanArgs {
    /**
     * The available sub plans
     */
    type?: pulumi.Input<string | enums.security.v20220801preview.SubPlan>;
}

/**
 * The Vulnerability Assessment autoprovisioning configuration
 */
export interface DefenderForServersAwsOfferingVaAutoProvisioningArgs {
    /**
     * configuration for Vulnerability Assessment autoprovisioning
     */
    configuration?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersAwsOfferingConfigurationArgs>;
    /**
     * Is Vulnerability Assessment auto provisioning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The Microsoft Defender for Server VM scanning configuration
 */
export interface DefenderForServersAwsOfferingVmScannersArgs {
    /**
     * configuration for Microsoft Defender for Server VM scanning
     */
    configuration?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersAwsOfferingConfigurationConfigurationArgs>;
    /**
     * Is Microsoft Defender for Server VM scanning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The Defender for Servers GCP offering configurations
 */
export interface DefenderForServersGcpOfferingArgs {
    /**
     * The ARC autoprovisioning configuration
     */
    arcAutoProvisioning?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersGcpOfferingArcAutoProvisioningArgs>;
    /**
     * The Defender for servers connection configuration
     */
    defenderForServers?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersGcpOfferingDefenderForServersArgs>;
    /**
     * The Microsoft Defender for Endpoint autoprovisioning configuration
     */
    mdeAutoProvisioning?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersGcpOfferingMdeAutoProvisioningArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'DefenderForServersGcp'.
     */
    offeringType: pulumi.Input<"DefenderForServersGcp">;
    /**
     * configuration for the servers offering subPlan
     */
    subPlan?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersGcpOfferingSubPlanArgs>;
    /**
     * The Vulnerability Assessment autoprovisioning configuration
     */
    vaAutoProvisioning?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersGcpOfferingVaAutoProvisioningArgs>;
}

/**
 * The ARC autoprovisioning configuration
 */
export interface DefenderForServersGcpOfferingArcAutoProvisioningArgs {
    /**
     * Is arc auto provisioning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * configuration for Vulnerability Assessment autoprovisioning
 */
export interface DefenderForServersGcpOfferingConfigurationArgs {
    /**
     * The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
     */
    type?: pulumi.Input<string | enums.security.v20220801preview.Type>;
}

/**
 * The Defender for servers connection configuration
 */
export interface DefenderForServersGcpOfferingDefenderForServersArgs {
    /**
     * The service account email address in GCP for this feature
     */
    serviceAccountEmailAddress?: pulumi.Input<string>;
    /**
     * The workload identity provider id in GCP for this feature
     */
    workloadIdentityProviderId?: pulumi.Input<string>;
}

/**
 * The Microsoft Defender for Endpoint autoprovisioning configuration
 */
export interface DefenderForServersGcpOfferingMdeAutoProvisioningArgs {
    /**
     * configuration for Microsoft Defender for Endpoint autoprovisioning
     */
    configuration?: any;
    /**
     * Is Microsoft Defender for Endpoint auto provisioning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * configuration for the servers offering subPlan
 */
export interface DefenderForServersGcpOfferingSubPlanArgs {
    /**
     * The available sub plans
     */
    type?: pulumi.Input<string | enums.security.v20220801preview.SubPlan>;
}

/**
 * The Vulnerability Assessment autoprovisioning configuration
 */
export interface DefenderForServersGcpOfferingVaAutoProvisioningArgs {
    /**
     * configuration for Vulnerability Assessment autoprovisioning
     */
    configuration?: pulumi.Input<inputs.security.v20220801preview.DefenderForServersGcpOfferingConfigurationArgs>;
    /**
     * Is Vulnerability Assessment auto provisioning enabled
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The gcpOrganization data for the member account
 */
export interface GcpOrganizationalDataMemberArgs {
    /**
     * The GCP management project number from organizational onboarding
     */
    managementProjectNumber?: pulumi.Input<string>;
    /**
     * The multi cloud account's membership type in the organization
     * Expected value is 'Member'.
     */
    organizationMembershipType: pulumi.Input<"Member">;
    /**
     * If the multi cloud account is not of membership type organization, this will be the ID of the project's parent
     */
    parentHierarchyId?: pulumi.Input<string>;
}

/**
 * The gcpOrganization data for the parent account
 */
export interface GcpOrganizationalDataOrganizationArgs {
    /**
     * If the multi cloud account is of membership type organization, list of accounts excluded from offering
     */
    excludedProjectNumbers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The multi cloud account's membership type in the organization
     * Expected value is 'Organization'.
     */
    organizationMembershipType: pulumi.Input<"Organization">;
    /**
     * The service account email address which represents the organization level permissions container.
     */
    serviceAccountEmailAddress?: pulumi.Input<string>;
    /**
     * The GCP workload identity provider id which represents the permissions required to auto provision security connectors
     */
    workloadIdentityProviderId?: pulumi.Input<string>;
}

/**
 * The details about the project represented by the security connector
 */
export interface GcpProjectDetailsArgs {
    /**
     * The GCP Project id
     */
    projectId?: pulumi.Input<string>;
    /**
     * The unique GCP Project number
     */
    projectNumber?: pulumi.Input<string>;
}

/**
 * The GCP project connector environment data
 */
export interface GcpProjectEnvironmentDataArgs {
    /**
     * The type of the environment data.
     * Expected value is 'GcpProject'.
     */
    environmentType: pulumi.Input<"GcpProject">;
    /**
     * The Gcp project's organizational data
     */
    organizationalData?: pulumi.Input<inputs.security.v20220801preview.GcpOrganizationalDataMemberArgs | inputs.security.v20220801preview.GcpOrganizationalDataOrganizationArgs>;
    /**
     * The Gcp project's details
     */
    projectDetails?: pulumi.Input<inputs.security.v20220801preview.GcpProjectDetailsArgs>;
}

/**
 * The github scope connector's environment data
 */
export interface GithubScopeEnvironmentDataArgs {
    /**
     * The type of the environment data.
     * Expected value is 'GithubScope'.
     */
    environmentType: pulumi.Input<"GithubScope">;
}

/**
 * The information protection for AWS offering
 */
export interface InformationProtectionAwsOfferingArgs {
    /**
     * The native cloud connection configuration
     */
    informationProtection?: pulumi.Input<inputs.security.v20220801preview.InformationProtectionAwsOfferingInformationProtectionArgs>;
    /**
     * The type of the security offering.
     * Expected value is 'InformationProtectionAws'.
     */
    offeringType: pulumi.Input<"InformationProtectionAws">;
}

/**
 * The native cloud connection configuration
 */
export interface InformationProtectionAwsOfferingInformationProtectionArgs {
    /**
     * The cloud role ARN in AWS for this feature
     */
    cloudRoleArn?: pulumi.Input<string>;
}

