// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The properties of the create advanced schedule monthly occurrence.
 */
export interface AdvancedScheduleMonthlyOccurrenceResponse {
    /**
     * Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
     */
    day?: string;
    /**
     * Occurrence of the week within the month. Must be between 1 and 5
     */
    occurrence?: number;
}

/**
 * The properties of the create Advanced Schedule.
 */
export interface AdvancedScheduleResponse {
    /**
     * Days of the month that the job should execute on. Must be between 1 and 31.
     */
    monthDays?: number[];
    /**
     * Occurrences of days within a month.
     */
    monthlyOccurrences?: outputs.automation.v20151031.AdvancedScheduleMonthlyOccurrenceResponse[];
    /**
     * Days of the week that the job should execute on.
     */
    weekDays?: string[];
}

/**
 * The connection type property associated with the entity.
 */
export interface ConnectionTypeAssociationPropertyResponse {
    /**
     * Gets or sets the name of the connection type.
     */
    name?: string;
}

/**
 * Definition of the runbook property type.
 */
export interface ContentHashResponse {
    /**
     * Gets or sets the content hash algorithm used to hash the content.
     */
    algorithm: string;
    /**
     * Gets or sets expected hash value of the content.
     */
    value: string;
}

/**
 * Definition of the content link.
 */
export interface ContentLinkResponse {
    /**
     * Gets or sets the hash.
     */
    contentHash?: outputs.automation.v20151031.ContentHashResponse;
    /**
     * Gets or sets the uri of the runbook content.
     */
    uri?: string;
    /**
     * Gets or sets the version of the content.
     */
    version?: string;
}

/**
 * Definition of the content source.
 */
export interface ContentSourceResponse {
    /**
     * Gets or sets the hash.
     */
    hash?: outputs.automation.v20151031.ContentHashResponse;
    /**
     * Gets or sets the content source type.
     */
    type?: string;
    /**
     * Gets or sets the value of the content. This is based on the content source type.
     */
    value?: string;
    /**
     * Gets or sets the version of the content.
     */
    version?: string;
}

/**
 * The Dsc configuration property associated with the entity.
 */
export interface DscConfigurationAssociationPropertyResponse {
    /**
     * Gets or sets the name of the Dsc configuration.
     */
    name?: string;
}

/**
 * Definition of the configuration parameter type.
 */
export interface DscConfigurationParameterResponse {
    /**
     * Gets or sets the default value of parameter.
     */
    defaultValue?: string;
    /**
     * Gets or sets a Boolean value to indicate whether the parameter is mandatory or not.
     */
    isMandatory?: boolean;
    /**
     * Get or sets the position of the parameter.
     */
    position?: number;
    /**
     * Gets or sets the type of the parameter.
     */
    type?: string;
}

/**
 * Definition of the connection fields.
 */
export interface FieldDefinitionResponse {
    /**
     * Gets or sets the isEncrypted flag of the connection field definition.
     */
    isEncrypted?: boolean;
    /**
     * Gets or sets the isOptional flag of the connection field definition.
     */
    isOptional?: boolean;
    /**
     * Gets or sets the type of the connection field definition.
     */
    type: string;
}

/**
 * Automation key which is used to register a DSC Node
 */
export interface KeyResponse {
    /**
     * Automation key name.
     */
    keyName: string;
    /**
     * Automation key permissions.
     */
    permissions: string;
    /**
     * Value of the Automation Key used for registration.
     */
    value: string;
}

/**
 * Definition of the module error info type.
 */
export interface ModuleErrorInfoResponse {
    /**
     * Gets or sets the error code.
     */
    code?: string;
    /**
     * Gets or sets the error message.
     */
    message?: string;
}

/**
 * The runbook property associated with the entity.
 */
export interface RunbookAssociationPropertyResponse {
    /**
     * Gets or sets the name of the runbook.
     */
    name?: string;
}

export interface RunbookDraftResponse {
    /**
     * Gets or sets the creation time of the runbook draft.
     */
    creationTime?: string;
    /**
     * Gets or sets the draft runbook content link.
     */
    draftContentLink?: outputs.automation.v20151031.ContentLinkResponse;
    /**
     * Gets or sets whether runbook is in edit mode.
     */
    inEdit?: boolean;
    /**
     * Gets or sets the last modified time of the runbook draft.
     */
    lastModifiedTime?: string;
    /**
     * Gets or sets the runbook output types.
     */
    outputTypes?: string[];
    /**
     * Gets or sets the runbook draft parameters.
     */
    parameters?: {[key: string]: outputs.automation.v20151031.RunbookParameterResponse};
}

/**
 * Definition of the runbook parameter type.
 */
export interface RunbookParameterResponse {
    /**
     * Gets or sets the default value of parameter.
     */
    defaultValue?: string;
    /**
     * Gets or sets a Boolean value to indicate whether the parameter is mandatory or not.
     */
    isMandatory?: boolean;
    /**
     * Get or sets the position of the parameter.
     */
    position?: number;
    /**
     * Gets or sets the type of the parameter.
     */
    type?: string;
}

/**
 * The schedule property associated with the entity.
 */
export interface ScheduleAssociationPropertyResponse {
    /**
     * Gets or sets the name of the Schedule.
     */
    name?: string;
}

/**
 * The account SKU.
 */
export interface SkuResponse {
    /**
     * Gets or sets the SKU capacity.
     */
    capacity?: number;
    /**
     * Gets or sets the SKU family.
     */
    family?: string;
    /**
     * Gets or sets the SKU name of the account.
     */
    name: string;
}

