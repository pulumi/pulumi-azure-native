// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A SQL virtual machine.
 *
 * Uses Azure REST API version 2023-10-01. In version 2.x of the Azure Native provider, it used API version 2022-02-01.
 *
 * Other available API versions: 2022-02-01, 2022-07-01-preview, 2022-08-01-preview, 2023-01-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sqlvirtualmachine [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class SqlVirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing SqlVirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SqlVirtualMachine {
        return new SqlVirtualMachine(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:sqlvirtualmachine:SqlVirtualMachine';

    /**
     * Returns true if the given object is an instance of SqlVirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SqlVirtualMachine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlVirtualMachine.__pulumiType;
    }

    /**
     * Additional VM Patching solution enabled on the Virtual Machine
     */
    public /*out*/ readonly additionalVmPatch!: pulumi.Output<string>;
    /**
     * SQL best practices Assessment Settings.
     */
    public readonly assessmentSettings!: pulumi.Output<outputs.sqlvirtualmachine.AssessmentSettingsResponse | undefined>;
    /**
     * Auto backup settings for SQL Server.
     */
    public readonly autoBackupSettings!: pulumi.Output<outputs.sqlvirtualmachine.AutoBackupSettingsResponse | undefined>;
    /**
     * Auto patching settings for applying critical security updates to SQL virtual machine.
     */
    public readonly autoPatchingSettings!: pulumi.Output<outputs.sqlvirtualmachine.AutoPatchingSettingsResponse | undefined>;
    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * Enable automatic upgrade of Sql IaaS extension Agent.
     */
    public readonly enableAutomaticUpgrade!: pulumi.Output<boolean | undefined>;
    /**
     * DO NOT USE. This value will be deprecated. Azure Active Directory identity of the server.
     */
    public readonly identity!: pulumi.Output<outputs.sqlvirtualmachine.ResourceIdentityResponse | undefined>;
    /**
     * Key vault credential settings.
     */
    public readonly keyVaultCredentialSettings!: pulumi.Output<outputs.sqlvirtualmachine.KeyVaultCredentialSettingsResponse | undefined>;
    /**
     * SQL IaaS Agent least privilege mode.
     */
    public readonly leastPrivilegeMode!: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Operating System of the current SQL Virtual Machine.
     */
    public /*out*/ readonly osType!: pulumi.Output<string>;
    /**
     * Provisioning state to track the async operation status.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * SQL Server configuration management settings.
     */
    public readonly serverConfigurationsManagementSettings!: pulumi.Output<outputs.sqlvirtualmachine.ServerConfigurationsManagementSettingsResponse | undefined>;
    /**
     * SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.
     */
    public readonly sqlImageOffer!: pulumi.Output<string | undefined>;
    /**
     * SQL Server edition type.
     */
    public readonly sqlImageSku!: pulumi.Output<string | undefined>;
    /**
     * SQL Server Management type. NOTE: This parameter is not used anymore. API will automatically detect the Sql Management, refrain from using it.
     */
    public readonly sqlManagement!: pulumi.Output<string | undefined>;
    /**
     * SQL Server license type.
     */
    public readonly sqlServerLicenseType!: pulumi.Output<string | undefined>;
    /**
     * ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.
     */
    public readonly sqlVirtualMachineGroupResourceId!: pulumi.Output<string | undefined>;
    /**
     * Storage Configuration Settings.
     */
    public readonly storageConfigurationSettings!: pulumi.Output<outputs.sqlvirtualmachine.StorageConfigurationSettingsResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.sqlvirtualmachine.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Troubleshooting status
     */
    public /*out*/ readonly troubleshootingStatus!: pulumi.Output<outputs.sqlvirtualmachine.TroubleshootingStatusResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Virtual Machine Identity details used for Sql IaaS extension configurations.
     */
    public readonly virtualMachineIdentitySettings!: pulumi.Output<outputs.sqlvirtualmachine.VirtualMachineIdentityResponse | undefined>;
    /**
     * ARM Resource id of underlying virtual machine created from SQL marketplace image.
     */
    public readonly virtualMachineResourceId!: pulumi.Output<string | undefined>;
    /**
     * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
     */
    public readonly wsfcDomainCredentials!: pulumi.Output<outputs.sqlvirtualmachine.WsfcDomainCredentialsResponse | undefined>;
    /**
     * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
     */
    public readonly wsfcStaticIp!: pulumi.Output<string | undefined>;

    /**
     * Create a SqlVirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlVirtualMachineArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["assessmentSettings"] = args?.assessmentSettings;
            resourceInputs["autoBackupSettings"] = args?.autoBackupSettings;
            resourceInputs["autoPatchingSettings"] = args ? (args.autoPatchingSettings ? pulumi.output(args.autoPatchingSettings).apply(inputs.sqlvirtualmachine.autoPatchingSettingsArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["enableAutomaticUpgrade"] = (args?.enableAutomaticUpgrade) ?? false;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["keyVaultCredentialSettings"] = args?.keyVaultCredentialSettings;
            resourceInputs["leastPrivilegeMode"] = (args?.leastPrivilegeMode) ?? "NotSet";
            resourceInputs["location"] = args?.location;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["serverConfigurationsManagementSettings"] = args?.serverConfigurationsManagementSettings;
            resourceInputs["sqlImageOffer"] = args?.sqlImageOffer;
            resourceInputs["sqlImageSku"] = args?.sqlImageSku;
            resourceInputs["sqlManagement"] = args?.sqlManagement;
            resourceInputs["sqlServerLicenseType"] = args?.sqlServerLicenseType;
            resourceInputs["sqlVirtualMachineGroupResourceId"] = args?.sqlVirtualMachineGroupResourceId;
            resourceInputs["sqlVirtualMachineName"] = args?.sqlVirtualMachineName;
            resourceInputs["storageConfigurationSettings"] = args ? (args.storageConfigurationSettings ? pulumi.output(args.storageConfigurationSettings).apply(inputs.sqlvirtualmachine.storageConfigurationSettingsArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["virtualMachineIdentitySettings"] = args?.virtualMachineIdentitySettings;
            resourceInputs["virtualMachineResourceId"] = args?.virtualMachineResourceId;
            resourceInputs["wsfcDomainCredentials"] = args?.wsfcDomainCredentials;
            resourceInputs["wsfcStaticIp"] = args?.wsfcStaticIp;
            resourceInputs["additionalVmPatch"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["osType"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["troubleshootingStatus"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["additionalVmPatch"] = undefined /*out*/;
            resourceInputs["assessmentSettings"] = undefined /*out*/;
            resourceInputs["autoBackupSettings"] = undefined /*out*/;
            resourceInputs["autoPatchingSettings"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["enableAutomaticUpgrade"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["keyVaultCredentialSettings"] = undefined /*out*/;
            resourceInputs["leastPrivilegeMode"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["osType"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["serverConfigurationsManagementSettings"] = undefined /*out*/;
            resourceInputs["sqlImageOffer"] = undefined /*out*/;
            resourceInputs["sqlImageSku"] = undefined /*out*/;
            resourceInputs["sqlManagement"] = undefined /*out*/;
            resourceInputs["sqlServerLicenseType"] = undefined /*out*/;
            resourceInputs["sqlVirtualMachineGroupResourceId"] = undefined /*out*/;
            resourceInputs["storageConfigurationSettings"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["troubleshootingStatus"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["virtualMachineIdentitySettings"] = undefined /*out*/;
            resourceInputs["virtualMachineResourceId"] = undefined /*out*/;
            resourceInputs["wsfcDomainCredentials"] = undefined /*out*/;
            resourceInputs["wsfcStaticIp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:sqlvirtualmachine/v20170301preview:SqlVirtualMachine" }, { type: "azure-native:sqlvirtualmachine/v20211101preview:SqlVirtualMachine" }, { type: "azure-native:sqlvirtualmachine/v20220201:SqlVirtualMachine" }, { type: "azure-native:sqlvirtualmachine/v20220201preview:SqlVirtualMachine" }, { type: "azure-native:sqlvirtualmachine/v20220701preview:SqlVirtualMachine" }, { type: "azure-native:sqlvirtualmachine/v20220801preview:SqlVirtualMachine" }, { type: "azure-native:sqlvirtualmachine/v20230101preview:SqlVirtualMachine" }, { type: "azure-native:sqlvirtualmachine/v20231001:SqlVirtualMachine" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(SqlVirtualMachine.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SqlVirtualMachine resource.
 */
export interface SqlVirtualMachineArgs {
    /**
     * SQL best practices Assessment Settings.
     */
    assessmentSettings?: pulumi.Input<inputs.sqlvirtualmachine.AssessmentSettingsArgs>;
    /**
     * Auto backup settings for SQL Server.
     */
    autoBackupSettings?: pulumi.Input<inputs.sqlvirtualmachine.AutoBackupSettingsArgs>;
    /**
     * Auto patching settings for applying critical security updates to SQL virtual machine.
     */
    autoPatchingSettings?: pulumi.Input<inputs.sqlvirtualmachine.AutoPatchingSettingsArgs>;
    /**
     * Enable automatic upgrade of Sql IaaS extension Agent.
     */
    enableAutomaticUpgrade?: pulumi.Input<boolean>;
    /**
     * DO NOT USE. This value will be deprecated. Azure Active Directory identity of the server.
     */
    identity?: pulumi.Input<inputs.sqlvirtualmachine.ResourceIdentityArgs>;
    /**
     * Key vault credential settings.
     */
    keyVaultCredentialSettings?: pulumi.Input<inputs.sqlvirtualmachine.KeyVaultCredentialSettingsArgs>;
    /**
     * SQL IaaS Agent least privilege mode.
     */
    leastPrivilegeMode?: pulumi.Input<string | enums.sqlvirtualmachine.LeastPrivilegeMode>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * SQL Server configuration management settings.
     */
    serverConfigurationsManagementSettings?: pulumi.Input<inputs.sqlvirtualmachine.ServerConfigurationsManagementSettingsArgs>;
    /**
     * SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.
     */
    sqlImageOffer?: pulumi.Input<string>;
    /**
     * SQL Server edition type.
     */
    sqlImageSku?: pulumi.Input<string | enums.sqlvirtualmachine.SqlImageSku>;
    /**
     * SQL Server Management type. NOTE: This parameter is not used anymore. API will automatically detect the Sql Management, refrain from using it.
     */
    sqlManagement?: pulumi.Input<string | enums.sqlvirtualmachine.SqlManagementMode>;
    /**
     * SQL Server license type.
     */
    sqlServerLicenseType?: pulumi.Input<string | enums.sqlvirtualmachine.SqlServerLicenseType>;
    /**
     * ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.
     */
    sqlVirtualMachineGroupResourceId?: pulumi.Input<string>;
    /**
     * Name of the SQL virtual machine.
     */
    sqlVirtualMachineName?: pulumi.Input<string>;
    /**
     * Storage Configuration Settings.
     */
    storageConfigurationSettings?: pulumi.Input<inputs.sqlvirtualmachine.StorageConfigurationSettingsArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Virtual Machine Identity details used for Sql IaaS extension configurations.
     */
    virtualMachineIdentitySettings?: pulumi.Input<inputs.sqlvirtualmachine.VirtualMachineIdentityArgs>;
    /**
     * ARM Resource id of underlying virtual machine created from SQL marketplace image.
     */
    virtualMachineResourceId?: pulumi.Input<string>;
    /**
     * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
     */
    wsfcDomainCredentials?: pulumi.Input<inputs.sqlvirtualmachine.WsfcDomainCredentialsArgs>;
    /**
     * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
     */
    wsfcStaticIp?: pulumi.Input<string>;
}
