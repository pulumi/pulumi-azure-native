// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ADCCatalogArgs } from "./adccatalog";
export type ADCCatalog = import("./adccatalog").ADCCatalog;
export const ADCCatalog: typeof import("./adccatalog").ADCCatalog = null as any;
utilities.lazyLoad(exports, ["ADCCatalog"], () => require("./adccatalog"));

export { GetADCCatalogArgs, GetADCCatalogResult, GetADCCatalogOutputArgs } from "./getADCCatalog";
export const getADCCatalog: typeof import("./getADCCatalog").getADCCatalog = null as any;
export const getADCCatalogOutput: typeof import("./getADCCatalog").getADCCatalogOutput = null as any;
utilities.lazyLoad(exports, ["getADCCatalog","getADCCatalogOutput"], () => require("./getADCCatalog"));


// Export enums:
export * from "../../types/enums/datacatalog/v20160330";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:datacatalog/v20160330:ADCCatalog":
                return new ADCCatalog(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "datacatalog/v20160330", _module)
