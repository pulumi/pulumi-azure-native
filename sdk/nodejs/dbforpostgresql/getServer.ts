// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Gets information about an existing flexible server.
 *
 * Uses Azure REST API version 2024-08-01.
 *
 * Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview, 2025-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export function getServer(args: GetServerArgs, opts?: pulumi.InvokeOptions): Promise<GetServerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:dbforpostgresql:getServer", {
        "resourceGroupName": args.resourceGroupName,
        "serverName": args.serverName,
    }, opts);
}

export interface GetServerArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the server.
     */
    serverName: string;
}

/**
 * Flexible server.
 */
export interface GetServerResult {
    /**
     * Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
     */
    readonly administratorLogin?: string;
    /**
     * Authentication configuration properties of a flexible server.
     */
    readonly authConfig?: outputs.dbforpostgresql.AuthConfigResponse;
    /**
     * Availability zone of a flexible server.
     */
    readonly availabilityZone?: string;
    /**
     * The Azure API version of the resource.
     */
    readonly azureApiVersion: string;
    /**
     * Backup properties of a flexible server.
     */
    readonly backup?: outputs.dbforpostgresql.BackupResponse;
    /**
     * Data encryption properties of a flexible server.
     */
    readonly dataEncryption?: outputs.dbforpostgresql.DataEncryptionResponse;
    /**
     * Fully qualified domain name of a flexible server.
     */
    readonly fullyQualifiedDomainName: string;
    /**
     * High availability properties of a flexible server.
     */
    readonly highAvailability?: outputs.dbforpostgresql.HighAvailabilityResponse;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * User assigned managed identities assigned to the flexible server.
     */
    readonly identity?: outputs.dbforpostgresql.UserAssignedIdentityResponse;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Maintenance window properties of a flexible server.
     */
    readonly maintenanceWindow?: outputs.dbforpostgresql.MaintenanceWindowResponse;
    /**
     * Minor version of PostgreSQL database engine.
     */
    readonly minorVersion: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
     */
    readonly network?: outputs.dbforpostgresql.NetworkResponse;
    /**
     * List of private endpoint connections associated with the specified flexible server.
     */
    readonly privateEndpointConnections: outputs.dbforpostgresql.PrivateEndpointConnectionResponse[];
    /**
     * Read replica properties of a flexible server. Required only in case that you want to promote a server.
     */
    readonly replica?: outputs.dbforpostgresql.ReplicaResponse;
    /**
     * Maximum number of read replicas allowed for a flexible server.
     */
    readonly replicaCapacity: number;
    /**
     * Role of the server in a replication set.
     */
    readonly replicationRole?: string;
    /**
     * Compute tier and size of a flexible server.
     */
    readonly sku?: outputs.dbforpostgresql.SkuResponse;
    /**
     * Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
     */
    readonly sourceServerResourceId?: string;
    /**
     * Possible states of a flexible server.
     */
    readonly state: string;
    /**
     * Storage properties of a flexible server.
     */
    readonly storage?: outputs.dbforpostgresql.StorageResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.dbforpostgresql.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Major version of PostgreSQL database engine.
     */
    readonly version?: string;
}
/**
 * Gets information about an existing flexible server.
 *
 * Uses Azure REST API version 2024-08-01.
 *
 * Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview, 2025-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export function getServerOutput(args: GetServerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:dbforpostgresql:getServer", {
        "resourceGroupName": args.resourceGroupName,
        "serverName": args.serverName,
    }, opts);
}

export interface GetServerOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
}
