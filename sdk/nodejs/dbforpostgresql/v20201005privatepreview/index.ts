// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetServerGroupArgs, GetServerGroupResult, GetServerGroupOutputArgs } from "./getServerGroup";
export const getServerGroup: typeof import("./getServerGroup").getServerGroup = null as any;
export const getServerGroupOutput: typeof import("./getServerGroup").getServerGroupOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroup","getServerGroupOutput"], () => require("./getServerGroup"));

export { GetServerGroupFirewallRuleArgs, GetServerGroupFirewallRuleResult, GetServerGroupFirewallRuleOutputArgs } from "./getServerGroupFirewallRule";
export const getServerGroupFirewallRule: typeof import("./getServerGroupFirewallRule").getServerGroupFirewallRule = null as any;
export const getServerGroupFirewallRuleOutput: typeof import("./getServerGroupFirewallRule").getServerGroupFirewallRuleOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroupFirewallRule","getServerGroupFirewallRuleOutput"], () => require("./getServerGroupFirewallRule"));

export { ServerGroupArgs } from "./serverGroup";
export type ServerGroup = import("./serverGroup").ServerGroup;
export const ServerGroup: typeof import("./serverGroup").ServerGroup = null as any;
utilities.lazyLoad(exports, ["ServerGroup"], () => require("./serverGroup"));

export { ServerGroupFirewallRuleArgs } from "./serverGroupFirewallRule";
export type ServerGroupFirewallRule = import("./serverGroupFirewallRule").ServerGroupFirewallRule;
export const ServerGroupFirewallRule: typeof import("./serverGroupFirewallRule").ServerGroupFirewallRule = null as any;
utilities.lazyLoad(exports, ["ServerGroupFirewallRule"], () => require("./serverGroupFirewallRule"));


// Export enums:
export * from "../../types/enums/dbforpostgresql/v20201005privatepreview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:dbforpostgresql/v20201005privatepreview:ServerGroup":
                return new ServerGroup(name, <any>undefined, { urn })
            case "azure-native:dbforpostgresql/v20201005privatepreview:ServerGroupFirewallRule":
                return new ServerGroupFirewallRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "dbforpostgresql/v20201005privatepreview", _module)
