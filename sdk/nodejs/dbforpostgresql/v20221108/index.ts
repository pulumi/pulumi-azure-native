// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetServerGroupClusterArgs, GetServerGroupClusterResult, GetServerGroupClusterOutputArgs } from "./getServerGroupCluster";
export const getServerGroupCluster: typeof import("./getServerGroupCluster").getServerGroupCluster = null as any;
export const getServerGroupClusterOutput: typeof import("./getServerGroupCluster").getServerGroupClusterOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroupCluster","getServerGroupClusterOutput"], () => require("./getServerGroupCluster"));

export { GetServerGroupFirewallRuleArgs, GetServerGroupFirewallRuleResult, GetServerGroupFirewallRuleOutputArgs } from "./getServerGroupFirewallRule";
export const getServerGroupFirewallRule: typeof import("./getServerGroupFirewallRule").getServerGroupFirewallRule = null as any;
export const getServerGroupFirewallRuleOutput: typeof import("./getServerGroupFirewallRule").getServerGroupFirewallRuleOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroupFirewallRule","getServerGroupFirewallRuleOutput"], () => require("./getServerGroupFirewallRule"));

export { GetServerGroupPrivateEndpointConnectionArgs, GetServerGroupPrivateEndpointConnectionResult, GetServerGroupPrivateEndpointConnectionOutputArgs } from "./getServerGroupPrivateEndpointConnection";
export const getServerGroupPrivateEndpointConnection: typeof import("./getServerGroupPrivateEndpointConnection").getServerGroupPrivateEndpointConnection = null as any;
export const getServerGroupPrivateEndpointConnectionOutput: typeof import("./getServerGroupPrivateEndpointConnection").getServerGroupPrivateEndpointConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroupPrivateEndpointConnection","getServerGroupPrivateEndpointConnectionOutput"], () => require("./getServerGroupPrivateEndpointConnection"));

export { GetServerGroupRoleArgs, GetServerGroupRoleResult, GetServerGroupRoleOutputArgs } from "./getServerGroupRole";
export const getServerGroupRole: typeof import("./getServerGroupRole").getServerGroupRole = null as any;
export const getServerGroupRoleOutput: typeof import("./getServerGroupRole").getServerGroupRoleOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroupRole","getServerGroupRoleOutput"], () => require("./getServerGroupRole"));

export { ServerGroupClusterArgs } from "./serverGroupCluster";
export type ServerGroupCluster = import("./serverGroupCluster").ServerGroupCluster;
export const ServerGroupCluster: typeof import("./serverGroupCluster").ServerGroupCluster = null as any;
utilities.lazyLoad(exports, ["ServerGroupCluster"], () => require("./serverGroupCluster"));

export { ServerGroupFirewallRuleArgs } from "./serverGroupFirewallRule";
export type ServerGroupFirewallRule = import("./serverGroupFirewallRule").ServerGroupFirewallRule;
export const ServerGroupFirewallRule: typeof import("./serverGroupFirewallRule").ServerGroupFirewallRule = null as any;
utilities.lazyLoad(exports, ["ServerGroupFirewallRule"], () => require("./serverGroupFirewallRule"));

export { ServerGroupPrivateEndpointConnectionArgs } from "./serverGroupPrivateEndpointConnection";
export type ServerGroupPrivateEndpointConnection = import("./serverGroupPrivateEndpointConnection").ServerGroupPrivateEndpointConnection;
export const ServerGroupPrivateEndpointConnection: typeof import("./serverGroupPrivateEndpointConnection").ServerGroupPrivateEndpointConnection = null as any;
utilities.lazyLoad(exports, ["ServerGroupPrivateEndpointConnection"], () => require("./serverGroupPrivateEndpointConnection"));

export { ServerGroupRoleArgs } from "./serverGroupRole";
export type ServerGroupRole = import("./serverGroupRole").ServerGroupRole;
export const ServerGroupRole: typeof import("./serverGroupRole").ServerGroupRole = null as any;
utilities.lazyLoad(exports, ["ServerGroupRole"], () => require("./serverGroupRole"));


// Export enums:
export * from "../../types/enums/dbforpostgresql/v20221108";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:dbforpostgresql/v20221108:ServerGroupCluster":
                return new ServerGroupCluster(name, <any>undefined, { urn })
            case "azure-native:dbforpostgresql/v20221108:ServerGroupFirewallRule":
                return new ServerGroupFirewallRule(name, <any>undefined, { urn })
            case "azure-native:dbforpostgresql/v20221108:ServerGroupPrivateEndpointConnection":
                return new ServerGroupPrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-native:dbforpostgresql/v20221108:ServerGroupRole":
                return new ServerGroupRole(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "dbforpostgresql/v20221108", _module)
