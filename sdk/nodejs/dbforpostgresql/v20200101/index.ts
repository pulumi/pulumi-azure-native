// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetSingleServerServerKeyArgs, GetSingleServerServerKeyResult, GetSingleServerServerKeyOutputArgs } from "./getSingleServerServerKey";
export const getSingleServerServerKey: typeof import("./getSingleServerServerKey").getSingleServerServerKey = null as any;
export const getSingleServerServerKeyOutput: typeof import("./getSingleServerServerKey").getSingleServerServerKeyOutput = null as any;
utilities.lazyLoad(exports, ["getSingleServerServerKey","getSingleServerServerKeyOutput"], () => require("./getSingleServerServerKey"));

export { SingleServerServerKeyArgs } from "./singleServerServerKey";
export type SingleServerServerKey = import("./singleServerServerKey").SingleServerServerKey;
export const SingleServerServerKey: typeof import("./singleServerServerKey").SingleServerServerKey = null as any;
utilities.lazyLoad(exports, ["SingleServerServerKey"], () => require("./singleServerServerKey"));


// Export enums:
export * from "../../types/enums/dbforpostgresql/v20200101";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:dbforpostgresql/v20200101:SingleServerServerKey":
                return new SingleServerServerKey(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "dbforpostgresql/v20200101", _module)
