// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. LongTerm environments do not have set data retention limits.
 */
export class LongTermEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing LongTermEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LongTermEnvironment {
        return new LongTermEnvironment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:timeseriesinsights/v20180815preview:LongTermEnvironment';

    /**
     * Returns true if the given object is an instance of LongTermEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LongTermEnvironment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LongTermEnvironment.__pulumiType;
    }

    /**
     * The time the resource was created.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
     */
    public /*out*/ readonly dataAccessFqdn!: pulumi.Output<string>;
    /**
     * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
     */
    public /*out*/ readonly dataAccessId!: pulumi.Output<string>;
    /**
     * The kind of the environment.
     * Expected value is 'LongTerm'.
     */
    public readonly kind!: pulumi.Output<"LongTerm">;
    /**
     * Resource location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Provisioning state of the resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     */
    public readonly sku!: pulumi.Output<outputs.timeseriesinsights.v20180815preview.SkuResponse>;
    /**
     * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
     */
    public /*out*/ readonly status!: pulumi.Output<outputs.timeseriesinsights.v20180815preview.EnvironmentStatusResponse>;
    /**
     * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
     */
    public readonly storageConfiguration!: pulumi.Output<outputs.timeseriesinsights.v20180815preview.LongTermStorageConfigurationOutputResponse>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The list of event properties which will be used to define the environment's time series id.
     */
    public readonly timeSeriesIdProperties!: pulumi.Output<outputs.timeseriesinsights.v20180815preview.TimeSeriesIdPropertyResponse[]>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
     */
    public readonly warmStoreConfiguration!: pulumi.Output<outputs.timeseriesinsights.v20180815preview.WarmStoreConfigurationPropertiesResponse | undefined>;

    /**
     * Create a LongTermEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LongTermEnvironmentArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            if ((!args || args.storageConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageConfiguration'");
            }
            if ((!args || args.timeSeriesIdProperties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeSeriesIdProperties'");
            }
            inputs["environmentName"] = args ? args.environmentName : undefined;
            inputs["kind"] = "LongTerm";
            inputs["location"] = args ? args.location : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["storageConfiguration"] = args ? args.storageConfiguration : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["timeSeriesIdProperties"] = args ? args.timeSeriesIdProperties : undefined;
            inputs["warmStoreConfiguration"] = args ? args.warmStoreConfiguration : undefined;
            inputs["creationTime"] = undefined /*out*/;
            inputs["dataAccessFqdn"] = undefined /*out*/;
            inputs["dataAccessId"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["creationTime"] = undefined /*out*/;
            inputs["dataAccessFqdn"] = undefined /*out*/;
            inputs["dataAccessId"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["storageConfiguration"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["timeSeriesIdProperties"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["warmStoreConfiguration"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:timeseriesinsights/v20180815preview:LongTermEnvironment" }, { type: "azure-native:timeseriesinsights:LongTermEnvironment" }, { type: "azure-nextgen:timeseriesinsights:LongTermEnvironment" }, { type: "azure-native:timeseriesinsights/v20170228preview:LongTermEnvironment" }, { type: "azure-nextgen:timeseriesinsights/v20170228preview:LongTermEnvironment" }, { type: "azure-native:timeseriesinsights/v20171115:LongTermEnvironment" }, { type: "azure-nextgen:timeseriesinsights/v20171115:LongTermEnvironment" }, { type: "azure-native:timeseriesinsights/v20200515:LongTermEnvironment" }, { type: "azure-nextgen:timeseriesinsights/v20200515:LongTermEnvironment" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(LongTermEnvironment.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a LongTermEnvironment resource.
 */
export interface LongTermEnvironmentArgs {
    /**
     * Name of the environment
     */
    environmentName?: pulumi.Input<string>;
    /**
     * The kind of the environment.
     * Expected value is 'LongTerm'.
     */
    kind: pulumi.Input<"LongTerm">;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of an Azure Resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     */
    sku: pulumi.Input<inputs.timeseriesinsights.v20180815preview.SkuArgs>;
    /**
     * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
     */
    storageConfiguration: pulumi.Input<inputs.timeseriesinsights.v20180815preview.LongTermStorageConfigurationInputArgs>;
    /**
     * Key-value pairs of additional properties for the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The list of event properties which will be used to define the environment's time series id.
     */
    timeSeriesIdProperties: pulumi.Input<pulumi.Input<inputs.timeseriesinsights.v20180815preview.TimeSeriesIdPropertyArgs>[]>;
    /**
     * The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
     */
    warmStoreConfiguration?: pulumi.Input<inputs.timeseriesinsights.v20180815preview.WarmStoreConfigurationPropertiesArgs>;
}
