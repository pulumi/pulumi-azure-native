// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetEventHubEventSourceArgs, GetEventHubEventSourceResult, GetEventHubEventSourceOutputArgs } from "./getEventHubEventSource";
export const getEventHubEventSource: typeof import("./getEventHubEventSource").getEventHubEventSource = null as any;
export const getEventHubEventSourceOutput: typeof import("./getEventHubEventSource").getEventHubEventSourceOutput = null as any;
utilities.lazyLoad(exports, ["getEventHubEventSource","getEventHubEventSourceOutput"], () => require("./getEventHubEventSource"));

export { GetIoTHubEventSourceArgs, GetIoTHubEventSourceResult, GetIoTHubEventSourceOutputArgs } from "./getIoTHubEventSource";
export const getIoTHubEventSource: typeof import("./getIoTHubEventSource").getIoTHubEventSource = null as any;
export const getIoTHubEventSourceOutput: typeof import("./getIoTHubEventSource").getIoTHubEventSourceOutput = null as any;
utilities.lazyLoad(exports, ["getIoTHubEventSource","getIoTHubEventSourceOutput"], () => require("./getIoTHubEventSource"));

export { GetLongTermEnvironmentArgs, GetLongTermEnvironmentResult, GetLongTermEnvironmentOutputArgs } from "./getLongTermEnvironment";
export const getLongTermEnvironment: typeof import("./getLongTermEnvironment").getLongTermEnvironment = null as any;
export const getLongTermEnvironmentOutput: typeof import("./getLongTermEnvironment").getLongTermEnvironmentOutput = null as any;
utilities.lazyLoad(exports, ["getLongTermEnvironment","getLongTermEnvironmentOutput"], () => require("./getLongTermEnvironment"));

export { GetStandardEnvironmentArgs, GetStandardEnvironmentResult, GetStandardEnvironmentOutputArgs } from "./getStandardEnvironment";
export const getStandardEnvironment: typeof import("./getStandardEnvironment").getStandardEnvironment = null as any;
export const getStandardEnvironmentOutput: typeof import("./getStandardEnvironment").getStandardEnvironmentOutput = null as any;
utilities.lazyLoad(exports, ["getStandardEnvironment","getStandardEnvironmentOutput"], () => require("./getStandardEnvironment"));

export { LongTermEnvironmentArgs } from "./longTermEnvironment";
export type LongTermEnvironment = import("./longTermEnvironment").LongTermEnvironment;
export const LongTermEnvironment: typeof import("./longTermEnvironment").LongTermEnvironment = null as any;
utilities.lazyLoad(exports, ["LongTermEnvironment"], () => require("./longTermEnvironment"));

export { StandardEnvironmentArgs } from "./standardEnvironment";
export type StandardEnvironment = import("./standardEnvironment").StandardEnvironment;
export const StandardEnvironment: typeof import("./standardEnvironment").StandardEnvironment = null as any;
utilities.lazyLoad(exports, ["StandardEnvironment"], () => require("./standardEnvironment"));


// Export enums:
export * from "../../types/enums/timeseriesinsights/v20180815preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:timeseriesinsights/v20180815preview:LongTermEnvironment":
                return new LongTermEnvironment(name, <any>undefined, { urn })
            case "azure-native:timeseriesinsights/v20180815preview:StandardEnvironment":
                return new StandardEnvironment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "timeseriesinsights/v20180815preview", _module)
