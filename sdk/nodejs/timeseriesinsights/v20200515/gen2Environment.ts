// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. Gen2 environments do not have set data retention limits.
 */
export class Gen2Environment extends pulumi.CustomResource {
    /**
     * Get an existing Gen2Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Gen2Environment {
        return new Gen2Environment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:timeseriesinsights/v20200515:Gen2Environment';

    /**
     * Returns true if the given object is an instance of Gen2Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Gen2Environment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Gen2Environment.__pulumiType;
    }

    /**
     * The time the resource was created.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
     */
    public /*out*/ readonly dataAccessFqdn!: pulumi.Output<string>;
    /**
     * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
     */
    public /*out*/ readonly dataAccessId!: pulumi.Output<string>;
    /**
     * The kind of the environment.
     * Expected value is 'Gen2'.
     */
    public readonly kind!: pulumi.Output<"Gen2">;
    /**
     * Resource location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Provisioning state of the resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     */
    public readonly sku!: pulumi.Output<outputs.timeseriesinsights.v20200515.SkuResponse>;
    /**
     * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
     */
    public /*out*/ readonly status!: pulumi.Output<outputs.timeseriesinsights.v20200515.EnvironmentStatusResponse>;
    /**
     * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
     */
    public readonly storageConfiguration!: pulumi.Output<outputs.timeseriesinsights.v20200515.Gen2StorageConfigurationOutputResponse>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The list of event properties which will be used to define the environment's time series id.
     */
    public readonly timeSeriesIdProperties!: pulumi.Output<outputs.timeseriesinsights.v20200515.TimeSeriesIdPropertyResponse[]>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
     */
    public readonly warmStoreConfiguration!: pulumi.Output<outputs.timeseriesinsights.v20200515.WarmStoreConfigurationPropertiesResponse | undefined>;

    /**
     * Create a Gen2Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Gen2EnvironmentArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            if ((!args || args.storageConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageConfiguration'");
            }
            if ((!args || args.timeSeriesIdProperties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeSeriesIdProperties'");
            }
            inputs["environmentName"] = args ? args.environmentName : undefined;
            inputs["kind"] = "Gen2";
            inputs["location"] = args ? args.location : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["storageConfiguration"] = args ? args.storageConfiguration : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["timeSeriesIdProperties"] = args ? args.timeSeriesIdProperties : undefined;
            inputs["warmStoreConfiguration"] = args ? args.warmStoreConfiguration : undefined;
            inputs["creationTime"] = undefined /*out*/;
            inputs["dataAccessFqdn"] = undefined /*out*/;
            inputs["dataAccessId"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["creationTime"] = undefined /*out*/;
            inputs["dataAccessFqdn"] = undefined /*out*/;
            inputs["dataAccessId"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["storageConfiguration"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["timeSeriesIdProperties"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["warmStoreConfiguration"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:timeseriesinsights/v20200515:Gen2Environment" }, { type: "azure-native:timeseriesinsights:Gen2Environment" }, { type: "azure-nextgen:timeseriesinsights:Gen2Environment" }, { type: "azure-native:timeseriesinsights/v20170228preview:Gen2Environment" }, { type: "azure-nextgen:timeseriesinsights/v20170228preview:Gen2Environment" }, { type: "azure-native:timeseriesinsights/v20171115:Gen2Environment" }, { type: "azure-nextgen:timeseriesinsights/v20171115:Gen2Environment" }, { type: "azure-native:timeseriesinsights/v20180815preview:Gen2Environment" }, { type: "azure-nextgen:timeseriesinsights/v20180815preview:Gen2Environment" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Gen2Environment.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Gen2Environment resource.
 */
export interface Gen2EnvironmentArgs {
    /**
     * Name of the environment
     */
    environmentName?: pulumi.Input<string>;
    /**
     * The kind of the environment.
     * Expected value is 'Gen2'.
     */
    kind: pulumi.Input<"Gen2">;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of an Azure Resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     */
    sku: pulumi.Input<inputs.timeseriesinsights.v20200515.SkuArgs>;
    /**
     * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
     */
    storageConfiguration: pulumi.Input<inputs.timeseriesinsights.v20200515.Gen2StorageConfigurationInputArgs>;
    /**
     * Key-value pairs of additional properties for the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The list of event properties which will be used to define the environment's time series id.
     */
    timeSeriesIdProperties: pulumi.Input<pulumi.Input<inputs.timeseriesinsights.v20200515.TimeSeriesIdPropertyArgs>[]>;
    /**
     * The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
     */
    warmStoreConfiguration?: pulumi.Input<inputs.timeseriesinsights.v20200515.WarmStoreConfigurationPropertiesArgs>;
}
