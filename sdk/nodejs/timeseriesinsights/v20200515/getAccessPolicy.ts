// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getAccessPolicy(args: GetAccessPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPolicyResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:timeseriesinsights/v20200515:getAccessPolicy", {
        "accessPolicyName": args.accessPolicyName,
        "environmentName": args.environmentName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetAccessPolicyArgs {
    /**
     * The name of the Time Series Insights access policy associated with the specified environment.
     */
    readonly accessPolicyName: string;
    /**
     * The name of the Time Series Insights environment associated with the specified resource group.
     */
    readonly environmentName: string;
    /**
     * Name of an Azure Resource group.
     */
    readonly resourceGroupName: string;
}

/**
 * An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.
 */
export interface GetAccessPolicyResult {
    /**
     * An description of the access policy.
     */
    readonly description?: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * The objectId of the principal in Azure Active Directory.
     */
    readonly principalObjectId?: string;
    /**
     * The list of roles the principal is assigned on the environment.
     */
    readonly roles?: string[];
    /**
     * Resource type
     */
    readonly type: string;
}
