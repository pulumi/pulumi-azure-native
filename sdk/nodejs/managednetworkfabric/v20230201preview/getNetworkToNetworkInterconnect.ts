// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Implements NetworkToNetworkInterconnects GET method.
 */
export function getNetworkToNetworkInterconnect(args: GetNetworkToNetworkInterconnectArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkToNetworkInterconnectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:managednetworkfabric/v20230201preview:getNetworkToNetworkInterconnect", {
        "networkFabricName": args.networkFabricName,
        "networkToNetworkInterconnectName": args.networkToNetworkInterconnectName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetNetworkToNetworkInterconnectArgs {
    /**
     * Name of the NetworkFabric.
     */
    networkFabricName: string;
    /**
     * Name of the NetworkToNetworkInterconnect
     */
    networkToNetworkInterconnectName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * The NetworkToNetworkInterconnect resource definition.
 */
export interface GetNetworkToNetworkInterconnectResult {
    /**
     * Gets the administrativeState of the resource. Example -Enabled/Disabled
     */
    readonly administrativeState: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Configuration to use NNI for Infrastructure Management. Example: True/False.
     */
    readonly isManagementType: string;
    /**
     * Common properties for Layer2Configuration.
     */
    readonly layer2Configuration?: outputs.managednetworkfabric.v20230201preview.NetworkToNetworkInterconnectPropertiesResponseLayer2Configuration;
    /**
     * Common properties for Layer3Configuration.
     */
    readonly layer3Configuration?: outputs.managednetworkfabric.v20230201preview.Layer3ConfigurationResponse;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Gets the provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.managednetworkfabric.v20230201preview.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Based on this parameter the layer2/layer3 is made as mandatory. Example: True/False
     */
    readonly useOptionB: string;
}
/**
 * Implements NetworkToNetworkInterconnects GET method.
 */
export function getNetworkToNetworkInterconnectOutput(args: GetNetworkToNetworkInterconnectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkToNetworkInterconnectResult> {
    return pulumi.output(args).apply((a: any) => getNetworkToNetworkInterconnect(a, opts))
}

export interface GetNetworkToNetworkInterconnectOutputArgs {
    /**
     * Name of the NetworkFabric.
     */
    networkFabricName: pulumi.Input<string>;
    /**
     * Name of the NetworkToNetworkInterconnect
     */
    networkToNetworkInterconnectName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
