// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get Network Fabric resource details.
 */
export function getNetworkFabric(args: GetNetworkFabricArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkFabricResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:managednetworkfabric/v20230615:getNetworkFabric", {
        "networkFabricName": args.networkFabricName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetNetworkFabricArgs {
    /**
     * Name of the Network Fabric.
     */
    networkFabricName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * The Network Fabric resource definition.
 */
export interface GetNetworkFabricResult {
    /**
     * Administrative state of the resource.
     */
    readonly administrativeState: string;
    /**
     * Switch configuration description.
     */
    readonly annotation?: string;
    /**
     * Configuration state of the resource.
     */
    readonly configurationState: string;
    /**
     * ASN of CE devices for CE/PE connectivity.
     */
    readonly fabricASN: number;
    /**
     * The version of Network Fabric.
     */
    readonly fabricVersion: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * IPv4Prefix for Management Network. Example: 10.1.0.0/19.
     */
    readonly ipv4Prefix: string;
    /**
     * IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59
     */
    readonly ipv6Prefix?: string;
    /**
     * List of L2 Isolation Domain resource IDs under the Network Fabric.
     */
    readonly l2IsolationDomains: string[];
    /**
     * List of L3 Isolation Domain resource IDs under the Network Fabric.
     */
    readonly l3IsolationDomains: string[];
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Configuration to be used to setup the management network.
     */
    readonly managementNetworkConfiguration: outputs.managednetworkfabric.v20230615.ManagementNetworkConfigurationPropertiesResponse;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Azure resource ID for the NetworkFabricController the NetworkFabric belongs.
     */
    readonly networkFabricControllerId: string;
    /**
     * Supported Network Fabric SKU.Example: Compute / Aggregate racks. Once the user chooses a particular SKU, only supported racks can be added to the Network Fabric. The SKU determines whether it is a single / multi rack Network Fabric.
     */
    readonly networkFabricSku: string;
    /**
     * Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of NFC provisioning.
     */
    readonly provisioningState: string;
    /**
     * Number of compute racks associated to Network Fabric.
     */
    readonly rackCount?: number;
    /**
     * List of NetworkRack resource IDs under the Network Fabric. The number of racks allowed depends on the Network Fabric SKU.
     */
    readonly racks: string[];
    /**
     * Array of router IDs.
     */
    readonly routerIds: string[];
    /**
     * Number of servers.Possible values are from 1-16.
     */
    readonly serverCountPerRack: number;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.managednetworkfabric.v20230615.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Network and credentials configuration currently applied to terminal server.
     */
    readonly terminalServerConfiguration: outputs.managednetworkfabric.v20230615.TerminalServerConfigurationResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get Network Fabric resource details.
 */
export function getNetworkFabricOutput(args: GetNetworkFabricOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkFabricResult> {
    return pulumi.output(args).apply((a: any) => getNetworkFabric(a, opts))
}

export interface GetNetworkFabricOutputArgs {
    /**
     * Name of the Network Fabric.
     */
    networkFabricName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
