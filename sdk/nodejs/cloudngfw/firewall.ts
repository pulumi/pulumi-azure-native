// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * PaloAltoNetworks Firewall
 *
 * Uses Azure REST API version 2025-05-23. In version 2.x of the Azure Native provider, it used API version 2023-09-01.
 *
 * Other available API versions: 2023-09-01, 2023-10-10-preview, 2024-01-19-preview, 2024-02-07-preview, 2025-02-06-preview, 2025-07-07-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cloudngfw [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Firewall extends pulumi.CustomResource {
    /**
     * Get an existing Firewall resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Firewall {
        return new Firewall(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:cloudngfw:Firewall';

    /**
     * Returns true if the given object is an instance of Firewall.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Firewall {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Firewall.__pulumiType;
    }

    /**
     * Associated Rulestack
     */
    declare public readonly associatedRulestack: pulumi.Output<outputs.cloudngfw.RulestackDetailsResponse | undefined>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * DNS settings for Firewall
     */
    declare public readonly dnsSettings: pulumi.Output<outputs.cloudngfw.DNSSettingsResponse>;
    /**
     * Frontend settings for Firewall
     */
    declare public readonly frontEndSettings: pulumi.Output<outputs.cloudngfw.FrontendSettingResponse[] | undefined>;
    /**
     * The managed service identities assigned to this resource.
     */
    declare public readonly identity: pulumi.Output<outputs.cloudngfw.AzureResourceManagerManagedIdentityPropertiesResponse | undefined>;
    /**
     * Panorama Managed: Default is False. Default will be CloudSec managed
     */
    declare public readonly isPanoramaManaged: pulumi.Output<string | undefined>;
    /**
     * Strata Cloud Managed: Default is False. Default will be CloudSec managed
     */
    declare public readonly isStrataCloudManaged: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Marketplace details
     */
    declare public readonly marketplaceDetails: pulumi.Output<outputs.cloudngfw.MarketplaceDetailsResponse>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Network settings
     */
    declare public readonly networkProfile: pulumi.Output<outputs.cloudngfw.NetworkProfileResponse>;
    /**
     * panEtag info
     */
    declare public readonly panEtag: pulumi.Output<string | undefined>;
    /**
     * Panorama Configuration
     */
    declare public readonly panoramaConfig: pulumi.Output<outputs.cloudngfw.PanoramaConfigResponse | undefined>;
    /**
     * Billing plan information.
     */
    declare public readonly planData: pulumi.Output<outputs.cloudngfw.PlanDataResponse>;
    /**
     * Provisioning state of the resource.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * Strata Cloud Manager Configuration, only applicable if Strata Cloud Manager is selected.
     */
    declare public readonly strataCloudManagerConfig: pulumi.Output<outputs.cloudngfw.StrataCloudManagerConfigResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.cloudngfw.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a Firewall resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.dnsSettings === undefined && !opts.urn) {
                throw new Error("Missing required property 'dnsSettings'");
            }
            if (args?.marketplaceDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'marketplaceDetails'");
            }
            if (args?.networkProfile === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkProfile'");
            }
            if (args?.planData === undefined && !opts.urn) {
                throw new Error("Missing required property 'planData'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["associatedRulestack"] = args?.associatedRulestack;
            resourceInputs["dnsSettings"] = args?.dnsSettings;
            resourceInputs["firewallName"] = args?.firewallName;
            resourceInputs["frontEndSettings"] = args?.frontEndSettings;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["isPanoramaManaged"] = args?.isPanoramaManaged;
            resourceInputs["isStrataCloudManaged"] = args?.isStrataCloudManaged;
            resourceInputs["location"] = args?.location;
            resourceInputs["marketplaceDetails"] = args?.marketplaceDetails;
            resourceInputs["networkProfile"] = args?.networkProfile;
            resourceInputs["panEtag"] = args?.panEtag;
            resourceInputs["panoramaConfig"] = args?.panoramaConfig;
            resourceInputs["planData"] = args?.planData;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["strataCloudManagerConfig"] = args?.strataCloudManagerConfig;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["associatedRulestack"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["dnsSettings"] = undefined /*out*/;
            resourceInputs["frontEndSettings"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["isPanoramaManaged"] = undefined /*out*/;
            resourceInputs["isStrataCloudManaged"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["marketplaceDetails"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkProfile"] = undefined /*out*/;
            resourceInputs["panEtag"] = undefined /*out*/;
            resourceInputs["panoramaConfig"] = undefined /*out*/;
            resourceInputs["planData"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["strataCloudManagerConfig"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:cloudngfw/v20220829:Firewall" }, { type: "azure-native:cloudngfw/v20220829preview:Firewall" }, { type: "azure-native:cloudngfw/v20230901:Firewall" }, { type: "azure-native:cloudngfw/v20230901preview:Firewall" }, { type: "azure-native:cloudngfw/v20231010preview:Firewall" }, { type: "azure-native:cloudngfw/v20240119preview:Firewall" }, { type: "azure-native:cloudngfw/v20240207preview:Firewall" }, { type: "azure-native:cloudngfw/v20250206preview:Firewall" }, { type: "azure-native:cloudngfw/v20250523:Firewall" }, { type: "azure-native:cloudngfw/v20250707preview:Firewall" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Firewall.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Firewall resource.
 */
export interface FirewallArgs {
    /**
     * Associated Rulestack
     */
    associatedRulestack?: pulumi.Input<inputs.cloudngfw.RulestackDetailsArgs>;
    /**
     * DNS settings for Firewall
     */
    dnsSettings: pulumi.Input<inputs.cloudngfw.DNSSettingsArgs>;
    /**
     * Firewall resource name
     */
    firewallName?: pulumi.Input<string>;
    /**
     * Frontend settings for Firewall
     */
    frontEndSettings?: pulumi.Input<pulumi.Input<inputs.cloudngfw.FrontendSettingArgs>[]>;
    /**
     * The managed service identities assigned to this resource.
     */
    identity?: pulumi.Input<inputs.cloudngfw.AzureResourceManagerManagedIdentityPropertiesArgs>;
    /**
     * Panorama Managed: Default is False. Default will be CloudSec managed
     */
    isPanoramaManaged?: pulumi.Input<string | enums.cloudngfw.BooleanEnum>;
    /**
     * Strata Cloud Managed: Default is False. Default will be CloudSec managed
     */
    isStrataCloudManaged?: pulumi.Input<string | enums.cloudngfw.BooleanEnum>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Marketplace details
     */
    marketplaceDetails: pulumi.Input<inputs.cloudngfw.MarketplaceDetailsArgs>;
    /**
     * Network settings
     */
    networkProfile: pulumi.Input<inputs.cloudngfw.NetworkProfileArgs>;
    /**
     * panEtag info
     */
    panEtag?: pulumi.Input<string>;
    /**
     * Panorama Configuration
     */
    panoramaConfig?: pulumi.Input<inputs.cloudngfw.PanoramaConfigArgs>;
    /**
     * Billing plan information.
     */
    planData: pulumi.Input<inputs.cloudngfw.PlanDataArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Strata Cloud Manager Configuration, only applicable if Strata Cloud Manager is selected.
     */
    strataCloudManagerConfig?: pulumi.Input<inputs.cloudngfw.StrataCloudManagerConfigArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
