// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * LocalRulestack rule list
 *
 * Uses Azure REST API version 2025-02-06-preview. In version 2.x of the Azure Native provider, it used API version 2023-09-01.
 *
 * Other available API versions: 2023-09-01, 2023-10-10-preview, 2024-01-19-preview, 2024-02-07-preview, 2025-05-23, 2025-07-07-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cloudngfw [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class LocalRule extends pulumi.CustomResource {
    /**
     * Get an existing LocalRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocalRule {
        return new LocalRule(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:cloudngfw:LocalRule';

    /**
     * Returns true if the given object is an instance of LocalRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocalRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocalRule.__pulumiType;
    }

    /**
     * rule action
     */
    declare public readonly actionType: pulumi.Output<string | undefined>;
    /**
     * array of rule applications
     */
    declare public readonly applications: pulumi.Output<string[] | undefined>;
    /**
     * rule comment
     */
    declare public readonly auditComment: pulumi.Output<string | undefined>;
    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * rule category
     */
    declare public readonly category: pulumi.Output<outputs.cloudngfw.CategoryResponse | undefined>;
    /**
     * enable or disable decryption
     */
    declare public readonly decryptionRuleType: pulumi.Output<string | undefined>;
    /**
     * rule description
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * destination address
     */
    declare public readonly destination: pulumi.Output<outputs.cloudngfw.DestinationAddrResponse | undefined>;
    /**
     * enable or disable logging
     */
    declare public readonly enableLogging: pulumi.Output<string | undefined>;
    /**
     * etag info
     */
    declare public /*out*/ readonly etag: pulumi.Output<string | undefined>;
    /**
     * inbound Inspection Certificate
     */
    declare public readonly inboundInspectionCertificate: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * cidr should not be 'any'
     */
    declare public readonly negateDestination: pulumi.Output<string | undefined>;
    /**
     * cidr should not be 'any'
     */
    declare public readonly negateSource: pulumi.Output<string | undefined>;
    declare public readonly priority: pulumi.Output<number>;
    /**
     * any, application-default, TCP:number, UDP:number
     */
    declare public readonly protocol: pulumi.Output<string | undefined>;
    /**
     * prot port list
     */
    declare public readonly protocolPortList: pulumi.Output<string[] | undefined>;
    /**
     * Provisioning state of the resource.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * rule name
     */
    declare public readonly ruleName: pulumi.Output<string>;
    /**
     * state of this rule
     */
    declare public readonly ruleState: pulumi.Output<string | undefined>;
    /**
     * source address
     */
    declare public readonly source: pulumi.Output<outputs.cloudngfw.SourceAddrResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.cloudngfw.SystemDataResponse>;
    /**
     * tag for rule
     */
    declare public readonly tags: pulumi.Output<outputs.cloudngfw.TagInfoResponse[] | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a LocalRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocalRuleArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.localRulestackName === undefined && !opts.urn) {
                throw new Error("Missing required property 'localRulestackName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.ruleName === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["actionType"] = args?.actionType;
            resourceInputs["applications"] = args?.applications;
            resourceInputs["auditComment"] = args?.auditComment;
            resourceInputs["category"] = args?.category;
            resourceInputs["decryptionRuleType"] = args?.decryptionRuleType;
            resourceInputs["description"] = args?.description;
            resourceInputs["destination"] = args?.destination;
            resourceInputs["enableLogging"] = args?.enableLogging;
            resourceInputs["inboundInspectionCertificate"] = args?.inboundInspectionCertificate;
            resourceInputs["localRulestackName"] = args?.localRulestackName;
            resourceInputs["negateDestination"] = args?.negateDestination;
            resourceInputs["negateSource"] = args?.negateSource;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["protocol"] = (args?.protocol) ?? "application-default";
            resourceInputs["protocolPortList"] = args?.protocolPortList;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["ruleName"] = args?.ruleName;
            resourceInputs["ruleState"] = args?.ruleState;
            resourceInputs["source"] = args?.source;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["actionType"] = undefined /*out*/;
            resourceInputs["applications"] = undefined /*out*/;
            resourceInputs["auditComment"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["category"] = undefined /*out*/;
            resourceInputs["decryptionRuleType"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["destination"] = undefined /*out*/;
            resourceInputs["enableLogging"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["inboundInspectionCertificate"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["negateDestination"] = undefined /*out*/;
            resourceInputs["negateSource"] = undefined /*out*/;
            resourceInputs["priority"] = undefined /*out*/;
            resourceInputs["protocol"] = undefined /*out*/;
            resourceInputs["protocolPortList"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["ruleName"] = undefined /*out*/;
            resourceInputs["ruleState"] = undefined /*out*/;
            resourceInputs["source"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:cloudngfw/v20220829:LocalRule" }, { type: "azure-native:cloudngfw/v20220829preview:LocalRule" }, { type: "azure-native:cloudngfw/v20230901:LocalRule" }, { type: "azure-native:cloudngfw/v20230901preview:LocalRule" }, { type: "azure-native:cloudngfw/v20231010preview:LocalRule" }, { type: "azure-native:cloudngfw/v20240119preview:LocalRule" }, { type: "azure-native:cloudngfw/v20240207preview:LocalRule" }, { type: "azure-native:cloudngfw/v20250206preview:LocalRule" }, { type: "azure-native:cloudngfw/v20250523:LocalRule" }, { type: "azure-native:cloudngfw/v20250707preview:LocalRule" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(LocalRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LocalRule resource.
 */
export interface LocalRuleArgs {
    /**
     * rule action
     */
    actionType?: pulumi.Input<string | enums.cloudngfw.ActionEnum>;
    /**
     * array of rule applications
     */
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * rule comment
     */
    auditComment?: pulumi.Input<string>;
    /**
     * rule category
     */
    category?: pulumi.Input<inputs.cloudngfw.CategoryArgs>;
    /**
     * enable or disable decryption
     */
    decryptionRuleType?: pulumi.Input<string | enums.cloudngfw.DecryptionRuleTypeEnum>;
    /**
     * rule description
     */
    description?: pulumi.Input<string>;
    /**
     * destination address
     */
    destination?: pulumi.Input<inputs.cloudngfw.DestinationAddrArgs>;
    /**
     * enable or disable logging
     */
    enableLogging?: pulumi.Input<string | enums.cloudngfw.StateEnum>;
    /**
     * inbound Inspection Certificate
     */
    inboundInspectionCertificate?: pulumi.Input<string>;
    /**
     * LocalRulestack resource name
     */
    localRulestackName: pulumi.Input<string>;
    /**
     * cidr should not be 'any'
     */
    negateDestination?: pulumi.Input<string | enums.cloudngfw.BooleanEnum>;
    /**
     * cidr should not be 'any'
     */
    negateSource?: pulumi.Input<string | enums.cloudngfw.BooleanEnum>;
    /**
     * Local Rule priority
     */
    priority?: pulumi.Input<string>;
    /**
     * any, application-default, TCP:number, UDP:number
     */
    protocol?: pulumi.Input<string>;
    /**
     * prot port list
     */
    protocolPortList?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * rule name
     */
    ruleName: pulumi.Input<string>;
    /**
     * state of this rule
     */
    ruleState?: pulumi.Input<string | enums.cloudngfw.StateEnum>;
    /**
     * source address
     */
    source?: pulumi.Input<inputs.cloudngfw.SourceAddrArgs>;
    /**
     * tag for rule
     */
    tags?: pulumi.Input<pulumi.Input<inputs.cloudngfw.TagInfoArgs>[]>;
}
