// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * A business process under application.
 */
export class BusinessProcess extends pulumi.CustomResource {
    /**
     * Get an existing BusinessProcess resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BusinessProcess {
        return new BusinessProcess(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:integrationspaces/v20231114preview:BusinessProcess';

    /**
     * Returns true if the given object is an instance of BusinessProcess.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BusinessProcess {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BusinessProcess.__pulumiType;
    }

    /**
     * The business process mapping.
     */
    public readonly businessProcessMapping!: pulumi.Output<{[key: string]: outputs.integrationspaces.v20231114preview.BusinessProcessMappingItemResponse} | undefined>;
    /**
     * The business process stages.
     */
    public readonly businessProcessStages!: pulumi.Output<{[key: string]: outputs.integrationspaces.v20231114preview.BusinessProcessStageResponse} | undefined>;
    /**
     * The description of the business process.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The business process identifier.
     */
    public readonly identifier!: pulumi.Output<outputs.integrationspaces.v20231114preview.BusinessProcessIdentifierResponse | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The status of the last operation.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.integrationspaces.v20231114preview.SystemDataResponse>;
    /**
     * The table name of the business process.
     */
    public readonly tableName!: pulumi.Output<string | undefined>;
    /**
     * The tracking data store reference name.
     */
    public readonly trackingDataStoreReferenceName!: pulumi.Output<string | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The version of the business process.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a BusinessProcess resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BusinessProcessArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.applicationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.spaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spaceName'");
            }
            resourceInputs["applicationName"] = args ? args.applicationName : undefined;
            resourceInputs["businessProcessMapping"] = args ? args.businessProcessMapping : undefined;
            resourceInputs["businessProcessName"] = args ? args.businessProcessName : undefined;
            resourceInputs["businessProcessStages"] = args ? args.businessProcessStages : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["spaceName"] = args ? args.spaceName : undefined;
            resourceInputs["tableName"] = args ? args.tableName : undefined;
            resourceInputs["trackingDataStoreReferenceName"] = args ? args.trackingDataStoreReferenceName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        } else {
            resourceInputs["businessProcessMapping"] = undefined /*out*/;
            resourceInputs["businessProcessStages"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["identifier"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tableName"] = undefined /*out*/;
            resourceInputs["trackingDataStoreReferenceName"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:integrationspaces:BusinessProcess" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(BusinessProcess.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a BusinessProcess resource.
 */
export interface BusinessProcessArgs {
    /**
     * The name of the Application
     */
    applicationName: pulumi.Input<string>;
    /**
     * The business process mapping.
     */
    businessProcessMapping?: pulumi.Input<{[key: string]: pulumi.Input<inputs.integrationspaces.v20231114preview.BusinessProcessMappingItemArgs>}>;
    /**
     * The name of the business process
     */
    businessProcessName?: pulumi.Input<string>;
    /**
     * The business process stages.
     */
    businessProcessStages?: pulumi.Input<{[key: string]: pulumi.Input<inputs.integrationspaces.v20231114preview.BusinessProcessStageArgs>}>;
    /**
     * The description of the business process.
     */
    description?: pulumi.Input<string>;
    /**
     * The business process identifier.
     */
    identifier?: pulumi.Input<inputs.integrationspaces.v20231114preview.BusinessProcessIdentifierArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the space
     */
    spaceName: pulumi.Input<string>;
    /**
     * The table name of the business process.
     */
    tableName?: pulumi.Input<string>;
    /**
     * The tracking data store reference name.
     */
    trackingDataStoreReferenceName?: pulumi.Input<string>;
}
