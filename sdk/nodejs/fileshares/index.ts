// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FileShareArgs } from "./fileShare";
export type FileShare = import("./fileShare").FileShare;
export const FileShare: typeof import("./fileShare").FileShare = null as any;
utilities.lazyLoad(exports, ["FileShare"], () => require("./fileShare"));

export { GetFileShareArgs, GetFileShareResult, GetFileShareOutputArgs } from "./getFileShare";
export const getFileShare: typeof import("./getFileShare").getFileShare = null as any;
export const getFileShareOutput: typeof import("./getFileShare").getFileShareOutput = null as any;
utilities.lazyLoad(exports, ["getFileShare","getFileShareOutput"], () => require("./getFileShare"));

export { GetFileShareLimitsArgs, GetFileShareLimitsResult, GetFileShareLimitsOutputArgs } from "./getFileShareLimits";
export const getFileShareLimits: typeof import("./getFileShareLimits").getFileShareLimits = null as any;
export const getFileShareLimitsOutput: typeof import("./getFileShareLimits").getFileShareLimitsOutput = null as any;
utilities.lazyLoad(exports, ["getFileShareLimits","getFileShareLimitsOutput"], () => require("./getFileShareLimits"));

export { GetFileShareProvisioningRecommendationArgs, GetFileShareProvisioningRecommendationResult, GetFileShareProvisioningRecommendationOutputArgs } from "./getFileShareProvisioningRecommendation";
export const getFileShareProvisioningRecommendation: typeof import("./getFileShareProvisioningRecommendation").getFileShareProvisioningRecommendation = null as any;
export const getFileShareProvisioningRecommendationOutput: typeof import("./getFileShareProvisioningRecommendation").getFileShareProvisioningRecommendationOutput = null as any;
utilities.lazyLoad(exports, ["getFileShareProvisioningRecommendation","getFileShareProvisioningRecommendationOutput"], () => require("./getFileShareProvisioningRecommendation"));

export { GetFileShareUsageDataArgs, GetFileShareUsageDataResult, GetFileShareUsageDataOutputArgs } from "./getFileShareUsageData";
export const getFileShareUsageData: typeof import("./getFileShareUsageData").getFileShareUsageData = null as any;
export const getFileShareUsageDataOutput: typeof import("./getFileShareUsageData").getFileShareUsageDataOutput = null as any;
utilities.lazyLoad(exports, ["getFileShareUsageData","getFileShareUsageDataOutput"], () => require("./getFileShareUsageData"));


// Export enums:
export * from "../types/enums/fileshares";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:fileshares:FileShare":
                return new FileShare(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "fileshares", _module)
