// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ClusterInstanceAgentPoolArgs } from "./clusterInstanceAgentPool";
export type ClusterInstanceAgentPool = import("./clusterInstanceAgentPool").ClusterInstanceAgentPool;
export const ClusterInstanceAgentPool: typeof import("./clusterInstanceAgentPool").ClusterInstanceAgentPool = null as any;
utilities.lazyLoad(exports, ["ClusterInstanceAgentPool"], () => require("./clusterInstanceAgentPool"));

export { ClusterInstanceHybridIdentityMetadatumArgs } from "./clusterInstanceHybridIdentityMetadatum";
export type ClusterInstanceHybridIdentityMetadatum = import("./clusterInstanceHybridIdentityMetadatum").ClusterInstanceHybridIdentityMetadatum;
export const ClusterInstanceHybridIdentityMetadatum: typeof import("./clusterInstanceHybridIdentityMetadatum").ClusterInstanceHybridIdentityMetadatum = null as any;
utilities.lazyLoad(exports, ["ClusterInstanceHybridIdentityMetadatum"], () => require("./clusterInstanceHybridIdentityMetadatum"));

export { GetClusterInstanceAgentPoolArgs, GetClusterInstanceAgentPoolResult, GetClusterInstanceAgentPoolOutputArgs } from "./getClusterInstanceAgentPool";
export const getClusterInstanceAgentPool: typeof import("./getClusterInstanceAgentPool").getClusterInstanceAgentPool = null as any;
export const getClusterInstanceAgentPoolOutput: typeof import("./getClusterInstanceAgentPool").getClusterInstanceAgentPoolOutput = null as any;
utilities.lazyLoad(exports, ["getClusterInstanceAgentPool","getClusterInstanceAgentPoolOutput"], () => require("./getClusterInstanceAgentPool"));

export { GetClusterInstanceHybridIdentityMetadatumArgs, GetClusterInstanceHybridIdentityMetadatumResult, GetClusterInstanceHybridIdentityMetadatumOutputArgs } from "./getClusterInstanceHybridIdentityMetadatum";
export const getClusterInstanceHybridIdentityMetadatum: typeof import("./getClusterInstanceHybridIdentityMetadatum").getClusterInstanceHybridIdentityMetadatum = null as any;
export const getClusterInstanceHybridIdentityMetadatumOutput: typeof import("./getClusterInstanceHybridIdentityMetadatum").getClusterInstanceHybridIdentityMetadatumOutput = null as any;
utilities.lazyLoad(exports, ["getClusterInstanceHybridIdentityMetadatum","getClusterInstanceHybridIdentityMetadatumOutput"], () => require("./getClusterInstanceHybridIdentityMetadatum"));

export { GetKubernetesVersionsArgs, GetKubernetesVersionsResult, GetKubernetesVersionsOutputArgs } from "./getKubernetesVersions";
export const getKubernetesVersions: typeof import("./getKubernetesVersions").getKubernetesVersions = null as any;
export const getKubernetesVersionsOutput: typeof import("./getKubernetesVersions").getKubernetesVersionsOutput = null as any;
utilities.lazyLoad(exports, ["getKubernetesVersions","getKubernetesVersionsOutput"], () => require("./getKubernetesVersions"));

export { GetProvisionedClusterInstanceArgs, GetProvisionedClusterInstanceResult, GetProvisionedClusterInstanceOutputArgs } from "./getProvisionedClusterInstance";
export const getProvisionedClusterInstance: typeof import("./getProvisionedClusterInstance").getProvisionedClusterInstance = null as any;
export const getProvisionedClusterInstanceOutput: typeof import("./getProvisionedClusterInstance").getProvisionedClusterInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getProvisionedClusterInstance","getProvisionedClusterInstanceOutput"], () => require("./getProvisionedClusterInstance"));

export { GetVMSkusArgs, GetVMSkusResult, GetVMSkusOutputArgs } from "./getVMSkus";
export const getVMSkus: typeof import("./getVMSkus").getVMSkus = null as any;
export const getVMSkusOutput: typeof import("./getVMSkus").getVMSkusOutput = null as any;
utilities.lazyLoad(exports, ["getVMSkus","getVMSkusOutput"], () => require("./getVMSkus"));

export { GetVirtualNetworkRetrieveArgs, GetVirtualNetworkRetrieveResult, GetVirtualNetworkRetrieveOutputArgs } from "./getVirtualNetworkRetrieve";
export const getVirtualNetworkRetrieve: typeof import("./getVirtualNetworkRetrieve").getVirtualNetworkRetrieve = null as any;
export const getVirtualNetworkRetrieveOutput: typeof import("./getVirtualNetworkRetrieve").getVirtualNetworkRetrieveOutput = null as any;
utilities.lazyLoad(exports, ["getVirtualNetworkRetrieve","getVirtualNetworkRetrieveOutput"], () => require("./getVirtualNetworkRetrieve"));

export { KubernetesVersionsArgs } from "./kubernetesVersions";
export type KubernetesVersions = import("./kubernetesVersions").KubernetesVersions;
export const KubernetesVersions: typeof import("./kubernetesVersions").KubernetesVersions = null as any;
utilities.lazyLoad(exports, ["KubernetesVersions"], () => require("./kubernetesVersions"));

export { ListProvisionedClusterInstanceAdminKubeconfigArgs, ListProvisionedClusterInstanceAdminKubeconfigResult, ListProvisionedClusterInstanceAdminKubeconfigOutputArgs } from "./listProvisionedClusterInstanceAdminKubeconfig";
export const listProvisionedClusterInstanceAdminKubeconfig: typeof import("./listProvisionedClusterInstanceAdminKubeconfig").listProvisionedClusterInstanceAdminKubeconfig = null as any;
export const listProvisionedClusterInstanceAdminKubeconfigOutput: typeof import("./listProvisionedClusterInstanceAdminKubeconfig").listProvisionedClusterInstanceAdminKubeconfigOutput = null as any;
utilities.lazyLoad(exports, ["listProvisionedClusterInstanceAdminKubeconfig","listProvisionedClusterInstanceAdminKubeconfigOutput"], () => require("./listProvisionedClusterInstanceAdminKubeconfig"));

export { ListProvisionedClusterInstanceUserKubeconfigArgs, ListProvisionedClusterInstanceUserKubeconfigResult, ListProvisionedClusterInstanceUserKubeconfigOutputArgs } from "./listProvisionedClusterInstanceUserKubeconfig";
export const listProvisionedClusterInstanceUserKubeconfig: typeof import("./listProvisionedClusterInstanceUserKubeconfig").listProvisionedClusterInstanceUserKubeconfig = null as any;
export const listProvisionedClusterInstanceUserKubeconfigOutput: typeof import("./listProvisionedClusterInstanceUserKubeconfig").listProvisionedClusterInstanceUserKubeconfigOutput = null as any;
utilities.lazyLoad(exports, ["listProvisionedClusterInstanceUserKubeconfig","listProvisionedClusterInstanceUserKubeconfigOutput"], () => require("./listProvisionedClusterInstanceUserKubeconfig"));

export { ProvisionedClusterInstanceArgs } from "./provisionedClusterInstance";
export type ProvisionedClusterInstance = import("./provisionedClusterInstance").ProvisionedClusterInstance;
export const ProvisionedClusterInstance: typeof import("./provisionedClusterInstance").ProvisionedClusterInstance = null as any;
utilities.lazyLoad(exports, ["ProvisionedClusterInstance"], () => require("./provisionedClusterInstance"));

export { VirtualNetworkRetrieveArgs } from "./virtualNetworkRetrieve";
export type VirtualNetworkRetrieve = import("./virtualNetworkRetrieve").VirtualNetworkRetrieve;
export const VirtualNetworkRetrieve: typeof import("./virtualNetworkRetrieve").VirtualNetworkRetrieve = null as any;
utilities.lazyLoad(exports, ["VirtualNetworkRetrieve"], () => require("./virtualNetworkRetrieve"));

export { VMSkusArgs } from "./vmskus";
export type VMSkus = import("./vmskus").VMSkus;
export const VMSkus: typeof import("./vmskus").VMSkus = null as any;
utilities.lazyLoad(exports, ["VMSkus"], () => require("./vmskus"));


// Export enums:
export * from "../../types/enums/hybridcontainerservice/v20231115preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:hybridcontainerservice/v20231115preview:ClusterInstanceAgentPool":
                return new ClusterInstanceAgentPool(name, <any>undefined, { urn })
            case "azure-native:hybridcontainerservice/v20231115preview:ClusterInstanceHybridIdentityMetadatum":
                return new ClusterInstanceHybridIdentityMetadatum(name, <any>undefined, { urn })
            case "azure-native:hybridcontainerservice/v20231115preview:KubernetesVersions":
                return new KubernetesVersions(name, <any>undefined, { urn })
            case "azure-native:hybridcontainerservice/v20231115preview:ProvisionedClusterInstance":
                return new ProvisionedClusterInstance(name, <any>undefined, { urn })
            case "azure-native:hybridcontainerservice/v20231115preview:VMSkus":
                return new VMSkus(name, <any>undefined, { urn })
            case "azure-native:hybridcontainerservice/v20231115preview:VirtualNetworkRetrieve":
                return new VirtualNetworkRetrieve(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "hybridcontainerservice/v20231115preview", _module)
