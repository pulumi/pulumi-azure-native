// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the agent pool in the Hybrid AKS provisioned cluster instance
 */
export function getAgentPool(args: GetAgentPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetAgentPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:hybridcontainerservice/v20231115preview:getAgentPool", {
        "agentPoolName": args.agentPoolName,
        "connectedClusterResourceUri": args.connectedClusterResourceUri,
    }, opts);
}

export interface GetAgentPoolArgs {
    /**
     * Parameter for the name of the agent pool in the provisioned cluster
     */
    agentPoolName: string;
    /**
     * The fully qualified Azure Resource manager identifier of the connected cluster resource.
     */
    connectedClusterResourceUri: string;
}

/**
 * The agentPool resource definition
 */
export interface GetAgentPoolResult {
    /**
     * AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
     */
    readonly availabilityZones?: string[];
    /**
     * Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
     */
    readonly count?: number;
    /**
     * Extended Location definition
     */
    readonly extendedLocation?: outputs.hybridcontainerservice.v20231115preview.ExtendedLocationResponse;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * The resource location
     */
    readonly location?: string;
    /**
     * Resource Name
     */
    readonly name: string;
    /**
     * The version of node image
     */
    readonly nodeImageVersion?: string;
    /**
     * Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
     */
    readonly osSKU?: string;
    /**
     * OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
     */
    readonly osType?: string;
    /**
     * Provisioning state of the resource
     */
    readonly provisioningState: string;
    /**
     * Defines the observed state of the agent pool
     */
    readonly status?: outputs.hybridcontainerservice.v20231115preview.AgentPoolProvisioningStatusResponseStatus;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.hybridcontainerservice.v20231115preview.SystemDataResponse;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource Type
     */
    readonly type: string;
    /**
     * VmSize - The size of the agent pool VMs.
     */
    readonly vmSize?: string;
}
/**
 * Gets the agent pool in the Hybrid AKS provisioned cluster instance
 */
export function getAgentPoolOutput(args: GetAgentPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAgentPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:hybridcontainerservice/v20231115preview:getAgentPool", {
        "agentPoolName": args.agentPoolName,
        "connectedClusterResourceUri": args.connectedClusterResourceUri,
    }, opts);
}

export interface GetAgentPoolOutputArgs {
    /**
     * Parameter for the name of the agent pool in the provisioned cluster
     */
    agentPoolName: pulumi.Input<string>;
    /**
     * The fully qualified Azure Resource manager identifier of the connected cluster resource.
     */
    connectedClusterResourceUri: pulumi.Input<string>;
}
