// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AgentPoolArgs } from "./agentPool";
export type AgentPool = import("./agentPool").AgentPool;
export const AgentPool: typeof import("./agentPool").AgentPool = null as any;

export { GetHybridIdentityMetadatumArgs, GetHybridIdentityMetadatumResult, GetHybridIdentityMetadatumOutputArgs } from "./getHybridIdentityMetadatum";
export const getHybridIdentityMetadatum: typeof import("./getHybridIdentityMetadatum").getHybridIdentityMetadatum = null as any;
export const getHybridIdentityMetadatumOutput: typeof import("./getHybridIdentityMetadatum").getHybridIdentityMetadatumOutput = null as any;

export { GetProvisionedClusterArgs, GetProvisionedClusterResult, GetProvisionedClusterOutputArgs } from "./getProvisionedCluster";
export const getProvisionedCluster: typeof import("./getProvisionedCluster").getProvisionedCluster = null as any;
export const getProvisionedClusterOutput: typeof import("./getProvisionedCluster").getProvisionedClusterOutput = null as any;

export { GetagentPoolArgs, GetagentPoolResult, GetagentPoolOutputArgs } from "./getagentPool";
export const getagentPool: typeof import("./getagentPool").getagentPool = null as any;
export const getagentPoolOutput: typeof import("./getagentPool").getagentPoolOutput = null as any;

export { GetstorageSpaceRetrieveArgs, GetstorageSpaceRetrieveResult, GetstorageSpaceRetrieveOutputArgs } from "./getstorageSpaceRetrieve";
export const getstorageSpaceRetrieve: typeof import("./getstorageSpaceRetrieve").getstorageSpaceRetrieve = null as any;
export const getstorageSpaceRetrieveOutput: typeof import("./getstorageSpaceRetrieve").getstorageSpaceRetrieveOutput = null as any;

export { GetvirtualNetworkRetrieveArgs, GetvirtualNetworkRetrieveResult, GetvirtualNetworkRetrieveOutputArgs } from "./getvirtualNetworkRetrieve";
export const getvirtualNetworkRetrieve: typeof import("./getvirtualNetworkRetrieve").getvirtualNetworkRetrieve = null as any;
export const getvirtualNetworkRetrieveOutput: typeof import("./getvirtualNetworkRetrieve").getvirtualNetworkRetrieveOutput = null as any;

export { HybridIdentityMetadatumArgs } from "./hybridIdentityMetadatum";
export type HybridIdentityMetadatum = import("./hybridIdentityMetadatum").HybridIdentityMetadatum;
export const HybridIdentityMetadatum: typeof import("./hybridIdentityMetadatum").HybridIdentityMetadatum = null as any;

export { ProvisionedClusterArgs } from "./provisionedCluster";
export type ProvisionedCluster = import("./provisionedCluster").ProvisionedCluster;
export const ProvisionedCluster: typeof import("./provisionedCluster").ProvisionedCluster = null as any;

export { StorageSpaceRetrieveArgs } from "./storageSpaceRetrieve";
export type StorageSpaceRetrieve = import("./storageSpaceRetrieve").StorageSpaceRetrieve;
export const StorageSpaceRetrieve: typeof import("./storageSpaceRetrieve").StorageSpaceRetrieve = null as any;

export { VirtualNetworkRetrieveArgs } from "./virtualNetworkRetrieve";
export type VirtualNetworkRetrieve = import("./virtualNetworkRetrieve").VirtualNetworkRetrieve;
export const VirtualNetworkRetrieve: typeof import("./virtualNetworkRetrieve").VirtualNetworkRetrieve = null as any;

utilities.lazyLoad(exports, ["AgentPool"], () => require("./agentPool"));
utilities.lazyLoad(exports, ["getHybridIdentityMetadatum","getHybridIdentityMetadatumOutput"], () => require("./getHybridIdentityMetadatum"));
utilities.lazyLoad(exports, ["getProvisionedCluster","getProvisionedClusterOutput"], () => require("./getProvisionedCluster"));
utilities.lazyLoad(exports, ["getagentPool","getagentPoolOutput"], () => require("./getagentPool"));
utilities.lazyLoad(exports, ["getstorageSpaceRetrieve","getstorageSpaceRetrieveOutput"], () => require("./getstorageSpaceRetrieve"));
utilities.lazyLoad(exports, ["getvirtualNetworkRetrieve","getvirtualNetworkRetrieveOutput"], () => require("./getvirtualNetworkRetrieve"));
utilities.lazyLoad(exports, ["HybridIdentityMetadatum"], () => require("./hybridIdentityMetadatum"));
utilities.lazyLoad(exports, ["ProvisionedCluster"], () => require("./provisionedCluster"));
utilities.lazyLoad(exports, ["StorageSpaceRetrieve"], () => require("./storageSpaceRetrieve"));
utilities.lazyLoad(exports, ["VirtualNetworkRetrieve"], () => require("./virtualNetworkRetrieve"));

// Export enums:
export * from "../types/enums/hybridcontainerservice";

// Export sub-modules:
import * as v20220501preview from "./v20220501preview";

export {
    v20220501preview,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:hybridcontainerservice:HybridIdentityMetadatum":
                return new HybridIdentityMetadatum(name, <any>undefined, { urn })
            case "azure-native:hybridcontainerservice:ProvisionedCluster":
                return new ProvisionedCluster(name, <any>undefined, { urn })
            case "azure-native:hybridcontainerservice:agentPool":
                return new AgentPool(name, <any>undefined, { urn })
            case "azure-native:hybridcontainerservice:storageSpaceRetrieve":
                return new StorageSpaceRetrieve(name, <any>undefined, { urn })
            case "azure-native:hybridcontainerservice:virtualNetworkRetrieve":
                return new VirtualNetworkRetrieve(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "hybridcontainerservice", _module)
