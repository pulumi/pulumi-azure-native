// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Connection string for ingesting security data and logs
 * API Version: 2021-01-15-preview.
 */
export function listIngestionSettingConnectionStrings(args: ListIngestionSettingConnectionStringsArgs, opts?: pulumi.InvokeOptions): Promise<ListIngestionSettingConnectionStringsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:security:listIngestionSettingConnectionStrings", {
        "ingestionSettingName": args.ingestionSettingName,
    }, opts);
}

export interface ListIngestionSettingConnectionStringsArgs {
    /**
     * Name of the ingestion setting
     */
    ingestionSettingName: string;
}

/**
 * Connection string for ingesting security data and logs
 */
export interface ListIngestionSettingConnectionStringsResult {
    /**
     * Connection strings
     */
    readonly value: outputs.security.IngestionConnectionStringResponse[];
}

export function listIngestionSettingConnectionStringsOutput(args: ListIngestionSettingConnectionStringsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListIngestionSettingConnectionStringsResult> {
    return pulumi.output(args).apply(a => listIngestionSettingConnectionStrings(a, opts))
}

export interface ListIngestionSettingConnectionStringsOutputArgs {
    /**
     * Name of the ingestion setting
     */
    ingestionSettingName: pulumi.Input<string>;
}
