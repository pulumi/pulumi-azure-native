// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get dismiss rule, with name: {alertsSuppressionRuleName}, for the given subscription
 */
export function getAlertsSuppressionRule(args: GetAlertsSuppressionRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertsSuppressionRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:security/v20190101preview:getAlertsSuppressionRule", {
        "alertsSuppressionRuleName": args.alertsSuppressionRuleName,
    }, opts);
}

export interface GetAlertsSuppressionRuleArgs {
    /**
     * The unique name of the suppression alert rule
     */
    alertsSuppressionRuleName: string;
}

/**
 * Describes the suppression rule
 */
export interface GetAlertsSuppressionRuleResult {
    /**
     * Type of the alert to automatically suppress. For all alert types, use '*'
     */
    readonly alertType: string;
    /**
     * Any comment regarding the rule
     */
    readonly comment?: string;
    /**
     * Expiration date of the rule, if value is not provided or provided as null this field will default to the maximum allowed expiration date.
     */
    readonly expirationDateUtc?: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * The last time this rule was modified
     */
    readonly lastModifiedUtc: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * The reason for dismissing the alert
     */
    readonly reason: string;
    /**
     * Possible states of the rule
     */
    readonly state: string;
    /**
     * The suppression conditions
     */
    readonly suppressionAlertsScope?: outputs.security.v20190101preview.SuppressionAlertsScopeResponse;
    /**
     * Resource type
     */
    readonly type: string;
}
/**
 * Get dismiss rule, with name: {alertsSuppressionRuleName}, for the given subscription
 */
export function getAlertsSuppressionRuleOutput(args: GetAlertsSuppressionRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlertsSuppressionRuleResult> {
    return pulumi.output(args).apply((a: any) => getAlertsSuppressionRule(a, opts))
}

export interface GetAlertsSuppressionRuleOutputArgs {
    /**
     * The unique name of the suppression alert rule
     */
    alertsSuppressionRuleName: pulumi.Input<string>;
}
