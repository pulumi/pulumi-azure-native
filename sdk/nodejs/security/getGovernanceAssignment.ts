// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Security GovernanceAssignment over a given scope
 * API Version: 2022-01-01-preview.
 */
export function getGovernanceAssignment(args: GetGovernanceAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetGovernanceAssignmentResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:security:getGovernanceAssignment", {
        "assessmentName": args.assessmentName,
        "assignmentKey": args.assignmentKey,
        "scope": args.scope,
    }, opts);
}

export interface GetGovernanceAssignmentArgs {
    /**
     * The Assessment Key - Unique key for the assessment type
     */
    assessmentName: string;
    /**
     * The security governance assignment key - the assessment key of the required governance assignment
     */
    assignmentKey: string;
    /**
     * Scope of the query, can be subscription (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group (/providers/Microsoft.Management/managementGroups/mgName).
     */
    scope: string;
}

/**
 * Security GovernanceAssignment over a given scope
 */
export interface GetGovernanceAssignmentResult {
    /**
     * The additional data for the governance assignment - e.g. links to ticket (optional), see example
     */
    readonly additionalData?: outputs.security.GovernanceAssignmentAdditionalDataResponse;
    /**
     * The email notifications settings for the governance rule, states whether to disable notifications for mangers and owners
     */
    readonly governanceEmailNotification?: outputs.security.GovernanceEmailNotificationResponse;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Defines whether there is a grace period on the governance assignment
     */
    readonly isGracePeriod?: boolean;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * The Owner for the governance assignment - e.g. user@contoso.com - see example
     */
    readonly owner?: string;
    /**
     * The remediation due-date - after this date Secure Score will be affected (in case of  active grace-period)
     */
    readonly remediationDueDate: string;
    /**
     * The ETA (estimated time of arrival) for remediation (optional), see example
     */
    readonly remediationEta?: outputs.security.RemediationEtaResponse;
    /**
     * Resource type
     */
    readonly type: string;
}

export function getGovernanceAssignmentOutput(args: GetGovernanceAssignmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGovernanceAssignmentResult> {
    return pulumi.output(args).apply(a => getGovernanceAssignment(a, opts))
}

export interface GetGovernanceAssignmentOutputArgs {
    /**
     * The Assessment Key - Unique key for the assessment type
     */
    assessmentName: pulumi.Input<string>;
    /**
     * The security governance assignment key - the assessment key of the required governance assignment
     */
    assignmentKey: pulumi.Input<string>;
    /**
     * Scope of the query, can be subscription (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group (/providers/Microsoft.Management/managementGroups/mgName).
     */
    scope: pulumi.Input<string>;
}
