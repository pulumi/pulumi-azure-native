// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Custom Recommendation
 * Azure REST API version: 2024-08-01.
 */
export class CustomRecommendation extends pulumi.CustomResource {
    /**
     * Get an existing CustomRecommendation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomRecommendation {
        return new CustomRecommendation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:security:CustomRecommendation';

    /**
     * Returns true if the given object is an instance of CustomRecommendation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomRecommendation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomRecommendation.__pulumiType;
    }

    /**
     * The assessment metadata key used when an assessment is generated for this Recommendation.
     */
    public /*out*/ readonly assessmentKey!: pulumi.Output<string>;
    /**
     * List of all standard supported clouds.
     */
    public readonly cloudProviders!: pulumi.Output<string[] | undefined>;
    /**
     * The description to relate to the assessments generated by this Recommendation.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the assessments generated by this Recommendation.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * KQL query representing the Recommendation results required.
     */
    public readonly query!: pulumi.Output<string | undefined>;
    /**
     * The remediation description to relate to the assessments generated by this Recommendation.
     */
    public readonly remediationDescription!: pulumi.Output<string | undefined>;
    /**
     * The severity to relate to the assessments generated by this Recommendation.
     */
    public readonly securityIssue!: pulumi.Output<string | undefined>;
    /**
     * The severity to relate to the assessments generated by this Recommendation.
     */
    public readonly severity!: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.security.SystemDataResponse>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a CustomRecommendation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomRecommendationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            resourceInputs["cloudProviders"] = args ? args.cloudProviders : undefined;
            resourceInputs["customRecommendationName"] = args ? args.customRecommendationName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["query"] = args ? args.query : undefined;
            resourceInputs["remediationDescription"] = args ? args.remediationDescription : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["securityIssue"] = args ? args.securityIssue : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["assessmentKey"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["assessmentKey"] = undefined /*out*/;
            resourceInputs["cloudProviders"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["query"] = undefined /*out*/;
            resourceInputs["remediationDescription"] = undefined /*out*/;
            resourceInputs["securityIssue"] = undefined /*out*/;
            resourceInputs["severity"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:security/v20240801:CustomRecommendation" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(CustomRecommendation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CustomRecommendation resource.
 */
export interface CustomRecommendationArgs {
    /**
     * List of all standard supported clouds.
     */
    cloudProviders?: pulumi.Input<pulumi.Input<string | enums.security.RecommendationSupportedClouds>[]>;
    /**
     * Name of the Custom Recommendation.
     */
    customRecommendationName?: pulumi.Input<string>;
    /**
     * The description to relate to the assessments generated by this Recommendation.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the assessments generated by this Recommendation.
     */
    displayName?: pulumi.Input<string>;
    /**
     * KQL query representing the Recommendation results required.
     */
    query?: pulumi.Input<string>;
    /**
     * The remediation description to relate to the assessments generated by this Recommendation.
     */
    remediationDescription?: pulumi.Input<string>;
    /**
     * The scope of the custom recommendation. Valid scopes are: management group (format: 'providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: 'subscriptions/{subscriptionId}'), or security connector (format: 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
     */
    scope: pulumi.Input<string>;
    /**
     * The severity to relate to the assessments generated by this Recommendation.
     */
    securityIssue?: pulumi.Input<string | enums.security.SecurityIssue>;
    /**
     * The severity to relate to the assessments generated by this Recommendation.
     */
    severity?: pulumi.Input<string | enums.security.SeverityEnum>;
}
