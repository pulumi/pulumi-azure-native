// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get a specific security standard for the requested scope
 */
export function getStandard(args: GetStandardArgs, opts?: pulumi.InvokeOptions): Promise<GetStandardResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:security/v20210801preview:getStandard", {
        "resourceGroupName": args.resourceGroupName,
        "standardId": args.standardId,
    }, opts);
}

export interface GetStandardArgs {
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The Security Standard key - unique key for the standard type
     */
    standardId: string;
}

/**
 * Security Standard on a resource
 */
export interface GetStandardResult {
    /**
     * category of the standard provided
     */
    readonly category?: string;
    /**
     * List of component objects containing component unique keys (such as assessment keys) to apply to standard scope.  Currently only supports assessment keys.
     */
    readonly components?: outputs.security.v20210801preview.StandardComponentPropertiesResponse[];
    /**
     * description of the standard
     */
    readonly description?: string;
    /**
     * display name of the standard, equivalent to the standardId
     */
    readonly displayName?: string;
    /**
     * Entity tag is used for comparing two or more entities from the same requested resource.
     */
    readonly etag?: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Kind of the resource
     */
    readonly kind?: string;
    /**
     * Location where the resource is stored
     */
    readonly location?: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * standard type (Custom or BuiltIn only currently)
     */
    readonly standardType: string;
    /**
     * List of all standard supported clouds.
     */
    readonly supportedClouds?: string[];
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.security.v20210801preview.SystemDataResponse;
    /**
     * A list of key value pairs that describe the resource.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type: string;
}
/**
 * Get a specific security standard for the requested scope
 */
export function getStandardOutput(args: GetStandardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStandardResult> {
    return pulumi.output(args).apply((a: any) => getStandard(a, opts))
}

export interface GetStandardOutputArgs {
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Security Standard key - unique key for the standard type
     */
    standardId: pulumi.Input<string>;
}
