// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Rule results.
 * Azure REST API version: 2023-02-01-preview. Prior API version in Azure Native 1.x: 2020-07-01-preview.
 */
export class SqlVulnerabilityAssessmentBaselineRule extends pulumi.CustomResource {
    /**
     * Get an existing SqlVulnerabilityAssessmentBaselineRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SqlVulnerabilityAssessmentBaselineRule {
        return new SqlVulnerabilityAssessmentBaselineRule(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:security:SqlVulnerabilityAssessmentBaselineRule';

    /**
     * Returns true if the given object is an instance of SqlVulnerabilityAssessmentBaselineRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SqlVulnerabilityAssessmentBaselineRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlVulnerabilityAssessmentBaselineRule.__pulumiType;
    }

    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Rule results properties.
     */
    public /*out*/ readonly properties!: pulumi.Output<outputs.security.RuleResultsPropertiesResponse>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a SqlVulnerabilityAssessmentBaselineRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlVulnerabilityAssessmentBaselineRuleArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["latestScan"] = args ? args.latestScan : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["results"] = args ? args.results : undefined;
            resourceInputs["ruleId"] = args ? args.ruleId : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:security/v20200701preview:SqlVulnerabilityAssessmentBaselineRule" }, { type: "azure-native:security/v20230201preview:SqlVulnerabilityAssessmentBaselineRule" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(SqlVulnerabilityAssessmentBaselineRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SqlVulnerabilityAssessmentBaselineRule resource.
 */
export interface SqlVulnerabilityAssessmentBaselineRuleArgs {
    /**
     * Take results from latest scan.
     */
    latestScan?: pulumi.Input<boolean>;
    /**
     * The identifier of the resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Expected results to be inserted into the baseline.
     * Leave this field empty it LatestScan == true.
     */
    results?: pulumi.Input<pulumi.Input<pulumi.Input<string>[]>[]>;
    /**
     * The rule Id.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * The workspace Id.
     */
    workspaceId: pulumi.Input<string>;
}
