// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * @deprecated Version 2015-06-01-preview will be removed in v2 of the provider.
 */
export class AdaptiveApplicationControl extends pulumi.CustomResource {
    /**
     * Get an existing AdaptiveApplicationControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AdaptiveApplicationControl {
        pulumi.log.warn("AdaptiveApplicationControl is deprecated: Version 2015-06-01-preview will be removed in v2 of the provider.")
        return new AdaptiveApplicationControl(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:security/v20150601preview:AdaptiveApplicationControl';

    /**
     * Returns true if the given object is an instance of AdaptiveApplicationControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdaptiveApplicationControl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdaptiveApplicationControl.__pulumiType;
    }

    /**
     * Location where the resource is stored
     */
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Represents a VM/server group and set of rules that are Recommended by Microsoft Defender for Cloud to be allowed
     */
    public /*out*/ readonly properties!: pulumi.Output<outputs.security.v20150601preview.AppWhitelistingGroupDataResponse>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a AdaptiveApplicationControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2015-06-01-preview will be removed in v2 of the provider. */
    constructor(name: string, args: AdaptiveApplicationControlArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("AdaptiveApplicationControl is deprecated: Version 2015-06-01-preview will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.ascLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ascLocation'");
            }
            resourceInputs["ascLocation"] = args ? args.ascLocation : undefined;
            resourceInputs["enforcementMode"] = args ? args.enforcementMode : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["pathRecommendations"] = args ? args.pathRecommendations : undefined;
            resourceInputs["protectionMode"] = args ? args.protectionMode : undefined;
            resourceInputs["vmRecommendations"] = args ? args.vmRecommendations : undefined;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:security:AdaptiveApplicationControl" }, { type: "azure-native:security/v20200101:AdaptiveApplicationControl" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(AdaptiveApplicationControl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AdaptiveApplicationControl resource.
 */
export interface AdaptiveApplicationControlArgs {
    /**
     * The location where ASC stores the data of the subscription. can be retrieved from Get locations
     */
    ascLocation: pulumi.Input<string>;
    /**
     * The enforcement mode of the group. Can also be defined per collection type by using ProtectionMode
     */
    enforcementMode?: pulumi.Input<string>;
    /**
     * Name of an application control VM/server group
     */
    groupName?: pulumi.Input<string>;
    pathRecommendations?: pulumi.Input<pulumi.Input<inputs.security.v20150601preview.PathRecommendationArgs>[]>;
    /**
     * The protection mode of the group per collection type. Can also be defined for all collection types by using EnforcementMode
     */
    protectionMode?: pulumi.Input<inputs.security.v20150601preview.ProtectionModeArgs>;
    vmRecommendations?: pulumi.Input<pulumi.Input<inputs.security.v20150601preview.VmRecommendationArgs>[]>;
}
