// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets an Azure API Management API if it has been onboarded to Defender for APIs. If an Azure API Management API is onboarded to Defender for APIs, the system will monitor the operations within the Azure API Management API for intrusive behaviors and provide alerts for attacks that have been detected.
 */
export function getAPICollection(args: GetAPICollectionArgs, opts?: pulumi.InvokeOptions): Promise<GetAPICollectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:security/v20221120preview:getAPICollection", {
        "apiCollectionId": args.apiCollectionId,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
    }, opts);
}

export interface GetAPICollectionArgs {
    /**
     * A string representing the apiCollections resource within the Microsoft.Security provider namespace. This string matches the Azure API Management API name.
     */
    apiCollectionId: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the API Management service.
     */
    serviceName: string;
}

/**
 * An API collection as represented by Defender for APIs.
 */
export interface GetAPICollectionResult {
    /**
     * Additional data regarding the API collection.
     */
    readonly additionalData?: {[key: string]: string};
    /**
     * The display name of the Azure API Management API.
     */
    readonly displayName?: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Resource type
     */
    readonly type: string;
}
/**
 * Gets an Azure API Management API if it has been onboarded to Defender for APIs. If an Azure API Management API is onboarded to Defender for APIs, the system will monitor the operations within the Azure API Management API for intrusive behaviors and provide alerts for attacks that have been detected.
 */
export function getAPICollectionOutput(args: GetAPICollectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAPICollectionResult> {
    return pulumi.output(args).apply((a: any) => getAPICollection(a, opts))
}

export interface GetAPICollectionOutputArgs {
    /**
     * A string representing the apiCollections resource within the Microsoft.Security provider namespace. This string matches the Azure API Management API name.
     */
    apiCollectionId: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the API Management service.
     */
    serviceName: pulumi.Input<string>;
}
