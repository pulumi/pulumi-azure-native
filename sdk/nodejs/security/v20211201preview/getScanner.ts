// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Security Scanner resource
 */
export function getScanner(args: GetScannerArgs, opts?: pulumi.InvokeOptions): Promise<GetScannerResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:security/v20211201preview:getScanner", {
        "resourceGroupName": args.resourceGroupName,
        "scannerName": args.scannerName,
    }, opts);
}

export interface GetScannerArgs {
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Security scanner name
     */
    scannerName: string;
}

/**
 * Security Scanner resource
 */
export interface GetScannerResult {
    /**
     * Entity tag is used for comparing two or more entities from the same requested resource.
     */
    readonly etag?: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Kind of the resource
     */
    readonly kind?: string;
    /**
     * Location where the resource is stored
     */
    readonly location?: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.security.v20211201preview.SystemDataResponse;
    /**
     * A list of key value pairs that describe the resource.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type: string;
}

export function getScannerOutput(args: GetScannerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScannerResult> {
    return pulumi.output(args).apply(a => getScanner(a, opts))
}

export interface GetScannerOutputArgs {
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Security scanner name
     */
    scannerName: pulumi.Input<string>;
}
