// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Configures where to store the OMS agent data for workspaces under a scope
 */
export class WorkspaceSetting extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WorkspaceSetting {
        return new WorkspaceSetting(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:security/v20170801preview:WorkspaceSetting';

    /**
     * Returns true if the given object is an instance of WorkspaceSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceSetting.__pulumiType;
    }

    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope
     */
    public readonly scope!: pulumi.Output<string>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The full Azure ID of the workspace to save the data in
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a WorkspaceSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceSettingArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.scope === undefined) {
                throw new Error("Missing required property 'scope'");
            }
            if (!args || args.workspaceId === undefined) {
                throw new Error("Missing required property 'workspaceId'");
            }
            if (!args || args.workspaceSettingName === undefined) {
                throw new Error("Missing required property 'workspaceSettingName'");
            }
            inputs["scope"] = args ? args.scope : undefined;
            inputs["workspaceId"] = args ? args.workspaceId : undefined;
            inputs["workspaceSettingName"] = args ? args.workspaceSettingName : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["name"] = undefined /*out*/;
            inputs["scope"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["workspaceId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(WorkspaceSetting.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a WorkspaceSetting resource.
 */
export interface WorkspaceSettingArgs {
    /**
     * All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope
     */
    readonly scope: pulumi.Input<string>;
    /**
     * The full Azure ID of the workspace to save the data in
     */
    readonly workspaceId: pulumi.Input<string>;
    /**
     * Name of the security setting
     */
    readonly workspaceSettingName: pulumi.Input<string>;
}
