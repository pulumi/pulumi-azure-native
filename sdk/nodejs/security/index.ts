// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AdaptiveApplicationControlArgs } from "./adaptiveApplicationControl";
export type AdaptiveApplicationControl = import("./adaptiveApplicationControl").AdaptiveApplicationControl;
export const AdaptiveApplicationControl: typeof import("./adaptiveApplicationControl").AdaptiveApplicationControl = null as any;
utilities.lazyLoad(exports, ["AdaptiveApplicationControl"], () => require("./adaptiveApplicationControl"));

export { AdvancedThreatProtectionArgs } from "./advancedThreatProtection";
export type AdvancedThreatProtection = import("./advancedThreatProtection").AdvancedThreatProtection;
export const AdvancedThreatProtection: typeof import("./advancedThreatProtection").AdvancedThreatProtection = null as any;
utilities.lazyLoad(exports, ["AdvancedThreatProtection"], () => require("./advancedThreatProtection"));

export { APICollectionArgs } from "./apicollection";
export type APICollection = import("./apicollection").APICollection;
export const APICollection: typeof import("./apicollection").APICollection = null as any;
utilities.lazyLoad(exports, ["APICollection"], () => require("./apicollection"));

export { ApplicationArgs } from "./application";
export type Application = import("./application").Application;
export const Application: typeof import("./application").Application = null as any;
utilities.lazyLoad(exports, ["Application"], () => require("./application"));

export { AssessmentArgs } from "./assessment";
export type Assessment = import("./assessment").Assessment;
export const Assessment: typeof import("./assessment").Assessment = null as any;
utilities.lazyLoad(exports, ["Assessment"], () => require("./assessment"));

export { AssessmentMetadataInSubscriptionArgs } from "./assessmentMetadataInSubscription";
export type AssessmentMetadataInSubscription = import("./assessmentMetadataInSubscription").AssessmentMetadataInSubscription;
export const AssessmentMetadataInSubscription: typeof import("./assessmentMetadataInSubscription").AssessmentMetadataInSubscription = null as any;
utilities.lazyLoad(exports, ["AssessmentMetadataInSubscription"], () => require("./assessmentMetadataInSubscription"));

export { DeviceSecurityGroupArgs } from "./deviceSecurityGroup";
export type DeviceSecurityGroup = import("./deviceSecurityGroup").DeviceSecurityGroup;
export const DeviceSecurityGroup: typeof import("./deviceSecurityGroup").DeviceSecurityGroup = null as any;
utilities.lazyLoad(exports, ["DeviceSecurityGroup"], () => require("./deviceSecurityGroup"));

export { GetAPICollectionArgs, GetAPICollectionResult, GetAPICollectionOutputArgs } from "./getAPICollection";
export const getAPICollection: typeof import("./getAPICollection").getAPICollection = null as any;
export const getAPICollectionOutput: typeof import("./getAPICollection").getAPICollectionOutput = null as any;
utilities.lazyLoad(exports, ["getAPICollection","getAPICollectionOutput"], () => require("./getAPICollection"));

export { GetAdaptiveApplicationControlArgs, GetAdaptiveApplicationControlResult, GetAdaptiveApplicationControlOutputArgs } from "./getAdaptiveApplicationControl";
export const getAdaptiveApplicationControl: typeof import("./getAdaptiveApplicationControl").getAdaptiveApplicationControl = null as any;
export const getAdaptiveApplicationControlOutput: typeof import("./getAdaptiveApplicationControl").getAdaptiveApplicationControlOutput = null as any;
utilities.lazyLoad(exports, ["getAdaptiveApplicationControl","getAdaptiveApplicationControlOutput"], () => require("./getAdaptiveApplicationControl"));

export { GetAdvancedThreatProtectionArgs, GetAdvancedThreatProtectionResult, GetAdvancedThreatProtectionOutputArgs } from "./getAdvancedThreatProtection";
export const getAdvancedThreatProtection: typeof import("./getAdvancedThreatProtection").getAdvancedThreatProtection = null as any;
export const getAdvancedThreatProtectionOutput: typeof import("./getAdvancedThreatProtection").getAdvancedThreatProtectionOutput = null as any;
utilities.lazyLoad(exports, ["getAdvancedThreatProtection","getAdvancedThreatProtectionOutput"], () => require("./getAdvancedThreatProtection"));

export { GetApplicationArgs, GetApplicationResult, GetApplicationOutputArgs } from "./getApplication";
export const getApplication: typeof import("./getApplication").getApplication = null as any;
export const getApplicationOutput: typeof import("./getApplication").getApplicationOutput = null as any;
utilities.lazyLoad(exports, ["getApplication","getApplicationOutput"], () => require("./getApplication"));

export { GetAssessmentArgs, GetAssessmentResult, GetAssessmentOutputArgs } from "./getAssessment";
export const getAssessment: typeof import("./getAssessment").getAssessment = null as any;
export const getAssessmentOutput: typeof import("./getAssessment").getAssessmentOutput = null as any;
utilities.lazyLoad(exports, ["getAssessment","getAssessmentOutput"], () => require("./getAssessment"));

export { GetAssessmentMetadataInSubscriptionArgs, GetAssessmentMetadataInSubscriptionResult, GetAssessmentMetadataInSubscriptionOutputArgs } from "./getAssessmentMetadataInSubscription";
export const getAssessmentMetadataInSubscription: typeof import("./getAssessmentMetadataInSubscription").getAssessmentMetadataInSubscription = null as any;
export const getAssessmentMetadataInSubscriptionOutput: typeof import("./getAssessmentMetadataInSubscription").getAssessmentMetadataInSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getAssessmentMetadataInSubscription","getAssessmentMetadataInSubscriptionOutput"], () => require("./getAssessmentMetadataInSubscription"));

export { GetDeviceSecurityGroupArgs, GetDeviceSecurityGroupResult, GetDeviceSecurityGroupOutputArgs } from "./getDeviceSecurityGroup";
export const getDeviceSecurityGroup: typeof import("./getDeviceSecurityGroup").getDeviceSecurityGroup = null as any;
export const getDeviceSecurityGroupOutput: typeof import("./getDeviceSecurityGroup").getDeviceSecurityGroupOutput = null as any;
utilities.lazyLoad(exports, ["getDeviceSecurityGroup","getDeviceSecurityGroupOutput"], () => require("./getDeviceSecurityGroup"));

export { GetIotSecuritySolutionArgs, GetIotSecuritySolutionResult, GetIotSecuritySolutionOutputArgs } from "./getIotSecuritySolution";
export const getIotSecuritySolution: typeof import("./getIotSecuritySolution").getIotSecuritySolution = null as any;
export const getIotSecuritySolutionOutput: typeof import("./getIotSecuritySolution").getIotSecuritySolutionOutput = null as any;
utilities.lazyLoad(exports, ["getIotSecuritySolution","getIotSecuritySolutionOutput"], () => require("./getIotSecuritySolution"));

export { GetJitNetworkAccessPolicyArgs, GetJitNetworkAccessPolicyResult, GetJitNetworkAccessPolicyOutputArgs } from "./getJitNetworkAccessPolicy";
export const getJitNetworkAccessPolicy: typeof import("./getJitNetworkAccessPolicy").getJitNetworkAccessPolicy = null as any;
export const getJitNetworkAccessPolicyOutput: typeof import("./getJitNetworkAccessPolicy").getJitNetworkAccessPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getJitNetworkAccessPolicy","getJitNetworkAccessPolicyOutput"], () => require("./getJitNetworkAccessPolicy"));

export { GetSecurityConnectorArgs, GetSecurityConnectorResult, GetSecurityConnectorOutputArgs } from "./getSecurityConnector";
export const getSecurityConnector: typeof import("./getSecurityConnector").getSecurityConnector = null as any;
export const getSecurityConnectorOutput: typeof import("./getSecurityConnector").getSecurityConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityConnector","getSecurityConnectorOutput"], () => require("./getSecurityConnector"));

export { GetSecurityConnectorApplicationArgs, GetSecurityConnectorApplicationResult, GetSecurityConnectorApplicationOutputArgs } from "./getSecurityConnectorApplication";
export const getSecurityConnectorApplication: typeof import("./getSecurityConnectorApplication").getSecurityConnectorApplication = null as any;
export const getSecurityConnectorApplicationOutput: typeof import("./getSecurityConnectorApplication").getSecurityConnectorApplicationOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityConnectorApplication","getSecurityConnectorApplicationOutput"], () => require("./getSecurityConnectorApplication"));

export { GetSecurityOperatorArgs, GetSecurityOperatorResult, GetSecurityOperatorOutputArgs } from "./getSecurityOperator";
export const getSecurityOperator: typeof import("./getSecurityOperator").getSecurityOperator = null as any;
export const getSecurityOperatorOutput: typeof import("./getSecurityOperator").getSecurityOperatorOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityOperator","getSecurityOperatorOutput"], () => require("./getSecurityOperator"));

export { GetServerVulnerabilityAssessmentArgs, GetServerVulnerabilityAssessmentResult, GetServerVulnerabilityAssessmentOutputArgs } from "./getServerVulnerabilityAssessment";
export const getServerVulnerabilityAssessment: typeof import("./getServerVulnerabilityAssessment").getServerVulnerabilityAssessment = null as any;
export const getServerVulnerabilityAssessmentOutput: typeof import("./getServerVulnerabilityAssessment").getServerVulnerabilityAssessmentOutput = null as any;
utilities.lazyLoad(exports, ["getServerVulnerabilityAssessment","getServerVulnerabilityAssessmentOutput"], () => require("./getServerVulnerabilityAssessment"));

export { GetSqlVulnerabilityAssessmentBaselineRuleArgs, GetSqlVulnerabilityAssessmentBaselineRuleResult, GetSqlVulnerabilityAssessmentBaselineRuleOutputArgs } from "./getSqlVulnerabilityAssessmentBaselineRule";
export const getSqlVulnerabilityAssessmentBaselineRule: typeof import("./getSqlVulnerabilityAssessmentBaselineRule").getSqlVulnerabilityAssessmentBaselineRule = null as any;
export const getSqlVulnerabilityAssessmentBaselineRuleOutput: typeof import("./getSqlVulnerabilityAssessmentBaselineRule").getSqlVulnerabilityAssessmentBaselineRuleOutput = null as any;
utilities.lazyLoad(exports, ["getSqlVulnerabilityAssessmentBaselineRule","getSqlVulnerabilityAssessmentBaselineRuleOutput"], () => require("./getSqlVulnerabilityAssessmentBaselineRule"));

export { IotSecuritySolutionArgs } from "./iotSecuritySolution";
export type IotSecuritySolution = import("./iotSecuritySolution").IotSecuritySolution;
export const IotSecuritySolution: typeof import("./iotSecuritySolution").IotSecuritySolution = null as any;
utilities.lazyLoad(exports, ["IotSecuritySolution"], () => require("./iotSecuritySolution"));

export { JitNetworkAccessPolicyArgs } from "./jitNetworkAccessPolicy";
export type JitNetworkAccessPolicy = import("./jitNetworkAccessPolicy").JitNetworkAccessPolicy;
export const JitNetworkAccessPolicy: typeof import("./jitNetworkAccessPolicy").JitNetworkAccessPolicy = null as any;
utilities.lazyLoad(exports, ["JitNetworkAccessPolicy"], () => require("./jitNetworkAccessPolicy"));

export { SecurityConnectorArgs } from "./securityConnector";
export type SecurityConnector = import("./securityConnector").SecurityConnector;
export const SecurityConnector: typeof import("./securityConnector").SecurityConnector = null as any;
utilities.lazyLoad(exports, ["SecurityConnector"], () => require("./securityConnector"));

export { SecurityConnectorApplicationArgs } from "./securityConnectorApplication";
export type SecurityConnectorApplication = import("./securityConnectorApplication").SecurityConnectorApplication;
export const SecurityConnectorApplication: typeof import("./securityConnectorApplication").SecurityConnectorApplication = null as any;
utilities.lazyLoad(exports, ["SecurityConnectorApplication"], () => require("./securityConnectorApplication"));

export { SecurityOperatorArgs } from "./securityOperator";
export type SecurityOperator = import("./securityOperator").SecurityOperator;
export const SecurityOperator: typeof import("./securityOperator").SecurityOperator = null as any;
utilities.lazyLoad(exports, ["SecurityOperator"], () => require("./securityOperator"));

export { ServerVulnerabilityAssessmentArgs } from "./serverVulnerabilityAssessment";
export type ServerVulnerabilityAssessment = import("./serverVulnerabilityAssessment").ServerVulnerabilityAssessment;
export const ServerVulnerabilityAssessment: typeof import("./serverVulnerabilityAssessment").ServerVulnerabilityAssessment = null as any;
utilities.lazyLoad(exports, ["ServerVulnerabilityAssessment"], () => require("./serverVulnerabilityAssessment"));

export { SqlVulnerabilityAssessmentBaselineRuleArgs } from "./sqlVulnerabilityAssessmentBaselineRule";
export type SqlVulnerabilityAssessmentBaselineRule = import("./sqlVulnerabilityAssessmentBaselineRule").SqlVulnerabilityAssessmentBaselineRule;
export const SqlVulnerabilityAssessmentBaselineRule: typeof import("./sqlVulnerabilityAssessmentBaselineRule").SqlVulnerabilityAssessmentBaselineRule = null as any;
utilities.lazyLoad(exports, ["SqlVulnerabilityAssessmentBaselineRule"], () => require("./sqlVulnerabilityAssessmentBaselineRule"));


// Export enums:
export * from "../types/enums/security";

// Export sub-modules:
import * as v20150601preview from "./v20150601preview";
import * as v20170801preview from "./v20170801preview";
import * as v20190101 from "./v20190101";
import * as v20190101preview from "./v20190101preview";
import * as v20190801 from "./v20190801";
import * as v20200101 from "./v20200101";
import * as v20200101preview from "./v20200101preview";
import * as v20200701preview from "./v20200701preview";
import * as v20210115preview from "./v20210115preview";
import * as v20210601 from "./v20210601";
import * as v20210701preview from "./v20210701preview";
import * as v20210801preview from "./v20210801preview";
import * as v20211201preview from "./v20211201preview";
import * as v20220101preview from "./v20220101preview";
import * as v20220501preview from "./v20220501preview";
import * as v20220701preview from "./v20220701preview";
import * as v20220801preview from "./v20220801preview";
import * as v20221120preview from "./v20221120preview";
import * as v20230101preview from "./v20230101preview";
import * as v20230201preview from "./v20230201preview";
import * as v20230301preview from "./v20230301preview";

export {
    v20150601preview,
    v20170801preview,
    v20190101,
    v20190101preview,
    v20190801,
    v20200101,
    v20200101preview,
    v20200701preview,
    v20210115preview,
    v20210601,
    v20210701preview,
    v20210801preview,
    v20211201preview,
    v20220101preview,
    v20220501preview,
    v20220701preview,
    v20220801preview,
    v20221120preview,
    v20230101preview,
    v20230201preview,
    v20230301preview,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:security:APICollection":
                return new APICollection(name, <any>undefined, { urn })
            case "azure-native:security:AdaptiveApplicationControl":
                return new AdaptiveApplicationControl(name, <any>undefined, { urn })
            case "azure-native:security:AdvancedThreatProtection":
                return new AdvancedThreatProtection(name, <any>undefined, { urn })
            case "azure-native:security:Application":
                return new Application(name, <any>undefined, { urn })
            case "azure-native:security:Assessment":
                return new Assessment(name, <any>undefined, { urn })
            case "azure-native:security:AssessmentMetadataInSubscription":
                return new AssessmentMetadataInSubscription(name, <any>undefined, { urn })
            case "azure-native:security:DeviceSecurityGroup":
                return new DeviceSecurityGroup(name, <any>undefined, { urn })
            case "azure-native:security:IotSecuritySolution":
                return new IotSecuritySolution(name, <any>undefined, { urn })
            case "azure-native:security:JitNetworkAccessPolicy":
                return new JitNetworkAccessPolicy(name, <any>undefined, { urn })
            case "azure-native:security:SecurityConnector":
                return new SecurityConnector(name, <any>undefined, { urn })
            case "azure-native:security:SecurityConnectorApplication":
                return new SecurityConnectorApplication(name, <any>undefined, { urn })
            case "azure-native:security:SecurityOperator":
                return new SecurityOperator(name, <any>undefined, { urn })
            case "azure-native:security:ServerVulnerabilityAssessment":
                return new ServerVulnerabilityAssessment(name, <any>undefined, { urn })
            case "azure-native:security:SqlVulnerabilityAssessmentBaselineRule":
                return new SqlVulnerabilityAssessmentBaselineRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "security", _module)
