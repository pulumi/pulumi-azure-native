// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The Defender for Storage resource.
 * Azure REST API version: 2022-12-01-preview.
 */
export class DefenderForStorage extends pulumi.CustomResource {
    /**
     * Get an existing DefenderForStorage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DefenderForStorage {
        return new DefenderForStorage(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:security:DefenderForStorage';

    /**
     * Returns true if the given object is an instance of DefenderForStorage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefenderForStorage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefenderForStorage.__pulumiType;
    }

    /**
     * Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
     */
    public readonly capGBPerMonth!: pulumi.Output<number | undefined>;
    /**
     * Indicates whether Sensitive Data Discovery should be enabled.
     */
    public readonly isEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Upon failure or partial success. Additional data describing Sensitive Data Discovery enable/disable operation.
     */
    public /*out*/ readonly operationStatus!: pulumi.Output<outputs.security.OperationStatusResponse>;
    /**
     * Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
     */
    public readonly overrideSubscriptionLevelSettings!: pulumi.Output<boolean | undefined>;
    /**
     * Optional. Resource id of an Event Grid Topic to send scan results to.
     */
    public readonly scanResultsEventGridTopicResourceId!: pulumi.Output<string | undefined>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DefenderForStorage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefenderForStorageArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            resourceInputs["capGBPerMonth"] = args ? args.capGBPerMonth : undefined;
            resourceInputs["isEnabled"] = args ? args.isEnabled : undefined;
            resourceInputs["overrideSubscriptionLevelSettings"] = args ? args.overrideSubscriptionLevelSettings : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["scanResultsEventGridTopicResourceId"] = args ? args.scanResultsEventGridTopicResourceId : undefined;
            resourceInputs["settingName"] = args ? args.settingName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["operationStatus"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["capGBPerMonth"] = undefined /*out*/;
            resourceInputs["isEnabled"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["operationStatus"] = undefined /*out*/;
            resourceInputs["overrideSubscriptionLevelSettings"] = undefined /*out*/;
            resourceInputs["scanResultsEventGridTopicResourceId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:security/v20221201preview:DefenderForStorage" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DefenderForStorage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DefenderForStorage resource.
 */
export interface DefenderForStorageArgs {
    /**
     * Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
     */
    capGBPerMonth?: pulumi.Input<number>;
    /**
     * Indicates whether Sensitive Data Discovery should be enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
     */
    overrideSubscriptionLevelSettings?: pulumi.Input<boolean>;
    /**
     * The identifier of the resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Optional. Resource id of an Event Grid Topic to send scan results to.
     */
    scanResultsEventGridTopicResourceId?: pulumi.Input<string>;
    /**
     * Defender for Storage setting name.
     */
    settingName?: pulumi.Input<string>;
}
