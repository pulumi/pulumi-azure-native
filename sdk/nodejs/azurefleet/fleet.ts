// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * An Compute Fleet resource
 * Azure REST API version: 2024-05-01-preview.
 *
 * Other available API versions: 2023-11-01-preview, 2024-11-01.
 */
export class Fleet extends pulumi.CustomResource {
    /**
     * Get an existing Fleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Fleet {
        return new Fleet(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:azurefleet:Fleet';

    /**
     * Returns true if the given object is an instance of Fleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fleet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fleet.__pulumiType;
    }

    /**
     * Compute Profile to use for running user's workloads.
     */
    public readonly computeProfile!: pulumi.Output<outputs.azurefleet.ComputeProfileResponse>;
    /**
     * The managed service identities assigned to this resource.
     */
    public readonly identity!: pulumi.Output<outputs.azurefleet.ManagedServiceIdentityResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Details of the resource plan.
     */
    public readonly plan!: pulumi.Output<outputs.azurefleet.PlanResponse | undefined>;
    /**
     * The status of the last operation.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Configuration Options for Regular instances in Compute Fleet.
     */
    public readonly regularPriorityProfile!: pulumi.Output<outputs.azurefleet.RegularPriorityProfileResponse | undefined>;
    /**
     * Configuration Options for Spot instances in Compute Fleet.
     */
    public readonly spotPriorityProfile!: pulumi.Output<outputs.azurefleet.SpotPriorityProfileResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.azurefleet.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the time at which the Compute Fleet is created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Specifies the ID which uniquely identifies a Compute Fleet.
     */
    public /*out*/ readonly uniqueId!: pulumi.Output<string>;
    /**
     * List of VM sizes supported for Compute Fleet
     */
    public readonly vmSizesProfile!: pulumi.Output<outputs.azurefleet.VmSizeProfileResponse[]>;
    /**
     * Zones in which the Compute Fleet is available
     */
    public readonly zones!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Fleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.computeProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeProfile'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.vmSizesProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vmSizesProfile'");
            }
            resourceInputs["computeProfile"] = args ? args.computeProfile : undefined;
            resourceInputs["fleetName"] = args ? args.fleetName : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["plan"] = args ? args.plan : undefined;
            resourceInputs["regularPriorityProfile"] = args ? args.regularPriorityProfile : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["spotPriorityProfile"] = args ? args.spotPriorityProfile : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vmSizesProfile"] = args ? args.vmSizesProfile : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uniqueId"] = undefined /*out*/;
        } else {
            resourceInputs["computeProfile"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["plan"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["regularPriorityProfile"] = undefined /*out*/;
            resourceInputs["spotPriorityProfile"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uniqueId"] = undefined /*out*/;
            resourceInputs["vmSizesProfile"] = undefined /*out*/;
            resourceInputs["zones"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:azurefleet/v20231101preview:Fleet" }, { type: "azure-native:azurefleet/v20240501preview:Fleet" }, { type: "azure-native:azurefleet/v20241101:Fleet" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Fleet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Fleet resource.
 */
export interface FleetArgs {
    /**
     * Compute Profile to use for running user's workloads.
     */
    computeProfile: pulumi.Input<inputs.azurefleet.ComputeProfileArgs>;
    /**
     * The name of the Compute Fleet
     */
    fleetName?: pulumi.Input<string>;
    /**
     * The managed service identities assigned to this resource.
     */
    identity?: pulumi.Input<inputs.azurefleet.ManagedServiceIdentityArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Details of the resource plan.
     */
    plan?: pulumi.Input<inputs.azurefleet.PlanArgs>;
    /**
     * Configuration Options for Regular instances in Compute Fleet.
     */
    regularPriorityProfile?: pulumi.Input<inputs.azurefleet.RegularPriorityProfileArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Configuration Options for Spot instances in Compute Fleet.
     */
    spotPriorityProfile?: pulumi.Input<inputs.azurefleet.SpotPriorityProfileArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of VM sizes supported for Compute Fleet
     */
    vmSizesProfile: pulumi.Input<pulumi.Input<inputs.azurefleet.VmSizeProfileArgs>[]>;
    /**
     * Zones in which the Compute Fleet is available
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
