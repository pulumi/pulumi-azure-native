// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get a Fleet
 */
export function getFleet(args: GetFleetArgs, opts?: pulumi.InvokeOptions): Promise<GetFleetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:azurefleet/v20241101:getFleet", {
        "fleetName": args.fleetName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetFleetArgs {
    /**
     * The name of the Compute Fleet
     */
    fleetName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * An Compute Fleet resource
 */
export interface GetFleetResult {
    /**
     * Represents the configuration for additional locations where Fleet resources may be deployed.
     */
    readonly additionalLocationsProfile?: outputs.azurefleet.v20241101.AdditionalLocationsProfileResponse;
    /**
     * Compute Profile to use for running user's workloads.
     */
    readonly computeProfile: outputs.azurefleet.v20241101.ComputeProfileResponse;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The managed service identities assigned to this resource.
     */
    readonly identity?: outputs.azurefleet.v20241101.ManagedServiceIdentityResponse;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Details of the resource plan.
     */
    readonly plan?: outputs.azurefleet.v20241101.PlanResponse;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: string;
    /**
     * Configuration Options for Regular instances in Compute Fleet.
     */
    readonly regularPriorityProfile?: outputs.azurefleet.v20241101.RegularPriorityProfileResponse;
    /**
     * Configuration Options for Spot instances in Compute Fleet.
     */
    readonly spotPriorityProfile?: outputs.azurefleet.v20241101.SpotPriorityProfileResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.azurefleet.v20241101.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Specifies the time at which the Compute Fleet is created.
     */
    readonly timeCreated: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Specifies the ID which uniquely identifies a Compute Fleet.
     */
    readonly uniqueId: string;
    /**
     * Attribute based Fleet.
     */
    readonly vmAttributes?: outputs.azurefleet.v20241101.VMAttributesResponse;
    /**
     * List of VM sizes supported for Compute Fleet
     */
    readonly vmSizesProfile: outputs.azurefleet.v20241101.VmSizeProfileResponse[];
    /**
     * Zones in which the Compute Fleet is available
     */
    readonly zones?: string[];
}
/**
 * Get a Fleet
 */
export function getFleetOutput(args: GetFleetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFleetResult> {
    return pulumi.output(args).apply((a: any) => getFleet(a, opts))
}

export interface GetFleetOutputArgs {
    /**
     * The name of the Compute Fleet
     */
    fleetName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
