// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * List the storage accounts which are in use by related reports
 * Azure REST API version: 2024-06-27.
 */
export function listProviderActionInUseStorageAccounts(args?: ListProviderActionInUseStorageAccountsArgs, opts?: pulumi.InvokeOptions): Promise<ListProviderActionInUseStorageAccountsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:appcomplianceautomation:listProviderActionInUseStorageAccounts", {
        "subscriptionIds": args.subscriptionIds,
    }, opts);
}

export interface ListProviderActionInUseStorageAccountsArgs {
    /**
     * List of subscription ids to be query. If the list is null or empty, the API will query all the subscriptions of the user.
     */
    subscriptionIds?: string[];
}

/**
 * Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all subscriptions.
 */
export interface ListProviderActionInUseStorageAccountsResult {
    /**
     * The storage account list which in use in related reports.
     */
    readonly storageAccountList?: outputs.appcomplianceautomation.StorageInfoResponse[];
}
/**
 * List the storage accounts which are in use by related reports
 * Azure REST API version: 2024-06-27.
 */
export function listProviderActionInUseStorageAccountsOutput(args?: ListProviderActionInUseStorageAccountsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListProviderActionInUseStorageAccountsResult> {
    return pulumi.output(args).apply((a: any) => listProviderActionInUseStorageAccounts(a, opts))
}

export interface ListProviderActionInUseStorageAccountsOutputArgs {
    /**
     * List of subscription ids to be query. If the list is null or empty, the API will query all the subscriptions of the user.
     */
    subscriptionIds?: pulumi.Input<pulumi.Input<string>[]>;
}
