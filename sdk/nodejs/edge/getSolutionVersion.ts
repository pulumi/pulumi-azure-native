// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Get a Solution Version Resource
 *
 * Uses Azure REST API version 2025-06-01.
 */
export function getSolutionVersion(args: GetSolutionVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetSolutionVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:edge:getSolutionVersion", {
        "resourceGroupName": args.resourceGroupName,
        "solutionName": args.solutionName,
        "solutionVersionName": args.solutionVersionName,
        "targetName": args.targetName,
    }, opts);
}

export interface GetSolutionVersionArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Name of the solution
     */
    solutionName: string;
    /**
     * Name of the solution version
     */
    solutionVersionName: string;
    /**
     * Name of the target
     */
    targetName: string;
}

/**
 * Solution Version Resource. It has the resolved configuration along with edge specification.
 */
export interface GetSolutionVersionResult {
    /**
     * The Azure API version of the resource.
     */
    readonly azureApiVersion: string;
    /**
     * If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
     */
    readonly eTag: string;
    /**
     * The complex type of the extended location.
     */
    readonly extendedLocation?: outputs.edge.AzureResourceManagerCommonTypesExtendedLocationResponse;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The resource-specific properties for this resource.
     */
    readonly properties: outputs.edge.SolutionVersionPropertiesResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.edge.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get a Solution Version Resource
 *
 * Uses Azure REST API version 2025-06-01.
 */
export function getSolutionVersionOutput(args: GetSolutionVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSolutionVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:edge:getSolutionVersion", {
        "resourceGroupName": args.resourceGroupName,
        "solutionName": args.solutionName,
        "solutionVersionName": args.solutionVersionName,
        "targetName": args.targetName,
    }, opts);
}

export interface GetSolutionVersionOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the solution
     */
    solutionName: pulumi.Input<string>;
    /**
     * Name of the solution version
     */
    solutionVersionName: pulumi.Input<string>;
    /**
     * Name of the target
     */
    targetName: pulumi.Input<string>;
}
