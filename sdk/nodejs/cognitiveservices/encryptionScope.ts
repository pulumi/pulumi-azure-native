// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Cognitive Services EncryptionScope
 *
 * Uses Azure REST API version 2024-10-01. In version 2.x of the Azure Native provider, it used API version 2023-10-01-preview.
 *
 * Other available API versions: 2023-10-01-preview, 2024-04-01-preview, 2024-06-01-preview, 2025-04-01-preview, 2025-06-01, 2025-07-01-preview, 2025-09-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cognitiveservices [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class EncryptionScope extends pulumi.CustomResource {
    /**
     * Get an existing EncryptionScope resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EncryptionScope {
        return new EncryptionScope(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:cognitiveservices:EncryptionScope';

    /**
     * Returns true if the given object is an instance of EncryptionScope.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EncryptionScope {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EncryptionScope.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * Resource Etag.
     */
    declare public /*out*/ readonly etag: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Properties of Cognitive Services EncryptionScope.
     */
    declare public readonly properties: pulumi.Output<outputs.cognitiveservices.EncryptionScopePropertiesResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.cognitiveservices.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a EncryptionScope resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EncryptionScopeArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.accountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["accountName"] = args?.accountName;
            resourceInputs["encryptionScopeName"] = args?.encryptionScopeName;
            resourceInputs["properties"] = args ? (args.properties ? pulumi.output(args.properties).apply(inputs.cognitiveservices.encryptionScopePropertiesArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:cognitiveservices/v20231001preview:EncryptionScope" }, { type: "azure-native:cognitiveservices/v20240401preview:EncryptionScope" }, { type: "azure-native:cognitiveservices/v20240601preview:EncryptionScope" }, { type: "azure-native:cognitiveservices/v20241001:EncryptionScope" }, { type: "azure-native:cognitiveservices/v20250401preview:EncryptionScope" }, { type: "azure-native:cognitiveservices/v20250601:EncryptionScope" }, { type: "azure-native:cognitiveservices/v20250701preview:EncryptionScope" }, { type: "azure-native:cognitiveservices/v20250901:EncryptionScope" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(EncryptionScope.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EncryptionScope resource.
 */
export interface EncryptionScopeArgs {
    /**
     * The name of Cognitive Services account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the encryptionScope associated with the Cognitive Services Account
     */
    encryptionScopeName?: pulumi.Input<string>;
    /**
     * Properties of Cognitive Services EncryptionScope.
     */
    properties?: pulumi.Input<inputs.cognitiveservices.EncryptionScopePropertiesArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
