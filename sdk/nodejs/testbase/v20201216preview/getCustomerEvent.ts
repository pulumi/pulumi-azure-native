// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * The Customer Notification Event resource.
 */
export function getCustomerEvent(args: GetCustomerEventArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomerEventResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:testbase/v20201216preview:getCustomerEvent", {
        "customerEventName": args.customerEventName,
        "resourceGroupName": args.resourceGroupName,
        "testBaseAccountName": args.testBaseAccountName,
    }, opts);
}

export interface GetCustomerEventArgs {
    /**
     * The resource name of the Test Base Customer event.
     */
    customerEventName: string;
    /**
     * The name of the resource group that contains the resource.
     */
    resourceGroupName: string;
    /**
     * The resource name of the Test Base Account.
     */
    testBaseAccountName: string;
}

/**
 * The Customer Notification Event resource.
 */
export interface GetCustomerEventResult {
    /**
     * The name of the event subscribed to.
     */
    readonly eventName: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * The notification event receivers.
     */
    readonly receivers: outputs.testbase.v20201216preview.NotificationEventReceiverResponse[];
    /**
     * The system metadata relating to this resource
     */
    readonly systemData: outputs.testbase.v20201216preview.SystemDataResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}

export function getCustomerEventOutput(args: GetCustomerEventOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomerEventResult> {
    return pulumi.output(args).apply(a => getCustomerEvent(a, opts))
}

export interface GetCustomerEventOutputArgs {
    /**
     * The resource name of the Test Base Customer event.
     */
    customerEventName: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The resource name of the Test Base Account.
     */
    testBaseAccountName: pulumi.Input<string>;
}
