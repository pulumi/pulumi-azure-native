// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Description of an hostingEnvironment (App Service Environment)
 */
/** @deprecated Version 2015-08-01 will be removed in v2 of the provider. */
export function getManagedHostingEnvironment(args: GetManagedHostingEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedHostingEnvironmentResult> {
    pulumi.log.warn("getManagedHostingEnvironment is deprecated: Version 2015-08-01 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:web/v20150801:getManagedHostingEnvironment", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetManagedHostingEnvironmentArgs {
    /**
     * Name of managed hosting environment
     */
    name: string;
    /**
     * Name of resource group
     */
    resourceGroupName: string;
}

/**
 * Description of a managed hosting environment
 */
export interface GetManagedHostingEnvironmentResult {
    /**
     * Resource id of the api management account associated with this managed hosting environment (read only)
     */
    readonly apiManagementAccount?: string;
    /**
     * DNS suffix of the managed hosting environment
     */
    readonly dnsSuffix?: string;
    /**
     * True/false indicating whether the managed hosting environment is healthy
     */
    readonly environmentIsHealthy?: boolean;
    /**
     * Detailed message about with results of the last check of the managed hosting environment
     */
    readonly environmentStatus?: string;
    /**
     * Resource Id
     */
    readonly id?: string;
    /**
     * Number of ip ssl addresses reserved for the managed hosting environment
     */
    readonly ipsslAddressCount?: number;
    /**
     * Kind of resource
     */
    readonly kind?: string;
    /**
     * Resource Location
     */
    readonly location: string;
    /**
     * Resource Name
     */
    readonly name?: string;
    /**
     * Resource group of the managed hosting environment (read only)
     */
    readonly resourceGroup?: string;
    /**
     * Current status of the managed hosting environment
     */
    readonly status: string;
    /**
     * Subscription of the managed hosting environment (read only)
     */
    readonly subscriptionId?: string;
    /**
     * True/false indicating whether the managed hosting environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
     *             (most likely because NSG blocked the incoming traffic)
     */
    readonly suspended?: boolean;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type?: string;
    /**
     * Description of the managed hosting environment's virtual network
     */
    readonly virtualNetwork?: outputs.web.v20150801.VirtualNetworkProfileResponse;
}
/**
 * Description of an hostingEnvironment (App Service Environment)
 */
/** @deprecated Version 2015-08-01 will be removed in v2 of the provider. */
export function getManagedHostingEnvironmentOutput(args: GetManagedHostingEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedHostingEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getManagedHostingEnvironment(a, opts))
}

export interface GetManagedHostingEnvironmentOutputArgs {
    /**
     * Name of managed hosting environment
     */
    name: pulumi.Input<string>;
    /**
     * Name of resource group
     */
    resourceGroupName: pulumi.Input<string>;
}
