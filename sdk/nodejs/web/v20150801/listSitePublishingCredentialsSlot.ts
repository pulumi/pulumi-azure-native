// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Represents user credentials used for publishing activity
 */
export function listSitePublishingCredentialsSlot(args: ListSitePublishingCredentialsSlotArgs, opts?: pulumi.InvokeOptions): Promise<ListSitePublishingCredentialsSlotResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:web/v20150801:listSitePublishingCredentialsSlot", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "slot": args.slot,
    }, opts);
}

export interface ListSitePublishingCredentialsSlotArgs {
    /**
     * Name of web app
     */
    name: string;
    /**
     * Name of resource group
     */
    resourceGroupName: string;
    /**
     * Name of web app slot. If not specified then will default to production slot.
     */
    slot: string;
}

/**
 * Represents user credentials used for publishing activity
 */
export interface ListSitePublishingCredentialsSlotResult {
    /**
     * Resource Id
     */
    readonly id?: string;
    /**
     * Kind of resource
     */
    readonly kind?: string;
    /**
     * Resource Location
     */
    readonly location: string;
    /**
     * Resource Name
     */
    readonly name?: string;
    /**
     * Password used for publishing
     */
    readonly publishingPassword?: string;
    /**
     * Username used for publishing
     */
    readonly publishingUserName?: string;
    /**
     * Service Control Manager URI, including username and password
     */
    readonly scmUri?: string;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type?: string;
}
/**
 * Represents user credentials used for publishing activity
 */
export function listSitePublishingCredentialsSlotOutput(args: ListSitePublishingCredentialsSlotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListSitePublishingCredentialsSlotResult> {
    return pulumi.output(args).apply((a: any) => listSitePublishingCredentialsSlot(a, opts))
}

export interface ListSitePublishingCredentialsSlotOutputArgs {
    /**
     * Name of web app
     */
    name: pulumi.Input<string>;
    /**
     * Name of resource group
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of web app slot. If not specified then will default to production slot.
     */
    slot: pulumi.Input<string>;
}
