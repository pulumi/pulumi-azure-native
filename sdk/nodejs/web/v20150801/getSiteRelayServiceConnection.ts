// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Class that represents a BizTalk Hybrid Connection
 */
/** @deprecated Version 2015-08-01 will be removed in v2 of the provider. */
export function getSiteRelayServiceConnection(args: GetSiteRelayServiceConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetSiteRelayServiceConnectionResult> {
    pulumi.log.warn("getSiteRelayServiceConnection is deprecated: Version 2015-08-01 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:web/v20150801:getSiteRelayServiceConnection", {
        "entityName": args.entityName,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetSiteRelayServiceConnectionArgs {
    /**
     * The name by which the Hybrid Connection is identified
     */
    entityName: string;
    /**
     * The name of the web app
     */
    name: string;
    /**
     * The resource group name
     */
    resourceGroupName: string;
}

/**
 * Class that represents a BizTalk Hybrid Connection
 */
export interface GetSiteRelayServiceConnectionResult {
    readonly biztalkUri?: string;
    readonly entityConnectionString?: string;
    readonly entityName?: string;
    readonly hostname?: string;
    /**
     * Resource Id
     */
    readonly id?: string;
    /**
     * Kind of resource
     */
    readonly kind?: string;
    /**
     * Resource Location
     */
    readonly location: string;
    /**
     * Resource Name
     */
    readonly name?: string;
    readonly port?: number;
    readonly resourceConnectionString?: string;
    readonly resourceType?: string;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type?: string;
}
/**
 * Class that represents a BizTalk Hybrid Connection
 */
/** @deprecated Version 2015-08-01 will be removed in v2 of the provider. */
export function getSiteRelayServiceConnectionOutput(args: GetSiteRelayServiceConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSiteRelayServiceConnectionResult> {
    return pulumi.output(args).apply((a: any) => getSiteRelayServiceConnection(a, opts))
}

export interface GetSiteRelayServiceConnectionOutputArgs {
    /**
     * The name by which the Hybrid Connection is identified
     */
    entityName: pulumi.Input<string>;
    /**
     * The name of the web app
     */
    name: pulumi.Input<string>;
    /**
     * The resource group name
     */
    resourceGroupName: pulumi.Input<string>;
}
