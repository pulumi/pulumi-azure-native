// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Represents a web app
 */
export class Site extends pulumi.CustomResource {
    /**
     * Get an existing Site resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Site {
        return new Site(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:web/v20150801:Site';

    /**
     * Returns true if the given object is an instance of Site.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Site {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Site.__pulumiType;
    }

    /**
     * Management information availability state for the web app. Possible values are Normal or Limited. 
     *             Normal means that the site is running correctly and that management information for the site is available. 
     *             Limited means that only partial management information for the site is available and that detailed site information is unavailable.
     */
    public /*out*/ readonly availabilityState!: pulumi.Output<string>;
    /**
     * Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
     */
    public readonly clientAffinityEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies if the client certificate is enabled for the web app
     */
    public readonly clientCertEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * This is only valid for web app creation. If specified, web app is cloned from 
     *             a source web app
     */
    public readonly cloningInfo!: pulumi.Output<outputs.web.v20150801.CloningInfoResponse | undefined>;
    /**
     * Size of a function container
     */
    public readonly containerSize!: pulumi.Output<number | undefined>;
    /**
     * Default hostname of the web app
     */
    public /*out*/ readonly defaultHostName!: pulumi.Output<string>;
    /**
     * True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled
     *             the app is not served on those hostnames
     */
    public /*out*/ readonly enabledHostNames!: pulumi.Output<string[]>;
    /**
     * Name of gateway app associated with web app
     */
    public readonly gatewaySiteName!: pulumi.Output<string | undefined>;
    /**
     * Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
     */
    public readonly hostNameSslStates!: pulumi.Output<outputs.web.v20150801.HostNameSslStateResponse[] | undefined>;
    /**
     * Hostnames associated with web app
     */
    public /*out*/ readonly hostNames!: pulumi.Output<string[]>;
    /**
     * Specifies if the public hostnames are disabled the web app.
     *             If set to true the app is only accessible via API Management process
     */
    public readonly hostNamesDisabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specification for the hosting environment (App Service Environment) to use for the web app
     */
    public readonly hostingEnvironmentProfile!: pulumi.Output<outputs.web.v20150801.HostingEnvironmentProfileResponse | undefined>;
    /**
     * Site is a default container
     */
    public /*out*/ readonly isDefaultContainer!: pulumi.Output<boolean>;
    /**
     * Kind of resource
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Last time web app was modified in UTC
     */
    public /*out*/ readonly lastModifiedTimeUtc!: pulumi.Output<string>;
    /**
     * Resource Location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Maximum number of workers
     *             This only applies to function container
     */
    public readonly maxNumberOfWorkers!: pulumi.Output<number | undefined>;
    public readonly microService!: pulumi.Output<string | undefined>;
    /**
     * Resource Name
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.
     */
    public /*out*/ readonly outboundIpAddresses!: pulumi.Output<string>;
    /**
     * If set indicates whether web app is deployed as a premium app
     */
    public /*out*/ readonly premiumAppDeployed!: pulumi.Output<boolean>;
    /**
     * Name of repository site
     */
    public /*out*/ readonly repositorySiteName!: pulumi.Output<string>;
    /**
     * Resource group web app belongs to
     */
    public /*out*/ readonly resourceGroup!: pulumi.Output<string>;
    /**
     * If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
     */
    public readonly scmSiteAlsoStopped!: pulumi.Output<boolean | undefined>;
    public readonly serverFarmId!: pulumi.Output<string | undefined>;
    /**
     * Configuration of web app
     */
    public readonly siteConfig!: pulumi.Output<outputs.web.v20150801.SiteConfigResponse | undefined>;
    /**
     * State of the web app
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Read-only property that specifies which slot this app will swap into
     */
    public /*out*/ readonly targetSwapSlot!: pulumi.Output<string>;
    /**
     * Read-only list of Azure Traffic manager hostnames associated with web app
     */
    public /*out*/ readonly trafficManagerHostNames!: pulumi.Output<string[]>;
    /**
     * Resource type
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * State indicating whether web app has exceeded its quota usage
     */
    public /*out*/ readonly usageState!: pulumi.Output<string>;

    /**
     * Create a Site resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SiteArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["clientAffinityEnabled"] = args ? args.clientAffinityEnabled : undefined;
            inputs["clientCertEnabled"] = args ? args.clientCertEnabled : undefined;
            inputs["cloningInfo"] = args ? args.cloningInfo : undefined;
            inputs["containerSize"] = args ? args.containerSize : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["forceDnsRegistration"] = args ? args.forceDnsRegistration : undefined;
            inputs["gatewaySiteName"] = args ? args.gatewaySiteName : undefined;
            inputs["hostNameSslStates"] = args ? args.hostNameSslStates : undefined;
            inputs["hostNamesDisabled"] = args ? args.hostNamesDisabled : undefined;
            inputs["hostingEnvironmentProfile"] = args ? args.hostingEnvironmentProfile : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["maxNumberOfWorkers"] = args ? args.maxNumberOfWorkers : undefined;
            inputs["microService"] = args ? args.microService : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["scmSiteAlsoStopped"] = args ? args.scmSiteAlsoStopped : undefined;
            inputs["serverFarmId"] = args ? args.serverFarmId : undefined;
            inputs["siteConfig"] = args ? args.siteConfig : undefined;
            inputs["skipCustomDomainVerification"] = args ? args.skipCustomDomainVerification : undefined;
            inputs["skipDnsRegistration"] = args ? args.skipDnsRegistration : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["ttlInSeconds"] = args ? args.ttlInSeconds : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["availabilityState"] = undefined /*out*/;
            inputs["defaultHostName"] = undefined /*out*/;
            inputs["enabledHostNames"] = undefined /*out*/;
            inputs["hostNames"] = undefined /*out*/;
            inputs["isDefaultContainer"] = undefined /*out*/;
            inputs["lastModifiedTimeUtc"] = undefined /*out*/;
            inputs["outboundIpAddresses"] = undefined /*out*/;
            inputs["premiumAppDeployed"] = undefined /*out*/;
            inputs["repositorySiteName"] = undefined /*out*/;
            inputs["resourceGroup"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["targetSwapSlot"] = undefined /*out*/;
            inputs["trafficManagerHostNames"] = undefined /*out*/;
            inputs["usageState"] = undefined /*out*/;
        } else {
            inputs["availabilityState"] = undefined /*out*/;
            inputs["clientAffinityEnabled"] = undefined /*out*/;
            inputs["clientCertEnabled"] = undefined /*out*/;
            inputs["cloningInfo"] = undefined /*out*/;
            inputs["containerSize"] = undefined /*out*/;
            inputs["defaultHostName"] = undefined /*out*/;
            inputs["enabled"] = undefined /*out*/;
            inputs["enabledHostNames"] = undefined /*out*/;
            inputs["gatewaySiteName"] = undefined /*out*/;
            inputs["hostNameSslStates"] = undefined /*out*/;
            inputs["hostNames"] = undefined /*out*/;
            inputs["hostNamesDisabled"] = undefined /*out*/;
            inputs["hostingEnvironmentProfile"] = undefined /*out*/;
            inputs["isDefaultContainer"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["lastModifiedTimeUtc"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["maxNumberOfWorkers"] = undefined /*out*/;
            inputs["microService"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["outboundIpAddresses"] = undefined /*out*/;
            inputs["premiumAppDeployed"] = undefined /*out*/;
            inputs["repositorySiteName"] = undefined /*out*/;
            inputs["resourceGroup"] = undefined /*out*/;
            inputs["scmSiteAlsoStopped"] = undefined /*out*/;
            inputs["serverFarmId"] = undefined /*out*/;
            inputs["siteConfig"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["targetSwapSlot"] = undefined /*out*/;
            inputs["trafficManagerHostNames"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["usageState"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:web/latest:Site" }, { type: "azure-nextgen:web/v20160801:Site" }, { type: "azure-nextgen:web/v20180201:Site" }, { type: "azure-nextgen:web/v20181101:Site" }, { type: "azure-nextgen:web/v20190801:Site" }, { type: "azure-nextgen:web/v20200601:Site" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(Site.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Site resource.
 */
export interface SiteArgs {
    /**
     * Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
     */
    readonly clientAffinityEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies if the client certificate is enabled for the web app
     */
    readonly clientCertEnabled?: pulumi.Input<boolean>;
    /**
     * This is only valid for web app creation. If specified, web app is cloned from 
     *             a source web app
     */
    readonly cloningInfo?: pulumi.Input<inputs.web.v20150801.CloningInfo>;
    /**
     * Size of a function container
     */
    readonly containerSize?: pulumi.Input<number>;
    /**
     * True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * If true, web app hostname is force registered with DNS
     */
    readonly forceDnsRegistration?: pulumi.Input<string>;
    /**
     * Name of gateway app associated with web app
     */
    readonly gatewaySiteName?: pulumi.Input<string>;
    /**
     * Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
     */
    readonly hostNameSslStates?: pulumi.Input<pulumi.Input<inputs.web.v20150801.HostNameSslState>[]>;
    /**
     * Specifies if the public hostnames are disabled the web app.
     *             If set to true the app is only accessible via API Management process
     */
    readonly hostNamesDisabled?: pulumi.Input<boolean>;
    /**
     * Specification for the hosting environment (App Service Environment) to use for the web app
     */
    readonly hostingEnvironmentProfile?: pulumi.Input<inputs.web.v20150801.HostingEnvironmentProfile>;
    /**
     * Resource Id
     */
    readonly id?: pulumi.Input<string>;
    /**
     * Kind of resource
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * Resource Location
     */
    readonly location: pulumi.Input<string>;
    /**
     * Maximum number of workers
     *             This only applies to function container
     */
    readonly maxNumberOfWorkers?: pulumi.Input<number>;
    readonly microService?: pulumi.Input<string>;
    /**
     * Resource Name
     */
    readonly name: pulumi.Input<string>;
    /**
     * Name of the resource group
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
     */
    readonly scmSiteAlsoStopped?: pulumi.Input<boolean>;
    readonly serverFarmId?: pulumi.Input<string>;
    /**
     * Configuration of web app
     */
    readonly siteConfig?: pulumi.Input<inputs.web.v20150801.SiteConfig>;
    /**
     * If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.
     */
    readonly skipCustomDomainVerification?: pulumi.Input<string>;
    /**
     * If true web app hostname is not registered with DNS on creation. This parameter is
     *             only used for app creation
     */
    readonly skipDnsRegistration?: pulumi.Input<string>;
    /**
     * Resource tags
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Time to live in seconds for web app's default domain name
     */
    readonly ttlInSeconds?: pulumi.Input<string>;
    /**
     * Resource type
     */
    readonly type?: pulumi.Input<string>;
}
