// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Configuration of Azure web site
 *
 * @deprecated Version 2015-08-01 will be removed in v2 of the provider.
 */
export class SiteLogsConfig extends pulumi.CustomResource {
    /**
     * Get an existing SiteLogsConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SiteLogsConfig {
        pulumi.log.warn("SiteLogsConfig is deprecated: Version 2015-08-01 will be removed in v2 of the provider.")
        return new SiteLogsConfig(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:web/v20150801:SiteLogsConfig';

    /**
     * Returns true if the given object is an instance of SiteLogsConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SiteLogsConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SiteLogsConfig.__pulumiType;
    }

    /**
     * Application logs configuration
     */
    public readonly applicationLogs!: pulumi.Output<outputs.web.v20150801.ApplicationLogsConfigResponse | undefined>;
    /**
     * Detailed error messages configuration
     */
    public readonly detailedErrorMessages!: pulumi.Output<outputs.web.v20150801.EnabledConfigResponse | undefined>;
    /**
     * Failed requests tracing configuration
     */
    public readonly failedRequestsTracing!: pulumi.Output<outputs.web.v20150801.EnabledConfigResponse | undefined>;
    /**
     * Http logs configuration
     */
    public readonly httpLogs!: pulumi.Output<outputs.web.v20150801.HttpLogsConfigResponse | undefined>;
    /**
     * Kind of resource
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Resource Location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource Name
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a SiteLogsConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2015-08-01 will be removed in v2 of the provider. */
    constructor(name: string, args: SiteLogsConfigArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("SiteLogsConfig is deprecated: Version 2015-08-01 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["applicationLogs"] = args ? args.applicationLogs : undefined;
            resourceInputs["detailedErrorMessages"] = args ? args.detailedErrorMessages : undefined;
            resourceInputs["failedRequestsTracing"] = args ? args.failedRequestsTracing : undefined;
            resourceInputs["httpLogs"] = args ? args.httpLogs : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        } else {
            resourceInputs["applicationLogs"] = undefined /*out*/;
            resourceInputs["detailedErrorMessages"] = undefined /*out*/;
            resourceInputs["failedRequestsTracing"] = undefined /*out*/;
            resourceInputs["httpLogs"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:web:SiteLogsConfig" }, { type: "azure-native:web/v20160801:SiteLogsConfig" }, { type: "azure-native:web/v20180201:SiteLogsConfig" }, { type: "azure-native:web/v20181101:SiteLogsConfig" }, { type: "azure-native:web/v20190801:SiteLogsConfig" }, { type: "azure-native:web/v20200601:SiteLogsConfig" }, { type: "azure-native:web/v20200901:SiteLogsConfig" }, { type: "azure-native:web/v20201001:SiteLogsConfig" }, { type: "azure-native:web/v20201201:SiteLogsConfig" }, { type: "azure-native:web/v20210101:SiteLogsConfig" }, { type: "azure-native:web/v20210115:SiteLogsConfig" }, { type: "azure-native:web/v20210201:SiteLogsConfig" }, { type: "azure-native:web/v20210301:SiteLogsConfig" }, { type: "azure-native:web/v20220301:SiteLogsConfig" }, { type: "azure-native:web/v20220901:SiteLogsConfig" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(SiteLogsConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SiteLogsConfig resource.
 */
export interface SiteLogsConfigArgs {
    /**
     * Application logs configuration
     */
    applicationLogs?: pulumi.Input<inputs.web.v20150801.ApplicationLogsConfigArgs>;
    /**
     * Detailed error messages configuration
     */
    detailedErrorMessages?: pulumi.Input<inputs.web.v20150801.EnabledConfigArgs>;
    /**
     * Failed requests tracing configuration
     */
    failedRequestsTracing?: pulumi.Input<inputs.web.v20150801.EnabledConfigArgs>;
    /**
     * Http logs configuration
     */
    httpLogs?: pulumi.Input<inputs.web.v20150801.HttpLogsConfigArgs>;
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
    /**
     * Kind of resource
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource Location
     */
    location?: pulumi.Input<string>;
    /**
     * Resource Name
     */
    name: pulumi.Input<string>;
    /**
     * Name of resource group
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource type
     */
    type?: pulumi.Input<string>;
}
