// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getSiteSlot(args: GetSiteSlotArgs, opts?: pulumi.InvokeOptions): Promise<GetSiteSlotResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:web/v20150801:getSiteSlot", {
        "name": args.name,
        "propertiesToInclude": args.propertiesToInclude,
        "resourceGroupName": args.resourceGroupName,
        "slot": args.slot,
    }, opts);
}

export interface GetSiteSlotArgs {
    /**
     * Name of web app
     */
    readonly name: string;
    /**
     * Additional web app properties included in the response
     */
    readonly propertiesToInclude?: string;
    /**
     * Name of resource group
     */
    readonly resourceGroupName: string;
    /**
     * Name of web app slot. If not specified then will default to production slot.
     */
    readonly slot: string;
}

/**
 * Represents a web app
 */
export interface GetSiteSlotResult {
    /**
     * Management information availability state for the web app. Possible values are Normal or Limited. 
     *             Normal means that the site is running correctly and that management information for the site is available. 
     *             Limited means that only partial management information for the site is available and that detailed site information is unavailable.
     */
    readonly availabilityState: string;
    /**
     * Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
     */
    readonly clientAffinityEnabled?: boolean;
    /**
     * Specifies if the client certificate is enabled for the web app
     */
    readonly clientCertEnabled?: boolean;
    /**
     * This is only valid for web app creation. If specified, web app is cloned from 
     *             a source web app
     */
    readonly cloningInfo?: outputs.web.v20150801.CloningInfoResponse;
    /**
     * Size of a function container
     */
    readonly containerSize?: number;
    /**
     * Default hostname of the web app
     */
    readonly defaultHostName: string;
    /**
     * True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
     */
    readonly enabled?: boolean;
    /**
     * Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled
     *             the app is not served on those hostnames
     */
    readonly enabledHostNames: string[];
    /**
     * Name of gateway app associated with web app
     */
    readonly gatewaySiteName?: string;
    /**
     * Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
     */
    readonly hostNameSslStates?: outputs.web.v20150801.HostNameSslStateResponse[];
    /**
     * Hostnames associated with web app
     */
    readonly hostNames: string[];
    /**
     * Specifies if the public hostnames are disabled the web app.
     *             If set to true the app is only accessible via API Management process
     */
    readonly hostNamesDisabled?: boolean;
    /**
     * Specification for the hosting environment (App Service Environment) to use for the web app
     */
    readonly hostingEnvironmentProfile?: outputs.web.v20150801.HostingEnvironmentProfileResponse;
    /**
     * Site is a default container
     */
    readonly isDefaultContainer: boolean;
    /**
     * Kind of resource
     */
    readonly kind?: string;
    /**
     * Last time web app was modified in UTC
     */
    readonly lastModifiedTimeUtc: string;
    /**
     * Resource Location
     */
    readonly location: string;
    /**
     * Maximum number of workers
     *             This only applies to function container
     */
    readonly maxNumberOfWorkers?: number;
    readonly microService?: string;
    /**
     * Resource Name
     */
    readonly name?: string;
    /**
     * List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.
     */
    readonly outboundIpAddresses: string;
    /**
     * If set indicates whether web app is deployed as a premium app
     */
    readonly premiumAppDeployed: boolean;
    /**
     * Name of repository site
     */
    readonly repositorySiteName: string;
    /**
     * Resource group web app belongs to
     */
    readonly resourceGroup: string;
    /**
     * If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
     */
    readonly scmSiteAlsoStopped?: boolean;
    readonly serverFarmId?: string;
    /**
     * Configuration of web app
     */
    readonly siteConfig?: outputs.web.v20150801.SiteConfigResponse;
    /**
     * State of the web app
     */
    readonly state: string;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Read-only property that specifies which slot this app will swap into
     */
    readonly targetSwapSlot: string;
    /**
     * Read-only list of Azure Traffic manager hostnames associated with web app
     */
    readonly trafficManagerHostNames: string[];
    /**
     * Resource type
     */
    readonly type?: string;
    /**
     * State indicating whether web app has exceeded its quota usage
     */
    readonly usageState: string;
}
