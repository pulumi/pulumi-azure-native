// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Class that represents a BizTalk Hybrid Connection
 *
 * @deprecated Version 2015-08-01 will be removed in v2 of the provider.
 */
export class SiteRelayServiceConnectionSlot extends pulumi.CustomResource {
    /**
     * Get an existing SiteRelayServiceConnectionSlot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SiteRelayServiceConnectionSlot {
        pulumi.log.warn("SiteRelayServiceConnectionSlot is deprecated: Version 2015-08-01 will be removed in v2 of the provider.")
        return new SiteRelayServiceConnectionSlot(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:web/v20150801:SiteRelayServiceConnectionSlot';

    /**
     * Returns true if the given object is an instance of SiteRelayServiceConnectionSlot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SiteRelayServiceConnectionSlot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SiteRelayServiceConnectionSlot.__pulumiType;
    }

    public readonly biztalkUri!: pulumi.Output<string | undefined>;
    public readonly entityConnectionString!: pulumi.Output<string | undefined>;
    public readonly entityName!: pulumi.Output<string | undefined>;
    public readonly hostname!: pulumi.Output<string | undefined>;
    /**
     * Kind of resource
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Resource Location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource Name
     */
    public readonly name!: pulumi.Output<string | undefined>;
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly resourceConnectionString!: pulumi.Output<string | undefined>;
    public readonly resourceType!: pulumi.Output<string | undefined>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a SiteRelayServiceConnectionSlot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2015-08-01 will be removed in v2 of the provider. */
    constructor(name: string, args: SiteRelayServiceConnectionSlotArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("SiteRelayServiceConnectionSlot is deprecated: Version 2015-08-01 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.slot === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slot'");
            }
            resourceInputs["biztalkUri"] = args ? args.biztalkUri : undefined;
            resourceInputs["entityConnectionString"] = args ? args.entityConnectionString : undefined;
            resourceInputs["entityName"] = args ? args.entityName : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["resourceConnectionString"] = args ? args.resourceConnectionString : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["slot"] = args ? args.slot : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        } else {
            resourceInputs["biztalkUri"] = undefined /*out*/;
            resourceInputs["entityConnectionString"] = undefined /*out*/;
            resourceInputs["entityName"] = undefined /*out*/;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["resourceConnectionString"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:web:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20160801:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20180201:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20181101:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20190801:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20200601:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20200901:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20201001:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20201201:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20210101:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20210115:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20210201:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20210301:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20220301:SiteRelayServiceConnectionSlot" }, { type: "azure-native:web/v20220901:SiteRelayServiceConnectionSlot" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(SiteRelayServiceConnectionSlot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SiteRelayServiceConnectionSlot resource.
 */
export interface SiteRelayServiceConnectionSlotArgs {
    biztalkUri?: pulumi.Input<string>;
    entityConnectionString?: pulumi.Input<string>;
    entityName?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
    /**
     * Kind of resource
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource Location
     */
    location?: pulumi.Input<string>;
    /**
     * Resource Name
     */
    name: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    resourceConnectionString?: pulumi.Input<string>;
    /**
     * The resource group name
     */
    resourceGroupName: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    /**
     * The name of the slot for the web app.
     */
    slot: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource type
     */
    type?: pulumi.Input<string>;
}
