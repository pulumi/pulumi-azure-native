// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetWebAppDiagnosticLogsConfigurationSlotArgs, GetWebAppDiagnosticLogsConfigurationSlotResult, GetWebAppDiagnosticLogsConfigurationSlotOutputArgs } from "./getWebAppDiagnosticLogsConfigurationSlot";
export const getWebAppDiagnosticLogsConfigurationSlot: typeof import("./getWebAppDiagnosticLogsConfigurationSlot").getWebAppDiagnosticLogsConfigurationSlot = null as any;
export const getWebAppDiagnosticLogsConfigurationSlotOutput: typeof import("./getWebAppDiagnosticLogsConfigurationSlot").getWebAppDiagnosticLogsConfigurationSlotOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppDiagnosticLogsConfigurationSlot","getWebAppDiagnosticLogsConfigurationSlotOutput"], () => require("./getWebAppDiagnosticLogsConfigurationSlot"));

export { GetWebAppFtpAllowedSlotArgs, GetWebAppFtpAllowedSlotResult, GetWebAppFtpAllowedSlotOutputArgs } from "./getWebAppFtpAllowedSlot";
export const getWebAppFtpAllowedSlot: typeof import("./getWebAppFtpAllowedSlot").getWebAppFtpAllowedSlot = null as any;
export const getWebAppFtpAllowedSlotOutput: typeof import("./getWebAppFtpAllowedSlot").getWebAppFtpAllowedSlotOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppFtpAllowedSlot","getWebAppFtpAllowedSlotOutput"], () => require("./getWebAppFtpAllowedSlot"));

export { GetWebAppScmAllowedSlotArgs, GetWebAppScmAllowedSlotResult, GetWebAppScmAllowedSlotOutputArgs } from "./getWebAppScmAllowedSlot";
export const getWebAppScmAllowedSlot: typeof import("./getWebAppScmAllowedSlot").getWebAppScmAllowedSlot = null as any;
export const getWebAppScmAllowedSlotOutput: typeof import("./getWebAppScmAllowedSlot").getWebAppScmAllowedSlotOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppScmAllowedSlot","getWebAppScmAllowedSlotOutput"], () => require("./getWebAppScmAllowedSlot"));

export { GetWebAppSiteContainerArgs, GetWebAppSiteContainerResult, GetWebAppSiteContainerOutputArgs } from "./getWebAppSiteContainer";
export const getWebAppSiteContainer: typeof import("./getWebAppSiteContainer").getWebAppSiteContainer = null as any;
export const getWebAppSiteContainerOutput: typeof import("./getWebAppSiteContainer").getWebAppSiteContainerOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppSiteContainer","getWebAppSiteContainerOutput"], () => require("./getWebAppSiteContainer"));

export { GetWebAppSiteContainerSlotArgs, GetWebAppSiteContainerSlotResult, GetWebAppSiteContainerSlotOutputArgs } from "./getWebAppSiteContainerSlot";
export const getWebAppSiteContainerSlot: typeof import("./getWebAppSiteContainerSlot").getWebAppSiteContainerSlot = null as any;
export const getWebAppSiteContainerSlotOutput: typeof import("./getWebAppSiteContainerSlot").getWebAppSiteContainerSlotOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppSiteContainerSlot","getWebAppSiteContainerSlotOutput"], () => require("./getWebAppSiteContainerSlot"));

export { ListContainerAppSecretsArgs, ListContainerAppSecretsResult, ListContainerAppSecretsOutputArgs } from "./listContainerAppSecrets";
export const listContainerAppSecrets: typeof import("./listContainerAppSecrets").listContainerAppSecrets = null as any;
export const listContainerAppSecretsOutput: typeof import("./listContainerAppSecrets").listContainerAppSecretsOutput = null as any;
utilities.lazyLoad(exports, ["listContainerAppSecrets","listContainerAppSecretsOutput"], () => require("./listContainerAppSecrets"));

export { ListSiteIdentifiersAssignedToHostNameArgs, ListSiteIdentifiersAssignedToHostNameResult, ListSiteIdentifiersAssignedToHostNameOutputArgs } from "./listSiteIdentifiersAssignedToHostName";
export const listSiteIdentifiersAssignedToHostName: typeof import("./listSiteIdentifiersAssignedToHostName").listSiteIdentifiersAssignedToHostName = null as any;
export const listSiteIdentifiersAssignedToHostNameOutput: typeof import("./listSiteIdentifiersAssignedToHostName").listSiteIdentifiersAssignedToHostNameOutput = null as any;
utilities.lazyLoad(exports, ["listSiteIdentifiersAssignedToHostName","listSiteIdentifiersAssignedToHostNameOutput"], () => require("./listSiteIdentifiersAssignedToHostName"));

export { WebAppDiagnosticLogsConfigurationSlotArgs } from "./webAppDiagnosticLogsConfigurationSlot";
export type WebAppDiagnosticLogsConfigurationSlot = import("./webAppDiagnosticLogsConfigurationSlot").WebAppDiagnosticLogsConfigurationSlot;
export const WebAppDiagnosticLogsConfigurationSlot: typeof import("./webAppDiagnosticLogsConfigurationSlot").WebAppDiagnosticLogsConfigurationSlot = null as any;
utilities.lazyLoad(exports, ["WebAppDiagnosticLogsConfigurationSlot"], () => require("./webAppDiagnosticLogsConfigurationSlot"));

export { WebAppFtpAllowedSlotArgs } from "./webAppFtpAllowedSlot";
export type WebAppFtpAllowedSlot = import("./webAppFtpAllowedSlot").WebAppFtpAllowedSlot;
export const WebAppFtpAllowedSlot: typeof import("./webAppFtpAllowedSlot").WebAppFtpAllowedSlot = null as any;
utilities.lazyLoad(exports, ["WebAppFtpAllowedSlot"], () => require("./webAppFtpAllowedSlot"));

export { WebAppScmAllowedSlotArgs } from "./webAppScmAllowedSlot";
export type WebAppScmAllowedSlot = import("./webAppScmAllowedSlot").WebAppScmAllowedSlot;
export const WebAppScmAllowedSlot: typeof import("./webAppScmAllowedSlot").WebAppScmAllowedSlot = null as any;
utilities.lazyLoad(exports, ["WebAppScmAllowedSlot"], () => require("./webAppScmAllowedSlot"));

export { WebAppSiteContainerArgs } from "./webAppSiteContainer";
export type WebAppSiteContainer = import("./webAppSiteContainer").WebAppSiteContainer;
export const WebAppSiteContainer: typeof import("./webAppSiteContainer").WebAppSiteContainer = null as any;
utilities.lazyLoad(exports, ["WebAppSiteContainer"], () => require("./webAppSiteContainer"));

export { WebAppSiteContainerSlotArgs } from "./webAppSiteContainerSlot";
export type WebAppSiteContainerSlot = import("./webAppSiteContainerSlot").WebAppSiteContainerSlot;
export const WebAppSiteContainerSlot: typeof import("./webAppSiteContainerSlot").WebAppSiteContainerSlot = null as any;
utilities.lazyLoad(exports, ["WebAppSiteContainerSlot"], () => require("./webAppSiteContainerSlot"));


// Export enums:
export * from "../../types/enums/web/v20231201";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:web/v20231201:WebAppDiagnosticLogsConfigurationSlot":
                return new WebAppDiagnosticLogsConfigurationSlot(name, <any>undefined, { urn })
            case "azure-native:web/v20231201:WebAppFtpAllowedSlot":
                return new WebAppFtpAllowedSlot(name, <any>undefined, { urn })
            case "azure-native:web/v20231201:WebAppScmAllowedSlot":
                return new WebAppScmAllowedSlot(name, <any>undefined, { urn })
            case "azure-native:web/v20231201:WebAppSiteContainer":
                return new WebAppSiteContainer(name, <any>undefined, { urn })
            case "azure-native:web/v20231201:WebAppSiteContainerSlot":
                return new WebAppSiteContainerSlot(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "web/v20231201", _module)
