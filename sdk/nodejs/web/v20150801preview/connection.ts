// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * API Connection
 */
export class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connection {
        return new Connection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:web/v20150801preview:Connection';

    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connection.__pulumiType;
    }

    /**
     * expanded connection provider name
     */
    public readonly api!: pulumi.Output<outputs.web.v20150801preview.ExpandedParentApiEntityResponse | undefined>;
    /**
     * Timestamp of last connection change.
     */
    public readonly changedTime!: pulumi.Output<string | undefined>;
    /**
     * Timestamp of the connection creation
     */
    public readonly createdTime!: pulumi.Output<string | undefined>;
    /**
     * Custom login setting values.
     */
    public readonly customParameterValues!: pulumi.Output<{[key: string]: outputs.web.v20150801preview.ParameterCustomLoginSettingValuesResponse} | undefined>;
    /**
     * display name
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Time in UTC when the first expiration of OAuth tokens
     */
    public readonly firstExpirationTime!: pulumi.Output<string | undefined>;
    /**
     * List of Keywords that tag the acl
     */
    public readonly keywords!: pulumi.Output<string[] | undefined>;
    /**
     * Kind of resource
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Resource Location
     */
    public readonly location!: pulumi.Output<string>;
    public readonly metadata!: pulumi.Output<any | undefined>;
    /**
     * Resource Name
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Tokens/Claim
     */
    public readonly nonSecretParameterValues!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Tokens/Claim
     */
    public readonly parameterValues!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Status of the connection
     */
    public readonly statuses!: pulumi.Output<outputs.web.v20150801preview.ConnectionStatusResponse[] | undefined>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tenantId!: pulumi.Output<string | undefined>;
    /**
     * Resource type
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.connectionName === undefined) {
                throw new Error("Missing required property 'connectionName'");
            }
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["api"] = args ? args.api : undefined;
            inputs["changedTime"] = args ? args.changedTime : undefined;
            inputs["connectionName"] = args ? args.connectionName : undefined;
            inputs["createdTime"] = args ? args.createdTime : undefined;
            inputs["customParameterValues"] = args ? args.customParameterValues : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["firstExpirationTime"] = args ? args.firstExpirationTime : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["keywords"] = args ? args.keywords : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["metadata"] = args ? args.metadata : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["nonSecretParameterValues"] = args ? args.nonSecretParameterValues : undefined;
            inputs["parameterValues"] = args ? args.parameterValues : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["statuses"] = args ? args.statuses : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["tenantId"] = args ? args.tenantId : undefined;
            inputs["type"] = args ? args.type : undefined;
        } else {
            inputs["api"] = undefined /*out*/;
            inputs["changedTime"] = undefined /*out*/;
            inputs["createdTime"] = undefined /*out*/;
            inputs["customParameterValues"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["firstExpirationTime"] = undefined /*out*/;
            inputs["keywords"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["metadata"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["nonSecretParameterValues"] = undefined /*out*/;
            inputs["parameterValues"] = undefined /*out*/;
            inputs["statuses"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["tenantId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:web/latest:Connection" }, { type: "azure-nextgen:web/v20160601:Connection" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(Connection.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * expanded connection provider name
     */
    readonly api?: pulumi.Input<inputs.web.v20150801preview.ExpandedParentApiEntity>;
    /**
     * Timestamp of last connection change.
     */
    readonly changedTime?: pulumi.Input<string>;
    /**
     * The connection name.
     */
    readonly connectionName: pulumi.Input<string>;
    /**
     * Timestamp of the connection creation
     */
    readonly createdTime?: pulumi.Input<string>;
    /**
     * Custom login setting values.
     */
    readonly customParameterValues?: pulumi.Input<{[key: string]: pulumi.Input<inputs.web.v20150801preview.ParameterCustomLoginSettingValues>}>;
    /**
     * display name
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Time in UTC when the first expiration of OAuth tokens
     */
    readonly firstExpirationTime?: pulumi.Input<string>;
    /**
     * Resource Id
     */
    readonly id?: pulumi.Input<string>;
    /**
     * List of Keywords that tag the acl
     */
    readonly keywords?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kind of resource
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * Resource Location
     */
    readonly location: pulumi.Input<string>;
    readonly metadata?: any;
    /**
     * Resource Name
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Tokens/Claim
     */
    readonly nonSecretParameterValues?: pulumi.Input<{[key: string]: any}>;
    /**
     * Tokens/Claim
     */
    readonly parameterValues?: pulumi.Input<{[key: string]: any}>;
    /**
     * The resource group name.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Status of the connection
     */
    readonly statuses?: pulumi.Input<pulumi.Input<inputs.web.v20150801preview.ConnectionStatus>[]>;
    /**
     * Resource tags
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly tenantId?: pulumi.Input<string>;
    /**
     * Resource type
     */
    readonly type?: pulumi.Input<string>;
}
