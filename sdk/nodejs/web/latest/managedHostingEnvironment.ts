// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Description of an hostingEnvironment (App Service Environment)
 */
export class ManagedHostingEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing ManagedHostingEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ManagedHostingEnvironment {
        return new ManagedHostingEnvironment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:web/latest:ManagedHostingEnvironment';

    /**
     * Returns true if the given object is an instance of ManagedHostingEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedHostingEnvironment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedHostingEnvironment.__pulumiType;
    }

    /**
     * List of comma separated strings describing which VM sizes are allowed for front-ends
     */
    public readonly allowedMultiSizes!: pulumi.Output<string | undefined>;
    /**
     * List of comma separated strings describing which VM sizes are allowed for workers
     */
    public readonly allowedWorkerSizes!: pulumi.Output<string | undefined>;
    /**
     * Api Management Account associated with this Hosting Environment
     */
    public readonly apiManagementAccountId!: pulumi.Output<string | undefined>;
    /**
     * Custom settings for changing the behavior of the hosting environment
     */
    public readonly clusterSettings!: pulumi.Output<outputs.web.latest.NameValuePairResponse[] | undefined>;
    /**
     * Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
     */
    public readonly databaseEdition!: pulumi.Output<string | undefined>;
    /**
     * Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
     */
    public readonly databaseServiceObjective!: pulumi.Output<string | undefined>;
    /**
     * DNS suffix of the hostingEnvironment (App Service Environment)
     */
    public readonly dnsSuffix!: pulumi.Output<string | undefined>;
    /**
     * Current total, used, and available worker capacities
     */
    public readonly environmentCapacities!: pulumi.Output<outputs.web.latest.StampCapacityResponse[] | undefined>;
    /**
     * True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
     */
    public readonly environmentIsHealthy!: pulumi.Output<boolean | undefined>;
    /**
     * Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
     */
    public readonly environmentStatus!: pulumi.Output<string | undefined>;
    /**
     * Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
     */
    public readonly internalLoadBalancingMode!: pulumi.Output<string | undefined>;
    /**
     * Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
     */
    public readonly ipsslAddressCount!: pulumi.Output<number | undefined>;
    /**
     * Kind of resource
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Last deployment action on this hostingEnvironment (App Service Environment)
     */
    public readonly lastAction!: pulumi.Output<string | undefined>;
    /**
     * Result of the last deployment action on this hostingEnvironment (App Service Environment)
     */
    public readonly lastActionResult!: pulumi.Output<string | undefined>;
    /**
     * Resource Location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Maximum number of VMs in this hostingEnvironment (App Service Environment)
     */
    public readonly maximumNumberOfMachines!: pulumi.Output<number | undefined>;
    /**
     * Number of front-end instances
     */
    public readonly multiRoleCount!: pulumi.Output<number | undefined>;
    /**
     * Front-end VM size, e.g. "Medium", "Large"
     */
    public readonly multiSize!: pulumi.Output<string | undefined>;
    /**
     * Resource Name
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
     */
    public readonly networkAccessControlList!: pulumi.Output<outputs.web.latest.NetworkAccessControlEntryResponse[] | undefined>;
    /**
     * Provisioning state of the hostingEnvironment (App Service Environment)
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * Resource group of the hostingEnvironment (App Service Environment)
     */
    public readonly resourceGroup!: pulumi.Output<string | undefined>;
    /**
     * Current status of the hostingEnvironment (App Service Environment)
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Subscription of the hostingEnvironment (App Service Environment)
     */
    public readonly subscriptionId!: pulumi.Output<string | undefined>;
    /**
     * True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
     *             (most likely because NSG blocked the incoming traffic)
     */
    public readonly suspended!: pulumi.Output<boolean | undefined>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * Number of upgrade domains of this hostingEnvironment (App Service Environment)
     */
    public readonly upgradeDomains!: pulumi.Output<number | undefined>;
    /**
     * Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
     */
    public readonly vipMappings!: pulumi.Output<outputs.web.latest.VirtualIPMappingResponse[] | undefined>;
    /**
     * Description of the hostingEnvironment's (App Service Environment) virtual network
     */
    public readonly virtualNetwork!: pulumi.Output<outputs.web.latest.VirtualNetworkProfileResponse | undefined>;
    /**
     * Name of the hostingEnvironment's (App Service Environment) virtual network
     */
    public readonly vnetName!: pulumi.Output<string | undefined>;
    /**
     * Resource group of the hostingEnvironment's (App Service Environment) virtual network
     */
    public readonly vnetResourceGroupName!: pulumi.Output<string | undefined>;
    /**
     * Subnet of the hostingEnvironment's (App Service Environment) virtual network
     */
    public readonly vnetSubnetName!: pulumi.Output<string | undefined>;
    /**
     * Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
     */
    public readonly workerPools!: pulumi.Output<outputs.web.latest.WorkerPoolResponse[] | undefined>;

    /**
     * Create a ManagedHostingEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedHostingEnvironmentArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.status === undefined) {
                throw new Error("Missing required property 'status'");
            }
            inputs["allowedMultiSizes"] = args ? args.allowedMultiSizes : undefined;
            inputs["allowedWorkerSizes"] = args ? args.allowedWorkerSizes : undefined;
            inputs["apiManagementAccountId"] = args ? args.apiManagementAccountId : undefined;
            inputs["clusterSettings"] = args ? args.clusterSettings : undefined;
            inputs["databaseEdition"] = args ? args.databaseEdition : undefined;
            inputs["databaseServiceObjective"] = args ? args.databaseServiceObjective : undefined;
            inputs["dnsSuffix"] = args ? args.dnsSuffix : undefined;
            inputs["environmentCapacities"] = args ? args.environmentCapacities : undefined;
            inputs["environmentIsHealthy"] = args ? args.environmentIsHealthy : undefined;
            inputs["environmentStatus"] = args ? args.environmentStatus : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["internalLoadBalancingMode"] = args ? args.internalLoadBalancingMode : undefined;
            inputs["ipsslAddressCount"] = args ? args.ipsslAddressCount : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["lastAction"] = args ? args.lastAction : undefined;
            inputs["lastActionResult"] = args ? args.lastActionResult : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["maximumNumberOfMachines"] = args ? args.maximumNumberOfMachines : undefined;
            inputs["multiRoleCount"] = args ? args.multiRoleCount : undefined;
            inputs["multiSize"] = args ? args.multiSize : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkAccessControlList"] = args ? args.networkAccessControlList : undefined;
            inputs["provisioningState"] = args ? args.provisioningState : undefined;
            inputs["resourceGroup"] = args ? args.resourceGroup : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            inputs["suspended"] = args ? args.suspended : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["upgradeDomains"] = args ? args.upgradeDomains : undefined;
            inputs["vipMappings"] = args ? args.vipMappings : undefined;
            inputs["virtualNetwork"] = args ? args.virtualNetwork : undefined;
            inputs["vnetName"] = args ? args.vnetName : undefined;
            inputs["vnetResourceGroupName"] = args ? args.vnetResourceGroupName : undefined;
            inputs["vnetSubnetName"] = args ? args.vnetSubnetName : undefined;
            inputs["workerPools"] = args ? args.workerPools : undefined;
        } else {
            inputs["allowedMultiSizes"] = undefined /*out*/;
            inputs["allowedWorkerSizes"] = undefined /*out*/;
            inputs["apiManagementAccountId"] = undefined /*out*/;
            inputs["clusterSettings"] = undefined /*out*/;
            inputs["databaseEdition"] = undefined /*out*/;
            inputs["databaseServiceObjective"] = undefined /*out*/;
            inputs["dnsSuffix"] = undefined /*out*/;
            inputs["environmentCapacities"] = undefined /*out*/;
            inputs["environmentIsHealthy"] = undefined /*out*/;
            inputs["environmentStatus"] = undefined /*out*/;
            inputs["internalLoadBalancingMode"] = undefined /*out*/;
            inputs["ipsslAddressCount"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["lastAction"] = undefined /*out*/;
            inputs["lastActionResult"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["maximumNumberOfMachines"] = undefined /*out*/;
            inputs["multiRoleCount"] = undefined /*out*/;
            inputs["multiSize"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["networkAccessControlList"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["resourceGroup"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["subscriptionId"] = undefined /*out*/;
            inputs["suspended"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["upgradeDomains"] = undefined /*out*/;
            inputs["vipMappings"] = undefined /*out*/;
            inputs["virtualNetwork"] = undefined /*out*/;
            inputs["vnetName"] = undefined /*out*/;
            inputs["vnetResourceGroupName"] = undefined /*out*/;
            inputs["vnetSubnetName"] = undefined /*out*/;
            inputs["workerPools"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:web/v20150801:ManagedHostingEnvironment" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(ManagedHostingEnvironment.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ManagedHostingEnvironment resource.
 */
export interface ManagedHostingEnvironmentArgs {
    /**
     * List of comma separated strings describing which VM sizes are allowed for front-ends
     */
    readonly allowedMultiSizes?: pulumi.Input<string>;
    /**
     * List of comma separated strings describing which VM sizes are allowed for workers
     */
    readonly allowedWorkerSizes?: pulumi.Input<string>;
    /**
     * Api Management Account associated with this Hosting Environment
     */
    readonly apiManagementAccountId?: pulumi.Input<string>;
    /**
     * Custom settings for changing the behavior of the hosting environment
     */
    readonly clusterSettings?: pulumi.Input<pulumi.Input<inputs.web.latest.NameValuePair>[]>;
    /**
     * Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
     */
    readonly databaseEdition?: pulumi.Input<string>;
    /**
     * Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
     */
    readonly databaseServiceObjective?: pulumi.Input<string>;
    /**
     * DNS suffix of the hostingEnvironment (App Service Environment)
     */
    readonly dnsSuffix?: pulumi.Input<string>;
    /**
     * Current total, used, and available worker capacities
     */
    readonly environmentCapacities?: pulumi.Input<pulumi.Input<inputs.web.latest.StampCapacity>[]>;
    /**
     * True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
     */
    readonly environmentIsHealthy?: pulumi.Input<boolean>;
    /**
     * Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
     */
    readonly environmentStatus?: pulumi.Input<string>;
    /**
     * Resource Id
     */
    readonly id?: pulumi.Input<string>;
    /**
     * Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
     */
    readonly internalLoadBalancingMode?: pulumi.Input<string>;
    /**
     * Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
     */
    readonly ipsslAddressCount?: pulumi.Input<number>;
    /**
     * Kind of resource
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * Last deployment action on this hostingEnvironment (App Service Environment)
     */
    readonly lastAction?: pulumi.Input<string>;
    /**
     * Result of the last deployment action on this hostingEnvironment (App Service Environment)
     */
    readonly lastActionResult?: pulumi.Input<string>;
    /**
     * Resource Location
     */
    readonly location: pulumi.Input<string>;
    /**
     * Maximum number of VMs in this hostingEnvironment (App Service Environment)
     */
    readonly maximumNumberOfMachines?: pulumi.Input<number>;
    /**
     * Number of front-end instances
     */
    readonly multiRoleCount?: pulumi.Input<number>;
    /**
     * Front-end VM size, e.g. "Medium", "Large"
     */
    readonly multiSize?: pulumi.Input<string>;
    /**
     * Resource Name
     */
    readonly name: pulumi.Input<string>;
    /**
     * Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
     */
    readonly networkAccessControlList?: pulumi.Input<pulumi.Input<inputs.web.latest.NetworkAccessControlEntry>[]>;
    /**
     * Provisioning state of the hostingEnvironment (App Service Environment)
     */
    readonly provisioningState?: pulumi.Input<string>;
    /**
     * Resource group of the hostingEnvironment (App Service Environment)
     */
    readonly resourceGroup?: pulumi.Input<string>;
    /**
     * Name of resource group
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Current status of the hostingEnvironment (App Service Environment)
     */
    readonly status: pulumi.Input<string>;
    /**
     * Subscription of the hostingEnvironment (App Service Environment)
     */
    readonly subscriptionId?: pulumi.Input<string>;
    /**
     * True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
     *             (most likely because NSG blocked the incoming traffic)
     */
    readonly suspended?: pulumi.Input<boolean>;
    /**
     * Resource tags
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource type
     */
    readonly type?: pulumi.Input<string>;
    /**
     * Number of upgrade domains of this hostingEnvironment (App Service Environment)
     */
    readonly upgradeDomains?: pulumi.Input<number>;
    /**
     * Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
     */
    readonly vipMappings?: pulumi.Input<pulumi.Input<inputs.web.latest.VirtualIPMapping>[]>;
    /**
     * Description of the hostingEnvironment's (App Service Environment) virtual network
     */
    readonly virtualNetwork?: pulumi.Input<inputs.web.latest.VirtualNetworkProfile>;
    /**
     * Name of the hostingEnvironment's (App Service Environment) virtual network
     */
    readonly vnetName?: pulumi.Input<string>;
    /**
     * Resource group of the hostingEnvironment's (App Service Environment) virtual network
     */
    readonly vnetResourceGroupName?: pulumi.Input<string>;
    /**
     * Subnet of the hostingEnvironment's (App Service Environment) virtual network
     */
    readonly vnetSubnetName?: pulumi.Input<string>;
    /**
     * Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
     */
    readonly workerPools?: pulumi.Input<pulumi.Input<inputs.web.latest.WorkerPool>[]>;
}
