// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Container App session pool.
 *
 * Uses Azure REST API version 2025-02-02-preview. In version 2.x of the Azure Native provider, it used API version 2024-02-02-preview.
 *
 * Other available API versions: 2024-02-02-preview, 2024-08-02-preview, 2024-10-02-preview, 2025-01-01, 2025-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class ContainerAppsSessionPool extends pulumi.CustomResource {
    /**
     * Get an existing ContainerAppsSessionPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ContainerAppsSessionPool {
        return new ContainerAppsSessionPool(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:app:ContainerAppsSessionPool';

    /**
     * Returns true if the given object is an instance of ContainerAppsSessionPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContainerAppsSessionPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContainerAppsSessionPool.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The container type of the sessions.
     */
    declare public readonly containerType: pulumi.Output<string | undefined>;
    /**
     * The custom container configuration if the containerType is CustomContainer.
     */
    declare public readonly customContainerTemplate: pulumi.Output<outputs.app.CustomContainerTemplateResponse | undefined>;
    /**
     * The pool configuration if the poolManagementType is dynamic.
     */
    declare public readonly dynamicPoolConfiguration: pulumi.Output<outputs.app.DynamicPoolConfigurationResponse | undefined>;
    /**
     * Resource ID of the session pool's environment.
     */
    declare public readonly environmentId: pulumi.Output<string | undefined>;
    /**
     * Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.
     */
    declare public readonly identity: pulumi.Output<outputs.app.ManagedServiceIdentityResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Optional settings for a Managed Identity that is assigned to the Session pool.
     */
    declare public readonly managedIdentitySettings: pulumi.Output<outputs.app.ManagedIdentitySettingResponse[] | undefined>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The number of nodes the session pool is using.
     */
    declare public /*out*/ readonly nodeCount: pulumi.Output<number>;
    /**
     * The endpoint to manage the pool.
     */
    declare public /*out*/ readonly poolManagementEndpoint: pulumi.Output<string>;
    /**
     * The pool management type of the session pool.
     */
    declare public readonly poolManagementType: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the session pool.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * The scale configuration of the session pool.
     */
    declare public readonly scaleConfiguration: pulumi.Output<outputs.app.ScaleConfigurationResponse | undefined>;
    /**
     * The secrets of the session pool.
     */
    declare public readonly secrets: pulumi.Output<outputs.app.SessionPoolSecretResponse[] | undefined>;
    /**
     * The network configuration of the sessions in the session pool.
     */
    declare public readonly sessionNetworkConfiguration: pulumi.Output<outputs.app.SessionNetworkConfigurationResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.app.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a ContainerAppsSessionPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerAppsSessionPoolArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["containerType"] = args?.containerType;
            resourceInputs["customContainerTemplate"] = args?.customContainerTemplate;
            resourceInputs["dynamicPoolConfiguration"] = args?.dynamicPoolConfiguration;
            resourceInputs["environmentId"] = args?.environmentId;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["location"] = args?.location;
            resourceInputs["managedIdentitySettings"] = args?.managedIdentitySettings;
            resourceInputs["poolManagementType"] = args?.poolManagementType;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["scaleConfiguration"] = args?.scaleConfiguration;
            resourceInputs["secrets"] = args?.secrets;
            resourceInputs["sessionNetworkConfiguration"] = args?.sessionNetworkConfiguration;
            resourceInputs["sessionPoolName"] = args?.sessionPoolName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nodeCount"] = undefined /*out*/;
            resourceInputs["poolManagementEndpoint"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["containerType"] = undefined /*out*/;
            resourceInputs["customContainerTemplate"] = undefined /*out*/;
            resourceInputs["dynamicPoolConfiguration"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["managedIdentitySettings"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nodeCount"] = undefined /*out*/;
            resourceInputs["poolManagementEndpoint"] = undefined /*out*/;
            resourceInputs["poolManagementType"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["scaleConfiguration"] = undefined /*out*/;
            resourceInputs["secrets"] = undefined /*out*/;
            resourceInputs["sessionNetworkConfiguration"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:app/v20240202preview:ContainerAppsSessionPool" }, { type: "azure-native:app/v20240802preview:ContainerAppsSessionPool" }, { type: "azure-native:app/v20241002preview:ContainerAppsSessionPool" }, { type: "azure-native:app/v20250101:ContainerAppsSessionPool" }, { type: "azure-native:app/v20250202preview:ContainerAppsSessionPool" }, { type: "azure-native:app/v20250701:ContainerAppsSessionPool" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ContainerAppsSessionPool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ContainerAppsSessionPool resource.
 */
export interface ContainerAppsSessionPoolArgs {
    /**
     * The container type of the sessions.
     */
    containerType?: pulumi.Input<string | enums.app.ContainerType>;
    /**
     * The custom container configuration if the containerType is CustomContainer.
     */
    customContainerTemplate?: pulumi.Input<inputs.app.CustomContainerTemplateArgs>;
    /**
     * The pool configuration if the poolManagementType is dynamic.
     */
    dynamicPoolConfiguration?: pulumi.Input<inputs.app.DynamicPoolConfigurationArgs>;
    /**
     * Resource ID of the session pool's environment.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.
     */
    identity?: pulumi.Input<inputs.app.ManagedServiceIdentityArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Optional settings for a Managed Identity that is assigned to the Session pool.
     */
    managedIdentitySettings?: pulumi.Input<pulumi.Input<inputs.app.ManagedIdentitySettingArgs>[]>;
    /**
     * The pool management type of the session pool.
     */
    poolManagementType?: pulumi.Input<string | enums.app.PoolManagementType>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The scale configuration of the session pool.
     */
    scaleConfiguration?: pulumi.Input<inputs.app.ScaleConfigurationArgs>;
    /**
     * The secrets of the session pool.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.app.SessionPoolSecretArgs>[]>;
    /**
     * The network configuration of the sessions in the session pool.
     */
    sessionNetworkConfiguration?: pulumi.Input<inputs.app.SessionNetworkConfigurationArgs>;
    /**
     * Name of the session pool.
     */
    sessionPoolName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
