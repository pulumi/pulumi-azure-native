// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get a BuildResource
 */
export function getBuild(args: GetBuildArgs, opts?: pulumi.InvokeOptions): Promise<GetBuildResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:app/v20240802preview:getBuild", {
        "buildName": args.buildName,
        "builderName": args.builderName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetBuildArgs {
    /**
     * The name of a build.
     */
    buildName: string;
    /**
     * The name of the builder.
     */
    builderName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * Information pertaining to an individual build.
 */
export interface GetBuildResult {
    /**
     * Status of the build once it has been provisioned.
     */
    readonly buildStatus: string;
    /**
     * Configuration of the build.
     */
    readonly configuration?: outputs.app.v20240802preview.BuildConfigurationResponse;
    /**
     * Container registry that the final image will be uploaded to.
     */
    readonly destinationContainerRegistry?: outputs.app.v20240802preview.ContainerRegistryWithCustomImageResponse;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * Endpoint from which the build logs can be streamed.
     */
    readonly logStreamEndpoint: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Build provisioning state.
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.app.v20240802preview.SystemDataResponse;
    /**
     * Endpoint to use to retrieve an authentication token for log streaming and uploading source code.
     */
    readonly tokenEndpoint: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Endpoint to which the source code should be uploaded.
     */
    readonly uploadEndpoint: string;
}
/**
 * Get a BuildResource
 */
export function getBuildOutput(args: GetBuildOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBuildResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:app/v20240802preview:getBuild", {
        "buildName": args.buildName,
        "builderName": args.builderName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetBuildOutputArgs {
    /**
     * The name of a build.
     */
    buildName: pulumi.Input<string>;
    /**
     * The name of the builder.
     */
    builderName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
