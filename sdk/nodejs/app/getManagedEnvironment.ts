// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Get the properties of a Managed Environment used to host container apps.
 *
 * Uses Azure REST API version 2025-02-02-preview.
 *
 * Other available API versions: 2022-10-01, 2022-11-01-preview, 2023-04-01-preview, 2023-05-01, 2023-05-02-preview, 2023-08-01-preview, 2023-11-02-preview, 2024-02-02-preview, 2024-03-01, 2024-08-02-preview, 2024-10-02-preview, 2025-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export function getManagedEnvironment(args: GetManagedEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedEnvironmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:app:getManagedEnvironment", {
        "environmentName": args.environmentName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetManagedEnvironmentArgs {
    /**
     * Name of the Environment.
     */
    environmentName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

/**
 * An environment for hosting container apps
 */
export interface GetManagedEnvironmentResult {
    /**
     * Environment level Application Insights configuration
     */
    readonly appInsightsConfiguration?: outputs.app.AppInsightsConfigurationResponse;
    /**
     * Cluster configuration which enables the log daemon to export app logs to configured destination
     */
    readonly appLogsConfiguration?: outputs.app.AppLogsConfigurationResponse;
    /**
     * The list of availability zones to use for managed environment
     */
    readonly availabilityZones?: string[];
    /**
     * The Azure API version of the resource.
     */
    readonly azureApiVersion: string;
    /**
     * Custom domain configuration for the environment
     */
    readonly customDomainConfiguration?: outputs.app.CustomDomainConfigurationResponse;
    /**
     * Application Insights connection string used by Dapr to export Service to Service communication telemetry
     */
    readonly daprAIConnectionString?: string;
    /**
     * Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
     */
    readonly daprAIInstrumentationKey?: string;
    /**
     * The configuration of Dapr component.
     */
    readonly daprConfiguration?: outputs.app.DaprConfigurationResponse;
    /**
     * Default Domain Name for the cluster
     */
    readonly defaultDomain: string;
    /**
     * Any errors that occurred during deployment or deployment validation
     */
    readonly deploymentErrors: string;
    /**
     * Disk encryption configuration for the Managed Environment.
     */
    readonly diskEncryptionConfiguration?: outputs.app.DiskEncryptionConfigurationResponse;
    /**
     * The endpoint of the eventstream of the Environment.
     */
    readonly eventStreamEndpoint: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.
     */
    readonly identity?: outputs.app.ManagedServiceIdentityResponse;
    /**
     * Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.
     */
    readonly infrastructureResourceGroup?: string;
    /**
     * Ingress configuration for the Managed Environment.
     */
    readonly ingressConfiguration?: outputs.app.IngressConfigurationResponse;
    /**
     * The configuration of Keda component.
     */
    readonly kedaConfiguration?: outputs.app.KedaConfigurationResponse;
    /**
     * Kind of the Environment.
     */
    readonly kind?: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Environment Open Telemetry configuration
     */
    readonly openTelemetryConfiguration?: outputs.app.OpenTelemetryConfigurationResponse;
    /**
     * Peer authentication settings for the Managed Environment
     */
    readonly peerAuthentication?: outputs.app.ManagedEnvironmentResponsePeerAuthentication;
    /**
     * Peer traffic settings for the Managed Environment
     */
    readonly peerTrafficConfiguration?: outputs.app.ManagedEnvironmentResponsePeerTrafficConfiguration;
    /**
     * Private endpoint connections to the resource.
     */
    readonly privateEndpointConnections: outputs.app.PrivateEndpointConnectionResponse[];
    /**
     * Private Link Default Domain Name for the environment
     */
    readonly privateLinkDefaultDomain: string;
    /**
     * Provisioning state of the Environment.
     */
    readonly provisioningState: string;
    /**
     * Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.
     */
    readonly publicNetworkAccess?: string;
    /**
     * Static IP of the Environment
     */
    readonly staticIp: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.app.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Vnet configuration for the environment
     */
    readonly vnetConfiguration?: outputs.app.VnetConfigurationResponse;
    /**
     * Workload profiles configured for the Managed Environment.
     */
    readonly workloadProfiles?: outputs.app.WorkloadProfileResponse[];
    /**
     * Whether or not this Managed Environment is zone-redundant.
     */
    readonly zoneRedundant?: boolean;
}
/**
 * Get the properties of a Managed Environment used to host container apps.
 *
 * Uses Azure REST API version 2025-02-02-preview.
 *
 * Other available API versions: 2022-10-01, 2022-11-01-preview, 2023-04-01-preview, 2023-05-01, 2023-05-02-preview, 2023-08-01-preview, 2023-11-02-preview, 2024-02-02-preview, 2024-03-01, 2024-08-02-preview, 2024-10-02-preview, 2025-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export function getManagedEnvironmentOutput(args: GetManagedEnvironmentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedEnvironmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:app:getManagedEnvironment", {
        "environmentName": args.environmentName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetManagedEnvironmentOutputArgs {
    /**
     * Name of the Environment.
     */
    environmentName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
