// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Dapr Component.
 */
export class DaprComponent extends pulumi.CustomResource {
    /**
     * Get an existing DaprComponent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DaprComponent {
        return new DaprComponent(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:app/v20240202preview:DaprComponent';

    /**
     * Returns true if the given object is an instance of DaprComponent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DaprComponent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DaprComponent.__pulumiType;
    }

    /**
     * Component type
     */
    public readonly componentType!: pulumi.Output<string | undefined>;
    /**
     * Boolean describing if the component errors are ignores
     */
    public readonly ignoreErrors!: pulumi.Output<boolean | undefined>;
    /**
     * Initialization timeout
     */
    public readonly initTimeout!: pulumi.Output<string | undefined>;
    /**
     * Component metadata
     */
    public readonly metadata!: pulumi.Output<outputs.app.v20240202preview.DaprMetadataResponse[] | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Names of container apps that can use this Dapr component
     */
    public readonly scopes!: pulumi.Output<string[] | undefined>;
    /**
     * Name of a Dapr component to retrieve component secrets from
     */
    public readonly secretStoreComponent!: pulumi.Output<string | undefined>;
    /**
     * Collection of secrets used by a Dapr component
     */
    public readonly secrets!: pulumi.Output<outputs.app.v20240202preview.SecretResponse[] | undefined>;
    /**
     * List of container app services that are bound to the Dapr component
     */
    public readonly serviceComponentBind!: pulumi.Output<outputs.app.v20240202preview.DaprComponentServiceBindingResponse[] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.app.v20240202preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Component version
     */
    public readonly version!: pulumi.Output<string | undefined>;

    /**
     * Create a DaprComponent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DaprComponentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.environmentName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["componentName"] = args ? args.componentName : undefined;
            resourceInputs["componentType"] = args ? args.componentType : undefined;
            resourceInputs["environmentName"] = args ? args.environmentName : undefined;
            resourceInputs["ignoreErrors"] = (args ? args.ignoreErrors : undefined) ?? false;
            resourceInputs["initTimeout"] = args ? args.initTimeout : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["scopes"] = args ? args.scopes : undefined;
            resourceInputs["secretStoreComponent"] = args ? args.secretStoreComponent : undefined;
            resourceInputs["secrets"] = args ? args.secrets : undefined;
            resourceInputs["serviceComponentBind"] = args ? args.serviceComponentBind : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["componentType"] = undefined /*out*/;
            resourceInputs["ignoreErrors"] = undefined /*out*/;
            resourceInputs["initTimeout"] = undefined /*out*/;
            resourceInputs["metadata"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["scopes"] = undefined /*out*/;
            resourceInputs["secretStoreComponent"] = undefined /*out*/;
            resourceInputs["secrets"] = undefined /*out*/;
            resourceInputs["serviceComponentBind"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:app:DaprComponent" }, { type: "azure-native:app/v20220101preview:DaprComponent" }, { type: "azure-native:app/v20220301:DaprComponent" }, { type: "azure-native:app/v20220601preview:DaprComponent" }, { type: "azure-native:app/v20221001:DaprComponent" }, { type: "azure-native:app/v20221101preview:DaprComponent" }, { type: "azure-native:app/v20230401preview:DaprComponent" }, { type: "azure-native:app/v20230501:DaprComponent" }, { type: "azure-native:app/v20230502preview:DaprComponent" }, { type: "azure-native:app/v20230801preview:DaprComponent" }, { type: "azure-native:app/v20231102preview:DaprComponent" }, { type: "azure-native:app/v20240301:DaprComponent" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DaprComponent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DaprComponent resource.
 */
export interface DaprComponentArgs {
    /**
     * Name of the Dapr Component.
     */
    componentName?: pulumi.Input<string>;
    /**
     * Component type
     */
    componentType?: pulumi.Input<string>;
    /**
     * Name of the Managed Environment.
     */
    environmentName: pulumi.Input<string>;
    /**
     * Boolean describing if the component errors are ignores
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Initialization timeout
     */
    initTimeout?: pulumi.Input<string>;
    /**
     * Component metadata
     */
    metadata?: pulumi.Input<pulumi.Input<inputs.app.v20240202preview.DaprMetadataArgs>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Names of container apps that can use this Dapr component
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of a Dapr component to retrieve component secrets from
     */
    secretStoreComponent?: pulumi.Input<string>;
    /**
     * Collection of secrets used by a Dapr component
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.app.v20240202preview.SecretArgs>[]>;
    /**
     * List of container app services that are bound to the Dapr component
     */
    serviceComponentBind?: pulumi.Input<pulumi.Input<inputs.app.v20240202preview.DaprComponentServiceBindingArgs>[]>;
    /**
     * Component version
     */
    version?: pulumi.Input<string>;
}
