// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ContainerAppsSessionPoolArgs } from "./containerAppsSessionPool";
export type ContainerAppsSessionPool = import("./containerAppsSessionPool").ContainerAppsSessionPool;
export const ContainerAppsSessionPool: typeof import("./containerAppsSessionPool").ContainerAppsSessionPool = null as any;
utilities.lazyLoad(exports, ["ContainerAppsSessionPool"], () => require("./containerAppsSessionPool"));

export { GetContainerAppsSessionPoolArgs, GetContainerAppsSessionPoolResult, GetContainerAppsSessionPoolOutputArgs } from "./getContainerAppsSessionPool";
export const getContainerAppsSessionPool: typeof import("./getContainerAppsSessionPool").getContainerAppsSessionPool = null as any;
export const getContainerAppsSessionPoolOutput: typeof import("./getContainerAppsSessionPool").getContainerAppsSessionPoolOutput = null as any;
utilities.lazyLoad(exports, ["getContainerAppsSessionPool","getContainerAppsSessionPoolOutput"], () => require("./getContainerAppsSessionPool"));

export { GetCustomDomainVerificationIdArgs, GetCustomDomainVerificationIdResult } from "./getCustomDomainVerificationId";
export const getCustomDomainVerificationId: typeof import("./getCustomDomainVerificationId").getCustomDomainVerificationId = null as any;
export const getCustomDomainVerificationIdOutput: typeof import("./getCustomDomainVerificationId").getCustomDomainVerificationIdOutput = null as any;
utilities.lazyLoad(exports, ["getCustomDomainVerificationId","getCustomDomainVerificationIdOutput"], () => require("./getCustomDomainVerificationId"));

export { GetLogicAppArgs, GetLogicAppResult, GetLogicAppOutputArgs } from "./getLogicApp";
export const getLogicApp: typeof import("./getLogicApp").getLogicApp = null as any;
export const getLogicAppOutput: typeof import("./getLogicApp").getLogicAppOutput = null as any;
utilities.lazyLoad(exports, ["getLogicApp","getLogicAppOutput"], () => require("./getLogicApp"));

export { GetManagedEnvironmentPrivateEndpointConnectionArgs, GetManagedEnvironmentPrivateEndpointConnectionResult, GetManagedEnvironmentPrivateEndpointConnectionOutputArgs } from "./getManagedEnvironmentPrivateEndpointConnection";
export const getManagedEnvironmentPrivateEndpointConnection: typeof import("./getManagedEnvironmentPrivateEndpointConnection").getManagedEnvironmentPrivateEndpointConnection = null as any;
export const getManagedEnvironmentPrivateEndpointConnectionOutput: typeof import("./getManagedEnvironmentPrivateEndpointConnection").getManagedEnvironmentPrivateEndpointConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getManagedEnvironmentPrivateEndpointConnection","getManagedEnvironmentPrivateEndpointConnectionOutput"], () => require("./getManagedEnvironmentPrivateEndpointConnection"));

export { ListLogicAppWorkflowsConnectionsArgs, ListLogicAppWorkflowsConnectionsResult, ListLogicAppWorkflowsConnectionsOutputArgs } from "./listLogicAppWorkflowsConnections";
export const listLogicAppWorkflowsConnections: typeof import("./listLogicAppWorkflowsConnections").listLogicAppWorkflowsConnections = null as any;
export const listLogicAppWorkflowsConnectionsOutput: typeof import("./listLogicAppWorkflowsConnections").listLogicAppWorkflowsConnectionsOutput = null as any;
utilities.lazyLoad(exports, ["listLogicAppWorkflowsConnections","listLogicAppWorkflowsConnectionsOutput"], () => require("./listLogicAppWorkflowsConnections"));

export { LogicAppArgs } from "./logicApp";
export type LogicApp = import("./logicApp").LogicApp;
export const LogicApp: typeof import("./logicApp").LogicApp = null as any;
utilities.lazyLoad(exports, ["LogicApp"], () => require("./logicApp"));

export { ManagedEnvironmentPrivateEndpointConnectionArgs } from "./managedEnvironmentPrivateEndpointConnection";
export type ManagedEnvironmentPrivateEndpointConnection = import("./managedEnvironmentPrivateEndpointConnection").ManagedEnvironmentPrivateEndpointConnection;
export const ManagedEnvironmentPrivateEndpointConnection: typeof import("./managedEnvironmentPrivateEndpointConnection").ManagedEnvironmentPrivateEndpointConnection = null as any;
utilities.lazyLoad(exports, ["ManagedEnvironmentPrivateEndpointConnection"], () => require("./managedEnvironmentPrivateEndpointConnection"));


// Export enums:
export * from "../../types/enums/app/v20240202preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:app/v20240202preview:ContainerAppsSessionPool":
                return new ContainerAppsSessionPool(name, <any>undefined, { urn })
            case "azure-native:app/v20240202preview:LogicApp":
                return new LogicApp(name, <any>undefined, { urn })
            case "azure-native:app/v20240202preview:ManagedEnvironmentPrivateEndpointConnection":
                return new ManagedEnvironmentPrivateEndpointConnection(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "app/v20240202preview", _module)
