// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Deployment information.
 *
 * @deprecated Version 2015-11-01 will be removed in v2 of the provider.
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment {
        pulumi.log.warn("Deployment is deprecated: Version 2015-11-01 will be removed in v2 of the provider.")
        return new Deployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:resources/v20151101:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * Gets or sets the name of the deployment.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Gets or sets deployment properties.
     */
    public readonly properties!: pulumi.Output<outputs.resources.v20151101.DeploymentPropertiesExtendedResponse>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2015-11-01 will be removed in v2 of the provider. */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Deployment is deprecated: Version 2015-11-01 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["deploymentName"] = args ? args.deploymentName : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["name"] = undefined /*out*/;
        } else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:resources:Deployment" }, { type: "azure-native:resources/v20160201:Deployment" }, { type: "azure-native:resources/v20160701:Deployment" }, { type: "azure-native:resources/v20160901:Deployment" }, { type: "azure-native:resources/v20170510:Deployment" }, { type: "azure-native:resources/v20180201:Deployment" }, { type: "azure-native:resources/v20180501:Deployment" }, { type: "azure-native:resources/v20190301:Deployment" }, { type: "azure-native:resources/v20190501:Deployment" }, { type: "azure-native:resources/v20190510:Deployment" }, { type: "azure-native:resources/v20190701:Deployment" }, { type: "azure-native:resources/v20190801:Deployment" }, { type: "azure-native:resources/v20191001:Deployment" }, { type: "azure-native:resources/v20200601:Deployment" }, { type: "azure-native:resources/v20200801:Deployment" }, { type: "azure-native:resources/v20201001:Deployment" }, { type: "azure-native:resources/v20210101:Deployment" }, { type: "azure-native:resources/v20210401:Deployment" }, { type: "azure-native:resources/v20220901:Deployment" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Deployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * The name of the deployment.
     */
    deploymentName?: pulumi.Input<string>;
    /**
     * Gets or sets the deployment properties.
     */
    properties?: pulumi.Input<inputs.resources.v20151101.DeploymentPropertiesArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
