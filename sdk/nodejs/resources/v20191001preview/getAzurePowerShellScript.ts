// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Object model for the Azure PowerShell script.
 */
export function getAzurePowerShellScript(args: GetAzurePowerShellScriptArgs, opts?: pulumi.InvokeOptions): Promise<GetAzurePowerShellScriptResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:resources/v20191001preview:getAzurePowerShellScript", {
        "resourceGroupName": args.resourceGroupName,
        "scriptName": args.scriptName,
    }, opts);
}

export interface GetAzurePowerShellScriptArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Name of the deployment script.
     */
    scriptName: string;
}

/**
 * Object model for the Azure PowerShell script.
 */
export interface GetAzurePowerShellScriptResult {
    /**
     * Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2' 
     */
    readonly arguments?: string;
    /**
     * Azure PowerShell module version to be used.
     */
    readonly azPowerShellVersion: string;
    /**
     * The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'.
     */
    readonly cleanupPreference?: string;
    /**
     * Container settings.
     */
    readonly containerSettings?: outputs.resources.v20191001preview.ContainerConfigurationResponse;
    /**
     * The environment variables to pass over to the script.
     */
    readonly environmentVariables?: outputs.resources.v20191001preview.EnvironmentVariableResponse[];
    /**
     * Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID.
     */
    readonly forceUpdateTag?: string;
    /**
     * String Id used to locate any resource on Azure.
     */
    readonly id: string;
    /**
     * Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported.
     */
    readonly identity: outputs.resources.v20191001preview.ManagedServiceIdentityResponse;
    /**
     * Type of the script.
     * Expected value is 'AzurePowerShell'.
     */
    readonly kind: "AzurePowerShell";
    /**
     * The location of the ACI and the storage account for the deployment script.
     */
    readonly location: string;
    /**
     * Name of this resource.
     */
    readonly name: string;
    /**
     * List of script outputs.
     */
    readonly outputs: {[key: string]: any};
    /**
     * Uri for the script. This is the entry point for the external script.
     */
    readonly primaryScriptUri?: string;
    /**
     * State of the script execution. This only appears in the response.
     */
    readonly provisioningState: string;
    /**
     * Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day).
     */
    readonly retentionInterval: string;
    /**
     * Script body.
     */
    readonly scriptContent?: string;
    /**
     * Contains the results of script execution.
     */
    readonly status: outputs.resources.v20191001preview.ScriptStatusResponse;
    /**
     * Storage Account settings.
     */
    readonly storageAccountSettings?: outputs.resources.v20191001preview.StorageAccountConfigurationResponse;
    /**
     * Supporting files for the external script.
     */
    readonly supportingScriptUris?: string[];
    /**
     * The system metadata related to this resource.
     */
    readonly systemData: outputs.resources.v20191001preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Maximum allowed script execution time specified in ISO 8601 format. Default value is P1D
     */
    readonly timeout?: string;
    /**
     * Type of this resource.
     */
    readonly type: string;
}
