// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { CacheNodesOperationArgs } from "./cacheNodesOperation";
export type CacheNodesOperation = import("./cacheNodesOperation").CacheNodesOperation;
export const CacheNodesOperation: typeof import("./cacheNodesOperation").CacheNodesOperation = null as any;
utilities.lazyLoad(exports, ["CacheNodesOperation"], () => require("./cacheNodesOperation"));

export { EnterpriseCustomerOperationArgs } from "./enterpriseCustomerOperation";
export type EnterpriseCustomerOperation = import("./enterpriseCustomerOperation").EnterpriseCustomerOperation;
export const EnterpriseCustomerOperation: typeof import("./enterpriseCustomerOperation").EnterpriseCustomerOperation = null as any;
utilities.lazyLoad(exports, ["EnterpriseCustomerOperation"], () => require("./enterpriseCustomerOperation"));

export { EnterpriseMccCacheNodesOperationArgs } from "./enterpriseMccCacheNodesOperation";
export type EnterpriseMccCacheNodesOperation = import("./enterpriseMccCacheNodesOperation").EnterpriseMccCacheNodesOperation;
export const EnterpriseMccCacheNodesOperation: typeof import("./enterpriseMccCacheNodesOperation").EnterpriseMccCacheNodesOperation = null as any;
utilities.lazyLoad(exports, ["EnterpriseMccCacheNodesOperation"], () => require("./enterpriseMccCacheNodesOperation"));

export { EnterpriseMccCustomerArgs } from "./enterpriseMccCustomer";
export type EnterpriseMccCustomer = import("./enterpriseMccCustomer").EnterpriseMccCustomer;
export const EnterpriseMccCustomer: typeof import("./enterpriseMccCustomer").EnterpriseMccCustomer = null as any;
utilities.lazyLoad(exports, ["EnterpriseMccCustomer"], () => require("./enterpriseMccCustomer"));

export { GetCacheNodesOperationArgs, GetCacheNodesOperationResult, GetCacheNodesOperationOutputArgs } from "./getCacheNodesOperation";
export const getCacheNodesOperation: typeof import("./getCacheNodesOperation").getCacheNodesOperation = null as any;
export const getCacheNodesOperationOutput: typeof import("./getCacheNodesOperation").getCacheNodesOperationOutput = null as any;
utilities.lazyLoad(exports, ["getCacheNodesOperation","getCacheNodesOperationOutput"], () => require("./getCacheNodesOperation"));

export { GetEnterpriseCustomerOperationArgs, GetEnterpriseCustomerOperationResult, GetEnterpriseCustomerOperationOutputArgs } from "./getEnterpriseCustomerOperation";
export const getEnterpriseCustomerOperation: typeof import("./getEnterpriseCustomerOperation").getEnterpriseCustomerOperation = null as any;
export const getEnterpriseCustomerOperationOutput: typeof import("./getEnterpriseCustomerOperation").getEnterpriseCustomerOperationOutput = null as any;
utilities.lazyLoad(exports, ["getEnterpriseCustomerOperation","getEnterpriseCustomerOperationOutput"], () => require("./getEnterpriseCustomerOperation"));

export { GetEnterpriseMccCacheNodesOperationArgs, GetEnterpriseMccCacheNodesOperationResult, GetEnterpriseMccCacheNodesOperationOutputArgs } from "./getEnterpriseMccCacheNodesOperation";
export const getEnterpriseMccCacheNodesOperation: typeof import("./getEnterpriseMccCacheNodesOperation").getEnterpriseMccCacheNodesOperation = null as any;
export const getEnterpriseMccCacheNodesOperationOutput: typeof import("./getEnterpriseMccCacheNodesOperation").getEnterpriseMccCacheNodesOperationOutput = null as any;
utilities.lazyLoad(exports, ["getEnterpriseMccCacheNodesOperation","getEnterpriseMccCacheNodesOperationOutput"], () => require("./getEnterpriseMccCacheNodesOperation"));

export { GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsArgs, GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult, GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutputArgs } from "./getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails";
export const getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails: typeof import("./getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails").getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails = null as any;
export const getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput: typeof import("./getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails").getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput = null as any;
utilities.lazyLoad(exports, ["getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails","getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput"], () => require("./getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails"));

export { GetEnterpriseMccCustomerArgs, GetEnterpriseMccCustomerResult, GetEnterpriseMccCustomerOutputArgs } from "./getEnterpriseMccCustomer";
export const getEnterpriseMccCustomer: typeof import("./getEnterpriseMccCustomer").getEnterpriseMccCustomer = null as any;
export const getEnterpriseMccCustomerOutput: typeof import("./getEnterpriseMccCustomer").getEnterpriseMccCustomerOutput = null as any;
utilities.lazyLoad(exports, ["getEnterpriseMccCustomer","getEnterpriseMccCustomerOutput"], () => require("./getEnterpriseMccCustomer"));

export { GetIspCacheNodesOperationArgs, GetIspCacheNodesOperationResult, GetIspCacheNodesOperationOutputArgs } from "./getIspCacheNodesOperation";
export const getIspCacheNodesOperation: typeof import("./getIspCacheNodesOperation").getIspCacheNodesOperation = null as any;
export const getIspCacheNodesOperationOutput: typeof import("./getIspCacheNodesOperation").getIspCacheNodesOperationOutput = null as any;
utilities.lazyLoad(exports, ["getIspCacheNodesOperation","getIspCacheNodesOperationOutput"], () => require("./getIspCacheNodesOperation"));

export { GetIspCacheNodesOperationBgpCidrsArgs, GetIspCacheNodesOperationBgpCidrsResult, GetIspCacheNodesOperationBgpCidrsOutputArgs } from "./getIspCacheNodesOperationBgpCidrs";
export const getIspCacheNodesOperationBgpCidrs: typeof import("./getIspCacheNodesOperationBgpCidrs").getIspCacheNodesOperationBgpCidrs = null as any;
export const getIspCacheNodesOperationBgpCidrsOutput: typeof import("./getIspCacheNodesOperationBgpCidrs").getIspCacheNodesOperationBgpCidrsOutput = null as any;
utilities.lazyLoad(exports, ["getIspCacheNodesOperationBgpCidrs","getIspCacheNodesOperationBgpCidrsOutput"], () => require("./getIspCacheNodesOperationBgpCidrs"));

export { GetIspCacheNodesOperationCacheNodeInstallDetailsArgs, GetIspCacheNodesOperationCacheNodeInstallDetailsResult, GetIspCacheNodesOperationCacheNodeInstallDetailsOutputArgs } from "./getIspCacheNodesOperationCacheNodeInstallDetails";
export const getIspCacheNodesOperationCacheNodeInstallDetails: typeof import("./getIspCacheNodesOperationCacheNodeInstallDetails").getIspCacheNodesOperationCacheNodeInstallDetails = null as any;
export const getIspCacheNodesOperationCacheNodeInstallDetailsOutput: typeof import("./getIspCacheNodesOperationCacheNodeInstallDetails").getIspCacheNodesOperationCacheNodeInstallDetailsOutput = null as any;
utilities.lazyLoad(exports, ["getIspCacheNodesOperationCacheNodeInstallDetails","getIspCacheNodesOperationCacheNodeInstallDetailsOutput"], () => require("./getIspCacheNodesOperationCacheNodeInstallDetails"));

export { GetIspCustomerArgs, GetIspCustomerResult, GetIspCustomerOutputArgs } from "./getIspCustomer";
export const getIspCustomer: typeof import("./getIspCustomer").getIspCustomer = null as any;
export const getIspCustomerOutput: typeof import("./getIspCustomer").getIspCustomerOutput = null as any;
utilities.lazyLoad(exports, ["getIspCustomer","getIspCustomerOutput"], () => require("./getIspCustomer"));

export { IspCacheNodesOperationArgs } from "./ispCacheNodesOperation";
export type IspCacheNodesOperation = import("./ispCacheNodesOperation").IspCacheNodesOperation;
export const IspCacheNodesOperation: typeof import("./ispCacheNodesOperation").IspCacheNodesOperation = null as any;
utilities.lazyLoad(exports, ["IspCacheNodesOperation"], () => require("./ispCacheNodesOperation"));

export { IspCustomerArgs } from "./ispCustomer";
export type IspCustomer = import("./ispCustomer").IspCustomer;
export const IspCustomer: typeof import("./ispCustomer").IspCustomer = null as any;
utilities.lazyLoad(exports, ["IspCustomer"], () => require("./ispCustomer"));


// Export enums:
export * from "../../types/enums/connectedcache/v20230501preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:connectedcache/v20230501preview:CacheNodesOperation":
                return new CacheNodesOperation(name, <any>undefined, { urn })
            case "azure-native:connectedcache/v20230501preview:EnterpriseCustomerOperation":
                return new EnterpriseCustomerOperation(name, <any>undefined, { urn })
            case "azure-native:connectedcache/v20230501preview:EnterpriseMccCacheNodesOperation":
                return new EnterpriseMccCacheNodesOperation(name, <any>undefined, { urn })
            case "azure-native:connectedcache/v20230501preview:EnterpriseMccCustomer":
                return new EnterpriseMccCustomer(name, <any>undefined, { urn })
            case "azure-native:connectedcache/v20230501preview:IspCacheNodesOperation":
                return new IspCacheNodesOperation(name, <any>undefined, { urn })
            case "azure-native:connectedcache/v20230501preview:IspCustomer":
                return new IspCustomer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "connectedcache/v20230501preview", _module)
