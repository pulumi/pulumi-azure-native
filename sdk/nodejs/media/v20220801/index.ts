// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AccountFilterArgs } from "./accountFilter";
export type AccountFilter = import("./accountFilter").AccountFilter;
export const AccountFilter: typeof import("./accountFilter").AccountFilter = null as any;
utilities.lazyLoad(exports, ["AccountFilter"], () => require("./accountFilter"));

export { AssetArgs } from "./asset";
export type Asset = import("./asset").Asset;
export const Asset: typeof import("./asset").Asset = null as any;
utilities.lazyLoad(exports, ["Asset"], () => require("./asset"));

export { AssetFilterArgs } from "./assetFilter";
export type AssetFilter = import("./assetFilter").AssetFilter;
export const AssetFilter: typeof import("./assetFilter").AssetFilter = null as any;
utilities.lazyLoad(exports, ["AssetFilter"], () => require("./assetFilter"));

export { ContentKeyPolicyArgs } from "./contentKeyPolicy";
export type ContentKeyPolicy = import("./contentKeyPolicy").ContentKeyPolicy;
export const ContentKeyPolicy: typeof import("./contentKeyPolicy").ContentKeyPolicy = null as any;
utilities.lazyLoad(exports, ["ContentKeyPolicy"], () => require("./contentKeyPolicy"));

export { GetAccountFilterArgs, GetAccountFilterResult, GetAccountFilterOutputArgs } from "./getAccountFilter";
export const getAccountFilter: typeof import("./getAccountFilter").getAccountFilter = null as any;
export const getAccountFilterOutput: typeof import("./getAccountFilter").getAccountFilterOutput = null as any;
utilities.lazyLoad(exports, ["getAccountFilter","getAccountFilterOutput"], () => require("./getAccountFilter"));

export { GetAssetArgs, GetAssetResult, GetAssetOutputArgs } from "./getAsset";
export const getAsset: typeof import("./getAsset").getAsset = null as any;
export const getAssetOutput: typeof import("./getAsset").getAssetOutput = null as any;
utilities.lazyLoad(exports, ["getAsset","getAssetOutput"], () => require("./getAsset"));

export { GetAssetEncryptionKeyArgs, GetAssetEncryptionKeyResult, GetAssetEncryptionKeyOutputArgs } from "./getAssetEncryptionKey";
export const getAssetEncryptionKey: typeof import("./getAssetEncryptionKey").getAssetEncryptionKey = null as any;
export const getAssetEncryptionKeyOutput: typeof import("./getAssetEncryptionKey").getAssetEncryptionKeyOutput = null as any;
utilities.lazyLoad(exports, ["getAssetEncryptionKey","getAssetEncryptionKeyOutput"], () => require("./getAssetEncryptionKey"));

export { GetAssetFilterArgs, GetAssetFilterResult, GetAssetFilterOutputArgs } from "./getAssetFilter";
export const getAssetFilter: typeof import("./getAssetFilter").getAssetFilter = null as any;
export const getAssetFilterOutput: typeof import("./getAssetFilter").getAssetFilterOutput = null as any;
utilities.lazyLoad(exports, ["getAssetFilter","getAssetFilterOutput"], () => require("./getAssetFilter"));

export { GetContentKeyPolicyArgs, GetContentKeyPolicyResult, GetContentKeyPolicyOutputArgs } from "./getContentKeyPolicy";
export const getContentKeyPolicy: typeof import("./getContentKeyPolicy").getContentKeyPolicy = null as any;
export const getContentKeyPolicyOutput: typeof import("./getContentKeyPolicy").getContentKeyPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getContentKeyPolicy","getContentKeyPolicyOutput"], () => require("./getContentKeyPolicy"));

export { GetContentKeyPolicyPropertiesWithSecretsArgs, GetContentKeyPolicyPropertiesWithSecretsResult, GetContentKeyPolicyPropertiesWithSecretsOutputArgs } from "./getContentKeyPolicyPropertiesWithSecrets";
export const getContentKeyPolicyPropertiesWithSecrets: typeof import("./getContentKeyPolicyPropertiesWithSecrets").getContentKeyPolicyPropertiesWithSecrets = null as any;
export const getContentKeyPolicyPropertiesWithSecretsOutput: typeof import("./getContentKeyPolicyPropertiesWithSecrets").getContentKeyPolicyPropertiesWithSecretsOutput = null as any;
utilities.lazyLoad(exports, ["getContentKeyPolicyPropertiesWithSecrets","getContentKeyPolicyPropertiesWithSecretsOutput"], () => require("./getContentKeyPolicyPropertiesWithSecrets"));

export { GetLiveEventArgs, GetLiveEventResult, GetLiveEventOutputArgs } from "./getLiveEvent";
export const getLiveEvent: typeof import("./getLiveEvent").getLiveEvent = null as any;
export const getLiveEventOutput: typeof import("./getLiveEvent").getLiveEventOutput = null as any;
utilities.lazyLoad(exports, ["getLiveEvent","getLiveEventOutput"], () => require("./getLiveEvent"));

export { GetLiveOutputArgs, GetLiveOutputResult, GetLiveOutputOutputArgs } from "./getLiveOutput";
export const getLiveOutput: typeof import("./getLiveOutput").getLiveOutput = null as any;
export const getLiveOutputOutput: typeof import("./getLiveOutput").getLiveOutputOutput = null as any;
utilities.lazyLoad(exports, ["getLiveOutput","getLiveOutputOutput"], () => require("./getLiveOutput"));

export { GetStreamingEndpointArgs, GetStreamingEndpointResult, GetStreamingEndpointOutputArgs } from "./getStreamingEndpoint";
export const getStreamingEndpoint: typeof import("./getStreamingEndpoint").getStreamingEndpoint = null as any;
export const getStreamingEndpointOutput: typeof import("./getStreamingEndpoint").getStreamingEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getStreamingEndpoint","getStreamingEndpointOutput"], () => require("./getStreamingEndpoint"));

export { GetStreamingLocatorArgs, GetStreamingLocatorResult, GetStreamingLocatorOutputArgs } from "./getStreamingLocator";
export const getStreamingLocator: typeof import("./getStreamingLocator").getStreamingLocator = null as any;
export const getStreamingLocatorOutput: typeof import("./getStreamingLocator").getStreamingLocatorOutput = null as any;
utilities.lazyLoad(exports, ["getStreamingLocator","getStreamingLocatorOutput"], () => require("./getStreamingLocator"));

export { GetStreamingPolicyArgs, GetStreamingPolicyResult, GetStreamingPolicyOutputArgs } from "./getStreamingPolicy";
export const getStreamingPolicy: typeof import("./getStreamingPolicy").getStreamingPolicy = null as any;
export const getStreamingPolicyOutput: typeof import("./getStreamingPolicy").getStreamingPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getStreamingPolicy","getStreamingPolicyOutput"], () => require("./getStreamingPolicy"));

export { GetTrackArgs, GetTrackResult, GetTrackOutputArgs } from "./getTrack";
export const getTrack: typeof import("./getTrack").getTrack = null as any;
export const getTrackOutput: typeof import("./getTrack").getTrackOutput = null as any;
utilities.lazyLoad(exports, ["getTrack","getTrackOutput"], () => require("./getTrack"));

export { ListAssetContainerSasArgs, ListAssetContainerSasResult, ListAssetContainerSasOutputArgs } from "./listAssetContainerSas";
export const listAssetContainerSas: typeof import("./listAssetContainerSas").listAssetContainerSas = null as any;
export const listAssetContainerSasOutput: typeof import("./listAssetContainerSas").listAssetContainerSasOutput = null as any;
utilities.lazyLoad(exports, ["listAssetContainerSas","listAssetContainerSasOutput"], () => require("./listAssetContainerSas"));

export { ListAssetStreamingLocatorsArgs, ListAssetStreamingLocatorsResult, ListAssetStreamingLocatorsOutputArgs } from "./listAssetStreamingLocators";
export const listAssetStreamingLocators: typeof import("./listAssetStreamingLocators").listAssetStreamingLocators = null as any;
export const listAssetStreamingLocatorsOutput: typeof import("./listAssetStreamingLocators").listAssetStreamingLocatorsOutput = null as any;
utilities.lazyLoad(exports, ["listAssetStreamingLocators","listAssetStreamingLocatorsOutput"], () => require("./listAssetStreamingLocators"));

export { ListStreamingLocatorContentKeysArgs, ListStreamingLocatorContentKeysResult, ListStreamingLocatorContentKeysOutputArgs } from "./listStreamingLocatorContentKeys";
export const listStreamingLocatorContentKeys: typeof import("./listStreamingLocatorContentKeys").listStreamingLocatorContentKeys = null as any;
export const listStreamingLocatorContentKeysOutput: typeof import("./listStreamingLocatorContentKeys").listStreamingLocatorContentKeysOutput = null as any;
utilities.lazyLoad(exports, ["listStreamingLocatorContentKeys","listStreamingLocatorContentKeysOutput"], () => require("./listStreamingLocatorContentKeys"));

export { ListStreamingLocatorPathsArgs, ListStreamingLocatorPathsResult, ListStreamingLocatorPathsOutputArgs } from "./listStreamingLocatorPaths";
export const listStreamingLocatorPaths: typeof import("./listStreamingLocatorPaths").listStreamingLocatorPaths = null as any;
export const listStreamingLocatorPathsOutput: typeof import("./listStreamingLocatorPaths").listStreamingLocatorPathsOutput = null as any;
utilities.lazyLoad(exports, ["listStreamingLocatorPaths","listStreamingLocatorPathsOutput"], () => require("./listStreamingLocatorPaths"));

export { LiveEventArgs } from "./liveEvent";
export type LiveEvent = import("./liveEvent").LiveEvent;
export const LiveEvent: typeof import("./liveEvent").LiveEvent = null as any;
utilities.lazyLoad(exports, ["LiveEvent"], () => require("./liveEvent"));

export { LiveOutputArgs } from "./liveOutput";
export type LiveOutput = import("./liveOutput").LiveOutput;
export const LiveOutput: typeof import("./liveOutput").LiveOutput = null as any;
utilities.lazyLoad(exports, ["LiveOutput"], () => require("./liveOutput"));

export { StreamingEndpointArgs } from "./streamingEndpoint";
export type StreamingEndpoint = import("./streamingEndpoint").StreamingEndpoint;
export const StreamingEndpoint: typeof import("./streamingEndpoint").StreamingEndpoint = null as any;
utilities.lazyLoad(exports, ["StreamingEndpoint"], () => require("./streamingEndpoint"));

export { StreamingLocatorArgs } from "./streamingLocator";
export type StreamingLocator = import("./streamingLocator").StreamingLocator;
export const StreamingLocator: typeof import("./streamingLocator").StreamingLocator = null as any;
utilities.lazyLoad(exports, ["StreamingLocator"], () => require("./streamingLocator"));

export { StreamingPolicyArgs } from "./streamingPolicy";
export type StreamingPolicy = import("./streamingPolicy").StreamingPolicy;
export const StreamingPolicy: typeof import("./streamingPolicy").StreamingPolicy = null as any;
utilities.lazyLoad(exports, ["StreamingPolicy"], () => require("./streamingPolicy"));

export { TrackArgs } from "./track";
export type Track = import("./track").Track;
export const Track: typeof import("./track").Track = null as any;
utilities.lazyLoad(exports, ["Track"], () => require("./track"));


// Export enums:
export * from "../../types/enums/media/v20220801";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:media/v20220801:AccountFilter":
                return new AccountFilter(name, <any>undefined, { urn })
            case "azure-native:media/v20220801:Asset":
                return new Asset(name, <any>undefined, { urn })
            case "azure-native:media/v20220801:AssetFilter":
                return new AssetFilter(name, <any>undefined, { urn })
            case "azure-native:media/v20220801:ContentKeyPolicy":
                return new ContentKeyPolicy(name, <any>undefined, { urn })
            case "azure-native:media/v20220801:LiveEvent":
                return new LiveEvent(name, <any>undefined, { urn })
            case "azure-native:media/v20220801:LiveOutput":
                return new LiveOutput(name, <any>undefined, { urn })
            case "azure-native:media/v20220801:StreamingEndpoint":
                return new StreamingEndpoint(name, <any>undefined, { urn })
            case "azure-native:media/v20220801:StreamingLocator":
                return new StreamingLocator(name, <any>undefined, { urn })
            case "azure-native:media/v20220801:StreamingPolicy":
                return new StreamingPolicy(name, <any>undefined, { urn })
            case "azure-native:media/v20220801:Track":
                return new Track(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "media/v20220801", _module)
