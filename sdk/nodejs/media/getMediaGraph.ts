// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The Media Graph.
 * API Version: 2020-02-01-preview.
 */
export function getMediaGraph(args: GetMediaGraphArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaGraphResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:media:getMediaGraph", {
        "accountName": args.accountName,
        "mediaGraphName": args.mediaGraphName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetMediaGraphArgs {
    /**
     * The Media Services account name.
     */
    accountName: string;
    /**
     * The Media Graph name.
     */
    mediaGraphName: string;
    /**
     * The name of the resource group within the Azure subscription.
     */
    resourceGroupName: string;
}

/**
 * The Media Graph.
 */
export interface GetMediaGraphResult {
    /**
     * Date the Media Graph was created.
     */
    readonly created: string;
    /**
     * Media Graph description.
     */
    readonly description?: string;
    /**
     * Fully qualified resource ID for the resource.
     */
    readonly id: string;
    /**
     * Date the Media Graph was last modified.
     */
    readonly lastModified: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * Media Graph sinks.
     */
    readonly sinks: outputs.media.MediaGraphAssetSinkResponse[];
    /**
     * Media Graph sources.
     */
    readonly sources: outputs.media.MediaGraphRtspSourceResponse[];
    /**
     * Media Graph state which indicates the resource allocation status for running the media graph pipeline.
     */
    readonly state: string;
    /**
     * The type of the resource.
     */
    readonly type: string;
}
