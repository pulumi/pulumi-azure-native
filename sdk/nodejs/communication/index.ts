// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./communicationService";
export * from "./domain";
export * from "./emailService";
export * from "./getCommunicationService";
export * from "./getDomain";
export * from "./getEmailService";
export * from "./listCommunicationServiceKeys";

// Export enums:
export * from "../types/enums/communication";

// Export sub-modules:
import * as v20200820 from "./v20200820";
import * as v20200820preview from "./v20200820preview";
import * as v20211001preview from "./v20211001preview";

export {
    v20200820,
    v20200820preview,
    v20211001preview,
};

// Import resources to register:
import { CommunicationService } from "./communicationService";
import { Domain } from "./domain";
import { EmailService } from "./emailService";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:communication:CommunicationService":
                return new CommunicationService(name, <any>undefined, { urn })
            case "azure-native:communication:Domain":
                return new Domain(name, <any>undefined, { urn })
            case "azure-native:communication:EmailService":
                return new EmailService(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "communication", _module)
