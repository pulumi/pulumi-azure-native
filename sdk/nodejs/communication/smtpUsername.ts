// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The object describing the smtp username resource.
 *
 * Uses Azure REST API version 2024-09-01-preview.
 *
 * Other available API versions: 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native communication [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class SmtpUsername extends pulumi.CustomResource {
    /**
     * Get an existing SmtpUsername resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SmtpUsername {
        return new SmtpUsername(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:communication:SmtpUsername';

    /**
     * Returns true if the given object is an instance of SmtpUsername.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SmtpUsername {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SmtpUsername.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * The application Id for the linked Entra Application.
     */
    public readonly entraApplicationId!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.communication.SystemDataResponse>;
    /**
     * The tenant of the linked Entra Application.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The SMTP username. Could be free form or in the email address format.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a SmtpUsername resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SmtpUsernameArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.communicationServiceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'communicationServiceName'");
            }
            if (args?.entraApplicationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'entraApplicationId'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.tenantId === undefined && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if (args?.username === undefined && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["communicationServiceName"] = args?.communicationServiceName;
            resourceInputs["entraApplicationId"] = args?.entraApplicationId;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["smtpUsername"] = args?.smtpUsername;
            resourceInputs["tenantId"] = args?.tenantId;
            resourceInputs["username"] = args?.username;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["entraApplicationId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["username"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:communication/v20240901preview:SmtpUsername" }, { type: "azure-native:communication/v20250501preview:SmtpUsername" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(SmtpUsername.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SmtpUsername resource.
 */
export interface SmtpUsernameArgs {
    /**
     * The name of the CommunicationService resource.
     */
    communicationServiceName: pulumi.Input<string>;
    /**
     * The application Id for the linked Entra Application.
     */
    entraApplicationId: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the SmtpUsernameResource.
     */
    smtpUsername?: pulumi.Input<string>;
    /**
     * The tenant of the linked Entra Application.
     */
    tenantId: pulumi.Input<string>;
    /**
     * The SMTP username. Could be free form or in the email address format.
     */
    username: pulumi.Input<string>;
}
