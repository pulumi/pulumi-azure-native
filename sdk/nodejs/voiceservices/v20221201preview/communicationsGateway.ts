// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * A CommunicationsGateway resource
 */
export class CommunicationsGateway extends pulumi.CustomResource {
    /**
     * Get an existing CommunicationsGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CommunicationsGateway {
        return new CommunicationsGateway(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:voiceservices/v20221201preview:CommunicationsGateway';

    /**
     * Returns true if the given object is an instance of CommunicationsGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CommunicationsGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CommunicationsGateway.__pulumiType;
    }

    /**
     * Details of API bridge functionality, if required
     */
    public readonly apiBridge!: pulumi.Output<any | undefined>;
    /**
     * Voice codecs to support
     */
    public readonly codecs!: pulumi.Output<string[]>;
    /**
     * How to connect back to the operator network, e.g. MAPS
     */
    public readonly connectivity!: pulumi.Output<string>;
    /**
     * How to handle 911 calls
     */
    public readonly e911Type!: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * What platforms to support
     */
    public readonly platforms!: pulumi.Output<string[]>;
    /**
     * Resource provisioning state.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The regions in which to deploy the resources needed for Teams Calling
     */
    public readonly serviceLocations!: pulumi.Output<outputs.voiceservices.v20221201preview.ServiceRegionPropertiesResponse[]>;
    /**
     * The current status of the deployment.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.voiceservices.v20221201preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a CommunicationsGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CommunicationsGatewayArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.codecs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'codecs'");
            }
            if ((!args || args.connectivity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectivity'");
            }
            if ((!args || args.e911Type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'e911Type'");
            }
            if ((!args || args.platforms === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platforms'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.serviceLocations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceLocations'");
            }
            resourceInputs["apiBridge"] = args ? args.apiBridge : undefined;
            resourceInputs["codecs"] = args ? args.codecs : undefined;
            resourceInputs["communicationsGatewayName"] = args ? args.communicationsGatewayName : undefined;
            resourceInputs["connectivity"] = args ? args.connectivity : undefined;
            resourceInputs["e911Type"] = args ? args.e911Type : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["platforms"] = args ? args.platforms : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["serviceLocations"] = args ? args.serviceLocations : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["apiBridge"] = undefined /*out*/;
            resourceInputs["codecs"] = undefined /*out*/;
            resourceInputs["connectivity"] = undefined /*out*/;
            resourceInputs["e911Type"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["platforms"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["serviceLocations"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:voiceservices:CommunicationsGateway" }, { type: "azure-native:voiceservices/v20230131:CommunicationsGateway" }, { type: "azure-native:voiceservices/v20230403:CommunicationsGateway" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(CommunicationsGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CommunicationsGateway resource.
 */
export interface CommunicationsGatewayArgs {
    /**
     * Details of API bridge functionality, if required
     */
    apiBridge?: any;
    /**
     * Voice codecs to support
     */
    codecs: pulumi.Input<pulumi.Input<string | enums.voiceservices.v20221201preview.TeamsCodecs>[]>;
    /**
     * Unique identifier for this deployment
     */
    communicationsGatewayName?: pulumi.Input<string>;
    /**
     * How to connect back to the operator network, e.g. MAPS
     */
    connectivity: pulumi.Input<string | enums.voiceservices.v20221201preview.Connectivity>;
    /**
     * How to handle 911 calls
     */
    e911Type: pulumi.Input<string | enums.voiceservices.v20221201preview.E911Type>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * What platforms to support
     */
    platforms: pulumi.Input<pulumi.Input<string | enums.voiceservices.v20221201preview.CommunicationsPlatform>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The regions in which to deploy the resources needed for Teams Calling
     */
    serviceLocations: pulumi.Input<pulumi.Input<inputs.voiceservices.v20221201preview.ServiceRegionPropertiesArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
