// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * An ADP Data Pool.
 */
export class DataPool extends pulumi.CustomResource {
    /**
     * Get an existing DataPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataPool {
        return new DataPool(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:autonomousdevelopmentplatform/v20200701preview:DataPool';

    /**
     * Returns true if the given object is an instance of DataPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataPool.__pulumiType;
    }

    /**
     * The Data Pool's data-plane ID
     */
    public /*out*/ readonly dataPoolId!: pulumi.Output<string>;
    /**
     * Gets or sets the collection of locations where Data Pool resources should be created.
     */
    public readonly locations!: pulumi.Output<outputs.autonomousdevelopmentplatform.v20200701preview.DataPoolLocationResponse[]>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Gets the status of the data pool at the time the operation was called.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DataPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataPoolArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.accountName === undefined) {
                throw new Error("Missing required property 'accountName'");
            }
            if (!args || args.dataPoolName === undefined) {
                throw new Error("Missing required property 'dataPoolName'");
            }
            if (!args || args.locations === undefined) {
                throw new Error("Missing required property 'locations'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["dataPoolName"] = args ? args.dataPoolName : undefined;
            inputs["locations"] = args ? args.locations : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["dataPoolId"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["dataPoolId"] = undefined /*out*/;
            inputs["locations"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(DataPool.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a DataPool resource.
 */
export interface DataPoolArgs {
    /**
     * The name of the ADP account.
     */
    readonly accountName: pulumi.Input<string>;
    /**
     * The name of the Data Pool.
     */
    readonly dataPoolName: pulumi.Input<string>;
    /**
     * Gets or sets the collection of locations where Data Pool resources should be created.
     */
    readonly locations: pulumi.Input<pulumi.Input<inputs.autonomousdevelopmentplatform.v20200701preview.DataPoolLocation>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    readonly resourceGroupName: pulumi.Input<string>;
}
