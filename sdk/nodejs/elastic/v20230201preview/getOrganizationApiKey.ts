// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * The User Api Key created for the Organization associated with the User Email Id that was passed in the request
 */
export function getOrganizationApiKey(args: GetOrganizationApiKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationApiKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:elastic/v20230201preview:getOrganizationApiKey", {
        "emailId": args.emailId,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetOrganizationApiKeyArgs {
    /**
     * The User email Id
     */
    emailId?: string;
    /**
     * The name of the resource group to which the Elastic resource belongs.
     */
    resourceGroupName: string;
}

/**
 * The User Api Key created for the Organization associated with the User Email Id that was passed in the request
 */
export interface GetOrganizationApiKeyResult {
    /**
     * The User Api Key Generated based on ReturnApiKey flag. This is applicable for non-Portal clients only.
     */
    readonly apiKey?: string;
}
/**
 * The User Api Key created for the Organization associated with the User Email Id that was passed in the request
 */
export function getOrganizationApiKeyOutput(args: GetOrganizationApiKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationApiKeyResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationApiKey(a, opts))
}

export interface GetOrganizationApiKeyOutputArgs {
    /**
     * The User email Id
     */
    emailId?: pulumi.Input<string>;
    /**
     * The name of the resource group to which the Elastic resource belongs.
     */
    resourceGroupName: pulumi.Input<string>;
}
