// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * A custom image.
 *
 * @deprecated Version 2015-05-21-preview will be removed in v2 of the provider.
 */
export class CustomImageResource extends pulumi.CustomResource {
    /**
     * Get an existing CustomImageResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomImageResource {
        pulumi.log.warn("CustomImageResource is deprecated: Version 2015-05-21-preview will be removed in v2 of the provider.")
        return new CustomImageResource(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:devtestlab/v20150521preview:CustomImageResource';

    /**
     * Returns true if the given object is an instance of CustomImageResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomImageResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomImageResource.__pulumiType;
    }

    /**
     * The author of the custom image.
     */
    public readonly author!: pulumi.Output<string | undefined>;
    /**
     * The creation date of the custom image.
     */
    public readonly creationDate!: pulumi.Output<string | undefined>;
    /**
     * The description of the custom image.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The location of the resource.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The OS type of the custom image.
     */
    public readonly osType!: pulumi.Output<string | undefined>;
    /**
     * The provisioning status of the resource.
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * The tags of the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The VHD from which the image is to be created.
     */
    public readonly vhd!: pulumi.Output<outputs.devtestlab.v20150521preview.CustomImagePropertiesCustomResponse | undefined>;
    /**
     * Properties for creating a custom image from a virtual machine.
     */
    public readonly vm!: pulumi.Output<outputs.devtestlab.v20150521preview.CustomImagePropertiesFromVmResponse | undefined>;

    /**
     * Create a CustomImageResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2015-05-21-preview will be removed in v2 of the provider. */
    constructor(name: string, args: CustomImageResourceArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("CustomImageResource is deprecated: Version 2015-05-21-preview will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.labName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'labName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["author"] = args ? args.author : undefined;
            resourceInputs["creationDate"] = args ? args.creationDate : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["labName"] = args ? args.labName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["osType"] = args ? args.osType : undefined;
            resourceInputs["provisioningState"] = args ? args.provisioningState : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vhd"] = args ? args.vhd : undefined;
            resourceInputs["vm"] = args ? args.vm : undefined;
        } else {
            resourceInputs["author"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["osType"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["vhd"] = undefined /*out*/;
            resourceInputs["vm"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:devtestlab:CustomImageResource" }, { type: "azure-native:devtestlab/v20160515:CustomImageResource" }, { type: "azure-native:devtestlab/v20180915:CustomImageResource" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(CustomImageResource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CustomImageResource resource.
 */
export interface CustomImageResourceArgs {
    /**
     * The author of the custom image.
     */
    author?: pulumi.Input<string>;
    /**
     * The creation date of the custom image.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The description of the custom image.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier of the resource.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the lab.
     */
    labName: pulumi.Input<string>;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The OS type of the custom image.
     */
    osType?: pulumi.Input<string | enums.devtestlab.v20150521preview.CustomImageOsType>;
    /**
     * The provisioning status of the resource.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
    /**
     * The VHD from which the image is to be created.
     */
    vhd?: pulumi.Input<inputs.devtestlab.v20150521preview.CustomImagePropertiesCustomArgs>;
    /**
     * Properties for creating a custom image from a virtual machine.
     */
    vm?: pulumi.Input<inputs.devtestlab.v20150521preview.CustomImagePropertiesFromVmArgs>;
}
