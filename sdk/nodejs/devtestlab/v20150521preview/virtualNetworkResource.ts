// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * A virtual network.
 */
export class VirtualNetworkResource extends pulumi.CustomResource {
    /**
     * Get an existing VirtualNetworkResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualNetworkResource {
        return new VirtualNetworkResource(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:devtestlab/v20150521preview:VirtualNetworkResource';

    /**
     * Returns true if the given object is an instance of VirtualNetworkResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualNetworkResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualNetworkResource.__pulumiType;
    }

    /**
     * The allowed subnets of the virtual network.
     */
    public readonly allowedSubnets!: pulumi.Output<outputs.devtestlab.v20150521preview.SubnetResponse[] | undefined>;
    /**
     * The description of the virtual network.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Microsoft.Network resource identifier of the virtual network.
     */
    public readonly externalProviderResourceId!: pulumi.Output<string | undefined>;
    /**
     * The location of the resource.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The provisioning status of the resource.
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * The subnet overrides of the virtual network.
     */
    public readonly subnetOverrides!: pulumi.Output<outputs.devtestlab.v20150521preview.SubnetOverrideResponse[] | undefined>;
    /**
     * The tags of the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource.
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a VirtualNetworkResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualNetworkResourceArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.labName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'labName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["allowedSubnets"] = args ? args.allowedSubnets : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["externalProviderResourceId"] = args ? args.externalProviderResourceId : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["labName"] = args ? args.labName : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["provisioningState"] = args ? args.provisioningState : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["subnetOverrides"] = args ? args.subnetOverrides : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["type"] = args ? args.type : undefined;
        } else {
            inputs["allowedSubnets"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["externalProviderResourceId"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["subnetOverrides"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:devtestlab/v20150521preview:VirtualNetworkResource" }, { type: "azure-native:devtestlab:VirtualNetworkResource" }, { type: "azure-nextgen:devtestlab:VirtualNetworkResource" }, { type: "azure-native:devtestlab/v20160515:VirtualNetworkResource" }, { type: "azure-nextgen:devtestlab/v20160515:VirtualNetworkResource" }, { type: "azure-native:devtestlab/v20180915:VirtualNetworkResource" }, { type: "azure-nextgen:devtestlab/v20180915:VirtualNetworkResource" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(VirtualNetworkResource.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a VirtualNetworkResource resource.
 */
export interface VirtualNetworkResourceArgs {
    /**
     * The allowed subnets of the virtual network.
     */
    allowedSubnets?: pulumi.Input<pulumi.Input<inputs.devtestlab.v20150521preview.SubnetArgs>[]>;
    /**
     * The description of the virtual network.
     */
    description?: pulumi.Input<string>;
    /**
     * The Microsoft.Network resource identifier of the virtual network.
     */
    externalProviderResourceId?: pulumi.Input<string>;
    /**
     * The identifier of the resource.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the lab.
     */
    labName: pulumi.Input<string>;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The provisioning status of the resource.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The subnet overrides of the virtual network.
     */
    subnetOverrides?: pulumi.Input<pulumi.Input<inputs.devtestlab.v20150521preview.SubnetOverrideArgs>[]>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
}
