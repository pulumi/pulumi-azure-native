// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * A virtual machine.
 *
 * @deprecated Version 2015-05-21-preview will be removed in v2 of the provider.
 */
export class VirtualMachineResource extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachineResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualMachineResource {
        pulumi.log.warn("VirtualMachineResource is deprecated: Version 2015-05-21-preview will be removed in v2 of the provider.")
        return new VirtualMachineResource(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:devtestlab/v20150521preview:VirtualMachineResource';

    /**
     * Returns true if the given object is an instance of VirtualMachineResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualMachineResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachineResource.__pulumiType;
    }

    /**
     * The artifact deployment status for the virtual machine.
     */
    public readonly artifactDeploymentStatus!: pulumi.Output<outputs.devtestlab.v20150521preview.ArtifactDeploymentStatusPropertiesResponse | undefined>;
    /**
     * The artifacts to be installed on the virtual machine.
     */
    public readonly artifacts!: pulumi.Output<outputs.devtestlab.v20150521preview.ArtifactInstallPropertiesResponse[] | undefined>;
    /**
     * The resource identifier (Microsoft.Compute) of the virtual machine.
     */
    public readonly computeId!: pulumi.Output<string | undefined>;
    /**
     * The email address of creator of the virtual machine.
     */
    public readonly createdByUser!: pulumi.Output<string | undefined>;
    /**
     * The object identifier of the creator of the virtual machine.
     */
    public readonly createdByUserId!: pulumi.Output<string | undefined>;
    /**
     * The custom image identifier of the virtual machine.
     */
    public readonly customImageId!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the virtual machine is to be created without a public IP address.
     */
    public readonly disallowPublicIpAddress!: pulumi.Output<boolean | undefined>;
    /**
     * The fully-qualified domain name of the virtual machine.
     */
    public readonly fqdn!: pulumi.Output<string | undefined>;
    /**
     * The Microsoft Azure Marketplace image reference of the virtual machine.
     */
    public readonly galleryImageReference!: pulumi.Output<outputs.devtestlab.v20150521preview.GalleryImageReferenceResponse | undefined>;
    /**
     * A value indicating whether this virtual machine uses an SSH key for authentication.
     */
    public readonly isAuthenticationWithSshKey!: pulumi.Output<boolean | undefined>;
    /**
     * The lab subnet name of the virtual machine.
     */
    public readonly labSubnetName!: pulumi.Output<string | undefined>;
    /**
     * The lab virtual network identifier of the virtual machine.
     */
    public readonly labVirtualNetworkId!: pulumi.Output<string | undefined>;
    /**
     * The location of the resource.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The notes of the virtual machine.
     */
    public readonly notes!: pulumi.Output<string | undefined>;
    /**
     * The OS type of the virtual machine.
     */
    public readonly osType!: pulumi.Output<string | undefined>;
    /**
     * The object identifier of the owner of the virtual machine.
     */
    public readonly ownerObjectId!: pulumi.Output<string | undefined>;
    /**
     * The password of the virtual machine administrator.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The provisioning status of the resource.
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * The size of the virtual machine.
     */
    public readonly size!: pulumi.Output<string | undefined>;
    /**
     * The SSH key of the virtual machine administrator.
     */
    public readonly sshKey!: pulumi.Output<string | undefined>;
    /**
     * The tags of the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The user name of the virtual machine.
     */
    public readonly userName!: pulumi.Output<string | undefined>;

    /**
     * Create a VirtualMachineResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2015-05-21-preview will be removed in v2 of the provider. */
    constructor(name: string, args: VirtualMachineResourceArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("VirtualMachineResource is deprecated: Version 2015-05-21-preview will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.labName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'labName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["artifactDeploymentStatus"] = args ? args.artifactDeploymentStatus : undefined;
            resourceInputs["artifacts"] = args ? args.artifacts : undefined;
            resourceInputs["computeId"] = args ? args.computeId : undefined;
            resourceInputs["createdByUser"] = args ? args.createdByUser : undefined;
            resourceInputs["createdByUserId"] = args ? args.createdByUserId : undefined;
            resourceInputs["customImageId"] = args ? args.customImageId : undefined;
            resourceInputs["disallowPublicIpAddress"] = args ? args.disallowPublicIpAddress : undefined;
            resourceInputs["fqdn"] = args ? args.fqdn : undefined;
            resourceInputs["galleryImageReference"] = args ? args.galleryImageReference : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["isAuthenticationWithSshKey"] = args ? args.isAuthenticationWithSshKey : undefined;
            resourceInputs["labName"] = args ? args.labName : undefined;
            resourceInputs["labSubnetName"] = args ? args.labSubnetName : undefined;
            resourceInputs["labVirtualNetworkId"] = args ? args.labVirtualNetworkId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["osType"] = args ? args.osType : undefined;
            resourceInputs["ownerObjectId"] = args ? args.ownerObjectId : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["provisioningState"] = args ? args.provisioningState : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["sshKey"] = args ? args.sshKey : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
        } else {
            resourceInputs["artifactDeploymentStatus"] = undefined /*out*/;
            resourceInputs["artifacts"] = undefined /*out*/;
            resourceInputs["computeId"] = undefined /*out*/;
            resourceInputs["createdByUser"] = undefined /*out*/;
            resourceInputs["createdByUserId"] = undefined /*out*/;
            resourceInputs["customImageId"] = undefined /*out*/;
            resourceInputs["disallowPublicIpAddress"] = undefined /*out*/;
            resourceInputs["fqdn"] = undefined /*out*/;
            resourceInputs["galleryImageReference"] = undefined /*out*/;
            resourceInputs["isAuthenticationWithSshKey"] = undefined /*out*/;
            resourceInputs["labSubnetName"] = undefined /*out*/;
            resourceInputs["labVirtualNetworkId"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["notes"] = undefined /*out*/;
            resourceInputs["osType"] = undefined /*out*/;
            resourceInputs["ownerObjectId"] = undefined /*out*/;
            resourceInputs["password"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["sshKey"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["userName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:devtestlab:VirtualMachineResource" }, { type: "azure-native:devtestlab/v20160515:VirtualMachineResource" }, { type: "azure-native:devtestlab/v20180915:VirtualMachineResource" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(VirtualMachineResource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VirtualMachineResource resource.
 */
export interface VirtualMachineResourceArgs {
    /**
     * The artifact deployment status for the virtual machine.
     */
    artifactDeploymentStatus?: pulumi.Input<inputs.devtestlab.v20150521preview.ArtifactDeploymentStatusPropertiesArgs>;
    /**
     * The artifacts to be installed on the virtual machine.
     */
    artifacts?: pulumi.Input<pulumi.Input<inputs.devtestlab.v20150521preview.ArtifactInstallPropertiesArgs>[]>;
    /**
     * The resource identifier (Microsoft.Compute) of the virtual machine.
     */
    computeId?: pulumi.Input<string>;
    /**
     * The email address of creator of the virtual machine.
     */
    createdByUser?: pulumi.Input<string>;
    /**
     * The object identifier of the creator of the virtual machine.
     */
    createdByUserId?: pulumi.Input<string>;
    /**
     * The custom image identifier of the virtual machine.
     */
    customImageId?: pulumi.Input<string>;
    /**
     * Indicates whether the virtual machine is to be created without a public IP address.
     */
    disallowPublicIpAddress?: pulumi.Input<boolean>;
    /**
     * The fully-qualified domain name of the virtual machine.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * The Microsoft Azure Marketplace image reference of the virtual machine.
     */
    galleryImageReference?: pulumi.Input<inputs.devtestlab.v20150521preview.GalleryImageReferenceArgs>;
    /**
     * The identifier of the resource.
     */
    id?: pulumi.Input<string>;
    /**
     * A value indicating whether this virtual machine uses an SSH key for authentication.
     */
    isAuthenticationWithSshKey?: pulumi.Input<boolean>;
    /**
     * The name of the lab.
     */
    labName: pulumi.Input<string>;
    /**
     * The lab subnet name of the virtual machine.
     */
    labSubnetName?: pulumi.Input<string>;
    /**
     * The lab virtual network identifier of the virtual machine.
     */
    labVirtualNetworkId?: pulumi.Input<string>;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The notes of the virtual machine.
     */
    notes?: pulumi.Input<string>;
    /**
     * The OS type of the virtual machine.
     */
    osType?: pulumi.Input<string>;
    /**
     * The object identifier of the owner of the virtual machine.
     */
    ownerObjectId?: pulumi.Input<string>;
    /**
     * The password of the virtual machine administrator.
     */
    password?: pulumi.Input<string>;
    /**
     * The provisioning status of the resource.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The size of the virtual machine.
     */
    size?: pulumi.Input<string>;
    /**
     * The SSH key of the virtual machine administrator.
     */
    sshKey?: pulumi.Input<string>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
    /**
     * The user name of the virtual machine.
     */
    userName?: pulumi.Input<string>;
}
