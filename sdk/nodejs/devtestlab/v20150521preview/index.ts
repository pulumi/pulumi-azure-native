// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ArtifactSourceResourceArgs } from "./artifactSourceResource";
export type ArtifactSourceResource = import("./artifactSourceResource").ArtifactSourceResource;
export const ArtifactSourceResource: typeof import("./artifactSourceResource").ArtifactSourceResource = null as any;
utilities.lazyLoad(exports, ["ArtifactSourceResource"], () => require("./artifactSourceResource"));

export { CustomImageResourceArgs } from "./customImageResource";
export type CustomImageResource = import("./customImageResource").CustomImageResource;
export const CustomImageResource: typeof import("./customImageResource").CustomImageResource = null as any;
utilities.lazyLoad(exports, ["CustomImageResource"], () => require("./customImageResource"));

export { FormulaResourceArgs } from "./formulaResource";
export type FormulaResource = import("./formulaResource").FormulaResource;
export const FormulaResource: typeof import("./formulaResource").FormulaResource = null as any;
utilities.lazyLoad(exports, ["FormulaResource"], () => require("./formulaResource"));

export { GetArtifactSourceResourceArgs, GetArtifactSourceResourceResult, GetArtifactSourceResourceOutputArgs } from "./getArtifactSourceResource";
export const getArtifactSourceResource: typeof import("./getArtifactSourceResource").getArtifactSourceResource = null as any;
export const getArtifactSourceResourceOutput: typeof import("./getArtifactSourceResource").getArtifactSourceResourceOutput = null as any;
utilities.lazyLoad(exports, ["getArtifactSourceResource","getArtifactSourceResourceOutput"], () => require("./getArtifactSourceResource"));

export { GetCustomImageResourceArgs, GetCustomImageResourceResult, GetCustomImageResourceOutputArgs } from "./getCustomImageResource";
export const getCustomImageResource: typeof import("./getCustomImageResource").getCustomImageResource = null as any;
export const getCustomImageResourceOutput: typeof import("./getCustomImageResource").getCustomImageResourceOutput = null as any;
utilities.lazyLoad(exports, ["getCustomImageResource","getCustomImageResourceOutput"], () => require("./getCustomImageResource"));

export { GetFormulaResourceArgs, GetFormulaResourceResult, GetFormulaResourceOutputArgs } from "./getFormulaResource";
export const getFormulaResource: typeof import("./getFormulaResource").getFormulaResource = null as any;
export const getFormulaResourceOutput: typeof import("./getFormulaResource").getFormulaResourceOutput = null as any;
utilities.lazyLoad(exports, ["getFormulaResource","getFormulaResourceOutput"], () => require("./getFormulaResource"));

export { GetLabResourceArgs, GetLabResourceResult, GetLabResourceOutputArgs } from "./getLabResource";
export const getLabResource: typeof import("./getLabResource").getLabResource = null as any;
export const getLabResourceOutput: typeof import("./getLabResource").getLabResourceOutput = null as any;
utilities.lazyLoad(exports, ["getLabResource","getLabResourceOutput"], () => require("./getLabResource"));

export { GetPolicyResourceArgs, GetPolicyResourceResult, GetPolicyResourceOutputArgs } from "./getPolicyResource";
export const getPolicyResource: typeof import("./getPolicyResource").getPolicyResource = null as any;
export const getPolicyResourceOutput: typeof import("./getPolicyResource").getPolicyResourceOutput = null as any;
utilities.lazyLoad(exports, ["getPolicyResource","getPolicyResourceOutput"], () => require("./getPolicyResource"));

export { GetScheduleResourceArgs, GetScheduleResourceResult, GetScheduleResourceOutputArgs } from "./getScheduleResource";
export const getScheduleResource: typeof import("./getScheduleResource").getScheduleResource = null as any;
export const getScheduleResourceOutput: typeof import("./getScheduleResource").getScheduleResourceOutput = null as any;
utilities.lazyLoad(exports, ["getScheduleResource","getScheduleResourceOutput"], () => require("./getScheduleResource"));

export { GetVirtualMachineResourceArgs, GetVirtualMachineResourceResult, GetVirtualMachineResourceOutputArgs } from "./getVirtualMachineResource";
export const getVirtualMachineResource: typeof import("./getVirtualMachineResource").getVirtualMachineResource = null as any;
export const getVirtualMachineResourceOutput: typeof import("./getVirtualMachineResource").getVirtualMachineResourceOutput = null as any;
utilities.lazyLoad(exports, ["getVirtualMachineResource","getVirtualMachineResourceOutput"], () => require("./getVirtualMachineResource"));

export { GetVirtualNetworkResourceArgs, GetVirtualNetworkResourceResult, GetVirtualNetworkResourceOutputArgs } from "./getVirtualNetworkResource";
export const getVirtualNetworkResource: typeof import("./getVirtualNetworkResource").getVirtualNetworkResource = null as any;
export const getVirtualNetworkResourceOutput: typeof import("./getVirtualNetworkResource").getVirtualNetworkResourceOutput = null as any;
utilities.lazyLoad(exports, ["getVirtualNetworkResource","getVirtualNetworkResourceOutput"], () => require("./getVirtualNetworkResource"));

export { LabResourceArgs } from "./labResource";
export type LabResource = import("./labResource").LabResource;
export const LabResource: typeof import("./labResource").LabResource = null as any;
utilities.lazyLoad(exports, ["LabResource"], () => require("./labResource"));

export { ListLabVhdsArgs, ListLabVhdsResult, ListLabVhdsOutputArgs } from "./listLabVhds";
export const listLabVhds: typeof import("./listLabVhds").listLabVhds = null as any;
export const listLabVhdsOutput: typeof import("./listLabVhds").listLabVhdsOutput = null as any;
utilities.lazyLoad(exports, ["listLabVhds","listLabVhdsOutput"], () => require("./listLabVhds"));

export { PolicyResourceArgs } from "./policyResource";
export type PolicyResource = import("./policyResource").PolicyResource;
export const PolicyResource: typeof import("./policyResource").PolicyResource = null as any;
utilities.lazyLoad(exports, ["PolicyResource"], () => require("./policyResource"));

export { ScheduleResourceArgs } from "./scheduleResource";
export type ScheduleResource = import("./scheduleResource").ScheduleResource;
export const ScheduleResource: typeof import("./scheduleResource").ScheduleResource = null as any;
utilities.lazyLoad(exports, ["ScheduleResource"], () => require("./scheduleResource"));

export { VirtualMachineResourceArgs } from "./virtualMachineResource";
export type VirtualMachineResource = import("./virtualMachineResource").VirtualMachineResource;
export const VirtualMachineResource: typeof import("./virtualMachineResource").VirtualMachineResource = null as any;
utilities.lazyLoad(exports, ["VirtualMachineResource"], () => require("./virtualMachineResource"));

export { VirtualNetworkResourceArgs } from "./virtualNetworkResource";
export type VirtualNetworkResource = import("./virtualNetworkResource").VirtualNetworkResource;
export const VirtualNetworkResource: typeof import("./virtualNetworkResource").VirtualNetworkResource = null as any;
utilities.lazyLoad(exports, ["VirtualNetworkResource"], () => require("./virtualNetworkResource"));


// Export enums:
export * from "../../types/enums/devtestlab/v20150521preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:devtestlab/v20150521preview:ArtifactSourceResource":
                return new ArtifactSourceResource(name, <any>undefined, { urn })
            case "azure-native:devtestlab/v20150521preview:CustomImageResource":
                return new CustomImageResource(name, <any>undefined, { urn })
            case "azure-native:devtestlab/v20150521preview:FormulaResource":
                return new FormulaResource(name, <any>undefined, { urn })
            case "azure-native:devtestlab/v20150521preview:LabResource":
                return new LabResource(name, <any>undefined, { urn })
            case "azure-native:devtestlab/v20150521preview:PolicyResource":
                return new PolicyResource(name, <any>undefined, { urn })
            case "azure-native:devtestlab/v20150521preview:ScheduleResource":
                return new ScheduleResource(name, <any>undefined, { urn })
            case "azure-native:devtestlab/v20150521preview:VirtualMachineResource":
                return new VirtualMachineResource(name, <any>undefined, { urn })
            case "azure-native:devtestlab/v20150521preview:VirtualNetworkResource":
                return new VirtualNetworkResource(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "devtestlab/v20150521preview", _module)
