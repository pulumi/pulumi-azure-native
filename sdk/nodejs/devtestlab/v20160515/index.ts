// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./artifactSource";
export * from "./customImage";
export * from "./disk";
export * from "./environment";
export * from "./formula";
export * from "./getArtifactSource";
export * from "./getCustomImage";
export * from "./getDisk";
export * from "./getEnvironment";
export * from "./getFormula";
export * from "./getGlobalSchedule";
export * from "./getLab";
export * from "./getNotificationChannel";
export * from "./getPolicy";
export * from "./getSchedule";
export * from "./getSecret";
export * from "./getServiceRunner";
export * from "./getUser";
export * from "./getVirtualMachine";
export * from "./getVirtualMachineSchedule";
export * from "./getVirtualNetwork";
export * from "./globalSchedule";
export * from "./lab";
export * from "./listLabVhds";
export * from "./listScheduleApplicable";
export * from "./listVirtualMachineApplicableSchedules";
export * from "./notificationChannel";
export * from "./policy";
export * from "./schedule";
export * from "./secret";
export * from "./serviceRunner";
export * from "./user";
export * from "./virtualMachine";
export * from "./virtualMachineSchedule";
export * from "./virtualNetwork";

// Export enums:
export * from "../../types/enums/devtestlab/v20160515";

// Import resources to register:
import { ArtifactSource } from "./artifactSource";
import { CustomImage } from "./customImage";
import { Disk } from "./disk";
import { Environment } from "./environment";
import { Formula } from "./formula";
import { GlobalSchedule } from "./globalSchedule";
import { Lab } from "./lab";
import { NotificationChannel } from "./notificationChannel";
import { Policy } from "./policy";
import { Schedule } from "./schedule";
import { Secret } from "./secret";
import { ServiceRunner } from "./serviceRunner";
import { User } from "./user";
import { VirtualMachine } from "./virtualMachine";
import { VirtualMachineSchedule } from "./virtualMachineSchedule";
import { VirtualNetwork } from "./virtualNetwork";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:devtestlab/v20160515:ArtifactSource":
                return new ArtifactSource(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:CustomImage":
                return new CustomImage(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:Disk":
                return new Disk(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:Environment":
                return new Environment(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:Formula":
                return new Formula(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:GlobalSchedule":
                return new GlobalSchedule(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:Lab":
                return new Lab(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:NotificationChannel":
                return new NotificationChannel(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:Policy":
                return new Policy(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:Schedule":
                return new Schedule(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:Secret":
                return new Secret(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:ServiceRunner":
                return new ServiceRunner(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:User":
                return new User(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:VirtualMachine":
                return new VirtualMachine(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:VirtualMachineSchedule":
                return new VirtualMachineSchedule(name, <any>undefined, { urn })
            case "azure-nextgen:devtestlab/v20160515:VirtualNetwork":
                return new VirtualNetwork(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "devtestlab/v20160515", _module)
