// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * A lab.
 *
 * @deprecated Version 2016-05-15 will be removed in v2 of the provider.
 */
export class Lab extends pulumi.CustomResource {
    /**
     * Get an existing Lab resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Lab {
        pulumi.log.warn("Lab is deprecated: Version 2016-05-15 will be removed in v2 of the provider.")
        return new Lab(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:devtestlab/v20160515:Lab';

    /**
     * Returns true if the given object is an instance of Lab.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Lab {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Lab.__pulumiType;
    }

    /**
     * The lab's artifact storage account.
     */
    public /*out*/ readonly artifactsStorageAccount!: pulumi.Output<string>;
    /**
     * The creation date of the lab.
     */
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    /**
     * The lab's default premium storage account.
     */
    public /*out*/ readonly defaultPremiumStorageAccount!: pulumi.Output<string>;
    /**
     * The lab's default storage account.
     */
    public /*out*/ readonly defaultStorageAccount!: pulumi.Output<string>;
    /**
     * Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
     */
    public readonly labStorageType!: pulumi.Output<string | undefined>;
    /**
     * The location of the resource.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The lab's premium data disk storage account.
     */
    public /*out*/ readonly premiumDataDiskStorageAccount!: pulumi.Output<string>;
    /**
     * The setting to enable usage of premium data disks.
     * When its value is 'Enabled', creation of standard or premium data disks is allowed.
     * When its value is 'Disabled', only creation of standard data disks is allowed.
     */
    public readonly premiumDataDisks!: pulumi.Output<string | undefined>;
    /**
     * The provisioning status of the resource.
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * The tags of the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The unique immutable identifier of a resource (Guid).
     */
    public readonly uniqueIdentifier!: pulumi.Output<string | undefined>;
    /**
     * The lab's Key vault.
     */
    public /*out*/ readonly vaultName!: pulumi.Output<string>;

    /**
     * Create a Lab resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2016-05-15 will be removed in v2 of the provider. */
    constructor(name: string, args: LabArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Lab is deprecated: Version 2016-05-15 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["labStorageType"] = args ? args.labStorageType : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["premiumDataDisks"] = args ? args.premiumDataDisks : undefined;
            resourceInputs["provisioningState"] = args ? args.provisioningState : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["uniqueIdentifier"] = args ? args.uniqueIdentifier : undefined;
            resourceInputs["artifactsStorageAccount"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["defaultPremiumStorageAccount"] = undefined /*out*/;
            resourceInputs["defaultStorageAccount"] = undefined /*out*/;
            resourceInputs["premiumDataDiskStorageAccount"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["vaultName"] = undefined /*out*/;
        } else {
            resourceInputs["artifactsStorageAccount"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["defaultPremiumStorageAccount"] = undefined /*out*/;
            resourceInputs["defaultStorageAccount"] = undefined /*out*/;
            resourceInputs["labStorageType"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["premiumDataDiskStorageAccount"] = undefined /*out*/;
            resourceInputs["premiumDataDisks"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uniqueIdentifier"] = undefined /*out*/;
            resourceInputs["vaultName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:devtestlab:Lab" }, { type: "azure-native:devtestlab/v20150521preview:Lab" }, { type: "azure-native:devtestlab/v20180915:Lab" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Lab.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Lab resource.
 */
export interface LabArgs {
    /**
     * Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
     */
    labStorageType?: pulumi.Input<string | enums.devtestlab.v20160515.StorageType>;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the lab.
     */
    name?: pulumi.Input<string>;
    /**
     * The setting to enable usage of premium data disks.
     * When its value is 'Enabled', creation of standard or premium data disks is allowed.
     * When its value is 'Disabled', only creation of standard data disks is allowed.
     */
    premiumDataDisks?: pulumi.Input<string | enums.devtestlab.v20160515.PremiumDataDisk>;
    /**
     * The provisioning status of the resource.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The unique immutable identifier of a resource (Guid).
     */
    uniqueIdentifier?: pulumi.Input<string>;
}
