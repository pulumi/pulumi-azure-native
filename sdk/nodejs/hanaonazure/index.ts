// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getHanaInstance";
export * from "./getProviderInstance";
export * from "./getSapMonitor";
export * from "./hanaInstance";
export * from "./providerInstance";
export * from "./sapMonitor";

// Export enums:
export * from "../types/enums/hanaonazure";

// Export sub-modules:
import * as v20171103preview from "./v20171103preview";
import * as v20200207preview from "./v20200207preview";

export {
    v20171103preview,
    v20200207preview,
};

// Import resources to register:
import { HanaInstance } from "./hanaInstance";
import { ProviderInstance } from "./providerInstance";
import { SapMonitor } from "./sapMonitor";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:hanaonazure:HanaInstance":
                return new HanaInstance(name, <any>undefined, { urn })
            case "azure-nextgen:hanaonazure:ProviderInstance":
                return new ProviderInstance(name, <any>undefined, { urn })
            case "azure-nextgen:hanaonazure:SapMonitor":
                return new SapMonitor(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "hanaonazure", _module)
