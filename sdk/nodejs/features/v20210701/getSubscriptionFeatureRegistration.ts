// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Subscription feature registration details
 */
export function getSubscriptionFeatureRegistration(args: GetSubscriptionFeatureRegistrationArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionFeatureRegistrationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:features/v20210701:getSubscriptionFeatureRegistration", {
        "featureName": args.featureName,
        "providerNamespace": args.providerNamespace,
    }, opts);
}

export interface GetSubscriptionFeatureRegistrationArgs {
    /**
     * The feature name.
     */
    featureName: string;
    /**
     * The provider namespace.
     */
    providerNamespace: string;
}

/**
 * Subscription feature registration details
 */
export interface GetSubscriptionFeatureRegistrationResult {
    /**
     * Azure resource Id.
     */
    readonly id: string;
    /**
     * Azure resource name.
     */
    readonly name: string;
    readonly properties: outputs.features.v20210701.SubscriptionFeatureRegistrationResponseProperties;
    /**
     * Azure resource type.
     */
    readonly type: string;
}

export function getSubscriptionFeatureRegistrationOutput(args: GetSubscriptionFeatureRegistrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriptionFeatureRegistrationResult> {
    return pulumi.output(args).apply(a => getSubscriptionFeatureRegistration(a, opts))
}

export interface GetSubscriptionFeatureRegistrationOutputArgs {
    /**
     * The feature name.
     */
    featureName: pulumi.Input<string>;
    /**
     * The provider namespace.
     */
    providerNamespace: pulumi.Input<string>;
}
