// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./provider";

// Export sub-modules:
export * as aad from "./aad";
export * as aadiam from "./aadiam";
export * as addons from "./addons";
export * as advisor from "./advisor";
export * as agfoodplatform from "./agfoodplatform";
export * as alertsmanagement from "./alertsmanagement";
export * as analysisservices from "./analysisservices";
export * as apimanagement from "./apimanagement";
export * as app from "./app";
export * as appconfiguration from "./appconfiguration";
export * as appplatform from "./appplatform";
export * as attestation from "./attestation";
export * as authorization from "./authorization";
export * as automanage from "./automanage";
export * as automation from "./automation";
export * as autonomousdevelopmentplatform from "./autonomousdevelopmentplatform";
export * as avs from "./avs";
export * as azureactivedirectory from "./azureactivedirectory";
export * as azurearcdata from "./azurearcdata";
export * as azuredata from "./azuredata";
export * as azurestack from "./azurestack";
export * as azurestackhci from "./azurestackhci";
export * as batch from "./batch";
export * as billing from "./billing";
export * as blockchain from "./blockchain";
export * as blueprint from "./blueprint";
export * as botservice from "./botservice";
export * as cache from "./cache";
export * as cdn from "./cdn";
export * as certificateregistration from "./certificateregistration";
export * as changeanalysis from "./changeanalysis";
export * as chaos from "./chaos";
export * as cognitiveservices from "./cognitiveservices";
export * as communication from "./communication";
export * as compute from "./compute";
export * as confidentialledger from "./confidentialledger";
export * as config from "./config";
export * as confluent from "./confluent";
export * as connectedvmwarevsphere from "./connectedvmwarevsphere";
export * as consumption from "./consumption";
export * as containerinstance from "./containerinstance";
export * as containerregistry from "./containerregistry";
export * as containerservice from "./containerservice";
export * as costmanagement from "./costmanagement";
export * as customerinsights from "./customerinsights";
export * as customproviders from "./customproviders";
export * as dashboard from "./dashboard";
export * as databox from "./databox";
export * as databoxedge from "./databoxedge";
export * as databricks from "./databricks";
export * as datacatalog from "./datacatalog";
export * as datadog from "./datadog";
export * as datafactory from "./datafactory";
export * as datalakeanalytics from "./datalakeanalytics";
export * as datalakestore from "./datalakestore";
export * as datamigration from "./datamigration";
export * as dataprotection from "./dataprotection";
export * as datashare from "./datashare";
export * as dbformariadb from "./dbformariadb";
export * as dbformysql from "./dbformysql";
export * as dbforpostgresql from "./dbforpostgresql";
export * as delegatednetwork from "./delegatednetwork";
export * as deploymentmanager from "./deploymentmanager";
export * as desktopvirtualization from "./desktopvirtualization";
export * as devhub from "./devhub";
export * as devices from "./devices";
export * as deviceupdate from "./deviceupdate";
export * as devops from "./devops";
export * as devspaces from "./devspaces";
export * as devtestlab from "./devtestlab";
export * as digitaltwins from "./digitaltwins";
export * as documentdb from "./documentdb";
export * as domainregistration from "./domainregistration";
export * as dynamics365fraudprotection from "./dynamics365fraudprotection";
export * as edgeorder from "./edgeorder";
export * as education from "./education";
export * as elastic from "./elastic";
export * as elasticsan from "./elasticsan";
export * as engagementfabric from "./engagementfabric";
export * as enterpriseknowledgegraph from "./enterpriseknowledgegraph";
export * as eventgrid from "./eventgrid";
export * as eventhub from "./eventhub";
export * as extendedlocation from "./extendedlocation";
export * as features from "./features";
export * as fluidrelay from "./fluidrelay";
export * as guestconfiguration from "./guestconfiguration";
export * as hanaonazure from "./hanaonazure";
export * as hardwaresecuritymodules from "./hardwaresecuritymodules";
export * as hdinsight from "./hdinsight";
export * as healthbot from "./healthbot";
export * as healthcareapis from "./healthcareapis";
export * as hybridcompute from "./hybridcompute";
export * as hybridconnectivity from "./hybridconnectivity";
export * as hybriddata from "./hybriddata";
export * as hybridnetwork from "./hybridnetwork";
export * as importexport from "./importexport";
export * as insights from "./insights";
export * as intune from "./intune";
export * as iotcentral from "./iotcentral";
export * as iotsecurity from "./iotsecurity";
export * as keyvault from "./keyvault";
export * as kubernetes from "./kubernetes";
export * as kubernetesconfiguration from "./kubernetesconfiguration";
export * as kusto from "./kusto";
export * as labservices from "./labservices";
export * as loadtestservice from "./loadtestservice";
export * as logic from "./logic";
export * as logz from "./logz";
export * as m365securityandcompliance from "./m365securityandcompliance";
export * as machinelearning from "./machinelearning";
export * as machinelearningcompute from "./machinelearningcompute";
export * as machinelearningexperimentation from "./machinelearningexperimentation";
export * as machinelearningservices from "./machinelearningservices";
export * as maintenance from "./maintenance";
export * as managedidentity from "./managedidentity";
export * as managednetwork from "./managednetwork";
export * as managedservices from "./managedservices";
export * as management from "./management";
export * as managementpartner from "./managementpartner";
export * as maps from "./maps";
export * as marketplace from "./marketplace";
export * as media from "./media";
export * as migrate from "./migrate";
export * as mixedreality from "./mixedreality";
export * as mobilenetwork from "./mobilenetwork";
export * as netapp from "./netapp";
export * as network from "./network";
export * as networkfunction from "./networkfunction";
export * as notificationhubs from "./notificationhubs";
export * as offazure from "./offazure";
export * as openenergyplatform from "./openenergyplatform";
export * as operationalinsights from "./operationalinsights";
export * as operationsmanagement from "./operationsmanagement";
export * as orbital from "./orbital";
export * as peering from "./peering";
export * as policyinsights from "./policyinsights";
export * as portal from "./portal";
export * as powerbi from "./powerbi";
export * as powerbidedicated from "./powerbidedicated";
export * as powerplatform from "./powerplatform";
export * as providerhub from "./providerhub";
export * as purview from "./purview";
export * as quantum from "./quantum";
export * as recommendationsservice from "./recommendationsservice";
export * as recoveryservices from "./recoveryservices";
export * as redhatopenshift from "./redhatopenshift";
export * as relay from "./relay";
export * as resourceconnector from "./resourceconnector";
export * as resourcegraph from "./resourcegraph";
export * as resources from "./resources";
export * as saas from "./saas";
export * as scheduler from "./scheduler";
export * as scvmm from "./scvmm";
export * as search from "./search";
export * as security from "./security";
export * as securityandcompliance from "./securityandcompliance";
export * as securityinsights from "./securityinsights";
export * as serialconsole from "./serialconsole";
export * as servicebus from "./servicebus";
export * as servicefabric from "./servicefabric";
export * as servicefabricmesh from "./servicefabricmesh";
export * as servicelinker from "./servicelinker";
export * as signalrservice from "./signalrservice";
export * as softwareplan from "./softwareplan";
export * as solutions from "./solutions";
export * as sql from "./sql";
export * as sqlvirtualmachine from "./sqlvirtualmachine";
export * as storage from "./storage";
export * as storagecache from "./storagecache";
export * as storagepool from "./storagepool";
export * as storagesync from "./storagesync";
export * as storsimple from "./storsimple";
export * as streamanalytics from "./streamanalytics";
export * as subscription from "./subscription";
export * as synapse from "./synapse";
export * as testbase from "./testbase";
export * as timeseriesinsights from "./timeseriesinsights";
export * as types from "./types";
export * as videoanalyzer from "./videoanalyzer";
export * as videoindexer from "./videoindexer";
export * as virtualmachineimages from "./virtualmachineimages";
export * as visualstudio from "./visualstudio";
export * as vmwarecloudsimple from "./vmwarecloudsimple";
export * as web from "./web";
export * as webpubsub from "./webpubsub";
export * as windowsesu from "./windowsesu";
export * as windowsiot from "./windowsiot";
export * as workloads from "./workloads";

for (let prop of Object.getOwnPropertyNames(exports)) {
  if (prop == "Provider" || prop.startsWith("_")) {
    continue;
  }
  let __cachedModule: any;
  Object.defineProperty(exports, prop, {
    get: function () {
      let cached = __cachedModule;
      if (cached) {
        return cached;
      }
      return (__cachedModule = require("./" + prop));
    },
  });
}

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("azure-native", {
  version: utilities.getVersion(),
  constructProvider: (
    name: string,
    type: string,
    urn: string
  ): pulumi.ProviderResource => {
    if (type !== "pulumi:providers:azure-native") {
      throw new Error(`unknown provider type ${type}`);
    }
    return new Provider(name, <any>undefined, { urn });
  },
});
