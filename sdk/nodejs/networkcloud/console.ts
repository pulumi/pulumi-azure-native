// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Uses Azure REST API version 2025-02-01. In version 2.x of the Azure Native provider, it used API version 2023-10-01-preview.
 *
 * Other available API versions: 2024-07-01, 2024-10-01-preview, 2025-07-01-preview, 2025-09-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native networkcloud [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Console extends pulumi.CustomResource {
    /**
     * Get an existing Console resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Console {
        return new Console(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:networkcloud:Console';

    /**
     * Returns true if the given object is an instance of Console.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Console {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Console.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The more detailed status of the console.
     */
    declare public /*out*/ readonly detailedStatus: pulumi.Output<string>;
    /**
     * The descriptive message about the current detailed status.
     */
    declare public /*out*/ readonly detailedStatusMessage: pulumi.Output<string>;
    /**
     * The indicator of whether the console access is enabled.
     */
    declare public readonly enabled: pulumi.Output<string>;
    /**
     * Resource ETag.
     */
    declare public /*out*/ readonly etag: pulumi.Output<string>;
    /**
     * The date and time after which the key will be disallowed access.
     */
    declare public readonly expiration: pulumi.Output<string | undefined>;
    /**
     * The extended location of the cluster manager associated with the cluster this virtual machine is created on.
     */
    declare public readonly extendedLocation: pulumi.Output<outputs.networkcloud.ExtendedLocationResponse>;
    /**
     * The geo-location where the resource lives
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The resource ID of the private link service that is used to provide virtual machine console access.
     */
    declare public /*out*/ readonly privateLinkServiceId: pulumi.Output<string>;
    /**
     * The provisioning state of the virtual machine console.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * The SSH public key that will be provisioned for user access. The user is expected to have the corresponding SSH private key for logging in.
     */
    declare public readonly sshPublicKey: pulumi.Output<outputs.networkcloud.SshPublicKeyResponse>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.networkcloud.SystemDataResponse>;
    /**
     * Resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * The unique identifier for the virtual machine that is used to access the console.
     */
    declare public /*out*/ readonly virtualMachineAccessId: pulumi.Output<string>;

    /**
     * Create a Console resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConsoleArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.enabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if (args?.extendedLocation === undefined && !opts.urn) {
                throw new Error("Missing required property 'extendedLocation'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.sshPublicKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'sshPublicKey'");
            }
            if (args?.virtualMachineName === undefined && !opts.urn) {
                throw new Error("Missing required property 'virtualMachineName'");
            }
            resourceInputs["consoleName"] = args?.consoleName;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["expiration"] = args?.expiration;
            resourceInputs["extendedLocation"] = args?.extendedLocation;
            resourceInputs["location"] = args?.location;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["sshPublicKey"] = args?.sshPublicKey;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["virtualMachineName"] = args?.virtualMachineName;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["detailedStatus"] = undefined /*out*/;
            resourceInputs["detailedStatusMessage"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["privateLinkServiceId"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["virtualMachineAccessId"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["detailedStatus"] = undefined /*out*/;
            resourceInputs["detailedStatusMessage"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["expiration"] = undefined /*out*/;
            resourceInputs["extendedLocation"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["privateLinkServiceId"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["sshPublicKey"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["virtualMachineAccessId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:networkcloud/v20230701:Console" }, { type: "azure-native:networkcloud/v20231001preview:Console" }, { type: "azure-native:networkcloud/v20240601preview:Console" }, { type: "azure-native:networkcloud/v20240701:Console" }, { type: "azure-native:networkcloud/v20241001preview:Console" }, { type: "azure-native:networkcloud/v20250201:Console" }, { type: "azure-native:networkcloud/v20250701preview:Console" }, { type: "azure-native:networkcloud/v20250901:Console" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Console.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Console resource.
 */
export interface ConsoleArgs {
    /**
     * The name of the virtual machine console.
     */
    consoleName?: pulumi.Input<string>;
    /**
     * The indicator of whether the console access is enabled.
     */
    enabled: pulumi.Input<string | enums.networkcloud.ConsoleEnabled>;
    /**
     * The date and time after which the key will be disallowed access.
     */
    expiration?: pulumi.Input<string>;
    /**
     * The extended location of the cluster manager associated with the cluster this virtual machine is created on.
     */
    extendedLocation: pulumi.Input<inputs.networkcloud.ExtendedLocationArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SSH public key that will be provisioned for user access. The user is expected to have the corresponding SSH private key for logging in.
     */
    sshPublicKey: pulumi.Input<inputs.networkcloud.SshPublicKeyArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the virtual machine.
     */
    virtualMachineName: pulumi.Input<string>;
}
