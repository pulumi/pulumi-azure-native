// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * API Version: 2022-12-12-preview.
 */
export class BmcKeySet extends pulumi.CustomResource {
    /**
     * Get an existing BmcKeySet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BmcKeySet {
        return new BmcKeySet(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:networkcloud:BmcKeySet';

    /**
     * Returns true if the given object is an instance of BmcKeySet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BmcKeySet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BmcKeySet.__pulumiType;
    }

    /**
     * The object ID of Azure Active Directory group that all users in the list must be in for access to be granted. Users that are not in the group will not have access.
     */
    public readonly azureGroupId!: pulumi.Output<string>;
    /**
     * The more detailed status of the key set.
     */
    public /*out*/ readonly detailedStatus!: pulumi.Output<string>;
    /**
     * The descriptive message about the current detailed status.
     */
    public /*out*/ readonly detailedStatusMessage!: pulumi.Output<string>;
    /**
     * The date and time after which the users in this key set will be removed from the baseboard management controllers.
     */
    public readonly expiration!: pulumi.Output<string>;
    /**
     * The extended location of the cluster associated with the resource.
     */
    public readonly extendedLocation!: pulumi.Output<outputs.networkcloud.ExtendedLocationResponse>;
    /**
     * The last time this key set was validated.
     */
    public /*out*/ readonly lastValidation!: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The access level allowed for the users in this key set.
     */
    public readonly privilegeLevel!: pulumi.Output<string>;
    /**
     * The provisioning state of the baseboard management controller key set.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.networkcloud.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The unique list of permitted users.
     */
    public readonly userList!: pulumi.Output<outputs.networkcloud.KeySetUserResponse[]>;
    /**
     * The status evaluation of each user.
     */
    public /*out*/ readonly userListStatus!: pulumi.Output<outputs.networkcloud.KeySetUserStatusResponse[]>;

    /**
     * Create a BmcKeySet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BmcKeySetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.azureGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'azureGroupId'");
            }
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.expiration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'expiration'");
            }
            if ((!args || args.extendedLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'extendedLocation'");
            }
            if ((!args || args.privilegeLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privilegeLevel'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.userList === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userList'");
            }
            resourceInputs["azureGroupId"] = args ? args.azureGroupId : undefined;
            resourceInputs["bmcKeySetName"] = args ? args.bmcKeySetName : undefined;
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["expiration"] = args ? args.expiration : undefined;
            resourceInputs["extendedLocation"] = args ? args.extendedLocation : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["privilegeLevel"] = args ? args.privilegeLevel : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userList"] = args ? args.userList : undefined;
            resourceInputs["detailedStatus"] = undefined /*out*/;
            resourceInputs["detailedStatusMessage"] = undefined /*out*/;
            resourceInputs["lastValidation"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["userListStatus"] = undefined /*out*/;
        } else {
            resourceInputs["azureGroupId"] = undefined /*out*/;
            resourceInputs["detailedStatus"] = undefined /*out*/;
            resourceInputs["detailedStatusMessage"] = undefined /*out*/;
            resourceInputs["expiration"] = undefined /*out*/;
            resourceInputs["extendedLocation"] = undefined /*out*/;
            resourceInputs["lastValidation"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["privilegeLevel"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["userList"] = undefined /*out*/;
            resourceInputs["userListStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:networkcloud/v20221212preview:BmcKeySet" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(BmcKeySet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a BmcKeySet resource.
 */
export interface BmcKeySetArgs {
    /**
     * The object ID of Azure Active Directory group that all users in the list must be in for access to be granted. Users that are not in the group will not have access.
     */
    azureGroupId: pulumi.Input<string>;
    /**
     * The name of the baseboard management controller key set.
     */
    bmcKeySetName?: pulumi.Input<string>;
    /**
     * The name of the cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The date and time after which the users in this key set will be removed from the baseboard management controllers.
     */
    expiration: pulumi.Input<string>;
    /**
     * The extended location of the cluster associated with the resource.
     */
    extendedLocation: pulumi.Input<inputs.networkcloud.ExtendedLocationArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The access level allowed for the users in this key set.
     */
    privilegeLevel: pulumi.Input<string | enums.networkcloud.BmcKeySetPrivilegeLevel>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The unique list of permitted users.
     */
    userList: pulumi.Input<pulumi.Input<inputs.networkcloud.KeySetUserArgs>[]>;
}
