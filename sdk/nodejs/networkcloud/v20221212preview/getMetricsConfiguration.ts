// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get metrics configuration of the provided cluster.
 */
export function getMetricsConfiguration(args: GetMetricsConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricsConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:networkcloud/v20221212preview:getMetricsConfiguration", {
        "clusterName": args.clusterName,
        "metricsConfigurationName": args.metricsConfigurationName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetMetricsConfigurationArgs {
    /**
     * The name of the cluster.
     */
    clusterName: string;
    /**
     * The name of the metrics configuration for the cluster.
     */
    metricsConfigurationName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}

export interface GetMetricsConfigurationResult {
    /**
     * The interval in minutes by which metrics will be collected.
     */
    readonly collectionInterval: number;
    /**
     * The more detailed status of the metrics configuration.
     */
    readonly detailedStatus: string;
    /**
     * The descriptive message about the current detailed status.
     */
    readonly detailedStatusMessage: string;
    /**
     * The list of metrics that are available for the cluster but disabled at the moment.
     */
    readonly disabledMetrics: string[];
    /**
     * The list of metric names that have been chosen to be enabled in addition to the core set of enabled metrics.
     */
    readonly enabledMetrics?: string[];
    /**
     * The extended location of the cluster associated with the resource.
     */
    readonly extendedLocation: outputs.networkcloud.v20221212preview.ExtendedLocationResponse;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The provisioning state of the metrics configuration.
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.networkcloud.v20221212preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get metrics configuration of the provided cluster.
 */
export function getMetricsConfigurationOutput(args: GetMetricsConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetricsConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getMetricsConfiguration(a, opts))
}

export interface GetMetricsConfigurationOutputArgs {
    /**
     * The name of the cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The name of the metrics configuration for the cluster.
     */
    metricsConfigurationName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
