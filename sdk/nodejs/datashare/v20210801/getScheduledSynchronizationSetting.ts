// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get a synchronizationSetting in a share
 */
export function getScheduledSynchronizationSetting(args: GetScheduledSynchronizationSettingArgs, opts?: pulumi.InvokeOptions): Promise<GetScheduledSynchronizationSettingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:datashare/v20210801:getScheduledSynchronizationSetting", {
        "accountName": args.accountName,
        "resourceGroupName": args.resourceGroupName,
        "shareName": args.shareName,
        "synchronizationSettingName": args.synchronizationSettingName,
    }, opts);
}

export interface GetScheduledSynchronizationSettingArgs {
    /**
     * The name of the share account.
     */
    accountName: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
    /**
     * The name of the share.
     */
    shareName: string;
    /**
     * The name of the synchronizationSetting.
     */
    synchronizationSettingName: string;
}

/**
 * A type of synchronization setting based on schedule
 */
export interface GetScheduledSynchronizationSettingResult {
    /**
     * Time at which the synchronization setting was created.
     */
    readonly createdAt: string;
    /**
     * The resource id of the azure resource
     */
    readonly id: string;
    /**
     * Kind of synchronization setting.
     * Expected value is 'ScheduleBased'.
     */
    readonly kind: "ScheduleBased";
    /**
     * Name of the azure resource
     */
    readonly name: string;
    /**
     * Gets or sets the provisioning state
     */
    readonly provisioningState: string;
    /**
     * Recurrence Interval
     */
    readonly recurrenceInterval: string;
    /**
     * Synchronization time
     */
    readonly synchronizationTime: string;
    /**
     * System Data of the Azure resource.
     */
    readonly systemData: outputs.datashare.v20210801.SystemDataResponse;
    /**
     * Type of the azure resource
     */
    readonly type: string;
    /**
     * Name of the user who created the synchronization setting.
     */
    readonly userName: string;
}
/**
 * Get a synchronizationSetting in a share
 */
export function getScheduledSynchronizationSettingOutput(args: GetScheduledSynchronizationSettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScheduledSynchronizationSettingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:datashare/v20210801:getScheduledSynchronizationSetting", {
        "accountName": args.accountName,
        "resourceGroupName": args.resourceGroupName,
        "shareName": args.shareName,
        "synchronizationSettingName": args.synchronizationSettingName,
    }, opts);
}

export interface GetScheduledSynchronizationSettingOutputArgs {
    /**
     * The name of the share account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the share.
     */
    shareName: pulumi.Input<string>;
    /**
     * The name of the synchronizationSetting.
     */
    synchronizationSettingName: pulumi.Input<string>;
}
