// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AccountArgs } from "./account";
export type Account = import("./account").Account;
export const Account: typeof import("./account").Account = null as any;
utilities.lazyLoad(exports, ["Account"], () => require("./account"));

export { GetAccountArgs, GetAccountResult, GetAccountOutputArgs } from "./getAccount";
export const getAccount: typeof import("./getAccount").getAccount = null as any;
export const getAccountOutput: typeof import("./getAccount").getAccountOutput = null as any;
utilities.lazyLoad(exports, ["getAccount","getAccountOutput"], () => require("./getAccount"));

export { GetInvitationArgs, GetInvitationResult, GetInvitationOutputArgs } from "./getInvitation";
export const getInvitation: typeof import("./getInvitation").getInvitation = null as any;
export const getInvitationOutput: typeof import("./getInvitation").getInvitationOutput = null as any;
utilities.lazyLoad(exports, ["getInvitation","getInvitationOutput"], () => require("./getInvitation"));

export { GetShareArgs, GetShareResult, GetShareOutputArgs } from "./getShare";
export const getShare: typeof import("./getShare").getShare = null as any;
export const getShareOutput: typeof import("./getShare").getShareOutput = null as any;
utilities.lazyLoad(exports, ["getShare","getShareOutput"], () => require("./getShare"));

export { GetShareSubscriptionArgs, GetShareSubscriptionResult, GetShareSubscriptionOutputArgs } from "./getShareSubscription";
export const getShareSubscription: typeof import("./getShareSubscription").getShareSubscription = null as any;
export const getShareSubscriptionOutput: typeof import("./getShareSubscription").getShareSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getShareSubscription","getShareSubscriptionOutput"], () => require("./getShareSubscription"));

export { InvitationArgs } from "./invitation";
export type Invitation = import("./invitation").Invitation;
export const Invitation: typeof import("./invitation").Invitation = null as any;
utilities.lazyLoad(exports, ["Invitation"], () => require("./invitation"));

export { ListShareSubscriptionSourceShareSynchronizationSettingsArgs, ListShareSubscriptionSourceShareSynchronizationSettingsResult, ListShareSubscriptionSourceShareSynchronizationSettingsOutputArgs } from "./listShareSubscriptionSourceShareSynchronizationSettings";
export const listShareSubscriptionSourceShareSynchronizationSettings: typeof import("./listShareSubscriptionSourceShareSynchronizationSettings").listShareSubscriptionSourceShareSynchronizationSettings = null as any;
export const listShareSubscriptionSourceShareSynchronizationSettingsOutput: typeof import("./listShareSubscriptionSourceShareSynchronizationSettings").listShareSubscriptionSourceShareSynchronizationSettingsOutput = null as any;
utilities.lazyLoad(exports, ["listShareSubscriptionSourceShareSynchronizationSettings","listShareSubscriptionSourceShareSynchronizationSettingsOutput"], () => require("./listShareSubscriptionSourceShareSynchronizationSettings"));

export { ListShareSubscriptionSynchronizationDetailsArgs, ListShareSubscriptionSynchronizationDetailsResult, ListShareSubscriptionSynchronizationDetailsOutputArgs } from "./listShareSubscriptionSynchronizationDetails";
export const listShareSubscriptionSynchronizationDetails: typeof import("./listShareSubscriptionSynchronizationDetails").listShareSubscriptionSynchronizationDetails = null as any;
export const listShareSubscriptionSynchronizationDetailsOutput: typeof import("./listShareSubscriptionSynchronizationDetails").listShareSubscriptionSynchronizationDetailsOutput = null as any;
utilities.lazyLoad(exports, ["listShareSubscriptionSynchronizationDetails","listShareSubscriptionSynchronizationDetailsOutput"], () => require("./listShareSubscriptionSynchronizationDetails"));

export { ListShareSubscriptionSynchronizationsArgs, ListShareSubscriptionSynchronizationsResult, ListShareSubscriptionSynchronizationsOutputArgs } from "./listShareSubscriptionSynchronizations";
export const listShareSubscriptionSynchronizations: typeof import("./listShareSubscriptionSynchronizations").listShareSubscriptionSynchronizations = null as any;
export const listShareSubscriptionSynchronizationsOutput: typeof import("./listShareSubscriptionSynchronizations").listShareSubscriptionSynchronizationsOutput = null as any;
utilities.lazyLoad(exports, ["listShareSubscriptionSynchronizations","listShareSubscriptionSynchronizationsOutput"], () => require("./listShareSubscriptionSynchronizations"));

export { ListShareSynchronizationDetailsArgs, ListShareSynchronizationDetailsResult, ListShareSynchronizationDetailsOutputArgs } from "./listShareSynchronizationDetails";
export const listShareSynchronizationDetails: typeof import("./listShareSynchronizationDetails").listShareSynchronizationDetails = null as any;
export const listShareSynchronizationDetailsOutput: typeof import("./listShareSynchronizationDetails").listShareSynchronizationDetailsOutput = null as any;
utilities.lazyLoad(exports, ["listShareSynchronizationDetails","listShareSynchronizationDetailsOutput"], () => require("./listShareSynchronizationDetails"));

export { ListShareSynchronizationsArgs, ListShareSynchronizationsResult, ListShareSynchronizationsOutputArgs } from "./listShareSynchronizations";
export const listShareSynchronizations: typeof import("./listShareSynchronizations").listShareSynchronizations = null as any;
export const listShareSynchronizationsOutput: typeof import("./listShareSynchronizations").listShareSynchronizationsOutput = null as any;
utilities.lazyLoad(exports, ["listShareSynchronizations","listShareSynchronizationsOutput"], () => require("./listShareSynchronizations"));

export { ShareArgs } from "./share";
export type Share = import("./share").Share;
export const Share: typeof import("./share").Share = null as any;
utilities.lazyLoad(exports, ["Share"], () => require("./share"));

export { ShareSubscriptionArgs } from "./shareSubscription";
export type ShareSubscription = import("./shareSubscription").ShareSubscription;
export const ShareSubscription: typeof import("./shareSubscription").ShareSubscription = null as any;
utilities.lazyLoad(exports, ["ShareSubscription"], () => require("./shareSubscription"));


// Export enums:
export * from "../../types/enums/datashare/v20200901";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:datashare/v20200901:Account":
                return new Account(name, <any>undefined, { urn })
            case "azure-native:datashare/v20200901:Invitation":
                return new Invitation(name, <any>undefined, { urn })
            case "azure-native:datashare/v20200901:Share":
                return new Share(name, <any>undefined, { urn })
            case "azure-native:datashare/v20200901:ShareSubscription":
                return new ShareSubscription(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "datashare/v20200901", _module)
