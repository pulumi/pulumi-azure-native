// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * The operation to get a container service.
 */
/** @deprecated Version 2015-11-01-preview will be removed in v2 of the provider. */
export function getContainerService(args: GetContainerServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerServiceResult> {
    pulumi.log.warn("getContainerService is deprecated: Version 2015-11-01-preview will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:containerservice/v20151101preview:getContainerService", {
        "containerServiceName": args.containerServiceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetContainerServiceArgs {
    /**
     * The name of the container service within the given subscription and resource group.
     */
    containerServiceName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}

/**
 * Container service
 */
export interface GetContainerServiceResult {
    /**
     * Properties of agent pools
     */
    readonly agentPoolProfiles: outputs.containerservice.v20151101preview.ContainerServiceAgentPoolProfileResponse[];
    /**
     * Properties for Diagnostic Agent
     */
    readonly diagnosticsProfile?: outputs.containerservice.v20151101preview.ContainerServiceDiagnosticsProfileResponse;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Properties for Linux VMs
     */
    readonly linuxProfile: outputs.containerservice.v20151101preview.ContainerServiceLinuxProfileResponse;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Properties of master agents
     */
    readonly masterProfile: outputs.containerservice.v20151101preview.ContainerServiceMasterProfileResponse;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Properties of orchestrator
     */
    readonly orchestratorProfile?: outputs.containerservice.v20151101preview.ContainerServiceOrchestratorProfileResponse;
    /**
     * Gets the provisioning state, which only appears in the response.
     */
    readonly provisioningState: string;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type: string;
    /**
     * Properties of Windows VMs
     */
    readonly windowsProfile?: outputs.containerservice.v20151101preview.ContainerServiceWindowsProfileResponse;
}
/**
 * The operation to get a container service.
 */
/** @deprecated Version 2015-11-01-preview will be removed in v2 of the provider. */
export function getContainerServiceOutput(args: GetContainerServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerServiceResult> {
    return pulumi.output(args).apply((a: any) => getContainerService(a, opts))
}

export interface GetContainerServiceOutputArgs {
    /**
     * The name of the container service within the given subscription and resource group.
     */
    containerServiceName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
