// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Managed cluster.
 */
export class ManagedCluster extends pulumi.CustomResource {
    /**
     * Get an existing ManagedCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ManagedCluster {
        return new ManagedCluster(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:containerservice/v20210801:ManagedCluster';

    /**
     * Returns true if the given object is an instance of ManagedCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedCluster.__pulumiType;
    }

    /**
     * The Azure Active Directory configuration.
     */
    public readonly aadProfile!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterAADProfileResponse | undefined>;
    /**
     * The profile of managed cluster add-on.
     */
    public readonly addonProfiles!: pulumi.Output<{[key: string]: outputs.containerservice.v20210801.ManagedClusterAddonProfileResponse} | undefined>;
    /**
     * The agent pool properties.
     */
    public readonly agentPoolProfiles!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterAgentPoolProfileResponse[] | undefined>;
    /**
     * The access profile for managed cluster API server.
     */
    public readonly apiServerAccessProfile!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterAPIServerAccessProfileResponse | undefined>;
    /**
     * Parameters to be applied to the cluster-autoscaler when enabled
     */
    public readonly autoScalerProfile!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterPropertiesResponseAutoScalerProfile | undefined>;
    /**
     * The auto upgrade configuration.
     */
    public readonly autoUpgradeProfile!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterAutoUpgradeProfileResponse | undefined>;
    /**
     * The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
     */
    public /*out*/ readonly azurePortalFQDN!: pulumi.Output<string>;
    /**
     * If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
     */
    public readonly disableLocalAccounts!: pulumi.Output<boolean | undefined>;
    /**
     * This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
     */
    public readonly diskEncryptionSetID!: pulumi.Output<string | undefined>;
    /**
     * This cannot be updated once the Managed Cluster has been created.
     */
    public readonly dnsPrefix!: pulumi.Output<string | undefined>;
    /**
     * (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
     */
    public readonly enablePodSecurityPolicy!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable Kubernetes Role-Based Access Control.
     */
    public readonly enableRBAC!: pulumi.Output<boolean | undefined>;
    /**
     * The extended location of the Virtual Machine.
     */
    public readonly extendedLocation!: pulumi.Output<outputs.containerservice.v20210801.ExtendedLocationResponse | undefined>;
    /**
     * The FQDN of the master pool.
     */
    public /*out*/ readonly fqdn!: pulumi.Output<string>;
    /**
     * This cannot be updated once the Managed Cluster has been created.
     */
    public readonly fqdnSubdomain!: pulumi.Output<string | undefined>;
    /**
     * Configurations for provisioning the cluster with HTTP proxy servers.
     */
    public readonly httpProxyConfig!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterHTTPProxyConfigResponse | undefined>;
    /**
     * The identity of the managed cluster, if configured.
     */
    public readonly identity!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterIdentityResponse | undefined>;
    /**
     * Identities associated with the cluster.
     */
    public readonly identityProfile!: pulumi.Output<{[key: string]: outputs.containerservice.v20210801.UserAssignedIdentityResponse} | undefined>;
    /**
     * When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
     */
    public readonly kubernetesVersion!: pulumi.Output<string | undefined>;
    /**
     * The profile for Linux VMs in the Managed Cluster.
     */
    public readonly linuxProfile!: pulumi.Output<outputs.containerservice.v20210801.ContainerServiceLinuxProfileResponse | undefined>;
    /**
     * Resource location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The max number of agent pools for the managed cluster.
     */
    public /*out*/ readonly maxAgentPools!: pulumi.Output<number>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The network configuration profile.
     */
    public readonly networkProfile!: pulumi.Output<outputs.containerservice.v20210801.ContainerServiceNetworkProfileResponse | undefined>;
    /**
     * The name of the resource group containing agent pool nodes.
     */
    public readonly nodeResourceGroup!: pulumi.Output<string | undefined>;
    /**
     * See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.
     */
    public readonly podIdentityProfile!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterPodIdentityProfileResponse | undefined>;
    /**
     * The Power State of the cluster.
     */
    public /*out*/ readonly powerState!: pulumi.Output<outputs.containerservice.v20210801.PowerStateResponse>;
    /**
     * The FQDN of private cluster.
     */
    public /*out*/ readonly privateFQDN!: pulumi.Output<string>;
    /**
     * Private link resources associated with the cluster.
     */
    public readonly privateLinkResources!: pulumi.Output<outputs.containerservice.v20210801.PrivateLinkResourceResponse[] | undefined>;
    /**
     * The current provisioning state.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Default value is 'Enabled' (case insensitive). Could be set to 'Disabled' to enable private cluster
     */
    public readonly publicNetworkAccess!: pulumi.Output<string | undefined>;
    /**
     * Security profile for the managed cluster.
     */
    public readonly securityProfile!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterSecurityProfileResponse | undefined>;
    /**
     * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     */
    public readonly servicePrincipalProfile!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterServicePrincipalProfileResponse | undefined>;
    /**
     * The managed cluster SKU.
     */
    public readonly sku!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterSKUResponse | undefined>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The profile for Windows VMs in the Managed Cluster.
     */
    public readonly windowsProfile!: pulumi.Output<outputs.containerservice.v20210801.ManagedClusterWindowsProfileResponse | undefined>;

    /**
     * Create a ManagedCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedClusterArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["aadProfile"] = args ? args.aadProfile : undefined;
            inputs["addonProfiles"] = args ? args.addonProfiles : undefined;
            inputs["agentPoolProfiles"] = args ? args.agentPoolProfiles : undefined;
            inputs["apiServerAccessProfile"] = args ? args.apiServerAccessProfile : undefined;
            inputs["autoScalerProfile"] = args ? args.autoScalerProfile : undefined;
            inputs["autoUpgradeProfile"] = args ? args.autoUpgradeProfile : undefined;
            inputs["disableLocalAccounts"] = args ? args.disableLocalAccounts : undefined;
            inputs["diskEncryptionSetID"] = args ? args.diskEncryptionSetID : undefined;
            inputs["dnsPrefix"] = args ? args.dnsPrefix : undefined;
            inputs["enablePodSecurityPolicy"] = args ? args.enablePodSecurityPolicy : undefined;
            inputs["enableRBAC"] = args ? args.enableRBAC : undefined;
            inputs["extendedLocation"] = args ? args.extendedLocation : undefined;
            inputs["fqdnSubdomain"] = args ? args.fqdnSubdomain : undefined;
            inputs["httpProxyConfig"] = args ? args.httpProxyConfig : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["identityProfile"] = args ? args.identityProfile : undefined;
            inputs["kubernetesVersion"] = args ? args.kubernetesVersion : undefined;
            inputs["linuxProfile"] = args ? args.linuxProfile : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["networkProfile"] = args ? args.networkProfile : undefined;
            inputs["nodeResourceGroup"] = args ? args.nodeResourceGroup : undefined;
            inputs["podIdentityProfile"] = args ? args.podIdentityProfile : undefined;
            inputs["privateLinkResources"] = args ? args.privateLinkResources : undefined;
            inputs["publicNetworkAccess"] = args ? args.publicNetworkAccess : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["resourceName"] = args ? args.resourceName : undefined;
            inputs["securityProfile"] = args ? args.securityProfile : undefined;
            inputs["servicePrincipalProfile"] = args ? args.servicePrincipalProfile : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["windowsProfile"] = args ? args.windowsProfile : undefined;
            inputs["azurePortalFQDN"] = undefined /*out*/;
            inputs["fqdn"] = undefined /*out*/;
            inputs["maxAgentPools"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["powerState"] = undefined /*out*/;
            inputs["privateFQDN"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["aadProfile"] = undefined /*out*/;
            inputs["addonProfiles"] = undefined /*out*/;
            inputs["agentPoolProfiles"] = undefined /*out*/;
            inputs["apiServerAccessProfile"] = undefined /*out*/;
            inputs["autoScalerProfile"] = undefined /*out*/;
            inputs["autoUpgradeProfile"] = undefined /*out*/;
            inputs["azurePortalFQDN"] = undefined /*out*/;
            inputs["disableLocalAccounts"] = undefined /*out*/;
            inputs["diskEncryptionSetID"] = undefined /*out*/;
            inputs["dnsPrefix"] = undefined /*out*/;
            inputs["enablePodSecurityPolicy"] = undefined /*out*/;
            inputs["enableRBAC"] = undefined /*out*/;
            inputs["extendedLocation"] = undefined /*out*/;
            inputs["fqdn"] = undefined /*out*/;
            inputs["fqdnSubdomain"] = undefined /*out*/;
            inputs["httpProxyConfig"] = undefined /*out*/;
            inputs["identity"] = undefined /*out*/;
            inputs["identityProfile"] = undefined /*out*/;
            inputs["kubernetesVersion"] = undefined /*out*/;
            inputs["linuxProfile"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["maxAgentPools"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["networkProfile"] = undefined /*out*/;
            inputs["nodeResourceGroup"] = undefined /*out*/;
            inputs["podIdentityProfile"] = undefined /*out*/;
            inputs["powerState"] = undefined /*out*/;
            inputs["privateFQDN"] = undefined /*out*/;
            inputs["privateLinkResources"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["publicNetworkAccess"] = undefined /*out*/;
            inputs["securityProfile"] = undefined /*out*/;
            inputs["servicePrincipalProfile"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["windowsProfile"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:containerservice/v20210801:ManagedCluster" }, { type: "azure-native:containerservice:ManagedCluster" }, { type: "azure-nextgen:containerservice:ManagedCluster" }, { type: "azure-native:containerservice/v20170831:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20170831:ManagedCluster" }, { type: "azure-native:containerservice/v20180331:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20180331:ManagedCluster" }, { type: "azure-native:containerservice/v20180801preview:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20180801preview:ManagedCluster" }, { type: "azure-native:containerservice/v20190201:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20190201:ManagedCluster" }, { type: "azure-native:containerservice/v20190401:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20190401:ManagedCluster" }, { type: "azure-native:containerservice/v20190601:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20190601:ManagedCluster" }, { type: "azure-native:containerservice/v20190801:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20190801:ManagedCluster" }, { type: "azure-native:containerservice/v20191001:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20191001:ManagedCluster" }, { type: "azure-native:containerservice/v20191101:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20191101:ManagedCluster" }, { type: "azure-native:containerservice/v20200101:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20200101:ManagedCluster" }, { type: "azure-native:containerservice/v20200201:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20200201:ManagedCluster" }, { type: "azure-native:containerservice/v20200301:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20200301:ManagedCluster" }, { type: "azure-native:containerservice/v20200401:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20200401:ManagedCluster" }, { type: "azure-native:containerservice/v20200601:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20200601:ManagedCluster" }, { type: "azure-native:containerservice/v20200701:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20200701:ManagedCluster" }, { type: "azure-native:containerservice/v20200901:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20200901:ManagedCluster" }, { type: "azure-native:containerservice/v20201101:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20201101:ManagedCluster" }, { type: "azure-native:containerservice/v20201201:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20201201:ManagedCluster" }, { type: "azure-native:containerservice/v20210201:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20210201:ManagedCluster" }, { type: "azure-native:containerservice/v20210301:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20210301:ManagedCluster" }, { type: "azure-native:containerservice/v20210501:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20210501:ManagedCluster" }, { type: "azure-native:containerservice/v20210701:ManagedCluster" }, { type: "azure-nextgen:containerservice/v20210701:ManagedCluster" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ManagedCluster.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ManagedCluster resource.
 */
export interface ManagedClusterArgs {
    /**
     * The Azure Active Directory configuration.
     */
    aadProfile?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterAADProfileArgs>;
    /**
     * The profile of managed cluster add-on.
     */
    addonProfiles?: pulumi.Input<{[key: string]: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterAddonProfileArgs>}>;
    /**
     * The agent pool properties.
     */
    agentPoolProfiles?: pulumi.Input<pulumi.Input<inputs.containerservice.v20210801.ManagedClusterAgentPoolProfileArgs>[]>;
    /**
     * The access profile for managed cluster API server.
     */
    apiServerAccessProfile?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterAPIServerAccessProfileArgs>;
    /**
     * Parameters to be applied to the cluster-autoscaler when enabled
     */
    autoScalerProfile?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterPropertiesAutoScalerProfileArgs>;
    /**
     * The auto upgrade configuration.
     */
    autoUpgradeProfile?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterAutoUpgradeProfileArgs>;
    /**
     * If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
     */
    disableLocalAccounts?: pulumi.Input<boolean>;
    /**
     * This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
     */
    diskEncryptionSetID?: pulumi.Input<string>;
    /**
     * This cannot be updated once the Managed Cluster has been created.
     */
    dnsPrefix?: pulumi.Input<string>;
    /**
     * (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
     */
    enablePodSecurityPolicy?: pulumi.Input<boolean>;
    /**
     * Whether to enable Kubernetes Role-Based Access Control.
     */
    enableRBAC?: pulumi.Input<boolean>;
    /**
     * The extended location of the Virtual Machine.
     */
    extendedLocation?: pulumi.Input<inputs.containerservice.v20210801.ExtendedLocationArgs>;
    /**
     * This cannot be updated once the Managed Cluster has been created.
     */
    fqdnSubdomain?: pulumi.Input<string>;
    /**
     * Configurations for provisioning the cluster with HTTP proxy servers.
     */
    httpProxyConfig?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterHTTPProxyConfigArgs>;
    /**
     * The identity of the managed cluster, if configured.
     */
    identity?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterIdentityArgs>;
    /**
     * Identities associated with the cluster.
     */
    identityProfile?: pulumi.Input<{[key: string]: pulumi.Input<inputs.containerservice.v20210801.UserAssignedIdentityArgs>}>;
    /**
     * When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * The profile for Linux VMs in the Managed Cluster.
     */
    linuxProfile?: pulumi.Input<inputs.containerservice.v20210801.ContainerServiceLinuxProfileArgs>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * The network configuration profile.
     */
    networkProfile?: pulumi.Input<inputs.containerservice.v20210801.ContainerServiceNetworkProfileArgs>;
    /**
     * The name of the resource group containing agent pool nodes.
     */
    nodeResourceGroup?: pulumi.Input<string>;
    /**
     * See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.
     */
    podIdentityProfile?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterPodIdentityProfileArgs>;
    /**
     * Private link resources associated with the cluster.
     */
    privateLinkResources?: pulumi.Input<pulumi.Input<inputs.containerservice.v20210801.PrivateLinkResourceArgs>[]>;
    /**
     * Default value is 'Enabled' (case insensitive). Could be set to 'Disabled' to enable private cluster
     */
    publicNetworkAccess?: pulumi.Input<string | enums.containerservice.v20210801.PublicNetworkAccess>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the managed cluster resource.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * Security profile for the managed cluster.
     */
    securityProfile?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterSecurityProfileArgs>;
    /**
     * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     */
    servicePrincipalProfile?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterServicePrincipalProfileArgs>;
    /**
     * The managed cluster SKU.
     */
    sku?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterSKUArgs>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The profile for Windows VMs in the Managed Cluster.
     */
    windowsProfile?: pulumi.Input<inputs.containerservice.v20210801.ManagedClusterWindowsProfileArgs>;
}
