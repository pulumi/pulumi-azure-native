// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Defines binding between a resource and role
 *
 * Uses Azure REST API version 2024-10-01. In version 2.x of the Azure Native provider, it used API version 2023-05-02-preview.
 *
 * Other available API versions: 2022-04-02-preview, 2022-05-02-preview, 2022-06-02-preview, 2022-07-02-preview, 2022-08-02-preview, 2022-08-03-preview, 2022-09-02-preview, 2022-10-02-preview, 2022-11-02-preview, 2023-01-02-preview, 2023-02-02-preview, 2023-03-02-preview, 2023-04-02-preview, 2023-05-02-preview, 2023-06-02-preview, 2023-07-02-preview, 2023-08-02-preview, 2023-09-01, 2023-09-02-preview, 2023-10-01, 2023-10-02-preview, 2023-11-01, 2023-11-02-preview, 2024-01-01, 2024-01-02-preview, 2024-02-01, 2024-02-02-preview, 2024-03-02-preview, 2024-04-02-preview, 2024-05-01, 2024-05-02-preview, 2024-06-02-preview, 2024-07-01, 2024-07-02-preview, 2024-08-01, 2024-09-01, 2024-09-02-preview, 2024-10-02-preview, 2025-01-01, 2025-01-02-preview, 2025-02-01, 2025-02-02-preview, 2025-03-01, 2025-03-02-preview, 2025-04-01, 2025-04-02-preview, 2025-05-01, 2025-05-02-preview, 2025-06-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class TrustedAccessRoleBinding extends pulumi.CustomResource {
    /**
     * Get an existing TrustedAccessRoleBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TrustedAccessRoleBinding {
        return new TrustedAccessRoleBinding(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:containerservice:TrustedAccessRoleBinding';

    /**
     * Returns true if the given object is an instance of TrustedAccessRoleBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrustedAccessRoleBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrustedAccessRoleBinding.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The current provisioning state of trusted access role binding.
     */
    declare public /*out*/ readonly provisioningState: pulumi.Output<string>;
    /**
     * A list of roles to bind, each item is a resource type qualified role name. For example: 'Microsoft.MachineLearningServices/workspaces/reader'.
     */
    declare public readonly roles: pulumi.Output<string[]>;
    /**
     * The ARM resource ID of source resource that trusted access is configured for.
     */
    declare public readonly sourceResourceId: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    declare public /*out*/ readonly systemData: pulumi.Output<outputs.containerservice.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a TrustedAccessRoleBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrustedAccessRoleBindingArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.resourceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceName'");
            }
            if (args?.roles === undefined && !opts.urn) {
                throw new Error("Missing required property 'roles'");
            }
            if (args?.sourceResourceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceResourceId'");
            }
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["resourceName"] = args?.resourceName;
            resourceInputs["roles"] = args?.roles;
            resourceInputs["sourceResourceId"] = args?.sourceResourceId;
            resourceInputs["trustedAccessRoleBindingName"] = args?.trustedAccessRoleBindingName;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["roles"] = undefined /*out*/;
            resourceInputs["sourceResourceId"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:containerservice/v20220402preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20220502preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20220602preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20220702preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20220802preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20220803preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20220902preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20221002preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20221102preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230102preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230202preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230302preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230402preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230502preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230602preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230702preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230802preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230901:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20230902preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20231001:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20231002preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20231101:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20231102preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240101:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240102preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240201:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240202preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240302preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240402preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240501:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240502preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240602preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240701:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240702preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240801:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240901:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20240902preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20241001:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20241002preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250101:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250102preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250201:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250202preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250301:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250302preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250401:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250402preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250501:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250502preview:TrustedAccessRoleBinding" }, { type: "azure-native:containerservice/v20250602preview:TrustedAccessRoleBinding" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(TrustedAccessRoleBinding.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a TrustedAccessRoleBinding resource.
 */
export interface TrustedAccessRoleBindingArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the managed cluster resource.
     */
    resourceName: pulumi.Input<string>;
    /**
     * A list of roles to bind, each item is a resource type qualified role name. For example: 'Microsoft.MachineLearningServices/workspaces/reader'.
     */
    roles: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARM resource ID of source resource that trusted access is configured for.
     */
    sourceResourceId: pulumi.Input<string>;
    /**
     * The name of trusted access role binding.
     */
    trustedAccessRoleBindingName?: pulumi.Input<string>;
}
