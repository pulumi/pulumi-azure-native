// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * A node pool snapshot resource.
 * API Version: 2021-11-01-preview.
 */
export function getSnapshot(args: GetSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:containerservice:getSnapshot", {
        "resourceGroupName": args.resourceGroupName,
        "resourceName": args.resourceName,
    }, opts);
}

export interface GetSnapshotArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the managed cluster resource.
     */
    resourceName: string;
}

/**
 * A node pool snapshot resource.
 */
export interface GetSnapshotResult {
    /**
     * CreationData to be used to specify the source agent pool resource ID to create this snapshot.
     */
    readonly creationData?: outputs.containerservice.CreationDataResponse;
    /**
     * Whether to use a FIPS-enabled OS.
     */
    readonly enableFIPS: boolean;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * The version of Kubernetes.
     */
    readonly kubernetesVersion: string;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * The version of node image.
     */
    readonly nodeImageVersion: string;
    /**
     * Specifies an OS SKU. This value must not be specified if OSType is Windows.
     */
    readonly osSku: string;
    /**
     * The operating system type. The default is Linux.
     */
    readonly osType: string;
    /**
     * The type of a snapshot. The default is NodePool.
     */
    readonly snapshotType?: string;
    /**
     * The system metadata relating to this snapshot.
     */
    readonly systemData: outputs.containerservice.SystemDataResponse;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type: string;
    /**
     * The size of the VM.
     */
    readonly vmSize: string;
}

export function getSnapshotOutput(args: GetSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotResult> {
    return pulumi.output(args).apply(a => getSnapshot(a, opts))
}

export interface GetSnapshotOutputArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the managed cluster resource.
     */
    resourceName: pulumi.Input<string>;
}
