// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A node pool snapshot resource.
 *
 * Uses Azure REST API version 2024-10-01. In version 2.x of the Azure Native provider, it used API version 2023-04-01.
 *
 * Other available API versions: 2021-08-01, 2021-09-01, 2021-10-01, 2021-11-01-preview, 2022-01-01, 2022-01-02-preview, 2022-02-01, 2022-02-02-preview, 2022-03-01, 2022-03-02-preview, 2022-04-01, 2022-04-02-preview, 2022-05-02-preview, 2022-06-01, 2022-06-02-preview, 2022-07-01, 2022-07-02-preview, 2022-08-02-preview, 2022-08-03-preview, 2022-09-01, 2022-09-02-preview, 2022-10-02-preview, 2022-11-01, 2022-11-02-preview, 2023-01-01, 2023-01-02-preview, 2023-02-01, 2023-02-02-preview, 2023-03-01, 2023-03-02-preview, 2023-04-01, 2023-04-02-preview, 2023-05-01, 2023-05-02-preview, 2023-06-01, 2023-06-02-preview, 2023-07-01, 2023-07-02-preview, 2023-08-01, 2023-08-02-preview, 2023-09-01, 2023-09-02-preview, 2023-10-01, 2023-10-02-preview, 2023-11-01, 2023-11-02-preview, 2024-01-01, 2024-01-02-preview, 2024-02-01, 2024-02-02-preview, 2024-03-02-preview, 2024-04-02-preview, 2024-05-01, 2024-05-02-preview, 2024-06-02-preview, 2024-07-01, 2024-07-02-preview, 2024-08-01, 2024-09-01, 2024-09-02-preview, 2024-10-02-preview, 2025-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Snapshot extends pulumi.CustomResource {
    /**
     * Get an existing Snapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Snapshot {
        return new Snapshot(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:containerservice:Snapshot';

    /**
     * Returns true if the given object is an instance of Snapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Snapshot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Snapshot.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * CreationData to be used to specify the source agent pool resource ID to create this snapshot.
     */
    public readonly creationData!: pulumi.Output<outputs.containerservice.CreationDataResponse | undefined>;
    /**
     * Whether to use a FIPS-enabled OS.
     */
    public /*out*/ readonly enableFIPS!: pulumi.Output<boolean>;
    /**
     * The version of Kubernetes.
     */
    public /*out*/ readonly kubernetesVersion!: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The version of node image.
     */
    public /*out*/ readonly nodeImageVersion!: pulumi.Output<string>;
    /**
     * Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
     */
    public /*out*/ readonly osSku!: pulumi.Output<string>;
    /**
     * The operating system type. The default is Linux.
     */
    public /*out*/ readonly osType!: pulumi.Output<string>;
    /**
     * The type of a snapshot. The default is NodePool.
     */
    public readonly snapshotType!: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.containerservice.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The size of the VM.
     */
    public /*out*/ readonly vmSize!: pulumi.Output<string>;

    /**
     * Create a Snapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["creationData"] = args ? args.creationData : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["resourceName"] = args ? args.resourceName : undefined;
            resourceInputs["snapshotType"] = args ? args.snapshotType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["enableFIPS"] = undefined /*out*/;
            resourceInputs["kubernetesVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nodeImageVersion"] = undefined /*out*/;
            resourceInputs["osSku"] = undefined /*out*/;
            resourceInputs["osType"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["vmSize"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["creationData"] = undefined /*out*/;
            resourceInputs["enableFIPS"] = undefined /*out*/;
            resourceInputs["kubernetesVersion"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nodeImageVersion"] = undefined /*out*/;
            resourceInputs["osSku"] = undefined /*out*/;
            resourceInputs["osType"] = undefined /*out*/;
            resourceInputs["snapshotType"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["vmSize"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:containerservice/v20230401:Snapshot" }, { type: "azure-native:containerservice/v20230502preview:Snapshot" }, { type: "azure-native:containerservice/v20230601:Snapshot" }, { type: "azure-native:containerservice/v20230602preview:Snapshot" }, { type: "azure-native:containerservice/v20230701:Snapshot" }, { type: "azure-native:containerservice/v20230702preview:Snapshot" }, { type: "azure-native:containerservice/v20230801:Snapshot" }, { type: "azure-native:containerservice/v20230802preview:Snapshot" }, { type: "azure-native:containerservice/v20230901:Snapshot" }, { type: "azure-native:containerservice/v20230902preview:Snapshot" }, { type: "azure-native:containerservice/v20231001:Snapshot" }, { type: "azure-native:containerservice/v20231002preview:Snapshot" }, { type: "azure-native:containerservice/v20231101:Snapshot" }, { type: "azure-native:containerservice/v20231102preview:Snapshot" }, { type: "azure-native:containerservice/v20240101:Snapshot" }, { type: "azure-native:containerservice/v20240102preview:Snapshot" }, { type: "azure-native:containerservice/v20240201:Snapshot" }, { type: "azure-native:containerservice/v20240202preview:Snapshot" }, { type: "azure-native:containerservice/v20240302preview:Snapshot" }, { type: "azure-native:containerservice/v20240402preview:Snapshot" }, { type: "azure-native:containerservice/v20240501:Snapshot" }, { type: "azure-native:containerservice/v20240502preview:Snapshot" }, { type: "azure-native:containerservice/v20240602preview:Snapshot" }, { type: "azure-native:containerservice/v20240701:Snapshot" }, { type: "azure-native:containerservice/v20240702preview:Snapshot" }, { type: "azure-native:containerservice/v20240801:Snapshot" }, { type: "azure-native:containerservice/v20240901:Snapshot" }, { type: "azure-native:containerservice/v20240902preview:Snapshot" }, { type: "azure-native_containerservice_v20210801:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20210901:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20211001:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20211101preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220101:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220102preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220201:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220202preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220301:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220302preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220401:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220402preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220502preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220601:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220602preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220701:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220702preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220802preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220803preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220901:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20220902preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20221002preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20221101:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20221102preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230101:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230102preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230201:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230202preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230301:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230302preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230401:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230402preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230501:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230502preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230601:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230602preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230701:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230702preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230801:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230802preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230901:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20230902preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20231001:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20231002preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20231101:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20231102preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240101:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240102preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240201:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240202preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240302preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240402preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240501:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240502preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240602preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240701:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240702preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240801:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240901:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20240902preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20241001:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20241002preview:containerservice:Snapshot" }, { type: "azure-native_containerservice_v20250101:containerservice:Snapshot" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Snapshot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Snapshot resource.
 */
export interface SnapshotArgs {
    /**
     * CreationData to be used to specify the source agent pool resource ID to create this snapshot.
     */
    creationData?: pulumi.Input<inputs.containerservice.CreationDataArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the managed cluster resource.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * The type of a snapshot. The default is NodePool.
     */
    snapshotType?: pulumi.Input<string | enums.containerservice.SnapshotType>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
