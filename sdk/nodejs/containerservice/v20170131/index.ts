// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ContainerServiceArgs } from "./containerService";
export type ContainerService = import("./containerService").ContainerService;
export const ContainerService: typeof import("./containerService").ContainerService = null as any;
utilities.lazyLoad(exports, ["ContainerService"], () => require("./containerService"));

export { GetContainerServiceArgs, GetContainerServiceResult, GetContainerServiceOutputArgs } from "./getContainerService";
export const getContainerService: typeof import("./getContainerService").getContainerService = null as any;
export const getContainerServiceOutput: typeof import("./getContainerService").getContainerServiceOutput = null as any;
utilities.lazyLoad(exports, ["getContainerService","getContainerServiceOutput"], () => require("./getContainerService"));


// Export enums:
export * from "../../types/enums/containerservice/v20170131";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:containerservice/v20170131:ContainerService":
                return new ContainerService(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "containerservice/v20170131", _module)
