// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
 */
/** @deprecated Version 2017-01-31 will be removed in v2 of the provider. */
export function getContainerService(args: GetContainerServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerServiceResult> {
    pulumi.log.warn("getContainerService is deprecated: Version 2017-01-31 will be removed in v2 of the provider.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:containerservice/v20170131:getContainerService", {
        "containerServiceName": args.containerServiceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetContainerServiceArgs {
    /**
     * The name of the container service in the specified subscription and resource group.
     */
    containerServiceName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}

/**
 * Container service.
 */
export interface GetContainerServiceResult {
    /**
     * Properties of the agent pool.
     */
    readonly agentPoolProfiles: outputs.containerservice.v20170131.ContainerServiceAgentPoolProfileResponse[];
    /**
     * Properties for custom clusters.
     */
    readonly customProfile?: outputs.containerservice.v20170131.ContainerServiceCustomProfileResponse;
    /**
     * Properties of the diagnostic agent.
     */
    readonly diagnosticsProfile?: outputs.containerservice.v20170131.ContainerServiceDiagnosticsProfileResponse;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Properties of Linux VMs.
     */
    readonly linuxProfile: outputs.containerservice.v20170131.ContainerServiceLinuxProfileResponse;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Properties of master agents.
     */
    readonly masterProfile: outputs.containerservice.v20170131.ContainerServiceMasterProfileResponse;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Properties of the orchestrator.
     */
    readonly orchestratorProfile?: outputs.containerservice.v20170131.ContainerServiceOrchestratorProfileResponse;
    /**
     * the current deployment or provisioning state, which only appears in the response.
     */
    readonly provisioningState: string;
    /**
     * Properties for cluster service principals.
     */
    readonly servicePrincipalProfile?: outputs.containerservice.v20170131.ContainerServiceServicePrincipalProfileResponse;
    /**
     * Resource tags
     */
    readonly tags?: {[key: string]: string};
    /**
     * Resource type
     */
    readonly type: string;
    /**
     * Properties of Windows VMs.
     */
    readonly windowsProfile?: outputs.containerservice.v20170131.ContainerServiceWindowsProfileResponse;
}
/**
 * Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
 */
/** @deprecated Version 2017-01-31 will be removed in v2 of the provider. */
export function getContainerServiceOutput(args: GetContainerServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerServiceResult> {
    return pulumi.output(args).apply((a: any) => getContainerService(a, opts))
}

export interface GetContainerServiceOutputArgs {
    /**
     * The name of the container service in the specified subscription and resource group.
     */
    containerServiceName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
