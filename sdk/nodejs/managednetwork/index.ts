// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getManagedNetwork";
export * from "./getManagedNetworkGroup";
export * from "./getManagedNetworkPeeringPolicy";
export * from "./getScopeAssignment";
export * from "./managedNetwork";
export * from "./managedNetworkGroup";
export * from "./managedNetworkPeeringPolicy";
export * from "./scopeAssignment";

// Export enums:
export * from "../types/enums/managednetwork";

// Export sub-modules:
import * as v20190601preview from "./v20190601preview";

export {
    v20190601preview,
};

// Import resources to register:
import { ManagedNetwork } from "./managedNetwork";
import { ManagedNetworkGroup } from "./managedNetworkGroup";
import { ManagedNetworkPeeringPolicy } from "./managedNetworkPeeringPolicy";
import { ScopeAssignment } from "./scopeAssignment";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:managednetwork:ManagedNetwork":
                return new ManagedNetwork(name, <any>undefined, { urn })
            case "azure-nextgen:managednetwork:ManagedNetworkGroup":
                return new ManagedNetworkGroup(name, <any>undefined, { urn })
            case "azure-nextgen:managednetwork:ManagedNetworkPeeringPolicy":
                return new ManagedNetworkPeeringPolicy(name, <any>undefined, { urn })
            case "azure-nextgen:managednetwork:ScopeAssignment":
                return new ScopeAssignment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "managednetwork", _module)
