// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Class representing a Traffic Manager profile.
 *
 * @deprecated Version 2015-11-01 will be removed in v2 of the provider.
 */
export class Profile extends pulumi.CustomResource {
    /**
     * Get an existing Profile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Profile {
        pulumi.log.warn("Profile is deprecated: Version 2015-11-01 will be removed in v2 of the provider.")
        return new Profile(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:network/v20151101:Profile';

    /**
     * Returns true if the given object is an instance of Profile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Profile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Profile.__pulumiType;
    }

    /**
     * Gets or sets the DNS settings of the Traffic Manager profile.
     */
    public readonly dnsConfig!: pulumi.Output<outputs.network.v20151101.DnsConfigResponse | undefined>;
    /**
     * Gets or sets the list of endpoints in the Traffic Manager profile.
     */
    public readonly endpoints!: pulumi.Output<outputs.network.v20151101.EndpointResponse[] | undefined>;
    /**
     * Resource location
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the endpoint monitoring settings of the Traffic Manager profile.
     */
    public readonly monitorConfig!: pulumi.Output<outputs.network.v20151101.MonitorConfigResponse | undefined>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Gets or sets the status of the Traffic Manager profile.  Possible values are 'Enabled' and 'Disabled'.
     */
    public readonly profileStatus!: pulumi.Output<string | undefined>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Gets or sets the traffic routing method of the Traffic Manager profile.  Possible values are 'Performance', 'Weighted', or 'Priority'.
     */
    public readonly trafficRoutingMethod!: pulumi.Output<string | undefined>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Profile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2015-11-01 will be removed in v2 of the provider. */
    constructor(name: string, args: ProfileArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Profile is deprecated: Version 2015-11-01 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["dnsConfig"] = args ? args.dnsConfig : undefined;
            resourceInputs["endpoints"] = args ? args.endpoints : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["monitorConfig"] = args ? args.monitorConfig : undefined;
            resourceInputs["profileName"] = args ? args.profileName : undefined;
            resourceInputs["profileStatus"] = args ? args.profileStatus : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trafficRoutingMethod"] = args ? args.trafficRoutingMethod : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["dnsConfig"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["monitorConfig"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["profileStatus"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["trafficRoutingMethod"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:network:Profile" }, { type: "azure-native:network/v20170301:Profile" }, { type: "azure-native:network/v20170501:Profile" }, { type: "azure-native:network/v20180201:Profile" }, { type: "azure-native:network/v20180301:Profile" }, { type: "azure-native:network/v20180401:Profile" }, { type: "azure-native:network/v20180801:Profile" }, { type: "azure-native:network/v20220401preview:Profile" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Profile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Profile resource.
 */
export interface ProfileArgs {
    /**
     * Gets or sets the DNS settings of the Traffic Manager profile.
     */
    dnsConfig?: pulumi.Input<inputs.network.v20151101.DnsConfigArgs>;
    /**
     * Gets or sets the list of endpoints in the Traffic Manager profile.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.network.v20151101.EndpointArgs>[]>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * Gets or sets the endpoint monitoring settings of the Traffic Manager profile.
     */
    monitorConfig?: pulumi.Input<inputs.network.v20151101.MonitorConfigArgs>;
    /**
     * The name of the Traffic Manager profile.
     */
    profileName?: pulumi.Input<string>;
    /**
     * Gets or sets the status of the Traffic Manager profile.  Possible values are 'Enabled' and 'Disabled'.
     */
    profileStatus?: pulumi.Input<string>;
    /**
     * The name of the resource group containing the Traffic Manager profile.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Gets or sets the traffic routing method of the Traffic Manager profile.  Possible values are 'Performance', 'Weighted', or 'Priority'.
     */
    trafficRoutingMethod?: pulumi.Input<string>;
}
