// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./adminRule";
export * from "./adminRuleCollection";
export * from "./connectivityConfiguration";
export * from "./defaultAdminRule";
export * from "./defaultUserRule";
export * from "./getAdminRule";
export * from "./getAdminRuleCollection";
export * from "./getConnectivityConfiguration";
export * from "./getDefaultAdminRule";
export * from "./getDefaultUserRule";
export * from "./getManagementGroupNetworkManagerConnection";
export * from "./getNetworkGroup";
export * from "./getNetworkManager";
export * from "./getScopeConnection";
export * from "./getSecurityAdminConfiguration";
export * from "./getSecurityUserConfiguration";
export * from "./getStaticMember";
export * from "./getSubscriptionNetworkManagerConnection";
export * from "./getUserRule";
export * from "./getUserRuleCollection";
export * from "./listActiveConnectivityConfigurations";
export * from "./listActiveSecurityAdminRules";
export * from "./listActiveSecurityUserRules";
export * from "./listEffectiveVirtualNetworkByNetworkManager";
export * from "./listListEffectiveVirtualNetworkByNetworkGroup";
export * from "./listNetworkManagerDeploymentStatus";
export * from "./listNetworkManagerEffectiveConnectivityConfigurations";
export * from "./listNetworkManagerEffectiveSecurityAdminRules";
export * from "./managementGroupNetworkManagerConnection";
export * from "./networkGroup";
export * from "./networkManager";
export * from "./scopeConnection";
export * from "./securityAdminConfiguration";
export * from "./securityUserConfiguration";
export * from "./staticMember";
export * from "./subscriptionNetworkManagerConnection";
export * from "./userRule";
export * from "./userRuleCollection";

// Export enums:
export * from "../../types/enums/network/v20220401preview";

// Import resources to register:
import { AdminRule } from "./adminRule";
import { AdminRuleCollection } from "./adminRuleCollection";
import { ConnectivityConfiguration } from "./connectivityConfiguration";
import { DefaultAdminRule } from "./defaultAdminRule";
import { DefaultUserRule } from "./defaultUserRule";
import { ManagementGroupNetworkManagerConnection } from "./managementGroupNetworkManagerConnection";
import { NetworkGroup } from "./networkGroup";
import { NetworkManager } from "./networkManager";
import { ScopeConnection } from "./scopeConnection";
import { SecurityAdminConfiguration } from "./securityAdminConfiguration";
import { SecurityUserConfiguration } from "./securityUserConfiguration";
import { StaticMember } from "./staticMember";
import { SubscriptionNetworkManagerConnection } from "./subscriptionNetworkManagerConnection";
import { UserRule } from "./userRule";
import { UserRuleCollection } from "./userRuleCollection";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:network/v20220401preview:AdminRule":
                return new AdminRule(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:AdminRuleCollection":
                return new AdminRuleCollection(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:ConnectivityConfiguration":
                return new ConnectivityConfiguration(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:DefaultAdminRule":
                return new DefaultAdminRule(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:DefaultUserRule":
                return new DefaultUserRule(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:ManagementGroupNetworkManagerConnection":
                return new ManagementGroupNetworkManagerConnection(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:NetworkGroup":
                return new NetworkGroup(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:NetworkManager":
                return new NetworkManager(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:ScopeConnection":
                return new ScopeConnection(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:SecurityAdminConfiguration":
                return new SecurityAdminConfiguration(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:SecurityUserConfiguration":
                return new SecurityUserConfiguration(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:StaticMember":
                return new StaticMember(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:SubscriptionNetworkManagerConnection":
                return new SubscriptionNetworkManagerConnection(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:UserRule":
                return new UserRule(name, <any>undefined, { urn })
            case "azure-native:network/v20220401preview:UserRuleCollection":
                return new UserRuleCollection(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20220401preview", _module)
