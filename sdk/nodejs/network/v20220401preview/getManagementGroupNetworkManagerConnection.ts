// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * The Network Manager Connection resource
 */
export function getManagementGroupNetworkManagerConnection(args: GetManagementGroupNetworkManagerConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementGroupNetworkManagerConnectionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:network/v20220401preview:getManagementGroupNetworkManagerConnection", {
        "managementGroupId": args.managementGroupId,
        "networkManagerConnectionName": args.networkManagerConnectionName,
    }, opts);
}

export interface GetManagementGroupNetworkManagerConnectionArgs {
    /**
     * The management group Id which uniquely identify the Microsoft Azure management group.
     */
    managementGroupId: string;
    /**
     * Name for the network manager connection.
     */
    networkManagerConnectionName: string;
}

/**
 * The Network Manager Connection resource
 */
export interface GetManagementGroupNetworkManagerConnectionResult {
    /**
     * A description of the scope connection.
     */
    readonly description?: string;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Network Manager Id.
     */
    readonly networkManagerId?: string;
    /**
     * The system metadata related to this resource.
     */
    readonly systemData: outputs.network.v20220401preview.SystemDataResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}

export function getManagementGroupNetworkManagerConnectionOutput(args: GetManagementGroupNetworkManagerConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementGroupNetworkManagerConnectionResult> {
    return pulumi.output(args).apply(a => getManagementGroupNetworkManagerConnection(a, opts))
}

export interface GetManagementGroupNetworkManagerConnectionOutputArgs {
    /**
     * The management group Id which uniquely identify the Microsoft Azure management group.
     */
    managementGroupId: pulumi.Input<string>;
    /**
     * Name for the network manager connection.
     */
    networkManagerConnectionName: pulumi.Input<string>;
}
