// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Peering in a ExpressRouteCircuit resource
 *
 * @deprecated Version 2016-03-30 will be removed in v2 of the provider.
 */
export class ExpressRouteCircuitPeering extends pulumi.CustomResource {
    /**
     * Get an existing ExpressRouteCircuitPeering resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ExpressRouteCircuitPeering {
        pulumi.log.warn("ExpressRouteCircuitPeering is deprecated: Version 2016-03-30 will be removed in v2 of the provider.")
        return new ExpressRouteCircuitPeering(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:network/v20160330:ExpressRouteCircuitPeering';

    /**
     * Returns true if the given object is an instance of ExpressRouteCircuitPeering.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExpressRouteCircuitPeering {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExpressRouteCircuitPeering.__pulumiType;
    }

    /**
     * Gets or sets the azure ASN
     */
    public readonly azureASN!: pulumi.Output<number | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated
     */
    public /*out*/ readonly etag!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the Microsoft peering config
     */
    public readonly microsoftPeeringConfig!: pulumi.Output<outputs.network.v20160330.ExpressRouteCircuitPeeringConfigResponse | undefined>;
    /**
     * Gets name of the resource that is unique within a resource group. This name can be used to access the resource
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the peer ASN
     */
    public readonly peerASN!: pulumi.Output<number | undefined>;
    /**
     * Gets or sets PeeringType
     */
    public readonly peeringType!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the primary port
     */
    public readonly primaryAzurePort!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the primary address prefix
     */
    public readonly primaryPeerAddressPrefix!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the secondary port
     */
    public readonly secondaryAzurePort!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the secondary address prefix
     */
    public readonly secondaryPeerAddressPrefix!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the shared key
     */
    public readonly sharedKey!: pulumi.Output<string | undefined>;
    /**
     * Gets or sets state of Peering
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * Gets or peering stats
     */
    public readonly stats!: pulumi.Output<outputs.network.v20160330.ExpressRouteCircuitStatsResponse | undefined>;
    /**
     * Gets or sets the vlan id
     */
    public readonly vlanId!: pulumi.Output<number | undefined>;

    /**
     * Create a ExpressRouteCircuitPeering resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2016-03-30 will be removed in v2 of the provider. */
    constructor(name: string, args: ExpressRouteCircuitPeeringArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("ExpressRouteCircuitPeering is deprecated: Version 2016-03-30 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.circuitName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'circuitName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["azureASN"] = args ? args.azureASN : undefined;
            resourceInputs["circuitName"] = args ? args.circuitName : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["microsoftPeeringConfig"] = args ? args.microsoftPeeringConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["peerASN"] = args ? args.peerASN : undefined;
            resourceInputs["peeringName"] = args ? args.peeringName : undefined;
            resourceInputs["peeringType"] = args ? args.peeringType : undefined;
            resourceInputs["primaryAzurePort"] = args ? args.primaryAzurePort : undefined;
            resourceInputs["primaryPeerAddressPrefix"] = args ? args.primaryPeerAddressPrefix : undefined;
            resourceInputs["provisioningState"] = args ? args.provisioningState : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["secondaryAzurePort"] = args ? args.secondaryAzurePort : undefined;
            resourceInputs["secondaryPeerAddressPrefix"] = args ? args.secondaryPeerAddressPrefix : undefined;
            resourceInputs["sharedKey"] = args ? args.sharedKey : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["stats"] = args ? args.stats : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["etag"] = undefined /*out*/;
        } else {
            resourceInputs["azureASN"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["microsoftPeeringConfig"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["peerASN"] = undefined /*out*/;
            resourceInputs["peeringType"] = undefined /*out*/;
            resourceInputs["primaryAzurePort"] = undefined /*out*/;
            resourceInputs["primaryPeerAddressPrefix"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["secondaryAzurePort"] = undefined /*out*/;
            resourceInputs["secondaryPeerAddressPrefix"] = undefined /*out*/;
            resourceInputs["sharedKey"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stats"] = undefined /*out*/;
            resourceInputs["vlanId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:network:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20150501preview:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20150615:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20160601:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20160901:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20161201:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20170301:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20170601:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20170801:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20170901:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20171001:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20171101:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20180101:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20180201:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20180401:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20180601:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20180701:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20180801:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20181001:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20181101:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20181201:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20190201:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20190401:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20190601:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20190701:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20190801:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20190901:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20191101:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20191201:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20200301:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20200401:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20200501:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20200601:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20200701:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20200801:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20201101:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20210201:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20210301:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20210501:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20210801:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20220101:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20220501:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20220701:ExpressRouteCircuitPeering" }, { type: "azure-native:network/v20220901:ExpressRouteCircuitPeering" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ExpressRouteCircuitPeering.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ExpressRouteCircuitPeering resource.
 */
export interface ExpressRouteCircuitPeeringArgs {
    /**
     * Gets or sets the azure ASN
     */
    azureASN?: pulumi.Input<number>;
    /**
     * The name of the express route circuit.
     */
    circuitName: pulumi.Input<string>;
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
    /**
     * Gets or sets the Microsoft peering config
     */
    microsoftPeeringConfig?: pulumi.Input<inputs.network.v20160330.ExpressRouteCircuitPeeringConfigArgs>;
    /**
     * Gets name of the resource that is unique within a resource group. This name can be used to access the resource
     */
    name?: pulumi.Input<string>;
    /**
     * Gets or sets the peer ASN
     */
    peerASN?: pulumi.Input<number>;
    /**
     * The name of the peering.
     */
    peeringName?: pulumi.Input<string>;
    /**
     * Gets or sets PeeringType
     */
    peeringType?: pulumi.Input<string | enums.network.v20160330.ExpressRouteCircuitPeeringType>;
    /**
     * Gets or sets the primary port
     */
    primaryAzurePort?: pulumi.Input<string>;
    /**
     * Gets or sets the primary address prefix
     */
    primaryPeerAddressPrefix?: pulumi.Input<string>;
    /**
     * Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Gets or sets the secondary port
     */
    secondaryAzurePort?: pulumi.Input<string>;
    /**
     * Gets or sets the secondary address prefix
     */
    secondaryPeerAddressPrefix?: pulumi.Input<string>;
    /**
     * Gets or sets the shared key
     */
    sharedKey?: pulumi.Input<string>;
    /**
     * Gets or sets state of Peering
     */
    state?: pulumi.Input<string | enums.network.v20160330.ExpressRouteCircuitPeeringState>;
    /**
     * Gets or peering stats
     */
    stats?: pulumi.Input<inputs.network.v20160330.ExpressRouteCircuitStatsArgs>;
    /**
     * Gets or sets the vlan id
     */
    vlanId?: pulumi.Input<number>;
}
