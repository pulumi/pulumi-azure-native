// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A DDoS custom policy in a resource group.
 *
 * Uses Azure REST API version 2024-05-01. In version 2.x of the Azure Native provider, it used API version 2023-02-01.
 *
 * Other available API versions: 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class DdosCustomPolicy extends pulumi.CustomResource {
    /**
     * Get an existing DdosCustomPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DdosCustomPolicy {
        return new DdosCustomPolicy(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:network:DdosCustomPolicy';

    /**
     * Returns true if the given object is an instance of DdosCustomPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosCustomPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosCustomPolicy.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Resource location.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The provisioning state of the DDoS custom policy resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
     */
    public /*out*/ readonly resourceGuid!: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DdosCustomPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdosCustomPolicyArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["ddosCustomPolicyName"] = args ? args.ddosCustomPolicyName : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["resourceGuid"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["resourceGuid"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:network/v20220101:DdosCustomPolicy" }, { type: "azure-native:network/v20230201:DdosCustomPolicy" }, { type: "azure-native:network/v20230401:DdosCustomPolicy" }, { type: "azure-native:network/v20230501:DdosCustomPolicy" }, { type: "azure-native:network/v20230601:DdosCustomPolicy" }, { type: "azure-native:network/v20230901:DdosCustomPolicy" }, { type: "azure-native:network/v20231101:DdosCustomPolicy" }, { type: "azure-native:network/v20240101:DdosCustomPolicy" }, { type: "azure-native:network/v20240301:DdosCustomPolicy" }, { type: "azure-native:network/v20240501:DdosCustomPolicy" }, { type: "azure-native_network_v20181101:network:DdosCustomPolicy" }, { type: "azure-native_network_v20181201:network:DdosCustomPolicy" }, { type: "azure-native_network_v20190201:network:DdosCustomPolicy" }, { type: "azure-native_network_v20190401:network:DdosCustomPolicy" }, { type: "azure-native_network_v20190601:network:DdosCustomPolicy" }, { type: "azure-native_network_v20190701:network:DdosCustomPolicy" }, { type: "azure-native_network_v20190801:network:DdosCustomPolicy" }, { type: "azure-native_network_v20190901:network:DdosCustomPolicy" }, { type: "azure-native_network_v20191101:network:DdosCustomPolicy" }, { type: "azure-native_network_v20191201:network:DdosCustomPolicy" }, { type: "azure-native_network_v20200301:network:DdosCustomPolicy" }, { type: "azure-native_network_v20200401:network:DdosCustomPolicy" }, { type: "azure-native_network_v20200501:network:DdosCustomPolicy" }, { type: "azure-native_network_v20200601:network:DdosCustomPolicy" }, { type: "azure-native_network_v20200701:network:DdosCustomPolicy" }, { type: "azure-native_network_v20200801:network:DdosCustomPolicy" }, { type: "azure-native_network_v20201101:network:DdosCustomPolicy" }, { type: "azure-native_network_v20210201:network:DdosCustomPolicy" }, { type: "azure-native_network_v20210301:network:DdosCustomPolicy" }, { type: "azure-native_network_v20210501:network:DdosCustomPolicy" }, { type: "azure-native_network_v20210801:network:DdosCustomPolicy" }, { type: "azure-native_network_v20220101:network:DdosCustomPolicy" }, { type: "azure-native_network_v20220501:network:DdosCustomPolicy" }, { type: "azure-native_network_v20220701:network:DdosCustomPolicy" }, { type: "azure-native_network_v20220901:network:DdosCustomPolicy" }, { type: "azure-native_network_v20221101:network:DdosCustomPolicy" }, { type: "azure-native_network_v20230201:network:DdosCustomPolicy" }, { type: "azure-native_network_v20230401:network:DdosCustomPolicy" }, { type: "azure-native_network_v20230501:network:DdosCustomPolicy" }, { type: "azure-native_network_v20230601:network:DdosCustomPolicy" }, { type: "azure-native_network_v20230901:network:DdosCustomPolicy" }, { type: "azure-native_network_v20231101:network:DdosCustomPolicy" }, { type: "azure-native_network_v20240101:network:DdosCustomPolicy" }, { type: "azure-native_network_v20240301:network:DdosCustomPolicy" }, { type: "azure-native_network_v20240501:network:DdosCustomPolicy" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DdosCustomPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DdosCustomPolicy resource.
 */
export interface DdosCustomPolicyArgs {
    /**
     * The name of the DDoS custom policy.
     */
    ddosCustomPolicyName?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
