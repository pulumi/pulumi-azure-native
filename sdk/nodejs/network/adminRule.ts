// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Network admin rule.
 * API Version: 2021-02-01-preview.
 */
export class AdminRule extends pulumi.CustomResource {
    /**
     * Get an existing AdminRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AdminRule {
        return new AdminRule(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:network:AdminRule';

    /**
     * Returns true if the given object is an instance of AdminRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdminRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdminRule.__pulumiType;
    }

    /**
     * Indicates the access allowed for this particular rule
     */
    public readonly access!: pulumi.Output<string>;
    /**
     * Groups for configuration
     */
    public readonly appliesToGroups!: pulumi.Output<outputs.network.NetworkManagerSecurityGroupItemResponse[] | undefined>;
    /**
     * A description for this rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The destination address prefixes. CIDR or destination IP ranges.
     */
    public readonly destination!: pulumi.Output<outputs.network.AddressPrefixItemResponse[] | undefined>;
    /**
     * The destination port ranges.
     */
    public readonly destinationPortRanges!: pulumi.Output<string[] | undefined>;
    /**
     * Indicates if the traffic matched against the rule in inbound or outbound.
     */
    public readonly direction!: pulumi.Output<string>;
    /**
     * A friendly name for the rule.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * Network protocol this rule applies to.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * The provisioning state of the security Configuration resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The CIDR or source IP ranges.
     */
    public readonly source!: pulumi.Output<outputs.network.AddressPrefixItemResponse[] | undefined>;
    /**
     * The source port ranges.
     */
    public readonly sourcePortRanges!: pulumi.Output<string[] | undefined>;
    /**
     * The system metadata related to this resource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.network.SystemDataResponse>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a AdminRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdminRuleArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.access === undefined) && !opts.urn) {
                throw new Error("Missing required property 'access'");
            }
            if ((!args || args.configurationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationName'");
            }
            if ((!args || args.direction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if ((!args || args.networkManagerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkManagerName'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["access"] = args ? args.access : undefined;
            inputs["appliesToGroups"] = args ? args.appliesToGroups : undefined;
            inputs["configurationName"] = args ? args.configurationName : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["destination"] = args ? args.destination : undefined;
            inputs["destinationPortRanges"] = args ? args.destinationPortRanges : undefined;
            inputs["direction"] = args ? args.direction : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["networkManagerName"] = args ? args.networkManagerName : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["ruleName"] = args ? args.ruleName : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["sourcePortRanges"] = args ? args.sourcePortRanges : undefined;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["access"] = undefined /*out*/;
            inputs["appliesToGroups"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["destination"] = undefined /*out*/;
            inputs["destinationPortRanges"] = undefined /*out*/;
            inputs["direction"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["priority"] = undefined /*out*/;
            inputs["protocol"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["source"] = undefined /*out*/;
            inputs["sourcePortRanges"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:network:AdminRule" }, { type: "azure-native:network/v20210201preview:AdminRule" }, { type: "azure-nextgen:network/v20210201preview:AdminRule" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(AdminRule.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a AdminRule resource.
 */
export interface AdminRuleArgs {
    /**
     * Indicates the access allowed for this particular rule
     */
    readonly access: pulumi.Input<string | enums.network.SecurityConfigurationRuleAccess>;
    /**
     * Groups for configuration
     */
    readonly appliesToGroups?: pulumi.Input<pulumi.Input<inputs.network.NetworkManagerSecurityGroupItemArgs>[]>;
    /**
     * The name of the network manager security Configuration.
     */
    readonly configurationName: pulumi.Input<string>;
    /**
     * A description for this rule.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The destination address prefixes. CIDR or destination IP ranges.
     */
    readonly destination?: pulumi.Input<pulumi.Input<inputs.network.AddressPrefixItemArgs>[]>;
    /**
     * The destination port ranges.
     */
    readonly destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates if the traffic matched against the rule in inbound or outbound.
     */
    readonly direction: pulumi.Input<string | enums.network.SecurityConfigurationRuleDirection>;
    /**
     * A friendly name for the rule.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The name of the network manager.
     */
    readonly networkManagerName: pulumi.Input<string>;
    /**
     * The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    readonly priority?: pulumi.Input<number>;
    /**
     * Network protocol this rule applies to.
     */
    readonly protocol: pulumi.Input<string | enums.network.SecurityConfigurationRuleProtocol>;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the rule.
     */
    readonly ruleName?: pulumi.Input<string>;
    /**
     * The CIDR or source IP ranges.
     */
    readonly source?: pulumi.Input<pulumi.Input<inputs.network.AddressPrefixItemArgs>[]>;
    /**
     * The source port ranges.
     */
    readonly sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
}
