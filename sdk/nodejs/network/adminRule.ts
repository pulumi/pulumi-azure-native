// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Network admin rule.
 *
 * Uses Azure REST API version 2024-05-01. In version 2.x of the Azure Native provider, it used API version 2023-02-01.
 *
 * Other available API versions: 2021-02-01-preview, 2022-01-01, 2022-02-01-preview, 2022-04-01-preview, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-01-01-preview, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class AdminRule extends pulumi.CustomResource {
    /**
     * Get an existing AdminRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AdminRule {
        return new AdminRule(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:network:AdminRule';

    /**
     * Returns true if the given object is an instance of AdminRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdminRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdminRule.__pulumiType;
    }

    /**
     * Indicates the access allowed for this particular rule
     */
    public readonly access!: pulumi.Output<string>;
    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * A description for this rule. Restricted to 140 chars.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The destination port ranges.
     */
    public readonly destinationPortRanges!: pulumi.Output<string[] | undefined>;
    /**
     * The destination address prefixes. CIDR or destination IP ranges.
     */
    public readonly destinations!: pulumi.Output<outputs.network.AddressPrefixItemResponse[] | undefined>;
    /**
     * Indicates if the traffic matched against the rule in inbound or outbound.
     */
    public readonly direction!: pulumi.Output<string>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Whether the rule is custom or default.
     * Expected value is 'Custom'.
     */
    public readonly kind!: pulumi.Output<"Custom">;
    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * Network protocol this rule applies to.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Unique identifier for this resource.
     */
    public /*out*/ readonly resourceGuid!: pulumi.Output<string>;
    /**
     * The source port ranges.
     */
    public readonly sourcePortRanges!: pulumi.Output<string[] | undefined>;
    /**
     * The CIDR or source IP ranges.
     */
    public readonly sources!: pulumi.Output<outputs.network.AddressPrefixItemResponse[] | undefined>;
    /**
     * The system metadata related to this resource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.network.SystemDataResponse>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a AdminRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdminRuleArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.access === undefined && !opts.urn) {
                throw new Error("Missing required property 'access'");
            }
            if (args?.configurationName === undefined && !opts.urn) {
                throw new Error("Missing required property 'configurationName'");
            }
            if (args?.direction === undefined && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if (args?.kind === undefined && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if (args?.networkManagerName === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkManagerName'");
            }
            if (args?.priority === undefined && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.ruleCollectionName === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleCollectionName'");
            }
            resourceInputs["access"] = args?.access;
            resourceInputs["configurationName"] = args?.configurationName;
            resourceInputs["description"] = args?.description;
            resourceInputs["destinationPortRanges"] = args?.destinationPortRanges;
            resourceInputs["destinations"] = args?.destinations;
            resourceInputs["direction"] = args?.direction;
            resourceInputs["kind"] = "Custom";
            resourceInputs["networkManagerName"] = args?.networkManagerName;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["ruleCollectionName"] = args?.ruleCollectionName;
            resourceInputs["ruleName"] = args?.ruleName;
            resourceInputs["sourcePortRanges"] = args?.sourcePortRanges;
            resourceInputs["sources"] = args?.sources;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["resourceGuid"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["access"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["destinationPortRanges"] = undefined /*out*/;
            resourceInputs["destinations"] = undefined /*out*/;
            resourceInputs["direction"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["priority"] = undefined /*out*/;
            resourceInputs["protocol"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["resourceGuid"] = undefined /*out*/;
            resourceInputs["sourcePortRanges"] = undefined /*out*/;
            resourceInputs["sources"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:network/v20210201preview:AdminRule" }, { type: "azure-native:network/v20210501preview:AdminRule" }, { type: "azure-native:network/v20210501preview:DefaultAdminRule" }, { type: "azure-native:network/v20220101:AdminRule" }, { type: "azure-native:network/v20220201preview:AdminRule" }, { type: "azure-native:network/v20220401preview:AdminRule" }, { type: "azure-native:network/v20220501:AdminRule" }, { type: "azure-native:network/v20220701:AdminRule" }, { type: "azure-native:network/v20220901:AdminRule" }, { type: "azure-native:network/v20221101:AdminRule" }, { type: "azure-native:network/v20230201:AdminRule" }, { type: "azure-native:network/v20230201:DefaultAdminRule" }, { type: "azure-native:network/v20230401:AdminRule" }, { type: "azure-native:network/v20230401:DefaultAdminRule" }, { type: "azure-native:network/v20230501:AdminRule" }, { type: "azure-native:network/v20230501:DefaultAdminRule" }, { type: "azure-native:network/v20230601:AdminRule" }, { type: "azure-native:network/v20230601:DefaultAdminRule" }, { type: "azure-native:network/v20230901:AdminRule" }, { type: "azure-native:network/v20230901:DefaultAdminRule" }, { type: "azure-native:network/v20231101:AdminRule" }, { type: "azure-native:network/v20231101:DefaultAdminRule" }, { type: "azure-native:network/v20240101:AdminRule" }, { type: "azure-native:network/v20240101:DefaultAdminRule" }, { type: "azure-native:network/v20240101preview:AdminRule" }, { type: "azure-native:network/v20240101preview:DefaultAdminRule" }, { type: "azure-native:network/v20240301:AdminRule" }, { type: "azure-native:network/v20240301:DefaultAdminRule" }, { type: "azure-native:network/v20240501:AdminRule" }, { type: "azure-native:network/v20240501:DefaultAdminRule" }, { type: "azure-native:network/v20240701:AdminRule" }, { type: "azure-native:network:DefaultAdminRule" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(AdminRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AdminRule resource.
 */
export interface AdminRuleArgs {
    /**
     * Indicates the access allowed for this particular rule
     */
    access: pulumi.Input<string | enums.network.SecurityConfigurationRuleAccess>;
    /**
     * The name of the network manager Security Configuration.
     */
    configurationName: pulumi.Input<string>;
    /**
     * A description for this rule. Restricted to 140 chars.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination port ranges.
     */
    destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The destination address prefixes. CIDR or destination IP ranges.
     */
    destinations?: pulumi.Input<pulumi.Input<inputs.network.AddressPrefixItemArgs>[]>;
    /**
     * Indicates if the traffic matched against the rule in inbound or outbound.
     */
    direction: pulumi.Input<string | enums.network.SecurityConfigurationRuleDirection>;
    /**
     * Whether the rule is custom or default.
     * Expected value is 'Custom'.
     */
    kind: pulumi.Input<"Custom">;
    /**
     * The name of the network manager.
     */
    networkManagerName: pulumi.Input<string>;
    /**
     * The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    priority: pulumi.Input<number>;
    /**
     * Network protocol this rule applies to.
     */
    protocol: pulumi.Input<string | enums.network.SecurityConfigurationRuleProtocol>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the network manager security Configuration rule collection.
     */
    ruleCollectionName: pulumi.Input<string>;
    /**
     * The name of the rule.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The source port ranges.
     */
    sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The CIDR or source IP ranges.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.network.AddressPrefixItemArgs>[]>;
}
