// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * VpnGatewayNatRule Resource.
 * API Version: 2020-08-01.
 */
export class NatRule extends pulumi.CustomResource {
    /**
     * Get an existing NatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NatRule {
        return new NatRule(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:network:NatRule';

    /**
     * Returns true if the given object is an instance of NatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NatRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatRule.__pulumiType;
    }

    /**
     * List of egress VpnSiteLinkConnections.
     */
    public /*out*/ readonly egressVpnSiteLinkConnections!: pulumi.Output<outputs.network.SubResourceResponse[]>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The private IP address external mapping for NAT.
     */
    public readonly externalMappings!: pulumi.Output<outputs.network.VpnNatRuleMappingResponse[] | undefined>;
    /**
     * List of ingress VpnSiteLinkConnections.
     */
    public /*out*/ readonly ingressVpnSiteLinkConnections!: pulumi.Output<outputs.network.SubResourceResponse[]>;
    /**
     * The private IP address internal mapping for NAT.
     */
    public readonly internalMappings!: pulumi.Output<outputs.network.VpnNatRuleMappingResponse[] | undefined>;
    /**
     * The IP Configuration ID this NAT rule applies to.
     */
    public readonly ipConfigurationId!: pulumi.Output<string | undefined>;
    /**
     * The Source NAT direction of a VPN NAT.
     */
    public readonly mode!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The provisioning state of the NAT Rule resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Resource type.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a NatRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NatRuleArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if ((!args || args.gatewayName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'gatewayName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["externalMappings"] = args ? args.externalMappings : undefined;
            inputs["gatewayName"] = args ? args.gatewayName : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["internalMappings"] = args ? args.internalMappings : undefined;
            inputs["ipConfigurationId"] = args ? args.ipConfigurationId : undefined;
            inputs["mode"] = args ? args.mode : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["natRuleName"] = args ? args.natRuleName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["egressVpnSiteLinkConnections"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["ingressVpnSiteLinkConnections"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
        } else {
            inputs["egressVpnSiteLinkConnections"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["externalMappings"] = undefined /*out*/;
            inputs["ingressVpnSiteLinkConnections"] = undefined /*out*/;
            inputs["internalMappings"] = undefined /*out*/;
            inputs["ipConfigurationId"] = undefined /*out*/;
            inputs["mode"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:network/latest:NatRule" }, { type: "azure-nextgen:network/v20200801:NatRule" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(NatRule.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a NatRule resource.
 */
export interface NatRuleArgs {
    /**
     * The private IP address external mapping for NAT.
     */
    readonly externalMappings?: pulumi.Input<pulumi.Input<inputs.network.VpnNatRuleMapping>[]>;
    /**
     * The name of the gateway.
     */
    readonly gatewayName: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    readonly id?: pulumi.Input<string>;
    /**
     * The private IP address internal mapping for NAT.
     */
    readonly internalMappings?: pulumi.Input<pulumi.Input<inputs.network.VpnNatRuleMapping>[]>;
    /**
     * The IP Configuration ID this NAT rule applies to.
     */
    readonly ipConfigurationId?: pulumi.Input<string>;
    /**
     * The Source NAT direction of a VPN NAT.
     */
    readonly mode?: pulumi.Input<string | enums.network.VpnNatRuleMode>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The name of the nat rule.
     */
    readonly natRuleName?: pulumi.Input<string>;
    /**
     * The resource group name of the VpnGateway.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The type of NAT rule for VPN NAT.
     */
    readonly type?: pulumi.Input<string | enums.network.VpnNatRuleType>;
}
