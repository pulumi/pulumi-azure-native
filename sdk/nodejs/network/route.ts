// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Route resource.
 *
 * Uses Azure REST API version 2024-05-01. In version 2.x of the Azure Native provider, it used API version 2023-02-01.
 *
 * Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class Route extends pulumi.CustomResource {
    /**
     * Get an existing Route resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Route {
        return new Route(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:network:Route';

    /**
     * Returns true if the given object is an instance of Route.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route.__pulumiType;
    }

    /**
     * The destination CIDR to which the route applies.
     */
    public readonly addressPrefix!: pulumi.Output<string | undefined>;
    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
     */
    public /*out*/ readonly hasBgpOverride!: pulumi.Output<boolean>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
     */
    public readonly nextHopIpAddress!: pulumi.Output<string | undefined>;
    /**
     * The type of Azure hop the packet should be sent to.
     */
    public readonly nextHopType!: pulumi.Output<string>;
    /**
     * The provisioning state of the route resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The type of the resource.
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a Route resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.nextHopType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nextHopType'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.routeTableName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routeTableName'");
            }
            resourceInputs["addressPrefix"] = args ? args.addressPrefix : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nextHopIpAddress"] = args ? args.nextHopIpAddress : undefined;
            resourceInputs["nextHopType"] = args ? args.nextHopType : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["routeName"] = args ? args.routeName : undefined;
            resourceInputs["routeTableName"] = args ? args.routeTableName : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["hasBgpOverride"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
        } else {
            resourceInputs["addressPrefix"] = undefined /*out*/;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["hasBgpOverride"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nextHopIpAddress"] = undefined /*out*/;
            resourceInputs["nextHopType"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:network/v20190601:Route" }, { type: "azure-native:network/v20230201:Route" }, { type: "azure-native:network/v20230401:Route" }, { type: "azure-native:network/v20230501:Route" }, { type: "azure-native:network/v20230601:Route" }, { type: "azure-native:network/v20230901:Route" }, { type: "azure-native:network/v20231101:Route" }, { type: "azure-native:network/v20240101:Route" }, { type: "azure-native:network/v20240301:Route" }, { type: "azure-native:network/v20240501:Route" }, { type: "azure-native_network_v20150501preview:network:Route" }, { type: "azure-native_network_v20150615:network:Route" }, { type: "azure-native_network_v20160330:network:Route" }, { type: "azure-native_network_v20160601:network:Route" }, { type: "azure-native_network_v20160901:network:Route" }, { type: "azure-native_network_v20161201:network:Route" }, { type: "azure-native_network_v20170301:network:Route" }, { type: "azure-native_network_v20170601:network:Route" }, { type: "azure-native_network_v20170801:network:Route" }, { type: "azure-native_network_v20170901:network:Route" }, { type: "azure-native_network_v20171001:network:Route" }, { type: "azure-native_network_v20171101:network:Route" }, { type: "azure-native_network_v20180101:network:Route" }, { type: "azure-native_network_v20180201:network:Route" }, { type: "azure-native_network_v20180401:network:Route" }, { type: "azure-native_network_v20180601:network:Route" }, { type: "azure-native_network_v20180701:network:Route" }, { type: "azure-native_network_v20180801:network:Route" }, { type: "azure-native_network_v20181001:network:Route" }, { type: "azure-native_network_v20181101:network:Route" }, { type: "azure-native_network_v20181201:network:Route" }, { type: "azure-native_network_v20190201:network:Route" }, { type: "azure-native_network_v20190401:network:Route" }, { type: "azure-native_network_v20190601:network:Route" }, { type: "azure-native_network_v20190701:network:Route" }, { type: "azure-native_network_v20190801:network:Route" }, { type: "azure-native_network_v20190901:network:Route" }, { type: "azure-native_network_v20191101:network:Route" }, { type: "azure-native_network_v20191201:network:Route" }, { type: "azure-native_network_v20200301:network:Route" }, { type: "azure-native_network_v20200401:network:Route" }, { type: "azure-native_network_v20200501:network:Route" }, { type: "azure-native_network_v20200601:network:Route" }, { type: "azure-native_network_v20200701:network:Route" }, { type: "azure-native_network_v20200801:network:Route" }, { type: "azure-native_network_v20201101:network:Route" }, { type: "azure-native_network_v20210201:network:Route" }, { type: "azure-native_network_v20210301:network:Route" }, { type: "azure-native_network_v20210501:network:Route" }, { type: "azure-native_network_v20210801:network:Route" }, { type: "azure-native_network_v20220101:network:Route" }, { type: "azure-native_network_v20220501:network:Route" }, { type: "azure-native_network_v20220701:network:Route" }, { type: "azure-native_network_v20220901:network:Route" }, { type: "azure-native_network_v20221101:network:Route" }, { type: "azure-native_network_v20230201:network:Route" }, { type: "azure-native_network_v20230401:network:Route" }, { type: "azure-native_network_v20230501:network:Route" }, { type: "azure-native_network_v20230601:network:Route" }, { type: "azure-native_network_v20230901:network:Route" }, { type: "azure-native_network_v20231101:network:Route" }, { type: "azure-native_network_v20240101:network:Route" }, { type: "azure-native_network_v20240301:network:Route" }, { type: "azure-native_network_v20240501:network:Route" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Route.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Route resource.
 */
export interface RouteArgs {
    /**
     * The destination CIDR to which the route applies.
     */
    addressPrefix?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
     */
    nextHopIpAddress?: pulumi.Input<string>;
    /**
     * The type of Azure hop the packet should be sent to.
     */
    nextHopType: pulumi.Input<string | enums.network.RouteNextHopType>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the route.
     */
    routeName?: pulumi.Input<string>;
    /**
     * The name of the route table.
     */
    routeTableName: pulumi.Input<string>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
}
