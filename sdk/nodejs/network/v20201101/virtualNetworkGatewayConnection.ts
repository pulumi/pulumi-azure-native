// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * A common class for general resource information.
 */
export class VirtualNetworkGatewayConnection extends pulumi.CustomResource {
    /**
     * Get an existing VirtualNetworkGatewayConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualNetworkGatewayConnection {
        return new VirtualNetworkGatewayConnection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:network/v20201101:VirtualNetworkGatewayConnection';

    /**
     * Returns true if the given object is an instance of VirtualNetworkGatewayConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualNetworkGatewayConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualNetworkGatewayConnection.__pulumiType;
    }

    /**
     * The authorizationKey.
     */
    public readonly authorizationKey!: pulumi.Output<string | undefined>;
    /**
     * The connection mode for this connection.
     */
    public readonly connectionMode!: pulumi.Output<string | undefined>;
    /**
     * Connection protocol used for this connection.
     */
    public readonly connectionProtocol!: pulumi.Output<string | undefined>;
    /**
     * Virtual Network Gateway connection status.
     */
    public /*out*/ readonly connectionStatus!: pulumi.Output<string>;
    /**
     * Gateway connection type.
     */
    public readonly connectionType!: pulumi.Output<string>;
    /**
     * The dead peer detection timeout of this connection in seconds.
     */
    public readonly dpdTimeoutSeconds!: pulumi.Output<number | undefined>;
    /**
     * The egress bytes transferred in this connection.
     */
    public /*out*/ readonly egressBytesTransferred!: pulumi.Output<number>;
    /**
     * EnableBgp flag.
     */
    public readonly enableBgp!: pulumi.Output<boolean | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Bypass ExpressRoute Gateway for data forwarding.
     */
    public readonly expressRouteGatewayBypass!: pulumi.Output<boolean | undefined>;
    /**
     * The ingress bytes transferred in this connection.
     */
    public /*out*/ readonly ingressBytesTransferred!: pulumi.Output<number>;
    /**
     * The IPSec Policies to be considered by this connection.
     */
    public readonly ipsecPolicies!: pulumi.Output<outputs.network.v20201101.IpsecPolicyResponse[] | undefined>;
    /**
     * The reference to local network gateway resource.
     */
    public readonly localNetworkGateway2!: pulumi.Output<outputs.network.v20201101.LocalNetworkGatewayResponse | undefined>;
    /**
     * Resource location.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The reference to peerings resource.
     */
    public readonly peer!: pulumi.Output<outputs.network.v20201101.SubResourceResponse | undefined>;
    /**
     * The provisioning state of the virtual network gateway connection resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * The resource GUID property of the virtual network gateway connection resource.
     */
    public /*out*/ readonly resourceGuid!: pulumi.Output<string>;
    /**
     * The routing weight.
     */
    public readonly routingWeight!: pulumi.Output<number | undefined>;
    /**
     * The IPSec shared key.
     */
    public readonly sharedKey!: pulumi.Output<string | undefined>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Traffic Selector Policies to be considered by this connection.
     */
    public readonly trafficSelectorPolicies!: pulumi.Output<outputs.network.v20201101.TrafficSelectorPolicyResponse[] | undefined>;
    /**
     * Collection of all tunnels' connection health status.
     */
    public /*out*/ readonly tunnelConnectionStatus!: pulumi.Output<outputs.network.v20201101.TunnelConnectionHealthResponse[]>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Use private local Azure IP for the connection.
     */
    public readonly useLocalAzureIpAddress!: pulumi.Output<boolean | undefined>;
    /**
     * Enable policy-based traffic selectors.
     */
    public readonly usePolicyBasedTrafficSelectors!: pulumi.Output<boolean | undefined>;
    /**
     * The reference to virtual network gateway resource.
     */
    public readonly virtualNetworkGateway1!: pulumi.Output<outputs.network.v20201101.VirtualNetworkGatewayResponse>;
    /**
     * The reference to virtual network gateway resource.
     */
    public readonly virtualNetworkGateway2!: pulumi.Output<outputs.network.v20201101.VirtualNetworkGatewayResponse | undefined>;

    /**
     * Create a VirtualNetworkGatewayConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualNetworkGatewayConnectionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.connectionType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionType'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.virtualNetworkGateway1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualNetworkGateway1'");
            }
            resourceInputs["authorizationKey"] = args ? args.authorizationKey : undefined;
            resourceInputs["connectionMode"] = args ? args.connectionMode : undefined;
            resourceInputs["connectionProtocol"] = args ? args.connectionProtocol : undefined;
            resourceInputs["connectionType"] = args ? args.connectionType : undefined;
            resourceInputs["dpdTimeoutSeconds"] = args ? args.dpdTimeoutSeconds : undefined;
            resourceInputs["enableBgp"] = args ? args.enableBgp : undefined;
            resourceInputs["expressRouteGatewayBypass"] = args ? args.expressRouteGatewayBypass : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["ipsecPolicies"] = args ? args.ipsecPolicies : undefined;
            resourceInputs["localNetworkGateway2"] = args ? args.localNetworkGateway2 : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["peer"] = args ? args.peer : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["routingWeight"] = args ? args.routingWeight : undefined;
            resourceInputs["sharedKey"] = args ? args.sharedKey : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trafficSelectorPolicies"] = args ? args.trafficSelectorPolicies : undefined;
            resourceInputs["useLocalAzureIpAddress"] = args ? args.useLocalAzureIpAddress : undefined;
            resourceInputs["usePolicyBasedTrafficSelectors"] = args ? args.usePolicyBasedTrafficSelectors : undefined;
            resourceInputs["virtualNetworkGateway1"] = args ? args.virtualNetworkGateway1 : undefined;
            resourceInputs["virtualNetworkGateway2"] = args ? args.virtualNetworkGateway2 : undefined;
            resourceInputs["virtualNetworkGatewayConnectionName"] = args ? args.virtualNetworkGatewayConnectionName : undefined;
            resourceInputs["connectionStatus"] = undefined /*out*/;
            resourceInputs["egressBytesTransferred"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["ingressBytesTransferred"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["resourceGuid"] = undefined /*out*/;
            resourceInputs["tunnelConnectionStatus"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["authorizationKey"] = undefined /*out*/;
            resourceInputs["connectionMode"] = undefined /*out*/;
            resourceInputs["connectionProtocol"] = undefined /*out*/;
            resourceInputs["connectionStatus"] = undefined /*out*/;
            resourceInputs["connectionType"] = undefined /*out*/;
            resourceInputs["dpdTimeoutSeconds"] = undefined /*out*/;
            resourceInputs["egressBytesTransferred"] = undefined /*out*/;
            resourceInputs["enableBgp"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["expressRouteGatewayBypass"] = undefined /*out*/;
            resourceInputs["ingressBytesTransferred"] = undefined /*out*/;
            resourceInputs["ipsecPolicies"] = undefined /*out*/;
            resourceInputs["localNetworkGateway2"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["peer"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["resourceGuid"] = undefined /*out*/;
            resourceInputs["routingWeight"] = undefined /*out*/;
            resourceInputs["sharedKey"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["trafficSelectorPolicies"] = undefined /*out*/;
            resourceInputs["tunnelConnectionStatus"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["useLocalAzureIpAddress"] = undefined /*out*/;
            resourceInputs["usePolicyBasedTrafficSelectors"] = undefined /*out*/;
            resourceInputs["virtualNetworkGateway1"] = undefined /*out*/;
            resourceInputs["virtualNetworkGateway2"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:network:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20180601:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20180701:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20180801:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20181001:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20181101:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20181201:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20190201:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20190401:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20190601:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20190701:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20190801:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20190901:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20191101:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20191201:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20200301:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20200401:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20200501:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20200601:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20200701:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20200801:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20210201:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20210301:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20210501:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20210801:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20220101:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20220501:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20220701:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20220901:VirtualNetworkGatewayConnection" }, { type: "azure-native:network/v20221101:VirtualNetworkGatewayConnection" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(VirtualNetworkGatewayConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VirtualNetworkGatewayConnection resource.
 */
export interface VirtualNetworkGatewayConnectionArgs {
    /**
     * The authorizationKey.
     */
    authorizationKey?: pulumi.Input<string>;
    /**
     * The connection mode for this connection.
     */
    connectionMode?: pulumi.Input<string | enums.network.v20201101.VirtualNetworkGatewayConnectionMode>;
    /**
     * Connection protocol used for this connection.
     */
    connectionProtocol?: pulumi.Input<string | enums.network.v20201101.VirtualNetworkGatewayConnectionProtocol>;
    /**
     * Gateway connection type.
     */
    connectionType: pulumi.Input<string | enums.network.v20201101.VirtualNetworkGatewayConnectionType>;
    /**
     * The dead peer detection timeout of this connection in seconds.
     */
    dpdTimeoutSeconds?: pulumi.Input<number>;
    /**
     * EnableBgp flag.
     */
    enableBgp?: pulumi.Input<boolean>;
    /**
     * Bypass ExpressRoute Gateway for data forwarding.
     */
    expressRouteGatewayBypass?: pulumi.Input<boolean>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The IPSec Policies to be considered by this connection.
     */
    ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.network.v20201101.IpsecPolicyArgs>[]>;
    /**
     * The reference to local network gateway resource.
     */
    localNetworkGateway2?: pulumi.Input<inputs.network.v20201101.LocalNetworkGatewayArgs>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The reference to peerings resource.
     */
    peer?: pulumi.Input<inputs.network.v20201101.SubResourceArgs>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The routing weight.
     */
    routingWeight?: pulumi.Input<number>;
    /**
     * The IPSec shared key.
     */
    sharedKey?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Traffic Selector Policies to be considered by this connection.
     */
    trafficSelectorPolicies?: pulumi.Input<pulumi.Input<inputs.network.v20201101.TrafficSelectorPolicyArgs>[]>;
    /**
     * Use private local Azure IP for the connection.
     */
    useLocalAzureIpAddress?: pulumi.Input<boolean>;
    /**
     * Enable policy-based traffic selectors.
     */
    usePolicyBasedTrafficSelectors?: pulumi.Input<boolean>;
    /**
     * The reference to virtual network gateway resource.
     */
    virtualNetworkGateway1: pulumi.Input<inputs.network.v20201101.VirtualNetworkGatewayArgs>;
    /**
     * The reference to virtual network gateway resource.
     */
    virtualNetworkGateway2?: pulumi.Input<inputs.network.v20201101.VirtualNetworkGatewayArgs>;
    /**
     * The name of the virtual network gateway connection.
     */
    virtualNetworkGatewayConnectionName?: pulumi.Input<string>;
}
