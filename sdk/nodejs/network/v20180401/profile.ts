// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Class representing a Traffic Manager profile.
 */
export class Profile extends pulumi.CustomResource {
    /**
     * Get an existing Profile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Profile {
        return new Profile(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:network/v20180401:Profile';

    /**
     * Returns true if the given object is an instance of Profile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Profile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Profile.__pulumiType;
    }

    /**
     * The DNS settings of the Traffic Manager profile.
     */
    public readonly dnsConfig!: pulumi.Output<outputs.network.v20180401.DnsConfigResponse | undefined>;
    /**
     * The list of endpoints in the Traffic Manager profile.
     */
    public readonly endpoints!: pulumi.Output<outputs.network.v20180401.EndpointResponse[] | undefined>;
    /**
     * The Azure Region where the resource lives
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Maximum number of endpoints to be returned for MultiValue routing type.
     */
    public readonly maxReturn!: pulumi.Output<number | undefined>;
    /**
     * The endpoint monitoring settings of the Traffic Manager profile.
     */
    public readonly monitorConfig!: pulumi.Output<outputs.network.v20180401.MonitorConfigResponse | undefined>;
    /**
     * The name of the resource
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The status of the Traffic Manager profile.
     */
    public readonly profileStatus!: pulumi.Output<string | undefined>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The traffic routing method of the Traffic Manager profile.
     */
    public readonly trafficRoutingMethod!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.
     */
    public readonly trafficViewEnrollmentStatus!: pulumi.Output<string | undefined>;
    /**
     * The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a Profile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.profileName === undefined) {
                throw new Error("Missing required property 'profileName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["dnsConfig"] = args ? args.dnsConfig : undefined;
            inputs["endpoints"] = args ? args.endpoints : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["maxReturn"] = args ? args.maxReturn : undefined;
            inputs["monitorConfig"] = args ? args.monitorConfig : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["profileName"] = args ? args.profileName : undefined;
            inputs["profileStatus"] = args ? args.profileStatus : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["trafficRoutingMethod"] = args ? args.trafficRoutingMethod : undefined;
            inputs["trafficViewEnrollmentStatus"] = args ? args.trafficViewEnrollmentStatus : undefined;
            inputs["type"] = args ? args.type : undefined;
        } else {
            inputs["dnsConfig"] = undefined /*out*/;
            inputs["endpoints"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["maxReturn"] = undefined /*out*/;
            inputs["monitorConfig"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["profileStatus"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["trafficRoutingMethod"] = undefined /*out*/;
            inputs["trafficViewEnrollmentStatus"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:network/latest:Profile" }, { type: "azure-nextgen:network/v20151101:Profile" }, { type: "azure-nextgen:network/v20170301:Profile" }, { type: "azure-nextgen:network/v20170501:Profile" }, { type: "azure-nextgen:network/v20180201:Profile" }, { type: "azure-nextgen:network/v20180301:Profile" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(Profile.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Profile resource.
 */
export interface ProfileArgs {
    /**
     * The DNS settings of the Traffic Manager profile.
     */
    readonly dnsConfig?: pulumi.Input<inputs.network.v20180401.DnsConfig>;
    /**
     * The list of endpoints in the Traffic Manager profile.
     */
    readonly endpoints?: pulumi.Input<pulumi.Input<inputs.network.v20180401.Endpoint>[]>;
    /**
     * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
     */
    readonly id?: pulumi.Input<string>;
    /**
     * The Azure Region where the resource lives
     */
    readonly location?: pulumi.Input<string>;
    /**
     * Maximum number of endpoints to be returned for MultiValue routing type.
     */
    readonly maxReturn?: pulumi.Input<number>;
    /**
     * The endpoint monitoring settings of the Traffic Manager profile.
     */
    readonly monitorConfig?: pulumi.Input<inputs.network.v20180401.MonitorConfig>;
    /**
     * The name of the resource
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The name of the Traffic Manager profile.
     */
    readonly profileName: pulumi.Input<string>;
    /**
     * The status of the Traffic Manager profile.
     */
    readonly profileStatus?: pulumi.Input<string>;
    /**
     * The name of the resource group containing the Traffic Manager profile.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The traffic routing method of the Traffic Manager profile.
     */
    readonly trafficRoutingMethod?: pulumi.Input<string>;
    /**
     * Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.
     */
    readonly trafficViewEnrollmentStatus?: pulumi.Input<string>;
    /**
     * The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
     */
    readonly type?: pulumi.Input<string>;
}
