// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets the specified route from a route table.
 */
export function getRoute(args: GetRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:network/v20190801:getRoute", {
        "resourceGroupName": args.resourceGroupName,
        "routeName": args.routeName,
        "routeTableName": args.routeTableName,
    }, opts);
}

export interface GetRouteArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the route.
     */
    routeName: string;
    /**
     * The name of the route table.
     */
    routeTableName: string;
}

/**
 * Route resource.
 */
export interface GetRouteResult {
    /**
     * The destination CIDR to which the route applies.
     */
    readonly addressPrefix?: string;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag?: string;
    /**
     * Resource ID.
     */
    readonly id?: string;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    readonly name?: string;
    /**
     * The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
     */
    readonly nextHopIpAddress?: string;
    /**
     * The type of Azure hop the packet should be sent to.
     */
    readonly nextHopType: string;
    /**
     * The provisioning state of the route resource.
     */
    readonly provisioningState: string;
}
/**
 * Gets the specified route from a route table.
 */
export function getRouteOutput(args: GetRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouteResult> {
    return pulumi.output(args).apply((a: any) => getRoute(a, opts))
}

export interface GetRouteOutputArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the route.
     */
    routeName: pulumi.Input<string>;
    /**
     * The name of the route table.
     */
    routeTableName: pulumi.Input<string>;
}
