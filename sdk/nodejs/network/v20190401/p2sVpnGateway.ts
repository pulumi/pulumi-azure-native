// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * P2SVpnGateway Resource.
 */
export class P2sVpnGateway extends pulumi.CustomResource {
    /**
     * Get an existing P2sVpnGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): P2sVpnGateway {
        return new P2sVpnGateway(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:network/v20190401:P2sVpnGateway';

    /**
     * Returns true if the given object is an instance of P2sVpnGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is P2sVpnGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === P2sVpnGateway.__pulumiType;
    }

    /**
     * The reference of the address space resource which represents the custom routes specified by the customer for P2SVpnGateway and P2S VpnClient.
     */
    public readonly customRoutes!: pulumi.Output<outputs.network.v20190401.AddressSpaceResponse | undefined>;
    /**
     * Gets a unique read-only string that changes whenever the resource is updated.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Resource location.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
     */
    public readonly p2SVpnServerConfiguration!: pulumi.Output<outputs.network.v20190401.SubResourceResponse | undefined>;
    /**
     * The provisioning state of the resource.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The VirtualHub to which the gateway belongs.
     */
    public readonly virtualHub!: pulumi.Output<outputs.network.v20190401.SubResourceResponse | undefined>;
    /**
     * The reference of the address space resource which represents Address space for P2S VpnClient.
     */
    public readonly vpnClientAddressPool!: pulumi.Output<outputs.network.v20190401.AddressSpaceResponse | undefined>;
    /**
     * All P2S VPN clients' connection health status.
     */
    public /*out*/ readonly vpnClientConnectionHealth!: pulumi.Output<outputs.network.v20190401.VpnClientConnectionHealthResponse>;
    /**
     * The scale unit for this p2s vpn gateway.
     */
    public readonly vpnGatewayScaleUnit!: pulumi.Output<number | undefined>;

    /**
     * Create a P2sVpnGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: P2sVpnGatewayArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["customRoutes"] = args ? args.customRoutes : undefined;
            resourceInputs["gatewayName"] = args ? args.gatewayName : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["p2SVpnServerConfiguration"] = args ? args.p2SVpnServerConfiguration : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["virtualHub"] = args ? args.virtualHub : undefined;
            resourceInputs["vpnClientAddressPool"] = args ? args.vpnClientAddressPool : undefined;
            resourceInputs["vpnGatewayScaleUnit"] = args ? args.vpnGatewayScaleUnit : undefined;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["vpnClientConnectionHealth"] = undefined /*out*/;
        } else {
            resourceInputs["customRoutes"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["p2SVpnServerConfiguration"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["virtualHub"] = undefined /*out*/;
            resourceInputs["vpnClientAddressPool"] = undefined /*out*/;
            resourceInputs["vpnClientConnectionHealth"] = undefined /*out*/;
            resourceInputs["vpnGatewayScaleUnit"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:network:P2sVpnGateway" }, { type: "azure-native:network/v20180801:P2sVpnGateway" }, { type: "azure-native:network/v20181001:P2sVpnGateway" }, { type: "azure-native:network/v20181101:P2sVpnGateway" }, { type: "azure-native:network/v20181201:P2sVpnGateway" }, { type: "azure-native:network/v20190201:P2sVpnGateway" }, { type: "azure-native:network/v20190601:P2sVpnGateway" }, { type: "azure-native:network/v20190701:P2sVpnGateway" }, { type: "azure-native:network/v20190801:P2sVpnGateway" }, { type: "azure-native:network/v20190901:P2sVpnGateway" }, { type: "azure-native:network/v20191101:P2sVpnGateway" }, { type: "azure-native:network/v20191201:P2sVpnGateway" }, { type: "azure-native:network/v20200301:P2sVpnGateway" }, { type: "azure-native:network/v20200401:P2sVpnGateway" }, { type: "azure-native:network/v20200501:P2sVpnGateway" }, { type: "azure-native:network/v20200601:P2sVpnGateway" }, { type: "azure-native:network/v20200701:P2sVpnGateway" }, { type: "azure-native:network/v20200801:P2sVpnGateway" }, { type: "azure-native:network/v20201101:P2sVpnGateway" }, { type: "azure-native:network/v20210201:P2sVpnGateway" }, { type: "azure-native:network/v20210301:P2sVpnGateway" }, { type: "azure-native:network/v20210501:P2sVpnGateway" }, { type: "azure-native:network/v20210801:P2sVpnGateway" }, { type: "azure-native:network/v20220101:P2sVpnGateway" }, { type: "azure-native:network/v20220501:P2sVpnGateway" }, { type: "azure-native:network/v20220701:P2sVpnGateway" }, { type: "azure-native:network/v20220901:P2sVpnGateway" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(P2sVpnGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a P2sVpnGateway resource.
 */
export interface P2sVpnGatewayArgs {
    /**
     * The reference of the address space resource which represents the custom routes specified by the customer for P2SVpnGateway and P2S VpnClient.
     */
    customRoutes?: pulumi.Input<inputs.network.v20190401.AddressSpaceArgs>;
    /**
     * The name of the gateway.
     */
    gatewayName?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
     */
    p2SVpnServerConfiguration?: pulumi.Input<inputs.network.v20190401.SubResourceArgs>;
    /**
     * The resource group name of the P2SVpnGateway.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The VirtualHub to which the gateway belongs.
     */
    virtualHub?: pulumi.Input<inputs.network.v20190401.SubResourceArgs>;
    /**
     * The reference of the address space resource which represents Address space for P2S VpnClient.
     */
    vpnClientAddressPool?: pulumi.Input<inputs.network.v20190401.AddressSpaceArgs>;
    /**
     * The scale unit for this p2s vpn gateway.
     */
    vpnGatewayScaleUnit?: pulumi.Input<number>;
}
