// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Guest Usages Resource
 */
export function getGuestUsage(args: GetGuestUsageArgs, opts?: pulumi.InvokeOptions): Promise<GetGuestUsageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:azureactivedirectory/v20200501preview:getGuestUsage", {
        "resourceGroupName": args.resourceGroupName,
        "resourceName": args.resourceName,
    }, opts);
}

export interface GetGuestUsageArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The initial domain name of the AAD tenant.
     */
    resourceName: string;
}

/**
 * Guest Usages Resource
 */
export interface GetGuestUsageResult {
    /**
     * An identifier that represents the Guest Usages resource.
     */
    readonly id: string;
    /**
     * Location of the Guest Usages resource.
     */
    readonly location?: string;
    /**
     * The name of the Guest Usages resource.
     */
    readonly name: string;
    /**
     * Key-value pairs of additional resource provisioning properties.
     */
    readonly tags?: {[key: string]: string};
    /**
     * An identifier for the tenant for which the resource is being created
     */
    readonly tenantId?: string;
    /**
     * The type of the Guest Usages resource.
     */
    readonly type: string;
}

export function getGuestUsageOutput(args: GetGuestUsageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGuestUsageResult> {
    return pulumi.output(args).apply(a => getGuestUsage(a, opts))
}

export interface GetGuestUsageOutputArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The initial domain name of the AAD tenant.
     */
    resourceName: pulumi.Input<string>;
}
