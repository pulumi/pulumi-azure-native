// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./blob";
export * from "./blobContainer";
export * from "./blobContainerImmutabilityPolicy";
export * from "./blobInventoryPolicy";
export * from "./blobServiceProperties";
export * from "./fileServiceProperties";
export * from "./fileShare";
export * from "./getBlobContainer";
export * from "./getBlobContainerImmutabilityPolicy";
export * from "./getBlobInventoryPolicy";
export * from "./getBlobServiceProperties";
export * from "./getFileServiceProperties";
export * from "./getFileShare";
export * from "./getManagementPolicy";
export * from "./getObjectReplicationPolicy";
export * from "./getPrivateEndpointConnection";
export * from "./getQueue";
export * from "./getQueueServiceProperties";
export * from "./getStorageAccount";
export * from "./getTable";
export * from "./getTableServiceProperties";
export * from "./listStorageAccountKeys";
export * from "./listStorageAccountSAS";
export * from "./listStorageAccountServiceSAS";
export * from "./managementPolicy";
export * from "./objectReplicationPolicy";
export * from "./privateEndpointConnection";
export * from "./queue";
export * from "./queueServiceProperties";
export * from "./storageAccount";
export * from "./storageAccountStaticWebsite";
export * from "./table";
export * from "./tableServiceProperties";

// Export enums:
export * from "../types/enums/storage";

// Export sub-modules:
import * as latest from "./latest";
import * as v20150501preview from "./v20150501preview";
import * as v20150615 from "./v20150615";
import * as v20160101 from "./v20160101";
import * as v20160501 from "./v20160501";
import * as v20161201 from "./v20161201";
import * as v20170601 from "./v20170601";
import * as v20171001 from "./v20171001";
import * as v20180201 from "./v20180201";
import * as v20180301preview from "./v20180301preview";
import * as v20180701 from "./v20180701";
import * as v20181101 from "./v20181101";
import * as v20190401 from "./v20190401";
import * as v20190601 from "./v20190601";
import * as v20200801preview from "./v20200801preview";

export {
    latest,
    v20150501preview,
    v20150615,
    v20160101,
    v20160501,
    v20161201,
    v20170601,
    v20171001,
    v20180201,
    v20180301preview,
    v20180701,
    v20181101,
    v20190401,
    v20190601,
    v20200801preview,
};

// Import resources to register:
import { Blob } from "./blob";
import { BlobContainer } from "./blobContainer";
import { BlobContainerImmutabilityPolicy } from "./blobContainerImmutabilityPolicy";
import { BlobInventoryPolicy } from "./blobInventoryPolicy";
import { BlobServiceProperties } from "./blobServiceProperties";
import { FileServiceProperties } from "./fileServiceProperties";
import { FileShare } from "./fileShare";
import { ManagementPolicy } from "./managementPolicy";
import { ObjectReplicationPolicy } from "./objectReplicationPolicy";
import { PrivateEndpointConnection } from "./privateEndpointConnection";
import { Queue } from "./queue";
import { QueueServiceProperties } from "./queueServiceProperties";
import { StorageAccount } from "./storageAccount";
import { StorageAccountStaticWebsite } from "./storageAccountStaticWebsite";
import { Table } from "./table";
import { TableServiceProperties } from "./tableServiceProperties";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:storage:Blob":
                return new Blob(name, <any>undefined, { urn })
            case "azure-nextgen:storage:BlobContainer":
                return new BlobContainer(name, <any>undefined, { urn })
            case "azure-nextgen:storage:BlobContainerImmutabilityPolicy":
                return new BlobContainerImmutabilityPolicy(name, <any>undefined, { urn })
            case "azure-nextgen:storage:BlobInventoryPolicy":
                return new BlobInventoryPolicy(name, <any>undefined, { urn })
            case "azure-nextgen:storage:BlobServiceProperties":
                return new BlobServiceProperties(name, <any>undefined, { urn })
            case "azure-nextgen:storage:FileServiceProperties":
                return new FileServiceProperties(name, <any>undefined, { urn })
            case "azure-nextgen:storage:FileShare":
                return new FileShare(name, <any>undefined, { urn })
            case "azure-nextgen:storage:ManagementPolicy":
                return new ManagementPolicy(name, <any>undefined, { urn })
            case "azure-nextgen:storage:ObjectReplicationPolicy":
                return new ObjectReplicationPolicy(name, <any>undefined, { urn })
            case "azure-nextgen:storage:PrivateEndpointConnection":
                return new PrivateEndpointConnection(name, <any>undefined, { urn })
            case "azure-nextgen:storage:Queue":
                return new Queue(name, <any>undefined, { urn })
            case "azure-nextgen:storage:QueueServiceProperties":
                return new QueueServiceProperties(name, <any>undefined, { urn })
            case "azure-nextgen:storage:StorageAccount":
                return new StorageAccount(name, <any>undefined, { urn })
            case "azure-nextgen:storage:StorageAccountStaticWebsite":
                return new StorageAccountStaticWebsite(name, <any>undefined, { urn })
            case "azure-nextgen:storage:Table":
                return new Table(name, <any>undefined, { urn })
            case "azure-nextgen:storage:TableServiceProperties":
                return new TableServiceProperties(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "storage", _module)
