// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Manages a Blob within a Storage Container.
 */
export class Blob extends pulumi.CustomResource {
    /**
     * Get an existing Blob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Blob {
        return new Blob(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:storage:Blob';

    /**
     * Returns true if the given object is an instance of Blob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Blob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Blob.__pulumiType;
    }

    /**
     * The access tier of the storage blob.
     */
    public readonly accessTier!: pulumi.Output<enums.storage.BlobAccessTier>;
    /**
     * The MD5 sum of the blob contents.
     */
    public readonly contentMd5!: pulumi.Output<string | undefined>;
    /**
     * The content type of the storage blob.
     */
    public readonly contentType!: pulumi.Output<string | undefined>;
    /**
     * A map of custom blob metadata.
     */
    public readonly metadata!: pulumi.Output<{[key: string]: string}>;
    /**
     * The name of the storage blob.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The type of the storage blob to be created.
     */
    public readonly type!: pulumi.Output<enums.storage.BlobType>;
    /**
     * The URL of the blob.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a Blob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlobArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if ((!args || args.accountName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.containerName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'containerName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["accessTier"] = args ? args.accessTier : undefined;
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["blobName"] = args ? args.blobName : undefined;
            inputs["containerName"] = args ? args.containerName : undefined;
            inputs["contentMd5"] = args ? args.contentMd5 : undefined;
            inputs["contentType"] = args ? args.contentType : undefined;
            inputs["metadata"] = args ? args.metadata : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["type"] = (args ? args.type : undefined) || "Block";
            inputs["name"] = undefined /*out*/;
            inputs["url"] = undefined /*out*/;
        } else {
            inputs["accessTier"] = undefined /*out*/;
            inputs["contentMd5"] = undefined /*out*/;
            inputs["contentType"] = undefined /*out*/;
            inputs["metadata"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["url"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Blob.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Blob resource.
 */
export interface BlobArgs {
    /**
     * The access tier of the storage blob.
     */
    readonly accessTier?: pulumi.Input<enums.storage.BlobAccessTier>;
    /**
     * Specifies the storage account in which to create the storage container.
     */
    readonly accountName: pulumi.Input<string>;
    /**
     * The name of the storage blob. Must be unique within the storage container the blob is located.
     */
    readonly blobName?: pulumi.Input<string>;
    /**
     * The name of the storage container in which this blob should be created.
     */
    readonly containerName: pulumi.Input<string>;
    /**
     * The MD5 sum of the blob contents. Cannot be defined if blob type is Append.
     */
    readonly contentMd5?: pulumi.Input<string>;
    /**
     * The content type of the storage blob. Defaults to `application/octet-stream`.
     */
    readonly contentType?: pulumi.Input<string>;
    /**
     * A map of custom blob metadata.
     */
    readonly metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the resource group within the user's subscription.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * An asset to copy to the blob contents. This field cannot be specified for Append blobs.
     */
    readonly source?: pulumi.Input<pulumi.asset.Asset | pulumi.asset.Archive>;
    /**
     * The type of the storage blob to be created. Defaults to 'Block'.
     */
    readonly type?: pulumi.Input<enums.storage.BlobType>;
}
