// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetManagementPolicyArgs, GetManagementPolicyResult, GetManagementPolicyOutputArgs } from "./getManagementPolicy";
export const getManagementPolicy: typeof import("./getManagementPolicy").getManagementPolicy = null as any;
export const getManagementPolicyOutput: typeof import("./getManagementPolicy").getManagementPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getManagementPolicy","getManagementPolicyOutput"], () => require("./getManagementPolicy"));

export { GetStorageAccountManagementPoliciesArgs, GetStorageAccountManagementPoliciesResult, GetStorageAccountManagementPoliciesOutputArgs } from "./getStorageAccountManagementPolicies";
export const getStorageAccountManagementPolicies: typeof import("./getStorageAccountManagementPolicies").getStorageAccountManagementPolicies = null as any;
export const getStorageAccountManagementPoliciesOutput: typeof import("./getStorageAccountManagementPolicies").getStorageAccountManagementPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getStorageAccountManagementPolicies","getStorageAccountManagementPoliciesOutput"], () => require("./getStorageAccountManagementPolicies"));

export { ManagementPolicyArgs } from "./managementPolicy";
export type ManagementPolicy = import("./managementPolicy").ManagementPolicy;
export const ManagementPolicy: typeof import("./managementPolicy").ManagementPolicy = null as any;
utilities.lazyLoad(exports, ["ManagementPolicy"], () => require("./managementPolicy"));

export { StorageAccountManagementPoliciesArgs } from "./storageAccountManagementPolicies";
export type StorageAccountManagementPolicies = import("./storageAccountManagementPolicies").StorageAccountManagementPolicies;
export const StorageAccountManagementPolicies: typeof import("./storageAccountManagementPolicies").StorageAccountManagementPolicies = null as any;
utilities.lazyLoad(exports, ["StorageAccountManagementPolicies"], () => require("./storageAccountManagementPolicies"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:storage/v20180301preview:ManagementPolicy":
                return new ManagementPolicy(name, <any>undefined, { urn })
            case "azure-native:storage/v20180301preview:StorageAccountManagementPolicies":
                return new StorageAccountManagementPolicies(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "storage/v20180301preview", _module)
