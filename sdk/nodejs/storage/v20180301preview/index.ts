// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { BlobContainerArgs } from "./blobContainer";
export type BlobContainer = import("./blobContainer").BlobContainer;
export const BlobContainer: typeof import("./blobContainer").BlobContainer = null as any;

export { BlobContainerImmutabilityPolicyArgs } from "./blobContainerImmutabilityPolicy";
export type BlobContainerImmutabilityPolicy = import("./blobContainerImmutabilityPolicy").BlobContainerImmutabilityPolicy;
export const BlobContainerImmutabilityPolicy: typeof import("./blobContainerImmutabilityPolicy").BlobContainerImmutabilityPolicy = null as any;

export { GetBlobContainerArgs, GetBlobContainerResult, GetBlobContainerOutputArgs } from "./getBlobContainer";
export const getBlobContainer: typeof import("./getBlobContainer").getBlobContainer = null as any;
export const getBlobContainerOutput: typeof import("./getBlobContainer").getBlobContainerOutput = null as any;

export { GetBlobContainerImmutabilityPolicyArgs, GetBlobContainerImmutabilityPolicyResult, GetBlobContainerImmutabilityPolicyOutputArgs } from "./getBlobContainerImmutabilityPolicy";
export const getBlobContainerImmutabilityPolicy: typeof import("./getBlobContainerImmutabilityPolicy").getBlobContainerImmutabilityPolicy = null as any;
export const getBlobContainerImmutabilityPolicyOutput: typeof import("./getBlobContainerImmutabilityPolicy").getBlobContainerImmutabilityPolicyOutput = null as any;

export { GetManagementPolicyArgs, GetManagementPolicyResult, GetManagementPolicyOutputArgs } from "./getManagementPolicy";
export const getManagementPolicy: typeof import("./getManagementPolicy").getManagementPolicy = null as any;
export const getManagementPolicyOutput: typeof import("./getManagementPolicy").getManagementPolicyOutput = null as any;

export { GetStorageAccountArgs, GetStorageAccountResult, GetStorageAccountOutputArgs } from "./getStorageAccount";
export const getStorageAccount: typeof import("./getStorageAccount").getStorageAccount = null as any;
export const getStorageAccountOutput: typeof import("./getStorageAccount").getStorageAccountOutput = null as any;

export { GetStorageAccountManagementPoliciesArgs, GetStorageAccountManagementPoliciesResult, GetStorageAccountManagementPoliciesOutputArgs } from "./getStorageAccountManagementPolicies";
export const getStorageAccountManagementPolicies: typeof import("./getStorageAccountManagementPolicies").getStorageAccountManagementPolicies = null as any;
export const getStorageAccountManagementPoliciesOutput: typeof import("./getStorageAccountManagementPolicies").getStorageAccountManagementPoliciesOutput = null as any;

export { ListStorageAccountKeysArgs, ListStorageAccountKeysResult, ListStorageAccountKeysOutputArgs } from "./listStorageAccountKeys";
export const listStorageAccountKeys: typeof import("./listStorageAccountKeys").listStorageAccountKeys = null as any;
export const listStorageAccountKeysOutput: typeof import("./listStorageAccountKeys").listStorageAccountKeysOutput = null as any;

export { ListStorageAccountSASArgs, ListStorageAccountSASResult, ListStorageAccountSASOutputArgs } from "./listStorageAccountSAS";
export const listStorageAccountSAS: typeof import("./listStorageAccountSAS").listStorageAccountSAS = null as any;
export const listStorageAccountSASOutput: typeof import("./listStorageAccountSAS").listStorageAccountSASOutput = null as any;

export { ListStorageAccountServiceSASArgs, ListStorageAccountServiceSASResult, ListStorageAccountServiceSASOutputArgs } from "./listStorageAccountServiceSAS";
export const listStorageAccountServiceSAS: typeof import("./listStorageAccountServiceSAS").listStorageAccountServiceSAS = null as any;
export const listStorageAccountServiceSASOutput: typeof import("./listStorageAccountServiceSAS").listStorageAccountServiceSASOutput = null as any;

export { ManagementPolicyArgs } from "./managementPolicy";
export type ManagementPolicy = import("./managementPolicy").ManagementPolicy;
export const ManagementPolicy: typeof import("./managementPolicy").ManagementPolicy = null as any;

export { StorageAccountArgs } from "./storageAccount";
export type StorageAccount = import("./storageAccount").StorageAccount;
export const StorageAccount: typeof import("./storageAccount").StorageAccount = null as any;

export { StorageAccountManagementPoliciesArgs } from "./storageAccountManagementPolicies";
export type StorageAccountManagementPolicies = import("./storageAccountManagementPolicies").StorageAccountManagementPolicies;
export const StorageAccountManagementPolicies: typeof import("./storageAccountManagementPolicies").StorageAccountManagementPolicies = null as any;

utilities.lazyLoad(exports, ["BlobContainer"], () => require("./blobContainer"));
utilities.lazyLoad(exports, ["BlobContainerImmutabilityPolicy"], () => require("./blobContainerImmutabilityPolicy"));
utilities.lazyLoad(exports, ["getBlobContainer","getBlobContainerOutput"], () => require("./getBlobContainer"));
utilities.lazyLoad(exports, ["getBlobContainerImmutabilityPolicy","getBlobContainerImmutabilityPolicyOutput"], () => require("./getBlobContainerImmutabilityPolicy"));
utilities.lazyLoad(exports, ["getManagementPolicy","getManagementPolicyOutput"], () => require("./getManagementPolicy"));
utilities.lazyLoad(exports, ["getStorageAccount","getStorageAccountOutput"], () => require("./getStorageAccount"));
utilities.lazyLoad(exports, ["getStorageAccountManagementPolicies","getStorageAccountManagementPoliciesOutput"], () => require("./getStorageAccountManagementPolicies"));
utilities.lazyLoad(exports, ["listStorageAccountKeys","listStorageAccountKeysOutput"], () => require("./listStorageAccountKeys"));
utilities.lazyLoad(exports, ["listStorageAccountSAS","listStorageAccountSASOutput"], () => require("./listStorageAccountSAS"));
utilities.lazyLoad(exports, ["listStorageAccountServiceSAS","listStorageAccountServiceSASOutput"], () => require("./listStorageAccountServiceSAS"));
utilities.lazyLoad(exports, ["ManagementPolicy"], () => require("./managementPolicy"));
utilities.lazyLoad(exports, ["StorageAccount"], () => require("./storageAccount"));
utilities.lazyLoad(exports, ["StorageAccountManagementPolicies"], () => require("./storageAccountManagementPolicies"));

// Export enums:
export * from "../../types/enums/storage/v20180301preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:storage/v20180301preview:BlobContainer":
                return new BlobContainer(name, <any>undefined, { urn })
            case "azure-native:storage/v20180301preview:BlobContainerImmutabilityPolicy":
                return new BlobContainerImmutabilityPolicy(name, <any>undefined, { urn })
            case "azure-native:storage/v20180301preview:ManagementPolicy":
                return new ManagementPolicy(name, <any>undefined, { urn })
            case "azure-native:storage/v20180301preview:StorageAccount":
                return new StorageAccount(name, <any>undefined, { urn })
            case "azure-native:storage/v20180301preview:StorageAccountManagementPolicies":
                return new StorageAccountManagementPolicies(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "storage/v20180301preview", _module)
