// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * The properties of a storage account’s Blob service.
 */
export class BlobServiceProperties extends pulumi.CustomResource {
    /**
     * Get an existing BlobServiceProperties resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BlobServiceProperties {
        return new BlobServiceProperties(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:storage/v20190601:BlobServiceProperties';

    /**
     * Returns true if the given object is an instance of BlobServiceProperties.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BlobServiceProperties {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BlobServiceProperties.__pulumiType;
    }

    /**
     * Deprecated in favor of isVersioningEnabled property.
     */
    public readonly automaticSnapshotPolicyEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The blob service properties for change feed events.
     */
    public readonly changeFeed!: pulumi.Output<outputs.storage.v20190601.ChangeFeedResponse | undefined>;
    /**
     * The blob service properties for container soft delete.
     */
    public readonly containerDeleteRetentionPolicy!: pulumi.Output<outputs.storage.v20190601.DeleteRetentionPolicyResponse | undefined>;
    /**
     * Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
     */
    public readonly cors!: pulumi.Output<outputs.storage.v20190601.CorsRulesResponse | undefined>;
    /**
     * DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.
     */
    public readonly defaultServiceVersion!: pulumi.Output<string | undefined>;
    /**
     * The blob service properties for blob soft delete.
     */
    public readonly deleteRetentionPolicy!: pulumi.Output<outputs.storage.v20190601.DeleteRetentionPolicyResponse | undefined>;
    /**
     * Versioning is enabled if set to true.
     */
    public readonly isVersioningEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The blob service properties for blob restore policy.
     */
    public readonly restorePolicy!: pulumi.Output<outputs.storage.v20190601.RestorePolicyPropertiesResponse | undefined>;
    /**
     * Sku name and tier.
     */
    public /*out*/ readonly sku!: pulumi.Output<outputs.storage.v20190601.SkuResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a BlobServiceProperties resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlobServicePropertiesArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.accountName === undefined) {
                throw new Error("Missing required property 'accountName'");
            }
            if (!args || args.blobServicesName === undefined) {
                throw new Error("Missing required property 'blobServicesName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["automaticSnapshotPolicyEnabled"] = args ? args.automaticSnapshotPolicyEnabled : undefined;
            inputs["blobServicesName"] = args ? args.blobServicesName : undefined;
            inputs["changeFeed"] = args ? args.changeFeed : undefined;
            inputs["containerDeleteRetentionPolicy"] = args ? args.containerDeleteRetentionPolicy : undefined;
            inputs["cors"] = args ? args.cors : undefined;
            inputs["defaultServiceVersion"] = args ? args.defaultServiceVersion : undefined;
            inputs["deleteRetentionPolicy"] = args ? args.deleteRetentionPolicy : undefined;
            inputs["isVersioningEnabled"] = args ? args.isVersioningEnabled : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["restorePolicy"] = args ? args.restorePolicy : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["automaticSnapshotPolicyEnabled"] = undefined /*out*/;
            inputs["changeFeed"] = undefined /*out*/;
            inputs["containerDeleteRetentionPolicy"] = undefined /*out*/;
            inputs["cors"] = undefined /*out*/;
            inputs["defaultServiceVersion"] = undefined /*out*/;
            inputs["deleteRetentionPolicy"] = undefined /*out*/;
            inputs["isVersioningEnabled"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["restorePolicy"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:storage/latest:BlobServiceProperties" }, { type: "azure-nextgen:storage/v20180701:BlobServiceProperties" }, { type: "azure-nextgen:storage/v20181101:BlobServiceProperties" }, { type: "azure-nextgen:storage/v20190401:BlobServiceProperties" }, { type: "azure-nextgen:storage/v20200801preview:BlobServiceProperties" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(BlobServiceProperties.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a BlobServiceProperties resource.
 */
export interface BlobServicePropertiesArgs {
    /**
     * The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     */
    readonly accountName: pulumi.Input<string>;
    /**
     * Deprecated in favor of isVersioningEnabled property.
     */
    readonly automaticSnapshotPolicyEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the blob Service within the specified storage account. Blob Service Name must be 'default'
     */
    readonly blobServicesName: pulumi.Input<string>;
    /**
     * The blob service properties for change feed events.
     */
    readonly changeFeed?: pulumi.Input<inputs.storage.v20190601.ChangeFeed>;
    /**
     * The blob service properties for container soft delete.
     */
    readonly containerDeleteRetentionPolicy?: pulumi.Input<inputs.storage.v20190601.DeleteRetentionPolicy>;
    /**
     * Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
     */
    readonly cors?: pulumi.Input<inputs.storage.v20190601.CorsRules>;
    /**
     * DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.
     */
    readonly defaultServiceVersion?: pulumi.Input<string>;
    /**
     * The blob service properties for blob soft delete.
     */
    readonly deleteRetentionPolicy?: pulumi.Input<inputs.storage.v20190601.DeleteRetentionPolicy>;
    /**
     * Versioning is enabled if set to true.
     */
    readonly isVersioningEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The blob service properties for blob restore policy.
     */
    readonly restorePolicy?: pulumi.Input<inputs.storage.v20190601.RestorePolicyProperties>;
}
