// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

export function getController(args: GetControllerArgs, opts?: pulumi.InvokeOptions): Promise<GetControllerResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:devspaces/latest:getController", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetControllerArgs {
    /**
     * Name of the resource.
     */
    readonly name: string;
    /**
     * Resource group to which the resource belongs.
     */
    readonly resourceGroupName: string;
}

export interface GetControllerResult {
    /**
     * DNS name for accessing DataPlane services
     */
    readonly dataPlaneFqdn: string;
    /**
     * DNS suffix for public endpoints running in the Azure Dev Spaces Controller.
     */
    readonly hostSuffix: string;
    /**
     * Region where the Azure resource is located.
     */
    readonly location: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * Provisioning state of the Azure Dev Spaces Controller.
     */
    readonly provisioningState: string;
    /**
     * Model representing SKU for Azure Dev Spaces Controller.
     */
    readonly sku: outputs.devspaces.latest.SkuResponse;
    /**
     * Tags for the Azure resource.
     */
    readonly tags?: {[key: string]: string};
    /**
     * DNS of the target container host's API server
     */
    readonly targetContainerHostApiServerFqdn: string;
    /**
     * Credentials of the target container host (base64).
     */
    readonly targetContainerHostCredentialsBase64: string;
    /**
     * Resource ID of the target container host
     */
    readonly targetContainerHostResourceId: string;
    /**
     * The type of the resource.
     */
    readonly type: string;
}
