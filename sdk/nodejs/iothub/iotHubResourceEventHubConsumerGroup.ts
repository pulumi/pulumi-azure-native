// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The properties of the EventHubConsumerGroupInfo object.
 *
 * Uses Azure REST API version 2023-06-30.
 *
 * Other available API versions: 2016-02-03, 2017-01-19, 2017-07-01, 2018-01-22, 2018-04-01, 2018-12-01-preview, 2019-03-22, 2019-03-22-preview, 2019-07-01-preview, 2019-11-04, 2020-03-01, 2020-04-01, 2020-06-15, 2020-07-10-preview, 2020-08-01, 2020-08-31, 2020-08-31-preview, 2021-02-01-preview, 2021-03-03-preview, 2021-03-31, 2021-07-01, 2021-07-01-preview, 2021-07-02, 2021-07-02-preview, 2022-04-30-preview, 2022-11-15-preview, 2023-06-30-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native iothub [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class IotHubResourceEventHubConsumerGroup extends pulumi.CustomResource {
    /**
     * Get an existing IotHubResourceEventHubConsumerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IotHubResourceEventHubConsumerGroup {
        return new IotHubResourceEventHubConsumerGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:iothub:IotHubResourceEventHubConsumerGroup';

    /**
     * Returns true if the given object is an instance of IotHubResourceEventHubConsumerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotHubResourceEventHubConsumerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotHubResourceEventHubConsumerGroup.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * The etag.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The Event Hub-compatible consumer group name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The tags.
     */
    public readonly properties!: pulumi.Output<any>;
    /**
     * the resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a IotHubResourceEventHubConsumerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IotHubResourceEventHubConsumerGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.eventHubEndpointName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventHubEndpointName'");
            }
            if ((!args || args.properties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'properties'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.resourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceName'");
            }
            resourceInputs["eventHubEndpointName"] = args ? args.eventHubEndpointName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["resourceName"] = args ? args.resourceName : undefined;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:devices/v20210303preview:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native:devices/v20220430preview:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native:devices/v20221115preview:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native:devices/v20230630:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native:devices/v20230630preview:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native:devices:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20160203:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20170119:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20170701:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20180122:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20180401:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20181201preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20190322:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20190322preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20190701preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20191104:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20200301:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20200401:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20200615:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20200710preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20200801:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20200831:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20200831preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20210201preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20210303preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20210331:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20210701:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20210701preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20210702:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20210702preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20220430preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20221115preview:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20230630:iothub:IotHubResourceEventHubConsumerGroup" }, { type: "azure-native_iothub_v20230630preview:iothub:IotHubResourceEventHubConsumerGroup" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(IotHubResourceEventHubConsumerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a IotHubResourceEventHubConsumerGroup resource.
 */
export interface IotHubResourceEventHubConsumerGroupArgs {
    /**
     * The name of the Event Hub-compatible endpoint in the IoT hub.
     */
    eventHubEndpointName: pulumi.Input<string>;
    /**
     * The name of the consumer group to add.
     */
    name?: pulumi.Input<string>;
    /**
     * The EventHub consumer group name.
     */
    properties: pulumi.Input<inputs.iothub.EventHubConsumerGroupNameArgs>;
    /**
     * The name of the resource group that contains the IoT hub.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the IoT hub.
     */
    resourceName: pulumi.Input<string>;
}
