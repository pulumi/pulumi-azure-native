// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./database";
export * from "./disasterRecoveryConfiguration";
export * from "./elasticPool";
export * from "./firewallRule";
export * from "./geoBackupPolicy";
export * from "./getDatabase";
export * from "./getDisasterRecoveryConfiguration";
export * from "./getElasticPool";
export * from "./getFirewallRule";
export * from "./getGeoBackupPolicy";
export * from "./getServer";
export * from "./getServerAzureADAdministrator";
export * from "./getServerCommunicationLink";
export * from "./getTransparentDataEncryption";
export * from "./server";
export * from "./serverAzureADAdministrator";
export * from "./serverCommunicationLink";
export * from "./transparentDataEncryption";

// Export enums:
export * from "../../types/enums/sql/v20140401";

// Import resources to register:
import { Database } from "./database";
import { DisasterRecoveryConfiguration } from "./disasterRecoveryConfiguration";
import { ElasticPool } from "./elasticPool";
import { FirewallRule } from "./firewallRule";
import { GeoBackupPolicy } from "./geoBackupPolicy";
import { Server } from "./server";
import { ServerAzureADAdministrator } from "./serverAzureADAdministrator";
import { ServerCommunicationLink } from "./serverCommunicationLink";
import { TransparentDataEncryption } from "./transparentDataEncryption";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:sql/v20140401:Database":
                return new Database(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20140401:DisasterRecoveryConfiguration":
                return new DisasterRecoveryConfiguration(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20140401:ElasticPool":
                return new ElasticPool(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20140401:FirewallRule":
                return new FirewallRule(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20140401:GeoBackupPolicy":
                return new GeoBackupPolicy(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20140401:Server":
                return new Server(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20140401:ServerAzureADAdministrator":
                return new ServerAzureADAdministrator(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20140401:ServerCommunicationLink":
                return new ServerCommunicationLink(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20140401:TransparentDataEncryption":
                return new TransparentDataEncryption(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "sql/v20140401", _module)
