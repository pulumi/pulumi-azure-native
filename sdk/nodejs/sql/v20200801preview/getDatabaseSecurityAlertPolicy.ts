// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

export function getDatabaseSecurityAlertPolicy(args: GetDatabaseSecurityAlertPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseSecurityAlertPolicyResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-nextgen:sql/v20200801preview:getDatabaseSecurityAlertPolicy", {
        "databaseName": args.databaseName,
        "resourceGroupName": args.resourceGroupName,
        "securityAlertPolicyName": args.securityAlertPolicyName,
        "serverName": args.serverName,
    }, opts);
}

export interface GetDatabaseSecurityAlertPolicyArgs {
    /**
     * The name of the  database for which the security alert policy is defined.
     */
    readonly databaseName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    readonly resourceGroupName: string;
    /**
     * The name of the security alert policy.
     */
    readonly securityAlertPolicyName: string;
    /**
     * The name of the  server.
     */
    readonly serverName: string;
}

/**
 * A database security alert policy.
 */
export interface GetDatabaseSecurityAlertPolicyResult {
    /**
     * Specifies the UTC creation time of the policy.
     */
    readonly creationTime: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.
     */
    readonly state: string;
    /**
     * Resource type.
     */
    readonly type: string;
}
