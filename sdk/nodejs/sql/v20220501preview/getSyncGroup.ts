// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a sync group.
 */
export function getSyncGroup(args: GetSyncGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetSyncGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:sql/v20220501preview:getSyncGroup", {
        "databaseName": args.databaseName,
        "resourceGroupName": args.resourceGroupName,
        "serverName": args.serverName,
        "syncGroupName": args.syncGroupName,
    }, opts);
}

export interface GetSyncGroupArgs {
    /**
     * The name of the database on which the sync group is hosted.
     */
    databaseName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: string;
    /**
     * The name of the server.
     */
    serverName: string;
    /**
     * The name of the sync group.
     */
    syncGroupName: string;
}

/**
 * An Azure SQL Database sync group.
 */
export interface GetSyncGroupResult {
    /**
     * Conflict logging retention period.
     */
    readonly conflictLoggingRetentionInDays?: number;
    /**
     * Conflict resolution policy of the sync group.
     */
    readonly conflictResolutionPolicy?: string;
    /**
     * If conflict logging is enabled.
     */
    readonly enableConflictLogging?: boolean;
    /**
     * User name for the sync group hub database credential.
     */
    readonly hubDatabaseUserName?: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Sync interval of the sync group.
     */
    readonly interval?: number;
    /**
     * Last sync time of the sync group.
     */
    readonly lastSyncTime: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Private endpoint name of the sync group if use private link connection is enabled.
     */
    readonly privateEndpointName: string;
    /**
     * Sync schema of the sync group.
     */
    readonly schema?: outputs.sql.v20220501preview.SyncGroupSchemaResponse;
    /**
     * The name and capacity of the SKU.
     */
    readonly sku?: outputs.sql.v20220501preview.SkuResponse;
    /**
     * ARM resource id of the sync database in the sync group.
     */
    readonly syncDatabaseId?: string;
    /**
     * Sync state of the sync group.
     */
    readonly syncState: string;
    /**
     * Resource type.
     */
    readonly type: string;
    /**
     * If use private link connection is enabled.
     */
    readonly usePrivateLinkConnection?: boolean;
}
/**
 * Gets a sync group.
 */
export function getSyncGroupOutput(args: GetSyncGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSyncGroupResult> {
    return pulumi.output(args).apply((a: any) => getSyncGroup(a, opts))
}

export interface GetSyncGroupOutputArgs {
    /**
     * The name of the database on which the sync group is hosted.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * The name of the sync group.
     */
    syncGroupName: pulumi.Input<string>;
}
