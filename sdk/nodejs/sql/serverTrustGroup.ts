// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A server trust group.
 *
 * Uses Azure REST API version 2023-08-01. In version 2.x of the Azure Native provider, it used API version 2021-11-01.
 *
 * Other available API versions: 2020-02-02-preview, 2020-08-01-preview, 2020-11-01-preview, 2021-02-01-preview, 2021-05-01-preview, 2021-08-01-preview, 2021-11-01, 2021-11-01-preview, 2022-02-01-preview, 2022-05-01-preview, 2022-08-01-preview, 2022-11-01-preview, 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview, 2024-05-01-preview, 2024-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class ServerTrustGroup extends pulumi.CustomResource {
    /**
     * Get an existing ServerTrustGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServerTrustGroup {
        return new ServerTrustGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:sql:ServerTrustGroup';

    /**
     * Returns true if the given object is an instance of ServerTrustGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerTrustGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerTrustGroup.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    public /*out*/ readonly azureApiVersion!: pulumi.Output<string>;
    /**
     * Group members information for the server trust group.
     */
    public readonly groupMembers!: pulumi.Output<outputs.sql.ServerInfoResponse[]>;
    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Trust scope of the server trust group.
     */
    public readonly trustScopes!: pulumi.Output<string[]>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ServerTrustGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerTrustGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.groupMembers === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupMembers'");
            }
            if (args?.locationName === undefined && !opts.urn) {
                throw new Error("Missing required property 'locationName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.trustScopes === undefined && !opts.urn) {
                throw new Error("Missing required property 'trustScopes'");
            }
            resourceInputs["groupMembers"] = args?.groupMembers;
            resourceInputs["locationName"] = args?.locationName;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["serverTrustGroupName"] = args?.serverTrustGroupName;
            resourceInputs["trustScopes"] = args?.trustScopes;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["groupMembers"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["trustScopes"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:sql/v20200202preview:ServerTrustGroup" }, { type: "azure-native:sql/v20200801preview:ServerTrustGroup" }, { type: "azure-native:sql/v20201101preview:ServerTrustGroup" }, { type: "azure-native:sql/v20210201preview:ServerTrustGroup" }, { type: "azure-native:sql/v20210501preview:ServerTrustGroup" }, { type: "azure-native:sql/v20210801preview:ServerTrustGroup" }, { type: "azure-native:sql/v20211101:ServerTrustGroup" }, { type: "azure-native:sql/v20211101preview:ServerTrustGroup" }, { type: "azure-native:sql/v20220201preview:ServerTrustGroup" }, { type: "azure-native:sql/v20220501preview:ServerTrustGroup" }, { type: "azure-native:sql/v20220801preview:ServerTrustGroup" }, { type: "azure-native:sql/v20221101preview:ServerTrustGroup" }, { type: "azure-native:sql/v20230201preview:ServerTrustGroup" }, { type: "azure-native:sql/v20230501preview:ServerTrustGroup" }, { type: "azure-native:sql/v20230801:ServerTrustGroup" }, { type: "azure-native:sql/v20230801preview:ServerTrustGroup" }, { type: "azure-native:sql/v20240501preview:ServerTrustGroup" }, { type: "azure-native:sql/v20241101preview:ServerTrustGroup" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ServerTrustGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServerTrustGroup resource.
 */
export interface ServerTrustGroupArgs {
    /**
     * Group members information for the server trust group.
     */
    groupMembers: pulumi.Input<pulumi.Input<inputs.sql.ServerInfoArgs>[]>;
    /**
     * The name of the region where the resource is located.
     */
    locationName: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server trust group.
     */
    serverTrustGroupName?: pulumi.Input<string>;
    /**
     * Trust scope of the server trust group.
     */
    trustScopes: pulumi.Input<pulumi.Input<string | enums.sql.TrustScope>[]>;
}
