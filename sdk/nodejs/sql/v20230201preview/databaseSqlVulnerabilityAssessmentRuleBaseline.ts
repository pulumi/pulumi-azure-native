// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * A database sql vulnerability assessment rule baseline.
 */
export class DatabaseSqlVulnerabilityAssessmentRuleBaseline extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseSqlVulnerabilityAssessmentRuleBaseline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DatabaseSqlVulnerabilityAssessmentRuleBaseline {
        return new DatabaseSqlVulnerabilityAssessmentRuleBaseline(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:sql/v20230201preview:DatabaseSqlVulnerabilityAssessmentRuleBaseline';

    /**
     * Returns true if the given object is an instance of DatabaseSqlVulnerabilityAssessmentRuleBaseline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseSqlVulnerabilityAssessmentRuleBaseline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseSqlVulnerabilityAssessmentRuleBaseline.__pulumiType;
    }

    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The rule baseline result
     */
    public readonly results!: pulumi.Output<string[][]>;
    /**
     * SystemData of DatabaseSqlVulnerabilityAssessmentRuleBaselineResource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.sql.v20230201preview.SystemDataResponse>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DatabaseSqlVulnerabilityAssessmentRuleBaseline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseSqlVulnerabilityAssessmentRuleBaselineArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.baselineName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baselineName'");
            }
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            if ((!args || args.latestScan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'latestScan'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.results === undefined) && !opts.urn) {
                throw new Error("Missing required property 'results'");
            }
            if ((!args || args.serverName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverName'");
            }
            if ((!args || args.vulnerabilityAssessmentName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vulnerabilityAssessmentName'");
            }
            resourceInputs["baselineName"] = args ? args.baselineName : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["latestScan"] = args ? args.latestScan : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["results"] = args ? args.results : undefined;
            resourceInputs["ruleId"] = args ? args.ruleId : undefined;
            resourceInputs["serverName"] = args ? args.serverName : undefined;
            resourceInputs["vulnerabilityAssessmentName"] = args ? args.vulnerabilityAssessmentName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["results"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:sql:DatabaseSqlVulnerabilityAssessmentRuleBaseline" }, { type: "azure-native:sql/v20220201preview:DatabaseSqlVulnerabilityAssessmentRuleBaseline" }, { type: "azure-native:sql/v20220501preview:DatabaseSqlVulnerabilityAssessmentRuleBaseline" }, { type: "azure-native:sql/v20220801preview:DatabaseSqlVulnerabilityAssessmentRuleBaseline" }, { type: "azure-native:sql/v20221101preview:DatabaseSqlVulnerabilityAssessmentRuleBaseline" }, { type: "azure-native:sql/v20230501preview:DatabaseSqlVulnerabilityAssessmentRuleBaseline" }, { type: "azure-native:sql/v20230801preview:DatabaseSqlVulnerabilityAssessmentRuleBaseline" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DatabaseSqlVulnerabilityAssessmentRuleBaseline.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DatabaseSqlVulnerabilityAssessmentRuleBaseline resource.
 */
export interface DatabaseSqlVulnerabilityAssessmentRuleBaselineArgs {
    baselineName: pulumi.Input<string>;
    /**
     * The name of the database.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The latest scan flag
     */
    latestScan: pulumi.Input<boolean>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The rule baseline result
     */
    results: pulumi.Input<pulumi.Input<pulumi.Input<string>[]>[]>;
    /**
     * The vulnerability assessment rule ID.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * The name of the vulnerability assessment.
     */
    vulnerabilityAssessmentName: pulumi.Input<string>;
}
