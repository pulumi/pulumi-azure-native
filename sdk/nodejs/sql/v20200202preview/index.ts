// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./getManagedDatabase";
export * from "./getManagedInstance";
export * from "./getManagedInstanceAzureADOnlyAuthentication";
export * from "./getServerAzureADOnlyAuthentication";
export * from "./getServerTrustGroup";
export * from "./managedDatabase";
export * from "./managedInstance";
export * from "./managedInstanceAzureADOnlyAuthentication";
export * from "./serverAzureADOnlyAuthentication";
export * from "./serverTrustGroup";

// Export enums:
export * from "../../types/enums/sql/v20200202preview";

// Import resources to register:
import { ManagedDatabase } from "./managedDatabase";
import { ManagedInstance } from "./managedInstance";
import { ManagedInstanceAzureADOnlyAuthentication } from "./managedInstanceAzureADOnlyAuthentication";
import { ServerAzureADOnlyAuthentication } from "./serverAzureADOnlyAuthentication";
import { ServerTrustGroup } from "./serverTrustGroup";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-nextgen:sql/v20200202preview:ManagedDatabase":
                return new ManagedDatabase(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20200202preview:ManagedInstance":
                return new ManagedInstance(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20200202preview:ManagedInstanceAzureADOnlyAuthentication":
                return new ManagedInstanceAzureADOnlyAuthentication(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20200202preview:ServerAzureADOnlyAuthentication":
                return new ServerAzureADOnlyAuthentication(name, <any>undefined, { urn })
            case "azure-nextgen:sql/v20200202preview:ServerTrustGroup":
                return new ServerTrustGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-nextgen", "sql/v20200202preview", _module)
