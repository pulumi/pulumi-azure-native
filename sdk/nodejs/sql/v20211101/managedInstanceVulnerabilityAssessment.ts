// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * A managed instance vulnerability assessment.
 */
export class ManagedInstanceVulnerabilityAssessment extends pulumi.CustomResource {
    /**
     * Get an existing ManagedInstanceVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ManagedInstanceVulnerabilityAssessment {
        return new ManagedInstanceVulnerabilityAssessment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:sql/v20211101:ManagedInstanceVulnerabilityAssessment';

    /**
     * Returns true if the given object is an instance of ManagedInstanceVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedInstanceVulnerabilityAssessment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedInstanceVulnerabilityAssessment.__pulumiType;
    }

    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The recurring scans settings
     */
    public readonly recurringScans!: pulumi.Output<outputs.sql.v20211101.VulnerabilityAssessmentRecurringScansPropertiesResponse | undefined>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ManagedInstanceVulnerabilityAssessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedInstanceVulnerabilityAssessmentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.managedInstanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedInstanceName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.storageContainerPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageContainerPath'");
            }
            resourceInputs["managedInstanceName"] = args ? args.managedInstanceName : undefined;
            resourceInputs["recurringScans"] = args ? (args.recurringScans ? pulumi.output(args.recurringScans).apply(inputs.sql.v20211101.vulnerabilityAssessmentRecurringScansPropertiesArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["storageAccountAccessKey"] = args ? args.storageAccountAccessKey : undefined;
            resourceInputs["storageContainerPath"] = args ? args.storageContainerPath : undefined;
            resourceInputs["storageContainerSasKey"] = args ? args.storageContainerSasKey : undefined;
            resourceInputs["vulnerabilityAssessmentName"] = args ? args.vulnerabilityAssessmentName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["recurringScans"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:sql:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20180601preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20200202preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20200801preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20201101preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20210201preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20210501preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20210801preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20211101preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20220201preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20220501preview:ManagedInstanceVulnerabilityAssessment" }, { type: "azure-native:sql/v20220801preview:ManagedInstanceVulnerabilityAssessment" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ManagedInstanceVulnerabilityAssessment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ManagedInstanceVulnerabilityAssessment resource.
 */
export interface ManagedInstanceVulnerabilityAssessmentArgs {
    /**
     * The name of the managed instance for which the vulnerability assessment is defined.
     */
    managedInstanceName: pulumi.Input<string>;
    /**
     * The recurring scans settings
     */
    recurringScans?: pulumi.Input<inputs.sql.v20211101.VulnerabilityAssessmentRecurringScansPropertiesArgs>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    storageContainerPath: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall
     */
    storageContainerSasKey?: pulumi.Input<string>;
    /**
     * The name of the vulnerability assessment.
     */
    vulnerabilityAssessmentName?: pulumi.Input<string>;
}
