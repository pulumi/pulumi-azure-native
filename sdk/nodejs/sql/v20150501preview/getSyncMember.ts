// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a sync member.
 */
/** @deprecated azure-native:sql/v20150501preview:SyncMember is being removed in the next major version of this provider. Upgrade to at least azure-native:sql/v20221101preview:SyncMember to guarantee forwards compatibility. */
export function getSyncMember(args: GetSyncMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetSyncMemberResult> {
    pulumi.log.warn("getSyncMember is deprecated: azure-native:sql/v20150501preview:SyncMember is being removed in the next major version of this provider. Upgrade to at least azure-native:sql/v20221101preview:SyncMember to guarantee forwards compatibility.")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:sql/v20150501preview:getSyncMember", {
        "databaseName": args.databaseName,
        "resourceGroupName": args.resourceGroupName,
        "serverName": args.serverName,
        "syncGroupName": args.syncGroupName,
        "syncMemberName": args.syncMemberName,
    }, opts);
}

export interface GetSyncMemberArgs {
    /**
     * The name of the database on which the sync group is hosted.
     */
    databaseName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: string;
    /**
     * The name of the server.
     */
    serverName: string;
    /**
     * The name of the sync group on which the sync member is hosted.
     */
    syncGroupName: string;
    /**
     * The name of the sync member.
     */
    syncMemberName: string;
}

/**
 * An Azure SQL Database sync member.
 */
export interface GetSyncMemberResult {
    /**
     * Database name of the member database in the sync member.
     */
    readonly databaseName?: string;
    /**
     * Database type of the sync member.
     */
    readonly databaseType?: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Server name of the member database in the sync member
     */
    readonly serverName?: string;
    /**
     * SQL Server database id of the sync member.
     */
    readonly sqlServerDatabaseId?: string;
    /**
     * ARM resource id of the sync agent in the sync member.
     */
    readonly syncAgentId?: string;
    /**
     * Sync direction of the sync member.
     */
    readonly syncDirection?: string;
    /**
     * Sync state of the sync member.
     */
    readonly syncState: string;
    /**
     * Resource type.
     */
    readonly type: string;
    /**
     * User name of the member database in the sync member.
     */
    readonly userName?: string;
}
/**
 * Gets a sync member.
 */
/** @deprecated azure-native:sql/v20150501preview:SyncMember is being removed in the next major version of this provider. Upgrade to at least azure-native:sql/v20221101preview:SyncMember to guarantee forwards compatibility. */
export function getSyncMemberOutput(args: GetSyncMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSyncMemberResult> {
    return pulumi.output(args).apply((a: any) => getSyncMember(a, opts))
}

export interface GetSyncMemberOutputArgs {
    /**
     * The name of the database on which the sync group is hosted.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * The name of the sync group on which the sync member is hosted.
     */
    syncGroupName: pulumi.Input<string>;
    /**
     * The name of the sync member.
     */
    syncMemberName: pulumi.Input<string>;
}
