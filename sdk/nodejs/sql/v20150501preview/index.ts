// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./databaseAdvisor";
export * from "./databaseBlobAuditingPolicy";
export * from "./encryptionProtector";
export * from "./failoverGroup";
export * from "./firewallRule";
export * from "./getDatabaseAdvisor";
export * from "./getDatabaseBlobAuditingPolicy";
export * from "./getEncryptionProtector";
export * from "./getFailoverGroup";
export * from "./getFirewallRule";
export * from "./getManagedInstance";
export * from "./getServer";
export * from "./getServerAdvisor";
export * from "./getServerKey";
export * from "./getSyncAgent";
export * from "./getSyncGroup";
export * from "./getSyncMember";
export * from "./getVirtualNetworkRule";
export * from "./managedInstance";
export * from "./server";
export * from "./serverAdvisor";
export * from "./serverKey";
export * from "./syncAgent";
export * from "./syncGroup";
export * from "./syncMember";
export * from "./virtualNetworkRule";

// Export enums:
export * from "../../types/enums/sql/v20150501preview";

// Import resources to register:
import { DatabaseAdvisor } from "./databaseAdvisor";
import { DatabaseBlobAuditingPolicy } from "./databaseBlobAuditingPolicy";
import { EncryptionProtector } from "./encryptionProtector";
import { FailoverGroup } from "./failoverGroup";
import { FirewallRule } from "./firewallRule";
import { ManagedInstance } from "./managedInstance";
import { Server } from "./server";
import { ServerAdvisor } from "./serverAdvisor";
import { ServerKey } from "./serverKey";
import { SyncAgent } from "./syncAgent";
import { SyncGroup } from "./syncGroup";
import { SyncMember } from "./syncMember";
import { VirtualNetworkRule } from "./virtualNetworkRule";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:sql/v20150501preview:DatabaseAdvisor":
                return new DatabaseAdvisor(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:DatabaseBlobAuditingPolicy":
                return new DatabaseBlobAuditingPolicy(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:EncryptionProtector":
                return new EncryptionProtector(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:FailoverGroup":
                return new FailoverGroup(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:FirewallRule":
                return new FirewallRule(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:ManagedInstance":
                return new ManagedInstance(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:Server":
                return new Server(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:ServerAdvisor":
                return new ServerAdvisor(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:ServerKey":
                return new ServerKey(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:SyncAgent":
                return new SyncAgent(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:SyncGroup":
                return new SyncGroup(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:SyncMember":
                return new SyncMember(name, <any>undefined, { urn })
            case "azure-native:sql/v20150501preview:VirtualNetworkRule":
                return new VirtualNetworkRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "sql/v20150501preview", _module)
