// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * A server vulnerability assessment.
 */
export class ServerVulnerabilityAssessment extends pulumi.CustomResource {
    /**
     * Get an existing ServerVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServerVulnerabilityAssessment {
        return new ServerVulnerabilityAssessment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-nextgen:sql/v20180601preview:ServerVulnerabilityAssessment';

    /**
     * Returns true if the given object is an instance of ServerVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerVulnerabilityAssessment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerVulnerabilityAssessment.__pulumiType;
    }

    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The recurring scans settings
     */
    public readonly recurringScans!: pulumi.Output<outputs.sql.v20180601preview.VulnerabilityAssessmentRecurringScansPropertiesResponse | undefined>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
     */
    public readonly storageAccountAccessKey!: pulumi.Output<string | undefined>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    public readonly storageContainerPath!: pulumi.Output<string>;
    /**
     * A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.
     */
    public readonly storageContainerSasKey!: pulumi.Output<string | undefined>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ServerVulnerabilityAssessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerVulnerabilityAssessmentArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.serverName === undefined) {
                throw new Error("Missing required property 'serverName'");
            }
            if (!args || args.storageContainerPath === undefined) {
                throw new Error("Missing required property 'storageContainerPath'");
            }
            if (!args || args.vulnerabilityAssessmentName === undefined) {
                throw new Error("Missing required property 'vulnerabilityAssessmentName'");
            }
            inputs["recurringScans"] = args ? args.recurringScans : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["serverName"] = args ? args.serverName : undefined;
            inputs["storageAccountAccessKey"] = args ? args.storageAccountAccessKey : undefined;
            inputs["storageContainerPath"] = args ? args.storageContainerPath : undefined;
            inputs["storageContainerSasKey"] = args ? args.storageContainerSasKey : undefined;
            inputs["vulnerabilityAssessmentName"] = args ? args.vulnerabilityAssessmentName : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        } else {
            inputs["name"] = undefined /*out*/;
            inputs["recurringScans"] = undefined /*out*/;
            inputs["storageAccountAccessKey"] = undefined /*out*/;
            inputs["storageContainerPath"] = undefined /*out*/;
            inputs["storageContainerSasKey"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ServerVulnerabilityAssessment.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServerVulnerabilityAssessment resource.
 */
export interface ServerVulnerabilityAssessmentArgs {
    /**
     * The recurring scans settings
     */
    readonly recurringScans?: pulumi.Input<inputs.sql.v20180601preview.VulnerabilityAssessmentRecurringScansProperties>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server for which the vulnerability assessment is defined.
     */
    readonly serverName: pulumi.Input<string>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
     */
    readonly storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    readonly storageContainerPath: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.
     */
    readonly storageContainerSasKey?: pulumi.Input<string>;
    /**
     * The name of the vulnerability assessment.
     */
    readonly vulnerabilityAssessmentName: pulumi.Input<string>;
}
