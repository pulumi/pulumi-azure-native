// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { DatabaseSecurityAlertPolicyArgs } from "./databaseSecurityAlertPolicy";
export type DatabaseSecurityAlertPolicy = import("./databaseSecurityAlertPolicy").DatabaseSecurityAlertPolicy;
export const DatabaseSecurityAlertPolicy: typeof import("./databaseSecurityAlertPolicy").DatabaseSecurityAlertPolicy = null as any;
utilities.lazyLoad(exports, ["DatabaseSecurityAlertPolicy"], () => require("./databaseSecurityAlertPolicy"));

export { GetDatabaseSecurityAlertPolicyArgs, GetDatabaseSecurityAlertPolicyResult, GetDatabaseSecurityAlertPolicyOutputArgs } from "./getDatabaseSecurityAlertPolicy";
export const getDatabaseSecurityAlertPolicy: typeof import("./getDatabaseSecurityAlertPolicy").getDatabaseSecurityAlertPolicy = null as any;
export const getDatabaseSecurityAlertPolicyOutput: typeof import("./getDatabaseSecurityAlertPolicy").getDatabaseSecurityAlertPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getDatabaseSecurityAlertPolicy","getDatabaseSecurityAlertPolicyOutput"], () => require("./getDatabaseSecurityAlertPolicy"));

export { GetInstancePoolArgs, GetInstancePoolResult, GetInstancePoolOutputArgs } from "./getInstancePool";
export const getInstancePool: typeof import("./getInstancePool").getInstancePool = null as any;
export const getInstancePoolOutput: typeof import("./getInstancePool").getInstancePoolOutput = null as any;
utilities.lazyLoad(exports, ["getInstancePool","getInstancePoolOutput"], () => require("./getInstancePool"));

export { GetManagedDatabaseArgs, GetManagedDatabaseResult, GetManagedDatabaseOutputArgs } from "./getManagedDatabase";
export const getManagedDatabase: typeof import("./getManagedDatabase").getManagedDatabase = null as any;
export const getManagedDatabaseOutput: typeof import("./getManagedDatabase").getManagedDatabaseOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabase","getManagedDatabaseOutput"], () => require("./getManagedDatabase"));

export { GetManagedDatabaseSensitivityLabelArgs, GetManagedDatabaseSensitivityLabelResult, GetManagedDatabaseSensitivityLabelOutputArgs } from "./getManagedDatabaseSensitivityLabel";
export const getManagedDatabaseSensitivityLabel: typeof import("./getManagedDatabaseSensitivityLabel").getManagedDatabaseSensitivityLabel = null as any;
export const getManagedDatabaseSensitivityLabelOutput: typeof import("./getManagedDatabaseSensitivityLabel").getManagedDatabaseSensitivityLabelOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSensitivityLabel","getManagedDatabaseSensitivityLabelOutput"], () => require("./getManagedDatabaseSensitivityLabel"));

export { GetManagedInstanceArgs, GetManagedInstanceResult, GetManagedInstanceOutputArgs } from "./getManagedInstance";
export const getManagedInstance: typeof import("./getManagedInstance").getManagedInstance = null as any;
export const getManagedInstanceOutput: typeof import("./getManagedInstance").getManagedInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getManagedInstance","getManagedInstanceOutput"], () => require("./getManagedInstance"));

export { GetManagedInstanceVulnerabilityAssessmentArgs, GetManagedInstanceVulnerabilityAssessmentResult, GetManagedInstanceVulnerabilityAssessmentOutputArgs } from "./getManagedInstanceVulnerabilityAssessment";
export const getManagedInstanceVulnerabilityAssessment: typeof import("./getManagedInstanceVulnerabilityAssessment").getManagedInstanceVulnerabilityAssessment = null as any;
export const getManagedInstanceVulnerabilityAssessmentOutput: typeof import("./getManagedInstanceVulnerabilityAssessment").getManagedInstanceVulnerabilityAssessmentOutput = null as any;
utilities.lazyLoad(exports, ["getManagedInstanceVulnerabilityAssessment","getManagedInstanceVulnerabilityAssessmentOutput"], () => require("./getManagedInstanceVulnerabilityAssessment"));

export { GetPrivateEndpointConnectionArgs, GetPrivateEndpointConnectionResult, GetPrivateEndpointConnectionOutputArgs } from "./getPrivateEndpointConnection";
export const getPrivateEndpointConnection: typeof import("./getPrivateEndpointConnection").getPrivateEndpointConnection = null as any;
export const getPrivateEndpointConnectionOutput: typeof import("./getPrivateEndpointConnection").getPrivateEndpointConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateEndpointConnection","getPrivateEndpointConnectionOutput"], () => require("./getPrivateEndpointConnection"));

export { GetServerAzureADAdministratorArgs, GetServerAzureADAdministratorResult, GetServerAzureADAdministratorOutputArgs } from "./getServerAzureADAdministrator";
export const getServerAzureADAdministrator: typeof import("./getServerAzureADAdministrator").getServerAzureADAdministrator = null as any;
export const getServerAzureADAdministratorOutput: typeof import("./getServerAzureADAdministrator").getServerAzureADAdministratorOutput = null as any;
utilities.lazyLoad(exports, ["getServerAzureADAdministrator","getServerAzureADAdministratorOutput"], () => require("./getServerAzureADAdministrator"));

export { GetServerVulnerabilityAssessmentArgs, GetServerVulnerabilityAssessmentResult, GetServerVulnerabilityAssessmentOutputArgs } from "./getServerVulnerabilityAssessment";
export const getServerVulnerabilityAssessment: typeof import("./getServerVulnerabilityAssessment").getServerVulnerabilityAssessment = null as any;
export const getServerVulnerabilityAssessmentOutput: typeof import("./getServerVulnerabilityAssessment").getServerVulnerabilityAssessmentOutput = null as any;
utilities.lazyLoad(exports, ["getServerVulnerabilityAssessment","getServerVulnerabilityAssessmentOutput"], () => require("./getServerVulnerabilityAssessment"));


// Export enums:
export * from "../../types/enums/sql/v20180601preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:sql/v20180601preview:DatabaseSecurityAlertPolicy":
                return new DatabaseSecurityAlertPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "sql/v20180601preview", _module)
