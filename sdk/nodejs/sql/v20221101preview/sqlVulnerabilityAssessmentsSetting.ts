// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * A SQL Vulnerability Assessment.
 */
export class SqlVulnerabilityAssessmentsSetting extends pulumi.CustomResource {
    /**
     * Get an existing SqlVulnerabilityAssessmentsSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SqlVulnerabilityAssessmentsSetting {
        return new SqlVulnerabilityAssessmentsSetting(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:sql/v20221101preview:SqlVulnerabilityAssessmentsSetting';

    /**
     * Returns true if the given object is an instance of SqlVulnerabilityAssessmentsSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SqlVulnerabilityAssessmentsSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlVulnerabilityAssessmentsSetting.__pulumiType;
    }

    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * SystemData of SqlVulnerabilityAssessmentResource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.sql.v20221101preview.SystemDataResponse>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a SqlVulnerabilityAssessmentsSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlVulnerabilityAssessmentsSettingArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.serverName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverName'");
            }
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["serverName"] = args ? args.serverName : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["vulnerabilityAssessmentName"] = args ? args.vulnerabilityAssessmentName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:sql:SqlVulnerabilityAssessmentsSetting" }, { type: "azure-native:sql/v20220201preview:SqlVulnerabilityAssessmentsSetting" }, { type: "azure-native:sql/v20220501preview:SqlVulnerabilityAssessmentsSetting" }, { type: "azure-native:sql/v20220801preview:SqlVulnerabilityAssessmentsSetting" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(SqlVulnerabilityAssessmentsSetting.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SqlVulnerabilityAssessmentsSetting resource.
 */
export interface SqlVulnerabilityAssessmentsSettingArgs {
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
     */
    state?: pulumi.Input<enums.sql.v20221101preview.SqlVulnerabilityAssessmentState>;
    /**
     * The name of the SQL Vulnerability Assessment.
     */
    vulnerabilityAssessmentName?: pulumi.Input<string>;
}
