// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { DatabaseSqlVulnerabilityAssessmentRuleBaselineArgs } from "./databaseSqlVulnerabilityAssessmentRuleBaseline";
export type DatabaseSqlVulnerabilityAssessmentRuleBaseline = import("./databaseSqlVulnerabilityAssessmentRuleBaseline").DatabaseSqlVulnerabilityAssessmentRuleBaseline;
export const DatabaseSqlVulnerabilityAssessmentRuleBaseline: typeof import("./databaseSqlVulnerabilityAssessmentRuleBaseline").DatabaseSqlVulnerabilityAssessmentRuleBaseline = null as any;
utilities.lazyLoad(exports, ["DatabaseSqlVulnerabilityAssessmentRuleBaseline"], () => require("./databaseSqlVulnerabilityAssessmentRuleBaseline"));

export { DistributedAvailabilityGroupArgs } from "./distributedAvailabilityGroup";
export type DistributedAvailabilityGroup = import("./distributedAvailabilityGroup").DistributedAvailabilityGroup;
export const DistributedAvailabilityGroup: typeof import("./distributedAvailabilityGroup").DistributedAvailabilityGroup = null as any;
utilities.lazyLoad(exports, ["DistributedAvailabilityGroup"], () => require("./distributedAvailabilityGroup"));

export { GetDatabaseSqlVulnerabilityAssessmentRuleBaselineArgs, GetDatabaseSqlVulnerabilityAssessmentRuleBaselineResult, GetDatabaseSqlVulnerabilityAssessmentRuleBaselineOutputArgs } from "./getDatabaseSqlVulnerabilityAssessmentRuleBaseline";
export const getDatabaseSqlVulnerabilityAssessmentRuleBaseline: typeof import("./getDatabaseSqlVulnerabilityAssessmentRuleBaseline").getDatabaseSqlVulnerabilityAssessmentRuleBaseline = null as any;
export const getDatabaseSqlVulnerabilityAssessmentRuleBaselineOutput: typeof import("./getDatabaseSqlVulnerabilityAssessmentRuleBaseline").getDatabaseSqlVulnerabilityAssessmentRuleBaselineOutput = null as any;
utilities.lazyLoad(exports, ["getDatabaseSqlVulnerabilityAssessmentRuleBaseline","getDatabaseSqlVulnerabilityAssessmentRuleBaselineOutput"], () => require("./getDatabaseSqlVulnerabilityAssessmentRuleBaseline"));

export { GetDistributedAvailabilityGroupArgs, GetDistributedAvailabilityGroupResult, GetDistributedAvailabilityGroupOutputArgs } from "./getDistributedAvailabilityGroup";
export const getDistributedAvailabilityGroup: typeof import("./getDistributedAvailabilityGroup").getDistributedAvailabilityGroup = null as any;
export const getDistributedAvailabilityGroupOutput: typeof import("./getDistributedAvailabilityGroup").getDistributedAvailabilityGroupOutput = null as any;
utilities.lazyLoad(exports, ["getDistributedAvailabilityGroup","getDistributedAvailabilityGroupOutput"], () => require("./getDistributedAvailabilityGroup"));

export { GetManagedInstanceLongTermRetentionPolicyArgs, GetManagedInstanceLongTermRetentionPolicyResult, GetManagedInstanceLongTermRetentionPolicyOutputArgs } from "./getManagedInstanceLongTermRetentionPolicy";
export const getManagedInstanceLongTermRetentionPolicy: typeof import("./getManagedInstanceLongTermRetentionPolicy").getManagedInstanceLongTermRetentionPolicy = null as any;
export const getManagedInstanceLongTermRetentionPolicyOutput: typeof import("./getManagedInstanceLongTermRetentionPolicy").getManagedInstanceLongTermRetentionPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getManagedInstanceLongTermRetentionPolicy","getManagedInstanceLongTermRetentionPolicyOutput"], () => require("./getManagedInstanceLongTermRetentionPolicy"));

export { GetSqlVulnerabilityAssessmentRuleBaselineArgs, GetSqlVulnerabilityAssessmentRuleBaselineResult, GetSqlVulnerabilityAssessmentRuleBaselineOutputArgs } from "./getSqlVulnerabilityAssessmentRuleBaseline";
export const getSqlVulnerabilityAssessmentRuleBaseline: typeof import("./getSqlVulnerabilityAssessmentRuleBaseline").getSqlVulnerabilityAssessmentRuleBaseline = null as any;
export const getSqlVulnerabilityAssessmentRuleBaselineOutput: typeof import("./getSqlVulnerabilityAssessmentRuleBaseline").getSqlVulnerabilityAssessmentRuleBaselineOutput = null as any;
utilities.lazyLoad(exports, ["getSqlVulnerabilityAssessmentRuleBaseline","getSqlVulnerabilityAssessmentRuleBaselineOutput"], () => require("./getSqlVulnerabilityAssessmentRuleBaseline"));

export { GetSqlVulnerabilityAssessmentsSettingArgs, GetSqlVulnerabilityAssessmentsSettingResult, GetSqlVulnerabilityAssessmentsSettingOutputArgs } from "./getSqlVulnerabilityAssessmentsSetting";
export const getSqlVulnerabilityAssessmentsSetting: typeof import("./getSqlVulnerabilityAssessmentsSetting").getSqlVulnerabilityAssessmentsSetting = null as any;
export const getSqlVulnerabilityAssessmentsSettingOutput: typeof import("./getSqlVulnerabilityAssessmentsSetting").getSqlVulnerabilityAssessmentsSettingOutput = null as any;
utilities.lazyLoad(exports, ["getSqlVulnerabilityAssessmentsSetting","getSqlVulnerabilityAssessmentsSettingOutput"], () => require("./getSqlVulnerabilityAssessmentsSetting"));

export { GetStartStopManagedInstanceScheduleArgs, GetStartStopManagedInstanceScheduleResult, GetStartStopManagedInstanceScheduleOutputArgs } from "./getStartStopManagedInstanceSchedule";
export const getStartStopManagedInstanceSchedule: typeof import("./getStartStopManagedInstanceSchedule").getStartStopManagedInstanceSchedule = null as any;
export const getStartStopManagedInstanceScheduleOutput: typeof import("./getStartStopManagedInstanceSchedule").getStartStopManagedInstanceScheduleOutput = null as any;
utilities.lazyLoad(exports, ["getStartStopManagedInstanceSchedule","getStartStopManagedInstanceScheduleOutput"], () => require("./getStartStopManagedInstanceSchedule"));

export { ManagedInstanceLongTermRetentionPolicyArgs } from "./managedInstanceLongTermRetentionPolicy";
export type ManagedInstanceLongTermRetentionPolicy = import("./managedInstanceLongTermRetentionPolicy").ManagedInstanceLongTermRetentionPolicy;
export const ManagedInstanceLongTermRetentionPolicy: typeof import("./managedInstanceLongTermRetentionPolicy").ManagedInstanceLongTermRetentionPolicy = null as any;
utilities.lazyLoad(exports, ["ManagedInstanceLongTermRetentionPolicy"], () => require("./managedInstanceLongTermRetentionPolicy"));

export { SqlVulnerabilityAssessmentRuleBaselineArgs } from "./sqlVulnerabilityAssessmentRuleBaseline";
export type SqlVulnerabilityAssessmentRuleBaseline = import("./sqlVulnerabilityAssessmentRuleBaseline").SqlVulnerabilityAssessmentRuleBaseline;
export const SqlVulnerabilityAssessmentRuleBaseline: typeof import("./sqlVulnerabilityAssessmentRuleBaseline").SqlVulnerabilityAssessmentRuleBaseline = null as any;
utilities.lazyLoad(exports, ["SqlVulnerabilityAssessmentRuleBaseline"], () => require("./sqlVulnerabilityAssessmentRuleBaseline"));

export { SqlVulnerabilityAssessmentsSettingArgs } from "./sqlVulnerabilityAssessmentsSetting";
export type SqlVulnerabilityAssessmentsSetting = import("./sqlVulnerabilityAssessmentsSetting").SqlVulnerabilityAssessmentsSetting;
export const SqlVulnerabilityAssessmentsSetting: typeof import("./sqlVulnerabilityAssessmentsSetting").SqlVulnerabilityAssessmentsSetting = null as any;
utilities.lazyLoad(exports, ["SqlVulnerabilityAssessmentsSetting"], () => require("./sqlVulnerabilityAssessmentsSetting"));

export { StartStopManagedInstanceScheduleArgs } from "./startStopManagedInstanceSchedule";
export type StartStopManagedInstanceSchedule = import("./startStopManagedInstanceSchedule").StartStopManagedInstanceSchedule;
export const StartStopManagedInstanceSchedule: typeof import("./startStopManagedInstanceSchedule").StartStopManagedInstanceSchedule = null as any;
utilities.lazyLoad(exports, ["StartStopManagedInstanceSchedule"], () => require("./startStopManagedInstanceSchedule"));


// Export enums:
export * from "../../types/enums/sql/v20221101preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:sql/v20221101preview:DatabaseSqlVulnerabilityAssessmentRuleBaseline":
                return new DatabaseSqlVulnerabilityAssessmentRuleBaseline(name, <any>undefined, { urn })
            case "azure-native:sql/v20221101preview:DistributedAvailabilityGroup":
                return new DistributedAvailabilityGroup(name, <any>undefined, { urn })
            case "azure-native:sql/v20221101preview:ManagedInstanceLongTermRetentionPolicy":
                return new ManagedInstanceLongTermRetentionPolicy(name, <any>undefined, { urn })
            case "azure-native:sql/v20221101preview:SqlVulnerabilityAssessmentRuleBaseline":
                return new SqlVulnerabilityAssessmentRuleBaseline(name, <any>undefined, { urn })
            case "azure-native:sql/v20221101preview:SqlVulnerabilityAssessmentsSetting":
                return new SqlVulnerabilityAssessmentsSetting(name, <any>undefined, { urn })
            case "azure-native:sql/v20221101preview:StartStopManagedInstanceSchedule":
                return new StartStopManagedInstanceSchedule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "sql/v20221101preview", _module)
