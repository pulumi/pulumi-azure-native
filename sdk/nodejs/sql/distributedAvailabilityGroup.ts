// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Distributed availability group between box and Sql Managed Instance.
 *
 * Uses Azure REST API version 2023-08-01. In version 2.x of the Azure Native provider, it used API version 2021-11-01.
 *
 * Other available API versions: 2021-05-01-preview, 2021-08-01-preview, 2021-11-01, 2021-11-01-preview, 2022-02-01-preview, 2022-05-01-preview, 2022-08-01-preview, 2022-11-01-preview, 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview, 2024-05-01-preview, 2024-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
 */
export class DistributedAvailabilityGroup extends pulumi.CustomResource {
    /**
     * Get an existing DistributedAvailabilityGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DistributedAvailabilityGroup {
        return new DistributedAvailabilityGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:sql:DistributedAvailabilityGroup';

    /**
     * Returns true if the given object is an instance of DistributedAvailabilityGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DistributedAvailabilityGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DistributedAvailabilityGroup.__pulumiType;
    }

    /**
     * The Azure API version of the resource.
     */
    declare public /*out*/ readonly azureApiVersion: pulumi.Output<string>;
    /**
     * Databases in the distributed availability group
     */
    declare public readonly databases: pulumi.Output<outputs.sql.DistributedAvailabilityGroupDatabaseResponse[] | undefined>;
    /**
     * ID of the distributed availability group
     */
    declare public /*out*/ readonly distributedAvailabilityGroupId: pulumi.Output<string>;
    /**
     * Name of the distributed availability group
     */
    declare public readonly distributedAvailabilityGroupName: pulumi.Output<string>;
    /**
     * The link failover mode - can be Manual if intended to be used for two-way failover with a supported SQL Server, or None for one-way failover to Azure.
     */
    declare public readonly failoverMode: pulumi.Output<string | undefined>;
    /**
     * Managed instance side availability group name
     */
    declare public readonly instanceAvailabilityGroupName: pulumi.Output<string | undefined>;
    /**
     * Managed instance side link role
     */
    declare public readonly instanceLinkRole: pulumi.Output<string | undefined>;
    /**
     * Resource name.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * SQL server side availability group name
     */
    declare public readonly partnerAvailabilityGroupName: pulumi.Output<string | undefined>;
    /**
     * SQL server side endpoint - IP or DNS resolvable name
     */
    declare public readonly partnerEndpoint: pulumi.Output<string | undefined>;
    /**
     * SQL server side link role
     */
    declare public /*out*/ readonly partnerLinkRole: pulumi.Output<string>;
    /**
     * Replication mode of the link
     */
    declare public readonly replicationMode: pulumi.Output<string | undefined>;
    /**
     * Database seeding mode â€“ can be Automatic (default), or Manual for supported scenarios.
     */
    declare public readonly seedingMode: pulumi.Output<string | undefined>;
    /**
     * Resource type.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a DistributedAvailabilityGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DistributedAvailabilityGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.managedInstanceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'managedInstanceName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["databases"] = args?.databases;
            resourceInputs["distributedAvailabilityGroupName"] = args?.distributedAvailabilityGroupName;
            resourceInputs["failoverMode"] = args?.failoverMode;
            resourceInputs["instanceAvailabilityGroupName"] = args?.instanceAvailabilityGroupName;
            resourceInputs["instanceLinkRole"] = args?.instanceLinkRole;
            resourceInputs["managedInstanceName"] = args?.managedInstanceName;
            resourceInputs["partnerAvailabilityGroupName"] = args?.partnerAvailabilityGroupName;
            resourceInputs["partnerEndpoint"] = args?.partnerEndpoint;
            resourceInputs["replicationMode"] = args?.replicationMode;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["seedingMode"] = args?.seedingMode;
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["distributedAvailabilityGroupId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["partnerLinkRole"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["azureApiVersion"] = undefined /*out*/;
            resourceInputs["databases"] = undefined /*out*/;
            resourceInputs["distributedAvailabilityGroupId"] = undefined /*out*/;
            resourceInputs["distributedAvailabilityGroupName"] = undefined /*out*/;
            resourceInputs["failoverMode"] = undefined /*out*/;
            resourceInputs["instanceAvailabilityGroupName"] = undefined /*out*/;
            resourceInputs["instanceLinkRole"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["partnerAvailabilityGroupName"] = undefined /*out*/;
            resourceInputs["partnerEndpoint"] = undefined /*out*/;
            resourceInputs["partnerLinkRole"] = undefined /*out*/;
            resourceInputs["replicationMode"] = undefined /*out*/;
            resourceInputs["seedingMode"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:sql/v20210501preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20210801preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20211101:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20211101preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20220201preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20220501preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20220801preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20221101preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20230201preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20230501preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20230801:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20230801preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20240501preview:DistributedAvailabilityGroup" }, { type: "azure-native:sql/v20241101preview:DistributedAvailabilityGroup" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DistributedAvailabilityGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DistributedAvailabilityGroup resource.
 */
export interface DistributedAvailabilityGroupArgs {
    /**
     * Databases in the distributed availability group
     */
    databases?: pulumi.Input<pulumi.Input<inputs.sql.DistributedAvailabilityGroupDatabaseArgs>[]>;
    /**
     * The distributed availability group name.
     */
    distributedAvailabilityGroupName?: pulumi.Input<string>;
    /**
     * The link failover mode - can be Manual if intended to be used for two-way failover with a supported SQL Server, or None for one-way failover to Azure.
     */
    failoverMode?: pulumi.Input<string | enums.sql.FailoverModeType>;
    /**
     * Managed instance side availability group name
     */
    instanceAvailabilityGroupName?: pulumi.Input<string>;
    /**
     * Managed instance side link role
     */
    instanceLinkRole?: pulumi.Input<string | enums.sql.LinkRole>;
    /**
     * The name of the managed instance.
     */
    managedInstanceName: pulumi.Input<string>;
    /**
     * SQL server side availability group name
     */
    partnerAvailabilityGroupName?: pulumi.Input<string>;
    /**
     * SQL server side endpoint - IP or DNS resolvable name
     */
    partnerEndpoint?: pulumi.Input<string>;
    /**
     * Replication mode of the link
     */
    replicationMode?: pulumi.Input<string | enums.sql.ReplicationModeType>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Database seeding mode â€“ can be Automatic (default), or Manual for supported scenarios.
     */
    seedingMode?: pulumi.Input<string | enums.sql.SeedingModeType>;
}
