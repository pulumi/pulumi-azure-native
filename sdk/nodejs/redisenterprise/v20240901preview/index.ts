// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { EnterpriseAccessPolicyAssignmentArgs } from "./enterpriseAccessPolicyAssignment";
export type EnterpriseAccessPolicyAssignment = import("./enterpriseAccessPolicyAssignment").EnterpriseAccessPolicyAssignment;
export const EnterpriseAccessPolicyAssignment: typeof import("./enterpriseAccessPolicyAssignment").EnterpriseAccessPolicyAssignment = null as any;
utilities.lazyLoad(exports, ["EnterpriseAccessPolicyAssignment"], () => require("./enterpriseAccessPolicyAssignment"));

export { EnterpriseDatabaseArgs } from "./enterpriseDatabase";
export type EnterpriseDatabase = import("./enterpriseDatabase").EnterpriseDatabase;
export const EnterpriseDatabase: typeof import("./enterpriseDatabase").EnterpriseDatabase = null as any;
utilities.lazyLoad(exports, ["EnterpriseDatabase"], () => require("./enterpriseDatabase"));

export { GetEnterpriseAccessPolicyAssignmentArgs, GetEnterpriseAccessPolicyAssignmentResult, GetEnterpriseAccessPolicyAssignmentOutputArgs } from "./getEnterpriseAccessPolicyAssignment";
export const getEnterpriseAccessPolicyAssignment: typeof import("./getEnterpriseAccessPolicyAssignment").getEnterpriseAccessPolicyAssignment = null as any;
export const getEnterpriseAccessPolicyAssignmentOutput: typeof import("./getEnterpriseAccessPolicyAssignment").getEnterpriseAccessPolicyAssignmentOutput = null as any;
utilities.lazyLoad(exports, ["getEnterpriseAccessPolicyAssignment","getEnterpriseAccessPolicyAssignmentOutput"], () => require("./getEnterpriseAccessPolicyAssignment"));

export { GetEnterpriseDatabaseArgs, GetEnterpriseDatabaseResult, GetEnterpriseDatabaseOutputArgs } from "./getEnterpriseDatabase";
export const getEnterpriseDatabase: typeof import("./getEnterpriseDatabase").getEnterpriseDatabase = null as any;
export const getEnterpriseDatabaseOutput: typeof import("./getEnterpriseDatabase").getEnterpriseDatabaseOutput = null as any;
utilities.lazyLoad(exports, ["getEnterpriseDatabase","getEnterpriseDatabaseOutput"], () => require("./getEnterpriseDatabase"));

export { GetRedisEnterpriseArgs, GetRedisEnterpriseResult, GetRedisEnterpriseOutputArgs } from "./getRedisEnterprise";
export const getRedisEnterprise: typeof import("./getRedisEnterprise").getRedisEnterprise = null as any;
export const getRedisEnterpriseOutput: typeof import("./getRedisEnterprise").getRedisEnterpriseOutput = null as any;
utilities.lazyLoad(exports, ["getRedisEnterprise","getRedisEnterpriseOutput"], () => require("./getRedisEnterprise"));

export { ListEnterpriseDatabaseKeysArgs, ListEnterpriseDatabaseKeysResult, ListEnterpriseDatabaseKeysOutputArgs } from "./listEnterpriseDatabaseKeys";
export const listEnterpriseDatabaseKeys: typeof import("./listEnterpriseDatabaseKeys").listEnterpriseDatabaseKeys = null as any;
export const listEnterpriseDatabaseKeysOutput: typeof import("./listEnterpriseDatabaseKeys").listEnterpriseDatabaseKeysOutput = null as any;
utilities.lazyLoad(exports, ["listEnterpriseDatabaseKeys","listEnterpriseDatabaseKeysOutput"], () => require("./listEnterpriseDatabaseKeys"));

export { RedisEnterpriseArgs } from "./redisEnterprise";
export type RedisEnterprise = import("./redisEnterprise").RedisEnterprise;
export const RedisEnterprise: typeof import("./redisEnterprise").RedisEnterprise = null as any;
utilities.lazyLoad(exports, ["RedisEnterprise"], () => require("./redisEnterprise"));


// Export enums:
export * from "../../types/enums/redisenterprise/v20240901preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:redisenterprise/v20240901preview:EnterpriseAccessPolicyAssignment":
                return new EnterpriseAccessPolicyAssignment(name, <any>undefined, { urn })
            case "azure-native:redisenterprise/v20240901preview:EnterpriseDatabase":
                return new EnterpriseDatabase(name, <any>undefined, { urn })
            case "azure-native:redisenterprise/v20240901preview:RedisEnterprise":
                return new RedisEnterprise(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "redisenterprise/v20240901preview", _module)
