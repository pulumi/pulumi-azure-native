// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetReportConfigArgs, GetReportConfigResult, GetReportConfigOutputArgs } from "./getReportConfig";
export const getReportConfig: typeof import("./getReportConfig").getReportConfig = null as any;
export const getReportConfigOutput: typeof import("./getReportConfig").getReportConfigOutput = null as any;
utilities.lazyLoad(exports, ["getReportConfig","getReportConfigOutput"], () => require("./getReportConfig"));

export { GetReportConfigByResourceGroupNameArgs, GetReportConfigByResourceGroupNameResult, GetReportConfigByResourceGroupNameOutputArgs } from "./getReportConfigByResourceGroupName";
export const getReportConfigByResourceGroupName: typeof import("./getReportConfigByResourceGroupName").getReportConfigByResourceGroupName = null as any;
export const getReportConfigByResourceGroupNameOutput: typeof import("./getReportConfigByResourceGroupName").getReportConfigByResourceGroupNameOutput = null as any;
utilities.lazyLoad(exports, ["getReportConfigByResourceGroupName","getReportConfigByResourceGroupNameOutput"], () => require("./getReportConfigByResourceGroupName"));

export { ReportConfigArgs } from "./reportConfig";
export type ReportConfig = import("./reportConfig").ReportConfig;
export const ReportConfig: typeof import("./reportConfig").ReportConfig = null as any;
utilities.lazyLoad(exports, ["ReportConfig"], () => require("./reportConfig"));

export { ReportConfigByResourceGroupNameArgs } from "./reportConfigByResourceGroupName";
export type ReportConfigByResourceGroupName = import("./reportConfigByResourceGroupName").ReportConfigByResourceGroupName;
export const ReportConfigByResourceGroupName: typeof import("./reportConfigByResourceGroupName").ReportConfigByResourceGroupName = null as any;
utilities.lazyLoad(exports, ["ReportConfigByResourceGroupName"], () => require("./reportConfigByResourceGroupName"));


// Export enums:
export * from "../../types/enums/costmanagement/v20180531";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:costmanagement/v20180531:ReportConfig":
                return new ReportConfig(name, <any>undefined, { urn })
            case "azure-native:costmanagement/v20180531:ReportConfigByResourceGroupName":
                return new ReportConfigByResourceGroupName(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "costmanagement/v20180531", _module)
