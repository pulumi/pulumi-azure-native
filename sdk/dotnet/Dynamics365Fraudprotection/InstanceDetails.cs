// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Dynamics365Fraudprotection
{
    /// <summary>
    /// Represents an instance of a DFP instance resource.
    /// API Version: 2021-02-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:dynamics365fraudprotection:InstanceDetails")]
    public partial class InstanceDetails : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A collection of DFP instance administrators
        /// </summary>
        [Output("administration")]
        public Output<Outputs.DFPInstanceAdministratorsResponse?> Administration { get; private set; } = null!;

        /// <summary>
        /// Location of the DFP resource.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The current deployment state of DFP resource. The provisioningState is to indicate states for resource provisioning.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Key-value pairs of additional resource provisioning properties.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceDetails resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceDetails(string name, InstanceDetailsArgs args, CustomResourceOptions? options = null)
            : base("azure-native:dynamics365fraudprotection:InstanceDetails", name, args ?? new InstanceDetailsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceDetails(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:dynamics365fraudprotection:InstanceDetails", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:dynamics365fraudprotection/v20210201preview:InstanceDetails"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceDetails resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceDetails Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new InstanceDetails(name, id, options);
        }
    }

    public sealed class InstanceDetailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A collection of DFP instance administrators
        /// </summary>
        [Input("administration")]
        public Input<Inputs.DFPInstanceAdministratorsArgs>? Administration { get; set; }

        /// <summary>
        /// The name of the DFP instances. It must be a minimum of 3 characters, and a maximum of 63.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Location of the DFP resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Azure Resource group of which a given DFP instance is part. This name must be at least 1 character in length, and no more than 90.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value pairs of additional resource provisioning properties.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public InstanceDetailsArgs()
        {
        }
        public static new InstanceDetailsArgs Empty => new InstanceDetailsArgs();
    }
}
