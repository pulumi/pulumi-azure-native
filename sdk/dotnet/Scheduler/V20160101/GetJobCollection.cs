// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Scheduler.V20160101
{
    public static class GetJobCollection
    {
        public static Task<GetJobCollectionResult> InvokeAsync(GetJobCollectionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetJobCollectionResult>("azure-nextgen:scheduler/v20160101:getJobCollection", args ?? new GetJobCollectionArgs(), options.WithVersion());
    }


    public sealed class GetJobCollectionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The job collection name.
        /// </summary>
        [Input("jobCollectionName", required: true)]
        public string JobCollectionName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetJobCollectionArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetJobCollectionResult
    {
        /// <summary>
        /// Gets or sets the storage account location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Gets or sets the job collection resource name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Gets or sets the job collection properties.
        /// </summary>
        public readonly Outputs.JobCollectionPropertiesResponse Properties;
        /// <summary>
        /// Gets or sets the tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Gets the job collection resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetJobCollectionResult(
            string? location,

            string? name,

            Outputs.JobCollectionPropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
