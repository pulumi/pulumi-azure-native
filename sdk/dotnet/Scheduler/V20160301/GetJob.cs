// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Scheduler.V20160301
{
    public static class GetJob
    {
        public static Task<GetJobResult> InvokeAsync(GetJobArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetJobResult>("azure-nextgen:scheduler/v20160301:getJob", args ?? new GetJobArgs(), options.WithVersion());
    }


    public sealed class GetJobArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The job collection name.
        /// </summary>
        [Input("jobCollectionName", required: true)]
        public string JobCollectionName { get; set; } = null!;

        /// <summary>
        /// The job name.
        /// </summary>
        [Input("jobName", required: true)]
        public string JobName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetJobArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetJobResult
    {
        /// <summary>
        /// Gets the job resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the job properties.
        /// </summary>
        public readonly Outputs.JobPropertiesResponse Properties;
        /// <summary>
        /// Gets the job resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetJobResult(
            string name,

            Outputs.JobPropertiesResponse properties,

            string type)
        {
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
