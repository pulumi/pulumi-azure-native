// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20210901
{
    public static class ListManagedClusterMonitoringUserCredentials
    {
        /// <summary>
        /// The list credential result response.
        /// </summary>
        public static Task<ListManagedClusterMonitoringUserCredentialsResult> InvokeAsync(ListManagedClusterMonitoringUserCredentialsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListManagedClusterMonitoringUserCredentialsResult>("azure-native:containerservice/v20210901:listManagedClusterMonitoringUserCredentials", args ?? new ListManagedClusterMonitoringUserCredentialsArgs(), options.WithDefaults());

        /// <summary>
        /// The list credential result response.
        /// </summary>
        public static Output<ListManagedClusterMonitoringUserCredentialsResult> Invoke(ListManagedClusterMonitoringUserCredentialsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<ListManagedClusterMonitoringUserCredentialsResult>("azure-native:containerservice/v20210901:listManagedClusterMonitoringUserCredentials", args ?? new ListManagedClusterMonitoringUserCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListManagedClusterMonitoringUserCredentialsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        /// <summary>
        /// server fqdn type for credentials to be returned
        /// </summary>
        [Input("serverFqdn")]
        public string? ServerFqdn { get; set; }

        public ListManagedClusterMonitoringUserCredentialsArgs()
        {
        }
        public static new ListManagedClusterMonitoringUserCredentialsArgs Empty => new ListManagedClusterMonitoringUserCredentialsArgs();
    }

    public sealed class ListManagedClusterMonitoringUserCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// server fqdn type for credentials to be returned
        /// </summary>
        [Input("serverFqdn")]
        public Input<string>? ServerFqdn { get; set; }

        public ListManagedClusterMonitoringUserCredentialsInvokeArgs()
        {
        }
        public static new ListManagedClusterMonitoringUserCredentialsInvokeArgs Empty => new ListManagedClusterMonitoringUserCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class ListManagedClusterMonitoringUserCredentialsResult
    {
        /// <summary>
        /// Base64-encoded Kubernetes configuration file.
        /// </summary>
        public readonly ImmutableArray<Outputs.CredentialResultResponse> Kubeconfigs;

        [OutputConstructor]
        private ListManagedClusterMonitoringUserCredentialsResult(ImmutableArray<Outputs.CredentialResultResponse> kubeconfigs)
        {
            Kubeconfigs = kubeconfigs;
        }
    }
}
