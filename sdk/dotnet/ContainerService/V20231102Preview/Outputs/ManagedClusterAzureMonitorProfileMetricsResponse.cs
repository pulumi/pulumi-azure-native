// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20231102Preview.Outputs
{

    /// <summary>
    /// Metrics profile for the prometheus service addon
    /// </summary>
    [OutputType]
    public sealed class ManagedClusterAzureMonitorProfileMetricsResponse
    {
        /// <summary>
        /// Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Metrics. Collects OpenTelemetry metrics through auto-instrumentation of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring for an overview.
        /// </summary>
        public readonly Outputs.ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetricsResponse? AppMonitoringOpenTelemetryMetrics;
        /// <summary>
        /// Whether to enable the Prometheus collector
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Kube State Metrics for prometheus addon profile for the container service cluster
        /// </summary>
        public readonly Outputs.ManagedClusterAzureMonitorProfileKubeStateMetricsResponse? KubeStateMetrics;

        [OutputConstructor]
        private ManagedClusterAzureMonitorProfileMetricsResponse(
            Outputs.ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetricsResponse? appMonitoringOpenTelemetryMetrics,

            bool enabled,

            Outputs.ManagedClusterAzureMonitorProfileKubeStateMetricsResponse? kubeStateMetrics)
        {
            AppMonitoringOpenTelemetryMetrics = appMonitoringOpenTelemetryMetrics;
            Enabled = enabled;
            KubeStateMetrics = kubeStateMetrics;
        }
    }
}
