// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerService.V20180930Preview
{
    public static class GetOpenShiftManagedCluster
    {
        public static Task<GetOpenShiftManagedClusterResult> InvokeAsync(GetOpenShiftManagedClusterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOpenShiftManagedClusterResult>("azure-nextgen:containerservice/v20180930preview:getOpenShiftManagedCluster", args ?? new GetOpenShiftManagedClusterArgs(), options.WithVersion());
    }


    public sealed class GetOpenShiftManagedClusterArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the OpenShift managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetOpenShiftManagedClusterArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOpenShiftManagedClusterResult
    {
        /// <summary>
        /// Configuration of OpenShift cluster VMs.
        /// </summary>
        public readonly ImmutableArray<Outputs.OpenShiftManagedClusterAgentPoolProfileInvokeResponseResult> AgentPoolProfiles;
        /// <summary>
        /// Configures OpenShift authentication.
        /// </summary>
        public readonly Outputs.OpenShiftManagedClusterAuthProfileInvokeResponseResult? AuthProfile;
        /// <summary>
        /// User-specified FQDN for OpenShift API server loadbalancer internal hostname.
        /// </summary>
        public readonly string? Fqdn;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Configuration for OpenShift master VMs.
        /// </summary>
        public readonly Outputs.OpenShiftManagedClusterMasterPoolProfileInvokeResponseResult? MasterPoolProfile;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configuration for OpenShift networking.
        /// </summary>
        public readonly Outputs.NetworkProfileInvokeResponseResult? NetworkProfile;
        /// <summary>
        /// Version of OpenShift specified when creating the cluster.
        /// </summary>
        public readonly string OpenShiftVersion;
        /// <summary>
        /// Define the resource plan as required by ARM for billing purposes
        /// </summary>
        public readonly Outputs.PurchasePlanInvokeResponseResult? Plan;
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Optional user-specified FQDN for OpenShift API server.
        /// </summary>
        public readonly string? PublicHostname;
        /// <summary>
        /// Configuration for OpenShift router(s).
        /// </summary>
        public readonly ImmutableArray<Outputs.OpenShiftRouterProfileInvokeResponseResult> RouterProfiles;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetOpenShiftManagedClusterResult(
            ImmutableArray<Outputs.OpenShiftManagedClusterAgentPoolProfileInvokeResponseResult> agentPoolProfiles,

            Outputs.OpenShiftManagedClusterAuthProfileInvokeResponseResult? authProfile,

            string? fqdn,

            string id,

            string location,

            Outputs.OpenShiftManagedClusterMasterPoolProfileInvokeResponseResult? masterPoolProfile,

            string name,

            Outputs.NetworkProfileInvokeResponseResult? networkProfile,

            string openShiftVersion,

            Outputs.PurchasePlanInvokeResponseResult? plan,

            string provisioningState,

            string? publicHostname,

            ImmutableArray<Outputs.OpenShiftRouterProfileInvokeResponseResult> routerProfiles,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AgentPoolProfiles = agentPoolProfiles;
            AuthProfile = authProfile;
            Fqdn = fqdn;
            Id = id;
            Location = location;
            MasterPoolProfile = masterPoolProfile;
            Name = name;
            NetworkProfile = networkProfile;
            OpenShiftVersion = openShiftVersion;
            Plan = plan;
            ProvisioningState = provisioningState;
            PublicHostname = publicHostname;
            RouterProfiles = routerProfiles;
            Tags = tags;
            Type = type;
        }
    }
}
