// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20220402Preview
{
    public static class GetTrustedAccessRoleBinding
    {
        /// <summary>
        /// Defines binding between a resource and role
        /// </summary>
        public static Task<GetTrustedAccessRoleBindingResult> InvokeAsync(GetTrustedAccessRoleBindingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTrustedAccessRoleBindingResult>("azure-native:containerservice/v20220402preview:getTrustedAccessRoleBinding", args ?? new GetTrustedAccessRoleBindingArgs(), options.WithDefaults());

        /// <summary>
        /// Defines binding between a resource and role
        /// </summary>
        public static Output<GetTrustedAccessRoleBindingResult> Invoke(GetTrustedAccessRoleBindingInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTrustedAccessRoleBindingResult>("azure-native:containerservice/v20220402preview:getTrustedAccessRoleBinding", args ?? new GetTrustedAccessRoleBindingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrustedAccessRoleBindingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        /// <summary>
        /// The name of trusted access role binding.
        /// </summary>
        [Input("trustedAccessRoleBindingName", required: true)]
        public string TrustedAccessRoleBindingName { get; set; } = null!;

        public GetTrustedAccessRoleBindingArgs()
        {
        }
        public static new GetTrustedAccessRoleBindingArgs Empty => new GetTrustedAccessRoleBindingArgs();
    }

    public sealed class GetTrustedAccessRoleBindingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// The name of trusted access role binding.
        /// </summary>
        [Input("trustedAccessRoleBindingName", required: true)]
        public Input<string> TrustedAccessRoleBindingName { get; set; } = null!;

        public GetTrustedAccessRoleBindingInvokeArgs()
        {
        }
        public static new GetTrustedAccessRoleBindingInvokeArgs Empty => new GetTrustedAccessRoleBindingInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrustedAccessRoleBindingResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current provisioning state of trusted access role binding.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// A list of roles to bind, each item is a resource type qualified role name. For example: 'Microsoft.MachineLearningServices/workspaces/reader'.
        /// </summary>
        public readonly ImmutableArray<string> Roles;
        /// <summary>
        /// The ARM resource ID of source resource that trusted access is configured for.
        /// </summary>
        public readonly string SourceResourceId;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTrustedAccessRoleBindingResult(
            string id,

            string name,

            string provisioningState,

            ImmutableArray<string> roles,

            string sourceResourceId,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Roles = roles;
            SourceResourceId = sourceResourceId;
            SystemData = systemData;
            Type = type;
        }
    }
}
