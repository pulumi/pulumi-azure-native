// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20221102Preview
{
    public static class GetManagedCluster
    {
        /// <summary>
        /// Managed cluster.
        /// </summary>
        public static Task<GetManagedClusterResult> InvokeAsync(GetManagedClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedClusterResult>("azure-native:containerservice/v20221102preview:getManagedCluster", args ?? new GetManagedClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Managed cluster.
        /// </summary>
        public static Output<GetManagedClusterResult> Invoke(GetManagedClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedClusterResult>("azure-native:containerservice/v20221102preview:getManagedCluster", args ?? new GetManagedClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetManagedClusterArgs()
        {
        }
        public static new GetManagedClusterArgs Empty => new GetManagedClusterArgs();
    }

    public sealed class GetManagedClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetManagedClusterInvokeArgs()
        {
        }
        public static new GetManagedClusterInvokeArgs Empty => new GetManagedClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedClusterResult
    {
        /// <summary>
        /// The Azure Active Directory configuration.
        /// </summary>
        public readonly Outputs.ManagedClusterAADProfileResponse? AadProfile;
        /// <summary>
        /// The profile of managed cluster add-on.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ManagedClusterAddonProfileResponse>? AddonProfiles;
        /// <summary>
        /// The agent pool properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.ManagedClusterAgentPoolProfileResponse> AgentPoolProfiles;
        /// <summary>
        /// The access profile for managed cluster API server.
        /// </summary>
        public readonly Outputs.ManagedClusterAPIServerAccessProfileResponse? ApiServerAccessProfile;
        /// <summary>
        /// Parameters to be applied to the cluster-autoscaler when enabled
        /// </summary>
        public readonly Outputs.ManagedClusterPropertiesResponseAutoScalerProfile? AutoScalerProfile;
        /// <summary>
        /// The auto upgrade configuration.
        /// </summary>
        public readonly Outputs.ManagedClusterAutoUpgradeProfileResponse? AutoUpgradeProfile;
        /// <summary>
        /// Prometheus addon profile for the container service cluster
        /// </summary>
        public readonly Outputs.ManagedClusterAzureMonitorProfileResponse? AzureMonitorProfile;
        /// <summary>
        /// The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
        /// </summary>
        public readonly string AzurePortalFQDN;
        /// <summary>
        /// CreationData to be used to specify the source Snapshot ID if the cluster will be created/upgraded using a snapshot.
        /// </summary>
        public readonly Outputs.CreationDataResponse? CreationData;
        /// <summary>
        /// The version of Kubernetes the Managed Cluster is running.
        /// </summary>
        public readonly string CurrentKubernetesVersion;
        /// <summary>
        /// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
        /// </summary>
        public readonly bool? DisableLocalAccounts;
        /// <summary>
        /// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
        /// </summary>
        public readonly string? DiskEncryptionSetID;
        /// <summary>
        /// This cannot be updated once the Managed Cluster has been created.
        /// </summary>
        public readonly string? DnsPrefix;
        /// <summary>
        /// The default value is false. It can be enabled/disabled on creation and updating of the managed cluster. See [https://aka.ms/NamespaceARMResource](https://aka.ms/NamespaceARMResource) for more details on Namespace as a ARM Resource.
        /// </summary>
        public readonly bool? EnableNamespaceResources;
        /// <summary>
        /// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
        /// </summary>
        public readonly bool? EnablePodSecurityPolicy;
        /// <summary>
        /// Whether to enable Kubernetes Role-Based Access Control.
        /// </summary>
        public readonly bool? EnableRBAC;
        /// <summary>
        /// The extended location of the Virtual Machine.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// The FQDN of the master pool.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// This cannot be updated once the Managed Cluster has been created.
        /// </summary>
        public readonly string? FqdnSubdomain;
        /// <summary>
        /// The guardrails profile holds all the guardrails information for a given cluster
        /// </summary>
        public readonly Outputs.GuardrailsProfileResponse? GuardrailsProfile;
        /// <summary>
        /// Configurations for provisioning the cluster with HTTP proxy servers.
        /// </summary>
        public readonly Outputs.ManagedClusterHTTPProxyConfigResponse? HttpProxyConfig;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identity of the managed cluster, if configured.
        /// </summary>
        public readonly Outputs.ManagedClusterIdentityResponse? Identity;
        /// <summary>
        /// Identities associated with the cluster.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.UserAssignedIdentityResponse>? IdentityProfile;
        /// <summary>
        /// Ingress profile for the managed cluster.
        /// </summary>
        public readonly Outputs.ManagedClusterIngressProfileResponse? IngressProfile;
        /// <summary>
        /// When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -&gt; 1.15.x or 1.15.x -&gt; 1.16.x are allowed, however 1.14.x -&gt; 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
        /// </summary>
        public readonly string? KubernetesVersion;
        /// <summary>
        /// The profile for Linux VMs in the Managed Cluster.
        /// </summary>
        public readonly Outputs.ContainerServiceLinuxProfileResponse? LinuxProfile;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The max number of agent pools for the managed cluster.
        /// </summary>
        public readonly int MaxAgentPools;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The network configuration profile.
        /// </summary>
        public readonly Outputs.ContainerServiceNetworkProfileResponse? NetworkProfile;
        /// <summary>
        /// The name of the resource group containing agent pool nodes.
        /// </summary>
        public readonly string? NodeResourceGroup;
        /// <summary>
        /// The node resource group configuration profile.
        /// </summary>
        public readonly Outputs.ManagedClusterNodeResourceGroupProfileResponse? NodeResourceGroupProfile;
        /// <summary>
        /// The OIDC issuer profile of the Managed Cluster.
        /// </summary>
        public readonly Outputs.ManagedClusterOIDCIssuerProfileResponse? OidcIssuerProfile;
        /// <summary>
        /// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.
        /// </summary>
        public readonly Outputs.ManagedClusterPodIdentityProfileResponse? PodIdentityProfile;
        /// <summary>
        /// The Power State of the cluster.
        /// </summary>
        public readonly Outputs.PowerStateResponse PowerState;
        /// <summary>
        /// The FQDN of private cluster.
        /// </summary>
        public readonly string PrivateFQDN;
        /// <summary>
        /// Private link resources associated with the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateLinkResourceResponse> PrivateLinkResources;
        /// <summary>
        /// The current provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Allow or deny public network access for AKS
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Security profile for the managed cluster.
        /// </summary>
        public readonly Outputs.ManagedClusterSecurityProfileResponse? SecurityProfile;
        /// <summary>
        /// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
        /// </summary>
        public readonly Outputs.ManagedClusterServicePrincipalProfileResponse? ServicePrincipalProfile;
        /// <summary>
        /// The managed cluster SKU.
        /// </summary>
        public readonly Outputs.ManagedClusterSKUResponse? Sku;
        /// <summary>
        /// Storage profile for the managed cluster.
        /// </summary>
        public readonly Outputs.ManagedClusterStorageProfileResponse? StorageProfile;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The profile for Windows VMs in the Managed Cluster.
        /// </summary>
        public readonly Outputs.ManagedClusterWindowsProfileResponse? WindowsProfile;
        /// <summary>
        /// Workload Auto-scaler profile for the managed cluster.
        /// </summary>
        public readonly Outputs.ManagedClusterWorkloadAutoScalerProfileResponse? WorkloadAutoScalerProfile;

        [OutputConstructor]
        private GetManagedClusterResult(
            Outputs.ManagedClusterAADProfileResponse? aadProfile,

            ImmutableDictionary<string, Outputs.ManagedClusterAddonProfileResponse>? addonProfiles,

            ImmutableArray<Outputs.ManagedClusterAgentPoolProfileResponse> agentPoolProfiles,

            Outputs.ManagedClusterAPIServerAccessProfileResponse? apiServerAccessProfile,

            Outputs.ManagedClusterPropertiesResponseAutoScalerProfile? autoScalerProfile,

            Outputs.ManagedClusterAutoUpgradeProfileResponse? autoUpgradeProfile,

            Outputs.ManagedClusterAzureMonitorProfileResponse? azureMonitorProfile,

            string azurePortalFQDN,

            Outputs.CreationDataResponse? creationData,

            string currentKubernetesVersion,

            bool? disableLocalAccounts,

            string? diskEncryptionSetID,

            string? dnsPrefix,

            bool? enableNamespaceResources,

            bool? enablePodSecurityPolicy,

            bool? enableRBAC,

            Outputs.ExtendedLocationResponse? extendedLocation,

            string fqdn,

            string? fqdnSubdomain,

            Outputs.GuardrailsProfileResponse? guardrailsProfile,

            Outputs.ManagedClusterHTTPProxyConfigResponse? httpProxyConfig,

            string id,

            Outputs.ManagedClusterIdentityResponse? identity,

            ImmutableDictionary<string, Outputs.UserAssignedIdentityResponse>? identityProfile,

            Outputs.ManagedClusterIngressProfileResponse? ingressProfile,

            string? kubernetesVersion,

            Outputs.ContainerServiceLinuxProfileResponse? linuxProfile,

            string location,

            int maxAgentPools,

            string name,

            Outputs.ContainerServiceNetworkProfileResponse? networkProfile,

            string? nodeResourceGroup,

            Outputs.ManagedClusterNodeResourceGroupProfileResponse? nodeResourceGroupProfile,

            Outputs.ManagedClusterOIDCIssuerProfileResponse? oidcIssuerProfile,

            Outputs.ManagedClusterPodIdentityProfileResponse? podIdentityProfile,

            Outputs.PowerStateResponse powerState,

            string privateFQDN,

            ImmutableArray<Outputs.PrivateLinkResourceResponse> privateLinkResources,

            string provisioningState,

            string? publicNetworkAccess,

            Outputs.ManagedClusterSecurityProfileResponse? securityProfile,

            Outputs.ManagedClusterServicePrincipalProfileResponse? servicePrincipalProfile,

            Outputs.ManagedClusterSKUResponse? sku,

            Outputs.ManagedClusterStorageProfileResponse? storageProfile,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.ManagedClusterWindowsProfileResponse? windowsProfile,

            Outputs.ManagedClusterWorkloadAutoScalerProfileResponse? workloadAutoScalerProfile)
        {
            AadProfile = aadProfile;
            AddonProfiles = addonProfiles;
            AgentPoolProfiles = agentPoolProfiles;
            ApiServerAccessProfile = apiServerAccessProfile;
            AutoScalerProfile = autoScalerProfile;
            AutoUpgradeProfile = autoUpgradeProfile;
            AzureMonitorProfile = azureMonitorProfile;
            AzurePortalFQDN = azurePortalFQDN;
            CreationData = creationData;
            CurrentKubernetesVersion = currentKubernetesVersion;
            DisableLocalAccounts = disableLocalAccounts;
            DiskEncryptionSetID = diskEncryptionSetID;
            DnsPrefix = dnsPrefix;
            EnableNamespaceResources = enableNamespaceResources;
            EnablePodSecurityPolicy = enablePodSecurityPolicy;
            EnableRBAC = enableRBAC;
            ExtendedLocation = extendedLocation;
            Fqdn = fqdn;
            FqdnSubdomain = fqdnSubdomain;
            GuardrailsProfile = guardrailsProfile;
            HttpProxyConfig = httpProxyConfig;
            Id = id;
            Identity = identity;
            IdentityProfile = identityProfile;
            IngressProfile = ingressProfile;
            KubernetesVersion = kubernetesVersion;
            LinuxProfile = linuxProfile;
            Location = location;
            MaxAgentPools = maxAgentPools;
            Name = name;
            NetworkProfile = networkProfile;
            NodeResourceGroup = nodeResourceGroup;
            NodeResourceGroupProfile = nodeResourceGroupProfile;
            OidcIssuerProfile = oidcIssuerProfile;
            PodIdentityProfile = podIdentityProfile;
            PowerState = powerState;
            PrivateFQDN = privateFQDN;
            PrivateLinkResources = privateLinkResources;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            SecurityProfile = securityProfile;
            ServicePrincipalProfile = servicePrincipalProfile;
            Sku = sku;
            StorageProfile = storageProfile;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            WindowsProfile = windowsProfile;
            WorkloadAutoScalerProfile = workloadAutoScalerProfile;
        }
    }
}
