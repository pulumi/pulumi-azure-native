// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService
{
    /// <summary>
    /// Deployment Safeguards
    /// 
    /// Uses Azure REST API version 2025-04-02-preview.
    /// 
    /// Other available API versions: 2025-04-01, 2025-05-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:containerservice:DeploymentSafeguard")]
    public partial class DeploymentSafeguard : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        [Output("eTag")]
        public Output<string> ETag { get; private set; } = null!;

        /// <summary>
        /// User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards
        /// </summary>
        [Output("excludedNamespaces")]
        public Output<ImmutableArray<string>> ExcludedNamespaces { get; private set; } = null!;

        /// <summary>
        /// The deployment safeguards level. Possible values are Warn and Enforce
        /// </summary>
        [Output("level")]
        public Output<string> Level { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning State
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// System defined list of namespaces excluded from Deployment Safeguards. These are determined by the underlying provider (such as AKS), and cannot be changed. Deployments in these namespaces will not be checked
        /// </summary>
        [Output("systemExcludedNamespaces")]
        public Output<ImmutableArray<string>> SystemExcludedNamespaces { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DeploymentSafeguard resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DeploymentSafeguard(string name, DeploymentSafeguardArgs args, CustomResourceOptions? options = null)
            : base("azure-native:containerservice:DeploymentSafeguard", name, args ?? new DeploymentSafeguardArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DeploymentSafeguard(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:containerservice:DeploymentSafeguard", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20250401:DeploymentSafeguard" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20250402preview:DeploymentSafeguard" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20250502preview:DeploymentSafeguard" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DeploymentSafeguard resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DeploymentSafeguard Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DeploymentSafeguard(name, id, options);
        }
    }

    public sealed class DeploymentSafeguardArgs : global::Pulumi.ResourceArgs
    {
        [Input("excludedNamespaces")]
        private InputList<string>? _excludedNamespaces;

        /// <summary>
        /// User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards
        /// </summary>
        public InputList<string> ExcludedNamespaces
        {
            get => _excludedNamespaces ?? (_excludedNamespaces = new InputList<string>());
            set => _excludedNamespaces = value;
        }

        /// <summary>
        /// The deployment safeguards level. Possible values are Warn and Enforce
        /// </summary>
        [Input("level", required: true)]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.DeploymentSafeguardsLevel> Level { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        public DeploymentSafeguardArgs()
        {
        }
        public static new DeploymentSafeguardArgs Empty => new DeploymentSafeguardArgs();
    }
}
