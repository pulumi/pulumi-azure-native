// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20250102Preview.Outputs
{

    /// <summary>
    /// Microsoft Defender settings for security gating, validates container images eligibility for deployment based on Defender for Containers security findings. Using Admission Controller, it either audits or prevents the deployment of images that do not meet security standards.
    /// </summary>
    [OutputType]
    public sealed class ManagedClusterSecurityProfileDefenderSecurityGatingResponse
    {
        /// <summary>
        /// In use only while registry access granted by secret rather than managed identity. Set whether to grant the Defender gating agent access to the cluster's secrets for pulling images from registries. If secret access is denied and the registry requires pull secrets, the add-on will not perform any image validation. Default value is false.
        /// </summary>
        public readonly bool? AllowSecretAccess;
        /// <summary>
        /// Whether to enable Defender security gating. When enabled, the gating feature will scan container images and audit or block the deployment of images that do not meet security standards according to the configured security rules.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// List of identities that the admission controller will make use of in order to pull security artifacts from the registry. These are the same identities used by the cluster to pull container images. Each identity provided should have federated identity credential attached to it.
        /// </summary>
        public readonly ImmutableArray<Outputs.ManagedClusterSecurityProfileDefenderSecurityGatingResponseIdentities> Identities;

        [OutputConstructor]
        private ManagedClusterSecurityProfileDefenderSecurityGatingResponse(
            bool? allowSecretAccess,

            bool? enabled,

            ImmutableArray<Outputs.ManagedClusterSecurityProfileDefenderSecurityGatingResponseIdentities> identities)
        {
            AllowSecretAccess = allowSecretAccess;
            Enabled = enabled;
            Identities = identities;
        }
    }
}
