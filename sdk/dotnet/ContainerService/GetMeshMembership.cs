// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService
{
    public static class GetMeshMembership
    {
        /// <summary>
        /// Mesh membership of a managed cluster.
        /// 
        /// Uses Azure REST API version 2025-08-02-preview.
        /// </summary>
        public static Task<GetMeshMembershipResult> InvokeAsync(GetMeshMembershipArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMeshMembershipResult>("azure-native:containerservice:getMeshMembership", args ?? new GetMeshMembershipArgs(), options.WithDefaults());

        /// <summary>
        /// Mesh membership of a managed cluster.
        /// 
        /// Uses Azure REST API version 2025-08-02-preview.
        /// </summary>
        public static Output<GetMeshMembershipResult> Invoke(GetMeshMembershipInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMeshMembershipResult>("azure-native:containerservice:getMeshMembership", args ?? new GetMeshMembershipInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Mesh membership of a managed cluster.
        /// 
        /// Uses Azure REST API version 2025-08-02-preview.
        /// </summary>
        public static Output<GetMeshMembershipResult> Invoke(GetMeshMembershipInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMeshMembershipResult>("azure-native:containerservice:getMeshMembership", args ?? new GetMeshMembershipInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMeshMembershipArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the mesh membership.
        /// </summary>
        [Input("meshMembershipName", required: true)]
        public string MeshMembershipName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetMeshMembershipArgs()
        {
        }
        public static new GetMeshMembershipArgs Empty => new GetMeshMembershipArgs();
    }

    public sealed class GetMeshMembershipInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the mesh membership.
        /// </summary>
        [Input("meshMembershipName", required: true)]
        public Input<string> MeshMembershipName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetMeshMembershipInvokeArgs()
        {
        }
        public static new GetMeshMembershipInvokeArgs Empty => new GetMeshMembershipInvokeArgs();
    }


    [OutputType]
    public sealed class GetMeshMembershipResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal eTag convention.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        /// </summary>
        public readonly string? ManagedBy;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Mesh membership properties of a managed cluster.
        /// </summary>
        public readonly Outputs.MeshMembershipPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMeshMembershipResult(
            string azureApiVersion,

            string eTag,

            string id,

            string? managedBy,

            string name,

            Outputs.MeshMembershipPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            ETag = eTag;
            Id = id;
            ManagedBy = managedBy;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
