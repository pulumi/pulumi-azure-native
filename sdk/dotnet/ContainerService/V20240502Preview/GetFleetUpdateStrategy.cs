// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20240502Preview
{
    public static class GetFleetUpdateStrategy
    {
        /// <summary>
        /// Get a FleetUpdateStrategy
        /// </summary>
        public static Task<GetFleetUpdateStrategyResult> InvokeAsync(GetFleetUpdateStrategyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetUpdateStrategyResult>("azure-native:containerservice/v20240502preview:getFleetUpdateStrategy", args ?? new GetFleetUpdateStrategyArgs(), options.WithDefaults());

        /// <summary>
        /// Get a FleetUpdateStrategy
        /// </summary>
        public static Output<GetFleetUpdateStrategyResult> Invoke(GetFleetUpdateStrategyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetUpdateStrategyResult>("azure-native:containerservice/v20240502preview:getFleetUpdateStrategy", args ?? new GetFleetUpdateStrategyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetUpdateStrategyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Fleet resource.
        /// </summary>
        [Input("fleetName", required: true)]
        public string FleetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the UpdateStrategy resource.
        /// </summary>
        [Input("updateStrategyName", required: true)]
        public string UpdateStrategyName { get; set; } = null!;

        public GetFleetUpdateStrategyArgs()
        {
        }
        public static new GetFleetUpdateStrategyArgs Empty => new GetFleetUpdateStrategyArgs();
    }

    public sealed class GetFleetUpdateStrategyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Fleet resource.
        /// </summary>
        [Input("fleetName", required: true)]
        public Input<string> FleetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the UpdateStrategy resource.
        /// </summary>
        [Input("updateStrategyName", required: true)]
        public Input<string> UpdateStrategyName { get; set; } = null!;

        public GetFleetUpdateStrategyInvokeArgs()
        {
        }
        public static new GetFleetUpdateStrategyInvokeArgs Empty => new GetFleetUpdateStrategyInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetUpdateStrategyResult
    {
        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the UpdateStrategy resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Defines the update sequence of the clusters.
        /// </summary>
        public readonly Outputs.UpdateRunStrategyResponse Strategy;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFleetUpdateStrategyResult(
            string eTag,

            string id,

            string name,

            string provisioningState,

            Outputs.UpdateRunStrategyResponse strategy,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ETag = eTag;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Strategy = strategy;
            SystemData = systemData;
            Type = type;
        }
    }
}
