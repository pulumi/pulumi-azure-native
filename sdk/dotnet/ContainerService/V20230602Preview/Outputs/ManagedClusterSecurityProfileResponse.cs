// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20230602Preview.Outputs
{

    /// <summary>
    /// Security profile for the container service cluster.
    /// </summary>
    [OutputType]
    public sealed class ManagedClusterSecurityProfileResponse
    {
        /// <summary>
        /// Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
        /// </summary>
        public readonly Outputs.AzureKeyVaultKmsResponse? AzureKeyVaultKms;
        /// <summary>
        /// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the Custom CA Trust feature enabled. For more information see [Custom CA Trust Certificates](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority)
        /// </summary>
        public readonly ImmutableArray<string> CustomCATrustCertificates;
        /// <summary>
        /// Microsoft Defender settings for the security profile.
        /// </summary>
        public readonly Outputs.ManagedClusterSecurityProfileDefenderResponse? Defender;
        /// <summary>
        /// Image Cleaner settings for the security profile.
        /// </summary>
        public readonly Outputs.ManagedClusterSecurityProfileImageCleanerResponse? ImageCleaner;
        /// <summary>
        /// Image integrity is a feature that works with Azure Policy to verify image integrity by signature. This will not have any effect unless Azure Policy is applied to enforce image signatures. See https://aka.ms/aks/image-integrity for how to use this feature via policy.
        /// </summary>
        public readonly Outputs.ManagedClusterSecurityProfileImageIntegrityResponse? ImageIntegrity;
        /// <summary>
        /// [Node Restriction](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#noderestriction) settings for the security profile.
        /// </summary>
        public readonly Outputs.ManagedClusterSecurityProfileNodeRestrictionResponse? NodeRestriction;
        /// <summary>
        /// Workload identity settings for the security profile. Workload identity enables Kubernetes applications to access Azure cloud resources securely with Azure AD. See https://aka.ms/aks/wi for more details.
        /// </summary>
        public readonly Outputs.ManagedClusterSecurityProfileWorkloadIdentityResponse? WorkloadIdentity;

        [OutputConstructor]
        private ManagedClusterSecurityProfileResponse(
            Outputs.AzureKeyVaultKmsResponse? azureKeyVaultKms,

            ImmutableArray<string> customCATrustCertificates,

            Outputs.ManagedClusterSecurityProfileDefenderResponse? defender,

            Outputs.ManagedClusterSecurityProfileImageCleanerResponse? imageCleaner,

            Outputs.ManagedClusterSecurityProfileImageIntegrityResponse? imageIntegrity,

            Outputs.ManagedClusterSecurityProfileNodeRestrictionResponse? nodeRestriction,

            Outputs.ManagedClusterSecurityProfileWorkloadIdentityResponse? workloadIdentity)
        {
            AzureKeyVaultKms = azureKeyVaultKms;
            CustomCATrustCertificates = customCATrustCertificates;
            Defender = defender;
            ImageCleaner = imageCleaner;
            ImageIntegrity = imageIntegrity;
            NodeRestriction = nodeRestriction;
            WorkloadIdentity = workloadIdentity;
        }
    }
}
