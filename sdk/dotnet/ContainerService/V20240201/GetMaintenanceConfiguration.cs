// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20240201
{
    public static class GetMaintenanceConfiguration
    {
        /// <summary>
        /// See [planned maintenance](https://docs.microsoft.com/azure/aks/planned-maintenance) for more information about planned maintenance.
        /// </summary>
        public static Task<GetMaintenanceConfigurationResult> InvokeAsync(GetMaintenanceConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMaintenanceConfigurationResult>("azure-native:containerservice/v20240201:getMaintenanceConfiguration", args ?? new GetMaintenanceConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// See [planned maintenance](https://docs.microsoft.com/azure/aks/planned-maintenance) for more information about planned maintenance.
        /// </summary>
        public static Output<GetMaintenanceConfigurationResult> Invoke(GetMaintenanceConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaintenanceConfigurationResult>("azure-native:containerservice/v20240201:getMaintenanceConfiguration", args ?? new GetMaintenanceConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaintenanceConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the maintenance configuration.
        /// </summary>
        [Input("configName", required: true)]
        public string ConfigName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetMaintenanceConfigurationArgs()
        {
        }
        public static new GetMaintenanceConfigurationArgs Empty => new GetMaintenanceConfigurationArgs();
    }

    public sealed class GetMaintenanceConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the maintenance configuration.
        /// </summary>
        [Input("configName", required: true)]
        public Input<string> ConfigName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetMaintenanceConfigurationInvokeArgs()
        {
        }
        public static new GetMaintenanceConfigurationInvokeArgs Empty => new GetMaintenanceConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetMaintenanceConfigurationResult
    {
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Maintenance window for the maintenance configuration.
        /// </summary>
        public readonly Outputs.MaintenanceWindowResponse? MaintenanceWindow;
        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Time slots on which upgrade is not allowed.
        /// </summary>
        public readonly ImmutableArray<Outputs.TimeSpanResponse> NotAllowedTime;
        /// <summary>
        /// The system metadata relating to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// If two array entries specify the same day of the week, the applied configuration is the union of times in both entries.
        /// </summary>
        public readonly ImmutableArray<Outputs.TimeInWeekResponse> TimeInWeek;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMaintenanceConfigurationResult(
            string id,

            Outputs.MaintenanceWindowResponse? maintenanceWindow,

            string name,

            ImmutableArray<Outputs.TimeSpanResponse> notAllowedTime,

            Outputs.SystemDataResponse systemData,

            ImmutableArray<Outputs.TimeInWeekResponse> timeInWeek,

            string type)
        {
            Id = id;
            MaintenanceWindow = maintenanceWindow;
            Name = name;
            NotAllowedTime = notAllowedTime;
            SystemData = systemData;
            TimeInWeek = timeInWeek;
            Type = type;
        }
    }
}
