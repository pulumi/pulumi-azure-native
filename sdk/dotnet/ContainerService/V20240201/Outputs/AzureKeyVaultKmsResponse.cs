// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20240201.Outputs
{

    /// <summary>
    /// Azure Key Vault key management service settings for the security profile.
    /// </summary>
    [OutputType]
    public sealed class AzureKeyVaultKmsResponse
    {
        /// <summary>
        /// Whether to enable Azure Key Vault key management service. The default is false.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.
        /// </summary>
        public readonly string? KeyId;
        /// <summary>
        /// Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link. The default value is `Public`.
        /// </summary>
        public readonly string? KeyVaultNetworkAccess;
        /// <summary>
        /// Resource ID of key vault. When keyVaultNetworkAccess is `Private`, this field is required and must be a valid resource ID. When keyVaultNetworkAccess is `Public`, leave the field empty.
        /// </summary>
        public readonly string? KeyVaultResourceId;

        [OutputConstructor]
        private AzureKeyVaultKmsResponse(
            bool? enabled,

            string? keyId,

            string? keyVaultNetworkAccess,

            string? keyVaultResourceId)
        {
            Enabled = enabled;
            KeyId = keyId;
            KeyVaultNetworkAccess = keyVaultNetworkAccess;
            KeyVaultResourceId = keyVaultResourceId;
        }
    }
}
