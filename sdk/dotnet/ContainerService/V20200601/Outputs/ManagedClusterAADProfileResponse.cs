// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerService.V20200601.Outputs
{

    [OutputType]
    public sealed class ManagedClusterAADProfileResponse
    {
        /// <summary>
        /// AAD group object IDs that will have admin role of the cluster.
        /// </summary>
        public readonly ImmutableArray<string> AdminGroupObjectIDs;
        /// <summary>
        /// The client AAD application ID.
        /// </summary>
        public readonly string? ClientAppID;
        /// <summary>
        /// Whether to enable Azure RBAC for Kubernetes authorization.
        /// </summary>
        public readonly bool? EnableAzureRBAC;
        /// <summary>
        /// Whether to enable managed AAD.
        /// </summary>
        public readonly bool? Managed;
        /// <summary>
        /// The server AAD application ID.
        /// </summary>
        public readonly string? ServerAppID;
        /// <summary>
        /// The server AAD application secret.
        /// </summary>
        public readonly string? ServerAppSecret;
        /// <summary>
        /// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
        /// </summary>
        public readonly string? TenantID;

        [OutputConstructor]
        private ManagedClusterAADProfileResponse(
            ImmutableArray<string> adminGroupObjectIDs,

            string? clientAppID,

            bool? enableAzureRBAC,

            bool? managed,

            string? serverAppID,

            string? serverAppSecret,

            string? tenantID)
        {
            AdminGroupObjectIDs = adminGroupObjectIDs;
            ClientAppID = clientAppID;
            EnableAzureRBAC = enableAzureRBAC;
            Managed = managed;
            ServerAppID = serverAppID;
            ServerAppSecret = serverAppSecret;
            TenantID = tenantID;
        }
    }
}
