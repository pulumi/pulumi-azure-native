// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ContainerService.V20170701.Outputs
{

    [OutputType]
    public sealed class ContainerServicePropertiesResponseResult
    {
        /// <summary>
        /// Properties of the agent pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContainerServiceAgentPoolProfileResponseResult> AgentPoolProfiles;
        /// <summary>
        /// Properties to configure a custom container service cluster.
        /// </summary>
        public readonly Outputs.ContainerServiceCustomProfileResponseResult? CustomProfile;
        /// <summary>
        /// Profile for diagnostics in the container service cluster.
        /// </summary>
        public readonly Outputs.ContainerServiceDiagnosticsProfileResponseResult? DiagnosticsProfile;
        /// <summary>
        /// Profile for Linux VMs in the container service cluster.
        /// </summary>
        public readonly Outputs.ContainerServiceLinuxProfileResponseResult LinuxProfile;
        /// <summary>
        /// Profile for the container service master.
        /// </summary>
        public readonly Outputs.ContainerServiceMasterProfileResponseResult MasterProfile;
        /// <summary>
        /// Profile for the container service orchestrator.
        /// </summary>
        public readonly Outputs.ContainerServiceOrchestratorProfileResponseResult OrchestratorProfile;
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
        /// </summary>
        public readonly Outputs.ContainerServiceServicePrincipalProfileResponseResult? ServicePrincipalProfile;
        /// <summary>
        /// Profile for Windows VMs in the container service cluster.
        /// </summary>
        public readonly Outputs.ContainerServiceWindowsProfileResponseResult? WindowsProfile;

        [OutputConstructor]
        private ContainerServicePropertiesResponseResult(
            ImmutableArray<Outputs.ContainerServiceAgentPoolProfileResponseResult> agentPoolProfiles,

            Outputs.ContainerServiceCustomProfileResponseResult? customProfile,

            Outputs.ContainerServiceDiagnosticsProfileResponseResult? diagnosticsProfile,

            Outputs.ContainerServiceLinuxProfileResponseResult linuxProfile,

            Outputs.ContainerServiceMasterProfileResponseResult masterProfile,

            Outputs.ContainerServiceOrchestratorProfileResponseResult orchestratorProfile,

            string provisioningState,

            Outputs.ContainerServiceServicePrincipalProfileResponseResult? servicePrincipalProfile,

            Outputs.ContainerServiceWindowsProfileResponseResult? windowsProfile)
        {
            AgentPoolProfiles = agentPoolProfiles;
            CustomProfile = customProfile;
            DiagnosticsProfile = diagnosticsProfile;
            LinuxProfile = linuxProfile;
            MasterProfile = masterProfile;
            OrchestratorProfile = orchestratorProfile;
            ProvisioningState = provisioningState;
            ServicePrincipalProfile = servicePrincipalProfile;
            WindowsProfile = windowsProfile;
        }
    }
}
