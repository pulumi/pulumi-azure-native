// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.Inputs
{

    /// <summary>
    /// The properties of JWTAuthenticator. For details on how to configure the properties of a JWT authenticator, please refer to the Kubernetes documentation: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#using-authentication-configuration. Please note that not all fields available in the Kubernetes documentation are supported by AKS. For troubleshooting, please see https://aka.ms/aks-external-issuers-docs.
    /// </summary>
    public sealed class JWTAuthenticatorPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The mappings that define how user attributes are extracted from the token claims.
        /// </summary>
        [Input("claimMappings", required: true)]
        public Input<Inputs.JWTAuthenticatorClaimMappingsArgs> ClaimMappings { get; set; } = null!;

        [Input("claimValidationRules")]
        private InputList<Inputs.JWTAuthenticatorValidationRuleArgs>? _claimValidationRules;

        /// <summary>
        /// The rules that are applied to validate token claims to authenticate users. All the expressions must evaluate to true for validation to succeed.
        /// </summary>
        public InputList<Inputs.JWTAuthenticatorValidationRuleArgs> ClaimValidationRules
        {
            get => _claimValidationRules ?? (_claimValidationRules = new InputList<Inputs.JWTAuthenticatorValidationRuleArgs>());
            set => _claimValidationRules = value;
        }

        /// <summary>
        /// The JWT OIDC issuer details.
        /// </summary>
        [Input("issuer", required: true)]
        public Input<Inputs.JWTAuthenticatorIssuerArgs> Issuer { get; set; } = null!;

        [Input("userValidationRules")]
        private InputList<Inputs.JWTAuthenticatorValidationRuleArgs>? _userValidationRules;

        /// <summary>
        /// The rules that are applied to the mapped user before completing authentication. All the expressions must evaluate to true for validation to succeed.
        /// </summary>
        public InputList<Inputs.JWTAuthenticatorValidationRuleArgs> UserValidationRules
        {
            get => _userValidationRules ?? (_userValidationRules = new InputList<Inputs.JWTAuthenticatorValidationRuleArgs>());
            set => _userValidationRules = value;
        }

        public JWTAuthenticatorPropertiesArgs()
        {
        }
        public static new JWTAuthenticatorPropertiesArgs Empty => new JWTAuthenticatorPropertiesArgs();
    }
}
