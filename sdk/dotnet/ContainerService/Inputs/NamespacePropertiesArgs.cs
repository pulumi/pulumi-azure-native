// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.Inputs
{

    /// <summary>
    /// Properties of a namespace managed by ARM
    /// </summary>
    public sealed class NamespacePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action if Kubernetes namespace with same name already exists.
        /// </summary>
        [Input("adoptionPolicy")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.AdoptionPolicy>? AdoptionPolicy { get; set; }

        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// The annotations of managed namespace.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// The default network policy enforced upon the namespace. Customers can have other Kubernetes network policy objects under the namespace. All the network policies will be enforced.
        /// </summary>
        [Input("defaultNetworkPolicy")]
        public Input<Inputs.NetworkPoliciesArgs>? DefaultNetworkPolicy { get; set; }

        /// <summary>
        /// The default resource quota enforced upon the namespace. Customers can have other Kubernetes resource quota objects under the namespace. All the resource quotas will be enforced.
        /// </summary>
        [Input("defaultResourceQuota")]
        public Input<Inputs.ResourceQuotaArgs>? DefaultResourceQuota { get; set; }

        /// <summary>
        /// Delete options of a namespace.
        /// </summary>
        [Input("deletePolicy")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.DeletePolicy>? DeletePolicy { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The labels of managed namespace.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        public NamespacePropertiesArgs()
        {
        }
        public static new NamespacePropertiesArgs Empty => new NamespacePropertiesArgs();
    }
}
