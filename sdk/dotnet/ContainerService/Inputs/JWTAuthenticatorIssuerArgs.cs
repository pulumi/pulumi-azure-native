// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.Inputs
{

    /// <summary>
    /// The OIDC issuer details for JWTAuthenticator.
    /// </summary>
    public sealed class JWTAuthenticatorIssuerArgs : global::Pulumi.ResourceArgs
    {
        [Input("audiences", required: true)]
        private InputList<string>? _audiences;

        /// <summary>
        /// The set of acceptable audiences the JWT must be issued to. At least one is required. When multiple is set, AudienceMatchPolicy is used in API Server configuration.
        /// </summary>
        public InputList<string> Audiences
        {
            get => _audiences ?? (_audiences = new InputList<string>());
            set => _audiences = value;
        }

        /// <summary>
        /// The issuer URL. The URL must begin with the scheme https and cannot contain a query string or fragment. This must match the "iss" claim in the presented JWT, and the issuer returned from discovery.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public JWTAuthenticatorIssuerArgs()
        {
        }
        public static new JWTAuthenticatorIssuerArgs Empty => new JWTAuthenticatorIssuerArgs();
    }
}
