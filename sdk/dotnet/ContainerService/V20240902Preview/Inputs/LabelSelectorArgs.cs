// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20240902Preview.Inputs
{

    /// <summary>
    /// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
    /// </summary>
    public sealed class LabelSelectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("matchExpressions")]
        private InputList<Inputs.LabelSelectorRequirementArgs>? _matchExpressions;

        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        public InputList<Inputs.LabelSelectorRequirementArgs> MatchExpressions
        {
            get => _matchExpressions ?? (_matchExpressions = new InputList<Inputs.LabelSelectorRequirementArgs>());
            set => _matchExpressions = value;
        }

        [Input("matchLabels")]
        private InputList<string>? _matchLabels;

        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements are ANDed.
        /// </summary>
        public InputList<string> MatchLabels
        {
            get => _matchLabels ?? (_matchLabels = new InputList<string>());
            set => _matchLabels = value;
        }

        public LabelSelectorArgs()
        {
        }
        public static new LabelSelectorArgs Empty => new LabelSelectorArgs();
    }
}
