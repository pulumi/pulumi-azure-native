// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20231001
{
    /// <summary>
    /// Managed cluster.
    /// </summary>
    [AzureNativeResourceType("azure-native:containerservice/v20231001:ManagedCluster")]
    public partial class ManagedCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure Active Directory configuration.
        /// </summary>
        [Output("aadProfile")]
        public Output<Outputs.ManagedClusterAADProfileResponse?> AadProfile { get; private set; } = null!;

        /// <summary>
        /// The profile of managed cluster add-on.
        /// </summary>
        [Output("addonProfiles")]
        public Output<ImmutableDictionary<string, Outputs.ManagedClusterAddonProfileResponse>?> AddonProfiles { get; private set; } = null!;

        /// <summary>
        /// The agent pool properties.
        /// </summary>
        [Output("agentPoolProfiles")]
        public Output<ImmutableArray<Outputs.ManagedClusterAgentPoolProfileResponse>> AgentPoolProfiles { get; private set; } = null!;

        /// <summary>
        /// The access profile for managed cluster API server.
        /// </summary>
        [Output("apiServerAccessProfile")]
        public Output<Outputs.ManagedClusterAPIServerAccessProfileResponse?> ApiServerAccessProfile { get; private set; } = null!;

        /// <summary>
        /// Parameters to be applied to the cluster-autoscaler when enabled
        /// </summary>
        [Output("autoScalerProfile")]
        public Output<Outputs.ManagedClusterPropertiesResponseAutoScalerProfile?> AutoScalerProfile { get; private set; } = null!;

        /// <summary>
        /// The auto upgrade configuration.
        /// </summary>
        [Output("autoUpgradeProfile")]
        public Output<Outputs.ManagedClusterAutoUpgradeProfileResponse?> AutoUpgradeProfile { get; private set; } = null!;

        /// <summary>
        /// Azure Monitor addon profiles for monitoring the managed cluster.
        /// </summary>
        [Output("azureMonitorProfile")]
        public Output<Outputs.ManagedClusterAzureMonitorProfileResponse?> AzureMonitorProfile { get; private set; } = null!;

        /// <summary>
        /// The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
        /// </summary>
        [Output("azurePortalFQDN")]
        public Output<string> AzurePortalFQDN { get; private set; } = null!;

        /// <summary>
        /// If kubernetesVersion was a fully specified version &lt;major.minor.patch&gt;, this field will be exactly equal to it. If kubernetesVersion was &lt;major.minor&gt;, this field will contain the full &lt;major.minor.patch&gt; version being used.
        /// </summary>
        [Output("currentKubernetesVersion")]
        public Output<string> CurrentKubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
        /// </summary>
        [Output("disableLocalAccounts")]
        public Output<bool?> DisableLocalAccounts { get; private set; } = null!;

        /// <summary>
        /// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
        /// </summary>
        [Output("diskEncryptionSetID")]
        public Output<string?> DiskEncryptionSetID { get; private set; } = null!;

        /// <summary>
        /// This cannot be updated once the Managed Cluster has been created.
        /// </summary>
        [Output("dnsPrefix")]
        public Output<string?> DnsPrefix { get; private set; } = null!;

        /// <summary>
        /// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
        /// </summary>
        [Output("enablePodSecurityPolicy")]
        public Output<bool?> EnablePodSecurityPolicy { get; private set; } = null!;

        /// <summary>
        /// Whether to enable Kubernetes Role-Based Access Control.
        /// </summary>
        [Output("enableRBAC")]
        public Output<bool?> EnableRBAC { get; private set; } = null!;

        /// <summary>
        /// The extended location of the Virtual Machine.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse?> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The FQDN of the master pool.
        /// </summary>
        [Output("fqdn")]
        public Output<string> Fqdn { get; private set; } = null!;

        /// <summary>
        /// This cannot be updated once the Managed Cluster has been created.
        /// </summary>
        [Output("fqdnSubdomain")]
        public Output<string?> FqdnSubdomain { get; private set; } = null!;

        /// <summary>
        /// Configurations for provisioning the cluster with HTTP proxy servers.
        /// </summary>
        [Output("httpProxyConfig")]
        public Output<Outputs.ManagedClusterHTTPProxyConfigResponse?> HttpProxyConfig { get; private set; } = null!;

        /// <summary>
        /// The identity of the managed cluster, if configured.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedClusterIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Identities associated with the cluster.
        /// </summary>
        [Output("identityProfile")]
        public Output<ImmutableDictionary<string, Outputs.UserAssignedIdentityResponse>?> IdentityProfile { get; private set; } = null!;

        /// <summary>
        /// Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -&gt; 1.15.x or 1.15.x -&gt; 1.16.x are allowed, however 1.14.x -&gt; 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
        /// </summary>
        [Output("kubernetesVersion")]
        public Output<string?> KubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// The profile for Linux VMs in the Managed Cluster.
        /// </summary>
        [Output("linuxProfile")]
        public Output<Outputs.ContainerServiceLinuxProfileResponse?> LinuxProfile { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The max number of agent pools for the managed cluster.
        /// </summary>
        [Output("maxAgentPools")]
        public Output<int> MaxAgentPools { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The network configuration profile.
        /// </summary>
        [Output("networkProfile")]
        public Output<Outputs.ContainerServiceNetworkProfileResponse?> NetworkProfile { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group containing agent pool nodes.
        /// </summary>
        [Output("nodeResourceGroup")]
        public Output<string?> NodeResourceGroup { get; private set; } = null!;

        /// <summary>
        /// The OIDC issuer profile of the Managed Cluster.
        /// </summary>
        [Output("oidcIssuerProfile")]
        public Output<Outputs.ManagedClusterOIDCIssuerProfileResponse?> OidcIssuerProfile { get; private set; } = null!;

        /// <summary>
        /// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.
        /// </summary>
        [Output("podIdentityProfile")]
        public Output<Outputs.ManagedClusterPodIdentityProfileResponse?> PodIdentityProfile { get; private set; } = null!;

        /// <summary>
        /// The Power State of the cluster.
        /// </summary>
        [Output("powerState")]
        public Output<Outputs.PowerStateResponse> PowerState { get; private set; } = null!;

        /// <summary>
        /// The FQDN of private cluster.
        /// </summary>
        [Output("privateFQDN")]
        public Output<string> PrivateFQDN { get; private set; } = null!;

        /// <summary>
        /// Private link resources associated with the cluster.
        /// </summary>
        [Output("privateLinkResources")]
        public Output<ImmutableArray<Outputs.PrivateLinkResourceResponse>> PrivateLinkResources { get; private set; } = null!;

        /// <summary>
        /// The current provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Allow or deny public network access for AKS
        /// </summary>
        [Output("publicNetworkAccess")]
        public Output<string?> PublicNetworkAccess { get; private set; } = null!;

        /// <summary>
        /// The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence)
        /// </summary>
        [Output("resourceUID")]
        public Output<string> ResourceUID { get; private set; } = null!;

        /// <summary>
        /// Security profile for the managed cluster.
        /// </summary>
        [Output("securityProfile")]
        public Output<Outputs.ManagedClusterSecurityProfileResponse?> SecurityProfile { get; private set; } = null!;

        /// <summary>
        /// Service mesh profile for a managed cluster.
        /// </summary>
        [Output("serviceMeshProfile")]
        public Output<Outputs.ServiceMeshProfileResponse?> ServiceMeshProfile { get; private set; } = null!;

        /// <summary>
        /// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
        /// </summary>
        [Output("servicePrincipalProfile")]
        public Output<Outputs.ManagedClusterServicePrincipalProfileResponse?> ServicePrincipalProfile { get; private set; } = null!;

        /// <summary>
        /// The managed cluster SKU.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.ManagedClusterSKUResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Storage profile for the managed cluster.
        /// </summary>
        [Output("storageProfile")]
        public Output<Outputs.ManagedClusterStorageProfileResponse?> StorageProfile { get; private set; } = null!;

        /// <summary>
        /// The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.
        /// </summary>
        [Output("supportPlan")]
        public Output<string?> SupportPlan { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Settings for upgrading a cluster.
        /// </summary>
        [Output("upgradeSettings")]
        public Output<Outputs.ClusterUpgradeSettingsResponse?> UpgradeSettings { get; private set; } = null!;

        /// <summary>
        /// The profile for Windows VMs in the Managed Cluster.
        /// </summary>
        [Output("windowsProfile")]
        public Output<Outputs.ManagedClusterWindowsProfileResponse?> WindowsProfile { get; private set; } = null!;

        /// <summary>
        /// Workload Auto-scaler profile for the managed cluster.
        /// </summary>
        [Output("workloadAutoScalerProfile")]
        public Output<Outputs.ManagedClusterWorkloadAutoScalerProfileResponse?> WorkloadAutoScalerProfile { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedCluster(string name, ManagedClusterArgs args, CustomResourceOptions? options = null)
            : base("azure-native:containerservice/v20231001:ManagedCluster", name, args ?? new ManagedClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedCluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:containerservice/v20231001:ManagedCluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:containerservice:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20170831:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20180331:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20180801preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20190201:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20190401:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20190601:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20190801:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20191001:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20191101:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20200101:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20200201:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20200301:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20200401:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20200601:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20200701:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20200901:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20201101:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20201201:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20210201:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20210301:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20210501:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20210701:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20210801:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20210901:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20211001:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20211101preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220101:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220102preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220201:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220202preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220301:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220302preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220401:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220402preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220502preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220601:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220602preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220701:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220702preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220802preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220803preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220901:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20220902preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20221002preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20221101:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20221102preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230101:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230102preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230201:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230202preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230301:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230302preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230401:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230402preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230501:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230502preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230601:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230602preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230701:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230702preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230801:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230802preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230901:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20230902preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20231002preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20231101:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20231102preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240101:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240102preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240201:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240202preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240302preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240402preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240501:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240502preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240602preview:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240701:ManagedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240702preview:ManagedCluster" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedCluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ManagedCluster(name, id, options);
        }
    }

    public sealed class ManagedClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure Active Directory configuration.
        /// </summary>
        [Input("aadProfile")]
        public Input<Inputs.ManagedClusterAADProfileArgs>? AadProfile { get; set; }

        [Input("addonProfiles")]
        private InputMap<Inputs.ManagedClusterAddonProfileArgs>? _addonProfiles;

        /// <summary>
        /// The profile of managed cluster add-on.
        /// </summary>
        public InputMap<Inputs.ManagedClusterAddonProfileArgs> AddonProfiles
        {
            get => _addonProfiles ?? (_addonProfiles = new InputMap<Inputs.ManagedClusterAddonProfileArgs>());
            set => _addonProfiles = value;
        }

        [Input("agentPoolProfiles")]
        private InputList<Inputs.ManagedClusterAgentPoolProfileArgs>? _agentPoolProfiles;

        /// <summary>
        /// The agent pool properties.
        /// </summary>
        public InputList<Inputs.ManagedClusterAgentPoolProfileArgs> AgentPoolProfiles
        {
            get => _agentPoolProfiles ?? (_agentPoolProfiles = new InputList<Inputs.ManagedClusterAgentPoolProfileArgs>());
            set => _agentPoolProfiles = value;
        }

        /// <summary>
        /// The access profile for managed cluster API server.
        /// </summary>
        [Input("apiServerAccessProfile")]
        public Input<Inputs.ManagedClusterAPIServerAccessProfileArgs>? ApiServerAccessProfile { get; set; }

        /// <summary>
        /// Parameters to be applied to the cluster-autoscaler when enabled
        /// </summary>
        [Input("autoScalerProfile")]
        public Input<Inputs.ManagedClusterPropertiesAutoScalerProfileArgs>? AutoScalerProfile { get; set; }

        /// <summary>
        /// The auto upgrade configuration.
        /// </summary>
        [Input("autoUpgradeProfile")]
        public Input<Inputs.ManagedClusterAutoUpgradeProfileArgs>? AutoUpgradeProfile { get; set; }

        /// <summary>
        /// Azure Monitor addon profiles for monitoring the managed cluster.
        /// </summary>
        [Input("azureMonitorProfile")]
        public Input<Inputs.ManagedClusterAzureMonitorProfileArgs>? AzureMonitorProfile { get; set; }

        /// <summary>
        /// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
        /// </summary>
        [Input("disableLocalAccounts")]
        public Input<bool>? DisableLocalAccounts { get; set; }

        /// <summary>
        /// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
        /// </summary>
        [Input("diskEncryptionSetID")]
        public Input<string>? DiskEncryptionSetID { get; set; }

        /// <summary>
        /// This cannot be updated once the Managed Cluster has been created.
        /// </summary>
        [Input("dnsPrefix")]
        public Input<string>? DnsPrefix { get; set; }

        /// <summary>
        /// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
        /// </summary>
        [Input("enablePodSecurityPolicy")]
        public Input<bool>? EnablePodSecurityPolicy { get; set; }

        /// <summary>
        /// Whether to enable Kubernetes Role-Based Access Control.
        /// </summary>
        [Input("enableRBAC")]
        public Input<bool>? EnableRBAC { get; set; }

        /// <summary>
        /// The extended location of the Virtual Machine.
        /// </summary>
        [Input("extendedLocation")]
        public Input<Inputs.ExtendedLocationArgs>? ExtendedLocation { get; set; }

        /// <summary>
        /// This cannot be updated once the Managed Cluster has been created.
        /// </summary>
        [Input("fqdnSubdomain")]
        public Input<string>? FqdnSubdomain { get; set; }

        /// <summary>
        /// Configurations for provisioning the cluster with HTTP proxy servers.
        /// </summary>
        [Input("httpProxyConfig")]
        public Input<Inputs.ManagedClusterHTTPProxyConfigArgs>? HttpProxyConfig { get; set; }

        /// <summary>
        /// The identity of the managed cluster, if configured.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedClusterIdentityArgs>? Identity { get; set; }

        [Input("identityProfile")]
        private InputMap<Inputs.UserAssignedIdentityArgs>? _identityProfile;

        /// <summary>
        /// Identities associated with the cluster.
        /// </summary>
        public InputMap<Inputs.UserAssignedIdentityArgs> IdentityProfile
        {
            get => _identityProfile ?? (_identityProfile = new InputMap<Inputs.UserAssignedIdentityArgs>());
            set => _identityProfile = value;
        }

        /// <summary>
        /// Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -&gt; 1.15.x or 1.15.x -&gt; 1.16.x are allowed, however 1.14.x -&gt; 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// The profile for Linux VMs in the Managed Cluster.
        /// </summary>
        [Input("linuxProfile")]
        public Input<Inputs.ContainerServiceLinuxProfileArgs>? LinuxProfile { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The network configuration profile.
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.ContainerServiceNetworkProfileArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// The name of the resource group containing agent pool nodes.
        /// </summary>
        [Input("nodeResourceGroup")]
        public Input<string>? NodeResourceGroup { get; set; }

        /// <summary>
        /// The OIDC issuer profile of the Managed Cluster.
        /// </summary>
        [Input("oidcIssuerProfile")]
        public Input<Inputs.ManagedClusterOIDCIssuerProfileArgs>? OidcIssuerProfile { get; set; }

        /// <summary>
        /// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.
        /// </summary>
        [Input("podIdentityProfile")]
        public Input<Inputs.ManagedClusterPodIdentityProfileArgs>? PodIdentityProfile { get; set; }

        [Input("privateLinkResources")]
        private InputList<Inputs.PrivateLinkResourceArgs>? _privateLinkResources;

        /// <summary>
        /// Private link resources associated with the cluster.
        /// </summary>
        public InputList<Inputs.PrivateLinkResourceArgs> PrivateLinkResources
        {
            get => _privateLinkResources ?? (_privateLinkResources = new InputList<Inputs.PrivateLinkResourceArgs>());
            set => _privateLinkResources = value;
        }

        /// <summary>
        /// Allow or deny public network access for AKS
        /// </summary>
        [Input("publicNetworkAccess")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20231001.PublicNetworkAccess>? PublicNetworkAccess { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// Security profile for the managed cluster.
        /// </summary>
        [Input("securityProfile")]
        public Input<Inputs.ManagedClusterSecurityProfileArgs>? SecurityProfile { get; set; }

        /// <summary>
        /// Service mesh profile for a managed cluster.
        /// </summary>
        [Input("serviceMeshProfile")]
        public Input<Inputs.ServiceMeshProfileArgs>? ServiceMeshProfile { get; set; }

        /// <summary>
        /// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
        /// </summary>
        [Input("servicePrincipalProfile")]
        public Input<Inputs.ManagedClusterServicePrincipalProfileArgs>? ServicePrincipalProfile { get; set; }

        /// <summary>
        /// The managed cluster SKU.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.ManagedClusterSKUArgs>? Sku { get; set; }

        /// <summary>
        /// Storage profile for the managed cluster.
        /// </summary>
        [Input("storageProfile")]
        public Input<Inputs.ManagedClusterStorageProfileArgs>? StorageProfile { get; set; }

        /// <summary>
        /// The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.
        /// </summary>
        [Input("supportPlan")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20231001.KubernetesSupportPlan>? SupportPlan { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Settings for upgrading a cluster.
        /// </summary>
        [Input("upgradeSettings")]
        public Input<Inputs.ClusterUpgradeSettingsArgs>? UpgradeSettings { get; set; }

        /// <summary>
        /// The profile for Windows VMs in the Managed Cluster.
        /// </summary>
        [Input("windowsProfile")]
        public Input<Inputs.ManagedClusterWindowsProfileArgs>? WindowsProfile { get; set; }

        /// <summary>
        /// Workload Auto-scaler profile for the managed cluster.
        /// </summary>
        [Input("workloadAutoScalerProfile")]
        public Input<Inputs.ManagedClusterWorkloadAutoScalerProfileArgs>? WorkloadAutoScalerProfile { get; set; }

        public ManagedClusterArgs()
        {
        }
        public static new ManagedClusterArgs Empty => new ManagedClusterArgs();
    }
}
