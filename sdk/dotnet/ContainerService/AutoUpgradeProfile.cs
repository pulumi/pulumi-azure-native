// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService
{
    /// <summary>
    /// The AutoUpgradeProfile resource.
    /// Azure REST API version: 2024-05-02-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:containerservice:AutoUpgradeProfile")]
    public partial class AutoUpgradeProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configures how auto-upgrade will be run.
        /// </summary>
        [Output("channel")]
        public Output<string> Channel { get; private set; } = null!;

        /// <summary>
        /// If set to False: the auto upgrade has effect - target managed clusters will be upgraded on schedule.
        /// If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
        /// This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.
        /// By default, this is set to False.
        /// </summary>
        [Output("disabled")]
        public Output<bool?> Disabled { get; private set; } = null!;

        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        [Output("eTag")]
        public Output<string> ETag { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The node image upgrade to be applied to the target clusters in auto upgrade.
        /// </summary>
        [Output("nodeImageSelection")]
        public Output<Outputs.AutoUpgradeNodeImageSelectionResponse?> NodeImageSelection { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the AutoUpgradeProfile resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The resource id of the UpdateStrategy resource to reference. If not specified, the auto upgrade will run on all clusters which are members of the fleet.
        /// </summary>
        [Output("updateStrategyId")]
        public Output<string?> UpdateStrategyId { get; private set; } = null!;


        /// <summary>
        /// Create a AutoUpgradeProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AutoUpgradeProfile(string name, AutoUpgradeProfileArgs args, CustomResourceOptions? options = null)
            : base("azure-native:containerservice:AutoUpgradeProfile", name, args ?? new AutoUpgradeProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AutoUpgradeProfile(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:containerservice:AutoUpgradeProfile", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:containerservice/v20240502preview:AutoUpgradeProfile" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AutoUpgradeProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AutoUpgradeProfile Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AutoUpgradeProfile(name, id, options);
        }
    }

    public sealed class AutoUpgradeProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the AutoUpgradeProfile resource.
        /// </summary>
        [Input("autoUpgradeProfileName")]
        public Input<string>? AutoUpgradeProfileName { get; set; }

        /// <summary>
        /// Configures how auto-upgrade will be run.
        /// </summary>
        [Input("channel", required: true)]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.UpgradeChannel> Channel { get; set; } = null!;

        /// <summary>
        /// If set to False: the auto upgrade has effect - target managed clusters will be upgraded on schedule.
        /// If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
        /// This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.
        /// By default, this is set to False.
        /// </summary>
        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        /// <summary>
        /// The name of the Fleet resource.
        /// </summary>
        [Input("fleetName", required: true)]
        public Input<string> FleetName { get; set; } = null!;

        /// <summary>
        /// The node image upgrade to be applied to the target clusters in auto upgrade.
        /// </summary>
        [Input("nodeImageSelection")]
        public Input<Inputs.AutoUpgradeNodeImageSelectionArgs>? NodeImageSelection { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource id of the UpdateStrategy resource to reference. If not specified, the auto upgrade will run on all clusters which are members of the fleet.
        /// </summary>
        [Input("updateStrategyId")]
        public Input<string>? UpdateStrategyId { get; set; }

        public AutoUpgradeProfileArgs()
        {
        }
        public static new AutoUpgradeProfileArgs Empty => new AutoUpgradeProfileArgs();
    }
}
