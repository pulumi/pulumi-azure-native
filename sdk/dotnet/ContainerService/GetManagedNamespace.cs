// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService
{
    public static class GetManagedNamespace
    {
        /// <summary>
        /// Namespace managed by ARM.
        /// 
        /// Uses Azure REST API version 2025-04-02-preview.
        /// 
        /// Other available API versions: 2025-03-02-preview, 2025-05-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetManagedNamespaceResult> InvokeAsync(GetManagedNamespaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedNamespaceResult>("azure-native:containerservice:getManagedNamespace", args ?? new GetManagedNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// Namespace managed by ARM.
        /// 
        /// Uses Azure REST API version 2025-04-02-preview.
        /// 
        /// Other available API versions: 2025-03-02-preview, 2025-05-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetManagedNamespaceResult> Invoke(GetManagedNamespaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedNamespaceResult>("azure-native:containerservice:getManagedNamespace", args ?? new GetManagedNamespaceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Namespace managed by ARM.
        /// 
        /// Uses Azure REST API version 2025-04-02-preview.
        /// 
        /// Other available API versions: 2025-03-02-preview, 2025-05-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetManagedNamespaceResult> Invoke(GetManagedNamespaceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedNamespaceResult>("azure-native:containerservice:getManagedNamespace", args ?? new GetManagedNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedNamespaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the managed namespace.
        /// </summary>
        [Input("managedNamespaceName", required: true)]
        public string ManagedNamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetManagedNamespaceArgs()
        {
        }
        public static new GetManagedNamespaceArgs Empty => new GetManagedNamespaceArgs();
    }

    public sealed class GetManagedNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the managed namespace.
        /// </summary>
        [Input("managedNamespaceName", required: true)]
        public Input<string> ManagedNamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed cluster resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetManagedNamespaceInvokeArgs()
        {
        }
        public static new GetManagedNamespaceInvokeArgs Empty => new GetManagedNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedNamespaceResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The location of the namespace.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of a namespace.
        /// </summary>
        public readonly Outputs.NamespacePropertiesResponse Properties;
        /// <summary>
        /// The system metadata relating to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The tags to be persisted on the managed cluster namespace.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagedNamespaceResult(
            string azureApiVersion,

            string eTag,

            string id,

            string? location,

            string name,

            Outputs.NamespacePropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            ETag = eTag;
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
