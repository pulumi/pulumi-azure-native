// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerService.V20170831.Outputs
{

    [OutputType]
    public sealed class ContainerServiceAgentPoolProfileResponse
    {
        /// <summary>
        /// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
        /// </summary>
        public readonly int? Count;
        /// <summary>
        /// DNS prefix to be used to create the FQDN for the agent pool.
        /// </summary>
        public readonly string? DnsPrefix;
        /// <summary>
        /// FQDN for the agent pool.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// Unique name of the agent pool profile in the context of the subscription and resource group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
        /// </summary>
        public readonly int? OsDiskSizeGB;
        /// <summary>
        /// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
        /// </summary>
        public readonly string? OsType;
        /// <summary>
        /// Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
        /// </summary>
        public readonly ImmutableArray<int> Ports;
        /// <summary>
        /// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
        /// </summary>
        public readonly string? StorageProfile;
        /// <summary>
        /// Size of agent VMs.
        /// </summary>
        public readonly string VmSize;
        /// <summary>
        /// VNet SubnetID specifies the VNet's subnet identifier.
        /// </summary>
        public readonly string? VnetSubnetID;

        [OutputConstructor]
        private ContainerServiceAgentPoolProfileResponse(
            int? count,

            string? dnsPrefix,

            string fqdn,

            string name,

            int? osDiskSizeGB,

            string? osType,

            ImmutableArray<int> ports,

            string? storageProfile,

            string vmSize,

            string? vnetSubnetID)
        {
            Count = count;
            DnsPrefix = dnsPrefix;
            Fqdn = fqdn;
            Name = name;
            OsDiskSizeGB = osDiskSizeGB;
            OsType = osType;
            Ports = ports;
            StorageProfile = storageProfile;
            VmSize = vmSize;
            VnetSubnetID = vnetSubnetID;
        }
    }
}
