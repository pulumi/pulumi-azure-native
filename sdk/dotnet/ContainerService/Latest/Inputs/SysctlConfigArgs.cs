// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerService.Latest.Inputs
{

    /// <summary>
    /// Sysctl settings for Linux agent nodes.
    /// </summary>
    public sealed class SysctlConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sysctl setting fs.aio-max-nr.
        /// </summary>
        [Input("fsAioMaxNr")]
        public Input<int>? FsAioMaxNr { get; set; }

        /// <summary>
        /// Sysctl setting fs.file-max.
        /// </summary>
        [Input("fsFileMax")]
        public Input<int>? FsFileMax { get; set; }

        /// <summary>
        /// Sysctl setting fs.inotify.max_user_watches.
        /// </summary>
        [Input("fsInotifyMaxUserWatches")]
        public Input<int>? FsInotifyMaxUserWatches { get; set; }

        /// <summary>
        /// Sysctl setting fs.nr_open.
        /// </summary>
        [Input("fsNrOpen")]
        public Input<int>? FsNrOpen { get; set; }

        /// <summary>
        /// Sysctl setting kernel.threads-max.
        /// </summary>
        [Input("kernelThreadsMax")]
        public Input<int>? KernelThreadsMax { get; set; }

        /// <summary>
        /// Sysctl setting net.core.netdev_max_backlog.
        /// </summary>
        [Input("netCoreNetdevMaxBacklog")]
        public Input<int>? NetCoreNetdevMaxBacklog { get; set; }

        /// <summary>
        /// Sysctl setting net.core.optmem_max.
        /// </summary>
        [Input("netCoreOptmemMax")]
        public Input<int>? NetCoreOptmemMax { get; set; }

        /// <summary>
        /// Sysctl setting net.core.rmem_max.
        /// </summary>
        [Input("netCoreRmemMax")]
        public Input<int>? NetCoreRmemMax { get; set; }

        /// <summary>
        /// Sysctl setting net.core.somaxconn.
        /// </summary>
        [Input("netCoreSomaxconn")]
        public Input<int>? NetCoreSomaxconn { get; set; }

        /// <summary>
        /// Sysctl setting net.core.wmem_max.
        /// </summary>
        [Input("netCoreWmemMax")]
        public Input<int>? NetCoreWmemMax { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.ip_local_port_range.
        /// </summary>
        [Input("netIpv4IpLocalPortRange")]
        public Input<string>? NetIpv4IpLocalPortRange { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.neigh.default.gc_thresh1.
        /// </summary>
        [Input("netIpv4NeighDefaultGcThresh1")]
        public Input<int>? NetIpv4NeighDefaultGcThresh1 { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.neigh.default.gc_thresh2.
        /// </summary>
        [Input("netIpv4NeighDefaultGcThresh2")]
        public Input<int>? NetIpv4NeighDefaultGcThresh2 { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.neigh.default.gc_thresh3.
        /// </summary>
        [Input("netIpv4NeighDefaultGcThresh3")]
        public Input<int>? NetIpv4NeighDefaultGcThresh3 { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.tcp_fin_timeout.
        /// </summary>
        [Input("netIpv4TcpFinTimeout")]
        public Input<int>? NetIpv4TcpFinTimeout { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.tcp_keepalive_probes.
        /// </summary>
        [Input("netIpv4TcpKeepaliveProbes")]
        public Input<int>? NetIpv4TcpKeepaliveProbes { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.tcp_keepalive_time.
        /// </summary>
        [Input("netIpv4TcpKeepaliveTime")]
        public Input<int>? NetIpv4TcpKeepaliveTime { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.tcp_max_syn_backlog.
        /// </summary>
        [Input("netIpv4TcpMaxSynBacklog")]
        public Input<int>? NetIpv4TcpMaxSynBacklog { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.tcp_max_tw_buckets.
        /// </summary>
        [Input("netIpv4TcpMaxTwBuckets")]
        public Input<int>? NetIpv4TcpMaxTwBuckets { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.tcp_rmem.
        /// </summary>
        [Input("netIpv4TcpRmem")]
        public Input<int>? NetIpv4TcpRmem { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.tcp_tw_reuse.
        /// </summary>
        [Input("netIpv4TcpTwReuse")]
        public Input<bool>? NetIpv4TcpTwReuse { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.tcp_wmem.
        /// </summary>
        [Input("netIpv4TcpWmem")]
        public Input<int>? NetIpv4TcpWmem { get; set; }

        /// <summary>
        /// Sysctl setting net.ipv4.tcp_keepalive_intvl.
        /// </summary>
        [Input("netIpv4TcpkeepaliveIntvl")]
        public Input<int>? NetIpv4TcpkeepaliveIntvl { get; set; }

        /// <summary>
        /// Sysctl setting net.netfilter.nf_conntrack_buckets.
        /// </summary>
        [Input("netNetfilterNfConntrackBuckets")]
        public Input<int>? NetNetfilterNfConntrackBuckets { get; set; }

        /// <summary>
        /// Sysctl setting net.netfilter.nf_conntrack_max.
        /// </summary>
        [Input("netNetfilterNfConntrackMax")]
        public Input<int>? NetNetfilterNfConntrackMax { get; set; }

        /// <summary>
        /// Sysctl setting vm.max_map_count.
        /// </summary>
        [Input("vmMaxMapCount")]
        public Input<int>? VmMaxMapCount { get; set; }

        /// <summary>
        /// Sysctl setting vm.swappiness.
        /// </summary>
        [Input("vmSwappiness")]
        public Input<int>? VmSwappiness { get; set; }

        /// <summary>
        /// Sysctl setting vm.vfs_cache_pressure.
        /// </summary>
        [Input("vmVfsCachePressure")]
        public Input<int>? VmVfsCachePressure { get; set; }

        public SysctlConfigArgs()
        {
        }
    }
}
