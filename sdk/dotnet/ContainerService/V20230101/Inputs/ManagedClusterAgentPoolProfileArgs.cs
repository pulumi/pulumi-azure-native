// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20230101.Inputs
{

    /// <summary>
    /// Profile for the container service agent pool.
    /// </summary>
    public sealed class ManagedClusterAgentPoolProfileArgs : global::Pulumi.ResourceArgs
    {
        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        /// <summary>
        /// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
        /// </summary>
        [Input("count")]
        public Input<int>? Count { get; set; }

        /// <summary>
        /// CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
        /// </summary>
        [Input("creationData")]
        public Input<Inputs.CreationDataArgs>? CreationData { get; set; }

        /// <summary>
        /// Whether to enable auto-scaler
        /// </summary>
        [Input("enableAutoScaling")]
        public Input<bool>? EnableAutoScaling { get; set; }

        /// <summary>
        /// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
        /// </summary>
        [Input("enableEncryptionAtHost")]
        public Input<bool>? EnableEncryptionAtHost { get; set; }

        /// <summary>
        /// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
        /// </summary>
        [Input("enableFIPS")]
        public Input<bool>? EnableFIPS { get; set; }

        /// <summary>
        /// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
        /// </summary>
        [Input("enableNodePublicIP")]
        public Input<bool>? EnableNodePublicIP { get; set; }

        /// <summary>
        /// Whether to enable UltraSSD
        /// </summary>
        [Input("enableUltraSSD")]
        public Input<bool>? EnableUltraSSD { get; set; }

        /// <summary>
        /// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
        /// </summary>
        [Input("gpuInstanceProfile")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.GPUInstanceProfile>? GpuInstanceProfile { get; set; }

        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
        /// </summary>
        [Input("hostGroupID")]
        public Input<string>? HostGroupID { get; set; }

        /// <summary>
        /// The Kubelet configuration on the agent pool nodes.
        /// </summary>
        [Input("kubeletConfig")]
        public Input<Inputs.KubeletConfigArgs>? KubeletConfig { get; set; }

        /// <summary>
        /// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
        /// </summary>
        [Input("kubeletDiskType")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.KubeletDiskType>? KubeletDiskType { get; set; }

        /// <summary>
        /// The OS configuration of Linux agent nodes.
        /// </summary>
        [Input("linuxOSConfig")]
        public Input<Inputs.LinuxOSConfigArgs>? LinuxOSConfig { get; set; }

        /// <summary>
        /// The maximum number of nodes for auto-scaling
        /// </summary>
        [Input("maxCount")]
        public Input<int>? MaxCount { get; set; }

        /// <summary>
        /// The maximum number of pods that can run on a node.
        /// </summary>
        [Input("maxPods")]
        public Input<int>? MaxPods { get; set; }

        /// <summary>
        /// The minimum number of nodes for auto-scaling
        /// </summary>
        [Input("minCount")]
        public Input<int>? MinCount { get; set; }

        /// <summary>
        /// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
        /// </summary>
        [Input("mode")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.AgentPoolMode>? Mode { get; set; }

        /// <summary>
        /// Windows agent pool names must be 6 characters or less.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("nodeLabels")]
        private InputMap<string>? _nodeLabels;

        /// <summary>
        /// The node labels to be persisted across all nodes in agent pool.
        /// </summary>
        public InputMap<string> NodeLabels
        {
            get => _nodeLabels ?? (_nodeLabels = new InputMap<string>());
            set => _nodeLabels = value;
        }

        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
        /// </summary>
        [Input("nodePublicIPPrefixID")]
        public Input<string>? NodePublicIPPrefixID { get; set; }

        [Input("nodeTaints")]
        private InputList<string>? _nodeTaints;

        /// <summary>
        /// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        public InputList<string> NodeTaints
        {
            get => _nodeTaints ?? (_nodeTaints = new InputList<string>());
            set => _nodeTaints = value;
        }

        /// <summary>
        /// Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
        /// </summary>
        [Input("orchestratorVersion")]
        public Input<string>? OrchestratorVersion { get; set; }

        /// <summary>
        /// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
        /// </summary>
        [Input("osDiskSizeGB")]
        public Input<int>? OsDiskSizeGB { get; set; }

        /// <summary>
        /// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
        /// </summary>
        [Input("osDiskType")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.OSDiskType>? OsDiskType { get; set; }

        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes &lt;= 1.24 or Windows2022 when Kubernetes &gt;= 1.25 if OSType is Windows.
        /// </summary>
        [Input("osSKU")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.OSSKU>? OsSKU { get; set; }

        /// <summary>
        /// The operating system type. The default is Linux.
        /// </summary>
        [Input("osType")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.OSType>? OsType { get; set; }

        /// <summary>
        /// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Input("podSubnetID")]
        public Input<string>? PodSubnetID { get; set; }

        /// <summary>
        /// When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded
        /// </summary>
        [Input("powerState")]
        public Input<Inputs.PowerStateArgs>? PowerState { get; set; }

        /// <summary>
        /// The ID for Proximity Placement Group.
        /// </summary>
        [Input("proximityPlacementGroupID")]
        public Input<string>? ProximityPlacementGroupID { get; set; }

        /// <summary>
        /// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
        /// </summary>
        [Input("scaleDownMode")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.ScaleDownMode>? ScaleDownMode { get; set; }

        /// <summary>
        /// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
        /// </summary>
        [Input("scaleSetEvictionPolicy")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.ScaleSetEvictionPolicy>? ScaleSetEvictionPolicy { get; set; }

        /// <summary>
        /// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
        /// </summary>
        [Input("scaleSetPriority")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.ScaleSetPriority>? ScaleSetPriority { get; set; }

        /// <summary>
        /// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
        /// </summary>
        [Input("spotMaxPrice")]
        public Input<double>? SpotMaxPrice { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags to be persisted on the agent pool virtual machine scale set.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of Agent Pool.
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.AgentPoolType>? Type { get; set; }

        /// <summary>
        /// Settings for upgrading the agentpool
        /// </summary>
        [Input("upgradeSettings")]
        public Input<Inputs.AgentPoolUpgradeSettingsArgs>? UpgradeSettings { get; set; }

        /// <summary>
        /// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
        /// </summary>
        [Input("vmSize")]
        public Input<string>? VmSize { get; set; }

        /// <summary>
        /// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Input("vnetSubnetID")]
        public Input<string>? VnetSubnetID { get; set; }

        /// <summary>
        /// Determines the type of workload a node can run.
        /// </summary>
        [Input("workloadRuntime")]
        public InputUnion<string, Pulumi.AzureNative.ContainerService.V20230101.WorkloadRuntime>? WorkloadRuntime { get; set; }

        public ManagedClusterAgentPoolProfileArgs()
        {
        }
        public static new ManagedClusterAgentPoolProfileArgs Empty => new ManagedClusterAgentPoolProfileArgs();
    }
}
