// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.V20230315Preview.Inputs
{

    /// <summary>
    /// Contains the groups to be updated by an UpdateRun.
    /// Update order:
    /// - Sequential between stages: Stages run sequentially. The previous stage must complete before the next one starts.
    /// - Parallel within a stage: Groups within a stage run in parallel.
    /// - Sequential within a group: Clusters within a group are updated sequentially.
    /// </summary>
    public sealed class UpdateStageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time in seconds to wait at the end of this stage before starting the next one. Defaults to 0 seconds if unspecified.
        /// </summary>
        [Input("afterStageWaitInSeconds")]
        public Input<int>? AfterStageWaitInSeconds { get; set; }

        [Input("groups")]
        private InputList<Inputs.UpdateGroupArgs>? _groups;

        /// <summary>
        /// A list of group names that compose the stage.
        /// The groups will be updated in parallel. Each group name can only appear once in the UpdateRun.
        /// </summary>
        public InputList<Inputs.UpdateGroupArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.UpdateGroupArgs>());
            set => _groups = value;
        }

        /// <summary>
        /// The name of the stage. Must be unique within the UpdateRun.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public UpdateStageArgs()
        {
        }
        public static new UpdateStageArgs Empty => new UpdateStageArgs();
    }
}
