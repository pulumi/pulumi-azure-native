// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.Outputs
{

    /// <summary>
    /// The properties of the Node Customization resource.
    /// </summary>
    [OutputType]
    public sealed class NodeCustomizationPropertiesResponse
    {
        /// <summary>
        /// The list of container images to cache on nodes. See https://kubernetes.io/docs/concepts/containers/images/#image-names
        /// </summary>
        public readonly ImmutableArray<string> ContainerImages;
        /// <summary>
        /// The scripts to customize the node before or after image capture.
        /// </summary>
        public readonly ImmutableArray<Outputs.NodeCustomizationScriptResponse> CustomizationScripts;
        /// <summary>
        /// The identity used to execute node customization tasks during image build time and provisioning time. 
        /// If not specified the default agentpool identity will be used.
        /// This does not affect provisioned nodes.
        /// </summary>
        public readonly Outputs.UserAssignedIdentityResponse? IdentityProfile;
        /// <summary>
        /// The provisioning state of the node customization.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// An auto-generated value that changes when the other fields of the image customization are changed.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private NodeCustomizationPropertiesResponse(
            ImmutableArray<string> containerImages,

            ImmutableArray<Outputs.NodeCustomizationScriptResponse> customizationScripts,

            Outputs.UserAssignedIdentityResponse? identityProfile,

            string provisioningState,

            string version)
        {
            ContainerImages = containerImages;
            CustomizationScripts = customizationScripts;
            IdentityProfile = identityProfile;
            ProvisioningState = provisioningState;
            Version = version;
        }
    }
}
