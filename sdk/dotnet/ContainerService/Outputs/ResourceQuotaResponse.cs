// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.Outputs
{

    /// <summary>
    /// Resource quota for the namespace.
    /// </summary>
    [OutputType]
    public sealed class ResourceQuotaResponse
    {
        /// <summary>
        /// CPU limit of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu) for more details.
        /// </summary>
        public readonly string? CpuLimit;
        /// <summary>
        /// CPU request of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu) for more details.
        /// </summary>
        public readonly string? CpuRequest;
        /// <summary>
        /// Memory limit of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory) for more details.
        /// </summary>
        public readonly string? MemoryLimit;
        /// <summary>
        /// Memory request of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory) for more details.
        /// </summary>
        public readonly string? MemoryRequest;

        [OutputConstructor]
        private ResourceQuotaResponse(
            string? cpuLimit,

            string? cpuRequest,

            string? memoryLimit,

            string? memoryRequest)
        {
            CpuLimit = cpuLimit;
            CpuRequest = cpuRequest;
            MemoryLimit = memoryLimit;
            MemoryRequest = memoryRequest;
        }
    }
}
