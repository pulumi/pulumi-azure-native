// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.Outputs
{

    /// <summary>
    /// The claim mappings for JWTAuthenticator.
    /// </summary>
    [OutputType]
    public sealed class JWTAuthenticatorClaimMappingsResponse
    {
        /// <summary>
        /// The expression to extract extra attribute from the token claims. When not provided, no extra attributes are extracted from the token claims.
        /// </summary>
        public readonly ImmutableArray<Outputs.JWTAuthenticatorExtraClaimMappingExpressionResponse> Extra;
        /// <summary>
        /// The expression to extract groups attribute from the token claims. When not provided, no groups are extracted from the token claims.
        /// </summary>
        public readonly Outputs.JWTAuthenticatorClaimMappingExpressionResponse? Groups;
        /// <summary>
        /// The expression to extract uid attribute from the token claims. When not provided, no uid is extracted from the token claims.
        /// </summary>
        public readonly Outputs.JWTAuthenticatorClaimMappingExpressionResponse? Uid;
        /// <summary>
        /// The expression to extract username attribute from the token claims.
        /// </summary>
        public readonly Outputs.JWTAuthenticatorClaimMappingExpressionResponse Username;

        [OutputConstructor]
        private JWTAuthenticatorClaimMappingsResponse(
            ImmutableArray<Outputs.JWTAuthenticatorExtraClaimMappingExpressionResponse> extra,

            Outputs.JWTAuthenticatorClaimMappingExpressionResponse? groups,

            Outputs.JWTAuthenticatorClaimMappingExpressionResponse? uid,

            Outputs.JWTAuthenticatorClaimMappingExpressionResponse username)
        {
            Extra = extra;
            Groups = groups;
            Uid = uid;
            Username = username;
        }
    }
}
