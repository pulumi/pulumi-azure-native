// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerService.Outputs
{

    /// <summary>
    /// The properties of JWTAuthenticator. For details on how to configure the properties of a JWT authenticator, please refer to the Kubernetes documentation: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#using-authentication-configuration. Please note that not all fields available in the Kubernetes documentation are supported by AKS. For troubleshooting, please see https://aka.ms/aks-external-issuers-docs.
    /// </summary>
    [OutputType]
    public sealed class JWTAuthenticatorPropertiesResponse
    {
        /// <summary>
        /// The mappings that define how user attributes are extracted from the token claims.
        /// </summary>
        public readonly Outputs.JWTAuthenticatorClaimMappingsResponse ClaimMappings;
        /// <summary>
        /// The rules that are applied to validate token claims to authenticate users. All the expressions must evaluate to true for validation to succeed.
        /// </summary>
        public readonly ImmutableArray<Outputs.JWTAuthenticatorValidationRuleResponse> ClaimValidationRules;
        /// <summary>
        /// The JWT OIDC issuer details.
        /// </summary>
        public readonly Outputs.JWTAuthenticatorIssuerResponse Issuer;
        /// <summary>
        /// The current provisioning state of the JWT authenticator.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The rules that are applied to the mapped user before completing authentication. All the expressions must evaluate to true for validation to succeed.
        /// </summary>
        public readonly ImmutableArray<Outputs.JWTAuthenticatorValidationRuleResponse> UserValidationRules;

        [OutputConstructor]
        private JWTAuthenticatorPropertiesResponse(
            Outputs.JWTAuthenticatorClaimMappingsResponse claimMappings,

            ImmutableArray<Outputs.JWTAuthenticatorValidationRuleResponse> claimValidationRules,

            Outputs.JWTAuthenticatorIssuerResponse issuer,

            string provisioningState,

            ImmutableArray<Outputs.JWTAuthenticatorValidationRuleResponse> userValidationRules)
        {
            ClaimMappings = claimMappings;
            ClaimValidationRules = claimValidationRules;
            Issuer = issuer;
            ProvisioningState = provisioningState;
            UserValidationRules = userValidationRules;
        }
    }
}
