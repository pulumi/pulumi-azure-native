// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HealthcareApis.V20210601Preview
{
    /// <summary>
    /// The description of Fhir Service
    /// </summary>
    [AzureNativeResourceType("azure-native:healthcareapis/v20210601preview:FhirService")]
    public partial class FhirService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Fhir Service access policies.
        /// </summary>
        [Output("accessPolicies")]
        public Output<ImmutableArray<Outputs.FhirServiceAccessPolicyEntryResponse>> AccessPolicies { get; private set; } = null!;

        /// <summary>
        /// Fhir Service Azure container registry configuration.
        /// </summary>
        [Output("acrConfiguration")]
        public Output<Outputs.FhirServiceAcrConfigurationResponse?> AcrConfiguration { get; private set; } = null!;

        /// <summary>
        /// Fhir Service authentication configuration.
        /// </summary>
        [Output("authenticationConfiguration")]
        public Output<Outputs.FhirServiceAuthenticationConfigurationResponse?> AuthenticationConfiguration { get; private set; } = null!;

        /// <summary>
        /// Fhir Service Cors configuration.
        /// </summary>
        [Output("corsConfiguration")]
        public Output<Outputs.FhirServiceCorsConfigurationResponse?> CorsConfiguration { get; private set; } = null!;

        /// <summary>
        /// An etag associated with the resource, used for optimistic concurrency when editing it.
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// Fhir Service export configuration.
        /// </summary>
        [Output("exportConfiguration")]
        public Output<Outputs.FhirServiceExportConfigurationResponse?> ExportConfiguration { get; private set; } = null!;

        /// <summary>
        /// Setting indicating whether the service has a managed identity associated with it.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ServiceManagedIdentityResponseIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// The kind of the service.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// The resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FhirService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FhirService(string name, FhirServiceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:healthcareapis/v20210601preview:FhirService", name, args ?? new FhirServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FhirService(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:healthcareapis/v20210601preview:FhirService", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis:FhirService"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20211101:FhirService"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20220131preview:FhirService"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20220515:FhirService"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FhirService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FhirService Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FhirService(name, id, options);
        }
    }

    public sealed class FhirServiceArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessPolicies")]
        private InputList<Inputs.FhirServiceAccessPolicyEntryArgs>? _accessPolicies;

        /// <summary>
        /// Fhir Service access policies.
        /// </summary>
        public InputList<Inputs.FhirServiceAccessPolicyEntryArgs> AccessPolicies
        {
            get => _accessPolicies ?? (_accessPolicies = new InputList<Inputs.FhirServiceAccessPolicyEntryArgs>());
            set => _accessPolicies = value;
        }

        /// <summary>
        /// Fhir Service Azure container registry configuration.
        /// </summary>
        [Input("acrConfiguration")]
        public Input<Inputs.FhirServiceAcrConfigurationArgs>? AcrConfiguration { get; set; }

        /// <summary>
        /// Fhir Service authentication configuration.
        /// </summary>
        [Input("authenticationConfiguration")]
        public Input<Inputs.FhirServiceAuthenticationConfigurationArgs>? AuthenticationConfiguration { get; set; }

        /// <summary>
        /// Fhir Service Cors configuration.
        /// </summary>
        [Input("corsConfiguration")]
        public Input<Inputs.FhirServiceCorsConfigurationArgs>? CorsConfiguration { get; set; }

        /// <summary>
        /// Fhir Service export configuration.
        /// </summary>
        [Input("exportConfiguration")]
        public Input<Inputs.FhirServiceExportConfigurationArgs>? ExportConfiguration { get; set; }

        /// <summary>
        /// The name of FHIR Service resource.
        /// </summary>
        [Input("fhirServiceName")]
        public Input<string>? FhirServiceName { get; set; }

        /// <summary>
        /// Setting indicating whether the service has a managed identity associated with it.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ServiceManagedIdentityIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The kind of the service.
        /// </summary>
        [Input("kind")]
        public InputUnion<string, Pulumi.AzureNative.HealthcareApis.V20210601Preview.FhirServiceKind>? Kind { get; set; }

        /// <summary>
        /// The resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group that contains the service instance.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of workspace resource.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public FhirServiceArgs()
        {
        }
        public static new FhirServiceArgs Empty => new FhirServiceArgs();
    }
}
