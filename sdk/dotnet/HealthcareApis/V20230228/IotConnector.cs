// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HealthcareApis.V20230228
{
    /// <summary>
    /// IoT Connector definition.
    /// </summary>
    [AzureNativeResourceType("azure-native:healthcareapis/v20230228:IotConnector")]
    public partial class IotConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Device Mappings.
        /// </summary>
        [Output("deviceMapping")]
        public Output<Outputs.IotMappingPropertiesResponse?> DeviceMapping { get; private set; } = null!;

        /// <summary>
        /// An etag associated with the resource, used for optimistic concurrency when editing it.
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// Setting indicating whether the service has a managed identity associated with it.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ServiceManagedIdentityResponseIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// Source configuration.
        /// </summary>
        [Output("ingestionEndpointConfiguration")]
        public Output<Outputs.IotEventHubIngestionEndpointConfigurationResponse?> IngestionEndpointConfiguration { get; private set; } = null!;

        /// <summary>
        /// The resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a IotConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IotConnector(string name, IotConnectorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:healthcareapis/v20230228:IotConnector", name, args ?? new IotConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IotConnector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:healthcareapis/v20230228:IotConnector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis:IotConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20210601preview:IotConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20211101:IotConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20220131preview:IotConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20220515:IotConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20220601:IotConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20221001preview:IotConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20221201:IotConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20230906:IotConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20231101:IotConnector" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IotConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IotConnector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IotConnector(name, id, options);
        }
    }

    public sealed class IotConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Device Mappings.
        /// </summary>
        [Input("deviceMapping")]
        public Input<Inputs.IotMappingPropertiesArgs>? DeviceMapping { get; set; }

        /// <summary>
        /// Setting indicating whether the service has a managed identity associated with it.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ServiceManagedIdentityIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Source configuration.
        /// </summary>
        [Input("ingestionEndpointConfiguration")]
        public Input<Inputs.IotEventHubIngestionEndpointConfigurationArgs>? IngestionEndpointConfiguration { get; set; }

        /// <summary>
        /// The name of IoT Connector resource.
        /// </summary>
        [Input("iotConnectorName")]
        public Input<string>? IotConnectorName { get; set; }

        /// <summary>
        /// The resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group that contains the service instance.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of workspace resource.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public IotConnectorArgs()
        {
        }
        public static new IotConnectorArgs Empty => new IotConnectorArgs();
    }
}
