// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Devices.V20250201Preview.Outputs
{

    /// <summary>
    /// Description of the IoT hub.
    /// </summary>
    [OutputType]
    public sealed class IotHubDefinitionDescriptionResponse
    {
        /// <summary>
        /// weight to apply for a given iot h.
        /// </summary>
        public readonly int? AllocationWeight;
        /// <summary>
        /// flag for applying allocationPolicy or not for a given iot hub.
        /// </summary>
        public readonly bool? ApplyAllocationPolicy;
        /// <summary>
        /// IotHub MI authentication type: KeyBased, UserAssigned, SystemAssigned.
        /// </summary>
        public readonly string? AuthenticationType;
        /// <summary>
        /// Connection string of the IoT hub.
        /// </summary>
        public readonly string? ConnectionString;
        /// <summary>
        /// ARM region of the IoT hub.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Host name of the IoT hub.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The selected user-assigned identity resource Id associated with IoT Hub. This is required when authenticationType is UserAssigned.
        /// </summary>
        public readonly string? SelectedUserAssignedIdentityResourceId;

        [OutputConstructor]
        private IotHubDefinitionDescriptionResponse(
            int? allocationWeight,

            bool? applyAllocationPolicy,

            string? authenticationType,

            string? connectionString,

            string location,

            string name,

            string? selectedUserAssignedIdentityResourceId)
        {
            AllocationWeight = allocationWeight;
            ApplyAllocationPolicy = applyAllocationPolicy;
            AuthenticationType = authenticationType;
            ConnectionString = connectionString;
            Location = location;
            Name = name;
            SelectedUserAssignedIdentityResourceId = selectedUserAssignedIdentityResourceId;
        }
    }
}
