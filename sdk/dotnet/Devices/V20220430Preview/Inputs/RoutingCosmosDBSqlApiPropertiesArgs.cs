// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Devices.V20220430Preview.Inputs
{

    /// <summary>
    /// The properties related to a cosmos DB sql collection endpoint.
    /// </summary>
    public sealed class RoutingCosmosDBSqlApiPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Method used to authenticate against the cosmos DB sql collection endpoint
        /// </summary>
        [Input("authenticationType")]
        public InputUnion<string, Pulumi.AzureNative.Devices.V20220430Preview.AuthenticationType>? AuthenticationType { get; set; }

        /// <summary>
        /// The name of the cosmos DB sql collection in the cosmos DB database.
        /// </summary>
        [Input("collectionName", required: true)]
        public Input<string> CollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the cosmos DB database in the cosmos DB account.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The url of the cosmos DB account. It must include the protocol https://
        /// </summary>
        [Input("endpointUri", required: true)]
        public Input<string> EndpointUri { get; set; } = null!;

        /// <summary>
        /// Id of the cosmos DB sql collection endpoint
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Managed identity properties of routing cosmos DB collection endpoint.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the partition key associated with this cosmos DB sql collection if one exists. This is an optional parameter.
        /// </summary>
        [Input("partitionKeyName")]
        public Input<string>? PartitionKeyName { get; set; }

        /// <summary>
        /// The template for generating a synthetic partition key value for use with this cosmos DB sql collection. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.
        /// </summary>
        [Input("partitionKeyTemplate")]
        public Input<string>? PartitionKeyTemplate { get; set; }

        /// <summary>
        /// The primary key of the cosmos DB account.
        /// </summary>
        [Input("primaryKey")]
        public Input<string>? PrimaryKey { get; set; }

        /// <summary>
        /// The name of the resource group of the cosmos DB account.
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// The secondary key of the cosmos DB account.
        /// </summary>
        [Input("secondaryKey")]
        public Input<string>? SecondaryKey { get; set; }

        /// <summary>
        /// The subscription identifier of the cosmos DB account.
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        public RoutingCosmosDBSqlApiPropertiesArgs()
        {
        }
        public static new RoutingCosmosDBSqlApiPropertiesArgs Empty => new RoutingCosmosDBSqlApiPropertiesArgs();
    }
}
