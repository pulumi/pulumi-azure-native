// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Devices.V20221212
{
    public static class GetIotDpsResource
    {
        /// <summary>
        /// Get the metadata of the provisioning service without SAS keys.
        /// </summary>
        public static Task<GetIotDpsResourceResult> InvokeAsync(GetIotDpsResourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIotDpsResourceResult>("azure-native:devices/v20221212:getIotDpsResource", args ?? new GetIotDpsResourceArgs(), options.WithDefaults());

        /// <summary>
        /// Get the metadata of the provisioning service without SAS keys.
        /// </summary>
        public static Output<GetIotDpsResourceResult> Invoke(GetIotDpsResourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIotDpsResourceResult>("azure-native:devices/v20221212:getIotDpsResource", args ?? new GetIotDpsResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIotDpsResourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the provisioning service to retrieve.
        /// </summary>
        [Input("provisioningServiceName", required: true)]
        public string ProvisioningServiceName { get; set; } = null!;

        /// <summary>
        /// Resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetIotDpsResourceArgs()
        {
        }
        public static new GetIotDpsResourceArgs Empty => new GetIotDpsResourceArgs();
    }

    public sealed class GetIotDpsResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the provisioning service to retrieve.
        /// </summary>
        [Input("provisioningServiceName", required: true)]
        public Input<string> ProvisioningServiceName { get; set; } = null!;

        /// <summary>
        /// Resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetIotDpsResourceInvokeArgs()
        {
        }
        public static new GetIotDpsResourceInvokeArgs Empty => new GetIotDpsResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetIotDpsResourceResult
    {
        /// <summary>
        /// The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// The resource identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Service specific properties for a provisioning service
        /// </summary>
        public readonly Outputs.IotDpsPropertiesDescriptionResponse Properties;
        /// <summary>
        /// The resource group of the resource.
        /// </summary>
        public readonly string? Resourcegroup;
        /// <summary>
        /// Sku info for a provisioning Service.
        /// </summary>
        public readonly Outputs.IotDpsSkuInfoResponse Sku;
        /// <summary>
        /// The subscription id of the resource.
        /// </summary>
        public readonly string? Subscriptionid;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIotDpsResourceResult(
            string? etag,

            string id,

            string location,

            string name,

            Outputs.IotDpsPropertiesDescriptionResponse properties,

            string? resourcegroup,

            Outputs.IotDpsSkuInfoResponse sku,

            string? subscriptionid,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Resourcegroup = resourcegroup;
            Sku = sku;
            Subscriptionid = subscriptionid;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
