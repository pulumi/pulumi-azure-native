// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Devices.V20230301Preview
{
    /// <summary>
    /// The X509 Certificate.
    /// </summary>
    [AzureNativeResourceType("azure-native:devices/v20230301preview:DpsCertificate")]
    public partial class DpsCertificate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The entity tag.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The name of the certificate.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// properties of a certificate
        /// </summary>
        [Output("properties")]
        public Output<Outputs.CertificatePropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DpsCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DpsCertificate(string name, DpsCertificateArgs args, CustomResourceOptions? options = null)
            : base("azure-native:devices/v20230301preview:DpsCertificate", name, args ?? new DpsCertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DpsCertificate(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:devices/v20230301preview:DpsCertificate", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:devices:DpsCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:devices/v20170821preview:DpsCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:devices/v20171115:DpsCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:devices/v20180122:DpsCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:devices/v20200101:DpsCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:devices/v20200301:DpsCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:devices/v20200901preview:DpsCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:devices/v20211015:DpsCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:devices/v20220205:DpsCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:devices/v20221212:DpsCertificate" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DpsCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DpsCertificate Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DpsCertificate(name, id, options);
        }
    }

    public sealed class DpsCertificateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the certificate create or update.
        /// </summary>
        [Input("certificateName")]
        public Input<string>? CertificateName { get; set; }

        /// <summary>
        /// properties of a certificate
        /// </summary>
        [Input("properties")]
        public Input<Inputs.CertificatePropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the provisioning service.
        /// </summary>
        [Input("provisioningServiceName", required: true)]
        public Input<string> ProvisioningServiceName { get; set; } = null!;

        /// <summary>
        /// Resource group identifier.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public DpsCertificateArgs()
        {
        }
        public static new DpsCertificateArgs Empty => new DpsCertificateArgs();
    }
}
