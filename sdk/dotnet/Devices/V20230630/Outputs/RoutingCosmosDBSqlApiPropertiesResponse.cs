// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Devices.V20230630.Outputs
{

    /// <summary>
    /// The properties related to a cosmos DB sql container endpoint.
    /// </summary>
    [OutputType]
    public sealed class RoutingCosmosDBSqlApiPropertiesResponse
    {
        /// <summary>
        /// Method used to authenticate against the cosmos DB sql container endpoint
        /// </summary>
        public readonly string? AuthenticationType;
        /// <summary>
        /// The name of the cosmos DB sql container in the cosmos DB database.
        /// </summary>
        public readonly string ContainerName;
        /// <summary>
        /// The name of the cosmos DB database in the cosmos DB account.
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// The url of the cosmos DB account. It must include the protocol https://
        /// </summary>
        public readonly string EndpointUri;
        /// <summary>
        /// Id of the cosmos DB sql container endpoint
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Managed identity properties of routing cosmos DB container endpoint.
        /// </summary>
        public readonly Outputs.ManagedIdentityResponse? Identity;
        /// <summary>
        /// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.
        /// </summary>
        public readonly string? PartitionKeyName;
        /// <summary>
        /// The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.
        /// </summary>
        public readonly string? PartitionKeyTemplate;
        /// <summary>
        /// The primary key of the cosmos DB account.
        /// </summary>
        public readonly string? PrimaryKey;
        /// <summary>
        /// The name of the resource group of the cosmos DB account.
        /// </summary>
        public readonly string? ResourceGroup;
        /// <summary>
        /// The secondary key of the cosmos DB account.
        /// </summary>
        public readonly string? SecondaryKey;
        /// <summary>
        /// The subscription identifier of the cosmos DB account.
        /// </summary>
        public readonly string? SubscriptionId;

        [OutputConstructor]
        private RoutingCosmosDBSqlApiPropertiesResponse(
            string? authenticationType,

            string containerName,

            string databaseName,

            string endpointUri,

            string id,

            Outputs.ManagedIdentityResponse? identity,

            string name,

            string? partitionKeyName,

            string? partitionKeyTemplate,

            string? primaryKey,

            string? resourceGroup,

            string? secondaryKey,

            string? subscriptionId)
        {
            AuthenticationType = authenticationType;
            ContainerName = containerName;
            DatabaseName = databaseName;
            EndpointUri = endpointUri;
            Id = id;
            Identity = identity;
            Name = name;
            PartitionKeyName = partitionKeyName;
            PartitionKeyTemplate = partitionKeyTemplate;
            PrimaryKey = primaryKey;
            ResourceGroup = resourceGroup;
            SecondaryKey = secondaryKey;
            SubscriptionId = subscriptionId;
        }
    }
}
