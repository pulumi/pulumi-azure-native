// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Devices.Inputs
{

    /// <summary>
    /// The properties of an IoT hub.
    /// </summary>
    public sealed class IotHubPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        [Input("authorizationPolicies")]
        private InputList<Inputs.SharedAccessSignatureAuthorizationRuleResponseGetArgs>? _authorizationPolicies;

        /// <summary>
        /// The shared access policies you can use to secure a connection to the IoT hub.
        /// </summary>
        public InputList<Inputs.SharedAccessSignatureAuthorizationRuleResponseGetArgs> AuthorizationPolicies
        {
            get => _authorizationPolicies ?? (_authorizationPolicies = new InputList<Inputs.SharedAccessSignatureAuthorizationRuleResponseGetArgs>());
            set => _authorizationPolicies = value;
        }

        /// <summary>
        /// The IoT hub cloud-to-device messaging properties.
        /// </summary>
        [Input("cloudToDevice")]
        public Input<Inputs.CloudToDevicePropertiesResponseGetArgs>? CloudToDevice { get; set; }

        /// <summary>
        /// IoT hub comments.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// If True, file upload notifications are enabled.
        /// </summary>
        [Input("enableFileUploadNotifications")]
        public Input<bool>? EnableFileUploadNotifications { get; set; }

        [Input("eventHubEndpoints")]
        private InputMap<string>? _eventHubEndpoints;

        /// <summary>
        /// The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.
        /// </summary>
        public InputMap<string> EventHubEndpoints
        {
            get => _eventHubEndpoints ?? (_eventHubEndpoints = new InputMap<string>());
            set => _eventHubEndpoints = value;
        }

        /// <summary>
        /// The capabilities and features enabled for the IoT hub.
        /// </summary>
        [Input("features")]
        public Input<string>? Features { get; set; }

        /// <summary>
        /// The name of the host.
        /// </summary>
        [Input("hostName", required: true)]
        public Input<string> HostName { get; set; } = null!;

        [Input("ipFilterRules")]
        private InputList<Inputs.IpFilterRuleResponseGetArgs>? _ipFilterRules;

        /// <summary>
        /// The IP filter rules.
        /// </summary>
        public InputList<Inputs.IpFilterRuleResponseGetArgs> IpFilterRules
        {
            get => _ipFilterRules ?? (_ipFilterRules = new InputList<Inputs.IpFilterRuleResponseGetArgs>());
            set => _ipFilterRules = value;
        }

        [Input("locations", required: true)]
        private InputList<Inputs.IotHubLocationDescriptionResponseGetArgs>? _locations;

        /// <summary>
        /// Primary and secondary location for iot hub
        /// </summary>
        public InputList<Inputs.IotHubLocationDescriptionResponseGetArgs> Locations
        {
            get => _locations ?? (_locations = new InputList<Inputs.IotHubLocationDescriptionResponseGetArgs>());
            set => _locations = value;
        }

        [Input("messagingEndpoints")]
        private InputMap<string>? _messagingEndpoints;

        /// <summary>
        /// The messaging endpoint properties for the file upload notification queue.
        /// </summary>
        public InputMap<string> MessagingEndpoints
        {
            get => _messagingEndpoints ?? (_messagingEndpoints = new InputMap<string>());
            set => _messagingEndpoints = value;
        }

        /// <summary>
        /// Specifies the minimum TLS version to support for this hub. Can be set to "1.2" to have clients that use a TLS version below 1.2 to be rejected.
        /// </summary>
        [Input("minTlsVersion")]
        public Input<string>? MinTlsVersion { get; set; }

        [Input("privateEndpointConnections")]
        private InputList<Inputs.PrivateEndpointConnectionResponseGetArgs>? _privateEndpointConnections;

        /// <summary>
        /// Private endpoint connections created on this IotHub
        /// </summary>
        public InputList<Inputs.PrivateEndpointConnectionResponseGetArgs> PrivateEndpointConnections
        {
            get => _privateEndpointConnections ?? (_privateEndpointConnections = new InputList<Inputs.PrivateEndpointConnectionResponseGetArgs>());
            set => _privateEndpointConnections = value;
        }

        /// <summary>
        /// The provisioning state.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// Whether requests from Public Network are allowed
        /// </summary>
        [Input("publicNetworkAccess")]
        public Input<string>? PublicNetworkAccess { get; set; }

        /// <summary>
        /// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
        /// </summary>
        [Input("routing")]
        public Input<Inputs.RoutingPropertiesResponseGetArgs>? Routing { get; set; }

        /// <summary>
        /// The hub state.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        [Input("storageEndpoints")]
        private InputMap<string>? _storageEndpoints;

        /// <summary>
        /// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
        /// </summary>
        public InputMap<string> StorageEndpoints
        {
            get => _storageEndpoints ?? (_storageEndpoints = new InputMap<string>());
            set => _storageEndpoints = value;
        }

        public IotHubPropertiesResponseGetArgs()
        {
        }
    }
}
