// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Devices
{
    public static class GetProvisioningServiceCertificate
    {
        public static Task<GetProvisioningServiceCertificateResult> InvokeAsync(GetProvisioningServiceCertificateArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProvisioningServiceCertificateResult>("azurerm:devices:getProvisioningServiceCertificate", args ?? new GetProvisioningServiceCertificateArgs(), options.WithVersion());
    }


    public sealed class GetProvisioningServiceCertificateArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the certificate to retrieve.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the provisioning service the certificate is associated with.
        /// </summary>
        [Input("provisioningServiceName", required: true)]
        public string ProvisioningServiceName { get; set; } = null!;

        /// <summary>
        /// Resource group identifier.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetProvisioningServiceCertificateArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProvisioningServiceCertificateResult
    {
        /// <summary>
        /// The entity tag.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The name of the certificate.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// properties of a certificate
        /// </summary>
        public readonly Outputs.CertificatePropertiesResponseResult Properties;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetProvisioningServiceCertificateResult(
            string etag,

            string name,

            Outputs.CertificatePropertiesResponseResult properties,

            string type)
        {
            Etag = etag;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
