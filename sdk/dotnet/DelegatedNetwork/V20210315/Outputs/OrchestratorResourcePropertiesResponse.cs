// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DelegatedNetwork.V20210315.Outputs
{

    [OutputType]
    public sealed class OrchestratorResourcePropertiesResponse
    {
        /// <summary>
        /// K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
        /// </summary>
        public readonly string? ApiServerEndpoint;
        /// <summary>
        /// RootCA certificate of kubernetes cluster base64 encoded
        /// </summary>
        public readonly string? ClusterRootCA;
        /// <summary>
        /// Properties of the controller.
        /// </summary>
        public readonly Outputs.ControllerDetailsResponse ControllerDetails;
        /// <summary>
        /// AAD ID used with apiserver
        /// </summary>
        public readonly string? OrchestratorAppId;
        /// <summary>
        /// TenantID of server App ID
        /// </summary>
        public readonly string? OrchestratorTenantId;
        /// <summary>
        /// private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
        /// </summary>
        public readonly string? PrivateLinkResourceId;
        /// <summary>
        /// The current state of orchestratorInstance resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource guid.
        /// </summary>
        public readonly string ResourceGuid;

        [OutputConstructor]
        private OrchestratorResourcePropertiesResponse(
            string? apiServerEndpoint,

            string? clusterRootCA,

            Outputs.ControllerDetailsResponse controllerDetails,

            string? orchestratorAppId,

            string? orchestratorTenantId,

            string? privateLinkResourceId,

            string provisioningState,

            string resourceGuid)
        {
            ApiServerEndpoint = apiServerEndpoint;
            ClusterRootCA = clusterRootCA;
            ControllerDetails = controllerDetails;
            OrchestratorAppId = orchestratorAppId;
            OrchestratorTenantId = orchestratorTenantId;
            PrivateLinkResourceId = privateLinkResourceId;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
        }
    }
}
