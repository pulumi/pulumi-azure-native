// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DelegatedNetwork.V20200808Preview
{
    /// <summary>
    /// Represents an instance of a DNC controller.
    /// </summary>
    public partial class ControllerDetails : Pulumi.CustomResource
    {
        /// <summary>
        /// The current state of dnc controller resource.
        /// </summary>
        [Output("dncAppId")]
        public Output<string?> DncAppId { get; private set; } = null!;

        /// <summary>
        /// dnc endpoint url that customers can use to connect to
        /// </summary>
        [Output("dncEndpoint")]
        public Output<string?> DncEndpoint { get; private set; } = null!;

        /// <summary>
        /// Location of the DNC controller resource.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the DNC controller resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The current state of dnc controller resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The type of the DNC controller  resource.(Microsoft.DelegatedNetwork/controller)
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ControllerDetails resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ControllerDetails(string name, ControllerDetailsArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:delegatednetwork/v20200808preview:ControllerDetails", name, args ?? new ControllerDetailsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ControllerDetails(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:delegatednetwork/v20200808preview:ControllerDetails", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ControllerDetails resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ControllerDetails Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ControllerDetails(name, id, options);
        }
    }

    public sealed class ControllerDetailsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// APIServer url
        /// </summary>
        [Input("apiServerEndpoint")]
        public Input<string>? ApiServerEndpoint { get; set; }

        /// <summary>
        /// RootCA certificate of kubernetes cluster
        /// </summary>
        [Input("clusterRootCA")]
        public Input<string>? ClusterRootCA { get; set; }

        /// <summary>
        /// Type of controller
        /// </summary>
        [Input("controllerType")]
        public Input<string>? ControllerType { get; set; }

        /// <summary>
        /// The name of the Azure Resource group of which a given DelegatedNetwork resource is part. This name must be at least 1 character in length, and no more than 90.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// AAD ID used with apiserver
        /// </summary>
        [Input("serverAppID")]
        public Input<string>? ServerAppID { get; set; }

        /// <summary>
        /// TenantID of server App ID
        /// </summary>
        [Input("serverTenantID")]
        public Input<string>? ServerTenantID { get; set; }

        public ControllerDetailsArgs()
        {
        }
    }
}
