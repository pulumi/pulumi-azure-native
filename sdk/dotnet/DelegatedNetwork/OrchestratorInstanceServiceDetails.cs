// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DelegatedNetwork
{
    /// <summary>
    /// Represents an instance of a orchestrator.
    /// API Version: 2021-03-15.
    /// </summary>
    [AzureNativeResourceType("azure-native:delegatednetwork:OrchestratorInstanceServiceDetails")]
    public partial class OrchestratorInstanceServiceDetails : Pulumi.CustomResource
    {
        /// <summary>
        /// The identity of the orchestrator
        /// </summary>
        [Output("identity")]
        public Output<Outputs.OrchestratorIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The kind of workbook. Choices are user and shared.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Location of the resource.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Properties of the provision operation request.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.OrchestratorResourcePropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// The resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a OrchestratorInstanceServiceDetails resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrchestratorInstanceServiceDetails(string name, OrchestratorInstanceServiceDetailsArgs args, CustomResourceOptions? options = null)
            : base("azure-native:delegatednetwork:OrchestratorInstanceServiceDetails", name, args ?? new OrchestratorInstanceServiceDetailsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrchestratorInstanceServiceDetails(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:delegatednetwork:OrchestratorInstanceServiceDetails", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:delegatednetwork:OrchestratorInstanceServiceDetails"},
                    new Pulumi.Alias { Type = "azure-native:delegatednetwork/v20200808preview:OrchestratorInstanceServiceDetails"},
                    new Pulumi.Alias { Type = "azure-nextgen:delegatednetwork/v20200808preview:OrchestratorInstanceServiceDetails"},
                    new Pulumi.Alias { Type = "azure-native:delegatednetwork/v20210315:OrchestratorInstanceServiceDetails"},
                    new Pulumi.Alias { Type = "azure-nextgen:delegatednetwork/v20210315:OrchestratorInstanceServiceDetails"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrchestratorInstanceServiceDetails resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrchestratorInstanceServiceDetails Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new OrchestratorInstanceServiceDetails(name, id, options);
        }
    }

    public sealed class OrchestratorInstanceServiceDetailsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identity of the orchestrator
        /// </summary>
        [Input("identity")]
        public Input<Inputs.OrchestratorIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The kind of workbook. Choices are user and shared.
        /// </summary>
        [Input("kind", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DelegatedNetwork.OrchestratorKind> Kind { get; set; } = null!;

        /// <summary>
        /// Location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Properties of the provision operation request.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.OrchestratorResourcePropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public OrchestratorInstanceServiceDetailsArgs()
        {
        }
    }
}
