// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DelegatedNetwork
{
    public static class GetDelegatedSubnetServiceDetails
    {
        /// <summary>
        /// Represents an instance of a orchestrator.
        /// API Version: 2021-03-15.
        /// </summary>
        public static Task<GetDelegatedSubnetServiceDetailsResult> InvokeAsync(GetDelegatedSubnetServiceDetailsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDelegatedSubnetServiceDetailsResult>("azure-native:delegatednetwork:getDelegatedSubnetServiceDetails", args ?? new GetDelegatedSubnetServiceDetailsArgs(), options.WithVersion());
    }


    public sealed class GetDelegatedSubnetServiceDetailsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetDelegatedSubnetServiceDetailsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDelegatedSubnetServiceDetailsResult
    {
        /// <summary>
        /// An identifier that represents the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Location of the resource.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the provision operation request.
        /// </summary>
        public readonly Outputs.DelegatedSubnetPropertiesResponse Properties;
        /// <summary>
        /// The resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDelegatedSubnetServiceDetailsResult(
            string id,

            string? location,

            string name,

            Outputs.DelegatedSubnetPropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
