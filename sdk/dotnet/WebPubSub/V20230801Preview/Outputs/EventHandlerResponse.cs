// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.WebPubSub.V20230801Preview.Outputs
{

    /// <summary>
    /// Properties of event handler.
    /// </summary>
    [OutputType]
    public sealed class EventHandlerResponse
    {
        /// <summary>
        /// Upstream auth settings. If not set, no auth is used for upstream messages.
        /// </summary>
        public readonly Outputs.UpstreamAuthSettingsResponse? Auth;
        /// <summary>
        /// Gets or sets the list of system events.
        /// </summary>
        public readonly ImmutableArray<string> SystemEvents;
        /// <summary>
        /// Gets or sets the EventHandler URL template. You can use a predefined parameter {hub} and {event} inside the template, the value of the EventHandler URL is dynamically calculated when the client request comes in.
        /// For example, UrlTemplate can be `http://example.com/api/{hub}/{event}`. The host part can't contains parameters.
        /// </summary>
        public readonly string UrlTemplate;
        /// <summary>
        /// Gets or sets the matching pattern for event names.
        /// There are 3 kinds of patterns supported:
        ///     1. "*", it matches any event name
        ///     2. Combine multiple events with ",", for example "event1,event2", it matches event "event1" and "event2"
        ///     3. A single event name, for example, "event1", it matches "event1"
        /// </summary>
        public readonly string? UserEventPattern;

        [OutputConstructor]
        private EventHandlerResponse(
            Outputs.UpstreamAuthSettingsResponse? auth,

            ImmutableArray<string> systemEvents,

            string urlTemplate,

            string? userEventPattern)
        {
            Auth = auth;
            SystemEvents = systemEvents;
            UrlTemplate = urlTemplate;
            UserEventPattern = userEventPattern;
        }
    }
}
