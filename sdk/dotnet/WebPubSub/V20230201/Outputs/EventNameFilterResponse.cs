// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.WebPubSub.V20230201.Outputs
{

    /// <summary>
    /// Filter events by their name.
    /// </summary>
    [OutputType]
    public sealed class EventNameFilterResponse
    {
        /// <summary>
        /// Gets or sets a list of system events. Supported events: "connected" and "disconnected". Blocking event "connect" is not supported because it requires a response.
        /// </summary>
        public readonly ImmutableArray<string> SystemEvents;
        /// <summary>
        /// 
        /// Expected value is 'EventName'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Gets or sets a matching pattern for event names.
        /// There are 3 kinds of patterns supported:
        ///     1. "*", it matches any event name
        ///     2. Combine multiple events with ",", for example "event1,event2", it matches events "event1" and "event2"
        ///     3. A single event name, for example, "event1", it matches "event1"
        /// </summary>
        public readonly string? UserEventPattern;

        [OutputConstructor]
        private EventNameFilterResponse(
            ImmutableArray<string> systemEvents,

            string type,

            string? userEventPattern)
        {
            SystemEvents = systemEvents;
            Type = type;
            UserEventPattern = userEventPattern;
        }
    }
}
