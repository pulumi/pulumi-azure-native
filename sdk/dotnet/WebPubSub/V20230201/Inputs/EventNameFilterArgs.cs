// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.WebPubSub.V20230201.Inputs
{

    /// <summary>
    /// Filter events by their name.
    /// </summary>
    public sealed class EventNameFilterArgs : global::Pulumi.ResourceArgs
    {
        [Input("systemEvents")]
        private InputList<string>? _systemEvents;

        /// <summary>
        /// Gets or sets a list of system events. Supported events: "connected" and "disconnected". Blocking event "connect" is not supported because it requires a response.
        /// </summary>
        public InputList<string> SystemEvents
        {
            get => _systemEvents ?? (_systemEvents = new InputList<string>());
            set => _systemEvents = value;
        }

        /// <summary>
        /// 
        /// Expected value is 'EventName'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Gets or sets a matching pattern for event names.
        /// There are 3 kinds of patterns supported:
        ///     1. "*", it matches any event name
        ///     2. Combine multiple events with ",", for example "event1,event2", it matches events "event1" and "event2"
        ///     3. A single event name, for example, "event1", it matches "event1"
        /// </summary>
        [Input("userEventPattern")]
        public Input<string>? UserEventPattern { get; set; }

        public EventNameFilterArgs()
        {
        }
        public static new EventNameFilterArgs Empty => new EventNameFilterArgs();
    }
}
