// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.WebPubSub.V20241001Preview.Inputs
{

    /// <summary>
    /// Throttle the client traffic by the user ID
    /// </summary>
    public sealed class TrafficThrottleByUserIdRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The aggregation window for the message bytes. The message bytes will be aggregated in this window and be reset after the window. Default value is 60 seconds.
        /// </summary>
        [Input("aggregationWindowInSeconds")]
        public Input<int>? AggregationWindowInSeconds { get; set; }

        /// <summary>
        /// Maximum accumulated inbound message bytes allowed for the same user ID within a time window. Clients with the same user ID will get disconnected if the message bytes exceeds this value. Default value is 1GB.
        /// </summary>
        [Input("maxInboundMessageBytes")]
        public Input<double>? MaxInboundMessageBytes { get; set; }

        /// <summary>
        /// 
        /// Expected value is 'TrafficThrottleByUserIdRule'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public TrafficThrottleByUserIdRuleArgs()
        {
            AggregationWindowInSeconds = 60;
        }
        public static new TrafficThrottleByUserIdRuleArgs Empty => new TrafficThrottleByUserIdRuleArgs();
    }
}
