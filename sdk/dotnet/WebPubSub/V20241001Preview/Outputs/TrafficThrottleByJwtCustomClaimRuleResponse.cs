// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.WebPubSub.V20241001Preview.Outputs
{

    /// <summary>
    /// Throttle the client traffic by a custom JWT claim
    /// </summary>
    [OutputType]
    public sealed class TrafficThrottleByJwtCustomClaimRuleResponse
    {
        /// <summary>
        /// The aggregation window for the message bytes. The message bytes will be aggregated in this window and be reset after the window. Default value is 60 seconds.
        /// </summary>
        public readonly int? AggregationWindowInSeconds;
        /// <summary>
        /// The name of the claim in the JWT token. The message bytes with the same claim value will be aggregated. If the claim is not found in the token, the rule will be skipped.
        /// </summary>
        public readonly string ClaimName;
        /// <summary>
        /// Maximum accumulated inbound message bytes allowed for the same JWT signature within a time window. Clients with the same JWT claim will get disconnected if the message bytes exceeds this value. Default value is 1GB.
        /// </summary>
        public readonly double? MaxInboundMessageBytes;
        /// <summary>
        /// 
        /// Expected value is 'TrafficThrottleByJwtCustomClaimRule'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private TrafficThrottleByJwtCustomClaimRuleResponse(
            int? aggregationWindowInSeconds,

            string claimName,

            double? maxInboundMessageBytes,

            string type)
        {
            AggregationWindowInSeconds = aggregationWindowInSeconds;
            ClaimName = claimName;
            MaxInboundMessageBytes = maxInboundMessageBytes;
            Type = type;
        }
    }
}
