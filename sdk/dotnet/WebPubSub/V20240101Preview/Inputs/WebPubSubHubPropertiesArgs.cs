// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.WebPubSub.V20240101Preview.Inputs
{

    /// <summary>
    /// Properties of a hub.
    /// </summary>
    public sealed class WebPubSubHubPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The settings for configuring if anonymous connections are allowed for this hub: "allow" or "deny". Default to "deny".
        /// </summary>
        [Input("anonymousConnectPolicy")]
        public Input<string>? AnonymousConnectPolicy { get; set; }

        [Input("eventHandlers")]
        private InputList<Inputs.EventHandlerArgs>? _eventHandlers;

        /// <summary>
        /// Event handler of a hub.
        /// </summary>
        public InputList<Inputs.EventHandlerArgs> EventHandlers
        {
            get => _eventHandlers ?? (_eventHandlers = new InputList<Inputs.EventHandlerArgs>());
            set => _eventHandlers = value;
        }

        [Input("eventListeners")]
        private InputList<Inputs.EventListenerArgs>? _eventListeners;

        /// <summary>
        /// Event listener settings for forwarding your client events to listeners.
        /// Event listener is transparent to Web PubSub clients, and it doesn't return any result to clients nor interrupt the lifetime of clients.
        /// One event can be sent to multiple listeners, as long as it matches the filters in those listeners. The order of the array elements doesn't matter.
        /// Maximum count of event listeners among all hubs is 10.
        /// </summary>
        public InputList<Inputs.EventListenerArgs> EventListeners
        {
            get => _eventListeners ?? (_eventListeners = new InputList<Inputs.EventListenerArgs>());
            set => _eventListeners = value;
        }

        /// <summary>
        /// The settings for configuring the WebSocket ping-pong interval in seconds for all clients in the hub. Valid range: 1 to 120. Default to 20 seconds.
        /// </summary>
        [Input("webSocketKeepAliveIntervalInSeconds")]
        public Input<int>? WebSocketKeepAliveIntervalInSeconds { get; set; }

        public WebPubSubHubPropertiesArgs()
        {
            AnonymousConnectPolicy = "deny";
            WebSocketKeepAliveIntervalInSeconds = 20;
        }
        public static new WebPubSubHubPropertiesArgs Empty => new WebPubSubHubPropertiesArgs();
    }
}
