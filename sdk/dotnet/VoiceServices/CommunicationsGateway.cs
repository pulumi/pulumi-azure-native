// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VoiceServices
{
    /// <summary>
    /// A CommunicationsGateway resource
    /// Azure REST API version: 2023-04-03. Prior API version in Azure Native 1.x: 2022-12-01-preview.
    /// 
    /// Other available API versions: 2023-09-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:voiceservices:CommunicationsGateway")]
    public partial class CommunicationsGateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Details of API bridge functionality, if required
        /// </summary>
        [Output("apiBridge")]
        public Output<object?> ApiBridge { get; private set; } = null!;

        /// <summary>
        /// The autogenerated label used as part of the FQDNs for accessing the Communications Gateway
        /// </summary>
        [Output("autoGeneratedDomainNameLabel")]
        public Output<string> AutoGeneratedDomainNameLabel { get; private set; } = null!;

        /// <summary>
        /// The scope at which the auto-generated domain name can be re-used
        /// </summary>
        [Output("autoGeneratedDomainNameLabelScope")]
        public Output<string?> AutoGeneratedDomainNameLabelScope { get; private set; } = null!;

        /// <summary>
        /// Voice codecs to support
        /// </summary>
        [Output("codecs")]
        public Output<ImmutableArray<string>> Codecs { get; private set; } = null!;

        /// <summary>
        /// How to connect back to the operator network, e.g. MAPS
        /// </summary>
        [Output("connectivity")]
        public Output<string> Connectivity { get; private set; } = null!;

        /// <summary>
        /// How to handle 911 calls
        /// </summary>
        [Output("e911Type")]
        public Output<string> E911Type { get; private set; } = null!;

        /// <summary>
        /// A list of dial strings used for emergency calling.
        /// </summary>
        [Output("emergencyDialStrings")]
        public Output<ImmutableArray<string>> EmergencyDialStrings { get; private set; } = null!;

        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Whether an integrated Mobile Control Point is in use.
        /// </summary>
        [Output("integratedMcpEnabled")]
        public Output<bool?> IntegratedMcpEnabled { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether an on-premises Mobile Control Point is in use.
        /// </summary>
        [Output("onPremMcpEnabled")]
        public Output<bool?> OnPremMcpEnabled { get; private set; } = null!;

        /// <summary>
        /// What platforms to support
        /// </summary>
        [Output("platforms")]
        public Output<ImmutableArray<string>> Platforms { get; private set; } = null!;

        /// <summary>
        /// Resource provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The regions in which to deploy the resources needed for Teams Calling
        /// </summary>
        [Output("serviceLocations")]
        public Output<ImmutableArray<Outputs.ServiceRegionPropertiesResponse>> ServiceLocations { get; private set; } = null!;

        /// <summary>
        /// The current status of the deployment.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// This number is used in Teams Phone Mobile scenarios for access to the voicemail IVR from the native dialer.
        /// </summary>
        [Output("teamsVoicemailPilotNumber")]
        public Output<string?> TeamsVoicemailPilotNumber { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a CommunicationsGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CommunicationsGateway(string name, CommunicationsGatewayArgs args, CustomResourceOptions? options = null)
            : base("azure-native:voiceservices:CommunicationsGateway", name, args ?? new CommunicationsGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CommunicationsGateway(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:voiceservices:CommunicationsGateway", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:voiceservices/v20221201preview:CommunicationsGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:voiceservices/v20230131:CommunicationsGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:voiceservices/v20230403:CommunicationsGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:voiceservices/v20230901:CommunicationsGateway" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CommunicationsGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CommunicationsGateway Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CommunicationsGateway(name, id, options);
        }
    }

    public sealed class CommunicationsGatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Details of API bridge functionality, if required
        /// </summary>
        [Input("apiBridge")]
        public Input<object>? ApiBridge { get; set; }

        /// <summary>
        /// The scope at which the auto-generated domain name can be re-used
        /// </summary>
        [Input("autoGeneratedDomainNameLabelScope")]
        public InputUnion<string, Pulumi.AzureNative.VoiceServices.AutoGeneratedDomainNameLabelScope>? AutoGeneratedDomainNameLabelScope { get; set; }

        [Input("codecs", required: true)]
        private InputList<Union<string, Pulumi.AzureNative.VoiceServices.TeamsCodecs>>? _codecs;

        /// <summary>
        /// Voice codecs to support
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.VoiceServices.TeamsCodecs>> Codecs
        {
            get => _codecs ?? (_codecs = new InputList<Union<string, Pulumi.AzureNative.VoiceServices.TeamsCodecs>>());
            set => _codecs = value;
        }

        /// <summary>
        /// Unique identifier for this deployment
        /// </summary>
        [Input("communicationsGatewayName")]
        public Input<string>? CommunicationsGatewayName { get; set; }

        /// <summary>
        /// How to connect back to the operator network, e.g. MAPS
        /// </summary>
        [Input("connectivity", required: true)]
        public InputUnion<string, Pulumi.AzureNative.VoiceServices.Connectivity> Connectivity { get; set; } = null!;

        /// <summary>
        /// How to handle 911 calls
        /// </summary>
        [Input("e911Type", required: true)]
        public InputUnion<string, Pulumi.AzureNative.VoiceServices.E911Type> E911Type { get; set; } = null!;

        [Input("emergencyDialStrings")]
        private InputList<string>? _emergencyDialStrings;

        /// <summary>
        /// A list of dial strings used for emergency calling.
        /// </summary>
        public InputList<string> EmergencyDialStrings
        {
            get => _emergencyDialStrings ?? (_emergencyDialStrings = new InputList<string>());
            set => _emergencyDialStrings = value;
        }

        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Whether an integrated Mobile Control Point is in use.
        /// </summary>
        [Input("integratedMcpEnabled")]
        public Input<bool>? IntegratedMcpEnabled { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Whether an on-premises Mobile Control Point is in use.
        /// </summary>
        [Input("onPremMcpEnabled")]
        public Input<bool>? OnPremMcpEnabled { get; set; }

        [Input("platforms", required: true)]
        private InputList<Union<string, Pulumi.AzureNative.VoiceServices.CommunicationsPlatform>>? _platforms;

        /// <summary>
        /// What platforms to support
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.VoiceServices.CommunicationsPlatform>> Platforms
        {
            get => _platforms ?? (_platforms = new InputList<Union<string, Pulumi.AzureNative.VoiceServices.CommunicationsPlatform>>());
            set => _platforms = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("serviceLocations", required: true)]
        private InputList<Inputs.ServiceRegionPropertiesArgs>? _serviceLocations;

        /// <summary>
        /// The regions in which to deploy the resources needed for Teams Calling
        /// </summary>
        public InputList<Inputs.ServiceRegionPropertiesArgs> ServiceLocations
        {
            get => _serviceLocations ?? (_serviceLocations = new InputList<Inputs.ServiceRegionPropertiesArgs>());
            set => _serviceLocations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// This number is used in Teams Phone Mobile scenarios for access to the voicemail IVR from the native dialer.
        /// </summary>
        [Input("teamsVoicemailPilotNumber")]
        public Input<string>? TeamsVoicemailPilotNumber { get; set; }

        public CommunicationsGatewayArgs()
        {
            AutoGeneratedDomainNameLabelScope = "TenantReuse";
            IntegratedMcpEnabled = false;
            OnPremMcpEnabled = false;
        }
        public static new CommunicationsGatewayArgs Empty => new CommunicationsGatewayArgs();
    }
}
