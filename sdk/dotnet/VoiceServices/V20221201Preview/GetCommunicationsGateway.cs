// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VoiceServices.V20221201Preview
{
    public static class GetCommunicationsGateway
    {
        /// <summary>
        /// Get a CommunicationsGateway
        /// </summary>
        public static Task<GetCommunicationsGatewayResult> InvokeAsync(GetCommunicationsGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCommunicationsGatewayResult>("azure-native:voiceservices/v20221201preview:getCommunicationsGateway", args ?? new GetCommunicationsGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Get a CommunicationsGateway
        /// </summary>
        public static Output<GetCommunicationsGatewayResult> Invoke(GetCommunicationsGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCommunicationsGatewayResult>("azure-native:voiceservices/v20221201preview:getCommunicationsGateway", args ?? new GetCommunicationsGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCommunicationsGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier for this deployment
        /// </summary>
        [Input("communicationsGatewayName", required: true)]
        public string CommunicationsGatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCommunicationsGatewayArgs()
        {
        }
        public static new GetCommunicationsGatewayArgs Empty => new GetCommunicationsGatewayArgs();
    }

    public sealed class GetCommunicationsGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier for this deployment
        /// </summary>
        [Input("communicationsGatewayName", required: true)]
        public Input<string> CommunicationsGatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCommunicationsGatewayInvokeArgs()
        {
        }
        public static new GetCommunicationsGatewayInvokeArgs Empty => new GetCommunicationsGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetCommunicationsGatewayResult
    {
        /// <summary>
        /// Details of API bridge functionality, if required
        /// </summary>
        public readonly object? ApiBridge;
        /// <summary>
        /// Voice codecs to support
        /// </summary>
        public readonly ImmutableArray<string> Codecs;
        /// <summary>
        /// How to connect back to the operator network, e.g. MAPS
        /// </summary>
        public readonly string Connectivity;
        /// <summary>
        /// How to handle 911 calls
        /// </summary>
        public readonly string E911Type;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// What platforms to support
        /// </summary>
        public readonly ImmutableArray<string> Platforms;
        /// <summary>
        /// Resource provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The regions in which to deploy the resources needed for Teams Calling
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceRegionPropertiesResponse> ServiceLocations;
        /// <summary>
        /// The current status of the deployment.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCommunicationsGatewayResult(
            object? apiBridge,

            ImmutableArray<string> codecs,

            string connectivity,

            string e911Type,

            string id,

            string location,

            string name,

            ImmutableArray<string> platforms,

            string provisioningState,

            ImmutableArray<Outputs.ServiceRegionPropertiesResponse> serviceLocations,

            string status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ApiBridge = apiBridge;
            Codecs = codecs;
            Connectivity = connectivity;
            E911Type = e911Type;
            Id = id;
            Location = location;
            Name = name;
            Platforms = platforms;
            ProvisioningState = provisioningState;
            ServiceLocations = serviceLocations;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
