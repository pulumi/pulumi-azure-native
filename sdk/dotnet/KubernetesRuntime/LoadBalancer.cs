// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.KubernetesRuntime
{
    /// <summary>
    /// A LoadBalancer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)
    /// Azure REST API version: 2024-03-01.
    /// 
    /// Other available API versions: 2023-10-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:kubernetesruntime:LoadBalancer")]
    public partial class LoadBalancer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IP Range
        /// </summary>
        [Output("addresses")]
        public Output<ImmutableArray<string>> Addresses { get; private set; } = null!;

        /// <summary>
        /// Advertise Mode
        /// </summary>
        [Output("advertiseMode")]
        public Output<string> AdvertiseMode { get; private set; } = null!;

        /// <summary>
        /// The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.
        /// </summary>
        [Output("bgpPeers")]
        public Output<ImmutableArray<string>> BgpPeers { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Resource provision state
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label "a=b", then please specify {"a": "b"} in the field.
        /// </summary>
        [Output("serviceSelector")]
        public Output<ImmutableDictionary<string, string>?> ServiceSelector { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a LoadBalancer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadBalancer(string name, LoadBalancerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:kubernetesruntime:LoadBalancer", name, args ?? new LoadBalancerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadBalancer(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:kubernetesruntime:LoadBalancer", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:kubernetesruntime/v20231001preview:LoadBalancer" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetesruntime/v20240301:LoadBalancer" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadBalancer Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LoadBalancer(name, id, options);
        }
    }

    public sealed class LoadBalancerArgs : global::Pulumi.ResourceArgs
    {
        [Input("addresses", required: true)]
        private InputList<string>? _addresses;

        /// <summary>
        /// IP Range
        /// </summary>
        public InputList<string> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<string>());
            set => _addresses = value;
        }

        /// <summary>
        /// Advertise Mode
        /// </summary>
        [Input("advertiseMode", required: true)]
        public InputUnion<string, Pulumi.AzureNative.KubernetesRuntime.AdvertiseMode> AdvertiseMode { get; set; } = null!;

        [Input("bgpPeers")]
        private InputList<string>? _bgpPeers;

        /// <summary>
        /// The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.
        /// </summary>
        public InputList<string> BgpPeers
        {
            get => _bgpPeers ?? (_bgpPeers = new InputList<string>());
            set => _bgpPeers = value;
        }

        /// <summary>
        /// The name of the LoadBalancer
        /// </summary>
        [Input("loadBalancerName")]
        public Input<string>? LoadBalancerName { get; set; }

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        [Input("serviceSelector")]
        private InputMap<string>? _serviceSelector;

        /// <summary>
        /// A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label "a=b", then please specify {"a": "b"} in the field.
        /// </summary>
        public InputMap<string> ServiceSelector
        {
            get => _serviceSelector ?? (_serviceSelector = new InputMap<string>());
            set => _serviceSelector = value;
        }

        public LoadBalancerArgs()
        {
        }
        public static new LoadBalancerArgs Empty => new LoadBalancerArgs();
    }
}
