// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.KubernetesRuntime.V20231001Preview
{
    /// <summary>
    /// A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)
    /// </summary>
    [AzureNativeResourceType("azure-native:kubernetesruntime/v20231001preview:StorageClass")]
    public partial class StorageClass : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]
        /// </summary>
        [Output("accessModes")]
        public Output<ImmutableArray<string>> AccessModes { get; private set; } = null!;

        /// <summary>
        /// Volume can be expanded or not
        /// </summary>
        [Output("allowVolumeExpansion")]
        public Output<string?> AllowVolumeExpansion { get; private set; } = null!;

        /// <summary>
        /// Allow single data node failure
        /// </summary>
        [Output("dataResilience")]
        public Output<string?> DataResilience { get; private set; } = null!;

        /// <summary>
        /// Failover speed: NA, Slow, Fast
        /// </summary>
        [Output("failoverSpeed")]
        public Output<string?> FailoverSpeed { get; private set; } = null!;

        /// <summary>
        /// Limitations of the storage class
        /// </summary>
        [Output("limitations")]
        public Output<ImmutableArray<string>> Limitations { get; private set; } = null!;

        /// <summary>
        /// Additional mount options
        /// </summary>
        [Output("mountOptions")]
        public Output<ImmutableArray<string>> MountOptions { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Performance tier
        /// </summary>
        [Output("performance")]
        public Output<string?> Performance { get; private set; } = null!;

        /// <summary>
        /// Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use
        /// </summary>
        [Output("priority")]
        public Output<double?> Priority { get; private set; } = null!;

        /// <summary>
        /// Provisioner name
        /// </summary>
        [Output("provisioner")]
        public Output<string?> Provisioner { get; private set; } = null!;

        /// <summary>
        /// Resource provision state
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Properties of the StorageClass
        /// </summary>
        [Output("typeProperties")]
        public Output<object> TypeProperties { get; private set; } = null!;

        /// <summary>
        /// Binding mode of volumes: Immediate, WaitForFirstConsumer
        /// </summary>
        [Output("volumeBindingMode")]
        public Output<string?> VolumeBindingMode { get; private set; } = null!;


        /// <summary>
        /// Create a StorageClass resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageClass(string name, StorageClassArgs args, CustomResourceOptions? options = null)
            : base("azure-native:kubernetesruntime/v20231001preview:StorageClass", name, args ?? new StorageClassArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageClass(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:kubernetesruntime/v20231001preview:StorageClass", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:kubernetesruntime:StorageClass" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetesruntime/v20240301:StorageClass" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageClass resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageClass Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StorageClass(name, id, options);
        }
    }

    public sealed class StorageClassArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessModes")]
        private InputList<Union<string, Pulumi.AzureNative.KubernetesRuntime.V20231001Preview.AccessMode>>? _accessModes;

        /// <summary>
        /// The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.KubernetesRuntime.V20231001Preview.AccessMode>> AccessModes
        {
            get => _accessModes ?? (_accessModes = new InputList<Union<string, Pulumi.AzureNative.KubernetesRuntime.V20231001Preview.AccessMode>>());
            set => _accessModes = value;
        }

        /// <summary>
        /// Volume can be expanded or not
        /// </summary>
        [Input("allowVolumeExpansion")]
        public InputUnion<string, Pulumi.AzureNative.KubernetesRuntime.V20231001Preview.VolumeExpansion>? AllowVolumeExpansion { get; set; }

        /// <summary>
        /// Allow single data node failure
        /// </summary>
        [Input("dataResilience")]
        public InputUnion<string, Pulumi.AzureNative.KubernetesRuntime.V20231001Preview.DataResilienceTier>? DataResilience { get; set; }

        /// <summary>
        /// Failover speed: NA, Slow, Fast
        /// </summary>
        [Input("failoverSpeed")]
        public InputUnion<string, Pulumi.AzureNative.KubernetesRuntime.V20231001Preview.FailoverTier>? FailoverSpeed { get; set; }

        [Input("limitations")]
        private InputList<string>? _limitations;

        /// <summary>
        /// Limitations of the storage class
        /// </summary>
        public InputList<string> Limitations
        {
            get => _limitations ?? (_limitations = new InputList<string>());
            set => _limitations = value;
        }

        [Input("mountOptions")]
        private InputList<string>? _mountOptions;

        /// <summary>
        /// Additional mount options
        /// </summary>
        public InputList<string> MountOptions
        {
            get => _mountOptions ?? (_mountOptions = new InputList<string>());
            set => _mountOptions = value;
        }

        /// <summary>
        /// Performance tier
        /// </summary>
        [Input("performance")]
        public InputUnion<string, Pulumi.AzureNative.KubernetesRuntime.V20231001Preview.PerformanceTier>? Performance { get; set; }

        /// <summary>
        /// Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use
        /// </summary>
        [Input("priority")]
        public Input<double>? Priority { get; set; }

        /// <summary>
        /// Provisioner name
        /// </summary>
        [Input("provisioner")]
        public Input<string>? Provisioner { get; set; }

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        /// <summary>
        /// The name of the the storage class
        /// </summary>
        [Input("storageClassName")]
        public Input<string>? StorageClassName { get; set; }

        /// <summary>
        /// Properties of the StorageClass
        /// </summary>
        [Input("typeProperties", required: true)]
        public object TypeProperties { get; set; } = null!;

        /// <summary>
        /// Binding mode of volumes: Immediate, WaitForFirstConsumer
        /// </summary>
        [Input("volumeBindingMode")]
        public InputUnion<string, Pulumi.AzureNative.KubernetesRuntime.V20231001Preview.VolumeBindingMode>? VolumeBindingMode { get; set; }

        public StorageClassArgs()
        {
        }
        public static new StorageClassArgs Empty => new StorageClassArgs();
    }
}
