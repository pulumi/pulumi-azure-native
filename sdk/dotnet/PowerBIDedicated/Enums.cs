// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.PowerBIDedicated
{
    /// <summary>
    /// The name of the Azure pricing tier to which the SKU applies.
    /// </summary>
    [EnumType]
    public readonly struct CapacitySkuTier : IEquatable<CapacitySkuTier>
    {
        private readonly string _value;

        private CapacitySkuTier(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static CapacitySkuTier PBIE_Azure { get; } = new CapacitySkuTier("PBIE_Azure");
        public static CapacitySkuTier Premium { get; } = new CapacitySkuTier("Premium");
        public static CapacitySkuTier AutoPremiumHost { get; } = new CapacitySkuTier("AutoPremiumHost");

        public static bool operator ==(CapacitySkuTier left, CapacitySkuTier right) => left.Equals(right);
        public static bool operator !=(CapacitySkuTier left, CapacitySkuTier right) => !left.Equals(right);

        public static explicit operator string(CapacitySkuTier value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CapacitySkuTier other && Equals(other);
        public bool Equals(CapacitySkuTier other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The type of identity that last modified the resource
    /// </summary>
    [EnumType]
    public readonly struct IdentityType : IEquatable<IdentityType>
    {
        private readonly string _value;

        private IdentityType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static IdentityType User { get; } = new IdentityType("User");
        public static IdentityType Application { get; } = new IdentityType("Application");
        public static IdentityType ManagedIdentity { get; } = new IdentityType("ManagedIdentity");
        public static IdentityType Key { get; } = new IdentityType("Key");

        public static bool operator ==(IdentityType left, IdentityType right) => left.Equals(right);
        public static bool operator !=(IdentityType left, IdentityType right) => !left.Equals(right);

        public static explicit operator string(IdentityType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is IdentityType other && Equals(other);
        public bool Equals(IdentityType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Specifies the generation of the Power BI Embedded capacity. If no value is specified, the default value 'Gen2' is used. [Learn More](https://docs.microsoft.com/power-bi/developer/embedded/power-bi-embedded-generation-2)
    /// </summary>
    [EnumType]
    public readonly struct Mode : IEquatable<Mode>
    {
        private readonly string _value;

        private Mode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static Mode Gen1 { get; } = new Mode("Gen1");
        public static Mode Gen2 { get; } = new Mode("Gen2");

        public static bool operator ==(Mode left, Mode right) => left.Equals(right);
        public static bool operator !=(Mode left, Mode right) => !left.Equals(right);

        public static explicit operator string(Mode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is Mode other && Equals(other);
        public bool Equals(Mode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The name of the Azure pricing tier to which the SKU applies.
    /// </summary>
    [EnumType]
    public readonly struct VCoreSkuTier : IEquatable<VCoreSkuTier>
    {
        private readonly string _value;

        private VCoreSkuTier(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static VCoreSkuTier AutoScale { get; } = new VCoreSkuTier("AutoScale");

        public static bool operator ==(VCoreSkuTier left, VCoreSkuTier right) => left.Equals(right);
        public static bool operator !=(VCoreSkuTier left, VCoreSkuTier right) => !left.Equals(right);

        public static explicit operator string(VCoreSkuTier value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is VCoreSkuTier other && Equals(other);
        public bool Equals(VCoreSkuTier other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
