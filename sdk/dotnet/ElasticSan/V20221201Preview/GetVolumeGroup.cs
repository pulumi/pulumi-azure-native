// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ElasticSan.V20221201Preview
{
    public static class GetVolumeGroup
    {
        /// <summary>
        /// Get an VolumeGroups.
        /// </summary>
        public static Task<GetVolumeGroupResult> InvokeAsync(GetVolumeGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVolumeGroupResult>("azure-native:elasticsan/v20221201preview:getVolumeGroup", args ?? new GetVolumeGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Get an VolumeGroups.
        /// </summary>
        public static Output<GetVolumeGroupResult> Invoke(GetVolumeGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeGroupResult>("azure-native:elasticsan/v20221201preview:getVolumeGroup", args ?? new GetVolumeGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ElasticSan.
        /// </summary>
        [Input("elasticSanName", required: true)]
        public string ElasticSanName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the VolumeGroup.
        /// </summary>
        [Input("volumeGroupName", required: true)]
        public string VolumeGroupName { get; set; } = null!;

        public GetVolumeGroupArgs()
        {
        }
        public static new GetVolumeGroupArgs Empty => new GetVolumeGroupArgs();
    }

    public sealed class GetVolumeGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ElasticSan.
        /// </summary>
        [Input("elasticSanName", required: true)]
        public Input<string> ElasticSanName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the VolumeGroup.
        /// </summary>
        [Input("volumeGroupName", required: true)]
        public Input<string> VolumeGroupName { get; set; } = null!;

        public GetVolumeGroupInvokeArgs()
        {
        }
        public static new GetVolumeGroupInvokeArgs Empty => new GetVolumeGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeGroupResult
    {
        /// <summary>
        /// Type of encryption
        /// </summary>
        public readonly string? Encryption;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A collection of rules governing the accessibility from specific network locations.
        /// </summary>
        public readonly Outputs.NetworkRuleSetResponse? NetworkAcls;
        /// <summary>
        /// The list of Private Endpoint Connections.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Type of storage target
        /// </summary>
        public readonly string? ProtocolType;
        /// <summary>
        /// State of the operation on the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVolumeGroupResult(
            string? encryption,

            string id,

            string name,

            Outputs.NetworkRuleSetResponse? networkAcls,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string? protocolType,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Encryption = encryption;
            Id = id;
            Name = name;
            NetworkAcls = networkAcls;
            PrivateEndpointConnections = privateEndpointConnections;
            ProtocolType = protocolType;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
