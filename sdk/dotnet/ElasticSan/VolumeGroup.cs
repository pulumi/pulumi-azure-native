// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ElasticSan
{
    /// <summary>
    /// Response for Volume Group request.
    /// Azure REST API version: 2021-11-20-preview. Prior API version in Azure Native 1.x: 2021-11-20-preview.
    /// 
    /// Other available API versions: 2022-12-01-preview, 2023-01-01, 2024-05-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:elasticsan:VolumeGroup")]
    public partial class VolumeGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Type of encryption
        /// </summary>
        [Output("encryption")]
        public Output<string?> Encryption { get; private set; } = null!;

        /// <summary>
        /// Azure resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A collection of rules governing the accessibility from specific network locations.
        /// </summary>
        [Output("networkAcls")]
        public Output<Outputs.NetworkRuleSetResponse?> NetworkAcls { get; private set; } = null!;

        /// <summary>
        /// Type of storage target
        /// </summary>
        [Output("protocolType")]
        public Output<string?> ProtocolType { get; private set; } = null!;

        /// <summary>
        /// State of the operation on the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource metadata required by ARM RPC
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Azure resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Azure resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a VolumeGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VolumeGroup(string name, VolumeGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:elasticsan:VolumeGroup", name, args ?? new VolumeGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VolumeGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:elasticsan:VolumeGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:elasticsan/v20211120preview:VolumeGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:elasticsan/v20221201preview:VolumeGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:elasticsan/v20230101:VolumeGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:elasticsan/v20240501:VolumeGroup" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VolumeGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VolumeGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VolumeGroup(name, id, options);
        }
    }

    public sealed class VolumeGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the ElasticSan.
        /// </summary>
        [Input("elasticSanName", required: true)]
        public Input<string> ElasticSanName { get; set; } = null!;

        /// <summary>
        /// Type of encryption
        /// </summary>
        [Input("encryption")]
        public InputUnion<string, Pulumi.AzureNative.ElasticSan.EncryptionType>? Encryption { get; set; }

        /// <summary>
        /// A collection of rules governing the accessibility from specific network locations.
        /// </summary>
        [Input("networkAcls")]
        public Input<Inputs.NetworkRuleSetArgs>? NetworkAcls { get; set; }

        /// <summary>
        /// Type of storage target
        /// </summary>
        [Input("protocolType")]
        public InputUnion<string, Pulumi.AzureNative.ElasticSan.StorageTargetType>? ProtocolType { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Azure resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the VolumeGroup.
        /// </summary>
        [Input("volumeGroupName")]
        public Input<string>? VolumeGroupName { get; set; }

        public VolumeGroupArgs()
        {
        }
        public static new VolumeGroupArgs Empty => new VolumeGroupArgs();
    }
}
