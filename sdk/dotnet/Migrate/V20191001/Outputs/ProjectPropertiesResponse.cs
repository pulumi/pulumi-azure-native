// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20191001.Outputs
{

    /// <summary>
    /// Properties of a project.
    /// </summary>
    [OutputType]
    public sealed class ProjectPropertiesResponse
    {
        /// <summary>
        /// Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
        /// </summary>
        public readonly string? AssessmentSolutionId;
        /// <summary>
        /// Time when this project was created. Date-Time represented in ISO-8601 format.
        /// </summary>
        public readonly string CreatedTimestamp;
        /// <summary>
        /// The ARM id of the storage account used for interactions when public access is disabled.
        /// </summary>
        public readonly string? CustomerStorageAccountArmId;
        /// <summary>
        /// The ARM id of service map workspace created by customer.
        /// </summary>
        public readonly string? CustomerWorkspaceId;
        /// <summary>
        /// Location of service map workspace created by customer.
        /// </summary>
        public readonly string? CustomerWorkspaceLocation;
        /// <summary>
        /// Time when last assessment was created. Date-Time represented in ISO-8601 format. This value will be null until assessment is created.
        /// </summary>
        public readonly string LastAssessmentTimestamp;
        /// <summary>
        /// Number of assessments created in the project.
        /// </summary>
        public readonly int NumberOfAssessments;
        /// <summary>
        /// Number of groups created in the project.
        /// </summary>
        public readonly int NumberOfGroups;
        /// <summary>
        /// Number of machines in the project.
        /// </summary>
        public readonly int NumberOfMachines;
        /// <summary>
        /// The list of private endpoint connections to the project.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Assessment project status.
        /// </summary>
        public readonly string? ProjectStatus;
        /// <summary>
        /// Provisioning state of the project.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Endpoint at which the collector agent can call agent REST API.
        /// </summary>
        public readonly string ServiceEndpoint;
        /// <summary>
        /// Time when this project was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        public readonly string UpdatedTimestamp;

        [OutputConstructor]
        private ProjectPropertiesResponse(
            string? assessmentSolutionId,

            string createdTimestamp,

            string? customerStorageAccountArmId,

            string? customerWorkspaceId,

            string? customerWorkspaceLocation,

            string lastAssessmentTimestamp,

            int numberOfAssessments,

            int numberOfGroups,

            int numberOfMachines,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string? projectStatus,

            string provisioningState,

            string? publicNetworkAccess,

            string serviceEndpoint,

            string updatedTimestamp)
        {
            AssessmentSolutionId = assessmentSolutionId;
            CreatedTimestamp = createdTimestamp;
            CustomerStorageAccountArmId = customerStorageAccountArmId;
            CustomerWorkspaceId = customerWorkspaceId;
            CustomerWorkspaceLocation = customerWorkspaceLocation;
            LastAssessmentTimestamp = lastAssessmentTimestamp;
            NumberOfAssessments = numberOfAssessments;
            NumberOfGroups = numberOfGroups;
            NumberOfMachines = numberOfMachines;
            PrivateEndpointConnections = privateEndpointConnections;
            ProjectStatus = projectStatus;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            ServiceEndpoint = serviceEndpoint;
            UpdatedTimestamp = updatedTimestamp;
        }
    }
}
