// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Migrate.V20191001
{
    public static class GetAssessment
    {
        public static Task<GetAssessmentResult> InvokeAsync(GetAssessmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAssessmentResult>("azure-nextgen:migrate/v20191001:getAssessment", args ?? new GetAssessmentArgs(), options.WithVersion());
    }


    public sealed class GetAssessmentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique name of an assessment within a project.
        /// </summary>
        [Input("assessmentName", required: true)]
        public string AssessmentName { get; set; } = null!;

        /// <summary>
        /// Unique name of a group within a project.
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Resource Group that project is part of.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAssessmentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAssessmentResult
    {
        /// <summary>
        /// For optimistic concurrency control.
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Unique name of an assessment.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the assessment.
        /// </summary>
        public readonly Outputs.AssessmentPropertiesResponse Properties;
        /// <summary>
        /// Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments].
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAssessmentResult(
            string? eTag,

            string name,

            Outputs.AssessmentPropertiesResponse properties,

            string type)
        {
            ETag = eTag;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
