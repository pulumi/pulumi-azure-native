// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20230101.Outputs
{

    /// <summary>
    /// Properties of a migrate project.
    /// </summary>
    [OutputType]
    public sealed class MigrateProjectPropertiesResponse
    {
        /// <summary>
        /// Last summary refresh time.
        /// </summary>
        public readonly string LastSummaryRefreshedTime;
        /// <summary>
        /// Gets the private endpoint connections.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Gets or sets the state of public network access.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Refresh summary state.
        /// </summary>
        public readonly string RefreshSummaryState;
        /// <summary>
        /// Register tools inside project.
        /// </summary>
        public readonly ImmutableArray<string> RegisteredTools;
        /// <summary>
        /// Service endpoint.
        /// </summary>
        public readonly string? ServiceEndpoint;
        /// <summary>
        /// Project summary.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ProjectSummaryResponse> Summary;
        /// <summary>
        /// Utility storage account id.
        /// </summary>
        public readonly string? UtilityStorageAccountId;

        [OutputConstructor]
        private MigrateProjectPropertiesResponse(
            string lastSummaryRefreshedTime,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string? publicNetworkAccess,

            string refreshSummaryState,

            ImmutableArray<string> registeredTools,

            string? serviceEndpoint,

            ImmutableDictionary<string, Outputs.ProjectSummaryResponse> summary,

            string? utilityStorageAccountId)
        {
            LastSummaryRefreshedTime = lastSummaryRefreshedTime;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
            RefreshSummaryState = refreshSummaryState;
            RegisteredTools = registeredTools;
            ServiceEndpoint = serviceEndpoint;
            Summary = summary;
            UtilityStorageAccountId = utilityStorageAccountId;
        }
    }
}
