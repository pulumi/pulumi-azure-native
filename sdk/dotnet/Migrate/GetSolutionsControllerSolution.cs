// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate
{
    public static class GetSolutionsControllerSolution
    {
        /// <summary>
        /// Solution REST Resource.
        /// Azure REST API version: 2023-01-01.
        /// </summary>
        public static Task<GetSolutionsControllerSolutionResult> InvokeAsync(GetSolutionsControllerSolutionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSolutionsControllerSolutionResult>("azure-native:migrate:getSolutionsControllerSolution", args ?? new GetSolutionsControllerSolutionArgs(), options.WithDefaults());

        /// <summary>
        /// Solution REST Resource.
        /// Azure REST API version: 2023-01-01.
        /// </summary>
        public static Output<GetSolutionsControllerSolutionResult> Invoke(GetSolutionsControllerSolutionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSolutionsControllerSolutionResult>("azure-native:migrate:getSolutionsControllerSolution", args ?? new GetSolutionsControllerSolutionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSolutionsControllerSolutionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("migrateProjectName", required: true)]
        public string MigrateProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Unique name of a migration solution within a migrate project.
        /// </summary>
        [Input("solutionName", required: true)]
        public string SolutionName { get; set; } = null!;

        public GetSolutionsControllerSolutionArgs()
        {
        }
        public static new GetSolutionsControllerSolutionArgs Empty => new GetSolutionsControllerSolutionArgs();
    }

    public sealed class GetSolutionsControllerSolutionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("migrateProjectName", required: true)]
        public Input<string> MigrateProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Unique name of a migration solution within a migrate project.
        /// </summary>
        [Input("solutionName", required: true)]
        public Input<string> SolutionName { get; set; } = null!;

        public GetSolutionsControllerSolutionInvokeArgs()
        {
        }
        public static new GetSolutionsControllerSolutionInvokeArgs Empty => new GetSolutionsControllerSolutionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSolutionsControllerSolutionResult
    {
        /// <summary>
        /// Gets or sets the ETAG for optimistic concurrency control.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Gets the relative URL to get to this REST resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets the name of this REST resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the properties of the solution.
        /// </summary>
        public readonly Outputs.SolutionPropertiesResponse Properties;
        /// <summary>
        /// Gets the type of this REST resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSolutionsControllerSolutionResult(
            string? etag,

            string id,

            string name,

            Outputs.SolutionPropertiesResponse properties,

            string type)
        {
            Etag = etag;
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
