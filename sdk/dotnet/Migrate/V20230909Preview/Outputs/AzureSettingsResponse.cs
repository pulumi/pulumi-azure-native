// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20230909Preview.Outputs
{

    /// <summary>
    /// Azure settings for a business case.
    /// </summary>
    [OutputType]
    public sealed class AzureSettingsResponse
    {
        /// <summary>
        /// Gets Avs labour cost percentage.
        /// </summary>
        public readonly double? AvsLaborCostPercentage;
        /// <summary>
        /// Migration Strategy.
        /// </summary>
        public readonly string? BusinessCaseType;
        /// <summary>
        /// Gets comfort factor.
        /// </summary>
        public readonly double? ComfortFactor;
        /// <summary>
        /// Business case Currency.
        /// </summary>
        public readonly string Currency;
        /// <summary>
        /// Gets azure Discount percentage.
        /// </summary>
        public readonly double? DiscountPercentage;
        /// <summary>
        /// Gets IaaS labour cost percentage.
        /// </summary>
        public readonly double? IaasLaborCostPercentage;
        /// <summary>
        /// Gets infrastructure growth rate.
        /// </summary>
        public readonly double? InfrastructureGrowthRate;
        /// <summary>
        /// Gets network cost percentage.
        /// </summary>
        public readonly double? NetworkCostPercentage;
        /// <summary>
        /// Gets PaaS labour cost percentage.
        /// </summary>
        public readonly double? PaasLaborCostPercentage;
        /// <summary>
        /// Gets migration completion percentage per year.
        /// </summary>
        public readonly ImmutableDictionary<string, double>? PerYearMigrationCompletionPercentage;
        /// <summary>
        /// Gets end time to use for performance.
        /// </summary>
        public readonly string? PerformanceDataEndTime;
        /// <summary>
        /// Gets start time to use for performance.
        /// </summary>
        public readonly string? PerformanceDataStartTime;
        /// <summary>
        /// Gets utilization percentile for performance.
        /// </summary>
        public readonly double? PerformanceUtilizationPercentile;
        /// <summary>
        /// Gets the business case savings option type.
        /// </summary>
        public readonly string? SavingsOption;
        /// <summary>
        /// Gets or sets azure location.
        /// </summary>
        public readonly string TargetLocation;
        /// <summary>
        /// Gets wACC percentage.
        /// </summary>
        public readonly double? Wacc;
        /// <summary>
        /// Workload discovery source.
        /// </summary>
        public readonly string? WorkloadDiscoverySource;

        [OutputConstructor]
        private AzureSettingsResponse(
            double? avsLaborCostPercentage,

            string? businessCaseType,

            double? comfortFactor,

            string currency,

            double? discountPercentage,

            double? iaasLaborCostPercentage,

            double? infrastructureGrowthRate,

            double? networkCostPercentage,

            double? paasLaborCostPercentage,

            ImmutableDictionary<string, double>? perYearMigrationCompletionPercentage,

            string? performanceDataEndTime,

            string? performanceDataStartTime,

            double? performanceUtilizationPercentile,

            string? savingsOption,

            string targetLocation,

            double? wacc,

            string? workloadDiscoverySource)
        {
            AvsLaborCostPercentage = avsLaborCostPercentage;
            BusinessCaseType = businessCaseType;
            ComfortFactor = comfortFactor;
            Currency = currency;
            DiscountPercentage = discountPercentage;
            IaasLaborCostPercentage = iaasLaborCostPercentage;
            InfrastructureGrowthRate = infrastructureGrowthRate;
            NetworkCostPercentage = networkCostPercentage;
            PaasLaborCostPercentage = paasLaborCostPercentage;
            PerYearMigrationCompletionPercentage = perYearMigrationCompletionPercentage;
            PerformanceDataEndTime = performanceDataEndTime;
            PerformanceDataStartTime = performanceDataStartTime;
            PerformanceUtilizationPercentile = performanceUtilizationPercentile;
            SavingsOption = savingsOption;
            TargetLocation = targetLocation;
            Wacc = wacc;
            WorkloadDiscoverySource = workloadDiscoverySource;
        }
    }
}
