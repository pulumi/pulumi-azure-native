// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate
{
    /// <summary>
    /// Workload deployment model.
    /// API Version: 2022-05-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:migrate:WorkloadDeployment")]
    public partial class WorkloadDeployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Gets or sets the name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Workload deployment model properties.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.WorkloadDeploymentModelPropertiesResponse> Properties { get; private set; } = null!;

        [Output("systemData")]
        public Output<Outputs.WorkloadDeploymentModelResponseSystemData> SystemData { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a WorkloadDeployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkloadDeployment(string name, WorkloadDeploymentArgs args, CustomResourceOptions? options = null)
            : base("azure-native:migrate:WorkloadDeployment", name, args ?? new WorkloadDeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkloadDeployment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:migrate:WorkloadDeployment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:migrate/v20220501preview:WorkloadDeployment"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkloadDeployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkloadDeployment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WorkloadDeployment(name, id, options);
        }
    }

    public sealed class WorkloadDeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ModernizeProject name.
        /// </summary>
        [Input("modernizeProjectName", required: true)]
        public Input<string> ModernizeProjectName { get; set; } = null!;

        /// <summary>
        /// Workload deployment model properties.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.WorkloadDeploymentModelPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// Name of the Azure Resource Group that project is part of.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Azure Subscription Id in which project was created.
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Gets or sets the resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Workload deployment name.
        /// </summary>
        [Input("workloadDeploymentName")]
        public Input<string>? WorkloadDeploymentName { get; set; }

        public WorkloadDeploymentArgs()
        {
        }
        public static new WorkloadDeploymentArgs Empty => new WorkloadDeploymentArgs();
    }
}
