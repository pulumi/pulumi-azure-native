// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.Outputs
{

    /// <summary>
    /// Class for container image properties.
    /// </summary>
    [OutputType]
    public sealed class ContainerImagePropertiesResponse
    {
        /// <summary>
        /// Gets or sets the dockerfile for the container image.
        /// </summary>
        public readonly string? Dockerfile;
        /// <summary>
        /// Gets the ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets or sets the container image name.
        /// </summary>
        public readonly string? ImageName;
        /// <summary>
        /// Gets or sets the container image tag.
        /// </summary>
        public readonly string? ImageTag;
        /// <summary>
        /// Class for ACR Properties.
        /// </summary>
        public readonly Outputs.ACRPropertiesResponse? RegistryProperties;
        /// <summary>
        /// Gets or sets the RunId.
        /// </summary>
        public readonly string? RunId;
        /// <summary>
        /// Gets or sets the RunStatus.
        /// </summary>
        public readonly string? RunStatus;

        [OutputConstructor]
        private ContainerImagePropertiesResponse(
            string? dockerfile,

            string id,

            string? imageName,

            string? imageTag,

            Outputs.ACRPropertiesResponse? registryProperties,

            string? runId,

            string? runStatus)
        {
            Dockerfile = dockerfile;
            Id = id;
            ImageName = imageName;
            ImageTag = imageTag;
            RegistryProperties = registryProperties;
            RunId = runId;
            RunStatus = runStatus;
        }
    }
}
