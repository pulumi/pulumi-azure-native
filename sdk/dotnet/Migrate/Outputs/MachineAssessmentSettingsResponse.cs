// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.Outputs
{

    /// <summary>
    /// Properties of an assessment.
    /// </summary>
    [OutputType]
    public sealed class MachineAssessmentSettingsResponse
    {
        /// <summary>
        /// The disk type for the assessment.
        /// </summary>
        public readonly ImmutableArray<string> AzureDiskTypes;
        /// <summary>
        /// Gets or sets the user configurable setting to display the azure hybrid use
        /// benefit.
        /// </summary>
        public readonly string? AzureHybridUseBenefit;
        /// <summary>
        /// Azure Location or Azure region where to which the machines will be migrated.
        /// </summary>
        public readonly string? AzureLocation;
        /// <summary>
        /// Gets or sets Azure Pricing Tier - Free, Basic, etc.
        /// </summary>
        public readonly string? AzurePricingTier;
        /// <summary>
        /// The azure security offering type.
        /// </summary>
        public readonly string? AzureSecurityOfferingType;
        /// <summary>
        /// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
        /// </summary>
        public readonly string? AzureStorageRedundancy;
        /// <summary>
        /// Gets or sets the Azure VM families.
        /// </summary>
        public readonly ImmutableArray<string> AzureVmFamilies;
        /// <summary>
        /// Gets or sets the billing settings.
        /// </summary>
        public readonly Outputs.BillingSettingsResponse? BillingSettings;
        /// <summary>
        /// Currency in which prices should be reported.
        /// </summary>
        public readonly string? Currency;
        /// <summary>
        /// Custom discount percentage.
        /// </summary>
        public readonly double? DiscountPercentage;
        /// <summary>
        /// Gets or sets user configurable setting to display the environment type.
        /// </summary>
        public readonly string? EnvironmentType;
        /// <summary>
        /// Gets or sets the user configurable setting to display the linux azure hybrid use
        /// benefit.
        /// </summary>
        public readonly string? LinuxAzureHybridUseBenefit;
        /// <summary>
        /// Gets or sets the performance data.
        /// </summary>
        public readonly Outputs.PerformanceDataResponse? PerformanceData;
        /// <summary>
        /// Gets or sets the savings settings.
        /// </summary>
        public readonly Outputs.SavingsSettingsResponse? SavingsSettings;
        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        public readonly double? ScalingFactor;
        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        public readonly string? SizingCriterion;
        /// <summary>
        /// Gets or sets the duration for which the VMs are up in the on-premises
        /// environment.
        /// </summary>
        public readonly Outputs.VmUptimeResponse? VmUptime;

        [OutputConstructor]
        private MachineAssessmentSettingsResponse(
            ImmutableArray<string> azureDiskTypes,

            string? azureHybridUseBenefit,

            string? azureLocation,

            string? azurePricingTier,

            string? azureSecurityOfferingType,

            string? azureStorageRedundancy,

            ImmutableArray<string> azureVmFamilies,

            Outputs.BillingSettingsResponse? billingSettings,

            string? currency,

            double? discountPercentage,

            string? environmentType,

            string? linuxAzureHybridUseBenefit,

            Outputs.PerformanceDataResponse? performanceData,

            Outputs.SavingsSettingsResponse? savingsSettings,

            double? scalingFactor,

            string? sizingCriterion,

            Outputs.VmUptimeResponse? vmUptime)
        {
            AzureDiskTypes = azureDiskTypes;
            AzureHybridUseBenefit = azureHybridUseBenefit;
            AzureLocation = azureLocation;
            AzurePricingTier = azurePricingTier;
            AzureSecurityOfferingType = azureSecurityOfferingType;
            AzureStorageRedundancy = azureStorageRedundancy;
            AzureVmFamilies = azureVmFamilies;
            BillingSettings = billingSettings;
            Currency = currency;
            DiscountPercentage = discountPercentage;
            EnvironmentType = environmentType;
            LinuxAzureHybridUseBenefit = linuxAzureHybridUseBenefit;
            PerformanceData = performanceData;
            SavingsSettings = savingsSettings;
            ScalingFactor = scalingFactor;
            SizingCriterion = sizingCriterion;
            VmUptime = vmUptime;
        }
    }
}
