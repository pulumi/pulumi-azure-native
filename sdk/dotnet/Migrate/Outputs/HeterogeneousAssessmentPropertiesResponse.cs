// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.Outputs
{

    /// <summary>
    /// Properties of an assessment.
    /// </summary>
    [OutputType]
    public sealed class HeterogeneousAssessmentPropertiesResponse
    {
        /// <summary>
        /// Arm id of partner assessments.
        /// </summary>
        public readonly ImmutableArray<string> AssessmentArmIds;
        /// <summary>
        /// Azure location for assessment.
        /// </summary>
        public readonly string AzureLocation;
        /// <summary>
        /// Confidence rating in percentage.
        /// </summary>
        public readonly double ConfidenceRatingInPercentage;
        /// <summary>
        /// Timestamp for the last successfully calculated summary for the assessment.
        /// </summary>
        public readonly string LastCalculatedOn;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Schema version.
        /// </summary>
        public readonly string SchemaVersion;
        /// <summary>
        /// Sizing criterion for assessment.
        /// </summary>
        public readonly string SizingCriterion;
        /// <summary>
        /// Whether assessment is in valid state and all machines have been assessed.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private HeterogeneousAssessmentPropertiesResponse(
            ImmutableArray<string> assessmentArmIds,

            string azureLocation,

            double confidenceRatingInPercentage,

            string lastCalculatedOn,

            string provisioningState,

            string schemaVersion,

            string sizingCriterion,

            string status)
        {
            AssessmentArmIds = assessmentArmIds;
            AzureLocation = azureLocation;
            ConfidenceRatingInPercentage = confidenceRatingInPercentage;
            LastCalculatedOn = lastCalculatedOn;
            ProvisioningState = provisioningState;
            SchemaVersion = schemaVersion;
            SizingCriterion = sizingCriterion;
            Status = status;
        }
    }
}
