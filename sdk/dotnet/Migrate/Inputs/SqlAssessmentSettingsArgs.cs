// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.Inputs
{

    /// <summary>
    /// SQL assessment settings class.
    /// </summary>
    public sealed class SqlAssessmentSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gets or sets user preference indicating intent of async commit mode.
        /// </summary>
        [Input("asyncCommitModeIntent")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.AsyncCommitModeIntent>? AsyncCommitModeIntent { get; set; }

        /// <summary>
        /// Azure Location or Azure region where to which the machines will be migrated.
        /// </summary>
        [Input("azureLocation")]
        public Input<string>? AzureLocation { get; set; }

        /// <summary>
        /// Gets or sets a value indicating azure security offering type.
        /// </summary>
        [Input("azureSecurityOfferingType")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.AzureSecurityOfferingType>? AzureSecurityOfferingType { get; set; }

        /// <summary>
        /// Gets or sets user configurable SQL database settings.
        /// </summary>
        [Input("azureSqlDatabaseSettings")]
        public Input<Inputs.SqlDbSettingsV3Args>? AzureSqlDatabaseSettings { get; set; }

        /// <summary>
        /// Gets or sets user configurable SQL managed instance settings.
        /// </summary>
        [Input("azureSqlManagedInstanceSettings")]
        public Input<Inputs.SqlMiSettingsV3Args>? AzureSqlManagedInstanceSettings { get; set; }

        /// <summary>
        /// Gets or sets user configurable SQL VM settings.
        /// </summary>
        [Input("azureSqlVmSettings")]
        public Input<Inputs.SqlVmSettingsArgs>? AzureSqlVmSettings { get; set; }

        /// <summary>
        /// Gets or sets the billing settings.
        /// </summary>
        [Input("billingSettings")]
        public Input<Inputs.BillingSettingsArgs>? BillingSettings { get; set; }

        /// <summary>
        /// Currency in which prices should be reported.
        /// </summary>
        [Input("currency")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.AzureCurrency>? Currency { get; set; }

        /// <summary>
        /// Gets or sets the Azure Location or Azure region where to which the machines
        /// will be migrated.
        /// </summary>
        [Input("disasterRecoveryLocation")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.AzureLocation>? DisasterRecoveryLocation { get; set; }

        /// <summary>
        /// Custom discount percentage.
        /// </summary>
        [Input("discountPercentage")]
        public Input<double>? DiscountPercentage { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether HADR assessments needs to be created.
        /// </summary>
        [Input("enableHadrAssessment")]
        public Input<bool>? EnableHadrAssessment { get; set; }

        /// <summary>
        /// Gets or sets the duration for which the entity (SQL, VMs) are up in the
        /// on-premises environment.
        /// </summary>
        [Input("entityUptime")]
        public Input<Inputs.EntityUptimeArgs>? EntityUptime { get; set; }

        /// <summary>
        /// Gets or sets user configurable setting to display the environment type.
        /// </summary>
        [Input("environmentType")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.EnvironmentType>? EnvironmentType { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether internet access is available.
        /// </summary>
        [Input("isInternetAccessAvailable")]
        public Input<bool>? IsInternetAccessAvailable { get; set; }

        /// <summary>
        /// Gets or sets user preference indicating intent of multi-subnet configuration.
        /// </summary>
        [Input("multiSubnetIntent")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.MultiSubnetIntent>? MultiSubnetIntent { get; set; }

        /// <summary>
        /// Gets or sets user configurable setting to display the azure hybrid use benefit.
        /// </summary>
        [Input("osLicense")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.OsLicense>? OsLicense { get; set; }

        /// <summary>
        /// Gets or sets the performance data.
        /// </summary>
        [Input("performanceData")]
        public Input<Inputs.PerformanceDataArgs>? PerformanceData { get; set; }

        [Input("preferredTargets")]
        private InputList<Union<string, Pulumi.AzureNative.Migrate.AzureTarget>>? _preferredTargets;

        /// <summary>
        /// Gets or sets SQL the preferred azure targets.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.Migrate.AzureTarget>> PreferredTargets
        {
            get => _preferredTargets ?? (_preferredTargets = new InputList<Union<string, Pulumi.AzureNative.Migrate.AzureTarget>>());
            set => _preferredTargets = value;
        }

        /// <summary>
        /// Gets or sets the savings settings.
        /// </summary>
        [Input("savingsSettings")]
        public Input<Inputs.SavingsSettingsArgs>? SavingsSettings { get; set; }

        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        [Input("scalingFactor")]
        public Input<double>? ScalingFactor { get; set; }

        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        [Input("sizingCriterion")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.AssessmentSizingCriterion>? SizingCriterion { get; set; }

        /// <summary>
        /// SQL server license.
        /// </summary>
        [Input("sqlServerLicense")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.SqlServerLicense>? SqlServerLicense { get; set; }

        public SqlAssessmentSettingsArgs()
        {
        }
        public static new SqlAssessmentSettingsArgs Empty => new SqlAssessmentSettingsArgs();
    }
}
