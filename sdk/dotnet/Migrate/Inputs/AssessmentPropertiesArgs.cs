// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Migrate.Inputs
{

    /// <summary>
    /// Properties of an assessment.
    /// </summary>
    public sealed class AssessmentPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Storage type selected for this disk.
        /// </summary>
        [Input("azureDiskType", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.AzureDiskType> AzureDiskType { get; set; } = null!;

        /// <summary>
        /// AHUB discount on windows virtual machines.
        /// </summary>
        [Input("azureHybridUseBenefit", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.AzureHybridUseBenefit> AzureHybridUseBenefit { get; set; } = null!;

        /// <summary>
        /// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
        /// </summary>
        [Input("azureLocation", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.AzureLocation> AzureLocation { get; set; } = null!;

        /// <summary>
        /// Offer code according to which cost estimation is done.
        /// </summary>
        [Input("azureOfferCode", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.AzureOfferCode> AzureOfferCode { get; set; } = null!;

        /// <summary>
        /// Pricing tier for Size evaluation.
        /// </summary>
        [Input("azurePricingTier", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.AzurePricingTier> AzurePricingTier { get; set; } = null!;

        /// <summary>
        /// Storage Redundancy type offered by Azure.
        /// </summary>
        [Input("azureStorageRedundancy", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.AzureStorageRedundancy> AzureStorageRedundancy { get; set; } = null!;

        [Input("azureVmFamilies", required: true)]
        private InputList<Union<string, Pulumi.AzureNextGen.Migrate.AzureVmFamily>>? _azureVmFamilies;

        /// <summary>
        /// List of azure VM families.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNextGen.Migrate.AzureVmFamily>> AzureVmFamilies
        {
            get => _azureVmFamilies ?? (_azureVmFamilies = new InputList<Union<string, Pulumi.AzureNextGen.Migrate.AzureVmFamily>>());
            set => _azureVmFamilies = value;
        }

        /// <summary>
        /// Currency to report prices in.
        /// </summary>
        [Input("currency", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.Currency> Currency { get; set; } = null!;

        /// <summary>
        /// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
        /// </summary>
        [Input("discountPercentage", required: true)]
        public Input<double> DiscountPercentage { get; set; } = null!;

        /// <summary>
        /// Percentile of performance data used to recommend Azure size.
        /// </summary>
        [Input("percentile", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.Percentile> Percentile { get; set; } = null!;

        /// <summary>
        /// Azure reserved instance.
        /// </summary>
        [Input("reservedInstance", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.ReservedInstance> ReservedInstance { get; set; } = null!;

        /// <summary>
        /// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
        /// </summary>
        [Input("scalingFactor", required: true)]
        public Input<double> ScalingFactor { get; set; } = null!;

        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        [Input("sizingCriterion", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.AssessmentSizingCriterion> SizingCriterion { get; set; } = null!;

        /// <summary>
        /// User configurable setting that describes the status of the assessment.
        /// </summary>
        [Input("stage", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.AssessmentStage> Stage { get; set; } = null!;

        /// <summary>
        /// Time range of performance data used to recommend a size.
        /// </summary>
        [Input("timeRange", required: true)]
        public InputUnion<string, Pulumi.AzureNextGen.Migrate.TimeRange> TimeRange { get; set; } = null!;

        /// <summary>
        /// Specify the duration for which the VMs are up in the on-premises environment.
        /// </summary>
        [Input("vmUptime", required: true)]
        public Input<Inputs.VmUptimeArgs> VmUptime { get; set; } = null!;

        public AssessmentPropertiesArgs()
        {
        }
    }
}
