// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.Inputs
{

    /// <summary>
    /// IISApplication details.
    /// </summary>
    public sealed class IISApplicationDetailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gets or sets the application pool name.
        /// </summary>
        [Input("applicationPoolName")]
        public Input<string>? ApplicationPoolName { get; set; }

        [Input("directories")]
        private InputList<Inputs.DirectoryPathArgs>? _directories;

        /// <summary>
        /// Gets or sets the list of directories.
        /// </summary>
        public InputList<Inputs.DirectoryPathArgs> Directories
        {
            get => _directories ?? (_directories = new InputList<Inputs.DirectoryPathArgs>());
            set => _directories = value;
        }

        /// <summary>
        /// Gets or sets a value indicating whether 32 bit applications are allowed to run on 64 bit.
        /// </summary>
        [Input("enable32BitApiOnWin64")]
        public Input<bool>? Enable32BitApiOnWin64 { get; set; }

        /// <summary>
        /// Gets or sets the managed pipeline mode.
        /// </summary>
        [Input("managedPipelineMode")]
        public Input<string>? ManagedPipelineMode { get; set; }

        /// <summary>
        /// Second level entity for virtual directories.
        /// </summary>
        [Input("path")]
        public Input<Inputs.DirectoryPathArgs>? Path { get; set; }

        /// <summary>
        /// Gets or sets the runtime version.
        /// </summary>
        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        public IISApplicationDetailsArgs()
        {
        }
        public static new IISApplicationDetailsArgs Empty => new IISApplicationDetailsArgs();
    }
}
