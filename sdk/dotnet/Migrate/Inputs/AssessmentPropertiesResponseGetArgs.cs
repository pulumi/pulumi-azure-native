// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Migrate.Inputs
{

    /// <summary>
    /// Properties of an assessment.
    /// </summary>
    public sealed class AssessmentPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Storage type selected for this disk.
        /// </summary>
        [Input("azureDiskType", required: true)]
        public Input<string> AzureDiskType { get; set; } = null!;

        /// <summary>
        /// AHUB discount on windows virtual machines.
        /// </summary>
        [Input("azureHybridUseBenefit", required: true)]
        public Input<string> AzureHybridUseBenefit { get; set; } = null!;

        /// <summary>
        /// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
        /// </summary>
        [Input("azureLocation", required: true)]
        public Input<string> AzureLocation { get; set; } = null!;

        /// <summary>
        /// Offer code according to which cost estimation is done.
        /// </summary>
        [Input("azureOfferCode", required: true)]
        public Input<string> AzureOfferCode { get; set; } = null!;

        /// <summary>
        /// Pricing tier for Size evaluation.
        /// </summary>
        [Input("azurePricingTier", required: true)]
        public Input<string> AzurePricingTier { get; set; } = null!;

        /// <summary>
        /// Storage Redundancy type offered by Azure.
        /// </summary>
        [Input("azureStorageRedundancy", required: true)]
        public Input<string> AzureStorageRedundancy { get; set; } = null!;

        [Input("azureVmFamilies", required: true)]
        private InputList<string>? _azureVmFamilies;

        /// <summary>
        /// List of azure VM families.
        /// </summary>
        public InputList<string> AzureVmFamilies
        {
            get => _azureVmFamilies ?? (_azureVmFamilies = new InputList<string>());
            set => _azureVmFamilies = value;
        }

        /// <summary>
        /// Confidence rating percentage for assessment. Can be in the range [0, 100].
        /// </summary>
        [Input("confidenceRatingInPercentage", required: true)]
        public Input<double> ConfidenceRatingInPercentage { get; set; } = null!;

        /// <summary>
        /// Time when this project was created. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Input("createdTimestamp", required: true)]
        public Input<string> CreatedTimestamp { get; set; } = null!;

        /// <summary>
        /// Currency to report prices in.
        /// </summary>
        [Input("currency", required: true)]
        public Input<string> Currency { get; set; } = null!;

        /// <summary>
        /// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
        /// </summary>
        [Input("discountPercentage", required: true)]
        public Input<double> DiscountPercentage { get; set; } = null!;

        /// <summary>
        /// Enterprise agreement subscription arm id.
        /// </summary>
        [Input("eaSubscriptionId", required: true)]
        public Input<string> EaSubscriptionId { get; set; } = null!;

        /// <summary>
        /// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Input("monthlyBandwidthCost", required: true)]
        public Input<double> MonthlyBandwidthCost { get; set; } = null!;

        /// <summary>
        /// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Input("monthlyComputeCost", required: true)]
        public Input<double> MonthlyComputeCost { get; set; } = null!;

        /// <summary>
        /// Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Input("monthlyPremiumStorageCost", required: true)]
        public Input<double> MonthlyPremiumStorageCost { get; set; } = null!;

        /// <summary>
        /// Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Input("monthlyStandardSSDStorageCost", required: true)]
        public Input<double> MonthlyStandardSSDStorageCost { get; set; } = null!;

        /// <summary>
        /// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Input("monthlyStorageCost", required: true)]
        public Input<double> MonthlyStorageCost { get; set; } = null!;

        /// <summary>
        /// Number of assessed machines part of this assessment.
        /// </summary>
        [Input("numberOfMachines", required: true)]
        public Input<int> NumberOfMachines { get; set; } = null!;

        /// <summary>
        /// Percentile of performance data used to recommend Azure size.
        /// </summary>
        [Input("percentile", required: true)]
        public Input<string> Percentile { get; set; } = null!;

        /// <summary>
        /// End time to consider performance data for assessment
        /// </summary>
        [Input("perfDataEndTime", required: true)]
        public Input<string> PerfDataEndTime { get; set; } = null!;

        /// <summary>
        /// Start time to consider performance data for assessment
        /// </summary>
        [Input("perfDataStartTime", required: true)]
        public Input<string> PerfDataStartTime { get; set; } = null!;

        /// <summary>
        /// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Input("pricesTimestamp", required: true)]
        public Input<string> PricesTimestamp { get; set; } = null!;

        /// <summary>
        /// Azure reserved instance.
        /// </summary>
        [Input("reservedInstance", required: true)]
        public Input<string> ReservedInstance { get; set; } = null!;

        /// <summary>
        /// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
        /// </summary>
        [Input("scalingFactor", required: true)]
        public Input<double> ScalingFactor { get; set; } = null!;

        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        [Input("sizingCriterion", required: true)]
        public Input<string> SizingCriterion { get; set; } = null!;

        /// <summary>
        /// User configurable setting that describes the status of the assessment.
        /// </summary>
        [Input("stage", required: true)]
        public Input<string> Stage { get; set; } = null!;

        /// <summary>
        /// Whether the assessment has been created and is valid.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        /// <summary>
        /// Time range of performance data used to recommend a size.
        /// </summary>
        [Input("timeRange", required: true)]
        public Input<string> TimeRange { get; set; } = null!;

        /// <summary>
        /// Time when this project was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Input("updatedTimestamp", required: true)]
        public Input<string> UpdatedTimestamp { get; set; } = null!;

        /// <summary>
        /// Specify the duration for which the VMs are up in the on-premises environment.
        /// </summary>
        [Input("vmUptime", required: true)]
        public Input<Inputs.VmUptimeResponseGetArgs> VmUptime { get; set; } = null!;

        public AssessmentPropertiesResponseGetArgs()
        {
        }
    }
}
