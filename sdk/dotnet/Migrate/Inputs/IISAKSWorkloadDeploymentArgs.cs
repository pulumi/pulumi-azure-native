// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.Inputs
{

    /// <summary>
    /// IIS AKS workload deployment.
    /// </summary>
    public sealed class IISAKSWorkloadDeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Class for GMSA authentication details to configure Active Directory connectivity.
        /// </summary>
        [Input("authenticationProperties")]
        public Input<Inputs.GmsaAuthenticationPropertiesArgs>? AuthenticationProperties { get; set; }

        /// <summary>
        /// Class for automation artifact.
        /// </summary>
        [Input("automationArtifactProperties")]
        public Input<Inputs.AutomationArtifactArgs>? AutomationArtifactProperties { get; set; }

        [Input("bindings")]
        private InputList<Inputs.BindingArgs>? _bindings;

        /// <summary>
        /// Gets or sets the bindings for the application.
        /// </summary>
        public InputList<Inputs.BindingArgs> Bindings
        {
            get => _bindings ?? (_bindings = new InputList<Inputs.BindingArgs>());
            set => _bindings = value;
        }

        [Input("buildContainerImages")]
        private InputList<Inputs.ContainerImagePropertiesArgs>? _buildContainerImages;

        /// <summary>
        /// Gets or sets the build container images.
        /// </summary>
        public InputList<Inputs.ContainerImagePropertiesArgs> BuildContainerImages
        {
            get => _buildContainerImages ?? (_buildContainerImages = new InputList<Inputs.ContainerImagePropertiesArgs>());
            set => _buildContainerImages = value;
        }

        /// <summary>
        /// Class for AKSDeployment Properties.
        /// </summary>
        [Input("clusterProperties")]
        public Input<Inputs.AKSDeploymentPropertiesArgs>? ClusterProperties { get; set; }

        [Input("configurations")]
        private InputList<Inputs.WebApplicationConfigurationArgs>? _configurations;

        /// <summary>
        /// Gets or sets application configuration.
        /// </summary>
        public InputList<Inputs.WebApplicationConfigurationArgs> Configurations
        {
            get => _configurations ?? (_configurations = new InputList<Inputs.WebApplicationConfigurationArgs>());
            set => _configurations = value;
        }

        /// <summary>
        /// Class for container image properties.
        /// </summary>
        [Input("containerImageProperties")]
        public Input<Inputs.ContainerImagePropertiesArgs>? ContainerImageProperties { get; set; }

        /// <summary>
        /// Gets or sets the deployment name prefix.
        /// </summary>
        [Input("deploymentNamePrefix")]
        public Input<string>? DeploymentNamePrefix { get; set; }

        /// <summary>
        /// AKS Deployment Specification.
        /// </summary>
        [Input("deploymentSpec")]
        public Input<Inputs.AKSDeploymentSpecificationArgs>? DeploymentSpec { get; set; }

        [Input("directories")]
        private InputList<Inputs.WebApplicationDirectoryArgs>? _directories;

        /// <summary>
        /// Gets or sets application directories.
        /// </summary>
        public InputList<Inputs.WebApplicationDirectoryArgs> Directories
        {
            get => _directories ?? (_directories = new InputList<Inputs.WebApplicationDirectoryArgs>());
            set => _directories = value;
        }

        /// <summary>
        /// Resource Requirements.
        /// </summary>
        [Input("limits")]
        public Input<Inputs.ResourceRequirementsArgs>? Limits { get; set; }

        /// <summary>
        /// Class for app insight monitoring properties.
        /// </summary>
        [Input("monitoringProperties")]
        public Input<Inputs.AppInsightMonitoringPropertiesArgs>? MonitoringProperties { get; set; }

        /// <summary>
        /// Resource Requirements.
        /// </summary>
        [Input("requests")]
        public Input<Inputs.ResourceRequirementsArgs>? Requests { get; set; }

        /// <summary>
        /// Gets or sets the target platform managed identity.
        /// </summary>
        [Input("targetPlatformIdentity")]
        public Input<string>? TargetPlatformIdentity { get; set; }

        public IISAKSWorkloadDeploymentArgs()
        {
        }
        public static new IISAKSWorkloadDeploymentArgs Empty => new IISAKSWorkloadDeploymentArgs();
    }
}
