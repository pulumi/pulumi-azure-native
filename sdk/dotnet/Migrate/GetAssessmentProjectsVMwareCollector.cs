// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate
{
    public static class GetAssessmentProjectsVMwareCollector
    {
        /// <summary>
        /// Get a VMware collector.
        /// Azure REST API version: 2019-10-01.
        /// </summary>
        public static Task<GetAssessmentProjectsVMwareCollectorResult> InvokeAsync(GetAssessmentProjectsVMwareCollectorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAssessmentProjectsVMwareCollectorResult>("azure-native:migrate:getAssessmentProjectsVMwareCollector", args ?? new GetAssessmentProjectsVMwareCollectorArgs(), options.WithDefaults());

        /// <summary>
        /// Get a VMware collector.
        /// Azure REST API version: 2019-10-01.
        /// </summary>
        public static Output<GetAssessmentProjectsVMwareCollectorResult> Invoke(GetAssessmentProjectsVMwareCollectorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssessmentProjectsVMwareCollectorResult>("azure-native:migrate:getAssessmentProjectsVMwareCollector", args ?? new GetAssessmentProjectsVMwareCollectorInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a VMware collector.
        /// Azure REST API version: 2019-10-01.
        /// </summary>
        public static Output<GetAssessmentProjectsVMwareCollectorResult> Invoke(GetAssessmentProjectsVMwareCollectorInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssessmentProjectsVMwareCollectorResult>("azure-native:migrate:getAssessmentProjectsVMwareCollector", args ?? new GetAssessmentProjectsVMwareCollectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssessmentProjectsVMwareCollectorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Resource Group that project is part of.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Unique name of a VMware collector within a project.
        /// </summary>
        [Input("vmWareCollectorName", required: true)]
        public string VmWareCollectorName { get; set; } = null!;

        public GetAssessmentProjectsVMwareCollectorArgs()
        {
        }
        public static new GetAssessmentProjectsVMwareCollectorArgs Empty => new GetAssessmentProjectsVMwareCollectorArgs();
    }

    public sealed class GetAssessmentProjectsVMwareCollectorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Resource Group that project is part of.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Unique name of a VMware collector within a project.
        /// </summary>
        [Input("vmWareCollectorName", required: true)]
        public Input<string> VmWareCollectorName { get; set; } = null!;

        public GetAssessmentProjectsVMwareCollectorInvokeArgs()
        {
        }
        public static new GetAssessmentProjectsVMwareCollectorInvokeArgs Empty => new GetAssessmentProjectsVMwareCollectorInvokeArgs();
    }


    [OutputType]
    public sealed class GetAssessmentProjectsVMwareCollectorResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        public readonly string? ETag;
        public readonly string Id;
        public readonly string Name;
        public readonly Outputs.CollectorPropertiesResponse Properties;
        public readonly string Type;

        [OutputConstructor]
        private GetAssessmentProjectsVMwareCollectorResult(
            string azureApiVersion,

            string? eTag,

            string id,

            string name,

            Outputs.CollectorPropertiesResponse properties,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            ETag = eTag;
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
