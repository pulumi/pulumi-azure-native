// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Migrate
{
    public static class GetMoveCollection
    {
        /// <summary>
        /// Define the move collection.
        /// API Version: 2021-01-01.
        /// </summary>
        public static Task<GetMoveCollectionResult> InvokeAsync(GetMoveCollectionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMoveCollectionResult>("azure-nextgen:migrate:getMoveCollection", args ?? new GetMoveCollectionArgs(), options.WithVersion());
    }


    public sealed class GetMoveCollectionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Move Collection Name.
        /// </summary>
        [Input("moveCollectionName", required: true)]
        public string MoveCollectionName { get; set; } = null!;

        /// <summary>
        /// The Resource Group Name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetMoveCollectionArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMoveCollectionResult
    {
        /// <summary>
        /// The etag of the resource.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Fully qualified resource Id for the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Defines the MSI properties of the Move Collection.
        /// </summary>
        public readonly Outputs.IdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Defines the move collection properties.
        /// </summary>
        public readonly Outputs.MoveCollectionPropertiesResponse Properties;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMoveCollectionResult(
            string etag,

            string id,

            Outputs.IdentityResponse? identity,

            string? location,

            string name,

            Outputs.MoveCollectionPropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Etag = etag;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
