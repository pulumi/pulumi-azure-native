// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Migrate.V20180901Preview.Outputs
{

    [OutputType]
    public sealed class ServersProjectSummaryResponse
    {
        /// <summary>
        /// Gets or sets the count of entities assessed.
        /// </summary>
        public readonly int? AssessedCount;
        /// <summary>
        /// Gets or sets the count of entities discovered.
        /// </summary>
        public readonly int? DiscoveredCount;
        /// <summary>
        /// Gets or sets the extended summary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ExtendedSummary;
        /// <summary>
        /// Gets the Instance type.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// Gets or sets the time when summary was last refreshed.
        /// </summary>
        public readonly string? LastSummaryRefreshedTime;
        /// <summary>
        /// Gets or sets the count of entities migrated.
        /// </summary>
        public readonly int? MigratedCount;
        /// <summary>
        /// Gets or sets the state of refresh summary.
        /// </summary>
        public readonly string? RefreshSummaryState;
        /// <summary>
        /// Gets or sets the count of entities being replicated.
        /// </summary>
        public readonly int? ReplicatingCount;
        /// <summary>
        /// Gets or sets the count of entities test migrated.
        /// </summary>
        public readonly int? TestMigratedCount;

        [OutputConstructor]
        private ServersProjectSummaryResponse(
            int? assessedCount,

            int? discoveredCount,

            ImmutableDictionary<string, string>? extendedSummary,

            string instanceType,

            string? lastSummaryRefreshedTime,

            int? migratedCount,

            string? refreshSummaryState,

            int? replicatingCount,

            int? testMigratedCount)
        {
            AssessedCount = assessedCount;
            DiscoveredCount = discoveredCount;
            ExtendedSummary = extendedSummary;
            InstanceType = instanceType;
            LastSummaryRefreshedTime = lastSummaryRefreshedTime;
            MigratedCount = migratedCount;
            RefreshSummaryState = refreshSummaryState;
            ReplicatingCount = replicatingCount;
            TestMigratedCount = testMigratedCount;
        }
    }
}
