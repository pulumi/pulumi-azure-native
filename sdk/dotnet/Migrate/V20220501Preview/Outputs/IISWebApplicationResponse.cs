// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20220501Preview.Outputs
{

    /// <summary>
    /// IISWeb application.
    /// </summary>
    [OutputType]
    public sealed class IISWebApplicationResponse
    {
        /// <summary>
        /// Gets or sets the web application id.
        /// </summary>
        public readonly string? ApplicationId;
        /// <summary>
        /// Gets or sets the web application name.
        /// </summary>
        public readonly string? ApplicationName;
        /// <summary>
        /// Gets or sets application scratch path.
        /// </summary>
        public readonly string? ApplicationScratchPath;
        /// <summary>
        /// Gets or sets the list of applications for the IIS web site.
        /// </summary>
        public readonly ImmutableArray<Outputs.IISApplicationDetailsResponse> Applications;
        /// <summary>
        /// Gets or sets the bindings for the application.
        /// </summary>
        public readonly ImmutableArray<Outputs.BindingResponse> Bindings;
        /// <summary>
        /// Gets or sets application configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.WebApplicationConfigurationResponse> Configurations;
        /// <summary>
        /// Gets or sets application directories.
        /// </summary>
        public readonly ImmutableArray<Outputs.WebApplicationDirectoryResponse> Directories;
        /// <summary>
        /// Gets or sets the discovered frameworks of application.
        /// </summary>
        public readonly ImmutableArray<Outputs.WebApplicationFrameworkResponse> DiscoveredFrameworks;
        /// <summary>
        /// Gets or sets the display name.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// IISWeb server.
        /// </summary>
        public readonly Outputs.IISWebServerResponse? IisWebServer;
        /// <summary>
        /// Resource Requirements.
        /// </summary>
        public readonly Outputs.ResourceRequirementsResponse? Limits;
        /// <summary>
        /// Second level entity for virtual directories.
        /// </summary>
        public readonly Outputs.DirectoryPathResponse? Path;
        /// <summary>
        /// Framework specific data for a web application.
        /// </summary>
        public readonly Outputs.WebApplicationFrameworkResponse? PrimaryFramework;
        /// <summary>
        /// Resource Requirements.
        /// </summary>
        public readonly Outputs.ResourceRequirementsResponse? Requests;
        /// <summary>
        /// Gets or sets the list of application units for the web site.
        /// </summary>
        public readonly ImmutableArray<Outputs.IISVirtualApplicationDetailsResponse> VirtualApplications;
        /// <summary>
        /// Gets or sets the web server id.
        /// </summary>
        public readonly string? WebServerId;
        /// <summary>
        /// Gets or sets the web server name.
        /// </summary>
        public readonly string? WebServerName;

        [OutputConstructor]
        private IISWebApplicationResponse(
            string? applicationId,

            string? applicationName,

            string? applicationScratchPath,

            ImmutableArray<Outputs.IISApplicationDetailsResponse> applications,

            ImmutableArray<Outputs.BindingResponse> bindings,

            ImmutableArray<Outputs.WebApplicationConfigurationResponse> configurations,

            ImmutableArray<Outputs.WebApplicationDirectoryResponse> directories,

            ImmutableArray<Outputs.WebApplicationFrameworkResponse> discoveredFrameworks,

            string? displayName,

            Outputs.IISWebServerResponse? iisWebServer,

            Outputs.ResourceRequirementsResponse? limits,

            Outputs.DirectoryPathResponse? path,

            Outputs.WebApplicationFrameworkResponse? primaryFramework,

            Outputs.ResourceRequirementsResponse? requests,

            ImmutableArray<Outputs.IISVirtualApplicationDetailsResponse> virtualApplications,

            string? webServerId,

            string? webServerName)
        {
            ApplicationId = applicationId;
            ApplicationName = applicationName;
            ApplicationScratchPath = applicationScratchPath;
            Applications = applications;
            Bindings = bindings;
            Configurations = configurations;
            Directories = directories;
            DiscoveredFrameworks = discoveredFrameworks;
            DisplayName = displayName;
            IisWebServer = iisWebServer;
            Limits = limits;
            Path = path;
            PrimaryFramework = primaryFramework;
            Requests = requests;
            VirtualApplications = virtualApplications;
            WebServerId = webServerId;
            WebServerName = webServerName;
        }
    }
}
