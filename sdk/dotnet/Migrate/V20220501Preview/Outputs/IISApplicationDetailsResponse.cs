// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20220501Preview.Outputs
{

    /// <summary>
    /// IISApplication details.
    /// </summary>
    [OutputType]
    public sealed class IISApplicationDetailsResponse
    {
        /// <summary>
        /// Gets or sets the application pool name.
        /// </summary>
        public readonly string? ApplicationPoolName;
        /// <summary>
        /// Gets or sets the list of directories.
        /// </summary>
        public readonly ImmutableArray<Outputs.DirectoryPathResponse> Directories;
        /// <summary>
        /// Gets or sets a value indicating whether 32 bit applications are allowed to run on 64 bit.
        /// </summary>
        public readonly bool? Enable32BitApiOnWin64;
        /// <summary>
        /// Gets the ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets or sets the managed pipeline mode.
        /// </summary>
        public readonly string? ManagedPipelineMode;
        /// <summary>
        /// Second level entity for virtual directories.
        /// </summary>
        public readonly Outputs.DirectoryPathResponse? Path;
        /// <summary>
        /// Gets or sets the runtime version.
        /// </summary>
        public readonly string? RuntimeVersion;

        [OutputConstructor]
        private IISApplicationDetailsResponse(
            string? applicationPoolName,

            ImmutableArray<Outputs.DirectoryPathResponse> directories,

            bool? enable32BitApiOnWin64,

            string id,

            string? managedPipelineMode,

            Outputs.DirectoryPathResponse? path,

            string? runtimeVersion)
        {
            ApplicationPoolName = applicationPoolName;
            Directories = directories;
            Enable32BitApiOnWin64 = enable32BitApiOnWin64;
            Id = id;
            ManagedPipelineMode = managedPipelineMode;
            Path = path;
            RuntimeVersion = runtimeVersion;
        }
    }
}
