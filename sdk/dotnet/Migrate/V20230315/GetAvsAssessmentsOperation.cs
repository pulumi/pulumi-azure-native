// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20230315
{
    public static class GetAvsAssessmentsOperation
    {
        /// <summary>
        /// Get a AvsAssessment
        /// </summary>
        public static Task<GetAvsAssessmentsOperationResult> InvokeAsync(GetAvsAssessmentsOperationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAvsAssessmentsOperationResult>("azure-native:migrate/v20230315:getAvsAssessmentsOperation", args ?? new GetAvsAssessmentsOperationArgs(), options.WithDefaults());

        /// <summary>
        /// Get a AvsAssessment
        /// </summary>
        public static Output<GetAvsAssessmentsOperationResult> Invoke(GetAvsAssessmentsOperationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAvsAssessmentsOperationResult>("azure-native:migrate/v20230315:getAvsAssessmentsOperation", args ?? new GetAvsAssessmentsOperationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAvsAssessmentsOperationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AVS Assessment ARM name
        /// </summary>
        [Input("assessmentName", required: true)]
        public string AssessmentName { get; set; } = null!;

        /// <summary>
        /// Group ARM name
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        /// <summary>
        /// Assessment Project Name
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAvsAssessmentsOperationArgs()
        {
        }
        public static new GetAvsAssessmentsOperationArgs Empty => new GetAvsAssessmentsOperationArgs();
    }

    public sealed class GetAvsAssessmentsOperationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AVS Assessment ARM name
        /// </summary>
        [Input("assessmentName", required: true)]
        public Input<string> AssessmentName { get; set; } = null!;

        /// <summary>
        /// Group ARM name
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// Assessment Project Name
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAvsAssessmentsOperationInvokeArgs()
        {
        }
        public static new GetAvsAssessmentsOperationInvokeArgs Empty => new GetAvsAssessmentsOperationInvokeArgs();
    }


    [OutputType]
    public sealed class GetAvsAssessmentsOperationResult
    {
        /// <summary>
        /// Gets the assessment error summary.
        ///             This is the number of machines
        /// affected by each type of error in this assessment.
        /// </summary>
        public readonly ImmutableDictionary<string, int> AssessmentErrorSummary;
        /// <summary>
        /// Assessment type of the assessment.
        /// </summary>
        public readonly string AssessmentType;
        /// <summary>
        /// Azure Location or Azure region where to which the machines will be migrated.
        /// </summary>
        public readonly string? AzureLocation;
        /// <summary>
        /// Azure Offer code according to which cost estimation is done.
        /// </summary>
        public readonly string? AzureOfferCode;
        /// <summary>
        /// Confidence Rating in Percentage.
        /// </summary>
        public readonly double ConfidenceRatingInPercentage;
        /// <summary>
        /// Predicted CPU utilization.
        /// </summary>
        public readonly double CpuUtilization;
        /// <summary>
        /// Date and Time when assessment was created.
        /// </summary>
        public readonly string CreatedTimestamp;
        /// <summary>
        /// Currency in which prices should be reported.
        /// </summary>
        public readonly string? Currency;
        /// <summary>
        /// De-duplication compression.
        /// </summary>
        public readonly double? DedupeCompression;
        /// <summary>
        /// Custom discount percentage.
        /// </summary>
        public readonly double? DiscountPercentage;
        /// <summary>
        /// Failures to tolerate and RAID level in a common property.
        /// </summary>
        public readonly string? FailuresToTolerateAndRaidLevel;
        /// <summary>
        /// Gets the group type for the assessment.
        /// </summary>
        public readonly string GroupType;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Is Stretch Cluster Enabled.
        /// </summary>
        public readonly bool? IsStretchClusterEnabled;
        /// <summary>
        /// Limiting factor.
        /// </summary>
        public readonly string LimitingFactor;
        /// <summary>
        /// Memory overcommit.
        /// </summary>
        public readonly double? MemOvercommit;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// AVS node type.
        /// </summary>
        public readonly string? NodeType;
        /// <summary>
        /// Number of machines part of the assessment.
        /// </summary>
        public readonly int NumberOfMachines;
        /// <summary>
        /// Recommended number of nodes.
        /// </summary>
        public readonly int NumberOfNodes;
        /// <summary>
        /// Percentile of the utilization data values to be considered while assessing
        /// machines.
        /// </summary>
        public readonly string? Percentile;
        /// <summary>
        /// Gets or sets the end time to consider performance data for assessment.
        /// </summary>
        public readonly string? PerfDataEndTime;
        /// <summary>
        /// Gets or sets the start time to consider performance data for assessment.
        /// </summary>
        public readonly string? PerfDataStartTime;
        /// <summary>
        /// Time when the Azure Prices were queried. Date-Time represented in ISO-8601
        /// format.
        /// </summary>
        public readonly string PricesTimestamp;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Predicted RAM utilization.
        /// </summary>
        public readonly double RamUtilization;
        /// <summary>
        /// Reserved instance.
        /// </summary>
        public readonly string? ReservedInstance;
        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        public readonly double? ScalingFactor;
        /// <summary>
        /// Schema version.
        /// </summary>
        public readonly string SchemaVersion;
        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        public readonly string? SizingCriterion;
        /// <summary>
        /// User configurable setting to display the Stage of Assessment.
        /// </summary>
        public readonly string Stage;
        /// <summary>
        /// Whether assessment is in valid state and all machines have been assessed.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Predicted storage utilization.
        /// </summary>
        public readonly double StorageUtilization;
        /// <summary>
        /// Gets or sets the Assessment cloud suitability.
        /// </summary>
        public readonly string Suitability;
        /// <summary>
        /// Gets or sets the Assessment suitability explanation.
        /// </summary>
        public readonly string SuitabilityExplanation;
        /// <summary>
        /// Cloud suitability summary for all the machines in the assessment.
        /// </summary>
        public readonly ImmutableDictionary<string, int> SuitabilitySummary;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Time Range for which the historic utilization data should be considered for
        /// assessment.
        /// </summary>
        public readonly string? TimeRange;
        /// <summary>
        /// Predicted total CPU cores used.
        /// </summary>
        public readonly double TotalCpuCores;
        /// <summary>
        /// Total monthly cost.
        /// </summary>
        public readonly double TotalMonthlyCost;
        /// <summary>
        /// Predicted total RAM used in GB.
        /// </summary>
        public readonly double TotalRamInGB;
        /// <summary>
        /// Predicted total Storage used in GB.
        /// </summary>
        public readonly double TotalStorageInGB;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Date and Time when assessment was last updated.
        /// </summary>
        public readonly string UpdatedTimestamp;
        /// <summary>
        /// VCPU over subscription.
        /// </summary>
        public readonly double? VcpuOversubscription;

        [OutputConstructor]
        private GetAvsAssessmentsOperationResult(
            ImmutableDictionary<string, int> assessmentErrorSummary,

            string assessmentType,

            string? azureLocation,

            string? azureOfferCode,

            double confidenceRatingInPercentage,

            double cpuUtilization,

            string createdTimestamp,

            string? currency,

            double? dedupeCompression,

            double? discountPercentage,

            string? failuresToTolerateAndRaidLevel,

            string groupType,

            string id,

            bool? isStretchClusterEnabled,

            string limitingFactor,

            double? memOvercommit,

            string name,

            string? nodeType,

            int numberOfMachines,

            int numberOfNodes,

            string? percentile,

            string? perfDataEndTime,

            string? perfDataStartTime,

            string pricesTimestamp,

            string? provisioningState,

            double ramUtilization,

            string? reservedInstance,

            double? scalingFactor,

            string schemaVersion,

            string? sizingCriterion,

            string stage,

            string status,

            double storageUtilization,

            string suitability,

            string suitabilityExplanation,

            ImmutableDictionary<string, int> suitabilitySummary,

            Outputs.SystemDataResponse systemData,

            string? timeRange,

            double totalCpuCores,

            double totalMonthlyCost,

            double totalRamInGB,

            double totalStorageInGB,

            string type,

            string updatedTimestamp,

            double? vcpuOversubscription)
        {
            AssessmentErrorSummary = assessmentErrorSummary;
            AssessmentType = assessmentType;
            AzureLocation = azureLocation;
            AzureOfferCode = azureOfferCode;
            ConfidenceRatingInPercentage = confidenceRatingInPercentage;
            CpuUtilization = cpuUtilization;
            CreatedTimestamp = createdTimestamp;
            Currency = currency;
            DedupeCompression = dedupeCompression;
            DiscountPercentage = discountPercentage;
            FailuresToTolerateAndRaidLevel = failuresToTolerateAndRaidLevel;
            GroupType = groupType;
            Id = id;
            IsStretchClusterEnabled = isStretchClusterEnabled;
            LimitingFactor = limitingFactor;
            MemOvercommit = memOvercommit;
            Name = name;
            NodeType = nodeType;
            NumberOfMachines = numberOfMachines;
            NumberOfNodes = numberOfNodes;
            Percentile = percentile;
            PerfDataEndTime = perfDataEndTime;
            PerfDataStartTime = perfDataStartTime;
            PricesTimestamp = pricesTimestamp;
            ProvisioningState = provisioningState;
            RamUtilization = ramUtilization;
            ReservedInstance = reservedInstance;
            ScalingFactor = scalingFactor;
            SchemaVersion = schemaVersion;
            SizingCriterion = sizingCriterion;
            Stage = stage;
            Status = status;
            StorageUtilization = storageUtilization;
            Suitability = suitability;
            SuitabilityExplanation = suitabilityExplanation;
            SuitabilitySummary = suitabilitySummary;
            SystemData = systemData;
            TimeRange = timeRange;
            TotalCpuCores = totalCpuCores;
            TotalMonthlyCost = totalMonthlyCost;
            TotalRamInGB = totalRamInGB;
            TotalStorageInGB = totalStorageInGB;
            Type = type;
            UpdatedTimestamp = updatedTimestamp;
            VcpuOversubscription = vcpuOversubscription;
        }
    }
}
