// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20230315
{
    /// <summary>
    /// Machine assessment resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:migrate/v20230315:AssessmentsOperation")]
    public partial class AssessmentsOperation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Gets or sets the assessment error summary.
        ///             This is the number of
        /// machines affected by each type of error in this assessment.
        /// </summary>
        [Output("assessmentErrorSummary")]
        public Output<ImmutableDictionary<string, int>> AssessmentErrorSummary { get; private set; } = null!;

        /// <summary>
        /// Assessment type of the assessment.
        /// </summary>
        [Output("assessmentType")]
        public Output<string> AssessmentType { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the azure storage type. Premium, Standard etc.
        /// </summary>
        [Output("azureDiskTypes")]
        public Output<ImmutableArray<string>> AzureDiskTypes { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the user configurable setting to display the azure hybrid use
        /// benefit.
        /// </summary>
        [Output("azureHybridUseBenefit")]
        public Output<string?> AzureHybridUseBenefit { get; private set; } = null!;

        /// <summary>
        /// Azure Location or Azure region where to which the machines will be migrated.
        /// </summary>
        [Output("azureLocation")]
        public Output<string?> AzureLocation { get; private set; } = null!;

        /// <summary>
        /// Azure Offer Code.
        /// </summary>
        [Output("azureOfferCode")]
        public Output<string?> AzureOfferCode { get; private set; } = null!;

        /// <summary>
        /// Gets or sets Azure Pricing Tier - Free, Basic, etc.
        /// </summary>
        [Output("azurePricingTier")]
        public Output<string?> AzurePricingTier { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
        /// </summary>
        [Output("azureStorageRedundancy")]
        public Output<string?> AzureStorageRedundancy { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the Azure VM families.
        /// </summary>
        [Output("azureVmFamilies")]
        public Output<ImmutableArray<string>> AzureVmFamilies { get; private set; } = null!;

        /// <summary>
        /// Confidence Rating in Percentage.
        /// </summary>
        [Output("confidenceRatingInPercentage")]
        public Output<double> ConfidenceRatingInPercentage { get; private set; } = null!;

        /// <summary>
        /// Gets the collection of cost components.
        /// </summary>
        [Output("costComponents")]
        public Output<ImmutableArray<Outputs.CostComponentResponse>> CostComponents { get; private set; } = null!;

        /// <summary>
        /// Date and Time when assessment was created.
        /// </summary>
        [Output("createdTimestamp")]
        public Output<string> CreatedTimestamp { get; private set; } = null!;

        /// <summary>
        /// Currency in which prices should be reported.
        /// </summary>
        [Output("currency")]
        public Output<string?> Currency { get; private set; } = null!;

        /// <summary>
        /// Custom discount percentage.
        /// </summary>
        [Output("discountPercentage")]
        public Output<double?> DiscountPercentage { get; private set; } = null!;

        /// <summary>
        /// Gets the distribution by os name.
        /// </summary>
        [Output("distributionByOsName")]
        public Output<ImmutableDictionary<string, int>> DistributionByOsName { get; private set; } = null!;

        /// <summary>
        /// Gets the distribution distribution of sqlInstances by service pack insight.
        /// </summary>
        [Output("distributionByServicePackInsight")]
        public Output<ImmutableDictionary<string, int>> DistributionByServicePackInsight { get; private set; } = null!;

        /// <summary>
        /// Gets the distribution of sqlInstances by support status.
        /// </summary>
        [Output("distributionBySupportStatus")]
        public Output<ImmutableDictionary<string, int>> DistributionBySupportStatus { get; private set; } = null!;

        /// <summary>
        /// Gets or sets enterprise agreement subscription id.
        /// </summary>
        [Output("eaSubscriptionId")]
        public Output<string?> EaSubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Gets the group type for the assessment.
        /// </summary>
        [Output("groupType")]
        public Output<string> GroupType { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the aggregate Bandwidth Cost for all machines in the assessment.
        /// </summary>
        [Output("monthlyBandwidthCost")]
        public Output<double> MonthlyBandwidthCost { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the aggregate Compute Cost for all machines in the assessment.
        /// </summary>
        [Output("monthlyComputeCost")]
        public Output<double> MonthlyComputeCost { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the aggregate premium storage cost for all machines in the
        /// assessment.
        /// </summary>
        [Output("monthlyPremiumStorageCost")]
        public Output<double> MonthlyPremiumStorageCost { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the aggregate standard SSD storage cost for all the machines in
        /// the assessment.
        /// </summary>
        [Output("monthlyStandardSsdStorageCost")]
        public Output<double> MonthlyStandardSsdStorageCost { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the aggregate Storage Cost for all machines in the assessment.
        /// </summary>
        [Output("monthlyStorageCost")]
        public Output<double> MonthlyStorageCost { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the aggregate ultra storage cost for all machines in the
        /// assessment.
        /// </summary>
        [Output("monthlyUltraStorageCost")]
        public Output<double> MonthlyUltraStorageCost { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the Number of machines part of the assessment.
        /// </summary>
        [Output("numberOfMachines")]
        public Output<int> NumberOfMachines { get; private set; } = null!;

        /// <summary>
        /// Percentile of the utilization data values to be considered while assessing
        /// machines.
        /// </summary>
        [Output("percentile")]
        public Output<string?> Percentile { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the end time to consider performance data for assessment.
        /// </summary>
        [Output("perfDataEndTime")]
        public Output<string?> PerfDataEndTime { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the start time to consider performance data for assessment.
        /// </summary>
        [Output("perfDataStartTime")]
        public Output<string?> PerfDataStartTime { get; private set; } = null!;

        /// <summary>
        /// Last time when rates were queried.
        /// </summary>
        [Output("pricesTimestamp")]
        public Output<string> PricesTimestamp { get; private set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the Azure Reserved Instance - 1-Year, 3-Year.
        /// </summary>
        [Output("reservedInstance")]
        public Output<string?> ReservedInstance { get; private set; } = null!;

        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        [Output("scalingFactor")]
        public Output<double?> ScalingFactor { get; private set; } = null!;

        /// <summary>
        /// Schema version.
        /// </summary>
        [Output("schemaVersion")]
        public Output<string> SchemaVersion { get; private set; } = null!;

        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        [Output("sizingCriterion")]
        public Output<string?> SizingCriterion { get; private set; } = null!;

        /// <summary>
        /// User configurable setting to display the Stage of Assessment.
        /// </summary>
        [Output("stage")]
        public Output<string> Stage { get; private set; } = null!;

        /// <summary>
        /// Whether assessment is in valid state and all machines have been assessed.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the Cloud suitability summary for all the machines in the
        /// assessment.
        /// </summary>
        [Output("suitabilitySummary")]
        public Output<ImmutableDictionary<string, int>> SuitabilitySummary { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Time Range for which the historic utilization data should be considered for
        /// assessment.
        /// </summary>
        [Output("timeRange")]
        public Output<string?> TimeRange { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Date and Time when assessment was last updated.
        /// </summary>
        [Output("updatedTimestamp")]
        public Output<string> UpdatedTimestamp { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the duration for which the VMs are up in the on-premises
        /// environment.
        /// </summary>
        [Output("vmUptime")]
        public Output<Outputs.VmUptimeResponse?> VmUptime { get; private set; } = null!;


        /// <summary>
        /// Create a AssessmentsOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AssessmentsOperation(string name, AssessmentsOperationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:migrate/v20230315:AssessmentsOperation", name, args ?? new AssessmentsOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AssessmentsOperation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:migrate/v20230315:AssessmentsOperation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:migrate:AssessmentsOperation" },
                    new global::Pulumi.Alias { Type = "azure-native:migrate/v20191001:AssessmentsOperation" },
                    new global::Pulumi.Alias { Type = "azure-native:migrate/v20230401preview:AssessmentsOperation" },
                    new global::Pulumi.Alias { Type = "azure-native:migrate/v20230501preview:AssessmentsOperation" },
                    new global::Pulumi.Alias { Type = "azure-native:migrate/v20230909preview:AssessmentsOperation" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AssessmentsOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AssessmentsOperation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AssessmentsOperation(name, id, options);
        }
    }

    public sealed class AssessmentsOperationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Machine Assessment ARM name
        /// </summary>
        [Input("assessmentName")]
        public Input<string>? AssessmentName { get; set; }

        [Input("azureDiskTypes")]
        private InputList<Union<string, Pulumi.AzureNative.Migrate.V20230315.AzureDiskType>>? _azureDiskTypes;

        /// <summary>
        /// Gets or sets the azure storage type. Premium, Standard etc.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.Migrate.V20230315.AzureDiskType>> AzureDiskTypes
        {
            get => _azureDiskTypes ?? (_azureDiskTypes = new InputList<Union<string, Pulumi.AzureNative.Migrate.V20230315.AzureDiskType>>());
            set => _azureDiskTypes = value;
        }

        /// <summary>
        /// Gets or sets the user configurable setting to display the azure hybrid use
        /// benefit.
        /// </summary>
        [Input("azureHybridUseBenefit")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.AzureHybridUseBenefit>? AzureHybridUseBenefit { get; set; }

        /// <summary>
        /// Azure Location or Azure region where to which the machines will be migrated.
        /// </summary>
        [Input("azureLocation")]
        public Input<string>? AzureLocation { get; set; }

        /// <summary>
        /// Azure Offer Code.
        /// </summary>
        [Input("azureOfferCode")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.AzureOfferCode>? AzureOfferCode { get; set; }

        /// <summary>
        /// Gets or sets Azure Pricing Tier - Free, Basic, etc.
        /// </summary>
        [Input("azurePricingTier")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.AzurePricingTier>? AzurePricingTier { get; set; }

        /// <summary>
        /// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
        /// </summary>
        [Input("azureStorageRedundancy")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.AzureStorageRedundancy>? AzureStorageRedundancy { get; set; }

        [Input("azureVmFamilies")]
        private InputList<Union<string, Pulumi.AzureNative.Migrate.V20230315.AzureVmFamily>>? _azureVmFamilies;

        /// <summary>
        /// Gets or sets the Azure VM families.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.Migrate.V20230315.AzureVmFamily>> AzureVmFamilies
        {
            get => _azureVmFamilies ?? (_azureVmFamilies = new InputList<Union<string, Pulumi.AzureNative.Migrate.V20230315.AzureVmFamily>>());
            set => _azureVmFamilies = value;
        }

        /// <summary>
        /// Currency in which prices should be reported.
        /// </summary>
        [Input("currency")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.AzureCurrency>? Currency { get; set; }

        /// <summary>
        /// Custom discount percentage.
        /// </summary>
        [Input("discountPercentage")]
        public Input<double>? DiscountPercentage { get; set; }

        /// <summary>
        /// Gets or sets enterprise agreement subscription id.
        /// </summary>
        [Input("eaSubscriptionId")]
        public Input<string>? EaSubscriptionId { get; set; }

        /// <summary>
        /// Group ARM name
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// Percentile of the utilization data values to be considered while assessing
        /// machines.
        /// </summary>
        [Input("percentile")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.Percentile>? Percentile { get; set; }

        /// <summary>
        /// Gets or sets the end time to consider performance data for assessment.
        /// </summary>
        [Input("perfDataEndTime")]
        public Input<string>? PerfDataEndTime { get; set; }

        /// <summary>
        /// Gets or sets the start time to consider performance data for assessment.
        /// </summary>
        [Input("perfDataStartTime")]
        public Input<string>? PerfDataStartTime { get; set; }

        /// <summary>
        /// Assessment Project Name
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Input("provisioningState")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.ProvisioningState>? ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the Azure Reserved Instance - 1-Year, 3-Year.
        /// </summary>
        [Input("reservedInstance")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.AzureReservedInstance>? ReservedInstance { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        [Input("scalingFactor")]
        public Input<double>? ScalingFactor { get; set; }

        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        [Input("sizingCriterion")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.AssessmentSizingCriterion>? SizingCriterion { get; set; }

        /// <summary>
        /// Time Range for which the historic utilization data should be considered for
        /// assessment.
        /// </summary>
        [Input("timeRange")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230315.TimeRange>? TimeRange { get; set; }

        /// <summary>
        /// Gets or sets the duration for which the VMs are up in the on-premises
        /// environment.
        /// </summary>
        [Input("vmUptime")]
        public Input<Inputs.VmUptimeArgs>? VmUptime { get; set; }

        public AssessmentsOperationArgs()
        {
        }
        public static new AssessmentsOperationArgs Empty => new AssessmentsOperationArgs();
    }
}
