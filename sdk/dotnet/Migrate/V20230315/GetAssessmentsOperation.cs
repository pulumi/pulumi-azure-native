// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20230315
{
    public static class GetAssessmentsOperation
    {
        /// <summary>
        /// Get a Assessment
        /// </summary>
        public static Task<GetAssessmentsOperationResult> InvokeAsync(GetAssessmentsOperationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAssessmentsOperationResult>("azure-native:migrate/v20230315:getAssessmentsOperation", args ?? new GetAssessmentsOperationArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Assessment
        /// </summary>
        public static Output<GetAssessmentsOperationResult> Invoke(GetAssessmentsOperationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssessmentsOperationResult>("azure-native:migrate/v20230315:getAssessmentsOperation", args ?? new GetAssessmentsOperationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssessmentsOperationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Machine Assessment ARM name
        /// </summary>
        [Input("assessmentName", required: true)]
        public string AssessmentName { get; set; } = null!;

        /// <summary>
        /// Group ARM name
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        /// <summary>
        /// Assessment Project Name
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAssessmentsOperationArgs()
        {
        }
        public static new GetAssessmentsOperationArgs Empty => new GetAssessmentsOperationArgs();
    }

    public sealed class GetAssessmentsOperationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Machine Assessment ARM name
        /// </summary>
        [Input("assessmentName", required: true)]
        public Input<string> AssessmentName { get; set; } = null!;

        /// <summary>
        /// Group ARM name
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// Assessment Project Name
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAssessmentsOperationInvokeArgs()
        {
        }
        public static new GetAssessmentsOperationInvokeArgs Empty => new GetAssessmentsOperationInvokeArgs();
    }


    [OutputType]
    public sealed class GetAssessmentsOperationResult
    {
        /// <summary>
        /// Gets or sets the assessment error summary.
        ///             This is the number of
        /// machines affected by each type of error in this assessment.
        /// </summary>
        public readonly ImmutableDictionary<string, int> AssessmentErrorSummary;
        /// <summary>
        /// Assessment type of the assessment.
        /// </summary>
        public readonly string AssessmentType;
        /// <summary>
        /// Gets or sets the azure storage type. Premium, Standard etc.
        /// </summary>
        public readonly ImmutableArray<string> AzureDiskTypes;
        /// <summary>
        /// Gets or sets the user configurable setting to display the azure hybrid use
        /// benefit.
        /// </summary>
        public readonly string? AzureHybridUseBenefit;
        /// <summary>
        /// Azure Location or Azure region where to which the machines will be migrated.
        /// </summary>
        public readonly string? AzureLocation;
        /// <summary>
        /// Azure Offer Code.
        /// </summary>
        public readonly string? AzureOfferCode;
        /// <summary>
        /// Gets or sets Azure Pricing Tier - Free, Basic, etc.
        /// </summary>
        public readonly string? AzurePricingTier;
        /// <summary>
        /// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
        /// </summary>
        public readonly string? AzureStorageRedundancy;
        /// <summary>
        /// Gets or sets the Azure VM families.
        /// </summary>
        public readonly ImmutableArray<string> AzureVmFamilies;
        /// <summary>
        /// Confidence Rating in Percentage.
        /// </summary>
        public readonly double ConfidenceRatingInPercentage;
        /// <summary>
        /// Gets the collection of cost components.
        /// </summary>
        public readonly ImmutableArray<Outputs.CostComponentResponse> CostComponents;
        /// <summary>
        /// Date and Time when assessment was created.
        /// </summary>
        public readonly string CreatedTimestamp;
        /// <summary>
        /// Currency in which prices should be reported.
        /// </summary>
        public readonly string? Currency;
        /// <summary>
        /// Custom discount percentage.
        /// </summary>
        public readonly double? DiscountPercentage;
        /// <summary>
        /// Gets the distribution by os name.
        /// </summary>
        public readonly ImmutableDictionary<string, int> DistributionByOsName;
        /// <summary>
        /// Gets the distribution distribution of sqlInstances by service pack insight.
        /// </summary>
        public readonly ImmutableDictionary<string, int> DistributionByServicePackInsight;
        /// <summary>
        /// Gets the distribution of sqlInstances by support status.
        /// </summary>
        public readonly ImmutableDictionary<string, int> DistributionBySupportStatus;
        /// <summary>
        /// Gets or sets enterprise agreement subscription id.
        /// </summary>
        public readonly string? EaSubscriptionId;
        /// <summary>
        /// Gets the group type for the assessment.
        /// </summary>
        public readonly string GroupType;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets or sets the aggregate Bandwidth Cost for all machines in the assessment.
        /// </summary>
        public readonly double MonthlyBandwidthCost;
        /// <summary>
        /// Gets or sets the aggregate Compute Cost for all machines in the assessment.
        /// </summary>
        public readonly double MonthlyComputeCost;
        /// <summary>
        /// Gets or sets the aggregate premium storage cost for all machines in the
        /// assessment.
        /// </summary>
        public readonly double MonthlyPremiumStorageCost;
        /// <summary>
        /// Gets or sets the aggregate standard SSD storage cost for all the machines in
        /// the assessment.
        /// </summary>
        public readonly double MonthlyStandardSsdStorageCost;
        /// <summary>
        /// Gets or sets the aggregate Storage Cost for all machines in the assessment.
        /// </summary>
        public readonly double MonthlyStorageCost;
        /// <summary>
        /// Gets or sets the aggregate ultra storage cost for all machines in the
        /// assessment.
        /// </summary>
        public readonly double MonthlyUltraStorageCost;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the Number of machines part of the assessment.
        /// </summary>
        public readonly int NumberOfMachines;
        /// <summary>
        /// Percentile of the utilization data values to be considered while assessing
        /// machines.
        /// </summary>
        public readonly string? Percentile;
        /// <summary>
        /// Gets or sets the end time to consider performance data for assessment.
        /// </summary>
        public readonly string? PerfDataEndTime;
        /// <summary>
        /// Gets or sets the start time to consider performance data for assessment.
        /// </summary>
        public readonly string? PerfDataStartTime;
        /// <summary>
        /// Last time when rates were queried.
        /// </summary>
        public readonly string PricesTimestamp;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets the Azure Reserved Instance - 1-Year, 3-Year.
        /// </summary>
        public readonly string? ReservedInstance;
        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        public readonly double? ScalingFactor;
        /// <summary>
        /// Schema version.
        /// </summary>
        public readonly string SchemaVersion;
        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        public readonly string? SizingCriterion;
        /// <summary>
        /// User configurable setting to display the Stage of Assessment.
        /// </summary>
        public readonly string Stage;
        /// <summary>
        /// Whether assessment is in valid state and all machines have been assessed.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Gets or sets the Cloud suitability summary for all the machines in the
        /// assessment.
        /// </summary>
        public readonly ImmutableDictionary<string, int> SuitabilitySummary;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Time Range for which the historic utilization data should be considered for
        /// assessment.
        /// </summary>
        public readonly string? TimeRange;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Date and Time when assessment was last updated.
        /// </summary>
        public readonly string UpdatedTimestamp;
        /// <summary>
        /// Gets or sets the duration for which the VMs are up in the on-premises
        /// environment.
        /// </summary>
        public readonly Outputs.VmUptimeResponse? VmUptime;

        [OutputConstructor]
        private GetAssessmentsOperationResult(
            ImmutableDictionary<string, int> assessmentErrorSummary,

            string assessmentType,

            ImmutableArray<string> azureDiskTypes,

            string? azureHybridUseBenefit,

            string? azureLocation,

            string? azureOfferCode,

            string? azurePricingTier,

            string? azureStorageRedundancy,

            ImmutableArray<string> azureVmFamilies,

            double confidenceRatingInPercentage,

            ImmutableArray<Outputs.CostComponentResponse> costComponents,

            string createdTimestamp,

            string? currency,

            double? discountPercentage,

            ImmutableDictionary<string, int> distributionByOsName,

            ImmutableDictionary<string, int> distributionByServicePackInsight,

            ImmutableDictionary<string, int> distributionBySupportStatus,

            string? eaSubscriptionId,

            string groupType,

            string id,

            double monthlyBandwidthCost,

            double monthlyComputeCost,

            double monthlyPremiumStorageCost,

            double monthlyStandardSsdStorageCost,

            double monthlyStorageCost,

            double monthlyUltraStorageCost,

            string name,

            int numberOfMachines,

            string? percentile,

            string? perfDataEndTime,

            string? perfDataStartTime,

            string pricesTimestamp,

            string? provisioningState,

            string? reservedInstance,

            double? scalingFactor,

            string schemaVersion,

            string? sizingCriterion,

            string stage,

            string status,

            ImmutableDictionary<string, int> suitabilitySummary,

            Outputs.SystemDataResponse systemData,

            string? timeRange,

            string type,

            string updatedTimestamp,

            Outputs.VmUptimeResponse? vmUptime)
        {
            AssessmentErrorSummary = assessmentErrorSummary;
            AssessmentType = assessmentType;
            AzureDiskTypes = azureDiskTypes;
            AzureHybridUseBenefit = azureHybridUseBenefit;
            AzureLocation = azureLocation;
            AzureOfferCode = azureOfferCode;
            AzurePricingTier = azurePricingTier;
            AzureStorageRedundancy = azureStorageRedundancy;
            AzureVmFamilies = azureVmFamilies;
            ConfidenceRatingInPercentage = confidenceRatingInPercentage;
            CostComponents = costComponents;
            CreatedTimestamp = createdTimestamp;
            Currency = currency;
            DiscountPercentage = discountPercentage;
            DistributionByOsName = distributionByOsName;
            DistributionByServicePackInsight = distributionByServicePackInsight;
            DistributionBySupportStatus = distributionBySupportStatus;
            EaSubscriptionId = eaSubscriptionId;
            GroupType = groupType;
            Id = id;
            MonthlyBandwidthCost = monthlyBandwidthCost;
            MonthlyComputeCost = monthlyComputeCost;
            MonthlyPremiumStorageCost = monthlyPremiumStorageCost;
            MonthlyStandardSsdStorageCost = monthlyStandardSsdStorageCost;
            MonthlyStorageCost = monthlyStorageCost;
            MonthlyUltraStorageCost = monthlyUltraStorageCost;
            Name = name;
            NumberOfMachines = numberOfMachines;
            Percentile = percentile;
            PerfDataEndTime = perfDataEndTime;
            PerfDataStartTime = perfDataStartTime;
            PricesTimestamp = pricesTimestamp;
            ProvisioningState = provisioningState;
            ReservedInstance = reservedInstance;
            ScalingFactor = scalingFactor;
            SchemaVersion = schemaVersion;
            SizingCriterion = sizingCriterion;
            Stage = stage;
            Status = status;
            SuitabilitySummary = suitabilitySummary;
            SystemData = systemData;
            TimeRange = timeRange;
            Type = type;
            UpdatedTimestamp = updatedTimestamp;
            VmUptime = vmUptime;
        }
    }
}
