// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20230401Preview
{
    /// <summary>
    /// AVS assessment resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:migrate/v20230401preview:AvsAssessmentsOperation")]
    public partial class AvsAssessmentsOperation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Gets the assessment error summary.
        ///             This is the number of machines
        /// affected by each type of error in this assessment.
        /// </summary>
        [Output("assessmentErrorSummary")]
        public Output<ImmutableDictionary<string, int>> AssessmentErrorSummary { get; private set; } = null!;

        /// <summary>
        /// Assessment type of the assessment.
        /// </summary>
        [Output("assessmentType")]
        public Output<string> AssessmentType { get; private set; } = null!;

        /// <summary>
        /// Azure Location or Azure region where to which the machines will be migrated.
        /// </summary>
        [Output("azureLocation")]
        public Output<string?> AzureLocation { get; private set; } = null!;

        /// <summary>
        /// Azure Offer code according to which cost estimation is done.
        /// </summary>
        [Output("azureOfferCode")]
        public Output<string?> AzureOfferCode { get; private set; } = null!;

        /// <summary>
        /// Confidence Rating in Percentage.
        /// </summary>
        [Output("confidenceRatingInPercentage")]
        public Output<double> ConfidenceRatingInPercentage { get; private set; } = null!;

        /// <summary>
        /// Predicted CPU utilization.
        /// </summary>
        [Output("cpuUtilization")]
        public Output<double> CpuUtilization { get; private set; } = null!;

        /// <summary>
        /// Date and Time when assessment was created.
        /// </summary>
        [Output("createdTimestamp")]
        public Output<string> CreatedTimestamp { get; private set; } = null!;

        /// <summary>
        /// Currency in which prices should be reported.
        /// </summary>
        [Output("currency")]
        public Output<string?> Currency { get; private set; } = null!;

        /// <summary>
        /// De-duplication compression.
        /// </summary>
        [Output("dedupeCompression")]
        public Output<double?> DedupeCompression { get; private set; } = null!;

        /// <summary>
        /// Custom discount percentage.
        /// </summary>
        [Output("discountPercentage")]
        public Output<double?> DiscountPercentage { get; private set; } = null!;

        /// <summary>
        /// Failures to tolerate and RAID level in a common property.
        /// </summary>
        [Output("failuresToTolerateAndRaidLevel")]
        public Output<string?> FailuresToTolerateAndRaidLevel { get; private set; } = null!;

        /// <summary>
        /// Gets the group type for the assessment.
        /// </summary>
        [Output("groupType")]
        public Output<string> GroupType { get; private set; } = null!;

        /// <summary>
        /// Is Stretch Cluster Enabled.
        /// </summary>
        [Output("isStretchClusterEnabled")]
        public Output<bool?> IsStretchClusterEnabled { get; private set; } = null!;

        /// <summary>
        /// Limiting factor.
        /// </summary>
        [Output("limitingFactor")]
        public Output<string> LimitingFactor { get; private set; } = null!;

        /// <summary>
        /// Memory overcommit.
        /// </summary>
        [Output("memOvercommit")]
        public Output<double?> MemOvercommit { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// AVS node type.
        /// </summary>
        [Output("nodeType")]
        public Output<string?> NodeType { get; private set; } = null!;

        /// <summary>
        /// Number of machines part of the assessment.
        /// </summary>
        [Output("numberOfMachines")]
        public Output<int> NumberOfMachines { get; private set; } = null!;

        /// <summary>
        /// Recommended number of nodes.
        /// </summary>
        [Output("numberOfNodes")]
        public Output<int> NumberOfNodes { get; private set; } = null!;

        /// <summary>
        /// Percentile of the utilization data values to be considered while assessing
        /// machines.
        /// </summary>
        [Output("percentile")]
        public Output<string?> Percentile { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the end time to consider performance data for assessment.
        /// </summary>
        [Output("perfDataEndTime")]
        public Output<string?> PerfDataEndTime { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the start time to consider performance data for assessment.
        /// </summary>
        [Output("perfDataStartTime")]
        public Output<string?> PerfDataStartTime { get; private set; } = null!;

        /// <summary>
        /// Time when the Azure Prices were queried. Date-Time represented in ISO-8601
        /// format.
        /// </summary>
        [Output("pricesTimestamp")]
        public Output<string> PricesTimestamp { get; private set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Predicted RAM utilization.
        /// </summary>
        [Output("ramUtilization")]
        public Output<double> RamUtilization { get; private set; } = null!;

        /// <summary>
        /// Reserved instance.
        /// </summary>
        [Output("reservedInstance")]
        public Output<string?> ReservedInstance { get; private set; } = null!;

        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        [Output("scalingFactor")]
        public Output<double?> ScalingFactor { get; private set; } = null!;

        /// <summary>
        /// Schema version.
        /// </summary>
        [Output("schemaVersion")]
        public Output<string> SchemaVersion { get; private set; } = null!;

        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        [Output("sizingCriterion")]
        public Output<string?> SizingCriterion { get; private set; } = null!;

        /// <summary>
        /// User configurable setting to display the Stage of Assessment.
        /// </summary>
        [Output("stage")]
        public Output<string> Stage { get; private set; } = null!;

        /// <summary>
        /// Whether assessment is in valid state and all machines have been assessed.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Predicted storage utilization.
        /// </summary>
        [Output("storageUtilization")]
        public Output<double> StorageUtilization { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the Assessment cloud suitability.
        /// </summary>
        [Output("suitability")]
        public Output<string> Suitability { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the Assessment suitability explanation.
        /// </summary>
        [Output("suitabilityExplanation")]
        public Output<string> SuitabilityExplanation { get; private set; } = null!;

        /// <summary>
        /// Cloud suitability summary for all the machines in the assessment.
        /// </summary>
        [Output("suitabilitySummary")]
        public Output<ImmutableDictionary<string, int>> SuitabilitySummary { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Time Range for which the historic utilization data should be considered for
        /// assessment.
        /// </summary>
        [Output("timeRange")]
        public Output<string?> TimeRange { get; private set; } = null!;

        /// <summary>
        /// Predicted total CPU cores used.
        /// </summary>
        [Output("totalCpuCores")]
        public Output<double> TotalCpuCores { get; private set; } = null!;

        /// <summary>
        /// Total monthly cost.
        /// </summary>
        [Output("totalMonthlyCost")]
        public Output<double> TotalMonthlyCost { get; private set; } = null!;

        /// <summary>
        /// Predicted total RAM used in GB.
        /// </summary>
        [Output("totalRamInGB")]
        public Output<double> TotalRamInGB { get; private set; } = null!;

        /// <summary>
        /// Predicted total Storage used in GB.
        /// </summary>
        [Output("totalStorageInGB")]
        public Output<double> TotalStorageInGB { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Date and Time when assessment was last updated.
        /// </summary>
        [Output("updatedTimestamp")]
        public Output<string> UpdatedTimestamp { get; private set; } = null!;

        /// <summary>
        /// VCPU over subscription.
        /// </summary>
        [Output("vcpuOversubscription")]
        public Output<double?> VcpuOversubscription { get; private set; } = null!;


        /// <summary>
        /// Create a AvsAssessmentsOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AvsAssessmentsOperation(string name, AvsAssessmentsOperationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:migrate/v20230401preview:AvsAssessmentsOperation", name, args ?? new AvsAssessmentsOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AvsAssessmentsOperation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:migrate/v20230401preview:AvsAssessmentsOperation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:migrate:AvsAssessmentsOperation" },
                    new global::Pulumi.Alias { Type = "azure-native:migrate/v20230315:AvsAssessmentsOperation" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AvsAssessmentsOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AvsAssessmentsOperation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AvsAssessmentsOperation(name, id, options);
        }
    }

    public sealed class AvsAssessmentsOperationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AVS Assessment ARM name
        /// </summary>
        [Input("assessmentName")]
        public Input<string>? AssessmentName { get; set; }

        /// <summary>
        /// Azure Location or Azure region where to which the machines will be migrated.
        /// </summary>
        [Input("azureLocation")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.AzureLocation>? AzureLocation { get; set; }

        /// <summary>
        /// Azure Offer code according to which cost estimation is done.
        /// </summary>
        [Input("azureOfferCode")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.AzureOfferCode>? AzureOfferCode { get; set; }

        /// <summary>
        /// Currency in which prices should be reported.
        /// </summary>
        [Input("currency")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.AzureCurrency>? Currency { get; set; }

        /// <summary>
        /// De-duplication compression.
        /// </summary>
        [Input("dedupeCompression")]
        public Input<double>? DedupeCompression { get; set; }

        /// <summary>
        /// Custom discount percentage.
        /// </summary>
        [Input("discountPercentage")]
        public Input<double>? DiscountPercentage { get; set; }

        /// <summary>
        /// Failures to tolerate and RAID level in a common property.
        /// </summary>
        [Input("failuresToTolerateAndRaidLevel")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.FttAndRaidLevel>? FailuresToTolerateAndRaidLevel { get; set; }

        /// <summary>
        /// Group ARM name
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// Is Stretch Cluster Enabled.
        /// </summary>
        [Input("isStretchClusterEnabled")]
        public Input<bool>? IsStretchClusterEnabled { get; set; }

        /// <summary>
        /// Memory overcommit.
        /// </summary>
        [Input("memOvercommit")]
        public Input<double>? MemOvercommit { get; set; }

        /// <summary>
        /// AVS node type.
        /// </summary>
        [Input("nodeType")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.AzureAvsNodeType>? NodeType { get; set; }

        /// <summary>
        /// Percentile of the utilization data values to be considered while assessing
        /// machines.
        /// </summary>
        [Input("percentile")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.Percentile>? Percentile { get; set; }

        /// <summary>
        /// Gets or sets the end time to consider performance data for assessment.
        /// </summary>
        [Input("perfDataEndTime")]
        public Input<string>? PerfDataEndTime { get; set; }

        /// <summary>
        /// Gets or sets the start time to consider performance data for assessment.
        /// </summary>
        [Input("perfDataStartTime")]
        public Input<string>? PerfDataStartTime { get; set; }

        /// <summary>
        /// Assessment Project Name
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Input("provisioningState")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.ProvisioningState>? ProvisioningState { get; set; }

        /// <summary>
        /// Reserved instance.
        /// </summary>
        [Input("reservedInstance")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.AzureReservedInstance>? ReservedInstance { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        [Input("scalingFactor")]
        public Input<double>? ScalingFactor { get; set; }

        /// <summary>
        /// Assessment sizing criterion.
        /// </summary>
        [Input("sizingCriterion")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.AssessmentSizingCriterion>? SizingCriterion { get; set; }

        /// <summary>
        /// Time Range for which the historic utilization data should be considered for
        /// assessment.
        /// </summary>
        [Input("timeRange")]
        public InputUnion<string, Pulumi.AzureNative.Migrate.V20230401Preview.TimeRange>? TimeRange { get; set; }

        /// <summary>
        /// VCPU over subscription.
        /// </summary>
        [Input("vcpuOversubscription")]
        public Input<double>? VcpuOversubscription { get; set; }

        public AvsAssessmentsOperationArgs()
        {
        }
        public static new AvsAssessmentsOperationArgs Empty => new AvsAssessmentsOperationArgs();
    }
}
