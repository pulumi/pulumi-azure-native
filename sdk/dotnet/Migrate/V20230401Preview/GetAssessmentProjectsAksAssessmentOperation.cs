// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20230401Preview
{
    public static class GetAssessmentProjectsAksAssessmentOperation
    {
        /// <summary>
        /// Get a AKSAssessment
        /// </summary>
        public static Task<GetAssessmentProjectsAksAssessmentOperationResult> InvokeAsync(GetAssessmentProjectsAksAssessmentOperationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAssessmentProjectsAksAssessmentOperationResult>("azure-native:migrate/v20230401preview:getAssessmentProjectsAksAssessmentOperation", args ?? new GetAssessmentProjectsAksAssessmentOperationArgs(), options.WithDefaults());

        /// <summary>
        /// Get a AKSAssessment
        /// </summary>
        public static Output<GetAssessmentProjectsAksAssessmentOperationResult> Invoke(GetAssessmentProjectsAksAssessmentOperationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssessmentProjectsAksAssessmentOperationResult>("azure-native:migrate/v20230401preview:getAssessmentProjectsAksAssessmentOperation", args ?? new GetAssessmentProjectsAksAssessmentOperationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a AKSAssessment
        /// </summary>
        public static Output<GetAssessmentProjectsAksAssessmentOperationResult> Invoke(GetAssessmentProjectsAksAssessmentOperationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssessmentProjectsAksAssessmentOperationResult>("azure-native:migrate/v20230401preview:getAssessmentProjectsAksAssessmentOperation", args ?? new GetAssessmentProjectsAksAssessmentOperationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssessmentProjectsAksAssessmentOperationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AKS Assessment Name.
        /// </summary>
        [Input("assessmentName", required: true)]
        public string AssessmentName { get; set; } = null!;

        /// <summary>
        /// Assessment Project Name
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAssessmentProjectsAksAssessmentOperationArgs()
        {
        }
        public static new GetAssessmentProjectsAksAssessmentOperationArgs Empty => new GetAssessmentProjectsAksAssessmentOperationArgs();
    }

    public sealed class GetAssessmentProjectsAksAssessmentOperationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AKS Assessment Name.
        /// </summary>
        [Input("assessmentName", required: true)]
        public Input<string> AssessmentName { get; set; } = null!;

        /// <summary>
        /// Assessment Project Name
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAssessmentProjectsAksAssessmentOperationInvokeArgs()
        {
        }
        public static new GetAssessmentProjectsAksAssessmentOperationInvokeArgs Empty => new GetAssessmentProjectsAksAssessmentOperationInvokeArgs();
    }


    [OutputType]
    public sealed class GetAssessmentProjectsAksAssessmentOperationResult
    {
        /// <summary>
        /// Gets AKS Assessment Details.
        /// </summary>
        public readonly Outputs.AKSAssessmentDetailsResponse Details;
        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Gets or sets scope parameters to identify inventory items for assessment.
        /// </summary>
        public readonly Outputs.AssessmentScopeParametersResponse? Scope;
        /// <summary>
        /// Gets or sets AKS Assessment Settings.
        /// </summary>
        public readonly Outputs.AKSAssessmentSettingsResponse Settings;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAssessmentProjectsAksAssessmentOperationResult(
            Outputs.AKSAssessmentDetailsResponse details,

            string eTag,

            string id,

            string name,

            string provisioningState,

            Outputs.AssessmentScopeParametersResponse? scope,

            Outputs.AKSAssessmentSettingsResponse settings,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Details = details;
            ETag = eTag;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Scope = scope;
            Settings = settings;
            SystemData = systemData;
            Type = type;
        }
    }
}
