// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20230401Preview.Inputs
{

    /// <summary>
    /// Compute settings.
    /// </summary>
    public sealed class ComputeSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Hyperthread core to memory ratio.
        /// </summary>
        [Input("hyperthreadCoreToMemoryRatio", required: true)]
        public Input<double> HyperthreadCoreToMemoryRatio { get; set; } = null!;

        /// <summary>
        /// Compute Price.
        /// </summary>
        [Input("price", required: true)]
        public Input<double> Price { get; set; } = null!;

        /// <summary>
        /// Linux Rhel Server licensing settings.
        /// </summary>
        [Input("rhelLinuxServerLicensing", required: true)]
        public Input<Inputs.LinuxServerLicensingSettingsArgs> RhelLinuxServerLicensing { get; set; } = null!;

        [Input("sqlServerLicensing", required: true)]
        private InputList<Inputs.SqlServerLicensingSettingsArgs>? _sqlServerLicensing;

        /// <summary>
        /// SQL Server licensing settings.
        /// </summary>
        public InputList<Inputs.SqlServerLicensingSettingsArgs> SqlServerLicensing
        {
            get => _sqlServerLicensing ?? (_sqlServerLicensing = new InputList<Inputs.SqlServerLicensingSettingsArgs>());
            set => _sqlServerLicensing = value;
        }

        /// <summary>
        /// Linux Suse Server licensing settings.
        /// </summary>
        [Input("suseLinuxServerLicensing", required: true)]
        public Input<Inputs.LinuxServerLicensingSettingsArgs> SuseLinuxServerLicensing { get; set; } = null!;

        /// <summary>
        /// Virtualization software settings.
        /// </summary>
        [Input("virtualizationSoftwareSettings", required: true)]
        public Input<Inputs.VirtualizationSoftwareSettingsArgs> VirtualizationSoftwareSettings { get; set; } = null!;

        /// <summary>
        /// Windows Server licensing settings.
        /// </summary>
        [Input("windowsServerLicensing", required: true)]
        public Input<Inputs.WindowsServerLicensingSettingsArgs> WindowsServerLicensing { get; set; } = null!;

        public ComputeSettingsArgs()
        {
        }
        public static new ComputeSettingsArgs Empty => new ComputeSettingsArgs();
    }
}
