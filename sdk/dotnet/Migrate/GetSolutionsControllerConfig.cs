// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate
{
    public static class GetSolutionsControllerConfig
    {
        /// <summary>
        /// Class representing the config for the solution in the migrate project.
        /// Azure REST API version: 2023-01-01.
        /// </summary>
        public static Task<GetSolutionsControllerConfigResult> InvokeAsync(GetSolutionsControllerConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSolutionsControllerConfigResult>("azure-native:migrate:getSolutionsControllerConfig", args ?? new GetSolutionsControllerConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Class representing the config for the solution in the migrate project.
        /// Azure REST API version: 2023-01-01.
        /// </summary>
        public static Output<GetSolutionsControllerConfigResult> Invoke(GetSolutionsControllerConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSolutionsControllerConfigResult>("azure-native:migrate:getSolutionsControllerConfig", args ?? new GetSolutionsControllerConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSolutionsControllerConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("migrateProjectName", required: true)]
        public string MigrateProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Unique name of a migration solution within a migrate project.
        /// </summary>
        [Input("solutionName", required: true)]
        public string SolutionName { get; set; } = null!;

        public GetSolutionsControllerConfigArgs()
        {
        }
        public static new GetSolutionsControllerConfigArgs Empty => new GetSolutionsControllerConfigArgs();
    }

    public sealed class GetSolutionsControllerConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("migrateProjectName", required: true)]
        public Input<string> MigrateProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Unique name of a migration solution within a migrate project.
        /// </summary>
        [Input("solutionName", required: true)]
        public Input<string> SolutionName { get; set; } = null!;

        public GetSolutionsControllerConfigInvokeArgs()
        {
        }
        public static new GetSolutionsControllerConfigInvokeArgs Empty => new GetSolutionsControllerConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetSolutionsControllerConfigResult
    {
        /// <summary>
        /// Gets or sets the publisher sas uri for the solution.
        /// </summary>
        public readonly string? PublisherSasUri;

        [OutputConstructor]
        private GetSolutionsControllerConfigResult(string? publisherSasUri)
        {
            PublisherSasUri = publisherSasUri;
        }
    }
}
