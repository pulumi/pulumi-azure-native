// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Migrate.V20180202
{
    public static class GetProject
    {
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("azurerm:migrate/v20180202:getProject", args ?? new GetProjectArgs(), options.WithVersion());
    }


    public sealed class GetProjectArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Resource Group that project is part of.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetProjectArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// For optimistic concurrency control.
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Azure location in which project is created.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Name of the project.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the project.
        /// </summary>
        public readonly Outputs.ProjectPropertiesResponseResult Properties;
        /// <summary>
        /// Tags provided by Azure Tagging service.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Type of the object = [Microsoft.Migrate/projects].
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetProjectResult(
            string? eTag,

            string? location,

            string name,

            Outputs.ProjectPropertiesResponseResult properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ETag = eTag;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
