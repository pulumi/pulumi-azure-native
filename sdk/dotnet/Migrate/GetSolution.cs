// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Migrate
{
    public static class GetSolution
    {
        /// <summary>
        /// Solution REST Resource.
        /// API Version: 2018-09-01-preview.
        /// </summary>
        public static Task<GetSolutionResult> InvokeAsync(GetSolutionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSolutionResult>("azure-nextgen:migrate:getSolution", args ?? new GetSolutionArgs(), options.WithVersion());
    }


    public sealed class GetSolutionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("migrateProjectName", required: true)]
        public string MigrateProjectName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Resource Group that migrate project is part of.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Unique name of a migration solution within a migrate project.
        /// </summary>
        [Input("solutionName", required: true)]
        public string SolutionName { get; set; } = null!;

        public GetSolutionArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSolutionResult
    {
        /// <summary>
        /// Gets or sets the ETAG for optimistic concurrency control.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Gets the relative URL to get to this REST resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets the name of this REST resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the properties of the solution.
        /// </summary>
        public readonly Outputs.SolutionPropertiesResponse Properties;
        /// <summary>
        /// Gets the type of this REST resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSolutionResult(
            string? etag,

            string id,

            string name,

            Outputs.SolutionPropertiesResponse properties,

            string type)
        {
            Etag = etag;
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
