// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTSecurity
{
    public static class GetLocationSite
    {
        /// <summary>
        /// IoT site model
        /// API Version: 2021-09-01-preview.
        /// </summary>
        public static Task<GetLocationSiteResult> InvokeAsync(GetLocationSiteArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLocationSiteResult>("azure-native:iotsecurity:getLocationSite", args ?? new GetLocationSiteArgs(), options.WithVersion());
    }


    public sealed class GetLocationSiteArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Defender for IoT location
        /// </summary>
        [Input("iotDefenderLocation", required: true)]
        public string IotDefenderLocation { get; set; } = null!;

        /// <summary>
        /// Site Name
        /// </summary>
        [Input("siteName", required: true)]
        public string SiteName { get; set; } = null!;

        public GetLocationSiteArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLocationSiteResult
    {
        /// <summary>
        /// Display name of the IoT site
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Tags of the IoT site
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLocationSiteResult(
            string displayName,

            string id,

            string name,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            DisplayName = displayName;
            Id = id;
            Name = name;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
