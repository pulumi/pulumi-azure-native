// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTSecurity
{
    public static class GetOnPremiseSensor
    {
        /// <summary>
        /// Get on-premise IoT sensor
        /// API Version: 2021-02-01-preview.
        /// </summary>
        public static Task<GetOnPremiseSensorResult> InvokeAsync(GetOnPremiseSensorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOnPremiseSensorResult>("azure-native:iotsecurity:getOnPremiseSensor", args ?? new GetOnPremiseSensorArgs(), options.WithDefaults());

        /// <summary>
        /// Get on-premise IoT sensor
        /// API Version: 2021-02-01-preview.
        /// </summary>
        public static Output<GetOnPremiseSensorResult> Invoke(GetOnPremiseSensorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOnPremiseSensorResult>("azure-native:iotsecurity:getOnPremiseSensor", args ?? new GetOnPremiseSensorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOnPremiseSensorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the on-premise IoT sensor
        /// </summary>
        [Input("onPremiseSensorName", required: true)]
        public string OnPremiseSensorName { get; set; } = null!;

        public GetOnPremiseSensorArgs()
        {
        }
        public static new GetOnPremiseSensorArgs Empty => new GetOnPremiseSensorArgs();
    }

    public sealed class GetOnPremiseSensorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the on-premise IoT sensor
        /// </summary>
        [Input("onPremiseSensorName", required: true)]
        public Input<string> OnPremiseSensorName { get; set; } = null!;

        public GetOnPremiseSensorInvokeArgs()
        {
        }
        public static new GetOnPremiseSensorInvokeArgs Empty => new GetOnPremiseSensorInvokeArgs();
    }


    [OutputType]
    public sealed class GetOnPremiseSensorResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetOnPremiseSensorResult(
            string id,

            string name,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
