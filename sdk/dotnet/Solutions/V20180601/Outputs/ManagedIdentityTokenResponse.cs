// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Solutions.V20180601.Outputs
{

    /// <summary>
    /// The managed identity token for the managed app resource.
    /// </summary>
    [OutputType]
    public sealed class ManagedIdentityTokenResponse
    {
        /// <summary>
        /// The requested access token.
        /// </summary>
        public readonly string? AccessToken;
        /// <summary>
        /// The aud (audience) the access token was request for. This is the same as what was provided in the listTokens request.
        /// </summary>
        public readonly string? AuthorizationAudience;
        /// <summary>
        /// The number of seconds the access token will be valid.
        /// </summary>
        public readonly string? ExpiresIn;
        /// <summary>
        /// The timespan when the access token expires. This is represented as the number of seconds from epoch.
        /// </summary>
        public readonly string? ExpiresOn;
        /// <summary>
        /// The timespan when the access token takes effect. This is represented as the number of seconds from epoch.
        /// </summary>
        public readonly string? NotBefore;
        /// <summary>
        /// The Azure resource ID for the issued token. This is either the managed application ID or the user-assigned identity ID.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// The type of the token.
        /// </summary>
        public readonly string? TokenType;

        [OutputConstructor]
        private ManagedIdentityTokenResponse(
            string? accessToken,

            string? authorizationAudience,

            string? expiresIn,

            string? expiresOn,

            string? notBefore,

            string? resourceId,

            string? tokenType)
        {
            AccessToken = accessToken;
            AuthorizationAudience = authorizationAudience;
            ExpiresIn = expiresIn;
            ExpiresOn = expiresOn;
            NotBefore = notBefore;
            ResourceId = resourceId;
            TokenType = tokenType;
        }
    }
}
