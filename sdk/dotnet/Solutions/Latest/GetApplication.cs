// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Solutions.Latest
{
    public static class GetApplication
    {
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("azure-nextgen:solutions/latest:getApplication", args ?? new GetApplicationArgs(), options.WithVersion());
    }


    public sealed class GetApplicationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the managed application.
        /// </summary>
        [Input("applicationName", required: true)]
        public string ApplicationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        /// <summary>
        /// The fully qualified path of managed application definition Id.
        /// </summary>
        public readonly string? ApplicationDefinitionId;
        /// <summary>
        /// The collection of managed application artifacts.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationArtifactResponse> Artifacts;
        /// <summary>
        /// The  read-only authorizations property that is retrieved from the application package.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationAuthorizationResponse> Authorizations;
        /// <summary>
        /// The managed application billing details.
        /// </summary>
        public readonly Outputs.ApplicationBillingDetailsDefinitionResponse BillingDetails;
        /// <summary>
        /// The client entity that created the JIT request.
        /// </summary>
        public readonly Outputs.ApplicationClientDetailsResponse CreatedBy;
        /// <summary>
        /// The read-only customer support property that is retrieved from the application package.
        /// </summary>
        public readonly Outputs.ApplicationPackageContactResponse CustomerSupport;
        /// <summary>
        /// The identity of the resource.
        /// </summary>
        public readonly Outputs.IdentityResponse? Identity;
        /// <summary>
        /// The managed application Jit access policy.
        /// </summary>
        public readonly Outputs.ApplicationJitAccessPolicyResponse? JitAccessPolicy;
        /// <summary>
        /// The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// ID of the resource that manages this resource.
        /// </summary>
        public readonly string? ManagedBy;
        /// <summary>
        /// The managed resource group Id.
        /// </summary>
        public readonly string? ManagedResourceGroupId;
        /// <summary>
        /// The managed application management mode.
        /// </summary>
        public readonly string ManagementMode;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Name and value pairs that define the managed application outputs.
        /// </summary>
        public readonly object Outputs;
        /// <summary>
        /// Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
        /// </summary>
        public readonly object? Parameters;
        /// <summary>
        /// The plan information.
        /// </summary>
        public readonly Outputs.PlanResponse? Plan;
        /// <summary>
        /// The managed application provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The publisher tenant Id.
        /// </summary>
        public readonly string PublisherTenantId;
        /// <summary>
        /// The SKU of the resource.
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// The read-only support URLs property that is retrieved from the application package.
        /// </summary>
        public readonly Outputs.ApplicationPackageSupportUrlsResponse SupportUrls;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The client entity that last updated the JIT request.
        /// </summary>
        public readonly Outputs.ApplicationClientDetailsResponse UpdatedBy;

        [OutputConstructor]
        private GetApplicationResult(
            string? applicationDefinitionId,

            ImmutableArray<Outputs.ApplicationArtifactResponse> artifacts,

            ImmutableArray<Outputs.ApplicationAuthorizationResponse> authorizations,

            Outputs.ApplicationBillingDetailsDefinitionResponse billingDetails,

            Outputs.ApplicationClientDetailsResponse createdBy,

            Outputs.ApplicationPackageContactResponse customerSupport,

            Outputs.IdentityResponse? identity,

            Outputs.ApplicationJitAccessPolicyResponse? jitAccessPolicy,

            string kind,

            string? location,

            string? managedBy,

            string? managedResourceGroupId,

            string managementMode,

            string name,

            object outputs,

            object? parameters,

            Outputs.PlanResponse? plan,

            string provisioningState,

            string publisherTenantId,

            Outputs.SkuResponse? sku,

            Outputs.ApplicationPackageSupportUrlsResponse supportUrls,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.ApplicationClientDetailsResponse updatedBy)
        {
            ApplicationDefinitionId = applicationDefinitionId;
            Artifacts = artifacts;
            Authorizations = authorizations;
            BillingDetails = billingDetails;
            CreatedBy = createdBy;
            CustomerSupport = customerSupport;
            Identity = identity;
            JitAccessPolicy = jitAccessPolicy;
            Kind = kind;
            Location = location;
            ManagedBy = managedBy;
            ManagedResourceGroupId = managedResourceGroupId;
            ManagementMode = managementMode;
            Name = name;
            Outputs = outputs;
            Parameters = parameters;
            Plan = plan;
            ProvisioningState = provisioningState;
            PublisherTenantId = publisherTenantId;
            Sku = sku;
            SupportUrls = supportUrls;
            Tags = tags;
            Type = type;
            UpdatedBy = updatedBy;
        }
    }
}
