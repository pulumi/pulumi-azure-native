// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Solutions.V20180301
{
    [Obsolete(@"Version 2018-03-01 will be removed in v2 of the provider.")]
    public static class GetApplicationDefinition
    {
        /// <summary>
        /// Gets the managed application definition.
        /// </summary>
        public static Task<GetApplicationDefinitionResult> InvokeAsync(GetApplicationDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationDefinitionResult>("azure-native:solutions/v20180301:getApplicationDefinition", args ?? new GetApplicationDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the managed application definition.
        /// </summary>
        public static Output<GetApplicationDefinitionResult> Invoke(GetApplicationDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationDefinitionResult>("azure-native:solutions/v20180301:getApplicationDefinition", args ?? new GetApplicationDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the managed application definition.
        /// </summary>
        [Input("applicationDefinitionName", required: true)]
        public string ApplicationDefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetApplicationDefinitionArgs()
        {
        }
        public static new GetApplicationDefinitionArgs Empty => new GetApplicationDefinitionArgs();
    }

    public sealed class GetApplicationDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the managed application definition.
        /// </summary>
        [Input("applicationDefinitionName", required: true)]
        public Input<string> ApplicationDefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetApplicationDefinitionInvokeArgs()
        {
        }
        public static new GetApplicationDefinitionInvokeArgs Empty => new GetApplicationDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationDefinitionResult
    {
        /// <summary>
        /// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationDefinitionArtifactResponse> Artifacts;
        /// <summary>
        /// The managed application provider authorizations.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationAuthorizationResponse> Authorizations;
        /// <summary>
        /// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
        /// </summary>
        public readonly object? CreateUiDefinition;
        /// <summary>
        /// The managed application definition description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The managed application definition display name.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Resource ID
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A value indicating whether the package is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The managed application lock level.
        /// </summary>
        public readonly string LockLevel;
        /// <summary>
        /// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
        /// </summary>
        public readonly object? MainTemplate;
        /// <summary>
        /// ID of the resource that manages this resource.
        /// </summary>
        public readonly string? ManagedBy;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The managed application definition package file Uri. Use this element
        /// </summary>
        public readonly string? PackageFileUri;
        /// <summary>
        /// The managed application provider policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationPolicyResponse> Policies;
        /// <summary>
        /// The SKU of the resource.
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApplicationDefinitionResult(
            ImmutableArray<Outputs.ApplicationDefinitionArtifactResponse> artifacts,

            ImmutableArray<Outputs.ApplicationAuthorizationResponse> authorizations,

            object? createUiDefinition,

            string? description,

            string? displayName,

            string id,

            bool? isEnabled,

            string? location,

            string lockLevel,

            object? mainTemplate,

            string? managedBy,

            string name,

            string? packageFileUri,

            ImmutableArray<Outputs.ApplicationPolicyResponse> policies,

            Outputs.SkuResponse? sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Artifacts = artifacts;
            Authorizations = authorizations;
            CreateUiDefinition = createUiDefinition;
            Description = description;
            DisplayName = displayName;
            Id = id;
            IsEnabled = isEnabled;
            Location = location;
            LockLevel = lockLevel;
            MainTemplate = mainTemplate;
            ManagedBy = managedBy;
            Name = name;
            PackageFileUri = packageFileUri;
            Policies = policies;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
