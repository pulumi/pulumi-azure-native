// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Solutions.Inputs
{

    /// <summary>
    /// The managed application definition properties.
    /// </summary>
    public sealed class ApplicationDefinitionPropertiesResponseArgs : Pulumi.ResourceArgs
    {
        [Input("artifacts")]
        private InputList<Inputs.ApplicationDefinitionArtifactResponseArgs>? _artifacts;

        /// <summary>
        /// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
        /// </summary>
        public InputList<Inputs.ApplicationDefinitionArtifactResponseArgs> Artifacts
        {
            get => _artifacts ?? (_artifacts = new InputList<Inputs.ApplicationDefinitionArtifactResponseArgs>());
            set => _artifacts = value;
        }

        [Input("authorizations")]
        private InputList<Inputs.ApplicationAuthorizationResponseArgs>? _authorizations;

        /// <summary>
        /// The managed application provider authorizations.
        /// </summary>
        public InputList<Inputs.ApplicationAuthorizationResponseArgs> Authorizations
        {
            get => _authorizations ?? (_authorizations = new InputList<Inputs.ApplicationAuthorizationResponseArgs>());
            set => _authorizations = value;
        }

        [Input("createUiDefinition")]
        private InputMap<string>? _createUiDefinition;

        /// <summary>
        /// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
        /// </summary>
        public InputMap<string> CreateUiDefinition
        {
            get => _createUiDefinition ?? (_createUiDefinition = new InputMap<string>());
            set => _createUiDefinition = value;
        }

        /// <summary>
        /// The managed application deployment policy.
        /// </summary>
        [Input("deploymentPolicy")]
        public Input<Inputs.ApplicationDeploymentPolicyResponseArgs>? DeploymentPolicy { get; set; }

        /// <summary>
        /// The managed application definition description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The managed application definition display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A value indicating whether the package is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// The managed application lock level.
        /// </summary>
        [Input("lockLevel", required: true)]
        public Input<string> LockLevel { get; set; } = null!;

        /// <summary>
        /// The managed application locking policy.
        /// </summary>
        [Input("lockingPolicy")]
        public Input<Inputs.ApplicationPackageLockingPolicyDefinitionResponseArgs>? LockingPolicy { get; set; }

        [Input("mainTemplate")]
        private InputMap<string>? _mainTemplate;

        /// <summary>
        /// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
        /// </summary>
        public InputMap<string> MainTemplate
        {
            get => _mainTemplate ?? (_mainTemplate = new InputMap<string>());
            set => _mainTemplate = value;
        }

        /// <summary>
        /// The managed application management policy that determines publisher's access to the managed resource group.
        /// </summary>
        [Input("managementPolicy")]
        public Input<Inputs.ApplicationManagementPolicyResponseArgs>? ManagementPolicy { get; set; }

        /// <summary>
        /// The managed application notification policy.
        /// </summary>
        [Input("notificationPolicy")]
        public Input<Inputs.ApplicationNotificationPolicyResponseArgs>? NotificationPolicy { get; set; }

        /// <summary>
        /// The managed application definition package file Uri. Use this element
        /// </summary>
        [Input("packageFileUri")]
        public Input<string>? PackageFileUri { get; set; }

        [Input("policies")]
        private InputList<Inputs.ApplicationPolicyResponseArgs>? _policies;

        /// <summary>
        /// The managed application provider policies.
        /// </summary>
        public InputList<Inputs.ApplicationPolicyResponseArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Inputs.ApplicationPolicyResponseArgs>());
            set => _policies = value;
        }

        public ApplicationDefinitionPropertiesResponseArgs()
        {
        }
    }
}
