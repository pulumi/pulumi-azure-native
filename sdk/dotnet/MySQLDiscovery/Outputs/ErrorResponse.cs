// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MySQLDiscovery.Outputs
{

    /// <summary>
    /// Defines the error.
    /// </summary>
    [OutputType]
    public sealed class ErrorResponse
    {
        /// <summary>
        /// The error code.
        /// </summary>
        public readonly string? Code;
        /// <summary>
        /// The error ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The detailed error message.
        /// </summary>
        public readonly string? Message;
        /// <summary>
        /// The error possible cause.
        /// </summary>
        public readonly string? PossibleCause;
        /// <summary>
        /// Gets description of the checkpoint.
        /// </summary>
        public readonly string? RecommendedAction;
        /// <summary>
        /// The account ID used to login.
        /// </summary>
        public readonly string? RunAsAccountId;
        /// <summary>
        /// Gets description of the severity.
        /// </summary>
        public readonly string? Severity;
        /// <summary>
        /// The summarized error message.
        /// </summary>
        public readonly string? SummaryMessage;
        /// <summary>
        /// Time when this error was last updated.
        /// </summary>
        public readonly string? UpdatedTimeStamp;

        [OutputConstructor]
        private ErrorResponse(
            string? code,

            string? id,

            string? message,

            string? possibleCause,

            string? recommendedAction,

            string? runAsAccountId,

            string? severity,

            string? summaryMessage,

            string? updatedTimeStamp)
        {
            Code = code;
            Id = id;
            Message = message;
            PossibleCause = possibleCause;
            RecommendedAction = recommendedAction;
            RunAsAccountId = runAsAccountId;
            Severity = severity;
            SummaryMessage = summaryMessage;
            UpdatedTimeStamp = updatedTimeStamp;
        }
    }
}
