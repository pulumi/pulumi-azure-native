// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MySQLDiscovery
{
    /// <summary>
    /// The MySQLServer resource definition.
    /// 
    /// Uses Azure REST API version 2024-09-30-preview. In version 2.x of the Azure Native provider, it used API version 2024-09-30-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:mysqldiscovery:MySQLServer")]
    public partial class MySQLServer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// mysql server edition.
        /// </summary>
        [Output("edition")]
        public Output<string?> Edition { get; private set; } = null!;

        /// <summary>
        /// The list of errors.
        /// </summary>
        [Output("errors")]
        public Output<ImmutableArray<Outputs.ErrorResponse>> Errors { get; private set; } = null!;

        /// <summary>
        /// The Server IP/host name.
        /// </summary>
        [Output("hostIp")]
        public Output<ImmutableArray<string>> HostIp { get; private set; } = null!;

        /// <summary>
        /// The Server IP/host name.
        /// </summary>
        [Output("hostName")]
        public Output<string> HostName { get; private set; } = null!;

        /// <summary>
        /// Resource labels.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// discovery Machine Id
        /// </summary>
        [Output("machineId")]
        public Output<string?> MachineId { get; private set; } = null!;

        /// <summary>
        /// The mysql server version.
        /// </summary>
        [Output("mysqlVersion")]
        public Output<string?> MysqlVersion { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of database.
        /// </summary>
        [Output("numberOfDatabase")]
        public Output<double?> NumberOfDatabase { get; private set; } = null!;

        /// <summary>
        /// MySQL Server port number
        /// </summary>
        [Output("portNumber")]
        public Output<string> PortNumber { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Time when mysql version support end.
        /// </summary>
        [Output("supportEndIn")]
        public Output<string?> SupportEndIn { get; private set; } = null!;

        /// <summary>
        /// mysql version support status.
        /// </summary>
        [Output("supportStatus")]
        public Output<string?> SupportStatus { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a MySQLServer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MySQLServer(string name, MySQLServerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:mysqldiscovery:MySQLServer", name, args ?? new MySQLServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MySQLServer(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:mysqldiscovery:MySQLServer", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:mysqldiscovery/v20240930preview:MySQLServer" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MySQLServer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MySQLServer Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new MySQLServer(name, id, options);
        }
    }

    public sealed class MySQLServerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// mysql server edition.
        /// </summary>
        [Input("edition")]
        public InputUnion<string, Pulumi.AzureNative.MySQLDiscovery.Edition>? Edition { get; set; }

        [Input("errors")]
        private InputList<Inputs.ErrorArgs>? _errors;

        /// <summary>
        /// The list of errors.
        /// </summary>
        public InputList<Inputs.ErrorArgs> Errors
        {
            get => _errors ?? (_errors = new InputList<Inputs.ErrorArgs>());
            set => _errors = value;
        }

        [Input("hostIp")]
        private InputList<string>? _hostIp;

        /// <summary>
        /// The Server IP/host name.
        /// </summary>
        public InputList<string> HostIp
        {
            get => _hostIp ?? (_hostIp = new InputList<string>());
            set => _hostIp = value;
        }

        /// <summary>
        /// The Server IP/host name.
        /// </summary>
        [Input("hostName", required: true)]
        public Input<string> HostName { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Resource labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// discovery Machine Id
        /// </summary>
        [Input("machineId")]
        public Input<string>? MachineId { get; set; }

        /// <summary>
        /// The mysql server version.
        /// </summary>
        [Input("mysqlVersion")]
        public Input<string>? MysqlVersion { get; set; }

        /// <summary>
        /// The number of database.
        /// </summary>
        [Input("numberOfDatabase")]
        public Input<double>? NumberOfDatabase { get; set; }

        /// <summary>
        /// MySQL Server port number
        /// </summary>
        [Input("portNumber", required: true)]
        public Input<string> PortNumber { get; set; } = null!;

        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        [Input("provisioningState")]
        public InputUnion<string, Pulumi.AzureNative.MySQLDiscovery.ProvisioningState>? ProvisioningState { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of Server
        /// </summary>
        [Input("serverName")]
        public Input<string>? ServerName { get; set; }

        /// <summary>
        /// The name of Site
        /// </summary>
        [Input("siteName", required: true)]
        public Input<string> SiteName { get; set; } = null!;

        /// <summary>
        /// Time when mysql version support end.
        /// </summary>
        [Input("supportEndIn")]
        public Input<string>? SupportEndIn { get; set; }

        /// <summary>
        /// mysql version support status.
        /// </summary>
        [Input("supportStatus")]
        public InputUnion<string, Pulumi.AzureNative.MySQLDiscovery.SupportStatus>? SupportStatus { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public MySQLServerArgs()
        {
        }
        public static new MySQLServerArgs Empty => new MySQLServerArgs();
    }
}
