// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MySQLDiscovery
{
    public static class GetMySQLServer
    {
        /// <summary>
        /// Gets the MySQLServers resource.
        /// 
        /// Uses Azure REST API version 2024-09-30-preview.
        /// </summary>
        public static Task<GetMySQLServerResult> InvokeAsync(GetMySQLServerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMySQLServerResult>("azure-native:mysqldiscovery:getMySQLServer", args ?? new GetMySQLServerArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the MySQLServers resource.
        /// 
        /// Uses Azure REST API version 2024-09-30-preview.
        /// </summary>
        public static Output<GetMySQLServerResult> Invoke(GetMySQLServerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMySQLServerResult>("azure-native:mysqldiscovery:getMySQLServer", args ?? new GetMySQLServerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the MySQLServers resource.
        /// 
        /// Uses Azure REST API version 2024-09-30-preview.
        /// </summary>
        public static Output<GetMySQLServerResult> Invoke(GetMySQLServerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMySQLServerResult>("azure-native:mysqldiscovery:getMySQLServer", args ?? new GetMySQLServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMySQLServerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of Server
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        /// <summary>
        /// The name of Site
        /// </summary>
        [Input("siteName", required: true)]
        public string SiteName { get; set; } = null!;

        public GetMySQLServerArgs()
        {
        }
        public static new GetMySQLServerArgs Empty => new GetMySQLServerArgs();
    }

    public sealed class GetMySQLServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of Server
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        /// <summary>
        /// The name of Site
        /// </summary>
        [Input("siteName", required: true)]
        public Input<string> SiteName { get; set; } = null!;

        public GetMySQLServerInvokeArgs()
        {
        }
        public static new GetMySQLServerInvokeArgs Empty => new GetMySQLServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetMySQLServerResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// mysql server edition.
        /// </summary>
        public readonly string? Edition;
        /// <summary>
        /// The list of errors.
        /// </summary>
        public readonly ImmutableArray<Outputs.ErrorResponse> Errors;
        /// <summary>
        /// The Server IP/host name.
        /// </summary>
        public readonly ImmutableArray<string> HostIp;
        /// <summary>
        /// The Server IP/host name.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource labels.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Labels;
        /// <summary>
        /// discovery Machine Id
        /// </summary>
        public readonly string? MachineId;
        /// <summary>
        /// The mysql server version.
        /// </summary>
        public readonly string? MysqlVersion;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The number of database.
        /// </summary>
        public readonly double? NumberOfDatabase;
        /// <summary>
        /// MySQL Server port number
        /// </summary>
        public readonly string PortNumber;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Time when mysql version support end.
        /// </summary>
        public readonly string? SupportEndIn;
        /// <summary>
        /// mysql version support status.
        /// </summary>
        public readonly string? SupportStatus;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMySQLServerResult(
            string azureApiVersion,

            string? edition,

            ImmutableArray<Outputs.ErrorResponse> errors,

            ImmutableArray<string> hostIp,

            string hostName,

            string id,

            ImmutableDictionary<string, string>? labels,

            string? machineId,

            string? mysqlVersion,

            string name,

            double? numberOfDatabase,

            string portNumber,

            string? provisioningState,

            string? supportEndIn,

            string? supportStatus,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Edition = edition;
            Errors = errors;
            HostIp = hostIp;
            HostName = hostName;
            Id = id;
            Labels = labels;
            MachineId = machineId;
            MysqlVersion = mysqlVersion;
            Name = name;
            NumberOfDatabase = numberOfDatabase;
            PortNumber = portNumber;
            ProvisioningState = provisioningState;
            SupportEndIn = supportEndIn;
            SupportStatus = supportStatus;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
