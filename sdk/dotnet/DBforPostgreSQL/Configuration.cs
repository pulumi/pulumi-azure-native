// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforPostgreSQL
{
    /// <summary>
    /// Server parameter.
    /// 
    /// Uses Azure REST API version 2024-08-01. In version 2.x of the Azure Native provider, it used API version 2022-12-01.
    /// 
    /// Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview, 2025-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:dbforpostgresql:Configuration")]
    public partial class Configuration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Allowed values of the server parameter.
        /// </summary>
        [Output("allowedValues")]
        public Output<string> AllowedValues { get; private set; } = null!;

        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// Data type of the server parameter.
        /// </summary>
        [Output("dataType")]
        public Output<string> DataType { get; private set; } = null!;

        /// <summary>
        /// Value assigned by default to the server parameter.
        /// </summary>
        [Output("defaultValue")]
        public Output<string> DefaultValue { get; private set; } = null!;

        /// <summary>
        /// Description of the server parameter.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Link pointing to the documentation of the server parameter.
        /// </summary>
        [Output("documentationLink")]
        public Output<string> DocumentationLink { get; private set; } = null!;

        /// <summary>
        /// Indicates if the value assigned to the server parameter is pending a server restart for the value to take effect.
        /// </summary>
        [Output("isConfigPendingRestart")]
        public Output<bool> IsConfigPendingRestart { get; private set; } = null!;

        /// <summary>
        /// Indicates if it's a dynamic (true) or static (false) server parameter. Static server parameters require a server restart after changing the value assigned to it, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to it, for the change to take effect.
        /// </summary>
        [Output("isDynamicConfig")]
        public Output<bool> IsDynamicConfig { get; private set; } = null!;

        /// <summary>
        /// Indicates if it's a read-only (true) or modifiable (false) server parameter.
        /// </summary>
        [Output("isReadOnly")]
        public Output<bool> IsReadOnly { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Source of the value assigned to the server parameter. Required to update the value assigned to a specific modifiable server parameter.
        /// </summary>
        [Output("source")]
        public Output<string?> Source { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Units in which the server parameter value is expressed.
        /// </summary>
        [Output("unit")]
        public Output<string> Unit { get; private set; } = null!;

        /// <summary>
        /// Value of the server parameter (also known as configuration). Required to update the value assigned to a specific modifiable server parameter.
        /// </summary>
        [Output("value")]
        public Output<string?> Value { get; private set; } = null!;


        /// <summary>
        /// Create a Configuration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Configuration(string name, ConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:dbforpostgresql:Configuration", name, args ?? new ConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Configuration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:dbforpostgresql:Configuration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20171201:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20210601:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20210601preview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20210615privatepreview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20220120preview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20220308preview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20221201:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20230301preview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20230601preview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20231201preview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20240301preview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20240801:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20241101preview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20250101preview:Configuration" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20250601preview:Configuration" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Configuration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Configuration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Configuration(name, id, options);
        }
    }

    public sealed class ConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the server parameter.
        /// </summary>
        [Input("configurationName")]
        public Input<string>? ConfigurationName { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        /// <summary>
        /// Source of the value assigned to the server parameter. Required to update the value assigned to a specific modifiable server parameter.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Value of the server parameter (also known as configuration). Required to update the value assigned to a specific modifiable server parameter.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public ConfigurationArgs()
        {
        }
        public static new ConfigurationArgs Empty => new ConfigurationArgs();
    }
}
