// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DBforPostgreSQL.V20201005PrivatePreview
{
    public static class GetServerGroup
    {
        /// <summary>
        /// Represents a server group for create.
        /// </summary>
        public static Task<GetServerGroupResult> InvokeAsync(GetServerGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerGroupResult>("azure-nextgen:dbforpostgresql/v20201005privatepreview:getServerGroup", args ?? new GetServerGroupArgs(), options.WithVersion());
    }


    public sealed class GetServerGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server group.
        /// </summary>
        [Input("serverGroupName", required: true)]
        public string ServerGroupName { get; set; } = null!;

        public GetServerGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServerGroupResult
    {
        /// <summary>
        /// The administrator's login name of servers in server group. Can only be specified when the server is being created (and is required for creation).
        /// </summary>
        public readonly string? AdministratorLogin;
        /// <summary>
        /// The password of the administrator login.
        /// </summary>
        public readonly string? AdministratorLoginPassword;
        /// <summary>
        /// Availability Zone information of the server group.
        /// </summary>
        public readonly string? AvailabilityZone;
        /// <summary>
        /// The backup retention days for server group.
        /// </summary>
        public readonly int? BackupRetentionDays;
        /// <summary>
        /// The Citus version of server group.
        /// </summary>
        public readonly string? CitusVersion;
        /// <summary>
        /// The mode to create a new server group.
        /// </summary>
        public readonly string? CreateMode;
        /// <summary>
        /// The delegated subnet arguments for a server group.
        /// </summary>
        public readonly Outputs.ServerGroupPropertiesResponseDelegatedSubnetArguments? DelegatedSubnetArguments;
        /// <summary>
        /// The earliest restore point time (ISO8601 format) for server group.
        /// </summary>
        public readonly string EarliestRestoreTime;
        /// <summary>
        /// If Citus MX is enabled or not for the server group.
        /// </summary>
        public readonly bool? EnableMx;
        /// <summary>
        /// If shards on coordinator is enabled or not for the server group.
        /// </summary>
        public readonly bool? EnableShardsOnCoordinator;
        /// <summary>
        /// If ZFS compression is enabled or not for the server group.
        /// </summary>
        public readonly bool? EnableZfs;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Maintenance window of a server group.
        /// </summary>
        public readonly Outputs.MaintenanceWindowResponse? MaintenanceWindow;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore'
        /// </summary>
        public readonly string? PointInTimeUTC;
        /// <summary>
        /// The PostgreSQL version of server group.
        /// </summary>
        public readonly string? PostgresqlVersion;
        /// <summary>
        /// The resource provider type of server group.
        /// </summary>
        public readonly string ResourceProviderType;
        /// <summary>
        /// The list of server role groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServerRoleGroupResponse> ServerRoleGroups;
        /// <summary>
        /// The source server group location to restore from. It's required when 'createMode' is 'PointInTimeRestore'
        /// </summary>
        public readonly string? SourceLocation;
        /// <summary>
        /// The source resource group name to restore from. It's required when 'createMode' is 'PointInTimeRestore'
        /// </summary>
        public readonly string? SourceResourceGroupName;
        /// <summary>
        /// The source server group name to restore from. It's required when 'createMode' is 'PointInTimeRestore'
        /// </summary>
        public readonly string? SourceServerGroupName;
        /// <summary>
        /// The source subscription id to restore from. It's required when 'createMode' is 'PointInTimeRestore'
        /// </summary>
        public readonly string? SourceSubscriptionId;
        /// <summary>
        /// Standby Availability Zone information of the server group.
        /// </summary>
        public readonly string? StandbyAvailabilityZone;
        /// <summary>
        /// A state of a server group that is visible to user.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The system metadata relating to this resource
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetServerGroupResult(
            string? administratorLogin,

            string? administratorLoginPassword,

            string? availabilityZone,

            int? backupRetentionDays,

            string? citusVersion,

            string? createMode,

            Outputs.ServerGroupPropertiesResponseDelegatedSubnetArguments? delegatedSubnetArguments,

            string earliestRestoreTime,

            bool? enableMx,

            bool? enableShardsOnCoordinator,

            bool? enableZfs,

            string id,

            string location,

            Outputs.MaintenanceWindowResponse? maintenanceWindow,

            string name,

            string? pointInTimeUTC,

            string? postgresqlVersion,

            string resourceProviderType,

            ImmutableArray<Outputs.ServerRoleGroupResponse> serverRoleGroups,

            string? sourceLocation,

            string? sourceResourceGroupName,

            string? sourceServerGroupName,

            string? sourceSubscriptionId,

            string? standbyAvailabilityZone,

            string state,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AdministratorLogin = administratorLogin;
            AdministratorLoginPassword = administratorLoginPassword;
            AvailabilityZone = availabilityZone;
            BackupRetentionDays = backupRetentionDays;
            CitusVersion = citusVersion;
            CreateMode = createMode;
            DelegatedSubnetArguments = delegatedSubnetArguments;
            EarliestRestoreTime = earliestRestoreTime;
            EnableMx = enableMx;
            EnableShardsOnCoordinator = enableShardsOnCoordinator;
            EnableZfs = enableZfs;
            Id = id;
            Location = location;
            MaintenanceWindow = maintenanceWindow;
            Name = name;
            PointInTimeUTC = pointInTimeUTC;
            PostgresqlVersion = postgresqlVersion;
            ResourceProviderType = resourceProviderType;
            ServerRoleGroups = serverRoleGroups;
            SourceLocation = sourceLocation;
            SourceResourceGroupName = sourceResourceGroupName;
            SourceServerGroupName = sourceServerGroupName;
            SourceSubscriptionId = sourceSubscriptionId;
            StandbyAvailabilityZone = standbyAvailabilityZone;
            State = state;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
