// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DBforPostgreSQL.Outputs
{

    [OutputType]
    public sealed class ServerRoleGroupResponse
    {
        /// <summary>
        /// If high availability is enabled or not for the server.
        /// </summary>
        public readonly bool? EnableHa;
        /// <summary>
        /// If public IP is requested or not for a server.
        /// </summary>
        public readonly bool EnablePublicIp;
        /// <summary>
        /// The name of the server role group.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The role of servers in the server role group.
        /// </summary>
        public readonly string? Role;
        /// <summary>
        /// The number of servers in the server role group.
        /// </summary>
        public readonly int? ServerCount;
        /// <summary>
        /// The edition of a server (default: GeneralPurpose).
        /// </summary>
        public readonly string? ServerEdition;
        /// <summary>
        /// The list of server names in the server role group.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServerNameItemResponse> ServerNames;
        /// <summary>
        /// The storage of a server in MB (max: 2097152 = 2TiB).
        /// </summary>
        public readonly double? StorageQuotaInMb;
        /// <summary>
        /// The vCores count of a server (max: 64).
        /// </summary>
        public readonly double? VCores;

        [OutputConstructor]
        private ServerRoleGroupResponse(
            bool? enableHa,

            bool enablePublicIp,

            string? name,

            string? role,

            int? serverCount,

            string? serverEdition,

            ImmutableArray<Outputs.ServerNameItemResponse> serverNames,

            double? storageQuotaInMb,

            double? vCores)
        {
            EnableHa = enableHa;
            EnablePublicIp = enablePublicIp;
            Name = name;
            Role = role;
            ServerCount = serverCount;
            ServerEdition = serverEdition;
            ServerNames = serverNames;
            StorageQuotaInMb = storageQuotaInMb;
            VCores = vCores;
        }
    }
}
