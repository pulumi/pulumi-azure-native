// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforPostgreSQL.V20220308Preview
{
    public static class GetAdministrator
    {
        /// <summary>
        /// Gets information about a server.
        /// </summary>
        public static Task<GetAdministratorResult> InvokeAsync(GetAdministratorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAdministratorResult>("azure-native:dbforpostgresql/v20220308preview:getAdministrator", args ?? new GetAdministratorArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a server.
        /// </summary>
        public static Output<GetAdministratorResult> Invoke(GetAdministratorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAdministratorResult>("azure-native:dbforpostgresql/v20220308preview:getAdministrator", args ?? new GetAdministratorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAdministratorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Guid of the objectId for the administrator.
        /// </summary>
        [Input("objectId", required: true)]
        public string ObjectId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetAdministratorArgs()
        {
        }
        public static new GetAdministratorArgs Empty => new GetAdministratorArgs();
    }

    public sealed class GetAdministratorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Guid of the objectId for the administrator.
        /// </summary>
        [Input("objectId", required: true)]
        public Input<string> ObjectId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetAdministratorInvokeArgs()
        {
        }
        public static new GetAdministratorInvokeArgs Empty => new GetAdministratorInvokeArgs();
    }


    [OutputType]
    public sealed class GetAdministratorResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The objectId of the Active Directory administrator.
        /// </summary>
        public readonly string? ObjectId;
        /// <summary>
        /// Active Directory administrator principal name.
        /// </summary>
        public readonly string? PrincipalName;
        /// <summary>
        /// The principal type used to represent the type of Active Directory Administrator.
        /// </summary>
        public readonly string? PrincipalType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The tenantId of the Active Directory administrator.
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAdministratorResult(
            string id,

            string name,

            string? objectId,

            string? principalName,

            string? principalType,

            Outputs.SystemDataResponse systemData,

            string? tenantId,

            string type)
        {
            Id = id;
            Name = name;
            ObjectId = objectId;
            PrincipalName = principalName;
            PrincipalType = principalType;
            SystemData = systemData;
            TenantId = tenantId;
            Type = type;
        }
    }
}
