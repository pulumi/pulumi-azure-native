// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforPostgreSQL
{
    public static class GetServerGroupRole
    {
        /// <summary>
        /// Gets information about a cluster role.
        /// Azure REST API version: 2023-03-02-preview.
        /// </summary>
        public static Task<GetServerGroupRoleResult> InvokeAsync(GetServerGroupRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServerGroupRoleResult>("azure-native:dbforpostgresql:getServerGroupRole", args ?? new GetServerGroupRoleArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a cluster role.
        /// Azure REST API version: 2023-03-02-preview.
        /// </summary>
        public static Output<GetServerGroupRoleResult> Invoke(GetServerGroupRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerGroupRoleResult>("azure-native:dbforpostgresql:getServerGroupRole", args ?? new GetServerGroupRoleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a cluster role.
        /// Azure REST API version: 2023-03-02-preview.
        /// </summary>
        public static Output<GetServerGroupRoleResult> Invoke(GetServerGroupRoleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerGroupRoleResult>("azure-native:dbforpostgresql:getServerGroupRole", args ?? new GetServerGroupRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServerGroupRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster role.
        /// </summary>
        [Input("roleName", required: true)]
        public string RoleName { get; set; } = null!;

        public GetServerGroupRoleArgs()
        {
        }
        public static new GetServerGroupRoleArgs Empty => new GetServerGroupRoleArgs();
    }

    public sealed class GetServerGroupRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster role.
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        public GetServerGroupRoleInvokeArgs()
        {
        }
        public static new GetServerGroupRoleInvokeArgs Empty => new GetServerGroupRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetServerGroupRoleResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        public readonly string ObjectId;
        public readonly string PrincipalType;
        /// <summary>
        /// Provisioning state of the role
        /// </summary>
        public readonly string ProvisioningState;
        public readonly string? RoleType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        public readonly string? TenantId;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetServerGroupRoleResult(
            string azureApiVersion,

            string id,

            string name,

            string objectId,

            string principalType,

            string provisioningState,

            string? roleType,

            Outputs.SystemDataResponse systemData,

            string? tenantId,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Name = name;
            ObjectId = objectId;
            PrincipalType = principalType;
            ProvisioningState = provisioningState;
            RoleType = roleType;
            SystemData = systemData;
            TenantId = tenantId;
            Type = type;
        }
    }
}
