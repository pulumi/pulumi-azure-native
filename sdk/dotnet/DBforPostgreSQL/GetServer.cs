// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforPostgreSQL
{
    public static class GetServer
    {
        /// <summary>
        /// Gets information about an existing flexible server.
        /// 
        /// Uses Azure REST API version 2024-08-01.
        /// 
        /// Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview, 2025-06-01-preview, 2025-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetServerResult> InvokeAsync(GetServerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServerResult>("azure-native:dbforpostgresql:getServer", args ?? new GetServerArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an existing flexible server.
        /// 
        /// Uses Azure REST API version 2024-08-01.
        /// 
        /// Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview, 2025-06-01-preview, 2025-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetServerResult> Invoke(GetServerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerResult>("azure-native:dbforpostgresql:getServer", args ?? new GetServerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an existing flexible server.
        /// 
        /// Uses Azure REST API version 2024-08-01.
        /// 
        /// Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview, 2025-06-01-preview, 2025-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetServerResult> Invoke(GetServerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerResult>("azure-native:dbforpostgresql:getServer", args ?? new GetServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetServerArgs()
        {
        }
        public static new GetServerArgs Empty => new GetServerArgs();
    }

    public sealed class GetServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetServerInvokeArgs()
        {
        }
        public static new GetServerInvokeArgs Empty => new GetServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetServerResult
    {
        /// <summary>
        /// Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
        /// </summary>
        public readonly string? AdministratorLogin;
        /// <summary>
        /// Authentication configuration properties of a flexible server.
        /// </summary>
        public readonly Outputs.AuthConfigResponse? AuthConfig;
        /// <summary>
        /// Availability zone of a flexible server.
        /// </summary>
        public readonly string? AvailabilityZone;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Backup properties of a flexible server.
        /// </summary>
        public readonly Outputs.BackupResponse? Backup;
        /// <summary>
        /// Data encryption properties of a flexible server.
        /// </summary>
        public readonly Outputs.DataEncryptionResponse? DataEncryption;
        /// <summary>
        /// Fully qualified domain name of a flexible server.
        /// </summary>
        public readonly string FullyQualifiedDomainName;
        /// <summary>
        /// High availability properties of a flexible server.
        /// </summary>
        public readonly Outputs.HighAvailabilityResponse? HighAvailability;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// User assigned managed identities assigned to the flexible server.
        /// </summary>
        public readonly Outputs.UserAssignedIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Maintenance window properties of a flexible server.
        /// </summary>
        public readonly Outputs.MaintenanceWindowResponse? MaintenanceWindow;
        /// <summary>
        /// Minor version of PostgreSQL database engine.
        /// </summary>
        public readonly string MinorVersion;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
        /// </summary>
        public readonly Outputs.NetworkResponse? Network;
        /// <summary>
        /// List of private endpoint connections associated with the specified flexible server.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Read replica properties of a flexible server. Required only in case that you want to promote a server.
        /// </summary>
        public readonly Outputs.ReplicaResponse? Replica;
        /// <summary>
        /// Maximum number of read replicas allowed for a flexible server.
        /// </summary>
        public readonly int ReplicaCapacity;
        /// <summary>
        /// Role of the server in a replication set.
        /// </summary>
        public readonly string? ReplicationRole;
        /// <summary>
        /// Compute tier and size of a flexible server.
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
        /// </summary>
        public readonly string? SourceServerResourceId;
        /// <summary>
        /// Possible states of a flexible server.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Storage properties of a flexible server.
        /// </summary>
        public readonly Outputs.StorageResponse? Storage;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Major version of PostgreSQL database engine.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetServerResult(
            string? administratorLogin,

            Outputs.AuthConfigResponse? authConfig,

            string? availabilityZone,

            string azureApiVersion,

            Outputs.BackupResponse? backup,

            Outputs.DataEncryptionResponse? dataEncryption,

            string fullyQualifiedDomainName,

            Outputs.HighAvailabilityResponse? highAvailability,

            string id,

            Outputs.UserAssignedIdentityResponse? identity,

            string location,

            Outputs.MaintenanceWindowResponse? maintenanceWindow,

            string minorVersion,

            string name,

            Outputs.NetworkResponse? network,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            Outputs.ReplicaResponse? replica,

            int replicaCapacity,

            string? replicationRole,

            Outputs.SkuResponse? sku,

            string? sourceServerResourceId,

            string state,

            Outputs.StorageResponse? storage,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? version)
        {
            AdministratorLogin = administratorLogin;
            AuthConfig = authConfig;
            AvailabilityZone = availabilityZone;
            AzureApiVersion = azureApiVersion;
            Backup = backup;
            DataEncryption = dataEncryption;
            FullyQualifiedDomainName = fullyQualifiedDomainName;
            HighAvailability = highAvailability;
            Id = id;
            Identity = identity;
            Location = location;
            MaintenanceWindow = maintenanceWindow;
            MinorVersion = minorVersion;
            Name = name;
            Network = network;
            PrivateEndpointConnections = privateEndpointConnections;
            Replica = replica;
            ReplicaCapacity = replicaCapacity;
            ReplicationRole = replicationRole;
            Sku = sku;
            SourceServerResourceId = sourceServerResourceId;
            State = state;
            Storage = storage;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
