// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforPostgreSQL.V20240301Preview.Inputs
{

    /// <summary>
    /// Storage properties of a server
    /// </summary>
    public sealed class StorageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flag to enable / disable Storage Auto grow for flexible server.
        /// </summary>
        [Input("autoGrow")]
        public InputUnion<string, Pulumi.AzureNative.DBforPostgreSQL.V20240301Preview.StorageAutoGrow>? AutoGrow { get; set; }

        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        /// <summary>
        /// Max storage allowed for a server.
        /// </summary>
        [Input("storageSizeGB")]
        public Input<int>? StorageSizeGB { get; set; }

        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Input("throughput")]
        public Input<int>? Throughput { get; set; }

        /// <summary>
        /// Name of storage tier for IOPS.
        /// </summary>
        [Input("tier")]
        public InputUnion<string, Pulumi.AzureNative.DBforPostgreSQL.V20240301Preview.AzureManagedDiskPerformanceTiers>? Tier { get; set; }

        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.DBforPostgreSQL.V20240301Preview.StorageType>? Type { get; set; }

        public StorageArgs()
        {
        }
        public static new StorageArgs Empty => new StorageArgs();
    }
}
