// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforPostgreSQL
{
    /// <summary>
    /// Flexible server.
    /// 
    /// Uses Azure REST API version 2024-08-01. In version 2.x of the Azure Native provider, it used API version 2022-12-01.
    /// 
    /// Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:dbforpostgresql:Server")]
    public partial class Server : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
        /// </summary>
        [Output("administratorLogin")]
        public Output<string?> AdministratorLogin { get; private set; } = null!;

        /// <summary>
        /// Authentication configuration properties of a flexible server.
        /// </summary>
        [Output("authConfig")]
        public Output<Outputs.AuthConfigResponse?> AuthConfig { get; private set; } = null!;

        /// <summary>
        /// Availability zone of a flexible server.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string?> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// Backup properties of a flexible server.
        /// </summary>
        [Output("backup")]
        public Output<Outputs.BackupResponse?> Backup { get; private set; } = null!;

        /// <summary>
        /// Data encryption properties of a flexible server.
        /// </summary>
        [Output("dataEncryption")]
        public Output<Outputs.DataEncryptionResponse?> DataEncryption { get; private set; } = null!;

        /// <summary>
        /// Fully qualified domain name of a flexible server.
        /// </summary>
        [Output("fullyQualifiedDomainName")]
        public Output<string> FullyQualifiedDomainName { get; private set; } = null!;

        /// <summary>
        /// High availability properties of a flexible server.
        /// </summary>
        [Output("highAvailability")]
        public Output<Outputs.HighAvailabilityResponse?> HighAvailability { get; private set; } = null!;

        /// <summary>
        /// User assigned managed identities assigned to the flexible server.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.UserAssignedIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Maintenance window properties of a flexible server.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.MaintenanceWindowResponse?> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// Minor version of PostgreSQL database engine.
        /// </summary>
        [Output("minorVersion")]
        public Output<string> MinorVersion { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
        /// </summary>
        [Output("network")]
        public Output<Outputs.NetworkResponse?> Network { get; private set; } = null!;

        /// <summary>
        /// List of private endpoint connections associated with the specified flexible server.
        /// </summary>
        [Output("privateEndpointConnections")]
        public Output<ImmutableArray<Outputs.PrivateEndpointConnectionResponse>> PrivateEndpointConnections { get; private set; } = null!;

        /// <summary>
        /// Read replica properties of a flexible server. Required only in case that you want to promote a server.
        /// </summary>
        [Output("replica")]
        public Output<Outputs.ReplicaResponse?> Replica { get; private set; } = null!;

        /// <summary>
        /// Maximum number of read replicas allowed for a flexible server.
        /// </summary>
        [Output("replicaCapacity")]
        public Output<int> ReplicaCapacity { get; private set; } = null!;

        /// <summary>
        /// Role of the server in a replication set.
        /// </summary>
        [Output("replicationRole")]
        public Output<string?> ReplicationRole { get; private set; } = null!;

        /// <summary>
        /// Compute tier and size of a flexible server.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
        /// </summary>
        [Output("sourceServerResourceId")]
        public Output<string?> SourceServerResourceId { get; private set; } = null!;

        /// <summary>
        /// Possible states of a flexible server.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Storage properties of a flexible server.
        /// </summary>
        [Output("storage")]
        public Output<Outputs.StorageResponse?> Storage { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Major version of PostgreSQL database engine.
        /// </summary>
        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Server resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Server(string name, ServerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:dbforpostgresql:Server", name, args ?? new ServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Server(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:dbforpostgresql:Server", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20171201:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20171201preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20200214preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20200214privatepreview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20210410privatepreview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20210601:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20210601preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20210615privatepreview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20220120preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20220308preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20221201:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20230301preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20230601preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20231201preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20240301preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20240801:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20241101preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbforpostgresql/v20250101preview:Server" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Server resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Server Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Server(name, id, options);
        }
    }

    public sealed class ServerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
        /// </summary>
        [Input("administratorLogin")]
        public Input<string>? AdministratorLogin { get; set; }

        /// <summary>
        /// Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.
        /// </summary>
        [Input("administratorLoginPassword")]
        public Input<string>? AdministratorLoginPassword { get; set; }

        /// <summary>
        /// Authentication configuration properties of a flexible server.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.AuthConfigArgs>? AuthConfig { get; set; }

        /// <summary>
        /// Availability zone of a flexible server.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Backup properties of a flexible server.
        /// </summary>
        [Input("backup")]
        public Input<Inputs.BackupArgs>? Backup { get; set; }

        /// <summary>
        /// Creation mode of a new flexible server.
        /// </summary>
        [Input("createMode")]
        public InputUnion<string, Pulumi.AzureNative.DBforPostgreSQL.CreateMode>? CreateMode { get; set; }

        /// <summary>
        /// Data encryption properties of a flexible server.
        /// </summary>
        [Input("dataEncryption")]
        public Input<Inputs.DataEncryptionArgs>? DataEncryption { get; set; }

        /// <summary>
        /// High availability properties of a flexible server.
        /// </summary>
        [Input("highAvailability")]
        public Input<Inputs.HighAvailabilityArgs>? HighAvailability { get; set; }

        /// <summary>
        /// User assigned managed identities assigned to the flexible server.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.UserAssignedIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Maintenance window properties of a flexible server.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.MaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
        /// </summary>
        [Input("network")]
        public Input<Inputs.NetworkArgs>? Network { get; set; }

        /// <summary>
        /// Creation time (in ISO8601 format) of the backup which you want to restore in the new flexible server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.
        /// </summary>
        [Input("pointInTimeUTC")]
        public Input<string>? PointInTimeUTC { get; set; }

        /// <summary>
        /// Read replica properties of a flexible server. Required only in case that you want to promote a server.
        /// </summary>
        [Input("replica")]
        public Input<Inputs.ReplicaArgs>? Replica { get; set; }

        /// <summary>
        /// Role of the server in a replication set.
        /// </summary>
        [Input("replicationRole")]
        public InputUnion<string, Pulumi.AzureNative.DBforPostgreSQL.ReplicationRole>? ReplicationRole { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName")]
        public Input<string>? ServerName { get; set; }

        /// <summary>
        /// Compute tier and size of a flexible server.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SkuArgs>? Sku { get; set; }

        /// <summary>
        /// Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
        /// </summary>
        [Input("sourceServerResourceId")]
        public Input<string>? SourceServerResourceId { get; set; }

        /// <summary>
        /// Storage properties of a flexible server.
        /// </summary>
        [Input("storage")]
        public Input<Inputs.StorageArgs>? Storage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Major version of PostgreSQL database engine.
        /// </summary>
        [Input("version")]
        public InputUnion<string, Pulumi.AzureNative.DBforPostgreSQL.ServerVersion>? Version { get; set; }

        public ServerArgs()
        {
            AvailabilityZone = "";
        }
        public static new ServerArgs Empty => new ServerArgs();
    }
}
