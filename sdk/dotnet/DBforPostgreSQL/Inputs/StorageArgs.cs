// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforPostgreSQL.Inputs
{

    /// <summary>
    /// Storage properties of a flexible server.
    /// </summary>
    public sealed class StorageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flag to enable or disable the automatic growth of storage size of a flexible server when available space is nearing zero and conditions allow for automatically growing storage size.
        /// </summary>
        [Input("autoGrow")]
        public InputUnion<string, Pulumi.AzureNative.DBforPostgreSQL.StorageAutoGrow>? AutoGrow { get; set; }

        /// <summary>
        /// Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS.
        /// </summary>
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        /// <summary>
        /// Size of storage assigned to a flexible server.
        /// </summary>
        [Input("storageSizeGB")]
        public Input<int>? StorageSizeGB { get; set; }

        /// <summary>
        /// Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS.
        /// </summary>
        [Input("throughput")]
        public Input<int>? Throughput { get; set; }

        /// <summary>
        /// Storage tier of a flexible server.
        /// </summary>
        [Input("tier")]
        public InputUnion<string, Pulumi.AzureNative.DBforPostgreSQL.AzureManagedDiskPerformanceTiers>? Tier { get; set; }

        /// <summary>
        /// Type of storage assigned to a flexible server. Allowed values are Premium_LRS or PremiumV2_LRS. If not specified, it defaults to Premium_LRS.
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.DBforPostgreSQL.StorageType>? Type { get; set; }

        public StorageArgs()
        {
        }
        public static new StorageArgs Empty => new StorageArgs();
    }
}
