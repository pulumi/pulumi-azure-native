// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforPostgreSQL
{
    public static class GetSingleServerVirtualNetworkRule
    {
        /// <summary>
        /// Gets a virtual network rule.
        /// Azure REST API version: 2017-12-01.
        /// 
        /// Other available API versions: 2017-12-01-preview.
        /// </summary>
        public static Task<GetSingleServerVirtualNetworkRuleResult> InvokeAsync(GetSingleServerVirtualNetworkRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSingleServerVirtualNetworkRuleResult>("azure-native:dbforpostgresql:getSingleServerVirtualNetworkRule", args ?? new GetSingleServerVirtualNetworkRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a virtual network rule.
        /// Azure REST API version: 2017-12-01.
        /// 
        /// Other available API versions: 2017-12-01-preview.
        /// </summary>
        public static Output<GetSingleServerVirtualNetworkRuleResult> Invoke(GetSingleServerVirtualNetworkRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSingleServerVirtualNetworkRuleResult>("azure-native:dbforpostgresql:getSingleServerVirtualNetworkRule", args ?? new GetSingleServerVirtualNetworkRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a virtual network rule.
        /// Azure REST API version: 2017-12-01.
        /// 
        /// Other available API versions: 2017-12-01-preview.
        /// </summary>
        public static Output<GetSingleServerVirtualNetworkRuleResult> Invoke(GetSingleServerVirtualNetworkRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSingleServerVirtualNetworkRuleResult>("azure-native:dbforpostgresql:getSingleServerVirtualNetworkRule", args ?? new GetSingleServerVirtualNetworkRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSingleServerVirtualNetworkRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual network rule.
        /// </summary>
        [Input("virtualNetworkRuleName", required: true)]
        public string VirtualNetworkRuleName { get; set; } = null!;

        public GetSingleServerVirtualNetworkRuleArgs()
        {
        }
        public static new GetSingleServerVirtualNetworkRuleArgs Empty => new GetSingleServerVirtualNetworkRuleArgs();
    }

    public sealed class GetSingleServerVirtualNetworkRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual network rule.
        /// </summary>
        [Input("virtualNetworkRuleName", required: true)]
        public Input<string> VirtualNetworkRuleName { get; set; } = null!;

        public GetSingleServerVirtualNetworkRuleInvokeArgs()
        {
        }
        public static new GetSingleServerVirtualNetworkRuleInvokeArgs Empty => new GetSingleServerVirtualNetworkRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetSingleServerVirtualNetworkRuleResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Create firewall rule before the virtual network has vnet service endpoint enabled.
        /// </summary>
        public readonly bool? IgnoreMissingVnetServiceEndpoint;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Virtual Network Rule State
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The ARM resource id of the virtual network subnet.
        /// </summary>
        public readonly string VirtualNetworkSubnetId;

        [OutputConstructor]
        private GetSingleServerVirtualNetworkRuleResult(
            string id,

            bool? ignoreMissingVnetServiceEndpoint,

            string name,

            string state,

            string type,

            string virtualNetworkSubnetId)
        {
            Id = id;
            IgnoreMissingVnetServiceEndpoint = ignoreMissingVnetServiceEndpoint;
            Name = name;
            State = state;
            Type = type;
            VirtualNetworkSubnetId = virtualNetworkSubnetId;
        }
    }
}
