// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.SignalRService.V20181001.Outputs
{

    [OutputType]
    public sealed class SignalRPropertiesResponseResult
    {
        /// <summary>
        /// Cross-Origin Resource Sharing (CORS) settings.
        /// </summary>
        public readonly Outputs.SignalRCorsSettingsResponseResult? Cors;
        /// <summary>
        /// The publicly accessible IP of the SignalR service.
        /// </summary>
        public readonly string ExternalIP;
        /// <summary>
        /// List of SignalR featureFlags. e.g. ServiceMode.
        /// 
        /// FeatureFlags that are not included in the parameters for the update operation will not be modified.
        /// And the response will only include featureFlags that are explicitly set. 
        /// When a featureFlag is not explicitly set, SignalR service will use its globally default value. 
        /// But keep in mind, the default value doesn't mean "false". It varies in terms of different FeatureFlags.
        /// </summary>
        public readonly ImmutableArray<Outputs.SignalRFeatureResponseResult> Features;
        /// <summary>
        /// FQDN of the SignalR service instance. Format: xxx.service.signalr.net
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// Prefix for the hostName of the SignalR service. Retained for future use.
        /// The hostname will be of format: &amp;lt;hostNamePrefix&amp;gt;.service.signalr.net.
        /// </summary>
        public readonly string? HostNamePrefix;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The publicly accessible port of the SignalR service which is designed for browser/client side usage.
        /// </summary>
        public readonly int PublicPort;
        /// <summary>
        /// The publicly accessible port of the SignalR service which is designed for customer server side usage.
        /// </summary>
        public readonly int ServerPort;
        /// <summary>
        /// Version of the SignalR resource. Probably you need the same or higher version of client SDKs.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private SignalRPropertiesResponseResult(
            Outputs.SignalRCorsSettingsResponseResult? cors,

            string externalIP,

            ImmutableArray<Outputs.SignalRFeatureResponseResult> features,

            string hostName,

            string? hostNamePrefix,

            string provisioningState,

            int publicPort,

            int serverPort,

            string? version)
        {
            Cors = cors;
            ExternalIP = externalIP;
            Features = features;
            HostName = hostName;
            HostNamePrefix = hostNamePrefix;
            ProvisioningState = provisioningState;
            PublicPort = publicPort;
            ServerPort = serverPort;
            Version = version;
        }
    }
}
