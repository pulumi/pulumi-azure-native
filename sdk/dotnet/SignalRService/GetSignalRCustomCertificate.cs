// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SignalRService
{
    public static class GetSignalRCustomCertificate
    {
        /// <summary>
        /// A custom certificate.
        /// API Version: 2022-02-01.
        /// </summary>
        public static Task<GetSignalRCustomCertificateResult> InvokeAsync(GetSignalRCustomCertificateArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSignalRCustomCertificateResult>("azure-native:signalrservice:getSignalRCustomCertificate", args ?? new GetSignalRCustomCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// A custom certificate.
        /// API Version: 2022-02-01.
        /// </summary>
        public static Output<GetSignalRCustomCertificateResult> Invoke(GetSignalRCustomCertificateInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSignalRCustomCertificateResult>("azure-native:signalrservice:getSignalRCustomCertificate", args ?? new GetSignalRCustomCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSignalRCustomCertificateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Custom certificate name
        /// </summary>
        [Input("certificateName", required: true)]
        public string CertificateName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetSignalRCustomCertificateArgs()
        {
        }
        public static new GetSignalRCustomCertificateArgs Empty => new GetSignalRCustomCertificateArgs();
    }

    public sealed class GetSignalRCustomCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Custom certificate name
        /// </summary>
        [Input("certificateName", required: true)]
        public Input<string> CertificateName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetSignalRCustomCertificateInvokeArgs()
        {
        }
        public static new GetSignalRCustomCertificateInvokeArgs Empty => new GetSignalRCustomCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetSignalRCustomCertificateResult
    {
        /// <summary>
        /// Fully qualified resource Id for the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Base uri of the KeyVault that stores certificate.
        /// </summary>
        public readonly string KeyVaultBaseUri;
        /// <summary>
        /// Certificate secret name.
        /// </summary>
        public readonly string KeyVaultSecretName;
        /// <summary>
        /// Certificate secret version.
        /// </summary>
        public readonly string? KeyVaultSecretVersion;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource - e.g. "Microsoft.SignalRService/SignalR"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSignalRCustomCertificateResult(
            string id,

            string keyVaultBaseUri,

            string keyVaultSecretName,

            string? keyVaultSecretVersion,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            KeyVaultBaseUri = keyVaultBaseUri;
            KeyVaultSecretName = keyVaultSecretName;
            KeyVaultSecretVersion = keyVaultSecretVersion;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
