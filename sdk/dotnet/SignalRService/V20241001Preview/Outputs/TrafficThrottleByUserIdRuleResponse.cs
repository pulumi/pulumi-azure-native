// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SignalRService.V20241001Preview.Outputs
{

    /// <summary>
    /// Throttle the client traffic by the user ID
    /// </summary>
    [OutputType]
    public sealed class TrafficThrottleByUserIdRuleResponse
    {
        /// <summary>
        /// The aggregation window for the message bytes. The message bytes will be aggregated in this window and be reset after the window. Default value is 60 seconds.
        /// </summary>
        public readonly int? AggregationWindowInSeconds;
        /// <summary>
        /// Maximum accumulated inbound message bytes allowed for the same user ID within a time window. Clients with the same user ID will get disconnected if the message bytes exceeds this value. Default value is 1GB.
        /// </summary>
        public readonly double? MaxInboundMessageBytes;
        /// <summary>
        /// 
        /// Expected value is 'TrafficThrottleByUserIdRule'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private TrafficThrottleByUserIdRuleResponse(
            int? aggregationWindowInSeconds,

            double? maxInboundMessageBytes,

            string type)
        {
            AggregationWindowInSeconds = aggregationWindowInSeconds;
            MaxInboundMessageBytes = maxInboundMessageBytes;
            Type = type;
        }
    }
}
