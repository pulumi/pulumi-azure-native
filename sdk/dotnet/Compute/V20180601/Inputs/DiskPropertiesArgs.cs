// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute.V20180601.Inputs
{

    /// <summary>
    /// Disk resource properties.
    /// </summary>
    public sealed class DiskPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Disk source information. CreationData information cannot be changed after the disk has been created.
        /// </summary>
        [Input("creationData", required: true)]
        public Input<Inputs.CreationDataArgs> CreationData { get; set; } = null!;

        /// <summary>
        /// The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes. For a description of the range of values you can set, see [Ultra SSD Managed Disk Offerings](https://docs.microsoft.com/azure/virtual-machines/windows/disks-ultra-ssd#ultra-ssd-managed-disk-offerings).
        /// </summary>
        [Input("diskIOPSReadWrite")]
        public Input<int>? DiskIOPSReadWrite { get; set; }

        /// <summary>
        /// The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10. For a description of the range of values you can set, see [Ultra SSD Managed Disk Offerings](https://docs.microsoft.com/azure/virtual-machines/windows/disks-ultra-ssd#ultra-ssd-managed-disk-offerings).
        /// </summary>
        [Input("diskMBpsReadWrite")]
        public Input<int>? DiskMBpsReadWrite { get; set; }

        /// <summary>
        /// If creationData.createOption is Empty, this field is mandatory and it indicates the size of the VHD to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
        /// </summary>
        [Input("diskSizeGB")]
        public Input<int>? DiskSizeGB { get; set; }

        /// <summary>
        /// Encryption settings for disk or snapshot
        /// </summary>
        [Input("encryptionSettings")]
        public Input<Inputs.EncryptionSettingsArgs>? EncryptionSettings { get; set; }

        /// <summary>
        /// The Operating System type.
        /// </summary>
        [Input("osType")]
        public Input<string>? OsType { get; set; }

        public DiskPropertiesArgs()
        {
        }
    }
}
