// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute
{
    public static class GetProximityPlacementGroup
    {
        /// <summary>
        /// Retrieves information about a proximity placement group .
        /// 
        /// Uses Azure REST API version 2024-11-01.
        /// 
        /// Other available API versions: 2022-08-01, 2022-11-01, 2023-03-01, 2023-07-01, 2023-09-01, 2024-03-01, 2024-07-01, 2025-04-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetProximityPlacementGroupResult> InvokeAsync(GetProximityPlacementGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProximityPlacementGroupResult>("azure-native:compute:getProximityPlacementGroup", args ?? new GetProximityPlacementGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about a proximity placement group .
        /// 
        /// Uses Azure REST API version 2024-11-01.
        /// 
        /// Other available API versions: 2022-08-01, 2022-11-01, 2023-03-01, 2023-07-01, 2023-09-01, 2024-03-01, 2024-07-01, 2025-04-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetProximityPlacementGroupResult> Invoke(GetProximityPlacementGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProximityPlacementGroupResult>("azure-native:compute:getProximityPlacementGroup", args ?? new GetProximityPlacementGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about a proximity placement group .
        /// 
        /// Uses Azure REST API version 2024-11-01.
        /// 
        /// Other available API versions: 2022-08-01, 2022-11-01, 2023-03-01, 2023-07-01, 2023-09-01, 2024-03-01, 2024-07-01, 2025-04-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetProximityPlacementGroupResult> Invoke(GetProximityPlacementGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProximityPlacementGroupResult>("azure-native:compute:getProximityPlacementGroup", args ?? new GetProximityPlacementGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProximityPlacementGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// includeColocationStatus=true enables fetching the colocation status of all the resources in the proximity placement group.
        /// </summary>
        [Input("includeColocationStatus")]
        public string? IncludeColocationStatus { get; set; }

        /// <summary>
        /// The name of the proximity placement group.
        /// </summary>
        [Input("proximityPlacementGroupName", required: true)]
        public string ProximityPlacementGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetProximityPlacementGroupArgs()
        {
        }
        public static new GetProximityPlacementGroupArgs Empty => new GetProximityPlacementGroupArgs();
    }

    public sealed class GetProximityPlacementGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// includeColocationStatus=true enables fetching the colocation status of all the resources in the proximity placement group.
        /// </summary>
        [Input("includeColocationStatus")]
        public Input<string>? IncludeColocationStatus { get; set; }

        /// <summary>
        /// The name of the proximity placement group.
        /// </summary>
        [Input("proximityPlacementGroupName", required: true)]
        public Input<string> ProximityPlacementGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetProximityPlacementGroupInvokeArgs()
        {
        }
        public static new GetProximityPlacementGroupInvokeArgs Empty => new GetProximityPlacementGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetProximityPlacementGroupResult
    {
        /// <summary>
        /// A list of references to all availability sets in the proximity placement group.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceWithColocationStatusResponse> AvailabilitySets;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Describes colocation status of the Proximity Placement Group.
        /// </summary>
        public readonly Outputs.InstanceViewStatusResponse? ColocationStatus;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specifies the user intent of the proximity placement group.
        /// </summary>
        public readonly Outputs.ProximityPlacementGroupPropertiesIntentResponse? Intent;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the type of the proximity placement group. Possible values are: **Standard** : Co-locate resources within an Azure region or Availability Zone. **Ultra** : For future use.
        /// </summary>
        public readonly string? ProximityPlacementGroupType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// A list of references to all virtual machine scale sets in the proximity placement group.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceWithColocationStatusResponse> VirtualMachineScaleSets;
        /// <summary>
        /// A list of references to all virtual machines in the proximity placement group.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceWithColocationStatusResponse> VirtualMachines;
        /// <summary>
        /// The availability zones.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GetProximityPlacementGroupResult(
            ImmutableArray<Outputs.SubResourceWithColocationStatusResponse> availabilitySets,

            string azureApiVersion,

            Outputs.InstanceViewStatusResponse? colocationStatus,

            string id,

            Outputs.ProximityPlacementGroupPropertiesIntentResponse? intent,

            string location,

            string name,

            string? proximityPlacementGroupType,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<Outputs.SubResourceWithColocationStatusResponse> virtualMachineScaleSets,

            ImmutableArray<Outputs.SubResourceWithColocationStatusResponse> virtualMachines,

            ImmutableArray<string> zones)
        {
            AvailabilitySets = availabilitySets;
            AzureApiVersion = azureApiVersion;
            ColocationStatus = colocationStatus;
            Id = id;
            Intent = intent;
            Location = location;
            Name = name;
            ProximityPlacementGroupType = proximityPlacementGroupType;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VirtualMachineScaleSets = virtualMachineScaleSets;
            VirtualMachines = virtualMachines;
            Zones = zones;
        }
    }
}
