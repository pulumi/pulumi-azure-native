// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20240701.Outputs
{

    /// <summary>
    /// The configuration parameters used for performing automatic OS upgrade.
    /// </summary>
    [OutputType]
    public sealed class AutomaticOSUpgradePolicyResponse
    {
        /// <summary>
        /// Whether OS image rollback feature should be disabled. Default value is false.
        /// </summary>
        public readonly bool? DisableAutomaticRollback;
        /// <summary>
        /// Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. If this is set to true for Windows based scale sets, [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet) is automatically set to false and cannot be set to true.
        /// </summary>
        public readonly bool? EnableAutomaticOSUpgrade;
        /// <summary>
        /// Indicates whether Auto OS Upgrade should undergo deferral. Deferred OS upgrades will send advanced notifications on a per-VM basis that an OS upgrade from rolling upgrades is incoming, via the IMDS tag 'Platform.PendingOSUpgrade'. The upgrade then defers until the upgrade is approved via an ApproveRollingUpgrade call.
        /// </summary>
        public readonly bool? OsRollingUpgradeDeferral;
        /// <summary>
        /// Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Default value is false. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS.
        /// </summary>
        public readonly bool? UseRollingUpgradePolicy;

        [OutputConstructor]
        private AutomaticOSUpgradePolicyResponse(
            bool? disableAutomaticRollback,

            bool? enableAutomaticOSUpgrade,

            bool? osRollingUpgradeDeferral,

            bool? useRollingUpgradePolicy)
        {
            DisableAutomaticRollback = disableAutomaticRollback;
            EnableAutomaticOSUpgrade = enableAutomaticOSUpgrade;
            OsRollingUpgradeDeferral = osRollingUpgradeDeferral;
            UseRollingUpgradePolicy = useRollingUpgradePolicy;
        }
    }
}
