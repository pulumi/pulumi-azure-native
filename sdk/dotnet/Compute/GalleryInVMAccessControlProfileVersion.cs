// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute
{
    /// <summary>
    /// Specifies information about the gallery inVMAccessControlProfile version that you want to create or update.
    /// 
    /// Uses Azure REST API version 2024-03-03. In version 2.x of the Azure Native provider, it used API version 2024-03-03.
    /// </summary>
    [AzureNativeResourceType("azure-native:compute:GalleryInVMAccessControlProfileVersion")]
    public partial class GalleryInVMAccessControlProfileVersion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// This property allows you to specify if the requests will be allowed to access the host endpoints. Possible values are: 'Allow', 'Deny'.
        /// </summary>
        [Output("defaultAccess")]
        public Output<string> DefaultAccess { get; private set; } = null!;

        /// <summary>
        /// If set to true, Virtual Machines deployed from the latest version of the Resource Profile won't use this Profile version.
        /// </summary>
        [Output("excludeFromLatest")]
        public Output<bool?> ExcludeFromLatest { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// This property allows you to specify whether the access control rules are in Audit mode, in Enforce mode or Disabled. Possible values are: 'Audit', 'Enforce' or 'Disabled'.
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The timestamp for when the Resource Profile Version is published.
        /// </summary>
        [Output("publishedDate")]
        public Output<string> PublishedDate { get; private set; } = null!;

        /// <summary>
        /// This is the replication status of the gallery image version.
        /// </summary>
        [Output("replicationStatus")]
        public Output<Outputs.ReplicationStatusResponse> ReplicationStatus { get; private set; } = null!;

        /// <summary>
        /// This is the Access Control Rules specification for an inVMAccessControlProfile version.
        /// </summary>
        [Output("rules")]
        public Output<Outputs.AccessControlRulesResponse?> Rules { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The target regions where the Resource Profile version is going to be replicated to. This property is updatable.
        /// </summary>
        [Output("targetLocations")]
        public Output<ImmutableArray<Outputs.TargetRegionResponse>> TargetLocations { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a GalleryInVMAccessControlProfileVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GalleryInVMAccessControlProfileVersion(string name, GalleryInVMAccessControlProfileVersionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:compute:GalleryInVMAccessControlProfileVersion", name, args ?? new GalleryInVMAccessControlProfileVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GalleryInVMAccessControlProfileVersion(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:compute:GalleryInVMAccessControlProfileVersion", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20240303:GalleryInVMAccessControlProfileVersion" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GalleryInVMAccessControlProfileVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GalleryInVMAccessControlProfileVersion Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GalleryInVMAccessControlProfileVersion(name, id, options);
        }
    }

    public sealed class GalleryInVMAccessControlProfileVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This property allows you to specify if the requests will be allowed to access the host endpoints. Possible values are: 'Allow', 'Deny'.
        /// </summary>
        [Input("defaultAccess", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Compute.EndpointAccess> DefaultAccess { get; set; } = null!;

        /// <summary>
        /// If set to true, Virtual Machines deployed from the latest version of the Resource Profile won't use this Profile version.
        /// </summary>
        [Input("excludeFromLatest")]
        public Input<bool>? ExcludeFromLatest { get; set; }

        /// <summary>
        /// The name of the Shared Image Gallery.
        /// </summary>
        [Input("galleryName", required: true)]
        public Input<string> GalleryName { get; set; } = null!;

        /// <summary>
        /// The name of the gallery inVMAccessControlProfile to be retrieved.
        /// </summary>
        [Input("inVMAccessControlProfileName", required: true)]
        public Input<string> InVMAccessControlProfileName { get; set; } = null!;

        /// <summary>
        /// The name of the gallery inVMAccessControlProfile version to be retrieved.
        /// </summary>
        [Input("inVMAccessControlProfileVersionName")]
        public Input<string>? InVMAccessControlProfileVersionName { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// This property allows you to specify whether the access control rules are in Audit mode, in Enforce mode or Disabled. Possible values are: 'Audit', 'Enforce' or 'Disabled'.
        /// </summary>
        [Input("mode", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Compute.AccessControlRulesMode> Mode { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// This is the Access Control Rules specification for an inVMAccessControlProfile version.
        /// </summary>
        [Input("rules")]
        public Input<Inputs.AccessControlRulesArgs>? Rules { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("targetLocations")]
        private InputList<Inputs.TargetRegionArgs>? _targetLocations;

        /// <summary>
        /// The target regions where the Resource Profile version is going to be replicated to. This property is updatable.
        /// </summary>
        public InputList<Inputs.TargetRegionArgs> TargetLocations
        {
            get => _targetLocations ?? (_targetLocations = new InputList<Inputs.TargetRegionArgs>());
            set => _targetLocations = value;
        }

        public GalleryInVMAccessControlProfileVersionArgs()
        {
        }
        public static new GalleryInVMAccessControlProfileVersionArgs Empty => new GalleryInVMAccessControlProfileVersionArgs();
    }
}
