// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute.V20171201.Outputs
{

    [OutputType]
    public sealed class VirtualMachineScaleSetPropertiesResponseResult
    {
        /// <summary>
        /// Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        /// </summary>
        public readonly bool? Overprovision;
        /// <summary>
        /// Fault Domain count for each placement group.
        /// </summary>
        public readonly int? PlatformFaultDomainCount;
        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// When true this limits the scale set to a single placement group, of max size 100 virtual machines.
        /// </summary>
        public readonly bool? SinglePlacementGroup;
        /// <summary>
        /// Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
        /// </summary>
        public readonly string UniqueId;
        /// <summary>
        /// The upgrade policy.
        /// </summary>
        public readonly Outputs.UpgradePolicyResponseResult? UpgradePolicy;
        /// <summary>
        /// The virtual machine profile.
        /// </summary>
        public readonly Outputs.VirtualMachineScaleSetVMProfileResponseResult? VirtualMachineProfile;
        /// <summary>
        /// Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
        /// </summary>
        public readonly bool? ZoneBalance;

        [OutputConstructor]
        private VirtualMachineScaleSetPropertiesResponseResult(
            bool? overprovision,

            int? platformFaultDomainCount,

            string provisioningState,

            bool? singlePlacementGroup,

            string uniqueId,

            Outputs.UpgradePolicyResponseResult? upgradePolicy,

            Outputs.VirtualMachineScaleSetVMProfileResponseResult? virtualMachineProfile,

            bool? zoneBalance)
        {
            Overprovision = overprovision;
            PlatformFaultDomainCount = platformFaultDomainCount;
            ProvisioningState = provisioningState;
            SinglePlacementGroup = singlePlacementGroup;
            UniqueId = uniqueId;
            UpgradePolicy = upgradePolicy;
            VirtualMachineProfile = virtualMachineProfile;
            ZoneBalance = zoneBalance;
        }
    }
}
