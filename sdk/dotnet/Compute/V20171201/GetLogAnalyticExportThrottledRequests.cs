// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Compute.V20171201
{
    public static class GetLogAnalyticExportThrottledRequests
    {
        public static Task<GetLogAnalyticExportThrottledRequestsResult> InvokeAsync(GetLogAnalyticExportThrottledRequestsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLogAnalyticExportThrottledRequestsResult>("azure-nextgen:compute/v20171201:getLogAnalyticExportThrottledRequests", args ?? new GetLogAnalyticExportThrottledRequestsArgs(), options.WithVersion());
    }


    public sealed class GetLogAnalyticExportThrottledRequestsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
        /// </summary>
        [Input("blobContainerSasUri", required: true)]
        public string BlobContainerSasUri { get; set; } = null!;

        /// <summary>
        /// From time of the query
        /// </summary>
        [Input("fromTime", required: true)]
        public string FromTime { get; set; } = null!;

        /// <summary>
        /// Group query result by Operation Name.
        /// </summary>
        [Input("groupByOperationName")]
        public bool? GroupByOperationName { get; set; }

        /// <summary>
        /// Group query result by Resource Name.
        /// </summary>
        [Input("groupByResourceName")]
        public bool? GroupByResourceName { get; set; }

        /// <summary>
        /// Group query result by Throttle Policy applied.
        /// </summary>
        [Input("groupByThrottlePolicy")]
        public bool? GroupByThrottlePolicy { get; set; }

        /// <summary>
        /// The location upon which virtual-machine-sizes is queried.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// To time of the query
        /// </summary>
        [Input("toTime", required: true)]
        public string ToTime { get; set; } = null!;

        public GetLogAnalyticExportThrottledRequestsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLogAnalyticExportThrottledRequestsResult
    {
        /// <summary>
        /// End time of the operation
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// Api error
        /// </summary>
        public readonly Outputs.ApiErrorResponseResult Error;
        /// <summary>
        /// Operation ID
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// LogAnalyticsOutput
        /// </summary>
        public readonly Outputs.LogAnalyticsOutputResponseResult Properties;
        /// <summary>
        /// Start time of the operation
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// Operation status
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetLogAnalyticExportThrottledRequestsResult(
            string endTime,

            Outputs.ApiErrorResponseResult error,

            string name,

            Outputs.LogAnalyticsOutputResponseResult properties,

            string startTime,

            string status)
        {
            EndTime = endTime;
            Error = error;
            Name = name;
            Properties = properties;
            StartTime = startTime;
            Status = status;
        }
    }
}
