// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20171201
{
    public static class GetLogAnalyticExportRequestRateByInterval
    {
        /// <summary>
        /// Export logs that show Api requests made by this subscription in the given time window to show throttling activities.
        /// </summary>
        public static Task<GetLogAnalyticExportRequestRateByIntervalResult> InvokeAsync(GetLogAnalyticExportRequestRateByIntervalArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogAnalyticExportRequestRateByIntervalResult>("azure-native:compute/v20171201:getLogAnalyticExportRequestRateByInterval", args ?? new GetLogAnalyticExportRequestRateByIntervalArgs(), options.WithDefaults());

        /// <summary>
        /// Export logs that show Api requests made by this subscription in the given time window to show throttling activities.
        /// </summary>
        public static Output<GetLogAnalyticExportRequestRateByIntervalResult> Invoke(GetLogAnalyticExportRequestRateByIntervalInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogAnalyticExportRequestRateByIntervalResult>("azure-native:compute/v20171201:getLogAnalyticExportRequestRateByInterval", args ?? new GetLogAnalyticExportRequestRateByIntervalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogAnalyticExportRequestRateByIntervalArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
        /// </summary>
        [Input("blobContainerSasUri", required: true)]
        public string BlobContainerSasUri { get; set; } = null!;

        /// <summary>
        /// From time of the query
        /// </summary>
        [Input("fromTime", required: true)]
        public string FromTime { get; set; } = null!;

        /// <summary>
        /// Group query result by Operation Name.
        /// </summary>
        [Input("groupByOperationName")]
        public bool? GroupByOperationName { get; set; }

        /// <summary>
        /// Group query result by Resource Name.
        /// </summary>
        [Input("groupByResourceName")]
        public bool? GroupByResourceName { get; set; }

        /// <summary>
        /// Group query result by Throttle Policy applied.
        /// </summary>
        [Input("groupByThrottlePolicy")]
        public bool? GroupByThrottlePolicy { get; set; }

        /// <summary>
        /// Interval value in minutes used to create LogAnalytics call rate logs.
        /// </summary>
        [Input("intervalLength", required: true)]
        public Pulumi.AzureNative.Compute.V20171201.IntervalInMins IntervalLength { get; set; }

        /// <summary>
        /// The location upon which virtual-machine-sizes is queried.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// To time of the query
        /// </summary>
        [Input("toTime", required: true)]
        public string ToTime { get; set; } = null!;

        public GetLogAnalyticExportRequestRateByIntervalArgs()
        {
        }
        public static new GetLogAnalyticExportRequestRateByIntervalArgs Empty => new GetLogAnalyticExportRequestRateByIntervalArgs();
    }

    public sealed class GetLogAnalyticExportRequestRateByIntervalInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
        /// </summary>
        [Input("blobContainerSasUri", required: true)]
        public Input<string> BlobContainerSasUri { get; set; } = null!;

        /// <summary>
        /// From time of the query
        /// </summary>
        [Input("fromTime", required: true)]
        public Input<string> FromTime { get; set; } = null!;

        /// <summary>
        /// Group query result by Operation Name.
        /// </summary>
        [Input("groupByOperationName")]
        public Input<bool>? GroupByOperationName { get; set; }

        /// <summary>
        /// Group query result by Resource Name.
        /// </summary>
        [Input("groupByResourceName")]
        public Input<bool>? GroupByResourceName { get; set; }

        /// <summary>
        /// Group query result by Throttle Policy applied.
        /// </summary>
        [Input("groupByThrottlePolicy")]
        public Input<bool>? GroupByThrottlePolicy { get; set; }

        /// <summary>
        /// Interval value in minutes used to create LogAnalytics call rate logs.
        /// </summary>
        [Input("intervalLength", required: true)]
        public Input<Pulumi.AzureNative.Compute.V20171201.IntervalInMins> IntervalLength { get; set; } = null!;

        /// <summary>
        /// The location upon which virtual-machine-sizes is queried.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// To time of the query
        /// </summary>
        [Input("toTime", required: true)]
        public Input<string> ToTime { get; set; } = null!;

        public GetLogAnalyticExportRequestRateByIntervalInvokeArgs()
        {
        }
        public static new GetLogAnalyticExportRequestRateByIntervalInvokeArgs Empty => new GetLogAnalyticExportRequestRateByIntervalInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogAnalyticExportRequestRateByIntervalResult
    {
        /// <summary>
        /// End time of the operation
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// Api error
        /// </summary>
        public readonly Outputs.ApiErrorResponse Error;
        /// <summary>
        /// Operation ID
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// LogAnalyticsOutput
        /// </summary>
        public readonly Outputs.LogAnalyticsOutputResponse Properties;
        /// <summary>
        /// Start time of the operation
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// Operation status
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetLogAnalyticExportRequestRateByIntervalResult(
            string endTime,

            Outputs.ApiErrorResponse error,

            string name,

            Outputs.LogAnalyticsOutputResponse properties,

            string startTime,

            string status)
        {
            EndTime = endTime;
            Error = error;
            Name = name;
            Properties = properties;
            StartTime = startTime;
            Status = status;
        }
    }
}
