// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20210301.Outputs
{

    [OutputType]
    public sealed class RestorePointSourceMetadataResponse
    {
        /// <summary>
        /// Gets the diagnostics profile.
        /// </summary>
        public readonly Outputs.DiagnosticsProfileResponse? DiagnosticsProfile;
        /// <summary>
        /// Gets the hardware profile.
        /// </summary>
        public readonly Outputs.HardwareProfileResponse? HardwareProfile;
        /// <summary>
        /// Gets the license type, which is for bring your own license scenario.
        /// </summary>
        public readonly string? LicenseType;
        /// <summary>
        /// Gets the OS profile.
        /// </summary>
        public readonly Outputs.OSProfileResponse? OsProfile;
        /// <summary>
        /// Gets the security profile.
        /// </summary>
        public readonly Outputs.SecurityProfileResponse? SecurityProfile;
        /// <summary>
        /// Gets the storage profile.
        /// </summary>
        public readonly Outputs.RestorePointSourceVMStorageProfileResponse? StorageProfile;
        /// <summary>
        /// Gets the virtual machine unique id.
        /// </summary>
        public readonly string? VmId;

        [OutputConstructor]
        private RestorePointSourceMetadataResponse(
            Outputs.DiagnosticsProfileResponse? diagnosticsProfile,

            Outputs.HardwareProfileResponse? hardwareProfile,

            string? licenseType,

            Outputs.OSProfileResponse? osProfile,

            Outputs.SecurityProfileResponse? securityProfile,

            Outputs.RestorePointSourceVMStorageProfileResponse? storageProfile,

            string? vmId)
        {
            DiagnosticsProfile = diagnosticsProfile;
            HardwareProfile = hardwareProfile;
            LicenseType = licenseType;
            OsProfile = osProfile;
            SecurityProfile = securityProfile;
            StorageProfile = storageProfile;
            VmId = vmId;
        }
    }
}
