// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute.V20160330.Outputs
{

    [OutputType]
    public sealed class VirtualMachinePropertiesResponseResult
    {
        /// <summary>
        /// Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). &lt;br&gt;&lt;br&gt; For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) &lt;br&gt;&lt;br&gt; Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? AvailabilitySet;
        /// <summary>
        /// Specifies the boot diagnostic settings state. &lt;br&gt;&lt;br&gt;Minimum api-version: 2015-06-15.
        /// </summary>
        public readonly Outputs.DiagnosticsProfileResponseResult? DiagnosticsProfile;
        /// <summary>
        /// Specifies the hardware settings for the virtual machine.
        /// </summary>
        public readonly Outputs.HardwareProfileResponseResult? HardwareProfile;
        /// <summary>
        /// The virtual machine instance view.
        /// </summary>
        public readonly Outputs.VirtualMachineInstanceViewResponseResult InstanceView;
        /// <summary>
        /// Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; Windows_Client &lt;br&gt;&lt;br&gt; Windows_Server &lt;br&gt;&lt;br&gt; If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. &lt;br&gt;&lt;br&gt; For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
        /// </summary>
        public readonly string? LicenseType;
        /// <summary>
        /// Specifies the network interfaces of the virtual machine.
        /// </summary>
        public readonly Outputs.NetworkProfileResponseResult? NetworkProfile;
        /// <summary>
        /// Specifies the operating system settings for the virtual machine.
        /// </summary>
        public readonly Outputs.OSProfileResponseResult? OsProfile;
        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Specifies the storage settings for the virtual machine disks.
        /// </summary>
        public readonly Outputs.StorageProfileResponseResult? StorageProfile;
        /// <summary>
        /// Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.
        /// </summary>
        public readonly string VmId;

        [OutputConstructor]
        private VirtualMachinePropertiesResponseResult(
            Outputs.SubResourceResponseResult? availabilitySet,

            Outputs.DiagnosticsProfileResponseResult? diagnosticsProfile,

            Outputs.HardwareProfileResponseResult? hardwareProfile,

            Outputs.VirtualMachineInstanceViewResponseResult instanceView,

            string? licenseType,

            Outputs.NetworkProfileResponseResult? networkProfile,

            Outputs.OSProfileResponseResult? osProfile,

            string provisioningState,

            Outputs.StorageProfileResponseResult? storageProfile,

            string vmId)
        {
            AvailabilitySet = availabilitySet;
            DiagnosticsProfile = diagnosticsProfile;
            HardwareProfile = hardwareProfile;
            InstanceView = instanceView;
            LicenseType = licenseType;
            NetworkProfile = networkProfile;
            OsProfile = osProfile;
            ProvisioningState = provisioningState;
            StorageProfile = storageProfile;
            VmId = vmId;
        }
    }
}
