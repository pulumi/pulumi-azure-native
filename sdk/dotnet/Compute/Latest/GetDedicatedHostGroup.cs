// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Compute.Latest
{
    public static class GetDedicatedHostGroup
    {
        public static Task<GetDedicatedHostGroupResult> InvokeAsync(GetDedicatedHostGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedHostGroupResult>("azure-nextgen:compute/latest:getDedicatedHostGroup", args ?? new GetDedicatedHostGroupArgs(), options.WithVersion());
    }


    public sealed class GetDedicatedHostGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The expand expression to apply on the operation. The response shows the list of instance view of the dedicated hosts under the dedicated host group.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the dedicated host group.
        /// </summary>
        [Input("hostGroupName", required: true)]
        public string HostGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDedicatedHostGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDedicatedHostGroupResult
    {
        /// <summary>
        /// A list of references to all dedicated hosts in the dedicated host group.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceReadOnlyResponse> Hosts;
        /// <summary>
        /// The dedicated host group instance view, which has the list of instance view of the dedicated hosts under the dedicated host group.
        /// </summary>
        public readonly Outputs.DedicatedHostGroupInstanceViewResponse InstanceView;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Number of fault domains that the host group can span.
        /// </summary>
        public readonly int PlatformFaultDomainCount;
        /// <summary>
        /// Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to 'true' when not provided. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
        /// </summary>
        public readonly bool? SupportAutomaticPlacement;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GetDedicatedHostGroupResult(
            ImmutableArray<Outputs.SubResourceReadOnlyResponse> hosts,

            Outputs.DedicatedHostGroupInstanceViewResponse instanceView,

            string location,

            string name,

            int platformFaultDomainCount,

            bool? supportAutomaticPlacement,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<string> zones)
        {
            Hosts = hosts;
            InstanceView = instanceView;
            Location = location;
            Name = name;
            PlatformFaultDomainCount = platformFaultDomainCount;
            SupportAutomaticPlacement = supportAutomaticPlacement;
            Tags = tags;
            Type = type;
            Zones = zones;
        }
    }
}
