// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Compute.Latest
{
    public static class GetGallery
    {
        public static Task<GetGalleryResult> InvokeAsync(GetGalleryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGalleryResult>("azure-nextgen:compute/latest:getGallery", args ?? new GetGalleryArgs(), options.WithVersion());
    }


    public sealed class GetGalleryArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Shared Image Gallery.
        /// </summary>
        [Input("galleryName", required: true)]
        public string GalleryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The select expression to apply on the operation.
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetGalleryArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGalleryResult
    {
        /// <summary>
        /// The description of this Shared Image Gallery resource. This property is updatable.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Describes the gallery unique name.
        /// </summary>
        public readonly Outputs.GalleryIdentifierResponse? Identifier;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Profile for gallery sharing to subscription or tenant
        /// </summary>
        public readonly Outputs.SharingProfileResponse? SharingProfile;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGalleryResult(
            string? description,

            Outputs.GalleryIdentifierResponse? identifier,

            string location,

            string name,

            string provisioningState,

            Outputs.SharingProfileResponse? sharingProfile,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Description = description;
            Identifier = identifier;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SharingProfile = sharingProfile;
            Tags = tags;
            Type = type;
        }
    }
}
