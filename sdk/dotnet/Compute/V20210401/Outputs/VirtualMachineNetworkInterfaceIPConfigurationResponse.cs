// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20210401.Outputs
{

    /// <summary>
    /// Describes a virtual machine network profile's IP configuration.
    /// </summary>
    [OutputType]
    public sealed class VirtualMachineNetworkInterfaceIPConfigurationResponse
    {
        /// <summary>
        /// Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> ApplicationGatewayBackendAddressPools;
        /// <summary>
        /// Specifies an array of references to application security group.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> ApplicationSecurityGroups;
        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer].
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> LoadBalancerBackendAddressPools;
        /// <summary>
        /// The IP configuration name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        /// </summary>
        public readonly bool? Primary;
        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
        /// </summary>
        public readonly string? PrivateIPAddressVersion;
        /// <summary>
        /// The publicIPAddressConfiguration.
        /// </summary>
        public readonly Outputs.VirtualMachinePublicIPAddressConfigurationResponse? PublicIPAddressConfiguration;
        /// <summary>
        /// Specifies the identifier of the subnet.
        /// </summary>
        public readonly Outputs.SubResourceResponse? Subnet;

        [OutputConstructor]
        private VirtualMachineNetworkInterfaceIPConfigurationResponse(
            ImmutableArray<Outputs.SubResourceResponse> applicationGatewayBackendAddressPools,

            ImmutableArray<Outputs.SubResourceResponse> applicationSecurityGroups,

            ImmutableArray<Outputs.SubResourceResponse> loadBalancerBackendAddressPools,

            string name,

            bool? primary,

            string? privateIPAddressVersion,

            Outputs.VirtualMachinePublicIPAddressConfigurationResponse? publicIPAddressConfiguration,

            Outputs.SubResourceResponse? subnet)
        {
            ApplicationGatewayBackendAddressPools = applicationGatewayBackendAddressPools;
            ApplicationSecurityGroups = applicationSecurityGroups;
            LoadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            Name = name;
            Primary = primary;
            PrivateIPAddressVersion = privateIPAddressVersion;
            PublicIPAddressConfiguration = publicIPAddressConfiguration;
            Subnet = subnet;
        }
    }
}
