// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20210401
{
    public static class GetRestorePoint
    {
        /// <summary>
        /// Restore Point details.
        /// </summary>
        public static Task<GetRestorePointResult> InvokeAsync(GetRestorePointArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRestorePointResult>("azure-native:compute/v20210401:getRestorePoint", args ?? new GetRestorePointArgs(), options.WithDefaults());

        /// <summary>
        /// Restore Point details.
        /// </summary>
        public static Output<GetRestorePointResult> Invoke(GetRestorePointInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRestorePointResult>("azure-native:compute/v20210401:getRestorePoint", args ?? new GetRestorePointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRestorePointArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the restore point collection.
        /// </summary>
        [Input("restorePointCollectionName", required: true)]
        public string RestorePointCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the restore point.
        /// </summary>
        [Input("restorePointName", required: true)]
        public string RestorePointName { get; set; } = null!;

        public GetRestorePointArgs()
        {
        }
    }

    public sealed class GetRestorePointInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the restore point collection.
        /// </summary>
        [Input("restorePointCollectionName", required: true)]
        public Input<string> RestorePointCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the restore point.
        /// </summary>
        [Input("restorePointName", required: true)]
        public Input<string> RestorePointName { get; set; } = null!;

        public GetRestorePointInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRestorePointResult
    {
        /// <summary>
        /// Gets the consistency mode for the restore point. Please refer to https://aka.ms/RestorePoints for more details.
        /// </summary>
        public readonly string ConsistencyMode;
        /// <summary>
        /// List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApiEntityReferenceResponse> ExcludeDisks;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets the provisioning state of the restore point.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Gets the details of the VM captured at the time of the restore point creation.
        /// </summary>
        public readonly Outputs.RestorePointSourceMetadataResponse SourceMetadata;
        /// <summary>
        /// Gets the creation time of the restore point.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRestorePointResult(
            string consistencyMode,

            ImmutableArray<Outputs.ApiEntityReferenceResponse> excludeDisks,

            string id,

            string name,

            string provisioningState,

            Outputs.RestorePointSourceMetadataResponse sourceMetadata,

            string? timeCreated,

            string type)
        {
            ConsistencyMode = consistencyMode;
            ExcludeDisks = excludeDisks;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SourceMetadata = sourceMetadata;
            TimeCreated = timeCreated;
            Type = type;
        }
    }
}
