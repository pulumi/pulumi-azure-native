// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute.Outputs
{

    [OutputType]
    public sealed class GalleryImagePropertiesResponse
    {
        /// <summary>
        /// The description of this gallery Image Definition resource. This property is updatable.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Describes the disallowed disk types.
        /// </summary>
        public readonly Outputs.DisallowedResponse? Disallowed;
        /// <summary>
        /// The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable.
        /// </summary>
        public readonly string? EndOfLifeDate;
        /// <summary>
        /// The Eula agreement for the gallery Image Definition.
        /// </summary>
        public readonly string? Eula;
        /// <summary>
        /// The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
        /// </summary>
        public readonly string? HyperVGeneration;
        /// <summary>
        /// This is the gallery Image Definition identifier.
        /// </summary>
        public readonly Outputs.GalleryImageIdentifierResponse Identifier;
        /// <summary>
        /// This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
        /// </summary>
        public readonly string OsState;
        /// <summary>
        /// This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// The privacy statement uri.
        /// </summary>
        public readonly string? PrivacyStatementUri;
        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Describes the gallery Image Definition purchase plan. This is used by marketplace images.
        /// </summary>
        public readonly Outputs.ImagePurchasePlanResponse? PurchasePlan;
        /// <summary>
        /// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
        /// </summary>
        public readonly Outputs.RecommendedMachineConfigurationResponse? Recommended;
        /// <summary>
        /// The release note uri.
        /// </summary>
        public readonly string? ReleaseNoteUri;

        [OutputConstructor]
        private GalleryImagePropertiesResponse(
            string? description,

            Outputs.DisallowedResponse? disallowed,

            string? endOfLifeDate,

            string? eula,

            string? hyperVGeneration,

            Outputs.GalleryImageIdentifierResponse identifier,

            string osState,

            string osType,

            string? privacyStatementUri,

            string provisioningState,

            Outputs.ImagePurchasePlanResponse? purchasePlan,

            Outputs.RecommendedMachineConfigurationResponse? recommended,

            string? releaseNoteUri)
        {
            Description = description;
            Disallowed = disallowed;
            EndOfLifeDate = endOfLifeDate;
            Eula = eula;
            HyperVGeneration = hyperVGeneration;
            Identifier = identifier;
            OsState = osState;
            OsType = osType;
            PrivacyStatementUri = privacyStatementUri;
            ProvisioningState = provisioningState;
            PurchasePlan = purchasePlan;
            Recommended = recommended;
            ReleaseNoteUri = releaseNoteUri;
        }
    }
}
