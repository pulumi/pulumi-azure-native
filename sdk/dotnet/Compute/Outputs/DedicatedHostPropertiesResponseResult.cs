// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute.Outputs
{

    [OutputType]
    public sealed class DedicatedHostPropertiesResponseResult
    {
        /// <summary>
        /// Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided.
        /// </summary>
        public readonly bool? AutoReplaceOnFailure;
        /// <summary>
        /// A unique id generated and assigned to the dedicated host by the platform. &lt;br&gt;&lt;br&gt; Does not change throughout the lifetime of the host.
        /// </summary>
        public readonly string HostId;
        /// <summary>
        /// The dedicated host instance view.
        /// </summary>
        public readonly Outputs.DedicatedHostInstanceViewResponseResult InstanceView;
        /// <summary>
        /// Specifies the software license type that will be applied to the VMs deployed on the dedicated host. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **None** &lt;br&gt;&lt;br&gt; **Windows_Server_Hybrid** &lt;br&gt;&lt;br&gt; **Windows_Server_Perpetual** &lt;br&gt;&lt;br&gt; Default: **None**
        /// </summary>
        public readonly string? LicenseType;
        /// <summary>
        /// Fault domain of the dedicated host within a dedicated host group.
        /// </summary>
        public readonly int? PlatformFaultDomain;
        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The date when the host was first provisioned.
        /// </summary>
        public readonly string ProvisioningTime;
        /// <summary>
        /// A list of references to all virtual machines in the Dedicated Host.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceReadOnlyResponseResult> VirtualMachines;

        [OutputConstructor]
        private DedicatedHostPropertiesResponseResult(
            bool? autoReplaceOnFailure,

            string hostId,

            Outputs.DedicatedHostInstanceViewResponseResult instanceView,

            string? licenseType,

            int? platformFaultDomain,

            string provisioningState,

            string provisioningTime,

            ImmutableArray<Outputs.SubResourceReadOnlyResponseResult> virtualMachines)
        {
            AutoReplaceOnFailure = autoReplaceOnFailure;
            HostId = hostId;
            InstanceView = instanceView;
            LicenseType = licenseType;
            PlatformFaultDomain = platformFaultDomain;
            ProvisioningState = provisioningState;
            ProvisioningTime = provisioningTime;
            VirtualMachines = virtualMachines;
        }
    }
}
