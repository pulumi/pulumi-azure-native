// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.Outputs
{

    /// <summary>
    /// Specifies ProxyAgent settings for the virtual machine or virtual machine scale set. Minimum api-version: 2023-09-01.
    /// </summary>
    [OutputType]
    public sealed class ProxyAgentSettingsResponse
    {
        /// <summary>
        /// Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Specifies the IMDS endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01.
        /// </summary>
        public readonly Outputs.HostEndpointSettingsResponse? Imds;
        /// <summary>
        /// Increase the value of this property allows users to reset the key used for securing communication channel between guest and host.
        /// </summary>
        public readonly int? KeyIncarnationId;
        /// <summary>
        /// Specifies the mode that ProxyAgent will execute on. Warning: this property has been deprecated, please specify 'mode' under particular hostendpoint setting.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// Specifies the Wire Server endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01.
        /// </summary>
        public readonly Outputs.HostEndpointSettingsResponse? WireServer;

        [OutputConstructor]
        private ProxyAgentSettingsResponse(
            bool? enabled,

            Outputs.HostEndpointSettingsResponse? imds,

            int? keyIncarnationId,

            string? mode,

            Outputs.HostEndpointSettingsResponse? wireServer)
        {
            Enabled = enabled;
            Imds = imds;
            KeyIncarnationId = keyIncarnationId;
            Mode = mode;
            WireServer = wireServer;
        }
    }
}
