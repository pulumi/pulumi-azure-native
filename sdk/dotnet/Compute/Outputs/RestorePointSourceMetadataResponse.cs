// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.Outputs
{

    /// <summary>
    /// Describes the properties of the Virtual Machine for which the restore point was created. The properties provided are a subset and the snapshot of the overall Virtual Machine properties captured at the time of the restore point creation.
    /// </summary>
    [OutputType]
    public sealed class RestorePointSourceMetadataResponse
    {
        /// <summary>
        /// Gets the diagnostics profile.
        /// </summary>
        public readonly Outputs.DiagnosticsProfileResponse DiagnosticsProfile;
        /// <summary>
        /// Gets the hardware profile.
        /// </summary>
        public readonly Outputs.HardwareProfileResponse HardwareProfile;
        /// <summary>
        /// HyperVGeneration of the source VM for which restore point is captured.
        /// </summary>
        public readonly string HyperVGeneration;
        /// <summary>
        /// Gets the license type, which is for bring your own license scenario.
        /// </summary>
        public readonly string LicenseType;
        /// <summary>
        /// Location of the VM from which the restore point was created.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Gets the OS profile.
        /// </summary>
        public readonly Outputs.OSProfileResponse OsProfile;
        /// <summary>
        /// Gets the security profile.
        /// </summary>
        public readonly Outputs.SecurityProfileResponse SecurityProfile;
        /// <summary>
        /// Gets the storage profile.
        /// </summary>
        public readonly Outputs.RestorePointSourceVMStorageProfileResponse? StorageProfile;
        /// <summary>
        /// UserData associated with the source VM for which restore point is captured, which is a base-64 encoded value.
        /// </summary>
        public readonly string UserData;
        /// <summary>
        /// Gets the virtual machine unique id.
        /// </summary>
        public readonly string VmId;

        [OutputConstructor]
        private RestorePointSourceMetadataResponse(
            Outputs.DiagnosticsProfileResponse diagnosticsProfile,

            Outputs.HardwareProfileResponse hardwareProfile,

            string hyperVGeneration,

            string licenseType,

            string location,

            Outputs.OSProfileResponse osProfile,

            Outputs.SecurityProfileResponse securityProfile,

            Outputs.RestorePointSourceVMStorageProfileResponse? storageProfile,

            string userData,

            string vmId)
        {
            DiagnosticsProfile = diagnosticsProfile;
            HardwareProfile = hardwareProfile;
            HyperVGeneration = hyperVGeneration;
            LicenseType = licenseType;
            Location = location;
            OsProfile = osProfile;
            SecurityProfile = securityProfile;
            StorageProfile = storageProfile;
            UserData = userData;
            VmId = vmId;
        }
    }
}
