// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20230301.Inputs
{

    /// <summary>
    /// Describes a data disk.
    /// </summary>
    public sealed class DataDiskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**
        /// </summary>
        [Input("caching")]
        public Input<Pulumi.AzureNative.Compute.V20230301.CachingTypes>? Caching { get; set; }

        /// <summary>
        /// Specifies how the virtual machine should be created. Possible values are: **Attach.** This value is used when you are using a specialized disk to create the virtual machine. **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described.
        /// </summary>
        [Input("createOption", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Compute.V20230301.DiskCreateOptionTypes> CreateOption { get; set; } = null!;

        /// <summary>
        /// Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the data disk is deleted when VM is deleted. **Detach.** If this value is used, the data disk is retained after VM is deleted. The default value is set to **Detach**.
        /// </summary>
        [Input("deleteOption")]
        public InputUnion<string, Pulumi.AzureNative.Compute.V20230301.DiskDeleteOptionTypes>? DeleteOption { get; set; }

        /// <summary>
        /// Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach.** detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. **This feature is still in preview** mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'.
        /// </summary>
        [Input("detachOption")]
        public InputUnion<string, Pulumi.AzureNative.Compute.V20230301.DiskDetachOptionTypes>? DetachOption { get; set; }

        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023.
        /// </summary>
        [Input("diskSizeGB")]
        public Input<int>? DiskSizeGB { get; set; }

        /// <summary>
        /// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
        /// </summary>
        [Input("image")]
        public Input<Inputs.VirtualHardDiskArgs>? Image { get; set; }

        /// <summary>
        /// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        /// </summary>
        [Input("lun", required: true)]
        public Input<int> Lun { get; set; } = null!;

        /// <summary>
        /// The managed disk parameters.
        /// </summary>
        [Input("managedDisk")]
        public Input<Inputs.ManagedDiskParametersArgs>? ManagedDisk { get; set; }

        /// <summary>
        /// The disk name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset
        /// </summary>
        [Input("toBeDetached")]
        public Input<bool>? ToBeDetached { get; set; }

        /// <summary>
        /// The virtual hard disk.
        /// </summary>
        [Input("vhd")]
        public Input<Inputs.VirtualHardDiskArgs>? Vhd { get; set; }

        /// <summary>
        /// Specifies whether writeAccelerator should be enabled or disabled on the disk.
        /// </summary>
        [Input("writeAcceleratorEnabled")]
        public Input<bool>? WriteAcceleratorEnabled { get; set; }

        public DataDiskArgs()
        {
        }
        public static new DataDiskArgs Empty => new DataDiskArgs();
    }
}
