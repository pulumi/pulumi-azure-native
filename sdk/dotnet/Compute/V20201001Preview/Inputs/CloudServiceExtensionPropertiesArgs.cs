// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Compute.V20201001Preview.Inputs
{

    /// <summary>
    /// Extension Properties.
    /// </summary>
    public sealed class CloudServiceExtensionPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
        /// </summary>
        [Input("autoUpgradeMinorVersion")]
        public Input<bool>? AutoUpgradeMinorVersion { get; set; }

        /// <summary>
        /// Tag to force apply the provided public and protected settings.
        /// Changing the tag value allows for re-running the extension without changing any of the public or protected settings.
        /// If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.
        /// If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and
        /// it is up to handler implementation whether to re-run it or not
        /// </summary>
        [Input("forceUpdateTag")]
        public Input<string>? ForceUpdateTag { get; set; }

        /// <summary>
        /// Protected settings for the extension which are encrypted before sent to the role instance.
        /// </summary>
        [Input("protectedSettings")]
        public Input<string>? ProtectedSettings { get; set; }

        [Input("protectedSettingsFromKeyVault")]
        public Input<Inputs.CloudServiceVaultAndSecretReferenceArgs>? ProtectedSettingsFromKeyVault { get; set; }

        /// <summary>
        /// The name of the extension handler publisher.
        /// </summary>
        [Input("publisher")]
        public Input<string>? Publisher { get; set; }

        [Input("rolesAppliedTo")]
        private InputList<string>? _rolesAppliedTo;

        /// <summary>
        /// Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
        /// </summary>
        public InputList<string> RolesAppliedTo
        {
            get => _rolesAppliedTo ?? (_rolesAppliedTo = new InputList<string>());
            set => _rolesAppliedTo = value;
        }

        /// <summary>
        /// Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
        /// </summary>
        [Input("settings")]
        public Input<string>? Settings { get; set; }

        /// <summary>
        /// Specifies the type of the extension.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
        /// </summary>
        [Input("typeHandlerVersion")]
        public Input<string>? TypeHandlerVersion { get; set; }

        public CloudServiceExtensionPropertiesArgs()
        {
        }
    }
}
