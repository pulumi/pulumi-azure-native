// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute
{
    public static class GetVirtualMachineScaleSetVM
    {
        public static Task<GetVirtualMachineScaleSetVMResult> InvokeAsync(GetVirtualMachineScaleSetVMArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVirtualMachineScaleSetVMResult>("azurerm:compute:getVirtualMachineScaleSetVM", args ?? new GetVirtualMachineScaleSetVMArgs(), options.WithVersion());
    }


    public sealed class GetVirtualMachineScaleSetVMArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The instance ID of the virtual machine.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the VM scale set.
        /// </summary>
        [Input("vmScaleSetName", required: true)]
        public string VmScaleSetName { get; set; } = null!;

        public GetVirtualMachineScaleSetVMArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVirtualMachineScaleSetVMResult
    {
        /// <summary>
        /// The virtual machine instance ID.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**.
        /// </summary>
        public readonly Outputs.PlanResponseResult? Plan;
        /// <summary>
        /// Describes the properties of a virtual machine scale set virtual machine.
        /// </summary>
        public readonly Outputs.VirtualMachineScaleSetVMPropertiesResponseResult Properties;
        /// <summary>
        /// The virtual machine child extension resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualMachineExtensionResponseResult> Resources;
        /// <summary>
        /// The virtual machine SKU.
        /// </summary>
        public readonly Outputs.SkuResponseResult Sku;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The virtual machine zones.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GetVirtualMachineScaleSetVMResult(
            string instanceId,

            string location,

            string name,

            Outputs.PlanResponseResult? plan,

            Outputs.VirtualMachineScaleSetVMPropertiesResponseResult properties,

            ImmutableArray<Outputs.VirtualMachineExtensionResponseResult> resources,

            Outputs.SkuResponseResult sku,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<string> zones)
        {
            InstanceId = instanceId;
            Location = location;
            Name = name;
            Plan = plan;
            Properties = properties;
            Resources = resources;
            Sku = sku;
            Tags = tags;
            Type = type;
            Zones = zones;
        }
    }
}
