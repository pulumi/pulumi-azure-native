// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20230703.Inputs
{

    /// <summary>
    /// The publishing profile of a gallery image version.
    /// </summary>
    public sealed class GalleryApplicationVersionPublishingProfileArgs : global::Pulumi.ResourceArgs
    {
        [Input("advancedSettings")]
        private InputMap<string>? _advancedSettings;

        /// <summary>
        /// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
        /// </summary>
        public InputMap<string> AdvancedSettings
        {
            get => _advancedSettings ?? (_advancedSettings = new InputMap<string>());
            set => _advancedSettings = value;
        }

        [Input("customActions")]
        private InputList<Inputs.GalleryApplicationCustomActionArgs>? _customActions;

        /// <summary>
        /// A list of custom actions that can be performed with this Gallery Application Version.
        /// </summary>
        public InputList<Inputs.GalleryApplicationCustomActionArgs> CustomActions
        {
            get => _customActions ?? (_customActions = new InputList<Inputs.GalleryApplicationCustomActionArgs>());
            set => _customActions = value;
        }

        /// <summary>
        /// Optional. Whether or not this application reports health.
        /// </summary>
        [Input("enableHealthCheck")]
        public Input<bool>? EnableHealthCheck { get; set; }

        /// <summary>
        /// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
        /// </summary>
        [Input("endOfLifeDate")]
        public Input<string>? EndOfLifeDate { get; set; }

        /// <summary>
        /// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        /// </summary>
        [Input("excludeFromLatest")]
        public Input<bool>? ExcludeFromLatest { get; set; }

        [Input("manageActions")]
        public Input<Inputs.UserArtifactManageArgs>? ManageActions { get; set; }

        /// <summary>
        /// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
        /// </summary>
        [Input("replicaCount")]
        public Input<int>? ReplicaCount { get; set; }

        /// <summary>
        /// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
        /// </summary>
        [Input("replicationMode")]
        public InputUnion<string, Pulumi.AzureNative.Compute.V20230703.ReplicationMode>? ReplicationMode { get; set; }

        /// <summary>
        /// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
        /// </summary>
        [Input("settings")]
        public Input<Inputs.UserArtifactSettingsArgs>? Settings { get; set; }

        /// <summary>
        /// The source image from which the Image Version is going to be created.
        /// </summary>
        [Input("source", required: true)]
        public Input<Inputs.UserArtifactSourceArgs> Source { get; set; } = null!;

        /// <summary>
        /// Specifies the storage account type to be used to store the image. This property is not updatable.
        /// </summary>
        [Input("storageAccountType")]
        public InputUnion<string, Pulumi.AzureNative.Compute.V20230703.StorageAccountType>? StorageAccountType { get; set; }

        [Input("targetExtendedLocations")]
        private InputList<Inputs.GalleryTargetExtendedLocationArgs>? _targetExtendedLocations;

        /// <summary>
        /// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        public InputList<Inputs.GalleryTargetExtendedLocationArgs> TargetExtendedLocations
        {
            get => _targetExtendedLocations ?? (_targetExtendedLocations = new InputList<Inputs.GalleryTargetExtendedLocationArgs>());
            set => _targetExtendedLocations = value;
        }

        [Input("targetRegions")]
        private InputList<Inputs.TargetRegionArgs>? _targetRegions;

        /// <summary>
        /// The target regions where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        public InputList<Inputs.TargetRegionArgs> TargetRegions
        {
            get => _targetRegions ?? (_targetRegions = new InputList<Inputs.TargetRegionArgs>());
            set => _targetRegions = value;
        }

        public GalleryApplicationVersionPublishingProfileArgs()
        {
        }
        public static new GalleryApplicationVersionPublishingProfileArgs Empty => new GalleryApplicationVersionPublishingProfileArgs();
    }
}
