// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20201201
{
    public static class GetLogAnalyticExportThrottledRequests
    {
        /// <summary>
        /// Export logs that show total throttled Api requests for this subscription in the given time window.
        /// </summary>
        public static Task<GetLogAnalyticExportThrottledRequestsResult> InvokeAsync(GetLogAnalyticExportThrottledRequestsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogAnalyticExportThrottledRequestsResult>("azure-native:compute/v20201201:getLogAnalyticExportThrottledRequests", args ?? new GetLogAnalyticExportThrottledRequestsArgs(), options.WithDefaults());

        /// <summary>
        /// Export logs that show total throttled Api requests for this subscription in the given time window.
        /// </summary>
        public static Output<GetLogAnalyticExportThrottledRequestsResult> Invoke(GetLogAnalyticExportThrottledRequestsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogAnalyticExportThrottledRequestsResult>("azure-native:compute/v20201201:getLogAnalyticExportThrottledRequests", args ?? new GetLogAnalyticExportThrottledRequestsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogAnalyticExportThrottledRequestsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
        /// </summary>
        [Input("blobContainerSasUri", required: true)]
        public string BlobContainerSasUri { get; set; } = null!;

        /// <summary>
        /// From time of the query
        /// </summary>
        [Input("fromTime", required: true)]
        public string FromTime { get; set; } = null!;

        /// <summary>
        /// Group query result by Client Application ID.
        /// </summary>
        [Input("groupByClientApplicationId")]
        public bool? GroupByClientApplicationId { get; set; }

        /// <summary>
        /// Group query result by Operation Name.
        /// </summary>
        [Input("groupByOperationName")]
        public bool? GroupByOperationName { get; set; }

        /// <summary>
        /// Group query result by Resource Name.
        /// </summary>
        [Input("groupByResourceName")]
        public bool? GroupByResourceName { get; set; }

        /// <summary>
        /// Group query result by Throttle Policy applied.
        /// </summary>
        [Input("groupByThrottlePolicy")]
        public bool? GroupByThrottlePolicy { get; set; }

        /// <summary>
        /// Group query result by User Agent.
        /// </summary>
        [Input("groupByUserAgent")]
        public bool? GroupByUserAgent { get; set; }

        /// <summary>
        /// The location upon which virtual-machine-sizes is queried.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// To time of the query
        /// </summary>
        [Input("toTime", required: true)]
        public string ToTime { get; set; } = null!;

        public GetLogAnalyticExportThrottledRequestsArgs()
        {
        }
        public static new GetLogAnalyticExportThrottledRequestsArgs Empty => new GetLogAnalyticExportThrottledRequestsArgs();
    }

    public sealed class GetLogAnalyticExportThrottledRequestsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
        /// </summary>
        [Input("blobContainerSasUri", required: true)]
        public Input<string> BlobContainerSasUri { get; set; } = null!;

        /// <summary>
        /// From time of the query
        /// </summary>
        [Input("fromTime", required: true)]
        public Input<string> FromTime { get; set; } = null!;

        /// <summary>
        /// Group query result by Client Application ID.
        /// </summary>
        [Input("groupByClientApplicationId")]
        public Input<bool>? GroupByClientApplicationId { get; set; }

        /// <summary>
        /// Group query result by Operation Name.
        /// </summary>
        [Input("groupByOperationName")]
        public Input<bool>? GroupByOperationName { get; set; }

        /// <summary>
        /// Group query result by Resource Name.
        /// </summary>
        [Input("groupByResourceName")]
        public Input<bool>? GroupByResourceName { get; set; }

        /// <summary>
        /// Group query result by Throttle Policy applied.
        /// </summary>
        [Input("groupByThrottlePolicy")]
        public Input<bool>? GroupByThrottlePolicy { get; set; }

        /// <summary>
        /// Group query result by User Agent.
        /// </summary>
        [Input("groupByUserAgent")]
        public Input<bool>? GroupByUserAgent { get; set; }

        /// <summary>
        /// The location upon which virtual-machine-sizes is queried.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// To time of the query
        /// </summary>
        [Input("toTime", required: true)]
        public Input<string> ToTime { get; set; } = null!;

        public GetLogAnalyticExportThrottledRequestsInvokeArgs()
        {
        }
        public static new GetLogAnalyticExportThrottledRequestsInvokeArgs Empty => new GetLogAnalyticExportThrottledRequestsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogAnalyticExportThrottledRequestsResult
    {
        /// <summary>
        /// LogAnalyticsOutput
        /// </summary>
        public readonly Outputs.LogAnalyticsOutputResponse Properties;

        [OutputConstructor]
        private GetLogAnalyticExportThrottledRequestsResult(Outputs.LogAnalyticsOutputResponse properties)
        {
            Properties = properties;
        }
    }
}
