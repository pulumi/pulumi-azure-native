// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20230901.Outputs
{

    /// <summary>
    /// The instance view of a dedicated host that includes the name of the dedicated host. It is used for the response to the instance view of a dedicated host group.
    /// </summary>
    [OutputType]
    public sealed class DedicatedHostInstanceViewWithNameResponse
    {
        /// <summary>
        /// Specifies the unique id of the dedicated physical machine on which the dedicated host resides.
        /// </summary>
        public readonly string AssetId;
        /// <summary>
        /// Unutilized capacity of the dedicated host.
        /// </summary>
        public readonly Outputs.DedicatedHostAvailableCapacityResponse? AvailableCapacity;
        /// <summary>
        /// The name of the dedicated host.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource status information.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceViewStatusResponse> Statuses;

        [OutputConstructor]
        private DedicatedHostInstanceViewWithNameResponse(
            string assetId,

            Outputs.DedicatedHostAvailableCapacityResponse? availableCapacity,

            string name,

            ImmutableArray<Outputs.InstanceViewStatusResponse> statuses)
        {
            AssetId = assetId;
            AvailableCapacity = availableCapacity;
            Name = name;
            Statuses = statuses;
        }
    }
}
