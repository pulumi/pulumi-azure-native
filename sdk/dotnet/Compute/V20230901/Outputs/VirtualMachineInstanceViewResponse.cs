// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20230901.Outputs
{

    /// <summary>
    /// The instance view of a virtual machine.
    /// </summary>
    [OutputType]
    public sealed class VirtualMachineInstanceViewResponse
    {
        /// <summary>
        /// Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. Minimum api-version: 2020-06-01.
        /// </summary>
        public readonly string AssignedHost;
        /// <summary>
        /// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.
        /// </summary>
        public readonly Outputs.BootDiagnosticsInstanceViewResponse? BootDiagnostics;
        /// <summary>
        /// The computer name assigned to the virtual machine.
        /// </summary>
        public readonly string? ComputerName;
        /// <summary>
        /// The virtual machine disk information.
        /// </summary>
        public readonly ImmutableArray<Outputs.DiskInstanceViewResponse> Disks;
        /// <summary>
        /// The extensions information.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualMachineExtensionInstanceViewResponse> Extensions;
        /// <summary>
        /// Specifies the HyperVGeneration Type associated with a resource
        /// </summary>
        public readonly string? HyperVGeneration;
        /// <summary>
        /// [Preview Feature] Specifies whether the VM is currently in or out of the Standby Pool.
        /// </summary>
        public readonly bool IsVMInStandbyPool;
        /// <summary>
        /// The Maintenance Operation status on the virtual machine.
        /// </summary>
        public readonly Outputs.MaintenanceRedeployStatusResponse? MaintenanceRedeployStatus;
        /// <summary>
        /// The Operating System running on the virtual machine.
        /// </summary>
        public readonly string? OsName;
        /// <summary>
        /// The version of Operating System running on the virtual machine.
        /// </summary>
        public readonly string? OsVersion;
        /// <summary>
        /// [Preview Feature] The status of virtual machine patch operations.
        /// </summary>
        public readonly Outputs.VirtualMachinePatchStatusResponse? PatchStatus;
        /// <summary>
        /// Specifies the fault domain of the virtual machine.
        /// </summary>
        public readonly int? PlatformFaultDomain;
        /// <summary>
        /// Specifies the update domain of the virtual machine.
        /// </summary>
        public readonly int? PlatformUpdateDomain;
        /// <summary>
        /// The Remote desktop certificate thumbprint.
        /// </summary>
        public readonly string? RdpThumbPrint;
        /// <summary>
        /// The resource status information.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceViewStatusResponse> Statuses;
        /// <summary>
        /// The VM Agent running on the virtual machine.
        /// </summary>
        public readonly Outputs.VirtualMachineAgentInstanceViewResponse? VmAgent;
        /// <summary>
        /// The health status for the VM.
        /// </summary>
        public readonly Outputs.VirtualMachineHealthStatusResponse VmHealth;

        [OutputConstructor]
        private VirtualMachineInstanceViewResponse(
            string assignedHost,

            Outputs.BootDiagnosticsInstanceViewResponse? bootDiagnostics,

            string? computerName,

            ImmutableArray<Outputs.DiskInstanceViewResponse> disks,

            ImmutableArray<Outputs.VirtualMachineExtensionInstanceViewResponse> extensions,

            string? hyperVGeneration,

            bool isVMInStandbyPool,

            Outputs.MaintenanceRedeployStatusResponse? maintenanceRedeployStatus,

            string? osName,

            string? osVersion,

            Outputs.VirtualMachinePatchStatusResponse? patchStatus,

            int? platformFaultDomain,

            int? platformUpdateDomain,

            string? rdpThumbPrint,

            ImmutableArray<Outputs.InstanceViewStatusResponse> statuses,

            Outputs.VirtualMachineAgentInstanceViewResponse? vmAgent,

            Outputs.VirtualMachineHealthStatusResponse vmHealth)
        {
            AssignedHost = assignedHost;
            BootDiagnostics = bootDiagnostics;
            ComputerName = computerName;
            Disks = disks;
            Extensions = extensions;
            HyperVGeneration = hyperVGeneration;
            IsVMInStandbyPool = isVMInStandbyPool;
            MaintenanceRedeployStatus = maintenanceRedeployStatus;
            OsName = osName;
            OsVersion = osVersion;
            PatchStatus = patchStatus;
            PlatformFaultDomain = platformFaultDomain;
            PlatformUpdateDomain = platformUpdateDomain;
            RdpThumbPrint = rdpThumbPrint;
            Statuses = statuses;
            VmAgent = vmAgent;
            VmHealth = vmHealth;
        }
    }
}
