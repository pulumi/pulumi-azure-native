// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20230901
{
    /// <summary>
    /// Restore Point details.
    /// </summary>
    [AzureNativeResourceType("azure-native:compute/v20230901:RestorePoint")]
    public partial class RestorePoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ConsistencyMode of the RestorePoint. Can be specified in the input while creating a restore point. For now, only CrashConsistent is accepted as a valid input. Please refer to https://aka.ms/RestorePoints for more details.
        /// </summary>
        [Output("consistencyMode")]
        public Output<string?> ConsistencyMode { get; private set; } = null!;

        /// <summary>
        /// List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
        /// </summary>
        [Output("excludeDisks")]
        public Output<ImmutableArray<Outputs.ApiEntityReferenceResponse>> ExcludeDisks { get; private set; } = null!;

        /// <summary>
        /// The restore point instance view.
        /// </summary>
        [Output("instanceView")]
        public Output<Outputs.RestorePointInstanceViewResponse> InstanceView { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets the provisioning state of the restore point.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Gets the details of the VM captured at the time of the restore point creation.
        /// </summary>
        [Output("sourceMetadata")]
        public Output<Outputs.RestorePointSourceMetadataResponse?> SourceMetadata { get; private set; } = null!;

        /// <summary>
        /// Resource Id of the source restore point from which a copy needs to be created.
        /// </summary>
        [Output("sourceRestorePoint")]
        public Output<Outputs.ApiEntityReferenceResponse?> SourceRestorePoint { get; private set; } = null!;

        /// <summary>
        /// Gets the creation time of the restore point.
        /// </summary>
        [Output("timeCreated")]
        public Output<string?> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RestorePoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RestorePoint(string name, RestorePointArgs args, CustomResourceOptions? options = null)
            : base("azure-native:compute/v20230901:RestorePoint", name, args ?? new RestorePointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RestorePoint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:compute/v20230901:RestorePoint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:compute:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20210301:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20210401:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20210701:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20211101:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20220301:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20220801:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20221101:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20230301:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20230701:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20240301:RestorePoint" },
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20240701:RestorePoint" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RestorePoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RestorePoint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RestorePoint(name, id, options);
        }
    }

    public sealed class RestorePointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ConsistencyMode of the RestorePoint. Can be specified in the input while creating a restore point. For now, only CrashConsistent is accepted as a valid input. Please refer to https://aka.ms/RestorePoints for more details.
        /// </summary>
        [Input("consistencyMode")]
        public InputUnion<string, Pulumi.AzureNative.Compute.V20230901.ConsistencyModeTypes>? ConsistencyMode { get; set; }

        [Input("excludeDisks")]
        private InputList<Inputs.ApiEntityReferenceArgs>? _excludeDisks;

        /// <summary>
        /// List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
        /// </summary>
        public InputList<Inputs.ApiEntityReferenceArgs> ExcludeDisks
        {
            get => _excludeDisks ?? (_excludeDisks = new InputList<Inputs.ApiEntityReferenceArgs>());
            set => _excludeDisks = value;
        }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the restore point collection.
        /// </summary>
        [Input("restorePointCollectionName", required: true)]
        public Input<string> RestorePointCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the restore point.
        /// </summary>
        [Input("restorePointName")]
        public Input<string>? RestorePointName { get; set; }

        /// <summary>
        /// Gets the details of the VM captured at the time of the restore point creation.
        /// </summary>
        [Input("sourceMetadata")]
        public Input<Inputs.RestorePointSourceMetadataArgs>? SourceMetadata { get; set; }

        /// <summary>
        /// Resource Id of the source restore point from which a copy needs to be created.
        /// </summary>
        [Input("sourceRestorePoint")]
        public Input<Inputs.ApiEntityReferenceArgs>? SourceRestorePoint { get; set; }

        /// <summary>
        /// Gets the creation time of the restore point.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        public RestorePointArgs()
        {
        }
        public static new RestorePointArgs Empty => new RestorePointArgs();
    }
}
