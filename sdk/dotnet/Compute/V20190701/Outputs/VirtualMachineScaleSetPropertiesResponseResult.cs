// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute.V20190701.Outputs
{

    [OutputType]
    public sealed class VirtualMachineScaleSetPropertiesResponseResult
    {
        /// <summary>
        /// Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
        /// </summary>
        public readonly Outputs.AdditionalCapabilitiesResponseResult? AdditionalCapabilities;
        /// <summary>
        /// Policy for automatic repairs.
        /// </summary>
        public readonly Outputs.AutomaticRepairsPolicyResponseResult? AutomaticRepairsPolicy;
        /// <summary>
        /// When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
        /// </summary>
        public readonly bool? DoNotRunExtensionsOnOverprovisionedVMs;
        /// <summary>
        /// Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        /// </summary>
        public readonly bool? Overprovision;
        /// <summary>
        /// Fault Domain count for each placement group.
        /// </summary>
        public readonly int? PlatformFaultDomainCount;
        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? ProximityPlacementGroup;
        /// <summary>
        /// Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
        /// </summary>
        public readonly Outputs.ScaleInPolicyResponseResult? ScaleInPolicy;
        /// <summary>
        /// When true this limits the scale set to a single placement group, of max size 100 virtual machines.
        /// </summary>
        public readonly bool? SinglePlacementGroup;
        /// <summary>
        /// Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
        /// </summary>
        public readonly string UniqueId;
        /// <summary>
        /// The upgrade policy.
        /// </summary>
        public readonly Outputs.UpgradePolicyResponseResult? UpgradePolicy;
        /// <summary>
        /// The virtual machine profile.
        /// </summary>
        public readonly Outputs.VirtualMachineScaleSetVMProfileResponseResult? VirtualMachineProfile;
        /// <summary>
        /// Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
        /// </summary>
        public readonly bool? ZoneBalance;

        [OutputConstructor]
        private VirtualMachineScaleSetPropertiesResponseResult(
            Outputs.AdditionalCapabilitiesResponseResult? additionalCapabilities,

            Outputs.AutomaticRepairsPolicyResponseResult? automaticRepairsPolicy,

            bool? doNotRunExtensionsOnOverprovisionedVMs,

            bool? overprovision,

            int? platformFaultDomainCount,

            string provisioningState,

            Outputs.SubResourceResponseResult? proximityPlacementGroup,

            Outputs.ScaleInPolicyResponseResult? scaleInPolicy,

            bool? singlePlacementGroup,

            string uniqueId,

            Outputs.UpgradePolicyResponseResult? upgradePolicy,

            Outputs.VirtualMachineScaleSetVMProfileResponseResult? virtualMachineProfile,

            bool? zoneBalance)
        {
            AdditionalCapabilities = additionalCapabilities;
            AutomaticRepairsPolicy = automaticRepairsPolicy;
            DoNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
            Overprovision = overprovision;
            PlatformFaultDomainCount = platformFaultDomainCount;
            ProvisioningState = provisioningState;
            ProximityPlacementGroup = proximityPlacementGroup;
            ScaleInPolicy = scaleInPolicy;
            SinglePlacementGroup = singlePlacementGroup;
            UniqueId = uniqueId;
            UpgradePolicy = upgradePolicy;
            VirtualMachineProfile = virtualMachineProfile;
            ZoneBalance = zoneBalance;
        }
    }
}
