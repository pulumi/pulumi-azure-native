// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20220301.Inputs
{

    /// <summary>
    /// Specifies the required information to reference a compute gallery application version
    /// </summary>
    public sealed class VMGalleryApplicationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided
        /// </summary>
        [Input("configurationReference")]
        public Input<string>? ConfigurationReference { get; set; }

        /// <summary>
        /// If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS
        /// </summary>
        [Input("enableAutomaticUpgrade")]
        public Input<bool>? EnableAutomaticUpgrade { get; set; }

        /// <summary>
        /// Optional, Specifies the order in which the packages have to be installed
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
        /// </summary>
        [Input("packageReferenceId", required: true)]
        public Input<string> PackageReferenceId { get; set; } = null!;

        /// <summary>
        /// Optional, Specifies a passthrough value for more generic context.
        /// </summary>
        [Input("tags")]
        public Input<string>? Tags { get; set; }

        /// <summary>
        /// Optional, If true, any failure for any operation in the VmApplication will fail the deployment
        /// </summary>
        [Input("treatFailureAsDeploymentFailure")]
        public Input<bool>? TreatFailureAsDeploymentFailure { get; set; }

        public VMGalleryApplicationArgs()
        {
        }
    }
}
