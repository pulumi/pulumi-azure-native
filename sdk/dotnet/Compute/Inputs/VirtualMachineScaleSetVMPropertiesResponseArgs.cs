// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute.Inputs
{

    /// <summary>
    /// Describes the properties of a virtual machine scale set virtual machine.
    /// </summary>
    public sealed class VirtualMachineScaleSetVMPropertiesResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies additional capabilities enabled or disabled on the virtual machine in the scale set. For instance: whether the virtual machine has the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
        /// </summary>
        [Input("additionalCapabilities")]
        public Input<Inputs.AdditionalCapabilitiesResponseArgs>? AdditionalCapabilities { get; set; }

        /// <summary>
        /// Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). &lt;br&gt;&lt;br&gt; For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) &lt;br&gt;&lt;br&gt; Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.
        /// </summary>
        [Input("availabilitySet")]
        public Input<Inputs.SubResourceResponseArgs>? AvailabilitySet { get; set; }

        /// <summary>
        /// Specifies the boot diagnostic settings state. &lt;br&gt;&lt;br&gt;Minimum api-version: 2015-06-15.
        /// </summary>
        [Input("diagnosticsProfile")]
        public Input<Inputs.DiagnosticsProfileResponseArgs>? DiagnosticsProfile { get; set; }

        /// <summary>
        /// Specifies the hardware settings for the virtual machine.
        /// </summary>
        [Input("hardwareProfile")]
        public Input<Inputs.HardwareProfileResponseArgs>? HardwareProfile { get; set; }

        /// <summary>
        /// The virtual machine instance view.
        /// </summary>
        [Input("instanceView", required: true)]
        public Input<Inputs.VirtualMachineScaleSetVMInstanceViewResponseArgs> InstanceView { get; set; } = null!;

        /// <summary>
        /// Specifies whether the latest model has been applied to the virtual machine.
        /// </summary>
        [Input("latestModelApplied", required: true)]
        public Input<bool> LatestModelApplied { get; set; } = null!;

        /// <summary>
        /// Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; Windows_Client &lt;br&gt;&lt;br&gt; Windows_Server &lt;br&gt;&lt;br&gt; If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. &lt;br&gt;&lt;br&gt; For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
        /// </summary>
        [Input("licenseType")]
        public Input<string>? LicenseType { get; set; }

        /// <summary>
        /// Specifies whether the model applied to the virtual machine is the model of the virtual machine scale set or the customized model for the virtual machine.
        /// </summary>
        [Input("modelDefinitionApplied", required: true)]
        public Input<string> ModelDefinitionApplied { get; set; } = null!;

        /// <summary>
        /// Specifies the network interfaces of the virtual machine.
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.NetworkProfileResponseArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// Specifies the network profile configuration of the virtual machine.
        /// </summary>
        [Input("networkProfileConfiguration")]
        public Input<Inputs.VirtualMachineScaleSetVMNetworkProfileConfigurationResponseArgs>? NetworkProfileConfiguration { get; set; }

        /// <summary>
        /// Specifies the operating system settings for the virtual machine.
        /// </summary>
        [Input("osProfile")]
        public Input<Inputs.OSProfileResponseArgs>? OsProfile { get; set; }

        /// <summary>
        /// Specifies the protection policy of the virtual machine.
        /// </summary>
        [Input("protectionPolicy")]
        public Input<Inputs.VirtualMachineScaleSetVMProtectionPolicyResponseArgs>? ProtectionPolicy { get; set; }

        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// Specifies the Security related profile settings for the virtual machine.
        /// </summary>
        [Input("securityProfile")]
        public Input<Inputs.SecurityProfileResponseArgs>? SecurityProfile { get; set; }

        /// <summary>
        /// Specifies the storage settings for the virtual machine disks.
        /// </summary>
        [Input("storageProfile")]
        public Input<Inputs.StorageProfileResponseArgs>? StorageProfile { get; set; }

        /// <summary>
        /// Azure VM unique ID.
        /// </summary>
        [Input("vmId", required: true)]
        public Input<string> VmId { get; set; } = null!;

        public VirtualMachineScaleSetVMPropertiesResponseArgs()
        {
        }
    }
}
