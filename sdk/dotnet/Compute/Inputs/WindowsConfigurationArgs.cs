// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.Inputs
{

    /// <summary>
    /// Specifies Windows operating system settings on the virtual machine.
    /// </summary>
    public sealed class WindowsConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalUnattendContent")]
        private InputList<Inputs.AdditionalUnattendContentArgs>? _additionalUnattendContent;

        /// <summary>
        /// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
        /// </summary>
        public InputList<Inputs.AdditionalUnattendContentArgs> AdditionalUnattendContent
        {
            get => _additionalUnattendContent ?? (_additionalUnattendContent = new InputList<Inputs.AdditionalUnattendContentArgs>());
            set => _additionalUnattendContent = value;
        }

        /// <summary>
        /// Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
        /// </summary>
        [Input("enableAutomaticUpdates")]
        public Input<bool>? EnableAutomaticUpdates { get; set; }

        /// <summary>
        /// Indicates whether VMAgent Platform Updates is enabled for the Windows virtual machine. Default value is false.
        /// </summary>
        [Input("enableVMAgentPlatformUpdates")]
        public Input<bool>? EnableVMAgentPlatformUpdates { get; set; }

        /// <summary>
        /// [Preview Feature] Specifies settings related to VM Guest Patching on Windows.
        /// </summary>
        [Input("patchSettings")]
        public Input<Inputs.PatchSettingsArgs>? PatchSettings { get; set; }

        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
        /// </summary>
        [Input("provisionVMAgent")]
        public Input<bool>? ProvisionVMAgent { get; set; }

        /// <summary>
        /// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
        /// </summary>
        [Input("winRM")]
        public Input<Inputs.WinRMConfigurationArgs>? WinRM { get; set; }

        public WindowsConfigurationArgs()
        {
        }
        public static new WindowsConfigurationArgs Empty => new WindowsConfigurationArgs();
    }
}
