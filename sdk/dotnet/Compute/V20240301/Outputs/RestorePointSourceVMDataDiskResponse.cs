// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20240301.Outputs
{

    /// <summary>
    /// Describes a data disk.
    /// </summary>
    [OutputType]
    public sealed class RestorePointSourceVMDataDiskResponse
    {
        /// <summary>
        /// Gets the caching type.
        /// </summary>
        public readonly string Caching;
        /// <summary>
        /// Contains Disk Restore Point properties.
        /// </summary>
        public readonly Outputs.DiskRestorePointAttributesResponse? DiskRestorePoint;
        /// <summary>
        /// Gets the initial disk size in GB for blank data disks, and the new desired size for existing OS and Data disks.
        /// </summary>
        public readonly int DiskSizeGB;
        /// <summary>
        /// Gets the logical unit number.
        /// </summary>
        public readonly int Lun;
        /// <summary>
        /// Contains the managed disk details.
        /// </summary>
        public readonly Outputs.ManagedDiskParametersResponse? ManagedDisk;
        /// <summary>
        /// Gets the disk name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Shows true if the disk is write-accelerator enabled.
        /// </summary>
        public readonly bool WriteAcceleratorEnabled;

        [OutputConstructor]
        private RestorePointSourceVMDataDiskResponse(
            string caching,

            Outputs.DiskRestorePointAttributesResponse? diskRestorePoint,

            int diskSizeGB,

            int lun,

            Outputs.ManagedDiskParametersResponse? managedDisk,

            string name,

            bool writeAcceleratorEnabled)
        {
            Caching = caching;
            DiskRestorePoint = diskRestorePoint;
            DiskSizeGB = diskSizeGB;
            Lun = lun;
            ManagedDisk = managedDisk;
            Name = name;
            WriteAcceleratorEnabled = writeAcceleratorEnabled;
        }
    }
}
