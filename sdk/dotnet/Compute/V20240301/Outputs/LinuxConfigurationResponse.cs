// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20240301.Outputs
{

    /// <summary>
    /// Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
    /// </summary>
    [OutputType]
    public sealed class LinuxConfigurationResponse
    {
        /// <summary>
        /// Specifies whether password authentication should be disabled.
        /// </summary>
        public readonly bool? DisablePasswordAuthentication;
        /// <summary>
        /// Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false.
        /// </summary>
        public readonly bool? EnableVMAgentPlatformUpdates;
        /// <summary>
        /// [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
        /// </summary>
        public readonly Outputs.LinuxPatchSettingsResponse? PatchSettings;
        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
        /// </summary>
        public readonly bool? ProvisionVMAgent;
        /// <summary>
        /// Specifies the ssh key configuration for a Linux OS.
        /// </summary>
        public readonly Outputs.SshConfigurationResponse? Ssh;

        [OutputConstructor]
        private LinuxConfigurationResponse(
            bool? disablePasswordAuthentication,

            bool? enableVMAgentPlatformUpdates,

            Outputs.LinuxPatchSettingsResponse? patchSettings,

            bool? provisionVMAgent,

            Outputs.SshConfigurationResponse? ssh)
        {
            DisablePasswordAuthentication = disablePasswordAuthentication;
            EnableVMAgentPlatformUpdates = enableVMAgentPlatformUpdates;
            PatchSettings = patchSettings;
            ProvisionVMAgent = provisionVMAgent;
            Ssh = ssh;
        }
    }
}
