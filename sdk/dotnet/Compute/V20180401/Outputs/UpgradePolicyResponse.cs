// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Compute.V20180401.Outputs
{

    [OutputType]
    public sealed class UpgradePolicyResponse
    {
        /// <summary>
        /// Configuration parameters used for performing automatic OS Upgrade.
        /// </summary>
        public readonly Outputs.AutoOSUpgradePolicyResponse? AutoOSUpgradePolicy;
        /// <summary>
        /// Whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the image becomes available.
        /// </summary>
        public readonly bool? AutomaticOSUpgrade;
        /// <summary>
        /// Specifies the mode of an upgrade to virtual machines in the scale set.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.&lt;br /&gt;&lt;br /&gt; **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// The configuration parameters used while performing a rolling upgrade.
        /// </summary>
        public readonly Outputs.RollingUpgradePolicyResponse? RollingUpgradePolicy;

        [OutputConstructor]
        private UpgradePolicyResponse(
            Outputs.AutoOSUpgradePolicyResponse? autoOSUpgradePolicy,

            bool? automaticOSUpgrade,

            string? mode,

            Outputs.RollingUpgradePolicyResponse? rollingUpgradePolicy)
        {
            AutoOSUpgradePolicy = autoOSUpgradePolicy;
            AutomaticOSUpgrade = automaticOSUpgrade;
            Mode = mode;
            RollingUpgradePolicy = rollingUpgradePolicy;
        }
    }
}
