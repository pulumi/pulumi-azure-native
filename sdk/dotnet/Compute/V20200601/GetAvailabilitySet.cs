// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Compute.V20200601
{
    public static class GetAvailabilitySet
    {
        /// <summary>
        /// Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). &lt;br&gt;&lt;br&gt; For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) &lt;br&gt;&lt;br&gt; Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.
        /// </summary>
        public static Task<GetAvailabilitySetResult> InvokeAsync(GetAvailabilitySetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAvailabilitySetResult>("azure-nextgen:compute/v20200601:getAvailabilitySet", args ?? new GetAvailabilitySetArgs(), options.WithVersion());
    }


    public sealed class GetAvailabilitySetArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability set.
        /// </summary>
        [Input("availabilitySetName", required: true)]
        public string AvailabilitySetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAvailabilitySetArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAvailabilitySetResult
    {
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Fault Domain count.
        /// </summary>
        public readonly int? PlatformFaultDomainCount;
        /// <summary>
        /// Update Domain count.
        /// </summary>
        public readonly int? PlatformUpdateDomainCount;
        /// <summary>
        /// Specifies information about the proximity placement group that the availability set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
        /// </summary>
        public readonly Outputs.SubResourceResponse? ProximityPlacementGroup;
        /// <summary>
        /// Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'.
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// The resource status information.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceViewStatusResponse> Statuses;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// A list of references to all virtual machines in the availability set.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> VirtualMachines;

        [OutputConstructor]
        private GetAvailabilitySetResult(
            string id,

            string location,

            string name,

            int? platformFaultDomainCount,

            int? platformUpdateDomainCount,

            Outputs.SubResourceResponse? proximityPlacementGroup,

            Outputs.SkuResponse? sku,

            ImmutableArray<Outputs.InstanceViewStatusResponse> statuses,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<Outputs.SubResourceResponse> virtualMachines)
        {
            Id = id;
            Location = location;
            Name = name;
            PlatformFaultDomainCount = platformFaultDomainCount;
            PlatformUpdateDomainCount = platformUpdateDomainCount;
            ProximityPlacementGroup = proximityPlacementGroup;
            Sku = sku;
            Statuses = statuses;
            Tags = tags;
            Type = type;
            VirtualMachines = virtualMachines;
        }
    }
}
