// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Compute.V20200601.Inputs
{

    /// <summary>
    /// Describes a virtual machine scale set virtual machine profile.
    /// </summary>
    public sealed class VirtualMachineScaleSetVMProfileArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the billing related details of a Azure Spot VMSS. &lt;br&gt;&lt;br&gt;Minimum api-version: 2019-03-01.
        /// </summary>
        [Input("billingProfile")]
        public Input<Inputs.BillingProfileArgs>? BillingProfile { get; set; }

        /// <summary>
        /// Specifies the boot diagnostic settings state. &lt;br&gt;&lt;br&gt;Minimum api-version: 2015-06-15.
        /// </summary>
        [Input("diagnosticsProfile")]
        public Input<Inputs.DiagnosticsProfileArgs>? DiagnosticsProfile { get; set; }

        /// <summary>
        /// Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. &lt;br&gt;&lt;br&gt;For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. &lt;br&gt;&lt;br&gt;For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
        /// </summary>
        [Input("evictionPolicy")]
        public Input<string>? EvictionPolicy { get; set; }

        /// <summary>
        /// Specifies a collection of settings for extensions installed on virtual machines in the scale set.
        /// </summary>
        [Input("extensionProfile")]
        public Input<Inputs.VirtualMachineScaleSetExtensionProfileArgs>? ExtensionProfile { get; set; }

        /// <summary>
        /// Specifies that the image or disk that is being used was licensed on-premises. &lt;br&gt;&lt;br&gt; Possible values for Windows Server operating system are: &lt;br&gt;&lt;br&gt; Windows_Client &lt;br&gt;&lt;br&gt; Windows_Server &lt;br&gt;&lt;br&gt; Possible values for Linux Server operating system are: &lt;br&gt;&lt;br&gt; RHEL_BYOS (for RHEL) &lt;br&gt;&lt;br&gt; SLES_BYOS (for SUSE) &lt;br&gt;&lt;br&gt; For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) &lt;br&gt;&lt;br&gt; [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
        /// </summary>
        [Input("licenseType")]
        public Input<string>? LicenseType { get; set; }

        /// <summary>
        /// Specifies properties of the network interfaces of the virtual machines in the scale set.
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.VirtualMachineScaleSetNetworkProfileArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// Specifies the operating system settings for the virtual machines in the scale set.
        /// </summary>
        [Input("osProfile")]
        public Input<Inputs.VirtualMachineScaleSetOSProfileArgs>? OsProfile { get; set; }

        /// <summary>
        /// Specifies the priority for the virtual machines in the scale set. &lt;br&gt;&lt;br&gt;Minimum api-version: 2017-10-30-preview
        /// </summary>
        [Input("priority")]
        public Input<string>? Priority { get; set; }

        /// <summary>
        /// Specifies Scheduled Event related configurations.
        /// </summary>
        [Input("scheduledEventsProfile")]
        public Input<Inputs.ScheduledEventsProfileArgs>? ScheduledEventsProfile { get; set; }

        /// <summary>
        /// Specifies the Security related profile settings for the virtual machines in the scale set.
        /// </summary>
        [Input("securityProfile")]
        public Input<Inputs.SecurityProfileArgs>? SecurityProfile { get; set; }

        /// <summary>
        /// Specifies the storage settings for the virtual machine disks.
        /// </summary>
        [Input("storageProfile")]
        public Input<Inputs.VirtualMachineScaleSetStorageProfileArgs>? StorageProfile { get; set; }

        public VirtualMachineScaleSetVMProfileArgs()
        {
        }
    }
}
