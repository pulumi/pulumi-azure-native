// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute.V20200601
{
    public static class GetDedicatedHostGroup
    {
        public static Task<GetDedicatedHostGroupResult> InvokeAsync(GetDedicatedHostGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedHostGroupResult>("azurerm:compute/v20200601:getDedicatedHostGroup", args ?? new GetDedicatedHostGroupArgs(), options.WithVersion());
    }


    public sealed class GetDedicatedHostGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the dedicated host group.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDedicatedHostGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDedicatedHostGroupResult
    {
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Dedicated Host Group Properties.
        /// </summary>
        public readonly Outputs.DedicatedHostGroupPropertiesResponseResult Properties;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GetDedicatedHostGroupResult(
            string location,

            string name,

            Outputs.DedicatedHostGroupPropertiesResponseResult properties,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<string> zones)
        {
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
            Zones = zones;
        }
    }
}
