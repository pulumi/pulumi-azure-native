// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20220103.Inputs
{

    public sealed class GalleryTargetExtendedLocationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.EncryptionImagesArgs>? Encryption { get; set; }

        /// <summary>
        /// The name of the extended location.
        /// </summary>
        [Input("extendedLocation")]
        public Input<Inputs.GalleryExtendedLocationArgs>? ExtendedLocation { get; set; }

        /// <summary>
        /// The number of replicas of the Image Version to be created per extended location. This property is updatable.
        /// </summary>
        [Input("extendedLocationReplicaCount")]
        public Input<int>? ExtendedLocationReplicaCount { get; set; }

        /// <summary>
        /// The name of the region.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the storage account type to be used to store the image. This property is not updatable.
        /// </summary>
        [Input("storageAccountType")]
        public InputUnion<string, Pulumi.AzureNative.Compute.V20220103.StorageAccountType>? StorageAccountType { get; set; }

        public GalleryTargetExtendedLocationArgs()
        {
        }
        public static new GalleryTargetExtendedLocationArgs Empty => new GalleryTargetExtendedLocationArgs();
    }
}
