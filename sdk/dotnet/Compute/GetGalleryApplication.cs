// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute
{
    public static class GetGalleryApplication
    {
        /// <summary>
        /// Retrieves information about a gallery Application Definition.
        /// 
        /// Uses Azure REST API version 2024-03-03.
        /// 
        /// Other available API versions: 2022-03-03, 2022-08-03, 2023-07-03. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetGalleryApplicationResult> InvokeAsync(GetGalleryApplicationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGalleryApplicationResult>("azure-native:compute:getGalleryApplication", args ?? new GetGalleryApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about a gallery Application Definition.
        /// 
        /// Uses Azure REST API version 2024-03-03.
        /// 
        /// Other available API versions: 2022-03-03, 2022-08-03, 2023-07-03. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetGalleryApplicationResult> Invoke(GetGalleryApplicationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGalleryApplicationResult>("azure-native:compute:getGalleryApplication", args ?? new GetGalleryApplicationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about a gallery Application Definition.
        /// 
        /// Uses Azure REST API version 2024-03-03.
        /// 
        /// Other available API versions: 2022-03-03, 2022-08-03, 2023-07-03. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetGalleryApplicationResult> Invoke(GetGalleryApplicationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGalleryApplicationResult>("azure-native:compute:getGalleryApplication", args ?? new GetGalleryApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGalleryApplicationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the gallery Application Definition to be retrieved.
        /// </summary>
        [Input("galleryApplicationName", required: true)]
        public string GalleryApplicationName { get; set; } = null!;

        /// <summary>
        /// The name of the Shared Image Gallery.
        /// </summary>
        [Input("galleryName", required: true)]
        public string GalleryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetGalleryApplicationArgs()
        {
        }
        public static new GetGalleryApplicationArgs Empty => new GetGalleryApplicationArgs();
    }

    public sealed class GetGalleryApplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the gallery Application Definition to be retrieved.
        /// </summary>
        [Input("galleryApplicationName", required: true)]
        public Input<string> GalleryApplicationName { get; set; } = null!;

        /// <summary>
        /// The name of the Shared Image Gallery.
        /// </summary>
        [Input("galleryName", required: true)]
        public Input<string> GalleryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetGalleryApplicationInvokeArgs()
        {
        }
        public static new GetGalleryApplicationInvokeArgs Empty => new GetGalleryApplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetGalleryApplicationResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// A list of custom actions that can be performed with all of the Gallery Application Versions within this Gallery Application.
        /// </summary>
        public readonly ImmutableArray<Outputs.GalleryApplicationCustomActionResponse> CustomActions;
        /// <summary>
        /// The description of this gallery Application Definition resource. This property is updatable.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable.
        /// </summary>
        public readonly string? EndOfLifeDate;
        /// <summary>
        /// The Eula agreement for the gallery Application Definition.
        /// </summary>
        public readonly string? Eula;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The privacy statement uri.
        /// </summary>
        public readonly string? PrivacyStatementUri;
        /// <summary>
        /// The release note uri.
        /// </summary>
        public readonly string? ReleaseNoteUri;
        /// <summary>
        /// This property allows you to specify the supported type of the OS that application is built for. Possible values are: **Windows,** **Linux.**
        /// </summary>
        public readonly string SupportedOSType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGalleryApplicationResult(
            string azureApiVersion,

            ImmutableArray<Outputs.GalleryApplicationCustomActionResponse> customActions,

            string? description,

            string? endOfLifeDate,

            string? eula,

            string id,

            string location,

            string name,

            string? privacyStatementUri,

            string? releaseNoteUri,

            string supportedOSType,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            CustomActions = customActions;
            Description = description;
            EndOfLifeDate = endOfLifeDate;
            Eula = eula;
            Id = id;
            Location = location;
            Name = name;
            PrivacyStatementUri = privacyStatementUri;
            ReleaseNoteUri = releaseNoteUri;
            SupportedOSType = supportedOSType;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
