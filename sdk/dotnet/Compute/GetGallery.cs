// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute
{
    public static class GetGallery
    {
        /// <summary>
        /// Retrieves information about a Shared Image Gallery.
        /// 
        /// Uses Azure REST API version 2024-03-03.
        /// 
        /// Other available API versions: 2022-03-03, 2022-08-03, 2023-07-03. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetGalleryResult> InvokeAsync(GetGalleryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGalleryResult>("azure-native:compute:getGallery", args ?? new GetGalleryArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about a Shared Image Gallery.
        /// 
        /// Uses Azure REST API version 2024-03-03.
        /// 
        /// Other available API versions: 2022-03-03, 2022-08-03, 2023-07-03. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetGalleryResult> Invoke(GetGalleryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGalleryResult>("azure-native:compute:getGallery", args ?? new GetGalleryInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about a Shared Image Gallery.
        /// 
        /// Uses Azure REST API version 2024-03-03.
        /// 
        /// Other available API versions: 2022-03-03, 2022-08-03, 2023-07-03. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetGalleryResult> Invoke(GetGalleryInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGalleryResult>("azure-native:compute:getGallery", args ?? new GetGalleryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGalleryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The expand query option to apply on the operation.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the Shared Image Gallery.
        /// </summary>
        [Input("galleryName", required: true)]
        public string GalleryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The select expression to apply on the operation.
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetGalleryArgs()
        {
        }
        public static new GetGalleryArgs Empty => new GetGalleryArgs();
    }

    public sealed class GetGalleryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The expand query option to apply on the operation.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// The name of the Shared Image Gallery.
        /// </summary>
        [Input("galleryName", required: true)]
        public Input<string> GalleryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The select expression to apply on the operation.
        /// </summary>
        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetGalleryInvokeArgs()
        {
        }
        public static new GetGalleryInvokeArgs Empty => new GetGalleryInvokeArgs();
    }


    [OutputType]
    public sealed class GetGalleryResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The description of this Shared Image Gallery resource. This property is updatable.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Describes the gallery unique name.
        /// </summary>
        public readonly Outputs.GalleryIdentifierResponse? Identifier;
        /// <summary>
        /// The identity of the gallery, if configured.
        /// </summary>
        public readonly Outputs.GalleryIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Profile for gallery sharing to subscription or tenant
        /// </summary>
        public readonly Outputs.SharingProfileResponse? SharingProfile;
        /// <summary>
        /// Sharing status of current gallery.
        /// </summary>
        public readonly Outputs.SharingStatusResponse SharingStatus;
        /// <summary>
        /// Contains information about the soft deletion policy of the gallery.
        /// </summary>
        public readonly Outputs.SoftDeletePolicyResponse? SoftDeletePolicy;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGalleryResult(
            string azureApiVersion,

            string? description,

            string id,

            Outputs.GalleryIdentifierResponse? identifier,

            Outputs.GalleryIdentityResponse? identity,

            string location,

            string name,

            string provisioningState,

            Outputs.SharingProfileResponse? sharingProfile,

            Outputs.SharingStatusResponse sharingStatus,

            Outputs.SoftDeletePolicyResponse? softDeletePolicy,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Description = description;
            Id = id;
            Identifier = identifier;
            Identity = identity;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SharingProfile = sharingProfile;
            SharingStatus = sharingStatus;
            SoftDeletePolicy = softDeletePolicy;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
