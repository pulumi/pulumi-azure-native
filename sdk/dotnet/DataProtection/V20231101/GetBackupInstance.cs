// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataProtection.V20231101
{
    public static class GetBackupInstance
    {
        /// <summary>
        /// Gets a backup instance with name in a backup vault
        /// </summary>
        public static Task<GetBackupInstanceResult> InvokeAsync(GetBackupInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupInstanceResult>("azure-native:dataprotection/v20231101:getBackupInstance", args ?? new GetBackupInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a backup instance with name in a backup vault
        /// </summary>
        public static Output<GetBackupInstanceResult> Invoke(GetBackupInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupInstanceResult>("azure-native:dataprotection/v20231101:getBackupInstance", args ?? new GetBackupInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the backup instance.
        /// </summary>
        [Input("backupInstanceName", required: true)]
        public string BackupInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the backup vault.
        /// </summary>
        [Input("vaultName", required: true)]
        public string VaultName { get; set; } = null!;

        public GetBackupInstanceArgs()
        {
        }
        public static new GetBackupInstanceArgs Empty => new GetBackupInstanceArgs();
    }

    public sealed class GetBackupInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the backup instance.
        /// </summary>
        [Input("backupInstanceName", required: true)]
        public Input<string> BackupInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the backup vault.
        /// </summary>
        [Input("vaultName", required: true)]
        public Input<string> VaultName { get; set; } = null!;

        public GetBackupInstanceInvokeArgs()
        {
        }
        public static new GetBackupInstanceInvokeArgs Empty => new GetBackupInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupInstanceResult
    {
        /// <summary>
        /// Proxy Resource Id represents the complete path to the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Proxy Resource name associated with the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// BackupInstanceResource properties
        /// </summary>
        public readonly Outputs.BackupInstanceResponse Properties;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Proxy Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Proxy Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetBackupInstanceResult(
            string id,

            string name,

            Outputs.BackupInstanceResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
