// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataProtection.V20220301
{
    public static class GetBackupPolicy
    {
        /// <summary>
        /// BaseBackupPolicy resource
        /// </summary>
        public static Task<GetBackupPolicyResult> InvokeAsync(GetBackupPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBackupPolicyResult>("azure-native:dataprotection/v20220301:getBackupPolicy", args ?? new GetBackupPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// BaseBackupPolicy resource
        /// </summary>
        public static Output<GetBackupPolicyResult> Invoke(GetBackupPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBackupPolicyResult>("azure-native:dataprotection/v20220301:getBackupPolicy", args ?? new GetBackupPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupPolicyArgs : Pulumi.InvokeArgs
    {
        [Input("backupPolicyName", required: true)]
        public string BackupPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group where the backup vault is present.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the backup vault.
        /// </summary>
        [Input("vaultName", required: true)]
        public string VaultName { get; set; } = null!;

        public GetBackupPolicyArgs()
        {
        }
    }

    public sealed class GetBackupPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("backupPolicyName", required: true)]
        public Input<string> BackupPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group where the backup vault is present.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the backup vault.
        /// </summary>
        [Input("vaultName", required: true)]
        public Input<string> VaultName { get; set; } = null!;

        public GetBackupPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBackupPolicyResult
    {
        /// <summary>
        /// Resource Id represents the complete path to the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name associated with the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// BaseBackupPolicyResource properties
        /// </summary>
        public readonly Outputs.BackupPolicyResponse Properties;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetBackupPolicyResult(
            string id,

            string name,

            Outputs.BackupPolicyResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
