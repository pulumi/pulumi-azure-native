// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataProtection.V20230401Preview
{
    /// <summary>
    /// BackupInstance Resource
    /// </summary>
    [AzureNativeResourceType("azure-native:dataprotection/v20230401preview:BackupInstance")]
    public partial class BackupInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Proxy Resource name associated with the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// BackupInstanceResource properties
        /// </summary>
        [Output("properties")]
        public Output<Outputs.BackupInstanceResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Proxy Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Proxy Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a BackupInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupInstance(string name, BackupInstanceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:dataprotection/v20230401preview:BackupInstance", name, args ?? new BackupInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupInstance(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:dataprotection/v20230401preview:BackupInstance", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20210101:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20210201preview:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20210601preview:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20210701:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20211001preview:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20211201preview:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20220101:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20220201preview:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20220301:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20220331preview:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20220401:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20220501:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20220901preview:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20221001preview:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20221101preview:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20221201:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20230101:BackupInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:dataprotection/v20230501:BackupInstance"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupInstance Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BackupInstance(name, id, options);
        }
    }

    public sealed class BackupInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the backup instance.
        /// </summary>
        [Input("backupInstanceName")]
        public Input<string>? BackupInstanceName { get; set; }

        /// <summary>
        /// BackupInstanceResource properties
        /// </summary>
        [Input("properties")]
        public Input<Inputs.BackupInstanceArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Proxy Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the backup vault.
        /// </summary>
        [Input("vaultName", required: true)]
        public Input<string> VaultName { get; set; } = null!;

        public BackupInstanceArgs()
        {
        }
        public static new BackupInstanceArgs Empty => new BackupInstanceArgs();
    }
}
