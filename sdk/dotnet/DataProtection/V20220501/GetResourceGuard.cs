// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataProtection.V20220501
{
    public static class GetResourceGuard
    {
        public static Task<GetResourceGuardResult> InvokeAsync(GetResourceGuardArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetResourceGuardResult>("azure-native:dataprotection/v20220501:getResourceGuard", args ?? new GetResourceGuardArgs(), options.WithDefaults());

        public static Output<GetResourceGuardResult> Invoke(GetResourceGuardInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetResourceGuardResult>("azure-native:dataprotection/v20220501:getResourceGuard", args ?? new GetResourceGuardInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceGuardArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group where the backup vault is present.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of ResourceGuard
        /// </summary>
        [Input("resourceGuardsName", required: true)]
        public string ResourceGuardsName { get; set; } = null!;

        public GetResourceGuardArgs()
        {
        }
    }

    public sealed class GetResourceGuardInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group where the backup vault is present.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of ResourceGuard
        /// </summary>
        [Input("resourceGuardsName", required: true)]
        public Input<string> ResourceGuardsName { get; set; } = null!;

        public GetResourceGuardInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetResourceGuardResult
    {
        /// <summary>
        /// Optional ETag.
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Resource Id represents the complete path to the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Input Managed Identity Details
        /// </summary>
        public readonly Outputs.DppIdentityDetailsResponse? Identity;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name associated with the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ResourceGuardResource properties
        /// </summary>
        public readonly Outputs.ResourceGuardResponse Properties;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetResourceGuardResult(
            string? eTag,

            string id,

            Outputs.DppIdentityDetailsResponse? identity,

            string? location,

            string name,

            Outputs.ResourceGuardResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ETag = eTag;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
