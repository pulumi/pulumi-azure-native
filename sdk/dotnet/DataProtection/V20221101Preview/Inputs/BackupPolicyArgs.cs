// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataProtection.V20221101Preview.Inputs
{

    /// <summary>
    /// Rule based backup policy
    /// </summary>
    public sealed class BackupPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("datasourceTypes", required: true)]
        private InputList<string>? _datasourceTypes;

        /// <summary>
        /// Type of datasource for the backup management
        /// </summary>
        public InputList<string> DatasourceTypes
        {
            get => _datasourceTypes ?? (_datasourceTypes = new InputList<string>());
            set => _datasourceTypes = value;
        }

        /// <summary>
        /// 
        /// Expected value is 'BackupPolicy'.
        /// </summary>
        [Input("objectType", required: true)]
        public Input<string> ObjectType { get; set; } = null!;

        [Input("policyRules", required: true)]
        private InputList<Union<Inputs.AzureBackupRuleArgs, Inputs.AzureRetentionRuleArgs>>? _policyRules;

        /// <summary>
        /// Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
        /// </summary>
        public InputList<Union<Inputs.AzureBackupRuleArgs, Inputs.AzureRetentionRuleArgs>> PolicyRules
        {
            get => _policyRules ?? (_policyRules = new InputList<Union<Inputs.AzureBackupRuleArgs, Inputs.AzureRetentionRuleArgs>>());
            set => _policyRules = value;
        }

        public BackupPolicyArgs()
        {
        }
        public static new BackupPolicyArgs Empty => new BackupPolicyArgs();
    }
}
