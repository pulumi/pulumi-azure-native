// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DevTestLab.Inputs
{

    /// <summary>
    /// Properties of a lab.
    /// </summary>
    public sealed class LabPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The properties of any lab announcement associated with this lab
        /// </summary>
        [Input("announcement")]
        public Input<Inputs.LabAnnouncementPropertiesResponseGetArgs>? Announcement { get; set; }

        /// <summary>
        /// The lab's artifact storage account.
        /// </summary>
        [Input("artifactsStorageAccount", required: true)]
        public Input<string> ArtifactsStorageAccount { get; set; } = null!;

        /// <summary>
        /// The creation date of the lab.
        /// </summary>
        [Input("createdDate", required: true)]
        public Input<string> CreatedDate { get; set; } = null!;

        /// <summary>
        /// The lab's default premium storage account.
        /// </summary>
        [Input("defaultPremiumStorageAccount", required: true)]
        public Input<string> DefaultPremiumStorageAccount { get; set; } = null!;

        /// <summary>
        /// The lab's default storage account.
        /// </summary>
        [Input("defaultStorageAccount", required: true)]
        public Input<string> DefaultStorageAccount { get; set; } = null!;

        /// <summary>
        /// The access rights to be granted to the user when provisioning an environment
        /// </summary>
        [Input("environmentPermission")]
        public Input<string>? EnvironmentPermission { get; set; }

        [Input("extendedProperties")]
        private InputMap<string>? _extendedProperties;

        /// <summary>
        /// Extended properties of the lab used for experimental features
        /// </summary>
        public InputMap<string> ExtendedProperties
        {
            get => _extendedProperties ?? (_extendedProperties = new InputMap<string>());
            set => _extendedProperties = value;
        }

        /// <summary>
        /// Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
        /// </summary>
        [Input("labStorageType")]
        public Input<string>? LabStorageType { get; set; }

        /// <summary>
        /// The load balancer used to for lab VMs that use shared IP address.
        /// </summary>
        [Input("loadBalancerId", required: true)]
        public Input<string> LoadBalancerId { get; set; } = null!;

        [Input("mandatoryArtifactsResourceIdsLinux")]
        private InputList<string>? _mandatoryArtifactsResourceIdsLinux;

        /// <summary>
        /// The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.
        /// </summary>
        public InputList<string> MandatoryArtifactsResourceIdsLinux
        {
            get => _mandatoryArtifactsResourceIdsLinux ?? (_mandatoryArtifactsResourceIdsLinux = new InputList<string>());
            set => _mandatoryArtifactsResourceIdsLinux = value;
        }

        [Input("mandatoryArtifactsResourceIdsWindows")]
        private InputList<string>? _mandatoryArtifactsResourceIdsWindows;

        /// <summary>
        /// The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.
        /// </summary>
        public InputList<string> MandatoryArtifactsResourceIdsWindows
        {
            get => _mandatoryArtifactsResourceIdsWindows ?? (_mandatoryArtifactsResourceIdsWindows = new InputList<string>());
            set => _mandatoryArtifactsResourceIdsWindows = value;
        }

        /// <summary>
        /// The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.
        /// </summary>
        [Input("networkSecurityGroupId", required: true)]
        public Input<string> NetworkSecurityGroupId { get; set; } = null!;

        /// <summary>
        /// The lab's premium data disk storage account.
        /// </summary>
        [Input("premiumDataDiskStorageAccount", required: true)]
        public Input<string> PremiumDataDiskStorageAccount { get; set; } = null!;

        /// <summary>
        /// The setting to enable usage of premium data disks.
        /// When its value is 'Enabled', creation of standard or premium data disks is allowed.
        /// When its value is 'Disabled', only creation of standard data disks is allowed.
        /// </summary>
        [Input("premiumDataDisks")]
        public Input<string>? PremiumDataDisks { get; set; }

        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The public IP address for the lab's load balancer.
        /// </summary>
        [Input("publicIpId", required: true)]
        public Input<string> PublicIpId { get; set; } = null!;

        /// <summary>
        /// The properties of any lab support message associated with this lab
        /// </summary>
        [Input("support")]
        public Input<Inputs.LabSupportPropertiesResponseGetArgs>? Support { get; set; }

        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        [Input("uniqueIdentifier", required: true)]
        public Input<string> UniqueIdentifier { get; set; } = null!;

        /// <summary>
        /// The lab's Key vault.
        /// </summary>
        [Input("vaultName", required: true)]
        public Input<string> VaultName { get; set; } = null!;

        /// <summary>
        /// The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.
        /// </summary>
        [Input("vmCreationResourceGroup", required: true)]
        public Input<string> VmCreationResourceGroup { get; set; } = null!;

        public LabPropertiesResponseGetArgs()
        {
        }
    }
}
