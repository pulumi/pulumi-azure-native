// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DevTestLab.Inputs
{

    /// <summary>
    /// Properties of a custom image.
    /// </summary>
    public sealed class CustomImagePropertiesResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The author of the custom image.
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// The creation date of the custom image.
        /// </summary>
        [Input("creationDate", required: true)]
        public Input<string> CreationDate { get; set; } = null!;

        /// <summary>
        /// Storage information about the plan related to this custom image
        /// </summary>
        [Input("customImagePlan")]
        public Input<Inputs.CustomImagePropertiesFromPlanResponseArgs>? CustomImagePlan { get; set; }

        [Input("dataDiskStorageInfo")]
        private InputList<Inputs.DataDiskStorageTypeInfoResponseArgs>? _dataDiskStorageInfo;

        /// <summary>
        /// Storage information about the data disks present in the custom image
        /// </summary>
        public InputList<Inputs.DataDiskStorageTypeInfoResponseArgs> DataDiskStorageInfo
        {
            get => _dataDiskStorageInfo ?? (_dataDiskStorageInfo = new InputList<Inputs.DataDiskStorageTypeInfoResponseArgs>());
            set => _dataDiskStorageInfo = value;
        }

        /// <summary>
        /// The description of the custom image.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
        /// </summary>
        [Input("isPlanAuthorized")]
        public Input<bool>? IsPlanAuthorized { get; set; }

        /// <summary>
        /// The Managed Image Id backing the custom image.
        /// </summary>
        [Input("managedImageId")]
        public Input<string>? ManagedImageId { get; set; }

        /// <summary>
        /// The Managed Snapshot Id backing the custom image.
        /// </summary>
        [Input("managedSnapshotId")]
        public Input<string>? ManagedSnapshotId { get; set; }

        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        [Input("uniqueIdentifier", required: true)]
        public Input<string> UniqueIdentifier { get; set; } = null!;

        /// <summary>
        /// The VHD from which the image is to be created.
        /// </summary>
        [Input("vhd")]
        public Input<Inputs.CustomImagePropertiesCustomResponseArgs>? Vhd { get; set; }

        /// <summary>
        /// The virtual machine from which the image is to be created.
        /// </summary>
        [Input("vm")]
        public Input<Inputs.CustomImagePropertiesFromVmResponseArgs>? Vm { get; set; }

        public CustomImagePropertiesResponseArgs()
        {
        }
    }
}
