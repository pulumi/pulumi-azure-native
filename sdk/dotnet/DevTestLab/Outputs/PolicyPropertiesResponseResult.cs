// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DevTestLab.Outputs
{

    [OutputType]
    public sealed class PolicyPropertiesResponseResult
    {
        /// <summary>
        /// The creation date of the policy.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// The description of the policy.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
        /// </summary>
        public readonly string? EvaluatorType;
        /// <summary>
        /// The fact data of the policy.
        /// </summary>
        public readonly string? FactData;
        /// <summary>
        /// The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
        /// </summary>
        public readonly string? FactName;
        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The status of the policy.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
        /// </summary>
        public readonly string? Threshold;
        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        public readonly string UniqueIdentifier;

        [OutputConstructor]
        private PolicyPropertiesResponseResult(
            string createdDate,

            string? description,

            string? evaluatorType,

            string? factData,

            string? factName,

            string provisioningState,

            string? status,

            string? threshold,

            string uniqueIdentifier)
        {
            CreatedDate = createdDate;
            Description = description;
            EvaluatorType = evaluatorType;
            FactData = factData;
            FactName = factName;
            ProvisioningState = provisioningState;
            Status = status;
            Threshold = threshold;
            UniqueIdentifier = uniqueIdentifier;
        }
    }
}
