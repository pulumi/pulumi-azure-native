// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DevTestLab.Outputs
{

    [OutputType]
    public sealed class DiskPropertiesResponseResult
    {
        /// <summary>
        /// The creation date of the disk.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// When backed by a blob, the name of the VHD blob without extension.
        /// </summary>
        public readonly string? DiskBlobName;
        /// <summary>
        /// The size of the disk in GibiBytes.
        /// </summary>
        public readonly int? DiskSizeGiB;
        /// <summary>
        /// The storage type for the disk (i.e. Standard, Premium).
        /// </summary>
        public readonly string? DiskType;
        /// <summary>
        /// When backed by a blob, the URI of underlying blob.
        /// </summary>
        public readonly string? DiskUri;
        /// <summary>
        /// The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).
        /// </summary>
        public readonly string? HostCaching;
        /// <summary>
        /// The resource ID of the VM to which this disk is leased.
        /// </summary>
        public readonly string? LeasedByLabVmId;
        /// <summary>
        /// When backed by managed disk, this is the ID of the compute disk resource.
        /// </summary>
        public readonly string? ManagedDiskId;
        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        public readonly string UniqueIdentifier;

        [OutputConstructor]
        private DiskPropertiesResponseResult(
            string createdDate,

            string? diskBlobName,

            int? diskSizeGiB,

            string? diskType,

            string? diskUri,

            string? hostCaching,

            string? leasedByLabVmId,

            string? managedDiskId,

            string provisioningState,

            string uniqueIdentifier)
        {
            CreatedDate = createdDate;
            DiskBlobName = diskBlobName;
            DiskSizeGiB = diskSizeGiB;
            DiskType = diskType;
            DiskUri = diskUri;
            HostCaching = hostCaching;
            LeasedByLabVmId = leasedByLabVmId;
            ManagedDiskId = managedDiskId;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
        }
    }
}
