// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevTestLab
{
    public static class GetFormula
    {
        /// <summary>
        /// Get formula.
        /// Azure REST API version: 2018-09-15.
        /// </summary>
        public static Task<GetFormulaResult> InvokeAsync(GetFormulaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFormulaResult>("azure-native:devtestlab:getFormula", args ?? new GetFormulaArgs(), options.WithDefaults());

        /// <summary>
        /// Get formula.
        /// Azure REST API version: 2018-09-15.
        /// </summary>
        public static Output<GetFormulaResult> Invoke(GetFormulaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFormulaResult>("azure-native:devtestlab:getFormula", args ?? new GetFormulaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFormulaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the $expand query. Example: 'properties($select=description)'
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the lab.
        /// </summary>
        [Input("labName", required: true)]
        public string LabName { get; set; } = null!;

        /// <summary>
        /// The name of the formula.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFormulaArgs()
        {
        }
        public static new GetFormulaArgs Empty => new GetFormulaArgs();
    }

    public sealed class GetFormulaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the $expand query. Example: 'properties($select=description)'
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// The name of the lab.
        /// </summary>
        [Input("labName", required: true)]
        public Input<string> LabName { get; set; } = null!;

        /// <summary>
        /// The name of the formula.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetFormulaInvokeArgs()
        {
        }
        public static new GetFormulaInvokeArgs Empty => new GetFormulaInvokeArgs();
    }


    [OutputType]
    public sealed class GetFormulaResult
    {
        /// <summary>
        /// The author of the formula.
        /// </summary>
        public readonly string Author;
        /// <summary>
        /// The creation date of the formula.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The description of the formula.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The content of the formula.
        /// </summary>
        public readonly Outputs.LabVirtualMachineCreationParameterResponse? FormulaContent;
        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The location of the resource.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The OS type of the formula.
        /// </summary>
        public readonly string? OsType;
        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        public readonly string UniqueIdentifier;
        /// <summary>
        /// Information about a VM from which a formula is to be created.
        /// </summary>
        public readonly Outputs.FormulaPropertiesFromVmResponse? Vm;

        [OutputConstructor]
        private GetFormulaResult(
            string author,

            string creationDate,

            string? description,

            Outputs.LabVirtualMachineCreationParameterResponse? formulaContent,

            string id,

            string? location,

            string name,

            string? osType,

            string provisioningState,

            ImmutableDictionary<string, string>? tags,

            string type,

            string uniqueIdentifier,

            Outputs.FormulaPropertiesFromVmResponse? vm)
        {
            Author = author;
            CreationDate = creationDate;
            Description = description;
            FormulaContent = formulaContent;
            Id = id;
            Location = location;
            Name = name;
            OsType = osType;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
            UniqueIdentifier = uniqueIdentifier;
            Vm = vm;
        }
    }
}
