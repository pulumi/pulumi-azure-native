// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevTestLab.V20150521Preview
{
    [Obsolete(@"Version 2015-05-21-preview will be removed in v2 of the provider.")]
    public static class GetArtifactSourceResource
    {
        /// <summary>
        /// Properties of an artifact source.
        /// </summary>
        public static Task<GetArtifactSourceResourceResult> InvokeAsync(GetArtifactSourceResourceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetArtifactSourceResourceResult>("azure-native:devtestlab/v20150521preview:getArtifactSourceResource", args ?? new GetArtifactSourceResourceArgs(), options.WithDefaults());

        /// <summary>
        /// Properties of an artifact source.
        /// </summary>
        public static Output<GetArtifactSourceResourceResult> Invoke(GetArtifactSourceResourceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetArtifactSourceResourceResult>("azure-native:devtestlab/v20150521preview:getArtifactSourceResource", args ?? new GetArtifactSourceResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetArtifactSourceResourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the lab.
        /// </summary>
        [Input("labName", required: true)]
        public string LabName { get; set; } = null!;

        /// <summary>
        /// The name of the artifact source.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetArtifactSourceResourceArgs()
        {
        }
        public static new GetArtifactSourceResourceArgs Empty => new GetArtifactSourceResourceArgs();
    }

    public sealed class GetArtifactSourceResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the lab.
        /// </summary>
        [Input("labName", required: true)]
        public Input<string> LabName { get; set; } = null!;

        /// <summary>
        /// The name of the artifact source.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetArtifactSourceResourceInvokeArgs()
        {
        }
        public static new GetArtifactSourceResourceInvokeArgs Empty => new GetArtifactSourceResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetArtifactSourceResourceResult
    {
        /// <summary>
        /// The branch reference of the artifact source.
        /// </summary>
        public readonly string? BranchRef;
        /// <summary>
        /// The display name of the artifact source.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The folder path of the artifact source.
        /// </summary>
        public readonly string? FolderPath;
        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The location of the resource.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The security token of the artifact source.
        /// </summary>
        public readonly string? SecurityToken;
        /// <summary>
        /// The type of the artifact source.
        /// </summary>
        public readonly string? SourceType;
        /// <summary>
        /// The status of the artifact source.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// The URI of the artifact source.
        /// </summary>
        public readonly string? Uri;

        [OutputConstructor]
        private GetArtifactSourceResourceResult(
            string? branchRef,

            string? displayName,

            string? folderPath,

            string? id,

            string? location,

            string? name,

            string? provisioningState,

            string? securityToken,

            string? sourceType,

            string? status,

            ImmutableDictionary<string, string>? tags,

            string? type,

            string? uri)
        {
            BranchRef = branchRef;
            DisplayName = displayName;
            FolderPath = folderPath;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SecurityToken = securityToken;
            SourceType = sourceType;
            Status = status;
            Tags = tags;
            Type = type;
            Uri = uri;
        }
    }
}
