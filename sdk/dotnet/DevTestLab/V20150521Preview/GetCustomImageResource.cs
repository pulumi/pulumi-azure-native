// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DevTestLab.V20150521Preview
{
    public static class GetCustomImageResource
    {
        public static Task<GetCustomImageResourceResult> InvokeAsync(GetCustomImageResourceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCustomImageResourceResult>("azure-nextgen:devtestlab/v20150521preview:getCustomImageResource", args ?? new GetCustomImageResourceArgs(), options.WithVersion());
    }


    public sealed class GetCustomImageResourceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the lab.
        /// </summary>
        [Input("labName", required: true)]
        public string LabName { get; set; } = null!;

        /// <summary>
        /// The name of the custom image.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCustomImageResourceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCustomImageResourceResult
    {
        /// <summary>
        /// The author of the custom image.
        /// </summary>
        public readonly string? Author;
        /// <summary>
        /// The creation date of the custom image.
        /// </summary>
        public readonly string? CreationDate;
        /// <summary>
        /// The description of the custom image.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The location of the resource.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The OS type of the custom image.
        /// </summary>
        public readonly string? OsType;
        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// The VHD from which the image is to be created.
        /// </summary>
        public readonly Outputs.CustomImagePropertiesCustomResponse? Vhd;
        /// <summary>
        /// Properties for creating a custom image from a virtual machine.
        /// </summary>
        public readonly Outputs.CustomImagePropertiesFromVmResponse? Vm;

        [OutputConstructor]
        private GetCustomImageResourceResult(
            string? author,

            string? creationDate,

            string? description,

            string? location,

            string? name,

            string? osType,

            string? provisioningState,

            ImmutableDictionary<string, string>? tags,

            string? type,

            Outputs.CustomImagePropertiesCustomResponse? vhd,

            Outputs.CustomImagePropertiesFromVmResponse? vm)
        {
            Author = author;
            CreationDate = creationDate;
            Description = description;
            Location = location;
            Name = name;
            OsType = osType;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
            Vhd = vhd;
            Vm = vm;
        }
    }
}
