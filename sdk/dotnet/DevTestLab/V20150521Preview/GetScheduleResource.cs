// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DevTestLab.V20150521Preview
{
    public static class GetScheduleResource
    {
        public static Task<GetScheduleResourceResult> InvokeAsync(GetScheduleResourceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScheduleResourceResult>("azure-nextgen:devtestlab/v20150521preview:getScheduleResource", args ?? new GetScheduleResourceArgs(), options.WithVersion());
    }


    public sealed class GetScheduleResourceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the lab.
        /// </summary>
        [Input("labName", required: true)]
        public string LabName { get; set; } = null!;

        /// <summary>
        /// The name of the schedule.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetScheduleResourceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScheduleResourceResult
    {
        /// <summary>
        /// The daily recurrence of the schedule.
        /// </summary>
        public readonly Outputs.DayDetailsResponse? DailyRecurrence;
        /// <summary>
        /// The hourly recurrence of the schedule.
        /// </summary>
        public readonly Outputs.HourDetailsResponse? HourlyRecurrence;
        /// <summary>
        /// The location of the resource.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The status of the schedule.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The task type of the schedule.
        /// </summary>
        public readonly string? TaskType;
        /// <summary>
        /// The time zone id.
        /// </summary>
        public readonly string? TimeZoneId;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// The weekly recurrence of the schedule.
        /// </summary>
        public readonly Outputs.WeekDetailsResponse? WeeklyRecurrence;

        [OutputConstructor]
        private GetScheduleResourceResult(
            Outputs.DayDetailsResponse? dailyRecurrence,

            Outputs.HourDetailsResponse? hourlyRecurrence,

            string? location,

            string? name,

            string? provisioningState,

            string? status,

            ImmutableDictionary<string, string>? tags,

            string? taskType,

            string? timeZoneId,

            string? type,

            Outputs.WeekDetailsResponse? weeklyRecurrence)
        {
            DailyRecurrence = dailyRecurrence;
            HourlyRecurrence = hourlyRecurrence;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Status = status;
            Tags = tags;
            TaskType = taskType;
            TimeZoneId = timeZoneId;
            Type = type;
            WeeklyRecurrence = weeklyRecurrence;
        }
    }
}
