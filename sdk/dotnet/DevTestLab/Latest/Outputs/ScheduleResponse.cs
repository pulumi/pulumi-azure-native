// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DevTestLab.Latest.Outputs
{

    [OutputType]
    public sealed class ScheduleResponse
    {
        /// <summary>
        /// The creation date of the schedule.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// If the schedule will occur once each day of the week, specify the daily recurrence.
        /// </summary>
        public readonly Outputs.DayDetailsResponse? DailyRecurrence;
        /// <summary>
        /// If the schedule will occur multiple times a day, specify the hourly recurrence.
        /// </summary>
        public readonly Outputs.HourDetailsResponse? HourlyRecurrence;
        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The location of the resource.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Notification settings.
        /// </summary>
        public readonly Outputs.NotificationSettingsResponse? NotificationSettings;
        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The status of the schedule (i.e. Enabled, Disabled)
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The resource ID to which the schedule belongs
        /// </summary>
        public readonly string? TargetResourceId;
        /// <summary>
        /// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
        /// </summary>
        public readonly string? TaskType;
        /// <summary>
        /// The time zone ID (e.g. Pacific Standard time).
        /// </summary>
        public readonly string? TimeZoneId;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        public readonly string UniqueIdentifier;
        /// <summary>
        /// If the schedule will occur only some days of the week, specify the weekly recurrence.
        /// </summary>
        public readonly Outputs.WeekDetailsResponse? WeeklyRecurrence;

        [OutputConstructor]
        private ScheduleResponse(
            string createdDate,

            Outputs.DayDetailsResponse? dailyRecurrence,

            Outputs.HourDetailsResponse? hourlyRecurrence,

            string id,

            string? location,

            string name,

            Outputs.NotificationSettingsResponse? notificationSettings,

            string provisioningState,

            string? status,

            ImmutableDictionary<string, string>? tags,

            string? targetResourceId,

            string? taskType,

            string? timeZoneId,

            string type,

            string uniqueIdentifier,

            Outputs.WeekDetailsResponse? weeklyRecurrence)
        {
            CreatedDate = createdDate;
            DailyRecurrence = dailyRecurrence;
            HourlyRecurrence = hourlyRecurrence;
            Id = id;
            Location = location;
            Name = name;
            NotificationSettings = notificationSettings;
            ProvisioningState = provisioningState;
            Status = status;
            Tags = tags;
            TargetResourceId = targetResourceId;
            TaskType = taskType;
            TimeZoneId = timeZoneId;
            Type = type;
            UniqueIdentifier = uniqueIdentifier;
            WeeklyRecurrence = weeklyRecurrence;
        }
    }
}
