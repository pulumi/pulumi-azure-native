// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Chaos
{
    public static class GetExperimentExecutionDetails
    {
        /// <summary>
        /// Execution details of an experiment resource.
        /// Azure REST API version: 2023-11-01.
        /// 
        /// Other available API versions: 2024-01-01, 2024-03-22-preview.
        /// </summary>
        public static Task<GetExperimentExecutionDetailsResult> InvokeAsync(GetExperimentExecutionDetailsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExperimentExecutionDetailsResult>("azure-native:chaos:getExperimentExecutionDetails", args ?? new GetExperimentExecutionDetailsArgs(), options.WithDefaults());

        /// <summary>
        /// Execution details of an experiment resource.
        /// Azure REST API version: 2023-11-01.
        /// 
        /// Other available API versions: 2024-01-01, 2024-03-22-preview.
        /// </summary>
        public static Output<GetExperimentExecutionDetailsResult> Invoke(GetExperimentExecutionDetailsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExperimentExecutionDetailsResult>("azure-native:chaos:getExperimentExecutionDetails", args ?? new GetExperimentExecutionDetailsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExperimentExecutionDetailsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// GUID that represents a Experiment execution detail.
        /// </summary>
        [Input("executionId", required: true)]
        public string ExecutionId { get; set; } = null!;

        /// <summary>
        /// String that represents a Experiment resource name.
        /// </summary>
        [Input("experimentName", required: true)]
        public string ExperimentName { get; set; } = null!;

        /// <summary>
        /// String that represents an Azure resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetExperimentExecutionDetailsArgs()
        {
        }
        public static new GetExperimentExecutionDetailsArgs Empty => new GetExperimentExecutionDetailsArgs();
    }

    public sealed class GetExperimentExecutionDetailsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// GUID that represents a Experiment execution detail.
        /// </summary>
        [Input("executionId", required: true)]
        public Input<string> ExecutionId { get; set; } = null!;

        /// <summary>
        /// String that represents a Experiment resource name.
        /// </summary>
        [Input("experimentName", required: true)]
        public Input<string> ExperimentName { get; set; } = null!;

        /// <summary>
        /// String that represents an Azure resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetExperimentExecutionDetailsInvokeArgs()
        {
        }
        public static new GetExperimentExecutionDetailsInvokeArgs Empty => new GetExperimentExecutionDetailsInvokeArgs();
    }


    [OutputType]
    public sealed class GetExperimentExecutionDetailsResult
    {
        /// <summary>
        /// The reason why the execution failed.
        /// </summary>
        public readonly string FailureReason;
        /// <summary>
        /// String of the fully qualified resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// String that represents the last action date time.
        /// </summary>
        public readonly string LastActionAt;
        /// <summary>
        /// String of the resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The information of the experiment run.
        /// </summary>
        public readonly Outputs.ExperimentExecutionDetailsPropertiesResponseRunInformation RunInformation;
        /// <summary>
        /// String that represents the start date time.
        /// </summary>
        public readonly string StartedAt;
        /// <summary>
        /// The status of the execution.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// String that represents the stop date time.
        /// </summary>
        public readonly string StoppedAt;
        /// <summary>
        /// String of the resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetExperimentExecutionDetailsResult(
            string failureReason,

            string id,

            string lastActionAt,

            string name,

            Outputs.ExperimentExecutionDetailsPropertiesResponseRunInformation runInformation,

            string startedAt,

            string status,

            string stoppedAt,

            string type)
        {
            FailureReason = failureReason;
            Id = id;
            LastActionAt = lastActionAt;
            Name = name;
            RunInformation = runInformation;
            StartedAt = startedAt;
            Status = status;
            StoppedAt = stoppedAt;
            Type = type;
        }
    }
}
