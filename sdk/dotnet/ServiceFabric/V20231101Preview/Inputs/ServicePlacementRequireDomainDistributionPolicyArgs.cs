// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabric.V20231101Preview.Inputs
{

    /// <summary>
    /// Describes the policy to be used for placement of a Service Fabric service where two replicas
    /// from the same partition should never be placed in the same fault or upgrade domain.
    /// 
    /// While this is not common it can expose the service to an increased risk of concurrent failures
    /// due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider
    /// a case where replicas are deployed across different data center, with one replica per location.
    /// In the event that one of the datacenters goes offline, normally the replica that was placed in that
    /// datacenter will be packed into one of the remaining datacenters. If this is not desirable then this
    /// policy should be set.
    /// </summary>
    public sealed class ServicePlacementRequireDomainDistributionPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the domain that should used for placement as per this policy.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// The type of placement policy for a service fabric service. Following are the possible values.
        /// Expected value is 'RequiredDomainDistribution'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ServicePlacementRequireDomainDistributionPolicyArgs()
        {
        }
        public static new ServicePlacementRequireDomainDistributionPolicyArgs Empty => new ServicePlacementRequireDomainDistributionPolicyArgs();
    }
}
