// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabric
{
    public static class GetApplicationType
    {
        /// <summary>
        /// Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric managed cluster resource.
        /// 
        /// Uses Azure REST API version 2024-11-01-preview.
        /// </summary>
        public static Task<GetApplicationTypeResult> InvokeAsync(GetApplicationTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationTypeResult>("azure-native:servicefabric:getApplicationType", args ?? new GetApplicationTypeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric managed cluster resource.
        /// 
        /// Uses Azure REST API version 2024-11-01-preview.
        /// </summary>
        public static Output<GetApplicationTypeResult> Invoke(GetApplicationTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationTypeResult>("azure-native:servicefabric:getApplicationType", args ?? new GetApplicationTypeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric managed cluster resource.
        /// 
        /// Uses Azure REST API version 2024-11-01-preview.
        /// </summary>
        public static Output<GetApplicationTypeResult> Invoke(GetApplicationTypeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationTypeResult>("azure-native:servicefabric:getApplicationType", args ?? new GetApplicationTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationTypeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the application type name resource.
        /// </summary>
        [Input("applicationTypeName", required: true)]
        public string ApplicationTypeName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster resource.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetApplicationTypeArgs()
        {
        }
        public static new GetApplicationTypeArgs Empty => new GetApplicationTypeArgs();
    }

    public sealed class GetApplicationTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the application type name resource.
        /// </summary>
        [Input("applicationTypeName", required: true)]
        public Input<string> ApplicationTypeName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster resource.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetApplicationTypeInvokeArgs()
        {
        }
        public static new GetApplicationTypeInvokeArgs Empty => new GetApplicationTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationTypeResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApplicationTypeResult(
            string azureApiVersion,

            string id,

            string? location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
