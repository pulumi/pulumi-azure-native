// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ServiceFabric.V20190301.Outputs
{

    [OutputType]
    public sealed class ApplicationResourcePropertiesResponseResult
    {
        /// <summary>
        /// The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
        /// </summary>
        public readonly int? MaximumNodes;
        /// <summary>
        /// List of application capacity metric description.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationMetricDescriptionResponseResult> Metrics;
        /// <summary>
        /// The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
        /// </summary>
        public readonly int? MinimumNodes;
        /// <summary>
        /// List of application parameters with overridden values from their default values specified in the application manifest.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Parameters;
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Remove the current application capacity settings.
        /// </summary>
        public readonly bool? RemoveApplicationCapacity;
        /// <summary>
        /// The application type name as defined in the application manifest.
        /// </summary>
        public readonly string? TypeName;
        /// <summary>
        /// The version of the application type as defined in the application manifest.
        /// </summary>
        public readonly string? TypeVersion;
        /// <summary>
        /// Describes the policy for a monitored application upgrade.
        /// </summary>
        public readonly Outputs.ApplicationUpgradePolicyResponseResult? UpgradePolicy;

        [OutputConstructor]
        private ApplicationResourcePropertiesResponseResult(
            int? maximumNodes,

            ImmutableArray<Outputs.ApplicationMetricDescriptionResponseResult> metrics,

            int? minimumNodes,

            ImmutableDictionary<string, string>? parameters,

            string provisioningState,

            bool? removeApplicationCapacity,

            string? typeName,

            string? typeVersion,

            Outputs.ApplicationUpgradePolicyResponseResult? upgradePolicy)
        {
            MaximumNodes = maximumNodes;
            Metrics = metrics;
            MinimumNodes = minimumNodes;
            Parameters = parameters;
            ProvisioningState = provisioningState;
            RemoveApplicationCapacity = removeApplicationCapacity;
            TypeName = typeName;
            TypeVersion = typeVersion;
            UpgradePolicy = upgradePolicy;
        }
    }
}
