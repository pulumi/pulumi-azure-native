// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabric.V20230701Preview.Inputs
{

    /// <summary>
    /// Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.
    /// </summary>
    public sealed class UniformInt64RangePartitionSchemeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of partitions.
        /// </summary>
        [Input("count", required: true)]
        public Input<int> Count { get; set; } = null!;

        /// <summary>
        /// The upper bound of the partition key range that
        /// should be split between the partition ‘Count’
        /// </summary>
        [Input("highKey", required: true)]
        public Input<double> HighKey { get; set; } = null!;

        /// <summary>
        /// The lower bound of the partition key range that
        /// should be split between the partition ‘Count’
        /// </summary>
        [Input("lowKey", required: true)]
        public Input<double> LowKey { get; set; } = null!;

        /// <summary>
        /// Enumerates the ways that a service can be partitioned.
        /// Expected value is 'UniformInt64Range'.
        /// </summary>
        [Input("partitionScheme", required: true)]
        public Input<string> PartitionScheme { get; set; } = null!;

        public UniformInt64RangePartitionSchemeArgs()
        {
        }
        public static new UniformInt64RangePartitionSchemeArgs Empty => new UniformInt64RangePartitionSchemeArgs();
    }
}
