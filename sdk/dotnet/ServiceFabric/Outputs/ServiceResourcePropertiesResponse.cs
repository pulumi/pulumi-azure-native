// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ServiceFabric.Outputs
{

    [OutputType]
    public sealed class ServiceResourcePropertiesResponse
    {
        /// <summary>
        /// A list that describes the correlation of the service with other services.
        /// </summary>
        public readonly Outputs.CorrelationSchemeListResponse? CorrelationScheme;
        /// <summary>
        /// Specifies the move cost for the service.
        /// </summary>
        public readonly string? DefaultMoveCost;
        /// <summary>
        /// Describes how the service is partitioned.
        /// </summary>
        public readonly Outputs.PartitionSchemeDescriptionResponse? PartitionDescription;
        /// <summary>
        /// The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".
        /// </summary>
        public readonly string? PlacementConstraints;
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.
        /// </summary>
        public readonly string? ServiceDnsName;
        /// <summary>
        /// The kind of service (Stateless or Stateful).
        /// </summary>
        public readonly string ServiceKind;
        /// <summary>
        /// The service load metrics is given as an array of ServiceLoadMetricDescription objects.
        /// </summary>
        public readonly Outputs.ServiceLoadMetricsListResponse? ServiceLoadMetrics;
        /// <summary>
        /// The activation Mode of the service package
        /// </summary>
        public readonly string? ServicePackageActivationMode;
        /// <summary>
        /// A list that describes the correlation of the service with other services.
        /// </summary>
        public readonly Outputs.ServicePlacementPoliciesListResponse? ServicePlacementPolicies;
        /// <summary>
        /// The name of the service type
        /// </summary>
        public readonly string? ServiceTypeName;

        [OutputConstructor]
        private ServiceResourcePropertiesResponse(
            Outputs.CorrelationSchemeListResponse? correlationScheme,

            string? defaultMoveCost,

            Outputs.PartitionSchemeDescriptionResponse? partitionDescription,

            string? placementConstraints,

            string provisioningState,

            string? serviceDnsName,

            string serviceKind,

            Outputs.ServiceLoadMetricsListResponse? serviceLoadMetrics,

            string? servicePackageActivationMode,

            Outputs.ServicePlacementPoliciesListResponse? servicePlacementPolicies,

            string? serviceTypeName)
        {
            CorrelationScheme = correlationScheme;
            DefaultMoveCost = defaultMoveCost;
            PartitionDescription = partitionDescription;
            PlacementConstraints = placementConstraints;
            ProvisioningState = provisioningState;
            ServiceDnsName = serviceDnsName;
            ServiceKind = serviceKind;
            ServiceLoadMetrics = serviceLoadMetrics;
            ServicePackageActivationMode = servicePackageActivationMode;
            ServicePlacementPolicies = servicePlacementPolicies;
            ServiceTypeName = serviceTypeName;
        }
    }
}
