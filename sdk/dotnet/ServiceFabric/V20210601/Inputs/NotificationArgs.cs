// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabric.V20210601.Inputs
{

    /// <summary>
    /// Describes the notification channel for cluster events.
    /// </summary>
    public sealed class NotificationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates if the notification is enabled.
        /// </summary>
        [Input("isEnabled", required: true)]
        public Input<bool> IsEnabled { get; set; } = null!;

        /// <summary>
        /// The category of notification.
        /// </summary>
        [Input("notificationCategory", required: true)]
        public InputUnion<string, Pulumi.AzureNative.ServiceFabric.V20210601.NotificationCategory> NotificationCategory { get; set; } = null!;

        /// <summary>
        /// The level of notification.
        /// </summary>
        [Input("notificationLevel", required: true)]
        public InputUnion<string, Pulumi.AzureNative.ServiceFabric.V20210601.NotificationLevel> NotificationLevel { get; set; } = null!;

        [Input("notificationTargets", required: true)]
        private InputList<Inputs.NotificationTargetArgs>? _notificationTargets;

        /// <summary>
        /// List of targets that subscribe to the notification.
        /// </summary>
        public InputList<Inputs.NotificationTargetArgs> NotificationTargets
        {
            get => _notificationTargets ?? (_notificationTargets = new InputList<Inputs.NotificationTargetArgs>());
            set => _notificationTargets = value;
        }

        public NotificationArgs()
        {
        }
        public static new NotificationArgs Empty => new NotificationArgs();
    }
}
