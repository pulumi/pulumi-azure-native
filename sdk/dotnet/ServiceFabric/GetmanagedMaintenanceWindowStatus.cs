// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabric
{
    public static class GetmanagedMaintenanceWindowStatus
    {
        /// <summary>
        /// Action to get Maintenance Window Status of the Service Fabric Managed Clusters.
        /// Azure REST API version: 2023-07-01-preview.
        /// 
        /// Other available API versions: 2023-09-01-preview, 2023-11-01-preview, 2023-12-01-preview, 2024-02-01-preview, 2024-04-01, 2024-06-01-preview, 2024-09-01-preview.
        /// </summary>
        public static Task<GetmanagedMaintenanceWindowStatusResult> InvokeAsync(GetmanagedMaintenanceWindowStatusArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetmanagedMaintenanceWindowStatusResult>("azure-native:servicefabric:getmanagedMaintenanceWindowStatus", args ?? new GetmanagedMaintenanceWindowStatusArgs(), options.WithDefaults());

        /// <summary>
        /// Action to get Maintenance Window Status of the Service Fabric Managed Clusters.
        /// Azure REST API version: 2023-07-01-preview.
        /// 
        /// Other available API versions: 2023-09-01-preview, 2023-11-01-preview, 2023-12-01-preview, 2024-02-01-preview, 2024-04-01, 2024-06-01-preview, 2024-09-01-preview.
        /// </summary>
        public static Output<GetmanagedMaintenanceWindowStatusResult> Invoke(GetmanagedMaintenanceWindowStatusInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetmanagedMaintenanceWindowStatusResult>("azure-native:servicefabric:getmanagedMaintenanceWindowStatus", args ?? new GetmanagedMaintenanceWindowStatusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetmanagedMaintenanceWindowStatusArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster resource.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetmanagedMaintenanceWindowStatusArgs()
        {
        }
        public static new GetmanagedMaintenanceWindowStatusArgs Empty => new GetmanagedMaintenanceWindowStatusArgs();
    }

    public sealed class GetmanagedMaintenanceWindowStatusInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster resource.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetmanagedMaintenanceWindowStatusInvokeArgs()
        {
        }
        public static new GetmanagedMaintenanceWindowStatusInvokeArgs Empty => new GetmanagedMaintenanceWindowStatusInvokeArgs();
    }


    [OutputType]
    public sealed class GetmanagedMaintenanceWindowStatusResult
    {
        /// <summary>
        /// If updates can be applied.
        /// </summary>
        public readonly bool CanApplyUpdates;
        /// <summary>
        /// Indicates if the region is ready to configure maintenance windows.
        /// </summary>
        public readonly bool IsRegionReady;
        /// <summary>
        /// If maintenance window is active.
        /// </summary>
        public readonly bool IsWindowActive;
        /// <summary>
        /// If maintenance window is enabled on this cluster.
        /// </summary>
        public readonly bool IsWindowEnabled;
        /// <summary>
        /// Last window end time in UTC.
        /// </summary>
        public readonly string LastWindowEndTimeUTC;
        /// <summary>
        /// Last window start time in UTC.
        /// </summary>
        public readonly string LastWindowStartTimeUTC;
        /// <summary>
        /// Last window update time in UTC.
        /// </summary>
        public readonly string LastWindowStatusUpdateAtUTC;

        [OutputConstructor]
        private GetmanagedMaintenanceWindowStatusResult(
            bool canApplyUpdates,

            bool isRegionReady,

            bool isWindowActive,

            bool isWindowEnabled,

            string lastWindowEndTimeUTC,

            string lastWindowStartTimeUTC,

            string lastWindowStatusUpdateAtUTC)
        {
            CanApplyUpdates = canApplyUpdates;
            IsRegionReady = isRegionReady;
            IsWindowActive = isWindowActive;
            IsWindowEnabled = isWindowEnabled;
            LastWindowEndTimeUTC = lastWindowEndTimeUTC;
            LastWindowStartTimeUTC = lastWindowStartTimeUTC;
            LastWindowStatusUpdateAtUTC = lastWindowStatusUpdateAtUTC;
        }
    }
}
