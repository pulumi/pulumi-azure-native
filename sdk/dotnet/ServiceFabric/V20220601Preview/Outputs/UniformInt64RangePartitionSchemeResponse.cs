// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabric.V20220601Preview.Outputs
{

    /// <summary>
    /// Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.
    /// </summary>
    [OutputType]
    public sealed class UniformInt64RangePartitionSchemeResponse
    {
        /// <summary>
        /// The number of partitions.
        /// </summary>
        public readonly int Count;
        /// <summary>
        /// The upper bound of the partition key range that
        /// should be split between the partition ‘Count’
        /// </summary>
        public readonly double HighKey;
        /// <summary>
        /// The lower bound of the partition key range that
        /// should be split between the partition ‘Count’
        /// </summary>
        public readonly double LowKey;
        /// <summary>
        /// Enumerates the ways that a service can be partitioned.
        /// Expected value is 'UniformInt64Range'.
        /// </summary>
        public readonly string PartitionScheme;

        [OutputConstructor]
        private UniformInt64RangePartitionSchemeResponse(
            int count,

            double highKey,

            double lowKey,

            string partitionScheme)
        {
            Count = count;
            HighKey = highKey;
            LowKey = lowKey;
            PartitionScheme = partitionScheme;
        }
    }
}
