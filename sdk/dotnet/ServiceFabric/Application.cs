// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabric
{
    /// <summary>
    /// The application resource.
    /// 
    /// Uses Azure REST API version 2024-11-01-preview. In version 1.x of the Azure Native provider, it used API version 2020-03-01.
    /// 
    /// Other available API versions: 2021-06-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:servicefabric:Application")]
    public partial class Application : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Describes the managed identities for an Azure resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// List of user assigned identities for the application, each mapped to a friendly name.
        /// </summary>
        [Output("managedIdentities")]
        public Output<ImmutableArray<Outputs.ApplicationUserAssignedIdentityResponse>> ManagedIdentities { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of application parameters with overridden values from their default values specified in the application manifest.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableDictionary<string, string>?> Parameters { get; private set; } = null!;

        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Describes the policy for a monitored application upgrade.
        /// </summary>
        [Output("upgradePolicy")]
        public Output<Outputs.ApplicationUpgradePolicyResponse?> UpgradePolicy { get; private set; } = null!;

        /// <summary>
        /// The version of the application type as defined in the application manifest.
        /// This name must be the full Arm Resource ID for the referenced application type version.
        /// </summary>
        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Application resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Application(string name, ApplicationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:servicefabric:Application", name, args ?? new ApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Application(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:servicefabric:Application", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20210101preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20210501:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20210701preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20210901privatepreview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20211101preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20220101:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20220201preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20220601preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20220801preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20221001preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20230201preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20230301preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20230701preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20230901preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20231101preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20231201preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20240201preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20240401:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20240601preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20240901preview:Application" },
                    new global::Pulumi.Alias { Type = "azure-native:servicefabric/v20241101preview:Application" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Application resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Application Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Application(name, id, options);
        }
    }

    public sealed class ApplicationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the application resource.
        /// </summary>
        [Input("applicationName")]
        public Input<string>? ApplicationName { get; set; }

        /// <summary>
        /// The name of the cluster resource.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Describes the managed identities for an Azure resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("managedIdentities")]
        private InputList<Inputs.ApplicationUserAssignedIdentityArgs>? _managedIdentities;

        /// <summary>
        /// List of user assigned identities for the application, each mapped to a friendly name.
        /// </summary>
        public InputList<Inputs.ApplicationUserAssignedIdentityArgs> ManagedIdentities
        {
            get => _managedIdentities ?? (_managedIdentities = new InputList<Inputs.ApplicationUserAssignedIdentityArgs>());
            set => _managedIdentities = value;
        }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// List of application parameters with overridden values from their default values specified in the application manifest.
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Describes the policy for a monitored application upgrade.
        /// </summary>
        [Input("upgradePolicy")]
        public Input<Inputs.ApplicationUpgradePolicyArgs>? UpgradePolicy { get; set; }

        /// <summary>
        /// The version of the application type as defined in the application manifest.
        /// This name must be the full Arm Resource ID for the referenced application type version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ApplicationArgs()
        {
        }
        public static new ApplicationArgs Empty => new ApplicationArgs();
    }
}
