// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ServiceFabric.V20160901.Inputs
{

    /// <summary>
    /// Cluster upgrade policy
    /// </summary>
    public sealed class ClusterUpgradePolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Delta health policy
        /// </summary>
        [Input("deltaHealthPolicy")]
        public Input<Inputs.ClusterUpgradeDeltaHealthPolicyArgs>? DeltaHealthPolicy { get; set; }

        /// <summary>
        /// Force node to restart or not
        /// </summary>
        [Input("forceRestart")]
        public Input<bool>? ForceRestart { get; set; }

        /// <summary>
        /// The length of time that health checks can fail continuously,it represents .Net TimeSpan
        /// </summary>
        [Input("healthCheckRetryTimeout", required: true)]
        public Input<string> HealthCheckRetryTimeout { get; set; } = null!;

        /// <summary>
        /// The length of time that health checks must pass continuously,it represents .Net TimeSpan
        /// </summary>
        [Input("healthCheckStableDuration", required: true)]
        public Input<string> HealthCheckStableDuration { get; set; } = null!;

        /// <summary>
        /// The length of time to wait after completing an upgrade domain before performing health checks, it represents .Net TimeSpan
        /// </summary>
        [Input("healthCheckWaitDuration", required: true)]
        public Input<string> HealthCheckWaitDuration { get; set; } = null!;

        /// <summary>
        /// Cluster health Policy
        /// </summary>
        [Input("healthPolicy", required: true)]
        public Input<Inputs.ClusterHealthPolicyArgs> HealthPolicy { get; set; } = null!;

        /// <summary>
        /// Use the user defined upgrade policy or not
        /// </summary>
        [Input("overrideUserUpgradePolicy")]
        public Input<bool>? OverrideUserUpgradePolicy { get; set; }

        /// <summary>
        /// The timeout for any upgrade domain,it represents .Net TimeSpan
        /// </summary>
        [Input("upgradeDomainTimeout", required: true)]
        public Input<string> UpgradeDomainTimeout { get; set; } = null!;

        /// <summary>
        /// Timeout for replica set upgrade to complete,it represents .Net TimeSpan
        /// </summary>
        [Input("upgradeReplicaSetCheckTimeout", required: true)]
        public Input<string> UpgradeReplicaSetCheckTimeout { get; set; } = null!;

        /// <summary>
        /// The upgrade timeout,it represents .Net TimeSpan
        /// </summary>
        [Input("upgradeTimeout", required: true)]
        public Input<string> UpgradeTimeout { get; set; } = null!;

        public ClusterUpgradePolicyArgs()
        {
        }
    }
}
