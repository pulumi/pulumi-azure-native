// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ServiceFabric.V20160901.Inputs
{

    /// <summary>
    /// Describes a node type in the cluster, each node type represents sub set of nodes in the cluster
    /// </summary>
    public sealed class NodeTypeDescriptionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Ports used by applications
        /// </summary>
        [Input("applicationPorts")]
        public Input<Inputs.EndpointRangeDescriptionArgs>? ApplicationPorts { get; set; }

        [Input("capacities")]
        private InputMap<string>? _capacities;

        /// <summary>
        /// The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much of a resource a node has
        /// </summary>
        public InputMap<string> Capacities
        {
            get => _capacities ?? (_capacities = new InputMap<string>());
            set => _capacities = value;
        }

        /// <summary>
        /// The TCP cluster management endpoint port
        /// </summary>
        [Input("clientConnectionEndpointPort", required: true)]
        public Input<int> ClientConnectionEndpointPort { get; set; } = null!;

        /// <summary>
        /// Node type durability Level
        /// </summary>
        [Input("durabilityLevel")]
        public Input<string>? DurabilityLevel { get; set; }

        /// <summary>
        /// System assigned application ports
        /// </summary>
        [Input("ephemeralPorts")]
        public Input<Inputs.EndpointRangeDescriptionArgs>? EphemeralPorts { get; set; }

        /// <summary>
        /// The HTTP cluster management endpoint port
        /// </summary>
        [Input("httpGatewayEndpointPort", required: true)]
        public Input<int> HttpGatewayEndpointPort { get; set; } = null!;

        /// <summary>
        /// Mark this as the primary node type
        /// </summary>
        [Input("isPrimary", required: true)]
        public Input<bool> IsPrimary { get; set; } = null!;

        /// <summary>
        /// Name of the node type
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("placementProperties")]
        private InputMap<string>? _placementProperties;

        /// <summary>
        /// The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run
        /// </summary>
        public InputMap<string> PlacementProperties
        {
            get => _placementProperties ?? (_placementProperties = new InputMap<string>());
            set => _placementProperties = value;
        }

        /// <summary>
        /// Endpoint used by reverse proxy
        /// </summary>
        [Input("reverseProxyEndpointPort")]
        public Input<int>? ReverseProxyEndpointPort { get; set; }

        /// <summary>
        /// The number of node instances in the node type
        /// </summary>
        [Input("vmInstanceCount", required: true)]
        public Input<int> VmInstanceCount { get; set; } = null!;

        public NodeTypeDescriptionArgs()
        {
        }
    }
}
