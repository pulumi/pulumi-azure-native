// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ServiceFabric.V20160901
{
    public static class GetCluster
    {
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("azure-nextgen:servicefabric/v20160901:getCluster", args ?? new GetClusterArgs(), options.WithVersion());
    }


    public sealed class GetClusterArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster resource
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to which the resource belongs or get created
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetClusterArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The available cluster code version which the cluster can upgrade to, note that you must choose upgradeMode to manual to upgrade to
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterVersionDetailsResponse> AvailableClusterVersions;
        /// <summary>
        /// The settings to enable AAD authentication on the cluster
        /// </summary>
        public readonly Outputs.AzureActiveDirectoryResponse? AzureActiveDirectory;
        /// <summary>
        /// This primary certificate will be used as cluster node to node security, SSL certificate for cluster management endpoint and default admin client
        /// </summary>
        public readonly Outputs.CertificateDescriptionResponse? Certificate;
        /// <summary>
        ///  List of client certificates to whitelist based on common names
        /// </summary>
        public readonly ImmutableArray<Outputs.ClientCertificateCommonNameResponse> ClientCertificateCommonNames;
        /// <summary>
        /// The client thumbprint details ,it is used for client access for cluster operation
        /// </summary>
        public readonly ImmutableArray<Outputs.ClientCertificateThumbprintResponse> ClientCertificateThumbprints;
        /// <summary>
        /// The ServiceFabric code version running in your cluster
        /// </summary>
        public readonly string? ClusterCodeVersion;
        /// <summary>
        /// The endpoint for the cluster connecting to servicefabric resource provider
        /// </summary>
        public readonly string ClusterEndpoint;
        /// <summary>
        /// The unique identifier for the cluster resource
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The state for the cluster
        /// </summary>
        public readonly string ClusterState;
        /// <summary>
        /// The storage diagnostics account configuration details
        /// </summary>
        public readonly Outputs.DiagnosticsStorageAccountConfigResponse? DiagnosticsStorageAccountConfig;
        /// <summary>
        /// List of custom fabric settings to configure the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.SettingsSectionDescriptionResponse> FabricSettings;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The http management endpoint of the cluster
        /// </summary>
        public readonly string ManagementEndpoint;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The list of node types that make up the cluster
        /// </summary>
        public readonly ImmutableArray<Outputs.NodeTypeDescriptionResponse> NodeTypes;
        /// <summary>
        /// The provisioning state of the cluster resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Cluster reliability level indicates replica set size of system service
        /// </summary>
        public readonly string? ReliabilityLevel;
        /// <summary>
        /// The server certificate used by reverse proxy
        /// </summary>
        public readonly Outputs.CertificateDescriptionResponse? ReverseProxyCertificate;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The policy to use when upgrading the cluster.
        /// </summary>
        public readonly Outputs.ClusterUpgradePolicyResponse? UpgradeDescription;
        /// <summary>
        /// Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not
        /// </summary>
        public readonly string? UpgradeMode;
        /// <summary>
        /// The name of VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
        /// </summary>
        public readonly string? VmImage;

        [OutputConstructor]
        private GetClusterResult(
            ImmutableArray<Outputs.ClusterVersionDetailsResponse> availableClusterVersions,

            Outputs.AzureActiveDirectoryResponse? azureActiveDirectory,

            Outputs.CertificateDescriptionResponse? certificate,

            ImmutableArray<Outputs.ClientCertificateCommonNameResponse> clientCertificateCommonNames,

            ImmutableArray<Outputs.ClientCertificateThumbprintResponse> clientCertificateThumbprints,

            string? clusterCodeVersion,

            string clusterEndpoint,

            string clusterId,

            string clusterState,

            Outputs.DiagnosticsStorageAccountConfigResponse? diagnosticsStorageAccountConfig,

            ImmutableArray<Outputs.SettingsSectionDescriptionResponse> fabricSettings,

            string location,

            string managementEndpoint,

            string name,

            ImmutableArray<Outputs.NodeTypeDescriptionResponse> nodeTypes,

            string provisioningState,

            string? reliabilityLevel,

            Outputs.CertificateDescriptionResponse? reverseProxyCertificate,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.ClusterUpgradePolicyResponse? upgradeDescription,

            string? upgradeMode,

            string? vmImage)
        {
            AvailableClusterVersions = availableClusterVersions;
            AzureActiveDirectory = azureActiveDirectory;
            Certificate = certificate;
            ClientCertificateCommonNames = clientCertificateCommonNames;
            ClientCertificateThumbprints = clientCertificateThumbprints;
            ClusterCodeVersion = clusterCodeVersion;
            ClusterEndpoint = clusterEndpoint;
            ClusterId = clusterId;
            ClusterState = clusterState;
            DiagnosticsStorageAccountConfig = diagnosticsStorageAccountConfig;
            FabricSettings = fabricSettings;
            Location = location;
            ManagementEndpoint = managementEndpoint;
            Name = name;
            NodeTypes = nodeTypes;
            ProvisioningState = provisioningState;
            ReliabilityLevel = reliabilityLevel;
            ReverseProxyCertificate = reverseProxyCertificate;
            Tags = tags;
            Type = type;
            UpgradeDescription = upgradeDescription;
            UpgradeMode = upgradeMode;
            VmImage = vmImage;
        }
    }
}
