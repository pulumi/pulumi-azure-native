// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabric.V20240601Preview.Outputs
{

    /// <summary>
    /// Specifies the gallery application that should be made available to the underlying VMSS.
    /// </summary>
    [OutputType]
    public sealed class VmApplicationResponse
    {
        /// <summary>
        /// Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided.
        /// </summary>
        public readonly string? ConfigurationReference;
        /// <summary>
        /// If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the underlying VMSS.
        /// </summary>
        public readonly bool? EnableAutomaticUpgrade;
        /// <summary>
        /// Optional, Specifies the order in which the packages have to be installed.
        /// </summary>
        public readonly int? Order;
        /// <summary>
        /// Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}.
        /// </summary>
        public readonly string PackageReferenceId;
        /// <summary>
        /// Optional, If true, any failure for any operation in the VmApplication will fail the deployment.
        /// </summary>
        public readonly bool? TreatFailureAsDeploymentFailure;
        /// <summary>
        /// Optional, Specifies a passthrough value for more generic context. Accepts a JSON-formatted string e.g. '{"Tag1":"Value1","Tag2":"Value2"}'.
        /// </summary>
        public readonly string? VmGalleryTags;

        [OutputConstructor]
        private VmApplicationResponse(
            string? configurationReference,

            bool? enableAutomaticUpgrade,

            int? order,

            string packageReferenceId,

            bool? treatFailureAsDeploymentFailure,

            string? vmGalleryTags)
        {
            ConfigurationReference = configurationReference;
            EnableAutomaticUpgrade = enableAutomaticUpgrade;
            Order = order;
            PackageReferenceId = packageReferenceId;
            TreatFailureAsDeploymentFailure = treatFailureAsDeploymentFailure;
            VmGalleryTags = vmGalleryTags;
        }
    }
}
