// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabric.V20240601Preview.Outputs
{

    /// <summary>
    /// Represents a scaling trigger related to an average load of a metric/resource of a partition.
    /// </summary>
    [OutputType]
    public sealed class AveragePartitionLoadScalingTriggerResponse
    {
        /// <summary>
        /// Enumerates the ways that a service can be partitioned.
        /// Expected value is 'AveragePartitionLoadTrigger'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The lower limit of the load below which a scale in operation should be performed.
        /// </summary>
        public readonly double LowerLoadThreshold;
        /// <summary>
        /// The name of the metric for which usage should be tracked.
        /// </summary>
        public readonly string MetricName;
        /// <summary>
        /// The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format "hh:mm:ss".
        /// </summary>
        public readonly string ScaleInterval;
        /// <summary>
        /// The upper limit of the load beyond which a scale out operation should be performed.
        /// </summary>
        public readonly double UpperLoadThreshold;

        [OutputConstructor]
        private AveragePartitionLoadScalingTriggerResponse(
            string kind,

            double lowerLoadThreshold,

            string metricName,

            string scaleInterval,

            double upperLoadThreshold)
        {
            Kind = kind;
            LowerLoadThreshold = lowerLoadThreshold;
            MetricName = metricName;
            ScaleInterval = scaleInterval;
            UpperLoadThreshold = upperLoadThreshold;
        }
    }
}
