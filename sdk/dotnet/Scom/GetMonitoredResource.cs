// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Scom
{
    public static class GetMonitoredResource
    {
        /// <summary>
        /// Retrieve the details of the monitored resource.
        /// Azure REST API version: 2023-07-07-preview.
        /// </summary>
        public static Task<GetMonitoredResourceResult> InvokeAsync(GetMonitoredResourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMonitoredResourceResult>("azure-native:scom:getMonitoredResource", args ?? new GetMonitoredResourceArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the details of the monitored resource.
        /// Azure REST API version: 2023-07-07-preview.
        /// </summary>
        public static Output<GetMonitoredResourceResult> Invoke(GetMonitoredResourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoredResourceResult>("azure-native:scom:getMonitoredResource", args ?? new GetMonitoredResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMonitoredResourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the SCOM managed instance.
        /// </summary>
        [Input("instanceName", required: true)]
        public string InstanceName { get; set; } = null!;

        /// <summary>
        /// The monitored resource name.
        /// </summary>
        [Input("monitoredResourceName", required: true)]
        public string MonitoredResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetMonitoredResourceArgs()
        {
        }
        public static new GetMonitoredResourceArgs Empty => new GetMonitoredResourceArgs();
    }

    public sealed class GetMonitoredResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the SCOM managed instance.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// The monitored resource name.
        /// </summary>
        [Input("monitoredResourceName", required: true)]
        public Input<string> MonitoredResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetMonitoredResourceInvokeArgs()
        {
        }
        public static new GetMonitoredResourceInvokeArgs Empty => new GetMonitoredResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetMonitoredResourceResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The properties of a monitored resource.
        /// </summary>
        public readonly Outputs.MonitoredResourcePropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMonitoredResourceResult(
            string id,

            string name,

            Outputs.MonitoredResourcePropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
