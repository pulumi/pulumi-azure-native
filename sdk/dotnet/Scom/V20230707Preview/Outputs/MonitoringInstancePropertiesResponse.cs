// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Scom.V20230707Preview.Outputs
{

    /// <summary>
    /// The properties of a SCOM instance resource
    /// </summary>
    [OutputType]
    public sealed class MonitoringInstancePropertiesResponse
    {
        /// <summary>
        /// The properties to enable Azure Hybrid benefit for various SCOM infrastructure license.
        /// </summary>
        public readonly Outputs.AzureHybridBenefitPropertiesResponse? AzureHybridBenefit;
        /// <summary>
        /// The database instance where the SCOM Operational and Warehouse databases will be stored.
        /// </summary>
        public readonly Outputs.DatabaseInstancePropertiesResponse? DatabaseInstance;
        /// <summary>
        /// Domain controller details
        /// </summary>
        public readonly Outputs.DomainControllerPropertiesResponse? DomainController;
        /// <summary>
        /// Domain user which will be used to join VMs to domain and login to VMs.
        /// </summary>
        public readonly Outputs.DomainUserCredentialsResponse? DomainUserCredentials;
        /// <summary>
        /// Gmsa Details for load balancer and vmss
        /// </summary>
        public readonly Outputs.GmsaDetailsResponse? GmsaDetails;
        /// <summary>
        /// Details of Log Analytics workspace and data being ingested.
        /// </summary>
        public readonly Outputs.LogAnalyticsConfigurationResponse LogAnalyticsProperties;
        /// <summary>
        /// List of management server endpoints
        /// </summary>
        public readonly ImmutableArray<Outputs.ManagementServerPropertiesResponse> ManagementEndpoints;
        /// <summary>
        /// Gets status of current and latest SCOM managed instance operations.
        /// </summary>
        public readonly ImmutableArray<Outputs.ManagedInstanceOperationStatusResponse> OperationsStatus;
        /// <summary>
        /// SCOM product version to be installed on instance
        /// </summary>
        public readonly string ProductVersion;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Virtual Network subnet id on which Aquila instance will be provisioned
        /// </summary>
        public readonly string? VNetSubnetId;

        [OutputConstructor]
        private MonitoringInstancePropertiesResponse(
            Outputs.AzureHybridBenefitPropertiesResponse? azureHybridBenefit,

            Outputs.DatabaseInstancePropertiesResponse? databaseInstance,

            Outputs.DomainControllerPropertiesResponse? domainController,

            Outputs.DomainUserCredentialsResponse? domainUserCredentials,

            Outputs.GmsaDetailsResponse? gmsaDetails,

            Outputs.LogAnalyticsConfigurationResponse logAnalyticsProperties,

            ImmutableArray<Outputs.ManagementServerPropertiesResponse> managementEndpoints,

            ImmutableArray<Outputs.ManagedInstanceOperationStatusResponse> operationsStatus,

            string productVersion,

            string provisioningState,

            string? vNetSubnetId)
        {
            AzureHybridBenefit = azureHybridBenefit;
            DatabaseInstance = databaseInstance;
            DomainController = domainController;
            DomainUserCredentials = domainUserCredentials;
            GmsaDetails = gmsaDetails;
            LogAnalyticsProperties = logAnalyticsProperties;
            ManagementEndpoints = managementEndpoints;
            OperationsStatus = operationsStatus;
            ProductVersion = productVersion;
            ProvisioningState = provisioningState;
            VNetSubnetId = vNetSubnetId;
        }
    }
}
