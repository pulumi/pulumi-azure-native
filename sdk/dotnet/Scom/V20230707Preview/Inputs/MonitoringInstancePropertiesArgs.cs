// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Scom.V20230707Preview.Inputs
{

    /// <summary>
    /// The properties of a SCOM instance resource
    /// </summary>
    public sealed class MonitoringInstancePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The properties to enable Azure Hybrid benefit for various SCOM infrastructure license.
        /// </summary>
        [Input("azureHybridBenefit")]
        public Input<Inputs.AzureHybridBenefitPropertiesArgs>? AzureHybridBenefit { get; set; }

        /// <summary>
        /// The database instance where the SCOM Operational and Warehouse databases will be stored.
        /// </summary>
        [Input("databaseInstance")]
        public Input<Inputs.DatabaseInstancePropertiesArgs>? DatabaseInstance { get; set; }

        /// <summary>
        /// Domain controller details
        /// </summary>
        [Input("domainController")]
        public Input<Inputs.DomainControllerPropertiesArgs>? DomainController { get; set; }

        /// <summary>
        /// Domain user which will be used to join VMs to domain and login to VMs.
        /// </summary>
        [Input("domainUserCredentials")]
        public Input<Inputs.DomainUserCredentialsArgs>? DomainUserCredentials { get; set; }

        /// <summary>
        /// Gmsa Details for load balancer and vmss
        /// </summary>
        [Input("gmsaDetails")]
        public Input<Inputs.GmsaDetailsArgs>? GmsaDetails { get; set; }

        /// <summary>
        /// Virtual Network subnet id on which Aquila instance will be provisioned
        /// </summary>
        [Input("vNetSubnetId")]
        public Input<string>? VNetSubnetId { get; set; }

        public MonitoringInstancePropertiesArgs()
        {
        }
        public static new MonitoringInstancePropertiesArgs Empty => new MonitoringInstancePropertiesArgs();
    }
}
