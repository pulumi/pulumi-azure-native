// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Scom.Outputs
{

    /// <summary>
    /// The properties of a monitored resource.
    /// </summary>
    [OutputType]
    public sealed class MonitoredResourcePropertiesResponse
    {
        /// <summary>
        /// The version of the monitored resource agent version.
        /// </summary>
        public readonly string AgentVersion;
        /// <summary>
        /// ComputerName of the monitored resource.
        /// </summary>
        public readonly string? ComputerName;
        /// <summary>
        /// The connection status of the monitored resource.
        /// </summary>
        public readonly string ConnectionStatus;
        /// <summary>
        /// The domain name associated with the monitored resource.
        /// </summary>
        public readonly string? DomainName;
        /// <summary>
        /// The health status of the monitored resource.
        /// </summary>
        public readonly string HealthStatus;
        /// <summary>
        /// Install type of monitored resource.
        /// </summary>
        public readonly string InstallType;
        /// <summary>
        /// The management server endpoint to which the monitored resource is directed.
        /// </summary>
        public readonly string ManagementServerEndpoint;
        public readonly string ProvisioningState;
        /// <summary>
        /// ArmId of the monitored resource.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// Location of the monitored resource.
        /// </summary>
        public readonly string? ResourceLocation;

        [OutputConstructor]
        private MonitoredResourcePropertiesResponse(
            string agentVersion,

            string? computerName,

            string connectionStatus,

            string? domainName,

            string healthStatus,

            string installType,

            string managementServerEndpoint,

            string provisioningState,

            string? resourceId,

            string? resourceLocation)
        {
            AgentVersion = agentVersion;
            ComputerName = computerName;
            ConnectionStatus = connectionStatus;
            DomainName = domainName;
            HealthStatus = healthStatus;
            InstallType = installType;
            ManagementServerEndpoint = managementServerEndpoint;
            ProvisioningState = provisioningState;
            ResourceId = resourceId;
            ResourceLocation = resourceLocation;
        }
    }
}
