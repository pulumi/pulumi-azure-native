// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridCompute.V20240520Preview.Outputs
{

    /// <summary>
    /// Describes the properties of a License.
    /// </summary>
    [OutputType]
    public sealed class LicenseDetailsResponse
    {
        /// <summary>
        /// Describes the number of assigned licenses.
        /// </summary>
        public readonly int AssignedLicenses;
        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        public readonly string? Edition;
        /// <summary>
        /// Describes the immutable id.
        /// </summary>
        public readonly string ImmutableId;
        /// <summary>
        /// Describes the number of processors.
        /// </summary>
        public readonly int? Processors;
        /// <summary>
        /// Describes the state of the license.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Describes the license target server.
        /// </summary>
        public readonly string? Target;
        /// <summary>
        /// Describes the license core type (pCore or vCore).
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// A list of volume license details.
        /// </summary>
        public readonly ImmutableArray<Outputs.VolumeLicenseDetailsResponse> VolumeLicenseDetails;

        [OutputConstructor]
        private LicenseDetailsResponse(
            int assignedLicenses,

            string? edition,

            string immutableId,

            int? processors,

            string? state,

            string? target,

            string? type,

            ImmutableArray<Outputs.VolumeLicenseDetailsResponse> volumeLicenseDetails)
        {
            AssignedLicenses = assignedLicenses;
            Edition = edition;
            ImmutableId = immutableId;
            Processors = processors;
            State = state;
            Target = target;
            Type = type;
            VolumeLicenseDetails = volumeLicenseDetails;
        }
    }
}
