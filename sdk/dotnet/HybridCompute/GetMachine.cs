// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridCompute
{
    public static class GetMachine
    {
        /// <summary>
        /// Retrieves information about the model view or the instance view of a hybrid machine.
        /// Azure REST API version: 2022-12-27.
        /// 
        /// Other available API versions: 2019-03-18-preview, 2019-08-02-preview, 2020-08-02, 2020-08-15-preview, 2022-05-10-preview, 2023-06-20-preview, 2023-10-03-preview, 2024-03-31-preview, 2024-05-20-preview, 2024-07-10, 2024-07-31-preview, 2024-09-10-preview.
        /// </summary>
        public static Task<GetMachineResult> InvokeAsync(GetMachineArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMachineResult>("azure-native:hybridcompute:getMachine", args ?? new GetMachineArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about the model view or the instance view of a hybrid machine.
        /// Azure REST API version: 2022-12-27.
        /// 
        /// Other available API versions: 2019-03-18-preview, 2019-08-02-preview, 2020-08-02, 2020-08-15-preview, 2022-05-10-preview, 2023-06-20-preview, 2023-10-03-preview, 2024-03-31-preview, 2024-05-20-preview, 2024-07-10, 2024-07-31-preview, 2024-09-10-preview.
        /// </summary>
        public static Output<GetMachineResult> Invoke(GetMachineInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMachineResult>("azure-native:hybridcompute:getMachine", args ?? new GetMachineInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMachineArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The expand expression to apply on the operation.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the hybrid machine.
        /// </summary>
        [Input("machineName", required: true)]
        public string MachineName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetMachineArgs()
        {
        }
        public static new GetMachineArgs Empty => new GetMachineArgs();
    }

    public sealed class GetMachineInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The expand expression to apply on the operation.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// The name of the hybrid machine.
        /// </summary>
        [Input("machineName", required: true)]
        public Input<string> MachineName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetMachineInvokeArgs()
        {
        }
        public static new GetMachineInvokeArgs Empty => new GetMachineInvokeArgs();
    }


    [OutputType]
    public sealed class GetMachineResult
    {
        /// <summary>
        /// Specifies the AD fully qualified display name.
        /// </summary>
        public readonly string AdFqdn;
        /// <summary>
        /// Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM.
        /// </summary>
        public readonly Outputs.AgentConfigurationResponse AgentConfiguration;
        /// <summary>
        /// The info of the machine w.r.t Agent Upgrade
        /// </summary>
        public readonly Outputs.AgentUpgradeResponse? AgentUpgrade;
        /// <summary>
        /// The hybrid machine agent full version.
        /// </summary>
        public readonly string AgentVersion;
        /// <summary>
        /// Public Key that the client provides to be used during initial resource onboarding
        /// </summary>
        public readonly string? ClientPublicKey;
        /// <summary>
        /// The metadata of the cloud environment (Azure/GCP/AWS/OCI...).
        /// </summary>
        public readonly Outputs.CloudMetadataResponse? CloudMetadata;
        /// <summary>
        /// Detected properties from the machine.
        /// </summary>
        public readonly ImmutableDictionary<string, string> DetectedProperties;
        /// <summary>
        /// Specifies the hybrid machine display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Specifies the DNS fully qualified display name.
        /// </summary>
        public readonly string DnsFqdn;
        /// <summary>
        /// Specifies the Windows domain name.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// Details about the error state.
        /// </summary>
        public readonly ImmutableArray<Outputs.ErrorDetailResponse> ErrorDetails;
        /// <summary>
        /// Machine Extensions information (deprecated field)
        /// </summary>
        public readonly ImmutableArray<Outputs.MachineExtensionInstanceViewResponse> Extensions;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identity for the resource.
        /// </summary>
        public readonly Outputs.IdentityResponse? Identity;
        /// <summary>
        /// The time of the last status change.
        /// </summary>
        public readonly string LastStatusChange;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Metadata pertaining to the geographic location of the resource.
        /// </summary>
        public readonly Outputs.LocationDataResponse? LocationData;
        /// <summary>
        /// Specifies the hybrid machine FQDN.
        /// </summary>
        public readonly string MachineFqdn;
        /// <summary>
        /// Specifies whether any MS SQL instance is discovered on the machine.
        /// </summary>
        public readonly string? MssqlDiscovered;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Operating System running on the hybrid machine.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// Specifies the operating system settings for the hybrid machine.
        /// </summary>
        public readonly Outputs.OSProfileResponse? OsProfile;
        /// <summary>
        /// Specifies the Operating System product SKU.
        /// </summary>
        public readonly string OsSku;
        /// <summary>
        /// The type of Operating System (windows/linux).
        /// </summary>
        public readonly string? OsType;
        /// <summary>
        /// The version of Operating System running on the hybrid machine.
        /// </summary>
        public readonly string OsVersion;
        /// <summary>
        /// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
        /// </summary>
        public readonly string? ParentClusterResourceId;
        /// <summary>
        /// The resource id of the private link scope this machine is assigned to, if any.
        /// </summary>
        public readonly string? PrivateLinkScopeResourceId;
        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The list of extensions affiliated to the machine
        /// </summary>
        public readonly ImmutableArray<Outputs.MachineExtensionResponse> Resources;
        /// <summary>
        /// Statuses of dependent services that are reported back to ARM.
        /// </summary>
        public readonly Outputs.ServiceStatusesResponse? ServiceStatuses;
        /// <summary>
        /// The status of the hybrid machine agent.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Specifies the hybrid machine unique ID.
        /// </summary>
        public readonly string? VmId;
        /// <summary>
        /// Specifies the Arc Machine's unique SMBIOS ID
        /// </summary>
        public readonly string VmUuid;

        [OutputConstructor]
        private GetMachineResult(
            string adFqdn,

            Outputs.AgentConfigurationResponse agentConfiguration,

            Outputs.AgentUpgradeResponse? agentUpgrade,

            string agentVersion,

            string? clientPublicKey,

            Outputs.CloudMetadataResponse? cloudMetadata,

            ImmutableDictionary<string, string> detectedProperties,

            string displayName,

            string dnsFqdn,

            string domainName,

            ImmutableArray<Outputs.ErrorDetailResponse> errorDetails,

            ImmutableArray<Outputs.MachineExtensionInstanceViewResponse> extensions,

            string id,

            Outputs.IdentityResponse? identity,

            string lastStatusChange,

            string location,

            Outputs.LocationDataResponse? locationData,

            string machineFqdn,

            string? mssqlDiscovered,

            string name,

            string osName,

            Outputs.OSProfileResponse? osProfile,

            string osSku,

            string? osType,

            string osVersion,

            string? parentClusterResourceId,

            string? privateLinkScopeResourceId,

            string provisioningState,

            ImmutableArray<Outputs.MachineExtensionResponse> resources,

            Outputs.ServiceStatusesResponse? serviceStatuses,

            string status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? vmId,

            string vmUuid)
        {
            AdFqdn = adFqdn;
            AgentConfiguration = agentConfiguration;
            AgentUpgrade = agentUpgrade;
            AgentVersion = agentVersion;
            ClientPublicKey = clientPublicKey;
            CloudMetadata = cloudMetadata;
            DetectedProperties = detectedProperties;
            DisplayName = displayName;
            DnsFqdn = dnsFqdn;
            DomainName = domainName;
            ErrorDetails = errorDetails;
            Extensions = extensions;
            Id = id;
            Identity = identity;
            LastStatusChange = lastStatusChange;
            Location = location;
            LocationData = locationData;
            MachineFqdn = machineFqdn;
            MssqlDiscovered = mssqlDiscovered;
            Name = name;
            OsName = osName;
            OsProfile = osProfile;
            OsSku = osSku;
            OsType = osType;
            OsVersion = osVersion;
            ParentClusterResourceId = parentClusterResourceId;
            PrivateLinkScopeResourceId = privateLinkScopeResourceId;
            ProvisioningState = provisioningState;
            Resources = resources;
            ServiceStatuses = serviceStatuses;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VmId = vmId;
            VmUuid = vmUuid;
        }
    }
}
