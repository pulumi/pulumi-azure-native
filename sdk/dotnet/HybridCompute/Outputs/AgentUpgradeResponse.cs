// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridCompute.Outputs
{

    /// <summary>
    /// The info w.r.t Agent Upgrade.
    /// </summary>
    [OutputType]
    public sealed class AgentUpgradeResponse
    {
        /// <summary>
        /// The correlation ID passed in from RSM per upgrade.
        /// </summary>
        public readonly string? CorrelationId;
        /// <summary>
        /// Specifies the version info w.r.t AgentUpgrade for the machine.
        /// </summary>
        public readonly string? DesiredVersion;
        /// <summary>
        /// Specifies if RSM should try to upgrade this machine
        /// </summary>
        public readonly bool? EnableAutomaticUpgrade;
        /// <summary>
        /// Failure message of last upgrade attempt if any.
        /// </summary>
        public readonly string LastAttemptMessage;
        /// <summary>
        /// Specifies the status of Agent Upgrade.
        /// </summary>
        public readonly string LastAttemptStatus;
        /// <summary>
        /// Timestamp of last upgrade attempt
        /// </summary>
        public readonly string LastAttemptTimestamp;

        [OutputConstructor]
        private AgentUpgradeResponse(
            string? correlationId,

            string? desiredVersion,

            bool? enableAutomaticUpgrade,

            string lastAttemptMessage,

            string lastAttemptStatus,

            string lastAttemptTimestamp)
        {
            CorrelationId = correlationId;
            DesiredVersion = desiredVersion;
            EnableAutomaticUpgrade = enableAutomaticUpgrade;
            LastAttemptMessage = lastAttemptMessage;
            LastAttemptStatus = lastAttemptStatus;
            LastAttemptTimestamp = lastAttemptTimestamp;
        }
    }
}
