// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridCompute.Inputs
{

    /// <summary>
    /// Describes the properties of a License.
    /// </summary>
    public sealed class LicenseDetailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [Input("edition")]
        public InputUnion<string, Pulumi.AzureNative.HybridCompute.LicenseEdition>? Edition { get; set; }

        /// <summary>
        /// Describes the number of processors.
        /// </summary>
        [Input("processors")]
        public Input<int>? Processors { get; set; }

        /// <summary>
        /// Describes the state of the license.
        /// </summary>
        [Input("state")]
        public InputUnion<string, Pulumi.AzureNative.HybridCompute.LicenseState>? State { get; set; }

        /// <summary>
        /// Describes the license target server.
        /// </summary>
        [Input("target")]
        public InputUnion<string, Pulumi.AzureNative.HybridCompute.LicenseTarget>? Target { get; set; }

        /// <summary>
        /// Describes the license core type (pCore or vCore).
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.HybridCompute.LicenseCoreType>? Type { get; set; }

        public LicenseDetailsArgs()
        {
        }
        public static new LicenseDetailsArgs Empty => new LicenseDetailsArgs();
    }
}
