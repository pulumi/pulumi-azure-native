// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ManagedServices.V20200201Preview.Outputs
{

    [OutputType]
    public sealed class EligibleAuthorizationResponse
    {
        /// <summary>
        /// Just-in-time access policy setting.
        /// </summary>
        public readonly Outputs.JustInTimeAccessPolicyResponse? JustInTimeAccessPolicy;
        /// <summary>
        /// Principal Id of the security group/service principal/user that would be delegated permissions to the projected subscription
        /// </summary>
        public readonly string PrincipalId;
        /// <summary>
        /// Display name of the principal Id.
        /// </summary>
        public readonly string? PrincipalIdDisplayName;
        /// <summary>
        /// The role definition identifier. This role will delegate all the permissions that the security group/service principal/user must have on the projected subscription. This role cannot be an owner role.
        /// </summary>
        public readonly string RoleDefinitionId;

        [OutputConstructor]
        private EligibleAuthorizationResponse(
            Outputs.JustInTimeAccessPolicyResponse? justInTimeAccessPolicy,

            string principalId,

            string? principalIdDisplayName,

            string roleDefinitionId)
        {
            JustInTimeAccessPolicy = justInTimeAccessPolicy;
            PrincipalId = principalId;
            PrincipalIdDisplayName = principalIdDisplayName;
            RoleDefinitionId = roleDefinitionId;
        }
    }
}
