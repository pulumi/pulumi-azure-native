// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ManagedServices.V20200201Preview
{
    public static class GetRegistrationDefinition
    {
        public static Task<GetRegistrationDefinitionResult> InvokeAsync(GetRegistrationDefinitionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegistrationDefinitionResult>("azure-nextgen:managedservices/v20200201preview:getRegistrationDefinition", args ?? new GetRegistrationDefinitionArgs(), options.WithVersion());
    }


    public sealed class GetRegistrationDefinitionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Guid of the registration definition.
        /// </summary>
        [Input("registrationDefinitionId", required: true)]
        public string RegistrationDefinitionId { get; set; } = null!;

        /// <summary>
        /// Scope of the resource.
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        public GetRegistrationDefinitionArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRegistrationDefinitionResult
    {
        /// <summary>
        /// Name of the registration definition.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Plan details for the managed services.
        /// </summary>
        public readonly Outputs.PlanResponse? Plan;
        /// <summary>
        /// Properties of a registration definition.
        /// </summary>
        public readonly Outputs.RegistrationDefinitionPropertiesResponse Properties;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRegistrationDefinitionResult(
            string name,

            Outputs.PlanResponse? plan,

            Outputs.RegistrationDefinitionPropertiesResponse properties,

            string type)
        {
            Name = name;
            Plan = plan;
            Properties = properties;
            Type = type;
        }
    }
}
