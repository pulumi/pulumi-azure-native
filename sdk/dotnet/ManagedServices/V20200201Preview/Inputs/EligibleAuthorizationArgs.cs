// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ManagedServices.V20200201Preview.Inputs
{

    /// <summary>
    /// Eligible authorization tuple containing principle Id (of user/service principal/security group), role definition id, and the just-in-time access setting.
    /// </summary>
    public sealed class EligibleAuthorizationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Just-in-time access policy setting.
        /// </summary>
        [Input("justInTimeAccessPolicy")]
        public Input<Inputs.JustInTimeAccessPolicyArgs>? JustInTimeAccessPolicy { get; set; }

        /// <summary>
        /// Principal Id of the security group/service principal/user that would be delegated permissions to the projected subscription
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        /// <summary>
        /// Display name of the principal Id.
        /// </summary>
        [Input("principalIdDisplayName")]
        public Input<string>? PrincipalIdDisplayName { get; set; }

        /// <summary>
        /// The role definition identifier. This role will delegate all the permissions that the security group/service principal/user must have on the projected subscription. This role cannot be an owner role.
        /// </summary>
        [Input("roleDefinitionId", required: true)]
        public Input<string> RoleDefinitionId { get; set; } = null!;

        public EligibleAuthorizationArgs()
        {
        }
    }
}
