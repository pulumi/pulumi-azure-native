// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedServices.V20190601
{
    [Obsolete(@"Version 2019-06-01 will be removed in v2 of the provider.")]
    public static class GetRegistrationAssignment
    {
        /// <summary>
        /// Registration assignment.
        /// </summary>
        public static Task<GetRegistrationAssignmentResult> InvokeAsync(GetRegistrationAssignmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegistrationAssignmentResult>("azure-native:managedservices/v20190601:getRegistrationAssignment", args ?? new GetRegistrationAssignmentArgs(), options.WithDefaults());

        /// <summary>
        /// Registration assignment.
        /// </summary>
        public static Output<GetRegistrationAssignmentResult> Invoke(GetRegistrationAssignmentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRegistrationAssignmentResult>("azure-native:managedservices/v20190601:getRegistrationAssignment", args ?? new GetRegistrationAssignmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegistrationAssignmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Tells whether to return registration definition details also along with registration assignment details.
        /// </summary>
        [Input("expandRegistrationDefinition")]
        public bool? ExpandRegistrationDefinition { get; set; }

        /// <summary>
        /// Guid of the registration assignment.
        /// </summary>
        [Input("registrationAssignmentId", required: true)]
        public string RegistrationAssignmentId { get; set; } = null!;

        /// <summary>
        /// Scope of the resource.
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        public GetRegistrationAssignmentArgs()
        {
        }
        public static new GetRegistrationAssignmentArgs Empty => new GetRegistrationAssignmentArgs();
    }

    public sealed class GetRegistrationAssignmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Tells whether to return registration definition details also along with registration assignment details.
        /// </summary>
        [Input("expandRegistrationDefinition")]
        public Input<bool>? ExpandRegistrationDefinition { get; set; }

        /// <summary>
        /// Guid of the registration assignment.
        /// </summary>
        [Input("registrationAssignmentId", required: true)]
        public Input<string> RegistrationAssignmentId { get; set; } = null!;

        /// <summary>
        /// Scope of the resource.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        public GetRegistrationAssignmentInvokeArgs()
        {
        }
        public static new GetRegistrationAssignmentInvokeArgs Empty => new GetRegistrationAssignmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegistrationAssignmentResult
    {
        /// <summary>
        /// The fully qualified path of the registration assignment.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the registration assignment.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of a registration assignment.
        /// </summary>
        public readonly Outputs.RegistrationAssignmentPropertiesResponse Properties;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRegistrationAssignmentResult(
            string id,

            string name,

            Outputs.RegistrationAssignmentPropertiesResponse properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
