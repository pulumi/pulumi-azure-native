// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedServices.Outputs
{

    /// <summary>
    /// Just-in-time access policy setting.
    /// </summary>
    [OutputType]
    public sealed class JustInTimeAccessPolicyResponse
    {
        /// <summary>
        /// The list of managedByTenant approvers for the eligible authorization.
        /// </summary>
        public readonly ImmutableArray<Outputs.EligibleApproverResponse> ManagedByTenantApprovers;
        /// <summary>
        /// The maximum access duration in ISO 8601 format for just-in-time access requests.
        /// </summary>
        public readonly string? MaximumActivationDuration;
        /// <summary>
        /// The multi-factor authorization provider to be used for just-in-time access requests.
        /// </summary>
        public readonly string MultiFactorAuthProvider;

        [OutputConstructor]
        private JustInTimeAccessPolicyResponse(
            ImmutableArray<Outputs.EligibleApproverResponse> managedByTenantApprovers,

            string? maximumActivationDuration,

            string multiFactorAuthProvider)
        {
            ManagedByTenantApprovers = managedByTenantApprovers;
            MaximumActivationDuration = maximumActivationDuration;
            MultiFactorAuthProvider = multiFactorAuthProvider;
        }
    }
}
