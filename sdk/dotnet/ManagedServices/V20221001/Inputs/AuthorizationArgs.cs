// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedServices.V20221001.Inputs
{

    /// <summary>
    /// The Azure Active Directory principal identifier and Azure built-in role that describes the access the principal will receive on the delegated resource in the managed tenant.
    /// </summary>
    public sealed class AuthorizationArgs : global::Pulumi.ResourceArgs
    {
        [Input("delegatedRoleDefinitionIds")]
        private InputList<string>? _delegatedRoleDefinitionIds;

        /// <summary>
        /// The delegatedRoleDefinitionIds field is required when the roleDefinitionId refers to the User Access Administrator Role. It is the list of role definition ids which define all the permissions that the user in the authorization can assign to other principals.
        /// </summary>
        public InputList<string> DelegatedRoleDefinitionIds
        {
            get => _delegatedRoleDefinitionIds ?? (_delegatedRoleDefinitionIds = new InputList<string>());
            set => _delegatedRoleDefinitionIds = value;
        }

        /// <summary>
        /// The identifier of the Azure Active Directory principal.
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        /// <summary>
        /// The display name of the Azure Active Directory principal.
        /// </summary>
        [Input("principalIdDisplayName")]
        public Input<string>? PrincipalIdDisplayName { get; set; }

        /// <summary>
        /// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
        /// </summary>
        [Input("roleDefinitionId", required: true)]
        public Input<string> RoleDefinitionId { get; set; } = null!;

        public AuthorizationArgs()
        {
        }
        public static new AuthorizationArgs Empty => new AuthorizationArgs();
    }
}
