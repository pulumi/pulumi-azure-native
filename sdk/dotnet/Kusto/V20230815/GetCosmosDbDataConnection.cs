// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Kusto.V20230815
{
    public static class GetCosmosDbDataConnection
    {
        /// <summary>
        /// Returns a data connection.
        /// </summary>
        public static Task<GetCosmosDbDataConnectionResult> InvokeAsync(GetCosmosDbDataConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCosmosDbDataConnectionResult>("azure-native:kusto/v20230815:getCosmosDbDataConnection", args ?? new GetCosmosDbDataConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a data connection.
        /// </summary>
        public static Output<GetCosmosDbDataConnectionResult> Invoke(GetCosmosDbDataConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCosmosDbDataConnectionResult>("azure-native:kusto/v20230815:getCosmosDbDataConnection", args ?? new GetCosmosDbDataConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCosmosDbDataConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kusto cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the data connection.
        /// </summary>
        [Input("dataConnectionName", required: true)]
        public string DataConnectionName { get; set; } = null!;

        /// <summary>
        /// The name of the database in the Kusto cluster.
        /// </summary>
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCosmosDbDataConnectionArgs()
        {
        }
        public static new GetCosmosDbDataConnectionArgs Empty => new GetCosmosDbDataConnectionArgs();
    }

    public sealed class GetCosmosDbDataConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kusto cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the data connection.
        /// </summary>
        [Input("dataConnectionName", required: true)]
        public Input<string> DataConnectionName { get; set; } = null!;

        /// <summary>
        /// The name of the database in the Kusto cluster.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCosmosDbDataConnectionInvokeArgs()
        {
        }
        public static new GetCosmosDbDataConnectionInvokeArgs Empty => new GetCosmosDbDataConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetCosmosDbDataConnectionResult
    {
        /// <summary>
        /// The resource ID of the Cosmos DB account used to create the data connection.
        /// </summary>
        public readonly string CosmosDbAccountResourceId;
        /// <summary>
        /// The name of an existing container in the Cosmos DB database.
        /// </summary>
        public readonly string CosmosDbContainer;
        /// <summary>
        /// The name of an existing database in the Cosmos DB account.
        /// </summary>
        public readonly string CosmosDbDatabase;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of the endpoint for the data connection
        /// Expected value is 'CosmosDb'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The object ID of the managed identity resource.
        /// </summary>
        public readonly string ManagedIdentityObjectId;
        /// <summary>
        /// The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB.
        /// </summary>
        public readonly string ManagedIdentityResourceId;
        /// <summary>
        /// The name of an existing mapping rule to use when ingesting the retrieved data.
        /// </summary>
        public readonly string? MappingRuleName;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date.
        /// </summary>
        public readonly string? RetrievalStartDate;
        /// <summary>
        /// The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table.
        /// </summary>
        public readonly string TableName;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCosmosDbDataConnectionResult(
            string cosmosDbAccountResourceId,

            string cosmosDbContainer,

            string cosmosDbDatabase,

            string id,

            string kind,

            string? location,

            string managedIdentityObjectId,

            string managedIdentityResourceId,

            string? mappingRuleName,

            string name,

            string provisioningState,

            string? retrievalStartDate,

            string tableName,

            string type)
        {
            CosmosDbAccountResourceId = cosmosDbAccountResourceId;
            CosmosDbContainer = cosmosDbContainer;
            CosmosDbDatabase = cosmosDbDatabase;
            Id = id;
            Kind = kind;
            Location = location;
            ManagedIdentityObjectId = managedIdentityObjectId;
            ManagedIdentityResourceId = managedIdentityResourceId;
            MappingRuleName = mappingRuleName;
            Name = name;
            ProvisioningState = provisioningState;
            RetrievalStartDate = retrievalStartDate;
            TableName = tableName;
            Type = type;
        }
    }
}
