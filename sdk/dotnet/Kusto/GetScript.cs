// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Kusto
{
    public static class GetScript
    {
        /// <summary>
        /// Class representing a database script.
        /// API Version: 2021-01-01.
        /// </summary>
        public static Task<GetScriptResult> InvokeAsync(GetScriptArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScriptResult>("azure-native:kusto:getScript", args ?? new GetScriptArgs(), options.WithDefaults());

        /// <summary>
        /// Class representing a database script.
        /// API Version: 2021-01-01.
        /// </summary>
        public static Output<GetScriptResult> Invoke(GetScriptInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetScriptResult>("azure-native:kusto:getScript", args ?? new GetScriptInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScriptArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kusto cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the database in the Kusto cluster.
        /// </summary>
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group containing the Kusto cluster.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Kusto database script.
        /// </summary>
        [Input("scriptName", required: true)]
        public string ScriptName { get; set; } = null!;

        public GetScriptArgs()
        {
        }
    }

    public sealed class GetScriptInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kusto cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the database in the Kusto cluster.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group containing the Kusto cluster.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Kusto database script.
        /// </summary>
        [Input("scriptName", required: true)]
        public Input<string> ScriptName { get; set; } = null!;

        public GetScriptInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScriptResult
    {
        /// <summary>
        /// Flag that indicates whether to continue if one of the command fails.
        /// </summary>
        public readonly bool? ContinueOnErrors;
        /// <summary>
        /// A unique string. If changed the script will be applied again.
        /// </summary>
        public readonly string? ForceUpdateTag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The url to the KQL script blob file.
        /// </summary>
        public readonly string ScriptUrl;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetScriptResult(
            bool? continueOnErrors,

            string? forceUpdateTag,

            string id,

            string name,

            string provisioningState,

            string scriptUrl,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ContinueOnErrors = continueOnErrors;
            ForceUpdateTag = forceUpdateTag;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            ScriptUrl = scriptUrl;
            SystemData = systemData;
            Type = type;
        }
    }
}
