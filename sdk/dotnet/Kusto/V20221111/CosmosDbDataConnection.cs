// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Kusto.V20221111
{
    /// <summary>
    /// Class representing a CosmosDb data connection.
    /// </summary>
    [AzureNativeResourceType("azure-native:kusto/v20221111:CosmosDbDataConnection")]
    public partial class CosmosDbDataConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The resource ID of the Cosmos DB account used to create the data connection.
        /// </summary>
        [Output("cosmosDbAccountResourceId")]
        public Output<string> CosmosDbAccountResourceId { get; private set; } = null!;

        /// <summary>
        /// The name of an existing container in the Cosmos DB database.
        /// </summary>
        [Output("cosmosDbContainer")]
        public Output<string> CosmosDbContainer { get; private set; } = null!;

        /// <summary>
        /// The name of an existing database in the Cosmos DB account.
        /// </summary>
        [Output("cosmosDbDatabase")]
        public Output<string> CosmosDbDatabase { get; private set; } = null!;

        /// <summary>
        /// Kind of the endpoint for the data connection
        /// Expected value is 'CosmosDb'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The object ID of the managed identity resource.
        /// </summary>
        [Output("managedIdentityObjectId")]
        public Output<string> ManagedIdentityObjectId { get; private set; } = null!;

        /// <summary>
        /// The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB.
        /// </summary>
        [Output("managedIdentityResourceId")]
        public Output<string> ManagedIdentityResourceId { get; private set; } = null!;

        /// <summary>
        /// The name of an existing mapping rule to use when ingesting the retrieved data.
        /// </summary>
        [Output("mappingRuleName")]
        public Output<string?> MappingRuleName { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date.
        /// </summary>
        [Output("retrievalStartDate")]
        public Output<string?> RetrievalStartDate { get; private set; } = null!;

        /// <summary>
        /// The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table.
        /// </summary>
        [Output("tableName")]
        public Output<string> TableName { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a CosmosDbDataConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CosmosDbDataConnection(string name, CosmosDbDataConnectionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:kusto/v20221111:CosmosDbDataConnection", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private CosmosDbDataConnection(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:kusto/v20221111:CosmosDbDataConnection", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CosmosDbDataConnectionArgs MakeArgs(CosmosDbDataConnectionArgs args)
        {
            args ??= new CosmosDbDataConnectionArgs();
            args.Kind = "CosmosDb";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:kusto:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20190121:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20190515:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20190907:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20191109:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20200215:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20200614:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20200918:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20210101:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20210827:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20220201:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20220707:CosmosDbDataConnection"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20221229:CosmosDbDataConnection"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CosmosDbDataConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CosmosDbDataConnection Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CosmosDbDataConnection(name, id, options);
        }
    }

    public sealed class CosmosDbDataConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Kusto cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The resource ID of the Cosmos DB account used to create the data connection.
        /// </summary>
        [Input("cosmosDbAccountResourceId", required: true)]
        public Input<string> CosmosDbAccountResourceId { get; set; } = null!;

        /// <summary>
        /// The name of an existing container in the Cosmos DB database.
        /// </summary>
        [Input("cosmosDbContainer", required: true)]
        public Input<string> CosmosDbContainer { get; set; } = null!;

        /// <summary>
        /// The name of an existing database in the Cosmos DB account.
        /// </summary>
        [Input("cosmosDbDatabase", required: true)]
        public Input<string> CosmosDbDatabase { get; set; } = null!;

        /// <summary>
        /// The name of the data connection.
        /// </summary>
        [Input("dataConnectionName")]
        public Input<string>? DataConnectionName { get; set; }

        /// <summary>
        /// The name of the database in the Kusto cluster.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// Kind of the endpoint for the data connection
        /// Expected value is 'CosmosDb'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB.
        /// </summary>
        [Input("managedIdentityResourceId", required: true)]
        public Input<string> ManagedIdentityResourceId { get; set; } = null!;

        /// <summary>
        /// The name of an existing mapping rule to use when ingesting the retrieved data.
        /// </summary>
        [Input("mappingRuleName")]
        public Input<string>? MappingRuleName { get; set; }

        /// <summary>
        /// The name of the resource group containing the Kusto cluster.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date.
        /// </summary>
        [Input("retrievalStartDate")]
        public Input<string>? RetrievalStartDate { get; set; }

        /// <summary>
        /// The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table.
        /// </summary>
        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        public CosmosDbDataConnectionArgs()
        {
        }
        public static new CosmosDbDataConnectionArgs Empty => new CosmosDbDataConnectionArgs();
    }
}
