// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Kusto.Inputs
{

    /// <summary>
    /// Class representing the Kusto cluster properties.
    /// </summary>
    public sealed class ClusterPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cluster data ingestion URI.
        /// </summary>
        [Input("dataIngestionUri", required: true)]
        public Input<string> DataIngestionUri { get; set; } = null!;

        /// <summary>
        /// A boolean value that indicates if the cluster's disks are encrypted.
        /// </summary>
        [Input("enableDiskEncryption")]
        public Input<bool>? EnableDiskEncryption { get; set; }

        /// <summary>
        /// A boolean value that indicates if the purge operations are enabled.
        /// </summary>
        [Input("enablePurge")]
        public Input<bool>? EnablePurge { get; set; }

        /// <summary>
        /// A boolean value that indicates if the streaming ingest is enabled.
        /// </summary>
        [Input("enableStreamingIngest")]
        public Input<bool>? EnableStreamingIngest { get; set; }

        /// <summary>
        /// KeyVault properties for the cluster encryption.
        /// </summary>
        [Input("keyVaultProperties")]
        public Input<Inputs.KeyVaultPropertiesResponseGetArgs>? KeyVaultProperties { get; set; }

        /// <summary>
        /// List of the cluster's language extensions.
        /// </summary>
        [Input("languageExtensions")]
        public Input<Inputs.LanguageExtensionsListResponseGetArgs>? LanguageExtensions { get; set; }

        /// <summary>
        /// Optimized auto scale definition.
        /// </summary>
        [Input("optimizedAutoscale")]
        public Input<Inputs.OptimizedAutoscaleResponseGetArgs>? OptimizedAutoscale { get; set; }

        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The state of the resource.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        /// <summary>
        /// The reason for the cluster's current state.
        /// </summary>
        [Input("stateReason", required: true)]
        public Input<string> StateReason { get; set; } = null!;

        [Input("trustedExternalTenants")]
        private InputList<Inputs.TrustedExternalTenantResponseGetArgs>? _trustedExternalTenants;

        /// <summary>
        /// The cluster's external tenants.
        /// </summary>
        public InputList<Inputs.TrustedExternalTenantResponseGetArgs> TrustedExternalTenants
        {
            get => _trustedExternalTenants ?? (_trustedExternalTenants = new InputList<Inputs.TrustedExternalTenantResponseGetArgs>());
            set => _trustedExternalTenants = value;
        }

        /// <summary>
        /// The cluster URI.
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        /// <summary>
        /// Virtual network definition.
        /// </summary>
        [Input("virtualNetworkConfiguration")]
        public Input<Inputs.VirtualNetworkConfigurationResponseGetArgs>? VirtualNetworkConfiguration { get; set; }

        public ClusterPropertiesResponseGetArgs()
        {
        }
    }
}
