// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Kusto.Inputs
{

    /// <summary>
    /// Class representing the an attached database configuration properties of kind specific.
    /// </summary>
    public sealed class AttachedDatabaseConfigurationPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        [Input("attachedDatabaseNames", required: true)]
        private InputList<string>? _attachedDatabaseNames;

        /// <summary>
        /// The list of databases from the clusterResourceId which are currently attached to the cluster.
        /// </summary>
        public InputList<string> AttachedDatabaseNames
        {
            get => _attachedDatabaseNames ?? (_attachedDatabaseNames = new InputList<string>());
            set => _attachedDatabaseNames = value;
        }

        /// <summary>
        /// The resource id of the cluster where the databases you would like to attach reside.
        /// </summary>
        [Input("clusterResourceId", required: true)]
        public Input<string> ClusterResourceId { get; set; } = null!;

        /// <summary>
        /// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The default principals modification kind
        /// </summary>
        [Input("defaultPrincipalsModificationKind", required: true)]
        public Input<string> DefaultPrincipalsModificationKind { get; set; } = null!;

        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        public AttachedDatabaseConfigurationPropertiesResponseGetArgs()
        {
        }
    }
}
