// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Kusto.Outputs
{

    [OutputType]
    public sealed class ClusterPropertiesResponse
    {
        /// <summary>
        /// The cluster data ingestion URI.
        /// </summary>
        public readonly string DataIngestionUri;
        /// <summary>
        /// A boolean value that indicates if the cluster's disks are encrypted.
        /// </summary>
        public readonly bool? EnableDiskEncryption;
        /// <summary>
        /// A boolean value that indicates if the purge operations are enabled.
        /// </summary>
        public readonly bool? EnablePurge;
        /// <summary>
        /// A boolean value that indicates if the streaming ingest is enabled.
        /// </summary>
        public readonly bool? EnableStreamingIngest;
        /// <summary>
        /// KeyVault properties for the cluster encryption.
        /// </summary>
        public readonly Outputs.KeyVaultPropertiesResponse? KeyVaultProperties;
        /// <summary>
        /// List of the cluster's language extensions.
        /// </summary>
        public readonly Outputs.LanguageExtensionsListResponse? LanguageExtensions;
        /// <summary>
        /// Optimized auto scale definition.
        /// </summary>
        public readonly Outputs.OptimizedAutoscaleResponse? OptimizedAutoscale;
        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The reason for the cluster's current state.
        /// </summary>
        public readonly string StateReason;
        /// <summary>
        /// The cluster's external tenants.
        /// </summary>
        public readonly ImmutableArray<Outputs.TrustedExternalTenantResponse> TrustedExternalTenants;
        /// <summary>
        /// The cluster URI.
        /// </summary>
        public readonly string Uri;
        /// <summary>
        /// Virtual network definition.
        /// </summary>
        public readonly Outputs.VirtualNetworkConfigurationResponse? VirtualNetworkConfiguration;

        [OutputConstructor]
        private ClusterPropertiesResponse(
            string dataIngestionUri,

            bool? enableDiskEncryption,

            bool? enablePurge,

            bool? enableStreamingIngest,

            Outputs.KeyVaultPropertiesResponse? keyVaultProperties,

            Outputs.LanguageExtensionsListResponse? languageExtensions,

            Outputs.OptimizedAutoscaleResponse? optimizedAutoscale,

            string provisioningState,

            string state,

            string stateReason,

            ImmutableArray<Outputs.TrustedExternalTenantResponse> trustedExternalTenants,

            string uri,

            Outputs.VirtualNetworkConfigurationResponse? virtualNetworkConfiguration)
        {
            DataIngestionUri = dataIngestionUri;
            EnableDiskEncryption = enableDiskEncryption;
            EnablePurge = enablePurge;
            EnableStreamingIngest = enableStreamingIngest;
            KeyVaultProperties = keyVaultProperties;
            LanguageExtensions = languageExtensions;
            OptimizedAutoscale = optimizedAutoscale;
            ProvisioningState = provisioningState;
            State = state;
            StateReason = stateReason;
            TrustedExternalTenants = trustedExternalTenants;
            Uri = uri;
            VirtualNetworkConfiguration = virtualNetworkConfiguration;
        }
    }
}
