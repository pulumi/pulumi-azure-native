// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Kusto.V20220201
{
    /// <summary>
    /// Class representing a database script.
    /// </summary>
    [AzureNativeResourceType("azure-native:kusto/v20220201:Script")]
    public partial class Script : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Flag that indicates whether to continue if one of the command fails.
        /// </summary>
        [Output("continueOnErrors")]
        public Output<bool?> ContinueOnErrors { get; private set; } = null!;

        /// <summary>
        /// A unique string. If changed the script will be applied again.
        /// </summary>
        [Output("forceUpdateTag")]
        public Output<string?> ForceUpdateTag { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The url to the KQL script blob file. Must not be used together with scriptContent property
        /// </summary>
        [Output("scriptUrl")]
        public Output<string?> ScriptUrl { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Script resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Script(string name, ScriptArgs args, CustomResourceOptions? options = null)
            : base("azure-native:kusto/v20220201:Script", name, args ?? new ScriptArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Script(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:kusto/v20220201:Script", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:kusto:Script"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20210101:Script"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20210827:Script"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Script resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Script Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Script(name, id, options);
        }
    }

    public sealed class ScriptArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Kusto cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Flag that indicates whether to continue if one of the command fails.
        /// </summary>
        [Input("continueOnErrors")]
        public Input<bool>? ContinueOnErrors { get; set; }

        /// <summary>
        /// The name of the database in the Kusto cluster.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// A unique string. If changed the script will be applied again.
        /// </summary>
        [Input("forceUpdateTag")]
        public Input<string>? ForceUpdateTag { get; set; }

        /// <summary>
        /// The name of the resource group containing the Kusto cluster.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.
        /// </summary>
        [Input("scriptContent")]
        public Input<string>? ScriptContent { get; set; }

        /// <summary>
        /// The name of the Kusto database script.
        /// </summary>
        [Input("scriptName")]
        public Input<string>? ScriptName { get; set; }

        /// <summary>
        /// The url to the KQL script blob file. Must not be used together with scriptContent property
        /// </summary>
        [Input("scriptUrl")]
        public Input<string>? ScriptUrl { get; set; }

        /// <summary>
        /// The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.
        /// </summary>
        [Input("scriptUrlSasToken")]
        public Input<string>? ScriptUrlSasToken { get; set; }

        public ScriptArgs()
        {
            ContinueOnErrors = false;
        }
        public static new ScriptArgs Empty => new ScriptArgs();
    }
}
