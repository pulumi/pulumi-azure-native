// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Kusto.V20230502
{
    /// <summary>
    /// Class representing a Kusto cluster.
    /// </summary>
    [AzureNativeResourceType("azure-native:kusto/v20230502:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The cluster's accepted audiences.
        /// </summary>
        [Output("acceptedAudiences")]
        public Output<ImmutableArray<Outputs.AcceptedAudiencesResponse>> AcceptedAudiences { get; private set; } = null!;

        /// <summary>
        /// List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.
        /// </summary>
        [Output("allowedFqdnList")]
        public Output<ImmutableArray<string>> AllowedFqdnList { get; private set; } = null!;

        /// <summary>
        /// The list of ips in the format of CIDR allowed to connect to the cluster.
        /// </summary>
        [Output("allowedIpRangeList")]
        public Output<ImmutableArray<string>> AllowedIpRangeList { get; private set; } = null!;

        /// <summary>
        /// The cluster data ingestion URI.
        /// </summary>
        [Output("dataIngestionUri")]
        public Output<string> DataIngestionUri { get; private set; } = null!;

        /// <summary>
        /// A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).
        /// </summary>
        [Output("enableAutoStop")]
        public Output<bool?> EnableAutoStop { get; private set; } = null!;

        /// <summary>
        /// A boolean value that indicates if the cluster's disks are encrypted.
        /// </summary>
        [Output("enableDiskEncryption")]
        public Output<bool?> EnableDiskEncryption { get; private set; } = null!;

        /// <summary>
        /// A boolean value that indicates if double encryption is enabled.
        /// </summary>
        [Output("enableDoubleEncryption")]
        public Output<bool?> EnableDoubleEncryption { get; private set; } = null!;

        /// <summary>
        /// A boolean value that indicates if the purge operations are enabled.
        /// </summary>
        [Output("enablePurge")]
        public Output<bool?> EnablePurge { get; private set; } = null!;

        /// <summary>
        /// A boolean value that indicates if the streaming ingest is enabled.
        /// </summary>
        [Output("enableStreamingIngest")]
        public Output<bool?> EnableStreamingIngest { get; private set; } = null!;

        /// <summary>
        /// The engine type
        /// </summary>
        [Output("engineType")]
        public Output<string?> EngineType { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The identity of the cluster, if configured.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.IdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// KeyVault properties for the cluster encryption.
        /// </summary>
        [Output("keyVaultProperties")]
        public Output<Outputs.KeyVaultPropertiesResponse?> KeyVaultProperties { get; private set; } = null!;

        /// <summary>
        /// List of the cluster's language extensions.
        /// </summary>
        [Output("languageExtensions")]
        public Output<Outputs.LanguageExtensionsListResponse?> LanguageExtensions { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Properties of the peer cluster involved in a migration to/from this cluster.
        /// </summary>
        [Output("migrationCluster")]
        public Output<Outputs.MigrationClusterPropertiesResponse> MigrationCluster { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Optimized auto scale definition.
        /// </summary>
        [Output("optimizedAutoscale")]
        public Output<Outputs.OptimizedAutoscaleResponse?> OptimizedAutoscale { get; private set; } = null!;

        /// <summary>
        /// A list of private endpoint connections.
        /// </summary>
        [Output("privateEndpointConnections")]
        public Output<ImmutableArray<Outputs.PrivateEndpointConnectionResponse>> PrivateEndpointConnections { get; private set; } = null!;

        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)
        /// </summary>
        [Output("publicIPType")]
        public Output<string?> PublicIPType { get; private set; } = null!;

        /// <summary>
        /// Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed
        /// </summary>
        [Output("publicNetworkAccess")]
        public Output<string?> PublicNetworkAccess { get; private set; } = null!;

        /// <summary>
        /// Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        /// </summary>
        [Output("restrictOutboundNetworkAccess")]
        public Output<string?> RestrictOutboundNetworkAccess { get; private set; } = null!;

        /// <summary>
        /// The SKU of the cluster.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.AzureSkuResponse> Sku { get; private set; } = null!;

        /// <summary>
        /// The state of the resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The reason for the cluster's current state.
        /// </summary>
        [Output("stateReason")]
        public Output<string> StateReason { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The cluster's external tenants.
        /// </summary>
        [Output("trustedExternalTenants")]
        public Output<ImmutableArray<Outputs.TrustedExternalTenantResponse>> TrustedExternalTenants { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The cluster URI.
        /// </summary>
        [Output("uri")]
        public Output<string> Uri { get; private set; } = null!;

        /// <summary>
        /// Virtual network definition.
        /// </summary>
        [Output("virtualNetworkConfiguration")]
        public Output<Outputs.VirtualNetworkConfigurationResponse?> VirtualNetworkConfiguration { get; private set; } = null!;

        /// <summary>
        /// The availability zones of the cluster.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("azure-native:kusto/v20230502:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:kusto/v20230502:Cluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:kusto:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20170907privatepreview:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20180907preview:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20190121:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20190515:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20190907:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20191109:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20200215:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20200614:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20200918:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20210101:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20210827:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20220201:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20220707:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20221111:Cluster"},
                    new global::Pulumi.Alias { Type = "azure-native:kusto/v20221229:Cluster"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        [Input("acceptedAudiences")]
        private InputList<Inputs.AcceptedAudiencesArgs>? _acceptedAudiences;

        /// <summary>
        /// The cluster's accepted audiences.
        /// </summary>
        public InputList<Inputs.AcceptedAudiencesArgs> AcceptedAudiences
        {
            get => _acceptedAudiences ?? (_acceptedAudiences = new InputList<Inputs.AcceptedAudiencesArgs>());
            set => _acceptedAudiences = value;
        }

        [Input("allowedFqdnList")]
        private InputList<string>? _allowedFqdnList;

        /// <summary>
        /// List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.
        /// </summary>
        public InputList<string> AllowedFqdnList
        {
            get => _allowedFqdnList ?? (_allowedFqdnList = new InputList<string>());
            set => _allowedFqdnList = value;
        }

        [Input("allowedIpRangeList")]
        private InputList<string>? _allowedIpRangeList;

        /// <summary>
        /// The list of ips in the format of CIDR allowed to connect to the cluster.
        /// </summary>
        public InputList<string> AllowedIpRangeList
        {
            get => _allowedIpRangeList ?? (_allowedIpRangeList = new InputList<string>());
            set => _allowedIpRangeList = value;
        }

        /// <summary>
        /// The name of the Kusto cluster.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).
        /// </summary>
        [Input("enableAutoStop")]
        public Input<bool>? EnableAutoStop { get; set; }

        /// <summary>
        /// A boolean value that indicates if the cluster's disks are encrypted.
        /// </summary>
        [Input("enableDiskEncryption")]
        public Input<bool>? EnableDiskEncryption { get; set; }

        /// <summary>
        /// A boolean value that indicates if double encryption is enabled.
        /// </summary>
        [Input("enableDoubleEncryption")]
        public Input<bool>? EnableDoubleEncryption { get; set; }

        /// <summary>
        /// A boolean value that indicates if the purge operations are enabled.
        /// </summary>
        [Input("enablePurge")]
        public Input<bool>? EnablePurge { get; set; }

        /// <summary>
        /// A boolean value that indicates if the streaming ingest is enabled.
        /// </summary>
        [Input("enableStreamingIngest")]
        public Input<bool>? EnableStreamingIngest { get; set; }

        /// <summary>
        /// The engine type
        /// </summary>
        [Input("engineType")]
        public InputUnion<string, Pulumi.AzureNative.Kusto.V20230502.EngineType>? EngineType { get; set; }

        /// <summary>
        /// The identity of the cluster, if configured.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.IdentityArgs>? Identity { get; set; }

        /// <summary>
        /// KeyVault properties for the cluster encryption.
        /// </summary>
        [Input("keyVaultProperties")]
        public Input<Inputs.KeyVaultPropertiesArgs>? KeyVaultProperties { get; set; }

        /// <summary>
        /// List of the cluster's language extensions.
        /// </summary>
        [Input("languageExtensions")]
        public Input<Inputs.LanguageExtensionsListArgs>? LanguageExtensions { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Optimized auto scale definition.
        /// </summary>
        [Input("optimizedAutoscale")]
        public Input<Inputs.OptimizedAutoscaleArgs>? OptimizedAutoscale { get; set; }

        /// <summary>
        /// Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)
        /// </summary>
        [Input("publicIPType")]
        public InputUnion<string, Pulumi.AzureNative.Kusto.V20230502.PublicIPType>? PublicIPType { get; set; }

        /// <summary>
        /// Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed
        /// </summary>
        [Input("publicNetworkAccess")]
        public InputUnion<string, Pulumi.AzureNative.Kusto.V20230502.PublicNetworkAccess>? PublicNetworkAccess { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        /// </summary>
        [Input("restrictOutboundNetworkAccess")]
        public InputUnion<string, Pulumi.AzureNative.Kusto.V20230502.ClusterNetworkAccessFlag>? RestrictOutboundNetworkAccess { get; set; }

        /// <summary>
        /// The SKU of the cluster.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.AzureSkuArgs> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("trustedExternalTenants")]
        private InputList<Inputs.TrustedExternalTenantArgs>? _trustedExternalTenants;

        /// <summary>
        /// The cluster's external tenants.
        /// </summary>
        public InputList<Inputs.TrustedExternalTenantArgs> TrustedExternalTenants
        {
            get => _trustedExternalTenants ?? (_trustedExternalTenants = new InputList<Inputs.TrustedExternalTenantArgs>());
            set => _trustedExternalTenants = value;
        }

        /// <summary>
        /// Virtual Cluster graduation properties
        /// </summary>
        [Input("virtualClusterGraduationProperties")]
        public Input<string>? VirtualClusterGraduationProperties { get; set; }

        /// <summary>
        /// Virtual network definition.
        /// </summary>
        [Input("virtualNetworkConfiguration")]
        public Input<Inputs.VirtualNetworkConfigurationArgs>? VirtualNetworkConfiguration { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// The availability zones of the cluster.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ClusterArgs()
        {
            EnableAutoStop = true;
            EnableDiskEncryption = false;
            EnableDoubleEncryption = false;
            EnablePurge = false;
            EnableStreamingIngest = false;
            EngineType = "V3";
            PublicIPType = "IPv4";
            PublicNetworkAccess = "Enabled";
            RestrictOutboundNetworkAccess = "Disabled";
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }
}
