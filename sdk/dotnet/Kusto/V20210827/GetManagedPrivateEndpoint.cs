// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Kusto.V20210827
{
    public static class GetManagedPrivateEndpoint
    {
        /// <summary>
        /// Gets a managed private endpoint.
        /// </summary>
        public static Task<GetManagedPrivateEndpointResult> InvokeAsync(GetManagedPrivateEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedPrivateEndpointResult>("azure-native:kusto/v20210827:getManagedPrivateEndpoint", args ?? new GetManagedPrivateEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a managed private endpoint.
        /// </summary>
        public static Output<GetManagedPrivateEndpointResult> Invoke(GetManagedPrivateEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedPrivateEndpointResult>("azure-native:kusto/v20210827:getManagedPrivateEndpoint", args ?? new GetManagedPrivateEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedPrivateEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kusto cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the managed private endpoint.
        /// </summary>
        [Input("managedPrivateEndpointName", required: true)]
        public string ManagedPrivateEndpointName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group containing the Kusto cluster.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagedPrivateEndpointArgs()
        {
        }
        public static new GetManagedPrivateEndpointArgs Empty => new GetManagedPrivateEndpointArgs();
    }

    public sealed class GetManagedPrivateEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kusto cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the managed private endpoint.
        /// </summary>
        [Input("managedPrivateEndpointName", required: true)]
        public Input<string> ManagedPrivateEndpointName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group containing the Kusto cluster.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetManagedPrivateEndpointInvokeArgs()
        {
        }
        public static new GetManagedPrivateEndpointInvokeArgs Empty => new GetManagedPrivateEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedPrivateEndpointResult
    {
        /// <summary>
        /// The groupId in which the managed private endpoint is created.
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ARM resource ID of the resource for which the managed private endpoint is created.
        /// </summary>
        public readonly string PrivateLinkResourceId;
        /// <summary>
        /// The region of the resource to which the managed private endpoint is created.
        /// </summary>
        public readonly string? PrivateLinkResourceRegion;
        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The user request message.
        /// </summary>
        public readonly string? RequestMessage;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagedPrivateEndpointResult(
            string groupId,

            string id,

            string name,

            string privateLinkResourceId,

            string? privateLinkResourceRegion,

            string provisioningState,

            string? requestMessage,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            GroupId = groupId;
            Id = id;
            Name = name;
            PrivateLinkResourceId = privateLinkResourceId;
            PrivateLinkResourceRegion = privateLinkResourceRegion;
            ProvisioningState = provisioningState;
            RequestMessage = requestMessage;
            SystemData = systemData;
            Type = type;
        }
    }
}
