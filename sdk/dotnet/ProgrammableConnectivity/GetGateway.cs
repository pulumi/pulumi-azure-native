// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProgrammableConnectivity
{
    public static class GetGateway
    {
        /// <summary>
        /// Get a Gateway resource by name.
        /// Azure REST API version: 2024-01-15-preview.
        /// </summary>
        public static Task<GetGatewayResult> InvokeAsync(GetGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayResult>("azure-native:programmableconnectivity:getGateway", args ?? new GetGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Gateway resource by name.
        /// Azure REST API version: 2024-01-15-preview.
        /// </summary>
        public static Output<GetGatewayResult> Invoke(GetGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayResult>("azure-native:programmableconnectivity:getGateway", args ?? new GetGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Programmable Connectivity Gateway Name
        /// </summary>
        [Input("gatewayName", required: true)]
        public string GatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetGatewayArgs()
        {
        }
        public static new GetGatewayArgs Empty => new GetGatewayArgs();
    }

    public sealed class GetGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Programmable Connectivity Gateway Name
        /// </summary>
        [Input("gatewayName", required: true)]
        public Input<string> GatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetGatewayInvokeArgs()
        {
        }
        public static new GetGatewayInvokeArgs Empty => new GetGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayResult
    {
        /// <summary>
        /// Base URL of the Gateway resource. This is the URL that the users would use to make Open API Gateway requests to the Operators via Azure.
        /// </summary>
        public readonly string GatewayBaseUrl;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of Operator API Connections selected by the user
        /// </summary>
        public readonly ImmutableArray<string> OperatorApiConnections;
        /// <summary>
        /// The status of the last operation on the Gateway resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGatewayResult(
            string gatewayBaseUrl,

            string id,

            string location,

            string name,

            ImmutableArray<string> operatorApiConnections,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            GatewayBaseUrl = gatewayBaseUrl;
            Id = id;
            Location = location;
            Name = name;
            OperatorApiConnections = operatorApiConnections;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
