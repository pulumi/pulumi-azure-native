// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProgrammableConnectivity.V20240115Preview
{
    public static class GetOperatorApiConnection
    {
        /// <summary>
        /// Get an Operator API Connection.
        /// </summary>
        public static Task<GetOperatorApiConnectionResult> InvokeAsync(GetOperatorApiConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOperatorApiConnectionResult>("azure-native:programmableconnectivity/v20240115preview:getOperatorApiConnection", args ?? new GetOperatorApiConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Get an Operator API Connection.
        /// </summary>
        public static Output<GetOperatorApiConnectionResult> Invoke(GetOperatorApiConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOperatorApiConnectionResult>("azure-native:programmableconnectivity/v20240115preview:getOperatorApiConnection", args ?? new GetOperatorApiConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOperatorApiConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Programmable Connectivity (APC) Operator API Connection Name.
        /// </summary>
        [Input("operatorApiConnectionName", required: true)]
        public string OperatorApiConnectionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetOperatorApiConnectionArgs()
        {
        }
        public static new GetOperatorApiConnectionArgs Empty => new GetOperatorApiConnectionArgs();
    }

    public sealed class GetOperatorApiConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Programmable Connectivity (APC) Operator API Connection Name.
        /// </summary>
        [Input("operatorApiConnectionName", required: true)]
        public Input<string> OperatorApiConnectionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetOperatorApiConnectionInvokeArgs()
        {
        }
        public static new GetOperatorApiConnectionInvokeArgs Empty => new GetOperatorApiConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetOperatorApiConnectionResult
    {
        /// <summary>
        /// Type of the account the user has with the Operator's Network API infrastructure. AzureManaged | UserManaged.
        /// </summary>
        public readonly string AccountType;
        /// <summary>
        /// Application ID of the App Developer that is registered with the Operator in a specific country/region.
        /// </summary>
        public readonly string? AppId;
        /// <summary>
        /// The Network API for the current operator in the country/region provided in the linked Operator API Plan.
        /// </summary>
        public readonly string CamaraApiName;
        /// <summary>
        /// Details about the Application that would use the Operator's Network APIs.
        /// </summary>
        public readonly Outputs.ApplicationPropertiesResponse? ConfiguredApplication;
        /// <summary>
        /// Reference to the APC Gateway resource ID.
        /// </summary>
        public readonly string GatewayId;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Reference to the Operator API Plan Resource ID.
        /// </summary>
        public readonly string OperatorApiPlanId;
        /// <summary>
        /// Name of the Operator in the linked Operator API Plan belongs to.
        /// </summary>
        public readonly string OperatorName;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Details about the SaaS offer purchased from the marketplace.
        /// </summary>
        public readonly Outputs.SaasPropertiesResponse? SaasProperties;
        /// <summary>
        /// The status of the OperatorApiConnection resource.
        /// </summary>
        public readonly Outputs.StatusResponse Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetOperatorApiConnectionResult(
            string accountType,

            string? appId,

            string camaraApiName,

            Outputs.ApplicationPropertiesResponse? configuredApplication,

            string gatewayId,

            string id,

            string location,

            string name,

            string operatorApiPlanId,

            string operatorName,

            string provisioningState,

            Outputs.SaasPropertiesResponse? saasProperties,

            Outputs.StatusResponse status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AccountType = accountType;
            AppId = appId;
            CamaraApiName = camaraApiName;
            ConfiguredApplication = configuredApplication;
            GatewayId = gatewayId;
            Id = id;
            Location = location;
            Name = name;
            OperatorApiPlanId = operatorApiPlanId;
            OperatorName = operatorName;
            ProvisioningState = provisioningState;
            SaasProperties = saasProperties;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
