// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.LabServices.V20211115Preview
{
    /// <summary>
    /// Schedule for automatically turning virtual machines in a lab on and off at specified times.
    /// </summary>
    [AzureNativeResourceType("azure-native:labservices/v20211115preview:Schedule")]
    public partial class Schedule : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Notes for this schedule.
        /// </summary>
        [Output("notes")]
        public Output<string?> Notes { get; private set; } = null!;

        /// <summary>
        /// Current provisioning state of the schedule.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The recurrence pattern of the scheduled actions.
        /// </summary>
        [Output("recurrencePattern")]
        public Output<Outputs.RecurrencePatternResponse?> RecurrencePattern { get; private set; } = null!;

        /// <summary>
        /// When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.
        /// </summary>
        [Output("startAt")]
        public Output<string?> StartAt { get; private set; } = null!;

        /// <summary>
        /// When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.
        /// </summary>
        [Output("stopAt")]
        public Output<string> StopAt { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the schedule.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The IANA timezone id for the schedule.
        /// </summary>
        [Output("timeZoneId")]
        public Output<string> TimeZoneId { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Schedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Schedule(string name, ScheduleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:labservices/v20211115preview:Schedule", name, args ?? new ScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Schedule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:labservices/v20211115preview:Schedule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-native:labservices:Schedule"},
                    new Pulumi.Alias { Type = "azure-native:labservices/v20211001preview:Schedule"},
                    new Pulumi.Alias { Type = "azure-native:labservices/v20220801:Schedule"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Schedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Schedule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Schedule(name, id, options);
        }
    }

    public sealed class ScheduleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the lab that uniquely identifies it within containing lab account. Used in resource URIs.
        /// </summary>
        [Input("labName", required: true)]
        public Input<string> LabName { get; set; } = null!;

        /// <summary>
        /// Notes for this schedule.
        /// </summary>
        [Input("notes")]
        public Input<string>? Notes { get; set; }

        /// <summary>
        /// The recurrence pattern of the scheduled actions.
        /// </summary>
        [Input("recurrencePattern")]
        public Input<Inputs.RecurrencePatternArgs>? RecurrencePattern { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the schedule that uniquely identifies it within containing lab. Used in resource URIs.
        /// </summary>
        [Input("scheduleName")]
        public Input<string>? ScheduleName { get; set; }

        /// <summary>
        /// When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.
        /// </summary>
        [Input("startAt")]
        public Input<string>? StartAt { get; set; }

        /// <summary>
        /// When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.
        /// </summary>
        [Input("stopAt", required: true)]
        public Input<string> StopAt { get; set; } = null!;

        /// <summary>
        /// The IANA timezone id for the schedule.
        /// </summary>
        [Input("timeZoneId", required: true)]
        public Input<string> TimeZoneId { get; set; } = null!;

        public ScheduleArgs()
        {
        }
    }
}
