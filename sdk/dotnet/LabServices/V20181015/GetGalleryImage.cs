// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.LabServices.V20181015
{
    public static class GetGalleryImage
    {
        /// <summary>
        /// Get gallery image
        /// </summary>
        public static Task<GetGalleryImageResult> InvokeAsync(GetGalleryImageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGalleryImageResult>("azure-native:labservices/v20181015:getGalleryImage", args ?? new GetGalleryImageArgs(), options.WithDefaults());

        /// <summary>
        /// Get gallery image
        /// </summary>
        public static Output<GetGalleryImageResult> Invoke(GetGalleryImageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGalleryImageResult>("azure-native:labservices/v20181015:getGalleryImage", args ?? new GetGalleryImageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGalleryImageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the $expand query. Example: 'properties($select=author)'
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the gallery Image.
        /// </summary>
        [Input("galleryImageName", required: true)]
        public string GalleryImageName { get; set; } = null!;

        /// <summary>
        /// The name of the lab Account.
        /// </summary>
        [Input("labAccountName", required: true)]
        public string LabAccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetGalleryImageArgs()
        {
        }
        public static new GetGalleryImageArgs Empty => new GetGalleryImageArgs();
    }

    public sealed class GetGalleryImageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the $expand query. Example: 'properties($select=author)'
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// The name of the gallery Image.
        /// </summary>
        [Input("galleryImageName", required: true)]
        public Input<string> GalleryImageName { get; set; } = null!;

        /// <summary>
        /// The name of the lab Account.
        /// </summary>
        [Input("labAccountName", required: true)]
        public Input<string> LabAccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetGalleryImageInvokeArgs()
        {
        }
        public static new GetGalleryImageInvokeArgs Empty => new GetGalleryImageInvokeArgs();
    }


    [OutputType]
    public sealed class GetGalleryImageResult
    {
        /// <summary>
        /// The author of the gallery image.
        /// </summary>
        public readonly string Author;
        /// <summary>
        /// The creation date of the gallery image.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// The description of the gallery image.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The icon of the gallery image.
        /// </summary>
        public readonly string Icon;
        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The image reference of the gallery image.
        /// </summary>
        public readonly Outputs.GalleryImageReferenceResponse ImageReference;
        /// <summary>
        /// Indicates whether this gallery image is enabled.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Indicates whether this gallery has been overridden for this lab account
        /// </summary>
        public readonly bool? IsOverride;
        /// <summary>
        /// Indicates if the plan has been authorized for programmatic deployment.
        /// </summary>
        public readonly bool? IsPlanAuthorized;
        /// <summary>
        /// The details of the latest operation. ex: status, error
        /// </summary>
        public readonly Outputs.LatestOperationResultResponse LatestOperationResult;
        /// <summary>
        /// The location of the resource.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The third party plan that applies to this image
        /// </summary>
        public readonly string PlanId;
        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        public readonly string? UniqueIdentifier;

        [OutputConstructor]
        private GetGalleryImageResult(
            string author,

            string createdDate,

            string description,

            string icon,

            string id,

            Outputs.GalleryImageReferenceResponse imageReference,

            bool? isEnabled,

            bool? isOverride,

            bool? isPlanAuthorized,

            Outputs.LatestOperationResultResponse latestOperationResult,

            string? location,

            string name,

            string planId,

            string? provisioningState,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? uniqueIdentifier)
        {
            Author = author;
            CreatedDate = createdDate;
            Description = description;
            Icon = icon;
            Id = id;
            ImageReference = imageReference;
            IsEnabled = isEnabled;
            IsOverride = isOverride;
            IsPlanAuthorized = isPlanAuthorized;
            LatestOperationResult = latestOperationResult;
            Location = location;
            Name = name;
            PlanId = planId;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
            UniqueIdentifier = uniqueIdentifier;
        }
    }
}
