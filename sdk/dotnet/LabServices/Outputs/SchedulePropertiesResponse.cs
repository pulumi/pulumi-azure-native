// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.LabServices.Outputs
{

    /// <summary>
    /// Schedule resource properties
    /// </summary>
    [OutputType]
    public sealed class SchedulePropertiesResponse
    {
        /// <summary>
        /// Notes for this schedule.
        /// </summary>
        public readonly string? Notes;
        /// <summary>
        /// Current provisioning state of the schedule.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The recurrence pattern of the scheduled actions.
        /// </summary>
        public readonly Outputs.RecurrencePatternResponse? RecurrencePattern;
        /// <summary>
        /// When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.
        /// </summary>
        public readonly string? StartAt;
        /// <summary>
        /// When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.
        /// </summary>
        public readonly string StopAt;
        /// <summary>
        /// The IANA timezone id for the schedule.
        /// </summary>
        public readonly string TimeZoneId;

        [OutputConstructor]
        private SchedulePropertiesResponse(
            string? notes,

            string provisioningState,

            Outputs.RecurrencePatternResponse? recurrencePattern,

            string? startAt,

            string stopAt,

            string timeZoneId)
        {
            Notes = notes;
            ProvisioningState = provisioningState;
            RecurrencePattern = recurrencePattern;
            StartAt = startAt;
            StopAt = stopAt;
            TimeZoneId = timeZoneId;
        }
    }
}
