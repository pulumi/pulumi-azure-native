// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.LabServices.Outputs
{

    [OutputType]
    public sealed class LabPropertiesResponseResult
    {
        /// <summary>
        /// Object id of the user that created the lab.
        /// </summary>
        public readonly string CreatedByObjectId;
        /// <summary>
        /// Lab creator name
        /// </summary>
        public readonly string CreatedByUserPrincipalName;
        /// <summary>
        /// Creation date for the lab
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// Invitation code that users can use to join a lab.
        /// </summary>
        public readonly string InvitationCode;
        /// <summary>
        /// The details of the latest operation. ex: status, error
        /// </summary>
        public readonly Outputs.LatestOperationResultResponseResult LatestOperationResult;
        /// <summary>
        /// Maximum number of users allowed in the lab.
        /// </summary>
        public readonly int? MaxUsersInLab;
        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        public readonly string? UniqueIdentifier;
        /// <summary>
        /// Maximum duration a user can use an environment for in the lab.
        /// </summary>
        public readonly string? UsageQuota;
        /// <summary>
        /// Lab user access mode (open to all vs. restricted to those listed on the lab).
        /// </summary>
        public readonly string? UserAccessMode;
        /// <summary>
        /// Maximum value MaxUsersInLab can be set to, as specified by the service
        /// </summary>
        public readonly int UserQuota;

        [OutputConstructor]
        private LabPropertiesResponseResult(
            string createdByObjectId,

            string createdByUserPrincipalName,

            string createdDate,

            string invitationCode,

            Outputs.LatestOperationResultResponseResult latestOperationResult,

            int? maxUsersInLab,

            string? provisioningState,

            string? uniqueIdentifier,

            string? usageQuota,

            string? userAccessMode,

            int userQuota)
        {
            CreatedByObjectId = createdByObjectId;
            CreatedByUserPrincipalName = createdByUserPrincipalName;
            CreatedDate = createdDate;
            InvitationCode = invitationCode;
            LatestOperationResult = latestOperationResult;
            MaxUsersInLab = maxUsersInLab;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
            UsageQuota = usageQuota;
            UserAccessMode = userAccessMode;
            UserQuota = userQuota;
        }
    }
}
