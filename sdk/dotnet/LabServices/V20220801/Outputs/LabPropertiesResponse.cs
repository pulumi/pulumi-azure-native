// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.LabServices.V20220801.Outputs
{

    /// <summary>
    /// Properties of a lab resource.
    /// </summary>
    [OutputType]
    public sealed class LabPropertiesResponse
    {
        /// <summary>
        /// The resource auto shutdown configuration for the lab. This controls whether actions are taken on resources that are sitting idle.
        /// </summary>
        public readonly Outputs.AutoShutdownProfileResponse AutoShutdownProfile;
        /// <summary>
        /// The connection profile for the lab. This controls settings such as web access to lab resources or whether RDP or SSH ports are open.
        /// </summary>
        public readonly Outputs.ConnectionProfileResponse ConnectionProfile;
        /// <summary>
        /// The description of the lab.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The ID of the lab plan. Used during resource creation to provide defaults and acts as a permission container when creating a lab via labs.azure.com. Setting a labPlanId on an existing lab provides organization..
        /// </summary>
        public readonly string? LabPlanId;
        /// <summary>
        /// The network profile for the lab, typically applied via a lab plan. This profile cannot be modified once a lab has been created.
        /// </summary>
        public readonly Outputs.LabNetworkProfileResponse? NetworkProfile;
        /// <summary>
        /// Current provisioning state of the lab.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The lab user list management profile.
        /// </summary>
        public readonly Outputs.RosterProfileResponse? RosterProfile;
        /// <summary>
        /// The lab security profile.
        /// </summary>
        public readonly Outputs.SecurityProfileResponse SecurityProfile;
        /// <summary>
        /// The lab state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The title of the lab.
        /// </summary>
        public readonly string? Title;
        /// <summary>
        /// The profile used for creating lab virtual machines.
        /// </summary>
        public readonly Outputs.VirtualMachineProfileResponse VirtualMachineProfile;

        [OutputConstructor]
        private LabPropertiesResponse(
            Outputs.AutoShutdownProfileResponse autoShutdownProfile,

            Outputs.ConnectionProfileResponse connectionProfile,

            string? description,

            string? labPlanId,

            Outputs.LabNetworkProfileResponse? networkProfile,

            string provisioningState,

            Outputs.RosterProfileResponse? rosterProfile,

            Outputs.SecurityProfileResponse securityProfile,

            string state,

            string? title,

            Outputs.VirtualMachineProfileResponse virtualMachineProfile)
        {
            AutoShutdownProfile = autoShutdownProfile;
            ConnectionProfile = connectionProfile;
            Description = description;
            LabPlanId = labPlanId;
            NetworkProfile = networkProfile;
            ProvisioningState = provisioningState;
            RosterProfile = rosterProfile;
            SecurityProfile = securityProfile;
            State = state;
            Title = title;
            VirtualMachineProfile = virtualMachineProfile;
        }
    }
}
