// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.LabServices
{
    /// <summary>
    /// Lab Plans act as a permission container for creating labs via labs.azure.com. Additionally, they can provide a set of default configurations that will apply at the time of creating a lab, but these defaults can still be overwritten.
    /// API Version: 2021-10-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:labservices:LabPlan")]
    public partial class LabPlan : Pulumi.CustomResource
    {
        /// <summary>
        /// The allowed regions for the lab creator to use when creating labs using this lab plan.
        /// </summary>
        [Output("allowedRegions")]
        public Output<ImmutableArray<string>> AllowedRegions { get; private set; } = null!;

        /// <summary>
        /// The default lab shutdown profile. This can be changed on a lab resource and only provides a default profile.
        /// </summary>
        [Output("defaultAutoShutdownProfile")]
        public Output<Outputs.AutoShutdownProfileResponse?> DefaultAutoShutdownProfile { get; private set; } = null!;

        /// <summary>
        /// The default lab connection profile. This can be changed on a lab resource and only provides a default profile.
        /// </summary>
        [Output("defaultConnectionProfile")]
        public Output<Outputs.ConnectionProfileResponse?> DefaultConnectionProfile { get; private set; } = null!;

        /// <summary>
        /// The lab plan network profile. To enforce lab network policies they must be defined here and cannot be changed when there are existing labs associated with this lab plan.
        /// </summary>
        [Output("defaultNetworkProfile")]
        public Output<Outputs.LabPlanNetworkProfileResponse?> DefaultNetworkProfile { get; private set; } = null!;

        /// <summary>
        /// Base Url of the lms instance this lab plan can link lab rosters against.
        /// </summary>
        [Output("linkedLmsInstance")]
        public Output<string?> LinkedLmsInstance { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Current provisioning state of the lab plan.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource ID of the Shared Image Gallery attached to this lab plan. When saving a lab template virtual machine image it will be persisted in this gallery. Shared images from the gallery can be made available to use when creating new labs.
        /// </summary>
        [Output("sharedGalleryId")]
        public Output<string?> SharedGalleryId { get; private set; } = null!;

        /// <summary>
        /// Support contact information and instructions for users of the lab plan. This information is displayed to lab owners and virtual machine users for all labs in the lab plan.
        /// </summary>
        [Output("supportInfo")]
        public Output<Outputs.SupportInfoResponse?> SupportInfo { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the lab plan.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a LabPlan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LabPlan(string name, LabPlanArgs args, CustomResourceOptions? options = null)
            : base("azure-native:labservices:LabPlan", name, args ?? new LabPlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LabPlan(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:labservices:LabPlan", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-native:labservices/v20211001preview:LabPlan"},
                    new Pulumi.Alias { Type = "azure-native:labservices/v20211115preview:LabPlan"},
                    new Pulumi.Alias { Type = "azure-native:labservices/v20220801:LabPlan"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LabPlan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LabPlan Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LabPlan(name, id, options);
        }
    }

    public sealed class LabPlanArgs : Pulumi.ResourceArgs
    {
        [Input("allowedRegions")]
        private InputList<string>? _allowedRegions;

        /// <summary>
        /// The allowed regions for the lab creator to use when creating labs using this lab plan.
        /// </summary>
        public InputList<string> AllowedRegions
        {
            get => _allowedRegions ?? (_allowedRegions = new InputList<string>());
            set => _allowedRegions = value;
        }

        /// <summary>
        /// The default lab shutdown profile. This can be changed on a lab resource and only provides a default profile.
        /// </summary>
        [Input("defaultAutoShutdownProfile")]
        public Input<Inputs.AutoShutdownProfileArgs>? DefaultAutoShutdownProfile { get; set; }

        /// <summary>
        /// The default lab connection profile. This can be changed on a lab resource and only provides a default profile.
        /// </summary>
        [Input("defaultConnectionProfile")]
        public Input<Inputs.ConnectionProfileArgs>? DefaultConnectionProfile { get; set; }

        /// <summary>
        /// The lab plan network profile. To enforce lab network policies they must be defined here and cannot be changed when there are existing labs associated with this lab plan.
        /// </summary>
        [Input("defaultNetworkProfile")]
        public Input<Inputs.LabPlanNetworkProfileArgs>? DefaultNetworkProfile { get; set; }

        /// <summary>
        /// The name of the lab plan that uniquely identifies it within containing resource group. Used in resource URIs and in UI.
        /// </summary>
        [Input("labPlanName")]
        public Input<string>? LabPlanName { get; set; }

        /// <summary>
        /// Base Url of the lms instance this lab plan can link lab rosters against.
        /// </summary>
        [Input("linkedLmsInstance")]
        public Input<string>? LinkedLmsInstance { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Resource ID of the Shared Image Gallery attached to this lab plan. When saving a lab template virtual machine image it will be persisted in this gallery. Shared images from the gallery can be made available to use when creating new labs.
        /// </summary>
        [Input("sharedGalleryId")]
        public Input<string>? SharedGalleryId { get; set; }

        /// <summary>
        /// Support contact information and instructions for users of the lab plan. This information is displayed to lab owners and virtual machine users for all labs in the lab plan.
        /// </summary>
        [Input("supportInfo")]
        public Input<Inputs.SupportInfoArgs>? SupportInfo { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LabPlanArgs()
        {
        }
    }
}
