// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230201Preview.Inputs
{

    /// <summary>
    /// Configuration for notification.
    /// </summary>
    public sealed class NotificationSettingArgs : global::Pulumi.ResourceArgs
    {
        [Input("emailOn")]
        private InputList<Union<string, Pulumi.AzureNative.MachineLearningServices.V20230201Preview.EmailNotificationEnableType>>? _emailOn;

        /// <summary>
        /// Send email notification to user on specified notification type
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.MachineLearningServices.V20230201Preview.EmailNotificationEnableType>> EmailOn
        {
            get => _emailOn ?? (_emailOn = new InputList<Union<string, Pulumi.AzureNative.MachineLearningServices.V20230201Preview.EmailNotificationEnableType>>());
            set => _emailOn = value;
        }

        [Input("emails")]
        private InputList<string>? _emails;

        /// <summary>
        /// This is the email recipient list which has a limitation of 499 characters in total concat with comma separator
        /// </summary>
        public InputList<string> Emails
        {
            get => _emails ?? (_emails = new InputList<string>());
            set => _emails = value;
        }

        public NotificationSettingArgs()
        {
        }
        public static new NotificationSettingArgs Empty => new NotificationSettingArgs();
    }
}
