// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230201Preview.Outputs
{

    /// <summary>
    /// Job endpoint definition
    /// </summary>
    [OutputType]
    public sealed class JobServiceResponse
    {
        /// <summary>
        /// Url for endpoint.
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// Any error in the service.
        /// </summary>
        public readonly string ErrorMessage;
        /// <summary>
        /// Endpoint type.
        /// </summary>
        public readonly string? JobServiceType;
        /// <summary>
        /// Nodes that user would like to start the service on.
        /// If Nodes is not set or set to null, the service will only be started on leader node.
        /// </summary>
        public readonly Outputs.AllNodesResponse? Nodes;
        /// <summary>
        /// Port for endpoint set by user.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Additional properties to set on the endpoint.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Status of endpoint.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private JobServiceResponse(
            string? endpoint,

            string errorMessage,

            string? jobServiceType,

            Outputs.AllNodesResponse? nodes,

            int? port,

            ImmutableDictionary<string, string>? properties,

            string status)
        {
            Endpoint = endpoint;
            ErrorMessage = errorMessage;
            JobServiceType = jobServiceType;
            Nodes = nodes;
            Port = port;
            Properties = properties;
            Status = status;
        }
    }
}
