// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230201Preview.Outputs
{

    /// <summary>
    /// Sweep job definition.
    /// </summary>
    [OutputType]
    public sealed class SweepJobResponse
    {
        /// <summary>
        /// ARM resource ID of the component resource.
        /// </summary>
        public readonly string? ComponentId;
        /// <summary>
        /// ARM resource ID of the compute resource.
        /// </summary>
        public readonly string? ComputeId;
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Display name of job.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Early termination policies enable canceling poor-performing runs before they complete
        /// </summary>
        public readonly object? EarlyTermination;
        /// <summary>
        /// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
        /// </summary>
        public readonly string? ExperimentName;
        /// <summary>
        /// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
        /// Defaults to AmlToken if null.
        /// </summary>
        public readonly object? Identity;
        /// <summary>
        /// Mapping of input data bindings used in the job.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Inputs;
        /// <summary>
        /// Is the asset archived?
        /// </summary>
        public readonly bool? IsArchived;
        /// <summary>
        /// Enum to determine the type of job.
        /// Expected value is 'Sweep'.
        /// </summary>
        public readonly string JobType;
        /// <summary>
        /// Sweep Job limit.
        /// </summary>
        public readonly Outputs.SweepJobLimitsResponse? Limits;
        /// <summary>
        /// Notification setting for the job
        /// </summary>
        public readonly Outputs.NotificationSettingResponse? NotificationSetting;
        /// <summary>
        /// [Required] Optimization objective.
        /// </summary>
        public readonly Outputs.ObjectiveResponse Objective;
        /// <summary>
        /// Mapping of output data bindings used in the job.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Outputs;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Queue settings for the job
        /// </summary>
        public readonly Outputs.QueueSettingsResponse? QueueSettings;
        /// <summary>
        /// [Required] The hyperparameter sampling algorithm
        /// </summary>
        public readonly object SamplingAlgorithm;
        /// <summary>
        /// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
        /// </summary>
        public readonly object SearchSpace;
        /// <summary>
        /// List of JobEndpoints.
        /// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.JobServiceResponse>? Services;
        /// <summary>
        /// Status of the job.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// [Required] Trial component definition.
        /// </summary>
        public readonly Outputs.TrialComponentResponse Trial;

        [OutputConstructor]
        private SweepJobResponse(
            string? componentId,

            string? computeId,

            string? description,

            string? displayName,

            object? earlyTermination,

            string? experimentName,

            object? identity,

            ImmutableDictionary<string, object>? inputs,

            bool? isArchived,

            string jobType,

            Outputs.SweepJobLimitsResponse? limits,

            Outputs.NotificationSettingResponse? notificationSetting,

            Outputs.ObjectiveResponse objective,

            ImmutableDictionary<string, object>? outputs,

            ImmutableDictionary<string, string>? properties,

            Outputs.QueueSettingsResponse? queueSettings,

            object samplingAlgorithm,

            object searchSpace,

            ImmutableDictionary<string, Outputs.JobServiceResponse>? services,

            string status,

            ImmutableDictionary<string, string>? tags,

            Outputs.TrialComponentResponse trial)
        {
            ComponentId = componentId;
            ComputeId = computeId;
            Description = description;
            DisplayName = displayName;
            EarlyTermination = earlyTermination;
            ExperimentName = experimentName;
            Identity = identity;
            Inputs = inputs;
            IsArchived = isArchived;
            JobType = jobType;
            Limits = limits;
            NotificationSetting = notificationSetting;
            Objective = objective;
            Outputs = outputs;
            Properties = properties;
            QueueSettings = queueSettings;
            SamplingAlgorithm = samplingAlgorithm;
            SearchSpace = searchSpace;
            Services = services;
            Status = status;
            Tags = tags;
            Trial = trial;
        }
    }
}
