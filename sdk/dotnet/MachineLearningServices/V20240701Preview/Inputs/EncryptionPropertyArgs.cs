// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240701Preview.Inputs
{

    public sealed class EncryptionPropertyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The byok cosmosdb account that customer brings to store customer's data
        /// with encryption
        /// </summary>
        [Input("cosmosDbResourceId")]
        public Input<string>? CosmosDbResourceId { get; set; }

        /// <summary>
        /// Identity to be used with the keyVault
        /// </summary>
        [Input("identity")]
        public Input<Inputs.IdentityForCmkArgs>? Identity { get; set; }

        /// <summary>
        /// KeyVault details to do the encryption
        /// </summary>
        [Input("keyVaultProperties", required: true)]
        public Input<Inputs.KeyVaultPropertiesArgs> KeyVaultProperties { get; set; } = null!;

        /// <summary>
        /// The byok search account that customer brings to store customer's data
        /// with encryption
        /// </summary>
        [Input("searchAccountResourceId")]
        public Input<string>? SearchAccountResourceId { get; set; }

        /// <summary>
        /// Indicates whether or not the encryption is enabled for the workspace.
        /// </summary>
        [Input("status", required: true)]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20240701Preview.EncryptionStatus> Status { get; set; } = null!;

        /// <summary>
        /// The byok storage account that customer brings to store customer's data
        /// with encryption
        /// </summary>
        [Input("storageAccountResourceId")]
        public Input<string>? StorageAccountResourceId { get; set; }

        public EncryptionPropertyArgs()
        {
        }
        public static new EncryptionPropertyArgs Empty => new EncryptionPropertyArgs();
    }
}
