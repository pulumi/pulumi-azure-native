// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240701Preview.Inputs
{

    /// <summary>
    /// ClientId and ClientSecret are required. Other properties are optional
    /// depending on each OAuth2 provider's implementation.
    /// </summary>
    public sealed class WorkspaceConnectionOAuth2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required by Concur connection category
        /// </summary>
        [Input("authUrl")]
        public Input<string>? AuthUrl { get; set; }

        /// <summary>
        /// Client id in the format of UUID
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        /// <summary>
        /// Required by GoogleAdWords connection category
        /// </summary>
        [Input("developerToken")]
        public Input<string>? DeveloperToken { get; set; }

        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
        /// where user needs to get RefreshToken offline
        /// </summary>
        [Input("refreshToken")]
        public Input<string>? RefreshToken { get; set; }

        /// <summary>
        /// Required by QuickBooks and Xero connection categories
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// Concur, ServiceNow auth server AccessToken grant type is 'Password'
        /// which requires UsernamePassword
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public WorkspaceConnectionOAuth2Args()
        {
        }
        public static new WorkspaceConnectionOAuth2Args Empty => new WorkspaceConnectionOAuth2Args();
    }
}
