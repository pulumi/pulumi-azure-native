// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240101Preview.Outputs
{

    [OutputType]
    public sealed class JobResourceConfigurationResponse
    {
        /// <summary>
        /// Extra arguments to pass to the Docker run command. This would override any parameters that have already been set by the system, or in this section. This parameter is only supported for Azure ML compute types.
        /// </summary>
        public readonly string? DockerArgs;
        /// <summary>
        /// Optional number of instances or nodes used by the compute target.
        /// </summary>
        public readonly int? InstanceCount;
        /// <summary>
        /// Optional type of VM used as supported by the compute target.
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// Locations where the job can run.
        /// </summary>
        public readonly ImmutableArray<string> Locations;
        /// <summary>
        /// Optional max allowed number of instances or nodes to be used by the compute target.
        /// For use with elastic training, currently supported by PyTorch distribution type only.
        /// </summary>
        public readonly int? MaxInstanceCount;
        /// <summary>
        /// Additional properties bag.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Properties;
        /// <summary>
        /// Size of the docker container's shared memory block. This should be in the format of (number)(unit) where number as to be greater than 0 and the unit can be one of b(bytes), k(kilobytes), m(megabytes), or g(gigabytes).
        /// </summary>
        public readonly string? ShmSize;

        [OutputConstructor]
        private JobResourceConfigurationResponse(
            string? dockerArgs,

            int? instanceCount,

            string? instanceType,

            ImmutableArray<string> locations,

            int? maxInstanceCount,

            ImmutableDictionary<string, object>? properties,

            string? shmSize)
        {
            DockerArgs = dockerArgs;
            InstanceCount = instanceCount;
            InstanceType = instanceType;
            Locations = locations;
            MaxInstanceCount = maxInstanceCount;
            Properties = properties;
            ShmSize = shmSize;
        }
    }
}
