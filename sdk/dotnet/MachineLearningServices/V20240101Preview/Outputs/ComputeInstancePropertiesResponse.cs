// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240101Preview.Outputs
{

    /// <summary>
    /// Compute Instance properties
    /// </summary>
    [OutputType]
    public sealed class ComputeInstancePropertiesResponse
    {
        /// <summary>
        /// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
        /// </summary>
        public readonly string? ApplicationSharingPolicy;
        /// <summary>
        /// Describes available applications and their endpoints on this ComputeInstance.
        /// </summary>
        public readonly ImmutableArray<Outputs.ComputeInstanceApplicationResponse> Applications;
        /// <summary>
        /// Specifies settings for autologger.
        /// </summary>
        public readonly Outputs.ComputeInstanceAutologgerSettingsResponse? AutologgerSettings;
        /// <summary>
        /// The Compute Instance Authorization type. Available values are personal (default).
        /// </summary>
        public readonly string? ComputeInstanceAuthorizationType;
        /// <summary>
        /// Describes all connectivity endpoints available for this ComputeInstance.
        /// </summary>
        public readonly Outputs.ComputeInstanceConnectivityEndpointsResponse ConnectivityEndpoints;
        /// <summary>
        /// Describes informations of containers on this ComputeInstance.
        /// </summary>
        public readonly ImmutableArray<Outputs.ComputeInstanceContainerResponse> Containers;
        /// <summary>
        /// Describes information on user who created this ComputeInstance.
        /// </summary>
        public readonly Outputs.ComputeInstanceCreatedByResponse CreatedBy;
        /// <summary>
        /// List of Custom Services added to the compute.
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomServiceResponse> CustomServices;
        /// <summary>
        /// Describes informations of dataDisks on this ComputeInstance.
        /// </summary>
        public readonly ImmutableArray<Outputs.ComputeInstanceDataDiskResponse> DataDisks;
        /// <summary>
        /// Describes informations of dataMounts on this ComputeInstance.
        /// </summary>
        public readonly ImmutableArray<Outputs.ComputeInstanceDataMountResponse> DataMounts;
        /// <summary>
        /// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
        /// </summary>
        public readonly bool? EnableNodePublicIp;
        /// <summary>
        /// Enable Auto OS Patching. Possible values are: true, false.
        /// </summary>
        public readonly bool? EnableOSPatching;
        /// <summary>
        /// Enable root access. Possible values are: true, false.
        /// </summary>
        public readonly bool? EnableRootAccess;
        /// <summary>
        /// Enable SSO (single sign on). Possible values are: true, false.
        /// </summary>
        public readonly bool? EnableSSO;
        /// <summary>
        /// Collection of errors encountered on this ComputeInstance.
        /// </summary>
        public readonly ImmutableArray<Outputs.ErrorResponseResponse> Errors;
        /// <summary>
        /// Stops compute instance after user defined period of inactivity. Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days.
        /// </summary>
        public readonly string? IdleTimeBeforeShutdown;
        /// <summary>
        /// The last operation on ComputeInstance.
        /// </summary>
        public readonly Outputs.ComputeInstanceLastOperationResponse LastOperation;
        /// <summary>
        /// Returns metadata about the operating system image for this compute instance.
        /// </summary>
        public readonly Outputs.ImageMetadataResponse OsImageMetadata;
        /// <summary>
        /// Settings for a personal compute instance.
        /// </summary>
        public readonly Outputs.PersonalComputeInstanceSettingsResponse? PersonalComputeInstanceSettings;
        /// <summary>
        /// Release quota if compute instance stopped. Possible values are: true - release quota if compute instance stopped. false - don't release quota when compute instance stopped.
        /// </summary>
        public readonly bool? ReleaseQuotaOnStop;
        /// <summary>
        /// The list of schedules to be applied on the computes.
        /// </summary>
        public readonly Outputs.ComputeSchedulesResponse? Schedules;
        /// <summary>
        /// Details of customized scripts to execute for setting up the cluster.
        /// </summary>
        public readonly Outputs.SetupScriptsResponse? SetupScripts;
        /// <summary>
        /// Specifies policy and settings for SSH access.
        /// </summary>
        public readonly Outputs.ComputeInstanceSshSettingsResponse? SshSettings;
        /// <summary>
        /// The current state of this ComputeInstance.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Virtual network subnet resource ID the compute nodes belong to.
        /// </summary>
        public readonly Outputs.ResourceIdResponse? Subnet;
        /// <summary>
        /// ComputeInstance version.
        /// </summary>
        public readonly Outputs.ComputeInstanceVersionResponse Versions;
        /// <summary>
        /// Virtual Machine Size
        /// </summary>
        public readonly string? VmSize;

        [OutputConstructor]
        private ComputeInstancePropertiesResponse(
            string? applicationSharingPolicy,

            ImmutableArray<Outputs.ComputeInstanceApplicationResponse> applications,

            Outputs.ComputeInstanceAutologgerSettingsResponse? autologgerSettings,

            string? computeInstanceAuthorizationType,

            Outputs.ComputeInstanceConnectivityEndpointsResponse connectivityEndpoints,

            ImmutableArray<Outputs.ComputeInstanceContainerResponse> containers,

            Outputs.ComputeInstanceCreatedByResponse createdBy,

            ImmutableArray<Outputs.CustomServiceResponse> customServices,

            ImmutableArray<Outputs.ComputeInstanceDataDiskResponse> dataDisks,

            ImmutableArray<Outputs.ComputeInstanceDataMountResponse> dataMounts,

            bool? enableNodePublicIp,

            bool? enableOSPatching,

            bool? enableRootAccess,

            bool? enableSSO,

            ImmutableArray<Outputs.ErrorResponseResponse> errors,

            string? idleTimeBeforeShutdown,

            Outputs.ComputeInstanceLastOperationResponse lastOperation,

            Outputs.ImageMetadataResponse osImageMetadata,

            Outputs.PersonalComputeInstanceSettingsResponse? personalComputeInstanceSettings,

            bool? releaseQuotaOnStop,

            Outputs.ComputeSchedulesResponse? schedules,

            Outputs.SetupScriptsResponse? setupScripts,

            Outputs.ComputeInstanceSshSettingsResponse? sshSettings,

            string state,

            Outputs.ResourceIdResponse? subnet,

            Outputs.ComputeInstanceVersionResponse versions,

            string? vmSize)
        {
            ApplicationSharingPolicy = applicationSharingPolicy;
            Applications = applications;
            AutologgerSettings = autologgerSettings;
            ComputeInstanceAuthorizationType = computeInstanceAuthorizationType;
            ConnectivityEndpoints = connectivityEndpoints;
            Containers = containers;
            CreatedBy = createdBy;
            CustomServices = customServices;
            DataDisks = dataDisks;
            DataMounts = dataMounts;
            EnableNodePublicIp = enableNodePublicIp;
            EnableOSPatching = enableOSPatching;
            EnableRootAccess = enableRootAccess;
            EnableSSO = enableSSO;
            Errors = errors;
            IdleTimeBeforeShutdown = idleTimeBeforeShutdown;
            LastOperation = lastOperation;
            OsImageMetadata = osImageMetadata;
            PersonalComputeInstanceSettings = personalComputeInstanceSettings;
            ReleaseQuotaOnStop = releaseQuotaOnStop;
            Schedules = schedules;
            SetupScripts = setupScripts;
            SshSettings = sshSettings;
            State = state;
            Subnet = subnet;
            Versions = versions;
            VmSize = vmSize;
        }
    }
}
