// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240101Preview.Outputs
{

    /// <summary>
    /// Inference group configuration
    /// </summary>
    [OutputType]
    public sealed class InferenceGroupResponse
    {
        /// <summary>
        /// Capacity to be used from the pool's reserved capacity.
        /// optional
        /// </summary>
        public readonly int? BonusExtraCapacity;
        /// <summary>
        /// Description of the resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Metadata for the inference group.
        /// </summary>
        public readonly string? Metadata;
        /// <summary>
        /// Priority of the group within the N:Microsoft.MachineLearning.ManagementFrontEnd.Contracts.V20240101Preview.Pools.InferencePools.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// Property dictionary. Properties can be added, but not removed or altered.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Provisioning state for the inference group.
        /// </summary>
        public readonly string ProvisioningState;

        [OutputConstructor]
        private InferenceGroupResponse(
            int? bonusExtraCapacity,

            string? description,

            string? metadata,

            int? priority,

            ImmutableDictionary<string, string>? properties,

            string provisioningState)
        {
            BonusExtraCapacity = bonusExtraCapacity;
            Description = description;
            Metadata = metadata;
            Priority = priority;
            Properties = properties;
            ProvisioningState = provisioningState;
        }
    }
}
