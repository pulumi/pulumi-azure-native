// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240101Preview.Outputs
{

    /// <summary>
    /// ClientId and ClientSecret are required. Other properties are optional
    /// depending on each OAuth2 provider's implementation.
    /// </summary>
    [OutputType]
    public sealed class WorkspaceConnectionOAuth2Response
    {
        /// <summary>
        /// Required by Concur connection category
        /// </summary>
        public readonly string? AuthUrl;
        /// <summary>
        /// Client id in the format of UUID
        /// </summary>
        public readonly string? ClientId;
        public readonly string? ClientSecret;
        /// <summary>
        /// Required by GoogleAdWords connection category
        /// </summary>
        public readonly string? DeveloperToken;
        public readonly string? Password;
        /// <summary>
        /// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
        /// where user needs to get RefreshToken offline
        /// </summary>
        public readonly string? RefreshToken;
        /// <summary>
        /// Required by QuickBooks and Xero connection categories
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// Concur, ServiceNow auth server AccessToken grant type is 'Password'
        /// which requires UsernamePassword
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private WorkspaceConnectionOAuth2Response(
            string? authUrl,

            string? clientId,

            string? clientSecret,

            string? developerToken,

            string? password,

            string? refreshToken,

            string? tenantId,

            string? username)
        {
            AuthUrl = authUrl;
            ClientId = clientId;
            ClientSecret = clientSecret;
            DeveloperToken = developerToken;
            Password = password;
            RefreshToken = refreshToken;
            TenantId = tenantId;
            Username = username;
        }
    }
}
