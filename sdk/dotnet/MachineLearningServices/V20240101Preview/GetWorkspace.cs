// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240101Preview
{
    public static class GetWorkspace
    {
        /// <summary>
        /// An object that represents a machine learning workspace.
        /// </summary>
        public static Task<GetWorkspaceResult> InvokeAsync(GetWorkspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceResult>("azure-native:machinelearningservices/v20240101preview:getWorkspace", args ?? new GetWorkspaceArgs(), options.WithDefaults());

        /// <summary>
        /// An object that represents a machine learning workspace.
        /// </summary>
        public static Output<GetWorkspaceResult> Invoke(GetWorkspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceResult>("azure-native:machinelearningservices/v20240101preview:getWorkspace", args ?? new GetWorkspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Azure Machine Learning Workspace Name
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetWorkspaceArgs()
        {
        }
        public static new GetWorkspaceArgs Empty => new GetWorkspaceArgs();
    }

    public sealed class GetWorkspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Azure Machine Learning Workspace Name
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetWorkspaceInvokeArgs()
        {
        }
        public static new GetWorkspaceInvokeArgs Empty => new GetWorkspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceResult
    {
        /// <summary>
        /// The flag to indicate whether to allow public access when behind VNet.
        /// </summary>
        public readonly bool? AllowPublicAccessWhenBehindVnet;
        /// <summary>
        /// ARM id of the application insights associated with this workspace.
        /// </summary>
        public readonly string? ApplicationInsights;
        public readonly ImmutableArray<string> AssociatedWorkspaces;
        public readonly ImmutableArray<string> ContainerRegistries;
        /// <summary>
        /// ARM id of the container registry associated with this workspace.
        /// </summary>
        public readonly string? ContainerRegistry;
        /// <summary>
        /// The description of this workspace.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Url for the discovery service to identify regional endpoints for machine learning experimentation services
        /// </summary>
        public readonly string? DiscoveryUrl;
        public readonly bool? EnableDataIsolation;
        /// <summary>
        /// Flag to tell if SoftwareBillOfMaterial should be enabled for this workspace
        /// </summary>
        public readonly bool? EnableSoftwareBillOfMaterials;
        public readonly Outputs.EncryptionPropertyResponse? Encryption;
        public readonly ImmutableArray<string> ExistingWorkspaces;
        /// <summary>
        /// Settings for feature store type workspace.
        /// </summary>
        public readonly Outputs.FeatureStoreSettingsResponse? FeatureStoreSettings;
        /// <summary>
        /// The friendly name for this workspace. This name in mutable
        /// </summary>
        public readonly string? FriendlyName;
        /// <summary>
        /// The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
        /// </summary>
        public readonly bool? HbiWorkspace;
        public readonly string? HubResourceId;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Managed service identity (system assigned and/or user assigned identities)
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The compute name for image build
        /// </summary>
        public readonly string? ImageBuildCompute;
        /// <summary>
        /// The list of IPv4  addresses that are allowed to access the workspace.
        /// </summary>
        public readonly ImmutableArray<string> IpAllowlist;
        /// <summary>
        /// ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
        /// </summary>
        public readonly string? KeyVault;
        public readonly ImmutableArray<string> KeyVaults;
        public readonly string? Kind;
        public readonly string? Location;
        /// <summary>
        /// Managed Network settings for a machine learning workspace.
        /// </summary>
        public readonly Outputs.ManagedNetworkSettingsResponse? ManagedNetwork;
        /// <summary>
        /// The URI associated with this workspace that machine learning flow must point at to set up tracking.
        /// </summary>
        public readonly string MlFlowTrackingUri;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The notebook info of Azure ML workspace.
        /// </summary>
        public readonly Outputs.NotebookResourceInfoResponse NotebookInfo;
        /// <summary>
        /// The user assigned identity resource id that represents the workspace identity.
        /// </summary>
        public readonly string? PrimaryUserAssignedIdentity;
        /// <summary>
        /// The list of private endpoint connections in the workspace.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Count of private connections in the workspace
        /// </summary>
        public readonly int PrivateLinkCount;
        /// <summary>
        /// The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Whether requests from Public Network are allowed.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Settings for serverless compute in a workspace
        /// </summary>
        public readonly Outputs.ServerlessComputeSettingsResponse? ServerlessComputeSettings;
        /// <summary>
        /// The service managed resource settings.
        /// </summary>
        public readonly Outputs.ServiceManagedResourcesSettingsResponse? ServiceManagedResourcesSettings;
        /// <summary>
        /// The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
        /// </summary>
        public readonly string ServiceProvisionedResourceGroup;
        /// <summary>
        /// The list of shared private link resources in this workspace.
        /// </summary>
        public readonly ImmutableArray<Outputs.SharedPrivateLinkResourceResponse> SharedPrivateLinkResources;
        /// <summary>
        /// Optional. This field is required to be implemented by the RP because AML is supporting more than one tier
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// Retention time in days after workspace get soft deleted.
        /// </summary>
        public readonly int? SoftDeleteRetentionInDays;
        /// <summary>
        /// ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
        /// </summary>
        public readonly string? StorageAccount;
        public readonly ImmutableArray<string> StorageAccounts;
        /// <summary>
        /// If the storage associated with the workspace has hierarchical namespace(HNS) enabled.
        /// </summary>
        public readonly bool StorageHnsEnabled;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The auth mode used for accessing the system datastores of the workspace.
        /// </summary>
        public readonly string? SystemDatastoresAuthMode;
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The tenant id associated with this workspace.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.
        /// </summary>
        public readonly bool? V1LegacyMode;
        /// <summary>
        /// WorkspaceHub's configuration object.
        /// </summary>
        public readonly Outputs.WorkspaceHubConfigResponse? WorkspaceHubConfig;
        /// <summary>
        /// The immutable id associated with this workspace.
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceResult(
            bool? allowPublicAccessWhenBehindVnet,

            string? applicationInsights,

            ImmutableArray<string> associatedWorkspaces,

            ImmutableArray<string> containerRegistries,

            string? containerRegistry,

            string? description,

            string? discoveryUrl,

            bool? enableDataIsolation,

            bool? enableSoftwareBillOfMaterials,

            Outputs.EncryptionPropertyResponse? encryption,

            ImmutableArray<string> existingWorkspaces,

            Outputs.FeatureStoreSettingsResponse? featureStoreSettings,

            string? friendlyName,

            bool? hbiWorkspace,

            string? hubResourceId,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string? imageBuildCompute,

            ImmutableArray<string> ipAllowlist,

            string? keyVault,

            ImmutableArray<string> keyVaults,

            string? kind,

            string? location,

            Outputs.ManagedNetworkSettingsResponse? managedNetwork,

            string mlFlowTrackingUri,

            string name,

            Outputs.NotebookResourceInfoResponse notebookInfo,

            string? primaryUserAssignedIdentity,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            int privateLinkCount,

            string provisioningState,

            string? publicNetworkAccess,

            Outputs.ServerlessComputeSettingsResponse? serverlessComputeSettings,

            Outputs.ServiceManagedResourcesSettingsResponse? serviceManagedResourcesSettings,

            string serviceProvisionedResourceGroup,

            ImmutableArray<Outputs.SharedPrivateLinkResourceResponse> sharedPrivateLinkResources,

            Outputs.SkuResponse? sku,

            int? softDeleteRetentionInDays,

            string? storageAccount,

            ImmutableArray<string> storageAccounts,

            bool storageHnsEnabled,

            Outputs.SystemDataResponse systemData,

            string? systemDatastoresAuthMode,

            ImmutableDictionary<string, string>? tags,

            string tenantId,

            string type,

            bool? v1LegacyMode,

            Outputs.WorkspaceHubConfigResponse? workspaceHubConfig,

            string workspaceId)
        {
            AllowPublicAccessWhenBehindVnet = allowPublicAccessWhenBehindVnet;
            ApplicationInsights = applicationInsights;
            AssociatedWorkspaces = associatedWorkspaces;
            ContainerRegistries = containerRegistries;
            ContainerRegistry = containerRegistry;
            Description = description;
            DiscoveryUrl = discoveryUrl;
            EnableDataIsolation = enableDataIsolation;
            EnableSoftwareBillOfMaterials = enableSoftwareBillOfMaterials;
            Encryption = encryption;
            ExistingWorkspaces = existingWorkspaces;
            FeatureStoreSettings = featureStoreSettings;
            FriendlyName = friendlyName;
            HbiWorkspace = hbiWorkspace;
            HubResourceId = hubResourceId;
            Id = id;
            Identity = identity;
            ImageBuildCompute = imageBuildCompute;
            IpAllowlist = ipAllowlist;
            KeyVault = keyVault;
            KeyVaults = keyVaults;
            Kind = kind;
            Location = location;
            ManagedNetwork = managedNetwork;
            MlFlowTrackingUri = mlFlowTrackingUri;
            Name = name;
            NotebookInfo = notebookInfo;
            PrimaryUserAssignedIdentity = primaryUserAssignedIdentity;
            PrivateEndpointConnections = privateEndpointConnections;
            PrivateLinkCount = privateLinkCount;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            ServerlessComputeSettings = serverlessComputeSettings;
            ServiceManagedResourcesSettings = serviceManagedResourcesSettings;
            ServiceProvisionedResourceGroup = serviceProvisionedResourceGroup;
            SharedPrivateLinkResources = sharedPrivateLinkResources;
            Sku = sku;
            SoftDeleteRetentionInDays = softDeleteRetentionInDays;
            StorageAccount = storageAccount;
            StorageAccounts = storageAccounts;
            StorageHnsEnabled = storageHnsEnabled;
            SystemData = systemData;
            SystemDatastoresAuthMode = systemDatastoresAuthMode;
            Tags = tags;
            TenantId = tenantId;
            Type = type;
            V1LegacyMode = v1LegacyMode;
            WorkspaceHubConfig = workspaceHubConfig;
            WorkspaceId = workspaceId;
        }
    }
}
