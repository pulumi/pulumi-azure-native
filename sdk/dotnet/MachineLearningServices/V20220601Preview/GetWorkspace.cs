// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20220601Preview
{
    public static class GetWorkspace
    {
        /// <summary>
        /// Gets the properties of the specified machine learning workspace.
        /// </summary>
        public static Task<GetWorkspaceResult> InvokeAsync(GetWorkspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceResult>("azure-native:machinelearningservices/v20220601preview:getWorkspace", args ?? new GetWorkspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the properties of the specified machine learning workspace.
        /// </summary>
        public static Output<GetWorkspaceResult> Invoke(GetWorkspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceResult>("azure-native:machinelearningservices/v20220601preview:getWorkspace", args ?? new GetWorkspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetWorkspaceArgs()
        {
        }
        public static new GetWorkspaceArgs Empty => new GetWorkspaceArgs();
    }

    public sealed class GetWorkspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetWorkspaceInvokeArgs()
        {
        }
        public static new GetWorkspaceInvokeArgs Empty => new GetWorkspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceResult
    {
        /// <summary>
        /// The flag to indicate whether to allow public access when behind VNet.
        /// </summary>
        public readonly bool? AllowPublicAccessWhenBehindVnet;
        /// <summary>
        /// ARM id of the application insights associated with this workspace.
        /// </summary>
        public readonly string? ApplicationInsights;
        /// <summary>
        /// ARM id of the container registry associated with this workspace.
        /// </summary>
        public readonly string? ContainerRegistry;
        /// <summary>
        /// The description of this workspace.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Url for the discovery service to identify regional endpoints for machine learning experimentation services
        /// </summary>
        public readonly string? DiscoveryUrl;
        /// <summary>
        /// The encryption settings of Azure ML workspace.
        /// </summary>
        public readonly Outputs.EncryptionPropertyResponse? Encryption;
        /// <summary>
        /// The friendly name for this workspace. This name in mutable
        /// </summary>
        public readonly string? FriendlyName;
        /// <summary>
        /// The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
        /// </summary>
        public readonly bool? HbiWorkspace;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identity of the resource.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The compute name for image build
        /// </summary>
        public readonly string? ImageBuildCompute;
        /// <summary>
        /// ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
        /// </summary>
        public readonly string? KeyVault;
        /// <summary>
        /// Specifies the location of the resource.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The URI associated with this workspace that machine learning flow must point at to set up tracking.
        /// </summary>
        public readonly string MlFlowTrackingUri;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The notebook info of Azure ML workspace.
        /// </summary>
        public readonly Outputs.NotebookResourceInfoResponse NotebookInfo;
        /// <summary>
        /// The user assigned identity resource id that represents the workspace identity.
        /// </summary>
        public readonly string? PrimaryUserAssignedIdentity;
        /// <summary>
        /// The list of private endpoint connections in the workspace.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Count of private connections in the workspace
        /// </summary>
        public readonly int PrivateLinkCount;
        /// <summary>
        /// The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Whether requests from Public Network are allowed.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// The timestamp when the soft deleted workspace is going to be purged
        /// </summary>
        public readonly string ScheduledPurgeDate;
        /// <summary>
        /// The service managed resource settings.
        /// </summary>
        public readonly Outputs.ServiceManagedResourcesSettingsResponse? ServiceManagedResourcesSettings;
        /// <summary>
        /// The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
        /// </summary>
        public readonly string ServiceProvisionedResourceGroup;
        /// <summary>
        /// The list of shared private link resources in this workspace.
        /// </summary>
        public readonly ImmutableArray<Outputs.SharedPrivateLinkResourceResponse> SharedPrivateLinkResources;
        /// <summary>
        /// The sku of the workspace.
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// The timestamp when the workspace was soft deleted
        /// </summary>
        public readonly string SoftDeletedAt;
        /// <summary>
        /// ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
        /// </summary>
        public readonly string? StorageAccount;
        /// <summary>
        /// If the storage associated with the workspace has hierarchical namespace(HNS) enabled.
        /// </summary>
        public readonly bool StorageHnsEnabled;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Contains resource tags defined as key/value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The tenant id associated with this workspace.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.
        /// </summary>
        public readonly bool? V1LegacyMode;
        /// <summary>
        /// The immutable id associated with this workspace.
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceResult(
            bool? allowPublicAccessWhenBehindVnet,

            string? applicationInsights,

            string? containerRegistry,

            string? description,

            string? discoveryUrl,

            Outputs.EncryptionPropertyResponse? encryption,

            string? friendlyName,

            bool? hbiWorkspace,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string? imageBuildCompute,

            string? keyVault,

            string? location,

            string mlFlowTrackingUri,

            string name,

            Outputs.NotebookResourceInfoResponse notebookInfo,

            string? primaryUserAssignedIdentity,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            int privateLinkCount,

            string provisioningState,

            string? publicNetworkAccess,

            string scheduledPurgeDate,

            Outputs.ServiceManagedResourcesSettingsResponse? serviceManagedResourcesSettings,

            string serviceProvisionedResourceGroup,

            ImmutableArray<Outputs.SharedPrivateLinkResourceResponse> sharedPrivateLinkResources,

            Outputs.SkuResponse? sku,

            string softDeletedAt,

            string? storageAccount,

            bool storageHnsEnabled,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string tenantId,

            string type,

            bool? v1LegacyMode,

            string workspaceId)
        {
            AllowPublicAccessWhenBehindVnet = allowPublicAccessWhenBehindVnet;
            ApplicationInsights = applicationInsights;
            ContainerRegistry = containerRegistry;
            Description = description;
            DiscoveryUrl = discoveryUrl;
            Encryption = encryption;
            FriendlyName = friendlyName;
            HbiWorkspace = hbiWorkspace;
            Id = id;
            Identity = identity;
            ImageBuildCompute = imageBuildCompute;
            KeyVault = keyVault;
            Location = location;
            MlFlowTrackingUri = mlFlowTrackingUri;
            Name = name;
            NotebookInfo = notebookInfo;
            PrimaryUserAssignedIdentity = primaryUserAssignedIdentity;
            PrivateEndpointConnections = privateEndpointConnections;
            PrivateLinkCount = privateLinkCount;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            ScheduledPurgeDate = scheduledPurgeDate;
            ServiceManagedResourcesSettings = serviceManagedResourcesSettings;
            ServiceProvisionedResourceGroup = serviceProvisionedResourceGroup;
            SharedPrivateLinkResources = sharedPrivateLinkResources;
            Sku = sku;
            SoftDeletedAt = softDeletedAt;
            StorageAccount = storageAccount;
            StorageHnsEnabled = storageHnsEnabled;
            SystemData = systemData;
            Tags = tags;
            TenantId = tenantId;
            Type = type;
            V1LegacyMode = v1LegacyMode;
            WorkspaceId = workspaceId;
        }
    }
}
