// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20220601Preview.Inputs
{

    /// <summary>
    /// AKS properties
    /// </summary>
    public sealed class AKSSchemaPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of agents
        /// </summary>
        [Input("agentCount")]
        public Input<int>? AgentCount { get; set; }

        /// <summary>
        /// Agent virtual machine size
        /// </summary>
        [Input("agentVmSize")]
        public Input<string>? AgentVmSize { get; set; }

        /// <summary>
        /// AKS networking configuration for vnet
        /// </summary>
        [Input("aksNetworkingConfiguration")]
        public Input<Inputs.AksNetworkingConfigurationArgs>? AksNetworkingConfiguration { get; set; }

        /// <summary>
        /// Cluster full qualified domain name
        /// </summary>
        [Input("clusterFqdn")]
        public Input<string>? ClusterFqdn { get; set; }

        /// <summary>
        /// Intended usage of the cluster
        /// </summary>
        [Input("clusterPurpose")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20220601Preview.ClusterPurpose>? ClusterPurpose { get; set; }

        /// <summary>
        /// Load Balancer Subnet
        /// </summary>
        [Input("loadBalancerSubnet")]
        public Input<string>? LoadBalancerSubnet { get; set; }

        /// <summary>
        /// Load Balancer Type
        /// </summary>
        [Input("loadBalancerType")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20220601Preview.LoadBalancerType>? LoadBalancerType { get; set; }

        /// <summary>
        /// SSL configuration
        /// </summary>
        [Input("sslConfiguration")]
        public Input<Inputs.SslConfigurationArgs>? SslConfiguration { get; set; }

        public AKSSchemaPropertiesArgs()
        {
            ClusterPurpose = "FastProd";
            LoadBalancerType = "PublicIp";
        }
        public static new AKSSchemaPropertiesArgs Empty => new AKSSchemaPropertiesArgs();
    }
}
