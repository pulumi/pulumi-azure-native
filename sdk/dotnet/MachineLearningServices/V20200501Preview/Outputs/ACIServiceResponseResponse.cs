// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearningServices.V20200501Preview.Outputs
{

    [OutputType]
    public sealed class ACIServiceResponseResponse
    {
        /// <summary>
        /// Whether or not Application Insights is enabled.
        /// </summary>
        public readonly bool? AppInsightsEnabled;
        /// <summary>
        /// Whether or not authentication is enabled on the service.
        /// </summary>
        public readonly bool? AuthEnabled;
        /// <summary>
        /// The CName for the service.
        /// </summary>
        public readonly string? Cname;
        /// <summary>
        /// The compute environment type for the service.
        /// </summary>
        public readonly string ComputeType;
        /// <summary>
        /// The container resource requirements.
        /// </summary>
        public readonly Outputs.ContainerResourceRequirementsResponse? ContainerResourceRequirements;
        /// <summary>
        /// Details of the data collection options specified.
        /// </summary>
        public readonly Outputs.ACIServiceResponseResponseDataCollection? DataCollection;
        /// <summary>
        /// The deployment type for the service.
        /// </summary>
        public readonly string? DeploymentType;
        /// <summary>
        /// The service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The encryption properties.
        /// </summary>
        public readonly Outputs.ACIServiceResponseResponseEncryptionProperties? EncryptionProperties;
        /// <summary>
        /// The Environment, models and assets used for inferencing.
        /// </summary>
        public readonly Outputs.ACIServiceResponseResponseEnvironmentImageRequest? EnvironmentImageRequest;
        /// <summary>
        /// The error details.
        /// </summary>
        public readonly Outputs.ServiceResponseBaseResponseError Error;
        /// <summary>
        /// The service tag dictionary. Tags are mutable.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? KvTags;
        /// <summary>
        /// The name of the Azure location/region.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Details on the models and configurations.
        /// </summary>
        public readonly ImmutableDictionary<string, object> ModelConfigMap;
        /// <summary>
        /// The list of models.
        /// </summary>
        public readonly ImmutableArray<Outputs.ModelResponse> Models;
        /// <summary>
        /// The service property dictionary. Properties are immutable.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// The public Fqdn for the service.
        /// </summary>
        public readonly string? PublicFqdn;
        /// <summary>
        /// The public IP address for the service.
        /// </summary>
        public readonly string? PublicIp;
        /// <summary>
        /// The Uri for sending scoring requests.
        /// </summary>
        public readonly string ScoringUri;
        /// <summary>
        /// The public SSL certificate in PEM format to use if SSL is enabled.
        /// </summary>
        public readonly string? SslCertificate;
        /// <summary>
        /// Whether or not SSL is enabled.
        /// </summary>
        public readonly bool? SslEnabled;
        /// <summary>
        /// The public SSL key in PEM format for the certificate.
        /// </summary>
        public readonly string? SslKey;
        /// <summary>
        /// The current state of the service.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The Uri for sending swagger requests.
        /// </summary>
        public readonly string SwaggerUri;
        /// <summary>
        /// The virtual network configuration.
        /// </summary>
        public readonly Outputs.ACIServiceResponseResponseVnetConfiguration? VnetConfiguration;

        [OutputConstructor]
        private ACIServiceResponseResponse(
            bool? appInsightsEnabled,

            bool? authEnabled,

            string? cname,

            string computeType,

            Outputs.ContainerResourceRequirementsResponse? containerResourceRequirements,

            Outputs.ACIServiceResponseResponseDataCollection? dataCollection,

            string? deploymentType,

            string? description,

            Outputs.ACIServiceResponseResponseEncryptionProperties? encryptionProperties,

            Outputs.ACIServiceResponseResponseEnvironmentImageRequest? environmentImageRequest,

            Outputs.ServiceResponseBaseResponseError error,

            ImmutableDictionary<string, string>? kvTags,

            string? location,

            ImmutableDictionary<string, object> modelConfigMap,

            ImmutableArray<Outputs.ModelResponse> models,

            ImmutableDictionary<string, string>? properties,

            string? publicFqdn,

            string? publicIp,

            string scoringUri,

            string? sslCertificate,

            bool? sslEnabled,

            string? sslKey,

            string state,

            string swaggerUri,

            Outputs.ACIServiceResponseResponseVnetConfiguration? vnetConfiguration)
        {
            AppInsightsEnabled = appInsightsEnabled;
            AuthEnabled = authEnabled;
            Cname = cname;
            ComputeType = computeType;
            ContainerResourceRequirements = containerResourceRequirements;
            DataCollection = dataCollection;
            DeploymentType = deploymentType;
            Description = description;
            EncryptionProperties = encryptionProperties;
            EnvironmentImageRequest = environmentImageRequest;
            Error = error;
            KvTags = kvTags;
            Location = location;
            ModelConfigMap = modelConfigMap;
            Models = models;
            Properties = properties;
            PublicFqdn = publicFqdn;
            PublicIp = publicIp;
            ScoringUri = scoringUri;
            SslCertificate = sslCertificate;
            SslEnabled = sslEnabled;
            SslKey = sslKey;
            State = state;
            SwaggerUri = swaggerUri;
            VnetConfiguration = vnetConfiguration;
        }
    }
}
