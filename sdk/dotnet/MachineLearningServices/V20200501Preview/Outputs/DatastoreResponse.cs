// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearningServices.V20200501Preview.Outputs
{

    [OutputType]
    public sealed class DatastoreResponse
    {
        public readonly Outputs.AzureDataLakeSectionResponse? AzureDataLakeSection;
        public readonly Outputs.AzureMySqlSectionResponse? AzureMySqlSection;
        public readonly Outputs.AzurePostgreSqlSectionResponse? AzurePostgreSqlSection;
        public readonly Outputs.AzureSqlDatabaseSectionResponse? AzureSqlDatabaseSection;
        public readonly Outputs.AzureStorageSectionResponse? AzureStorageSection;
        /// <summary>
        /// The User who created the datastore.
        /// </summary>
        public readonly Outputs.UserInfoResponse CreatedBy;
        /// <summary>
        /// The date and time when the datastore was created.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// The datastore type.
        /// </summary>
        public readonly string? DataStoreType;
        /// <summary>
        /// Description of the datastore.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Data specific to GlusterFS.
        /// </summary>
        public readonly Outputs.GlusterFsSectionResponse? GlusterFsSection;
        /// <summary>
        /// A read only property that denotes whether the service datastore has been validated with credentials.
        /// </summary>
        public readonly bool? HasBeenValidated;
        /// <summary>
        /// Info about origin if it is linked.
        /// </summary>
        public readonly Outputs.LinkedInfoResponse? LinkedInfo;
        /// <summary>
        /// The User who modified the datastore.
        /// </summary>
        public readonly Outputs.UserInfoResponse ModifiedBy;
        /// <summary>
        /// The date and time when the datastore was last modified.
        /// </summary>
        public readonly string ModifiedTime;
        /// <summary>
        /// Name of the datastore.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Tags for this datastore.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private DatastoreResponse(
            Outputs.AzureDataLakeSectionResponse? azureDataLakeSection,

            Outputs.AzureMySqlSectionResponse? azureMySqlSection,

            Outputs.AzurePostgreSqlSectionResponse? azurePostgreSqlSection,

            Outputs.AzureSqlDatabaseSectionResponse? azureSqlDatabaseSection,

            Outputs.AzureStorageSectionResponse? azureStorageSection,

            Outputs.UserInfoResponse createdBy,

            string createdTime,

            string? dataStoreType,

            string? description,

            Outputs.GlusterFsSectionResponse? glusterFsSection,

            bool? hasBeenValidated,

            Outputs.LinkedInfoResponse? linkedInfo,

            Outputs.UserInfoResponse modifiedBy,

            string modifiedTime,

            string? name,

            ImmutableDictionary<string, string> tags)
        {
            AzureDataLakeSection = azureDataLakeSection;
            AzureMySqlSection = azureMySqlSection;
            AzurePostgreSqlSection = azurePostgreSqlSection;
            AzureSqlDatabaseSection = azureSqlDatabaseSection;
            AzureStorageSection = azureStorageSection;
            CreatedBy = createdBy;
            CreatedTime = createdTime;
            DataStoreType = dataStoreType;
            Description = description;
            GlusterFsSection = glusterFsSection;
            HasBeenValidated = hasBeenValidated;
            LinkedInfo = linkedInfo;
            ModifiedBy = modifiedBy;
            ModifiedTime = modifiedTime;
            Name = name;
            Tags = tags;
        }
    }
}
