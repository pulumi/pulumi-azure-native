// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearningServices.V20200501Preview.Inputs
{

    public sealed class DatasetCreateRequestParametersArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Header type.
        /// </summary>
        [Input("header")]
        public Input<string>? Header { get; set; }

        /// <summary>
        /// Boolean to keep path information as column in the dataset. Defaults to False. This is useful when reading multiple files, and want to know which file a particular record originated from, or to keep useful information in file path.
        /// </summary>
        [Input("includePath")]
        public Input<bool>? IncludePath { get; set; }

        /// <summary>
        /// The partition information of each path will be extracted into columns based on the specified format. Format part '{column_name}' creates string column, and '{column_name:yyyy/MM/dd/HH/mm/ss}' creates datetime column, where 'yyyy', 'MM', 'dd', 'HH', 'mm' and 'ss' are used to extract year, month, day, hour, minute and second for the datetime type. The format should start from the position of first partition key until the end of file path. For example, given the path '../USA/2019/01/01/data.parquet' where the partition is by country/region and time, partition_format='/{CountryOrRegion}/{PartitionDate:yyyy/MM/dd}/data.csv' creates a string column 'CountryOrRegion' with the value 'USA' and a datetime column 'PartitionDate' with the value '2019-01-01
        /// </summary>
        [Input("partitionFormat")]
        public Input<string>? PartitionFormat { get; set; }

        [Input("path")]
        public Input<Inputs.DatasetCreateRequestPathArgs>? Path { get; set; }

        [Input("query")]
        public Input<Inputs.DatasetCreateRequestQueryArgs>? Query { get; set; }

        /// <summary>
        /// The separator used to split columns for 'delimited_files' sourceType.
        /// </summary>
        [Input("separator")]
        public Input<string>? Separator { get; set; }

        /// <summary>
        /// Data source type.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        public DatasetCreateRequestParametersArgs()
        {
        }
    }
}
