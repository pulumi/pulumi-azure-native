// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20200901Preview
{
    /// <summary>
    /// Machine Learning service object wrapped into ARM resource envelope.
    /// </summary>
    [AzureNativeResourceType("azure-native:machinelearningservices/v20200901preview:AKSService")]
    public partial class AKSService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identity of the resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.IdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Specifies the location of the resource.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Service properties
        /// </summary>
        [Output("properties")]
        public Output<object> Properties { get; private set; } = null!;

        /// <summary>
        /// The sku of the workspace.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Contains resource tags defined as key/value pairs.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AKSService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AKSService(string name, AKSServiceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:machinelearningservices/v20200901preview:AKSService", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private AKSService(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:machinelearningservices/v20200901preview:AKSService", name, null, MakeResourceOptions(options, id))
        {
        }

        private static AKSServiceArgs MakeArgs(AKSServiceArgs args)
        {
            args ??= new AKSServiceArgs();
            args.ComputeType = "AKS";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices:AKSService"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200501preview:AKSService"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200515preview:AKSService"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20210101:AKSService"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20210401:AKSService"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AKSService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AKSService Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AKSService(name, id, options);
        }
    }

    public sealed class AKSServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not AAD authentication is enabled.
        /// </summary>
        [Input("aadAuthEnabled")]
        public Input<bool>? AadAuthEnabled { get; set; }

        /// <summary>
        /// Whether or not Application Insights is enabled.
        /// </summary>
        [Input("appInsightsEnabled")]
        public Input<bool>? AppInsightsEnabled { get; set; }

        /// <summary>
        /// Whether or not authentication is enabled.
        /// </summary>
        [Input("authEnabled")]
        public Input<bool>? AuthEnabled { get; set; }

        /// <summary>
        /// The auto scaler properties.
        /// </summary>
        [Input("autoScaler")]
        public Input<Inputs.AKSServiceCreateRequestAutoScalerArgs>? AutoScaler { get; set; }

        /// <summary>
        /// The name of the compute resource.
        /// </summary>
        [Input("computeName")]
        public Input<string>? ComputeName { get; set; }

        /// <summary>
        /// The compute environment type for the service.
        /// Expected value is 'AKS'.
        /// </summary>
        [Input("computeType", required: true)]
        public Input<string> ComputeType { get; set; } = null!;

        /// <summary>
        /// The container resource requirements.
        /// </summary>
        [Input("containerResourceRequirements")]
        public Input<Inputs.ContainerResourceRequirementsArgs>? ContainerResourceRequirements { get; set; }

        /// <summary>
        /// Details of the data collection options specified.
        /// </summary>
        [Input("dataCollection")]
        public Input<Inputs.AKSServiceCreateRequestDataCollectionArgs>? DataCollection { get; set; }

        /// <summary>
        /// The description of the service.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Environment, models and assets needed for inferencing.
        /// </summary>
        [Input("environmentImageRequest")]
        public Input<Inputs.CreateServiceRequestEnvironmentImageRequestArgs>? EnvironmentImageRequest { get; set; }

        /// <summary>
        /// Is this the default variant.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// The authentication keys.
        /// </summary>
        [Input("keys")]
        public Input<Inputs.CreateServiceRequestKeysArgs>? Keys { get; set; }

        [Input("kvTags")]
        private InputMap<string>? _kvTags;

        /// <summary>
        /// The service tag dictionary. Tags are mutable.
        /// </summary>
        public InputMap<string> KvTags
        {
            get => _kvTags ?? (_kvTags = new InputMap<string>());
            set => _kvTags = value;
        }

        /// <summary>
        /// The liveness probe requirements.
        /// </summary>
        [Input("livenessProbeRequirements")]
        public Input<Inputs.AKSServiceCreateRequestLivenessProbeRequirementsArgs>? LivenessProbeRequirements { get; set; }

        /// <summary>
        /// The name of the Azure location/region.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The maximum number of concurrent requests per container.
        /// </summary>
        [Input("maxConcurrentRequestsPerContainer")]
        public Input<int>? MaxConcurrentRequestsPerContainer { get; set; }

        /// <summary>
        /// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
        /// </summary>
        [Input("maxQueueWaitMs")]
        public Input<int>? MaxQueueWaitMs { get; set; }

        /// <summary>
        /// Kubernetes namespace for the service.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The number of replicas on the cluster.
        /// </summary>
        [Input("numReplicas")]
        public Input<int>? NumReplicas { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// The service properties dictionary. Properties are immutable.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        /// <summary>
        /// Name of the resource group in which workspace is located.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The scoring timeout in milliseconds.
        /// </summary>
        [Input("scoringTimeoutMs")]
        public Input<int>? ScoringTimeoutMs { get; set; }

        /// <summary>
        /// Name of the Azure Machine Learning service.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The amount of traffic variant receives.
        /// </summary>
        [Input("trafficPercentile")]
        public Input<double>? TrafficPercentile { get; set; }

        /// <summary>
        /// The type of the variant.
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20200901Preview.VariantType>? Type { get; set; }

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public AKSServiceArgs()
        {
        }
        public static new AKSServiceArgs Empty => new AKSServiceArgs();
    }
}
