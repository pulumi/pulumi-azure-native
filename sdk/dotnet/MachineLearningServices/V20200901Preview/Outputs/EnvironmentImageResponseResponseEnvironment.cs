// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearningServices.V20200901Preview.Outputs
{

    [OutputType]
    public sealed class EnvironmentImageResponseResponseEnvironment
    {
        /// <summary>
        /// The definition of a Docker container.
        /// </summary>
        public readonly Outputs.ModelEnvironmentDefinitionResponseResponseDocker? Docker;
        /// <summary>
        /// Definition of environment variables to be defined in the environment.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EnvironmentVariables;
        /// <summary>
        /// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
        /// </summary>
        public readonly string? InferencingStackVersion;
        /// <summary>
        /// The name of the environment.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Settings for a Python environment.
        /// </summary>
        public readonly Outputs.ModelEnvironmentDefinitionResponseResponsePython? Python;
        /// <summary>
        /// Settings for a R environment.
        /// </summary>
        public readonly Outputs.ModelEnvironmentDefinitionResponseResponseR? R;
        /// <summary>
        /// The configuration for a Spark environment.
        /// </summary>
        public readonly Outputs.ModelEnvironmentDefinitionResponseResponseSpark? Spark;
        /// <summary>
        /// The environment version.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private EnvironmentImageResponseResponseEnvironment(
            Outputs.ModelEnvironmentDefinitionResponseResponseDocker? docker,

            ImmutableDictionary<string, string>? environmentVariables,

            string? inferencingStackVersion,

            string? name,

            Outputs.ModelEnvironmentDefinitionResponseResponsePython? python,

            Outputs.ModelEnvironmentDefinitionResponseResponseR? r,

            Outputs.ModelEnvironmentDefinitionResponseResponseSpark? spark,

            string? version)
        {
            Docker = docker;
            EnvironmentVariables = environmentVariables;
            InferencingStackVersion = inferencingStackVersion;
            Name = name;
            Python = python;
            R = r;
            Spark = spark;
            Version = version;
        }
    }
}
