// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearningServices.V20200901Preview.Inputs
{

    /// <summary>
    /// Settings for a R environment.
    /// </summary>
    public sealed class ModelEnvironmentDefinitionRArgs : Pulumi.ResourceArgs
    {
        [Input("bioConductorPackages")]
        private InputList<string>? _bioConductorPackages;

        /// <summary>
        /// The packages from Bioconductor.
        /// </summary>
        public InputList<string> BioConductorPackages
        {
            get => _bioConductorPackages ?? (_bioConductorPackages = new InputList<string>());
            set => _bioConductorPackages = value;
        }

        [Input("cranPackages")]
        private InputList<Inputs.RCranPackageArgs>? _cranPackages;

        /// <summary>
        /// The CRAN packages to use.
        /// </summary>
        public InputList<Inputs.RCranPackageArgs> CranPackages
        {
            get => _cranPackages ?? (_cranPackages = new InputList<Inputs.RCranPackageArgs>());
            set => _cranPackages = value;
        }

        [Input("customUrlPackages")]
        private InputList<string>? _customUrlPackages;

        /// <summary>
        /// The packages from custom urls.
        /// </summary>
        public InputList<string> CustomUrlPackages
        {
            get => _customUrlPackages ?? (_customUrlPackages = new InputList<string>());
            set => _customUrlPackages = value;
        }

        [Input("gitHubPackages")]
        private InputList<Inputs.RGitHubPackageArgs>? _gitHubPackages;

        /// <summary>
        /// The packages directly from GitHub.
        /// </summary>
        public InputList<Inputs.RGitHubPackageArgs> GitHubPackages
        {
            get => _gitHubPackages ?? (_gitHubPackages = new InputList<Inputs.RGitHubPackageArgs>());
            set => _gitHubPackages = value;
        }

        /// <summary>
        /// The version of R to be installed
        /// </summary>
        [Input("rVersion")]
        public Input<string>? RVersion { get; set; }

        /// <summary>
        /// The Rscript path to use if an environment build is not required.
        /// The path specified gets used to call the user script.
        /// </summary>
        [Input("rscriptPath")]
        public Input<string>? RscriptPath { get; set; }

        /// <summary>
        /// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
        /// </summary>
        [Input("snapshotDate")]
        public Input<string>? SnapshotDate { get; set; }

        /// <summary>
        /// Indicates whether the environment is managed by user or by AzureML.
        /// </summary>
        [Input("userManaged")]
        public Input<bool>? UserManaged { get; set; }

        public ModelEnvironmentDefinitionRArgs()
        {
        }
    }
}
