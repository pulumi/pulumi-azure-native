// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearningServices.V20181119.Outputs
{

    [OutputType]
    public sealed class AmlComputeResponseProperties
    {
        /// <summary>
        /// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
        /// </summary>
        public readonly string AllocationState;
        /// <summary>
        /// The time at which the compute entered its current allocation state.
        /// </summary>
        public readonly string AllocationStateTransitionTime;
        /// <summary>
        /// The number of compute nodes currently assigned to the compute.
        /// </summary>
        public readonly int CurrentNodeCount;
        /// <summary>
        /// Collection of errors encountered by various compute nodes during node setup.
        /// </summary>
        public readonly ImmutableArray<Outputs.MachineLearningServiceErrorResponse> Errors;
        /// <summary>
        /// Counts of various node states on the compute.
        /// </summary>
        public readonly Outputs.NodeStateCountsResponse NodeStateCounts;
        /// <summary>
        /// Scale settings for AML Compute
        /// </summary>
        public readonly Outputs.ScaleSettingsResponse? ScaleSettings;
        /// <summary>
        /// Virtual network subnet resource ID the compute nodes belong to.
        /// </summary>
        public readonly Outputs.ResourceIdResponse? Subnet;
        /// <summary>
        /// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
        /// </summary>
        public readonly int TargetNodeCount;
        /// <summary>
        /// Credentials for an administrator user account that will be created on each compute node.
        /// </summary>
        public readonly Outputs.UserAccountCredentialsResponse? UserAccountCredentials;
        /// <summary>
        /// Virtual Machine priority
        /// </summary>
        public readonly string? VmPriority;
        /// <summary>
        /// Virtual Machine Size
        /// </summary>
        public readonly string? VmSize;

        [OutputConstructor]
        private AmlComputeResponseProperties(
            string allocationState,

            string allocationStateTransitionTime,

            int currentNodeCount,

            ImmutableArray<Outputs.MachineLearningServiceErrorResponse> errors,

            Outputs.NodeStateCountsResponse nodeStateCounts,

            Outputs.ScaleSettingsResponse? scaleSettings,

            Outputs.ResourceIdResponse? subnet,

            int targetNodeCount,

            Outputs.UserAccountCredentialsResponse? userAccountCredentials,

            string? vmPriority,

            string? vmSize)
        {
            AllocationState = allocationState;
            AllocationStateTransitionTime = allocationStateTransitionTime;
            CurrentNodeCount = currentNodeCount;
            Errors = errors;
            NodeStateCounts = nodeStateCounts;
            ScaleSettings = scaleSettings;
            Subnet = subnet;
            TargetNodeCount = targetNodeCount;
            UserAccountCredentials = userAccountCredentials;
            VmPriority = vmPriority;
            VmSize = vmSize;
        }
    }
}
