// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001.Outputs
{

    /// <summary>
    /// Static input data definition.
    /// </summary>
    [OutputType]
    public sealed class StaticInputDataResponse
    {
        /// <summary>
        /// Mapping of column names to special uses.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Columns;
        /// <summary>
        /// The context metadata of the data source.
        /// </summary>
        public readonly string? DataContext;
        /// <summary>
        /// Monitoring input data type enum.
        /// Expected value is 'Static'.
        /// </summary>
        public readonly string InputDataType;
        /// <summary>
        /// [Required] Specifies the type of job.
        /// </summary>
        public readonly string JobInputType;
        /// <summary>
        /// Reference to the component asset used to preprocess the data.
        /// </summary>
        public readonly string? PreprocessingComponentId;
        /// <summary>
        /// [Required] Input Asset URI.
        /// </summary>
        public readonly string Uri;
        /// <summary>
        /// [Required] The end date of the data window.
        /// </summary>
        public readonly string WindowEnd;
        /// <summary>
        /// [Required] The start date of the data window.
        /// </summary>
        public readonly string WindowStart;

        [OutputConstructor]
        private StaticInputDataResponse(
            ImmutableDictionary<string, string>? columns,

            string? dataContext,

            string inputDataType,

            string jobInputType,

            string? preprocessingComponentId,

            string uri,

            string windowEnd,

            string windowStart)
        {
            Columns = columns;
            DataContext = dataContext;
            InputDataType = inputDataType;
            JobInputType = jobInputType;
            PreprocessingComponentId = preprocessingComponentId;
            Uri = uri;
            WindowEnd = windowEnd;
            WindowStart = windowStart;
        }
    }
}
