// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001.Outputs
{

    [OutputType]
    public sealed class NoneAuthTypeWorkspaceConnectionPropertiesResponse
    {
        /// <summary>
        /// Authentication type of the connection target
        /// Expected value is 'None'.
        /// </summary>
        public readonly string AuthType;
        /// <summary>
        /// Category of the connection
        /// </summary>
        public readonly string? Category;
        public readonly string CreatedByWorkspaceArmId;
        public readonly string? ExpiryTime;
        /// <summary>
        /// Group based on connection category
        /// </summary>
        public readonly string Group;
        public readonly bool? IsSharedToAll;
        /// <summary>
        /// Store user metadata for this connection
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Metadata;
        public readonly ImmutableArray<string> SharedUserList;
        public readonly string? Target;
        /// <summary>
        /// Value details of the workspace connection.
        /// </summary>
        public readonly string? Value;
        /// <summary>
        /// format for the workspace connection value
        /// </summary>
        public readonly string? ValueFormat;

        [OutputConstructor]
        private NoneAuthTypeWorkspaceConnectionPropertiesResponse(
            string authType,

            string? category,

            string createdByWorkspaceArmId,

            string? expiryTime,

            string group,

            bool? isSharedToAll,

            ImmutableDictionary<string, string>? metadata,

            ImmutableArray<string> sharedUserList,

            string? target,

            string? value,

            string? valueFormat)
        {
            AuthType = authType;
            Category = category;
            CreatedByWorkspaceArmId = createdByWorkspaceArmId;
            ExpiryTime = expiryTime;
            Group = group;
            IsSharedToAll = isSharedToAll;
            Metadata = metadata;
            SharedUserList = sharedUserList;
            Target = target;
            Value = value;
            ValueFormat = valueFormat;
        }
    }
}
