// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001.Inputs
{

    public sealed class RecurrenceTriggerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.
        /// Recommented format would be "2022-06-01T00:00:01"
        /// If not present, the schedule will run indefinitely
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// [Required] The frequency to trigger schedule.
        /// </summary>
        [Input("frequency", required: true)]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20241001.RecurrenceFrequency> Frequency { get; set; } = null!;

        /// <summary>
        /// [Required] Specifies schedule interval in conjunction with frequency
        /// </summary>
        [Input("interval", required: true)]
        public Input<int> Interval { get; set; } = null!;

        /// <summary>
        /// The recurrence schedule.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.RecurrenceScheduleArgs>? Schedule { get; set; }

        /// <summary>
        /// Specifies start time of schedule in ISO 8601 format, but without a UTC offset.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// 
        /// Expected value is 'Recurrence'.
        /// </summary>
        [Input("triggerType", required: true)]
        public Input<string> TriggerType { get; set; } = null!;

        public RecurrenceTriggerArgs()
        {
            TimeZone = "UTC";
        }
        public static new RecurrenceTriggerArgs Empty => new RecurrenceTriggerArgs();
    }
}
