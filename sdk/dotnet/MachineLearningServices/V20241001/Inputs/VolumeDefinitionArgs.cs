// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001.Inputs
{

    /// <summary>
    /// Describes the volume configuration for the container
    /// </summary>
    public sealed class VolumeDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bind Options of the mount
        /// </summary>
        [Input("bind")]
        public Input<Inputs.BindOptionsArgs>? Bind { get; set; }

        /// <summary>
        /// Consistency of the volume
        /// </summary>
        [Input("consistency")]
        public Input<string>? Consistency { get; set; }

        /// <summary>
        /// Indicate whether to mount volume as readOnly. Default value for this is false.
        /// </summary>
        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        /// <summary>
        /// Source of the mount. For bind mounts this is the host path.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Target of the mount. For bind mounts this is the path in the container.
        /// </summary>
        [Input("target")]
        public Input<string>? Target { get; set; }

        /// <summary>
        /// tmpfs option of the mount
        /// </summary>
        [Input("tmpfs")]
        public Input<Inputs.TmpfsOptionsArgs>? Tmpfs { get; set; }

        /// <summary>
        /// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20241001.VolumeDefinitionType>? Type { get; set; }

        /// <summary>
        /// Volume Options of the mount
        /// </summary>
        [Input("volume")]
        public Input<Inputs.VolumeOptionsArgs>? Volume { get; set; }

        public VolumeDefinitionArgs()
        {
            Type = "bind";
        }
        public static new VolumeDefinitionArgs Empty => new VolumeDefinitionArgs();
    }
}
