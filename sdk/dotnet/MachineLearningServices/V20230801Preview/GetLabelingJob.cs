// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230801Preview
{
    public static class GetLabelingJob
    {
        /// <summary>
        /// Azure Resource Manager resource envelope.
        /// </summary>
        public static Task<GetLabelingJobResult> InvokeAsync(GetLabelingJobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLabelingJobResult>("azure-native:machinelearningservices/v20230801preview:getLabelingJob", args ?? new GetLabelingJobArgs(), options.WithDefaults());

        /// <summary>
        /// Azure Resource Manager resource envelope.
        /// </summary>
        public static Output<GetLabelingJobResult> Invoke(GetLabelingJobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLabelingJobResult>("azure-native:machinelearningservices/v20230801preview:getLabelingJob", args ?? new GetLabelingJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLabelingJobArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name and identifier for the LabelingJob.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetLabelingJobArgs()
        {
        }
        public static new GetLabelingJobArgs Empty => new GetLabelingJobArgs();
    }

    public sealed class GetLabelingJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name and identifier for the LabelingJob.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetLabelingJobInvokeArgs()
        {
        }
        public static new GetLabelingJobInvokeArgs Empty => new GetLabelingJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetLabelingJobResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// [Required] Additional attributes of the entity.
        /// </summary>
        public readonly Outputs.LabelingJobResponse LabelingJobProperties;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLabelingJobResult(
            string id,

            Outputs.LabelingJobResponse labelingJobProperties,

            string name,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            LabelingJobProperties = labelingJobProperties;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
