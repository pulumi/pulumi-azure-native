// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230801Preview.Outputs
{

    /// <summary>
    /// This connection type covers the generic ApiKey auth connection categories, for examples:
    /// AzureOpenAI:
    ///     Category:= AzureOpenAI
    ///     AuthType:= ApiKey (as type discriminator)
    ///     Credentials:= {ApiKey} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey
    ///     Target:= {ApiBase}
    ///             
    /// CognitiveService:
    ///     Category:= CognitiveService
    ///     AuthType:= ApiKey (as type discriminator)
    ///     Credentials:= {SubscriptionKey} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey
    ///     Target:= ServiceRegion={serviceRegion}
    ///             
    /// CognitiveSearch:
    ///     Category:= CognitiveSearch
    ///     AuthType:= ApiKey (as type discriminator)
    ///     Credentials:= {Key} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey
    ///     Target:= {Endpoint}
    ///             
    /// Use Metadata property bag for ApiType, ApiVersion, Kind and other metadata fields
    /// </summary>
    [OutputType]
    public sealed class ApiKeyAuthWorkspaceConnectionPropertiesResponse
    {
        /// <summary>
        /// Authentication type of the connection target
        /// Expected value is 'ApiKey'.
        /// </summary>
        public readonly string AuthType;
        /// <summary>
        /// Category of the connection
        /// </summary>
        public readonly string? Category;
        /// <summary>
        /// The arm id of the workspace which created this connection
        /// </summary>
        public readonly string CreatedByWorkspaceArmId;
        /// <summary>
        /// Api key object for workspace connection credential.
        /// </summary>
        public readonly Outputs.WorkspaceConnectionApiKeyResponse? Credentials;
        public readonly string? ExpiryTime;
        /// <summary>
        /// whether this connection will be shared to all the project workspace under the hub
        /// </summary>
        public readonly bool? IsSharedToAll;
        public readonly object? Metadata;
        public readonly string? Target;

        [OutputConstructor]
        private ApiKeyAuthWorkspaceConnectionPropertiesResponse(
            string authType,

            string? category,

            string createdByWorkspaceArmId,

            Outputs.WorkspaceConnectionApiKeyResponse? credentials,

            string? expiryTime,

            bool? isSharedToAll,

            object? metadata,

            string? target)
        {
            AuthType = authType;
            Category = category;
            CreatedByWorkspaceArmId = createdByWorkspaceArmId;
            Credentials = credentials;
            ExpiryTime = expiryTime;
            IsSharedToAll = isSharedToAll;
            Metadata = metadata;
            Target = target;
        }
    }
}
