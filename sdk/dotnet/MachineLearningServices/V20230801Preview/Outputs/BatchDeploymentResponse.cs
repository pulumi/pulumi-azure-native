// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230801Preview.Outputs
{

    /// <summary>
    /// Batch inference settings per deployment.
    /// </summary>
    [OutputType]
    public sealed class BatchDeploymentResponse
    {
        /// <summary>
        /// Code configuration for the endpoint deployment.
        /// </summary>
        public readonly Outputs.CodeConfigurationResponse? CodeConfiguration;
        /// <summary>
        /// Compute target for batch inference operation.
        /// </summary>
        public readonly string? Compute;
        /// <summary>
        /// Properties relevant to different deployment types.
        /// </summary>
        public readonly Outputs.BatchPipelineComponentDeploymentConfigurationResponse? DeploymentConfiguration;
        /// <summary>
        /// Description of the endpoint deployment.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// ARM resource ID of the environment specification for the endpoint deployment.
        /// </summary>
        public readonly string? EnvironmentId;
        /// <summary>
        /// Environment variables configuration for the deployment.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EnvironmentVariables;
        /// <summary>
        /// Error threshold, if the error count for the entire input goes above this value,
        /// the batch inference will be aborted. Range is [-1, int.MaxValue].
        /// For FileDataset, this value is the count of file failures.
        /// For TabularDataset, this value is the count of record failures.
        /// If set to -1 (the lower bound), all failures during batch inference will be ignored.
        /// </summary>
        public readonly int? ErrorThreshold;
        /// <summary>
        /// Logging level for batch inference operation.
        /// </summary>
        public readonly string? LoggingLevel;
        /// <summary>
        /// Indicates maximum number of parallelism per instance.
        /// </summary>
        public readonly int? MaxConcurrencyPerInstance;
        /// <summary>
        /// Size of the mini-batch passed to each batch invocation.
        /// For FileDataset, this is the number of files per mini-batch.
        /// For TabularDataset, this is the size of the records in bytes, per mini-batch.
        /// </summary>
        public readonly double? MiniBatchSize;
        /// <summary>
        /// Reference to the model asset for the endpoint deployment.
        /// </summary>
        public readonly object? Model;
        /// <summary>
        /// Indicates how the output will be organized.
        /// </summary>
        public readonly string? OutputAction;
        /// <summary>
        /// Customized output file name for append_row output action.
        /// </summary>
        public readonly string? OutputFileName;
        /// <summary>
        /// Property dictionary. Properties can be added, but not removed or altered.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Provisioning state for the endpoint deployment.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Indicates compute configuration for the job.
        /// If not provided, will default to the defaults defined in ResourceConfiguration.
        /// </summary>
        public readonly Outputs.DeploymentResourceConfigurationResponse? Resources;
        /// <summary>
        /// Retry Settings for the batch inference operation.
        /// If not provided, will default to the defaults defined in BatchRetrySettings.
        /// </summary>
        public readonly Outputs.BatchRetrySettingsResponse? RetrySettings;

        [OutputConstructor]
        private BatchDeploymentResponse(
            Outputs.CodeConfigurationResponse? codeConfiguration,

            string? compute,

            Outputs.BatchPipelineComponentDeploymentConfigurationResponse? deploymentConfiguration,

            string? description,

            string? environmentId,

            ImmutableDictionary<string, string>? environmentVariables,

            int? errorThreshold,

            string? loggingLevel,

            int? maxConcurrencyPerInstance,

            double? miniBatchSize,

            object? model,

            string? outputAction,

            string? outputFileName,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            Outputs.DeploymentResourceConfigurationResponse? resources,

            Outputs.BatchRetrySettingsResponse? retrySettings)
        {
            CodeConfiguration = codeConfiguration;
            Compute = compute;
            DeploymentConfiguration = deploymentConfiguration;
            Description = description;
            EnvironmentId = environmentId;
            EnvironmentVariables = environmentVariables;
            ErrorThreshold = errorThreshold;
            LoggingLevel = loggingLevel;
            MaxConcurrencyPerInstance = maxConcurrencyPerInstance;
            MiniBatchSize = miniBatchSize;
            Model = model;
            OutputAction = outputAction;
            OutputFileName = outputFileName;
            Properties = properties;
            ProvisioningState = provisioningState;
            Resources = resources;
            RetrySettings = retrySettings;
        }
    }
}
