// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230801Preview.Outputs
{

    /// <summary>
    /// AKS properties
    /// </summary>
    [OutputType]
    public sealed class AKSSchemaResponseProperties
    {
        /// <summary>
        /// Number of agents
        /// </summary>
        public readonly int? AgentCount;
        /// <summary>
        /// Agent virtual machine size
        /// </summary>
        public readonly string? AgentVmSize;
        /// <summary>
        /// AKS networking configuration for vnet
        /// </summary>
        public readonly Outputs.AksNetworkingConfigurationResponse? AksNetworkingConfiguration;
        /// <summary>
        /// Cluster full qualified domain name
        /// </summary>
        public readonly string? ClusterFqdn;
        /// <summary>
        /// Intended usage of the cluster
        /// </summary>
        public readonly string? ClusterPurpose;
        /// <summary>
        /// Load Balancer Subnet
        /// </summary>
        public readonly string? LoadBalancerSubnet;
        /// <summary>
        /// Load Balancer Type
        /// </summary>
        public readonly string? LoadBalancerType;
        /// <summary>
        /// SSL configuration
        /// </summary>
        public readonly Outputs.SslConfigurationResponse? SslConfiguration;
        /// <summary>
        /// System services
        /// </summary>
        public readonly ImmutableArray<Outputs.SystemServiceResponse> SystemServices;

        [OutputConstructor]
        private AKSSchemaResponseProperties(
            int? agentCount,

            string? agentVmSize,

            Outputs.AksNetworkingConfigurationResponse? aksNetworkingConfiguration,

            string? clusterFqdn,

            string? clusterPurpose,

            string? loadBalancerSubnet,

            string? loadBalancerType,

            Outputs.SslConfigurationResponse? sslConfiguration,

            ImmutableArray<Outputs.SystemServiceResponse> systemServices)
        {
            AgentCount = agentCount;
            AgentVmSize = agentVmSize;
            AksNetworkingConfiguration = aksNetworkingConfiguration;
            ClusterFqdn = clusterFqdn;
            ClusterPurpose = clusterPurpose;
            LoadBalancerSubnet = loadBalancerSubnet;
            LoadBalancerType = loadBalancerType;
            SslConfiguration = sslConfiguration;
            SystemServices = systemServices;
        }
    }
}
