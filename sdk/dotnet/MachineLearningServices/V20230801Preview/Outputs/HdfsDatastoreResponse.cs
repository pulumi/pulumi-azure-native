// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230801Preview.Outputs
{

    [OutputType]
    public sealed class HdfsDatastoreResponse
    {
        /// <summary>
        /// [Required] Account credentials.
        /// </summary>
        public readonly object Credentials;
        /// <summary>
        /// Enum to determine the datastore contents type.
        /// Expected value is 'Hdfs'.
        /// </summary>
        public readonly string DatastoreType;
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The TLS cert of the HDFS server. Needs to be a base64 encoded string. Required if "Https" protocol is selected.
        /// </summary>
        public readonly string? HdfsServerCertificate;
        /// <summary>
        /// Intellectual Property details.
        /// </summary>
        public readonly Outputs.IntellectualPropertyResponse? IntellectualProperty;
        /// <summary>
        /// Readonly property to indicate if datastore is the workspace default datastore
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// [Required] IP Address or DNS HostName.
        /// </summary>
        public readonly string NameNodeAddress;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Protocol used to communicate with the storage account (Https/Http).
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private HdfsDatastoreResponse(
            object credentials,

            string datastoreType,

            string? description,

            string? hdfsServerCertificate,

            Outputs.IntellectualPropertyResponse? intellectualProperty,

            bool isDefault,

            string nameNodeAddress,

            ImmutableDictionary<string, string>? properties,

            string? protocol,

            ImmutableDictionary<string, string>? tags)
        {
            Credentials = credentials;
            DatastoreType = datastoreType;
            Description = description;
            HdfsServerCertificate = hdfsServerCertificate;
            IntellectualProperty = intellectualProperty;
            IsDefault = isDefault;
            NameNodeAddress = nameNodeAddress;
            Properties = properties;
            Protocol = protocol;
            Tags = tags;
        }
    }
}
