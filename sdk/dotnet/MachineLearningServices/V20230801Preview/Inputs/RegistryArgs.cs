// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230801Preview.Inputs
{

    /// <summary>
    /// Details of the Registry
    /// </summary>
    public sealed class RegistryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Discovery URL for the Registry
        /// </summary>
        [Input("discoveryUrl")]
        public Input<string>? DiscoveryUrl { get; set; }

        /// <summary>
        /// IntellectualPropertyPublisher for the registry
        /// </summary>
        [Input("intellectualPropertyPublisher")]
        public Input<string>? IntellectualPropertyPublisher { get; set; }

        /// <summary>
        /// ResourceId of the managed RG if the registry has system created resources
        /// </summary>
        [Input("managedResourceGroup")]
        public Input<Inputs.ArmResourceIdArgs>? ManagedResourceGroup { get; set; }

        /// <summary>
        /// MLFlow Registry URI for the Registry
        /// </summary>
        [Input("mlFlowRegistryUri")]
        public Input<string>? MlFlowRegistryUri { get; set; }

        /// <summary>
        /// Is the Registry accessible from the internet?
        /// Possible values: "Enabled" or "Disabled"
        /// </summary>
        [Input("publicNetworkAccess")]
        public Input<string>? PublicNetworkAccess { get; set; }

        [Input("regionDetails")]
        private InputList<Inputs.RegistryRegionArmDetailsArgs>? _regionDetails;

        /// <summary>
        /// Details of each region the registry is in
        /// </summary>
        public InputList<Inputs.RegistryRegionArmDetailsArgs> RegionDetails
        {
            get => _regionDetails ?? (_regionDetails = new InputList<Inputs.RegistryRegionArmDetailsArgs>());
            set => _regionDetails = value;
        }

        [Input("registryPrivateEndpointConnections")]
        private InputList<Inputs.RegistryPrivateEndpointConnectionArgs>? _registryPrivateEndpointConnections;

        /// <summary>
        /// Private endpoint connections info used for pending connections in private link portal
        /// </summary>
        public InputList<Inputs.RegistryPrivateEndpointConnectionArgs> RegistryPrivateEndpointConnections
        {
            get => _registryPrivateEndpointConnections ?? (_registryPrivateEndpointConnections = new InputList<Inputs.RegistryPrivateEndpointConnectionArgs>());
            set => _registryPrivateEndpointConnections = value;
        }

        public RegistryArgs()
        {
        }
        public static new RegistryArgs Empty => new RegistryArgs();
    }
}
