// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230801Preview.Inputs
{

    /// <summary>
    /// Regression task in AutoML Table vertical.
    /// </summary>
    public sealed class RegressionArgs : global::Pulumi.ResourceArgs
    {
        [Input("cvSplitColumnNames")]
        private InputList<string>? _cvSplitColumnNames;

        /// <summary>
        /// Columns to use for CVSplit data.
        /// </summary>
        public InputList<string> CvSplitColumnNames
        {
            get => _cvSplitColumnNames ?? (_cvSplitColumnNames = new InputList<string>());
            set => _cvSplitColumnNames = value;
        }

        /// <summary>
        /// Featurization inputs needed for AutoML job.
        /// </summary>
        [Input("featurizationSettings")]
        public Input<Inputs.TableVerticalFeaturizationSettingsArgs>? FeaturizationSettings { get; set; }

        /// <summary>
        /// Model/training parameters that will remain constant throughout training.
        /// </summary>
        [Input("fixedParameters")]
        public Input<Inputs.TableFixedParametersArgs>? FixedParameters { get; set; }

        /// <summary>
        /// Execution constraints for AutoMLJob.
        /// </summary>
        [Input("limitSettings")]
        public Input<Inputs.TableVerticalLimitSettingsArgs>? LimitSettings { get; set; }

        /// <summary>
        /// Log verbosity for the job.
        /// </summary>
        [Input("logVerbosity")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20230801Preview.LogVerbosity>? LogVerbosity { get; set; }

        /// <summary>
        /// Number of cross validation folds to be applied on training dataset
        /// when validation dataset is not provided.
        /// </summary>
        [Input("nCrossValidations")]
        public InputUnion<Inputs.AutoNCrossValidationsArgs, Inputs.CustomNCrossValidationsArgs>? NCrossValidations { get; set; }

        /// <summary>
        /// Primary metric for regression task.
        /// </summary>
        [Input("primaryMetric")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20230801Preview.RegressionPrimaryMetrics>? PrimaryMetric { get; set; }

        [Input("searchSpace")]
        private InputList<Inputs.TableParameterSubspaceArgs>? _searchSpace;

        /// <summary>
        /// Search space for sampling different combinations of models and their hyperparameters.
        /// </summary>
        public InputList<Inputs.TableParameterSubspaceArgs> SearchSpace
        {
            get => _searchSpace ?? (_searchSpace = new InputList<Inputs.TableParameterSubspaceArgs>());
            set => _searchSpace = value;
        }

        /// <summary>
        /// Settings for model sweeping and hyperparameter tuning.
        /// </summary>
        [Input("sweepSettings")]
        public Input<Inputs.TableSweepSettingsArgs>? SweepSettings { get; set; }

        /// <summary>
        /// Target column name: This is prediction values column.
        /// Also known as label column name in context of classification tasks.
        /// </summary>
        [Input("targetColumnName")]
        public Input<string>? TargetColumnName { get; set; }

        /// <summary>
        /// AutoMLJob Task type.
        /// Expected value is 'Regression'.
        /// </summary>
        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        /// <summary>
        /// Test data input.
        /// </summary>
        [Input("testData")]
        public Input<Inputs.MLTableJobInputArgs>? TestData { get; set; }

        /// <summary>
        /// The fraction of test dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Input("testDataSize")]
        public Input<double>? TestDataSize { get; set; }

        /// <summary>
        /// [Required] Training data input.
        /// </summary>
        [Input("trainingData", required: true)]
        public Input<Inputs.MLTableJobInputArgs> TrainingData { get; set; } = null!;

        /// <summary>
        /// Inputs for training phase for an AutoML Job.
        /// </summary>
        [Input("trainingSettings")]
        public Input<Inputs.RegressionTrainingSettingsArgs>? TrainingSettings { get; set; }

        /// <summary>
        /// Validation data inputs.
        /// </summary>
        [Input("validationData")]
        public Input<Inputs.MLTableJobInputArgs>? ValidationData { get; set; }

        /// <summary>
        /// The fraction of training dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Input("validationDataSize")]
        public Input<double>? ValidationDataSize { get; set; }

        /// <summary>
        /// The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.
        /// </summary>
        [Input("weightColumnName")]
        public Input<string>? WeightColumnName { get; set; }

        public RegressionArgs()
        {
            LogVerbosity = "Info";
            PrimaryMetric = "NormalizedRootMeanSquaredError";
        }
        public static new RegressionArgs Empty => new RegressionArgs();
    }
}
