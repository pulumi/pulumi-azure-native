// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20210301Preview.Outputs
{

    /// <summary>
    /// Datastore definition.
    /// </summary>
    [OutputType]
    public sealed class DatastorePropertiesResponse
    {
        /// <summary>
        /// [Required] Reference to the datastore storage contents.
        /// </summary>
        public readonly object Contents;
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Whether the service has validated access to the datastore with the provided credentials.
        /// </summary>
        public readonly bool HasBeenValidated;
        /// <summary>
        /// Whether this datastore is the default for the workspace.
        /// </summary>
        public readonly bool? IsDefault;
        /// <summary>
        /// Information about the datastore origin, if linked.
        /// </summary>
        public readonly Outputs.LinkedInfoResponse? LinkedInfo;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private DatastorePropertiesResponse(
            object contents,

            string? description,

            bool hasBeenValidated,

            bool? isDefault,

            Outputs.LinkedInfoResponse? linkedInfo,

            ImmutableDictionary<string, string>? properties,

            ImmutableDictionary<string, string>? tags)
        {
            Contents = contents;
            Description = description;
            HasBeenValidated = hasBeenValidated;
            IsDefault = isDefault;
            LinkedInfo = linkedInfo;
            Properties = properties;
            Tags = tags;
        }
    }
}
