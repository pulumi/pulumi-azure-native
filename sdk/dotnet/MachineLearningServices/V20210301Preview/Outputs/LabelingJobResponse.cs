// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20210301Preview.Outputs
{

    /// <summary>
    /// Labeling job definition
    /// </summary>
    [OutputType]
    public sealed class LabelingJobResponse
    {
        /// <summary>
        /// Created time of the job in UTC timezone.
        /// </summary>
        public readonly string CreatedTimeUtc;
        /// <summary>
        /// Configuration of dataset used in the job.
        /// </summary>
        public readonly Outputs.LabelingDatasetConfigurationResponse? DatasetConfiguration;
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// List of JobEndpoints.
        /// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.JobEndpointResponse> InteractionEndpoints;
        /// <summary>
        /// Labeling instructions of the job.
        /// </summary>
        public readonly Outputs.LabelingJobInstructionsResponse? JobInstructions;
        /// <summary>
        /// [Required] Specifies the type of job. This field should always be set to "Labeling".
        /// </summary>
        public readonly string JobType;
        /// <summary>
        /// Label categories of the job.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.LabelCategoryResponse>? LabelCategories;
        /// <summary>
        /// Media type specific properties in the job.
        /// </summary>
        public readonly Union<Outputs.LabelingJobImagePropertiesResponse, Outputs.LabelingJobTextPropertiesResponse>? LabelingJobMediaProperties;
        /// <summary>
        /// Configuration of MLAssist feature in the job.
        /// </summary>
        public readonly Outputs.MLAssistConfigurationResponse? MlAssistConfiguration;
        /// <summary>
        /// Progress metrics of the job.
        /// </summary>
        public readonly Outputs.ProgressMetricsResponse ProgressMetrics;
        /// <summary>
        /// Internal id of the job(Previously called project).
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Specifies the labeling job provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Status of the job.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Status messages of the job.
        /// </summary>
        public readonly ImmutableArray<Outputs.StatusMessageResponse> StatusMessages;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private LabelingJobResponse(
            string createdTimeUtc,

            Outputs.LabelingDatasetConfigurationResponse? datasetConfiguration,

            string? description,

            ImmutableDictionary<string, Outputs.JobEndpointResponse> interactionEndpoints,

            Outputs.LabelingJobInstructionsResponse? jobInstructions,

            string jobType,

            ImmutableDictionary<string, Outputs.LabelCategoryResponse>? labelCategories,

            Union<Outputs.LabelingJobImagePropertiesResponse, Outputs.LabelingJobTextPropertiesResponse>? labelingJobMediaProperties,

            Outputs.MLAssistConfigurationResponse? mlAssistConfiguration,

            Outputs.ProgressMetricsResponse progressMetrics,

            string projectId,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            string status,

            ImmutableArray<Outputs.StatusMessageResponse> statusMessages,

            ImmutableDictionary<string, string>? tags)
        {
            CreatedTimeUtc = createdTimeUtc;
            DatasetConfiguration = datasetConfiguration;
            Description = description;
            InteractionEndpoints = interactionEndpoints;
            JobInstructions = jobInstructions;
            JobType = jobType;
            LabelCategories = labelCategories;
            LabelingJobMediaProperties = labelingJobMediaProperties;
            MlAssistConfiguration = mlAssistConfiguration;
            ProgressMetrics = progressMetrics;
            ProjectId = projectId;
            Properties = properties;
            ProvisioningState = provisioningState;
            Status = status;
            StatusMessages = statusMessages;
            Tags = tags;
        }
    }
}
