// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20210301Preview.Inputs
{

    /// <summary>
    /// Command job definition.
    /// </summary>
    public sealed class CommandJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARM resource ID of the code asset.
        /// </summary>
        [Input("codeId")]
        public Input<string>? CodeId { get; set; }

        /// <summary>
        /// [Required] The command to execute on startup of the job. eg. "python train.py"
        /// </summary>
        [Input("command", required: true)]
        public Input<string> Command { get; set; } = null!;

        /// <summary>
        /// [Required] Compute binding for the job.
        /// </summary>
        [Input("compute", required: true)]
        public Input<Inputs.ComputeConfigurationArgs> Compute { get; set; } = null!;

        /// <summary>
        /// The asset description text.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
        /// </summary>
        [Input("distribution")]
        public object? Distribution { get; set; }

        /// <summary>
        /// The ARM resource ID of the Environment specification for the job.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// Environment variables included in the job.
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
        /// </summary>
        [Input("experimentName")]
        public Input<string>? ExperimentName { get; set; }

        /// <summary>
        /// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
        /// Defaults to AmlToken if null.
        /// </summary>
        [Input("identity")]
        public InputUnion<Inputs.AmlTokenArgs, Inputs.ManagedIdentityArgs>? Identity { get; set; }

        [Input("inputDataBindings")]
        private InputMap<Inputs.InputDataBindingArgs>? _inputDataBindings;

        /// <summary>
        /// Mapping of input data bindings used in the job.
        /// </summary>
        public InputMap<Inputs.InputDataBindingArgs> InputDataBindings
        {
            get => _inputDataBindings ?? (_inputDataBindings = new InputMap<Inputs.InputDataBindingArgs>());
            set => _inputDataBindings = value;
        }

        /// <summary>
        /// Enum to determine the type of job.
        /// Expected value is 'Command'.
        /// </summary>
        [Input("jobType", required: true)]
        public Input<string> JobType { get; set; } = null!;

        [Input("outputDataBindings")]
        private InputMap<Inputs.OutputDataBindingArgs>? _outputDataBindings;

        /// <summary>
        /// Mapping of output data bindings used in the job.
        /// </summary>
        public InputMap<Inputs.OutputDataBindingArgs> OutputDataBindings
        {
            get => _outputDataBindings ?? (_outputDataBindings = new InputMap<Inputs.OutputDataBindingArgs>());
            set => _outputDataBindings = value;
        }

        /// <summary>
        /// Job priority for scheduling policy. Only applies to AMLCompute.
        /// Private preview feature and only available to users on the allow list.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
        /// </summary>
        [Input("timeout")]
        public Input<string>? Timeout { get; set; }

        public CommandJobArgs()
        {
        }
        public static new CommandJobArgs Empty => new CommandJobArgs();
    }
}
