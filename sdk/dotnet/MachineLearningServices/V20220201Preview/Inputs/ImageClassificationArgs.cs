// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20220201Preview.Inputs
{

    /// <summary>
    /// Image Classification. Multi-class image classification is used when an image is classified with only a single label
    /// from a set of classes - e.g. each image is classified as either an image of a 'cat' or a 'dog' or a 'duck'.
    /// </summary>
    public sealed class ImageClassificationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Required] Collection of registered Tabular Dataset Ids and other data settings required for training and validating models.
        /// </summary>
        [Input("dataSettings", required: true)]
        public Input<Inputs.ImageVerticalDataSettingsArgs> DataSettings { get; set; } = null!;

        /// <summary>
        /// [Required] Limit settings for the AutoML job.
        /// </summary>
        [Input("limitSettings", required: true)]
        public Input<Inputs.ImageLimitSettingsArgs> LimitSettings { get; set; } = null!;

        /// <summary>
        /// Log verbosity for the job.
        /// </summary>
        [Input("logVerbosity")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20220201Preview.LogVerbosity>? LogVerbosity { get; set; }

        /// <summary>
        /// Settings used for training the model.
        /// </summary>
        [Input("modelSettings")]
        public Input<Inputs.ImageModelSettingsClassificationArgs>? ModelSettings { get; set; }

        /// <summary>
        /// Primary metric to optimize for this task.
        /// </summary>
        [Input("primaryMetric")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20220201Preview.ClassificationPrimaryMetrics>? PrimaryMetric { get; set; }

        [Input("searchSpace")]
        private InputList<Inputs.ImageModelDistributionSettingsClassificationArgs>? _searchSpace;

        /// <summary>
        /// Search space for sampling different combinations of models and their hyperparameters.
        /// </summary>
        public InputList<Inputs.ImageModelDistributionSettingsClassificationArgs> SearchSpace
        {
            get => _searchSpace ?? (_searchSpace = new InputList<Inputs.ImageModelDistributionSettingsClassificationArgs>());
            set => _searchSpace = value;
        }

        /// <summary>
        /// Model sweeping and hyperparameter sweeping related settings.
        /// </summary>
        [Input("sweepSettings")]
        public Input<Inputs.ImageSweepSettingsArgs>? SweepSettings { get; set; }

        /// <summary>
        /// AutoMLJob Task type.
        /// Expected value is 'ImageClassification'.
        /// </summary>
        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        public ImageClassificationArgs()
        {
            LogVerbosity = "Info";
            PrimaryMetric = "Accuracy";
        }
    }
}
