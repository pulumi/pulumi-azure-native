// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20220201Preview.Inputs
{

    /// <summary>
    /// Validation settings for AutoML Table vertical tasks - Classification/Regression/Forecasting.
    /// </summary>
    public sealed class TableVerticalValidationDataSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("cvSplitColumnNames")]
        private InputList<string>? _cvSplitColumnNames;

        /// <summary>
        /// Columns to use for CVSplit data.
        /// </summary>
        public InputList<string> CvSplitColumnNames
        {
            get => _cvSplitColumnNames ?? (_cvSplitColumnNames = new InputList<string>());
            set => _cvSplitColumnNames = value;
        }

        /// <summary>
        /// Validation data MLTable.
        /// </summary>
        [Input("data")]
        public Input<Inputs.MLTableJobInputArgs>? Data { get; set; }

        /// <summary>
        /// Number of cross validation folds to be applied on training dataset
        /// when validation dataset is not provided.
        /// </summary>
        [Input("nCrossValidations")]
        public InputUnion<Inputs.AutoNCrossValidationsArgs, Inputs.CustomNCrossValidationsArgs>? NCrossValidations { get; set; }

        /// <summary>
        /// The fraction of training dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Input("validationDataSize")]
        public Input<double>? ValidationDataSize { get; set; }

        public TableVerticalValidationDataSettingsArgs()
        {
        }
        public static new TableVerticalValidationDataSettingsArgs Empty => new TableVerticalValidationDataSettingsArgs();
    }
}
