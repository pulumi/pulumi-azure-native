// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20220201Preview.Inputs
{

    /// <summary>
    /// Azure Data Lake Gen1 datastore configuration.
    /// </summary>
    public sealed class AzureDataLakeGen1DatastoreArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Required] Account credentials.
        /// </summary>
        [Input("credentials", required: true)]
        public object Credentials { get; set; } = null!;

        /// <summary>
        /// Enum to determine the datastore contents type.
        /// Expected value is 'AzureDataLakeGen1'.
        /// </summary>
        [Input("datastoreType", required: true)]
        public Input<string> DatastoreType { get; set; } = null!;

        /// <summary>
        /// The asset description text.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        /// <summary>
        /// Indicates which identity to use to authenticate service data access to customer's storage.
        /// </summary>
        [Input("serviceDataAccessAuthIdentity")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20220201Preview.ServiceDataAccessAuthIdentity>? ServiceDataAccessAuthIdentity { get; set; }

        /// <summary>
        /// [Required] Azure Data Lake store name.
        /// </summary>
        [Input("storeName", required: true)]
        public Input<string> StoreName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AzureDataLakeGen1DatastoreArgs()
        {
            ServiceDataAccessAuthIdentity = "None";
        }
        public static new AzureDataLakeGen1DatastoreArgs Empty => new AzureDataLakeGen1DatastoreArgs();
    }
}
