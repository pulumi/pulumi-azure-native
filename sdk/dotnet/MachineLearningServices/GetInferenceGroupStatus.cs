// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices
{
    public static class GetInferenceGroupStatus
    {
        /// <summary>
        /// 
        /// Azure REST API version: 2023-08-01-preview.
        /// 
        /// Other available API versions: 2024-01-01-preview, 2024-04-01-preview, 2024-10-01-preview.
        /// </summary>
        public static Task<GetInferenceGroupStatusResult> InvokeAsync(GetInferenceGroupStatusArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInferenceGroupStatusResult>("azure-native:machinelearningservices:getInferenceGroupStatus", args ?? new GetInferenceGroupStatusArgs(), options.WithDefaults());

        /// <summary>
        /// 
        /// Azure REST API version: 2023-08-01-preview.
        /// 
        /// Other available API versions: 2024-01-01-preview, 2024-04-01-preview, 2024-10-01-preview.
        /// </summary>
        public static Output<GetInferenceGroupStatusResult> Invoke(GetInferenceGroupStatusInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInferenceGroupStatusResult>("azure-native:machinelearningservices:getInferenceGroupStatus", args ?? new GetInferenceGroupStatusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInferenceGroupStatusArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// InferenceGroup name.
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        /// <summary>
        /// InferencePool name.
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetInferenceGroupStatusArgs()
        {
        }
        public static new GetInferenceGroupStatusArgs Empty => new GetInferenceGroupStatusArgs();
    }

    public sealed class GetInferenceGroupStatusInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// InferenceGroup name.
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// InferencePool name.
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetInferenceGroupStatusInvokeArgs()
        {
        }
        public static new GetInferenceGroupStatusInvokeArgs Empty => new GetInferenceGroupStatusInvokeArgs();
    }


    [OutputType]
    public sealed class GetInferenceGroupStatusResult
    {
        /// <summary>
        /// Gets or sets the actual capacity info for the group.
        /// </summary>
        public readonly Outputs.ActualCapacityInfoResponse? ActualCapacityInfo;
        /// <summary>
        /// Gets or sets capacity used from the pool's reserved capacity.
        /// </summary>
        public readonly int? BonusExtraCapacity;
        /// <summary>
        /// Gets or sets the actual number of endpoints in the group.
        /// </summary>
        public readonly int? EndpointCount;
        /// <summary>
        /// Gets or sets the request number of instances for the group.
        /// </summary>
        public readonly int? RequestedCapacity;

        [OutputConstructor]
        private GetInferenceGroupStatusResult(
            Outputs.ActualCapacityInfoResponse? actualCapacityInfo,

            int? bonusExtraCapacity,

            int? endpointCount,

            int? requestedCapacity)
        {
            ActualCapacityInfo = actualCapacityInfo;
            BonusExtraCapacity = bonusExtraCapacity;
            EndpointCount = endpointCount;
            RequestedCapacity = requestedCapacity;
        }
    }
}
