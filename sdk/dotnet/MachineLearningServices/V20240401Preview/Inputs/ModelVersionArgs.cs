// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240401Preview.Inputs
{

    /// <summary>
    /// Model asset version details.
    /// </summary>
    public sealed class ModelVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the lifecycle setting of managed data asset.
        /// </summary>
        [Input("autoDeleteSetting")]
        public Input<Inputs.AutoDeleteSettingArgs>? AutoDeleteSetting { get; set; }

        /// <summary>
        /// The asset description text.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("flavors")]
        private InputMap<Inputs.FlavorDataArgs>? _flavors;

        /// <summary>
        /// Mapping of model flavors to their properties.
        /// </summary>
        public InputMap<Inputs.FlavorDataArgs> Flavors
        {
            get => _flavors ?? (_flavors = new InputMap<Inputs.FlavorDataArgs>());
            set => _flavors = value;
        }

        /// <summary>
        /// Intellectual Property details. Used if model is an Intellectual Property.
        /// </summary>
        [Input("intellectualProperty")]
        public Input<Inputs.IntellectualPropertyArgs>? IntellectualProperty { get; set; }

        /// <summary>
        /// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
        /// </summary>
        [Input("isAnonymous")]
        public Input<bool>? IsAnonymous { get; set; }

        /// <summary>
        /// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
        /// </summary>
        [Input("isArchived")]
        public Input<bool>? IsArchived { get; set; }

        /// <summary>
        /// Name of the training job which produced this model
        /// </summary>
        [Input("jobName")]
        public Input<string>? JobName { get; set; }

        /// <summary>
        /// The storage format for this entity. Used for NCD.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// The URI path to the model contents.
        /// </summary>
        [Input("modelUri")]
        public Input<string>? ModelUri { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        /// <summary>
        /// Stage in the model lifecycle assigned to this model
        /// </summary>
        [Input("stage")]
        public Input<string>? Stage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ModelVersionArgs()
        {
            IsAnonymous = false;
            IsArchived = false;
        }
        public static new ModelVersionArgs Empty => new ModelVersionArgs();
    }
}
