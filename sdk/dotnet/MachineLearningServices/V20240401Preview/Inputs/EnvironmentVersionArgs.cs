// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240401Preview.Inputs
{

    /// <summary>
    /// Environment version details.
    /// </summary>
    public sealed class EnvironmentVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the lifecycle setting of managed data asset.
        /// </summary>
        [Input("autoDeleteSetting")]
        public Input<Inputs.AutoDeleteSettingArgs>? AutoDeleteSetting { get; set; }

        /// <summary>
        /// Defines if image needs to be rebuilt based on base image changes.
        /// </summary>
        [Input("autoRebuild")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20240401Preview.AutoRebuildSetting>? AutoRebuild { get; set; }

        /// <summary>
        /// Configuration settings for Docker build context.
        /// </summary>
        [Input("build")]
        public Input<Inputs.BuildContextArgs>? Build { get; set; }

        /// <summary>
        /// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
        /// &lt;see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" /&gt;
        /// </summary>
        [Input("condaFile")]
        public Input<string>? CondaFile { get; set; }

        /// <summary>
        /// The asset description text.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the image that will be used for the environment.
        /// &lt;seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" /&gt;
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Defines configuration specific to inference.
        /// </summary>
        [Input("inferenceConfig")]
        public Input<Inputs.InferenceContainerPropertiesArgs>? InferenceConfig { get; set; }

        /// <summary>
        /// Intellectual Property details. Used if environment is an Intellectual Property.
        /// </summary>
        [Input("intellectualProperty")]
        public Input<Inputs.IntellectualPropertyArgs>? IntellectualProperty { get; set; }

        /// <summary>
        /// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
        /// </summary>
        [Input("isAnonymous")]
        public Input<bool>? IsAnonymous { get; set; }

        /// <summary>
        /// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
        /// </summary>
        [Input("isArchived")]
        public Input<bool>? IsArchived { get; set; }

        /// <summary>
        /// The OS type of the environment.
        /// </summary>
        [Input("osType")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20240401Preview.OperatingSystemType>? OsType { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        /// <summary>
        /// Stage in the environment lifecycle assigned to this environment
        /// </summary>
        [Input("stage")]
        public Input<string>? Stage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public EnvironmentVersionArgs()
        {
            AutoRebuild = "Disabled";
            IsAnonymous = false;
            IsArchived = false;
            OsType = "Linux";
        }
        public static new EnvironmentVersionArgs Empty => new EnvironmentVersionArgs();
    }
}
