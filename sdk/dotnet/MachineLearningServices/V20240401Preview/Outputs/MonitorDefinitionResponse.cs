// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240401Preview.Outputs
{

    [OutputType]
    public sealed class MonitorDefinitionResponse
    {
        /// <summary>
        /// The monitor's notification settings.
        /// </summary>
        public readonly Outputs.MonitorNotificationSettingsResponse? AlertNotificationSettings;
        /// <summary>
        /// [Required] The ARM resource ID of the compute resource to run the monitoring job on.
        /// </summary>
        public readonly Outputs.MonitorServerlessSparkComputeResponse ComputeConfiguration;
        /// <summary>
        /// The ARM resource ID of either the model or deployment targeted by this monitor.
        /// </summary>
        public readonly Outputs.MonitoringTargetResponse? MonitoringTarget;
        /// <summary>
        /// [Required] The signals to monitor.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Signals;

        [OutputConstructor]
        private MonitorDefinitionResponse(
            Outputs.MonitorNotificationSettingsResponse? alertNotificationSettings,

            Outputs.MonitorServerlessSparkComputeResponse computeConfiguration,

            Outputs.MonitoringTargetResponse? monitoringTarget,

            ImmutableDictionary<string, object> signals)
        {
            AlertNotificationSettings = alertNotificationSettings;
            ComputeConfiguration = computeConfiguration;
            MonitoringTarget = monitoringTarget;
            Signals = signals;
        }
    }
}
