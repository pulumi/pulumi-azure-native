// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240401Preview
{
    public static class GetInferencePoolStatus
    {
        public static Task<GetInferencePoolStatusResult> InvokeAsync(GetInferencePoolStatusArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInferencePoolStatusResult>("azure-native:machinelearningservices/v20240401preview:getInferencePoolStatus", args ?? new GetInferencePoolStatusArgs(), options.WithDefaults());

        public static Output<GetInferencePoolStatusResult> Invoke(GetInferencePoolStatusInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInferencePoolStatusResult>("azure-native:machinelearningservices/v20240401preview:getInferencePoolStatus", args ?? new GetInferencePoolStatusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInferencePoolStatusArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of InferencePool
        /// </summary>
        [Input("inferencePoolName", required: true)]
        public string InferencePoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetInferencePoolStatusArgs()
        {
        }
        public static new GetInferencePoolStatusArgs Empty => new GetInferencePoolStatusArgs();
    }

    public sealed class GetInferencePoolStatusInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of InferencePool
        /// </summary>
        [Input("inferencePoolName", required: true)]
        public Input<string> InferencePoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetInferencePoolStatusInvokeArgs()
        {
        }
        public static new GetInferencePoolStatusInvokeArgs Empty => new GetInferencePoolStatusInvokeArgs();
    }


    [OutputType]
    public sealed class GetInferencePoolStatusResult
    {
        /// <summary>
        /// Gets or sets the actual number of instances in the pool.
        /// </summary>
        public readonly int? ActualCapacity;
        /// <summary>
        /// Gets or sets the actual number of groups in the pool.
        /// </summary>
        public readonly int? GroupCount;
        /// <summary>
        /// Gets or sets the requested number of instances for the pool.
        /// </summary>
        public readonly int? RequestedCapacity;
        /// <summary>
        /// Gets or sets the number of instances in the pool reserved by the system.
        /// </summary>
        public readonly int? ReservedCapacity;

        [OutputConstructor]
        private GetInferencePoolStatusResult(
            int? actualCapacity,

            int? groupCount,

            int? requestedCapacity,

            int? reservedCapacity)
        {
            ActualCapacity = actualCapacity;
            GroupCount = groupCount;
            RequestedCapacity = requestedCapacity;
            ReservedCapacity = reservedCapacity;
        }
    }
}
