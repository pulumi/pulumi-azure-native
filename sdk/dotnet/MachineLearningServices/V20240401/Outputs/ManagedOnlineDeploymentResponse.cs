// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20240401.Outputs
{

    /// <summary>
    /// Properties specific to a ManagedOnlineDeployment.
    /// </summary>
    [OutputType]
    public sealed class ManagedOnlineDeploymentResponse
    {
        /// <summary>
        /// If true, enables Application Insights logging.
        /// </summary>
        public readonly bool? AppInsightsEnabled;
        /// <summary>
        /// Code configuration for the endpoint deployment.
        /// </summary>
        public readonly Outputs.CodeConfigurationResponse? CodeConfiguration;
        /// <summary>
        /// The mdc configuration, we disable mdc when it's null.
        /// </summary>
        public readonly Outputs.DataCollectorResponse? DataCollector;
        /// <summary>
        /// Description of the endpoint deployment.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled.
        /// </summary>
        public readonly string? EgressPublicNetworkAccess;
        /// <summary>
        /// Enum to determine endpoint compute type.
        /// Expected value is 'Managed'.
        /// </summary>
        public readonly string EndpointComputeType;
        /// <summary>
        /// ARM resource ID or AssetId of the environment specification for the endpoint deployment.
        /// </summary>
        public readonly string? EnvironmentId;
        /// <summary>
        /// Environment variables configuration for the deployment.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EnvironmentVariables;
        /// <summary>
        /// Compute instance type.
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// Liveness probe monitors the health of the container regularly.
        /// </summary>
        public readonly Outputs.ProbeSettingsResponse? LivenessProbe;
        /// <summary>
        /// The URI path to the model.
        /// </summary>
        public readonly string? Model;
        /// <summary>
        /// The path to mount the model in custom container.
        /// </summary>
        public readonly string? ModelMountPath;
        /// <summary>
        /// Property dictionary. Properties can be added, but not removed or altered.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Provisioning state for the endpoint deployment.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe.
        /// </summary>
        public readonly Outputs.ProbeSettingsResponse? ReadinessProbe;
        /// <summary>
        /// Request settings for the deployment.
        /// </summary>
        public readonly Outputs.OnlineRequestSettingsResponse? RequestSettings;
        /// <summary>
        /// Scale settings for the deployment.
        /// If it is null or not provided,
        /// it defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment
        /// and to DefaultScaleSettings for ManagedOnlineDeployment.
        /// </summary>
        public readonly Union<Outputs.DefaultScaleSettingsResponse, Outputs.TargetUtilizationScaleSettingsResponse>? ScaleSettings;

        [OutputConstructor]
        private ManagedOnlineDeploymentResponse(
            bool? appInsightsEnabled,

            Outputs.CodeConfigurationResponse? codeConfiguration,

            Outputs.DataCollectorResponse? dataCollector,

            string? description,

            string? egressPublicNetworkAccess,

            string endpointComputeType,

            string? environmentId,

            ImmutableDictionary<string, string>? environmentVariables,

            string? instanceType,

            Outputs.ProbeSettingsResponse? livenessProbe,

            string? model,

            string? modelMountPath,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            Outputs.ProbeSettingsResponse? readinessProbe,

            Outputs.OnlineRequestSettingsResponse? requestSettings,

            Union<Outputs.DefaultScaleSettingsResponse, Outputs.TargetUtilizationScaleSettingsResponse>? scaleSettings)
        {
            AppInsightsEnabled = appInsightsEnabled;
            CodeConfiguration = codeConfiguration;
            DataCollector = dataCollector;
            Description = description;
            EgressPublicNetworkAccess = egressPublicNetworkAccess;
            EndpointComputeType = endpointComputeType;
            EnvironmentId = environmentId;
            EnvironmentVariables = environmentVariables;
            InstanceType = instanceType;
            LivenessProbe = livenessProbe;
            Model = model;
            ModelMountPath = modelMountPath;
            Properties = properties;
            ProvisioningState = provisioningState;
            ReadinessProbe = readinessProbe;
            RequestSettings = requestSettings;
            ScaleSettings = scaleSettings;
        }
    }
}
