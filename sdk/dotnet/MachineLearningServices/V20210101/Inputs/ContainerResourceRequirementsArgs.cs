// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearningServices.V20210101.Inputs
{

    /// <summary>
    /// The resource requirements for the container (cpu and memory).
    /// </summary>
    public sealed class ContainerResourceRequirementsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The minimum amount of CPU cores to be used by the container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        /// </summary>
        [Input("cpu")]
        public Input<double>? Cpu { get; set; }

        /// <summary>
        /// The maximum amount of CPU cores allowed to be used by the container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        /// </summary>
        [Input("cpuLimit")]
        public Input<double>? CpuLimit { get; set; }

        /// <summary>
        /// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
        /// </summary>
        [Input("fpga")]
        public Input<int>? Fpga { get; set; }

        /// <summary>
        /// The number of GPU cores in the container.
        /// </summary>
        [Input("gpu")]
        public Input<int>? Gpu { get; set; }

        /// <summary>
        /// The minimum amount of memory (in GB) to be used by the container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        /// </summary>
        [Input("memoryInGB")]
        public Input<double>? MemoryInGB { get; set; }

        /// <summary>
        /// The maximum amount of memory (in GB) allowed to be used by the container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        /// </summary>
        [Input("memoryInGBLimit")]
        public Input<double>? MemoryInGBLimit { get; set; }

        public ContainerResourceRequirementsArgs()
        {
        }
    }
}
