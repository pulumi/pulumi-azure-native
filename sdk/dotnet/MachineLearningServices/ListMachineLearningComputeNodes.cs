// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices
{
    public static class ListMachineLearningComputeNodes
    {
        /// <summary>
        /// Get the details (e.g IP address, port etc) of all the compute nodes in the compute.
        /// API Version: 2021-01-01.
        /// </summary>
        public static Task<ListMachineLearningComputeNodesResult> InvokeAsync(ListMachineLearningComputeNodesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListMachineLearningComputeNodesResult>("azure-native:machinelearningservices:listMachineLearningComputeNodes", args ?? new ListMachineLearningComputeNodesArgs(), options.WithDefaults());

        /// <summary>
        /// Get the details (e.g IP address, port etc) of all the compute nodes in the compute.
        /// API Version: 2021-01-01.
        /// </summary>
        public static Output<ListMachineLearningComputeNodesResult> Invoke(ListMachineLearningComputeNodesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListMachineLearningComputeNodesResult>("azure-native:machinelearningservices:listMachineLearningComputeNodes", args ?? new ListMachineLearningComputeNodesInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListMachineLearningComputeNodesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Machine Learning compute.
        /// </summary>
        [Input("computeName", required: true)]
        public string ComputeName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group in which workspace is located.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public ListMachineLearningComputeNodesArgs()
        {
        }
        public static new ListMachineLearningComputeNodesArgs Empty => new ListMachineLearningComputeNodesArgs();
    }

    public sealed class ListMachineLearningComputeNodesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Machine Learning compute.
        /// </summary>
        [Input("computeName", required: true)]
        public Input<string> ComputeName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group in which workspace is located.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public ListMachineLearningComputeNodesInvokeArgs()
        {
        }
        public static new ListMachineLearningComputeNodesInvokeArgs Empty => new ListMachineLearningComputeNodesInvokeArgs();
    }


    [OutputType]
    public sealed class ListMachineLearningComputeNodesResult
    {
        /// <summary>
        /// The type of compute
        /// Expected value is 'AmlCompute'.
        /// </summary>
        public readonly string ComputeType;
        /// <summary>
        /// The continuation token.
        /// </summary>
        public readonly string NextLink;
        /// <summary>
        /// The collection of returned AmlCompute nodes details.
        /// </summary>
        public readonly ImmutableArray<Outputs.AmlComputeNodeInformationResponse> Nodes;

        [OutputConstructor]
        private ListMachineLearningComputeNodesResult(
            string computeType,

            string nextLink,

            ImmutableArray<Outputs.AmlComputeNodeInformationResponse> nodes)
        {
            ComputeType = computeType;
            NextLink = nextLink;
            Nodes = nodes;
        }
    }
}
