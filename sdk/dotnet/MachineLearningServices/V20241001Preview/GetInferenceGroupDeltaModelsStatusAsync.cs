// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001Preview
{
    public static class GetInferenceGroupDeltaModelsStatusAsync
    {
        /// <summary>
        /// Contract returning to user the delta models.
        /// </summary>
        public static Task<GetInferenceGroupDeltaModelsStatusAsyncResult> InvokeAsync(GetInferenceGroupDeltaModelsStatusAsyncArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInferenceGroupDeltaModelsStatusAsyncResult>("azure-native:machinelearningservices/v20241001preview:getInferenceGroupDeltaModelsStatusAsync", args ?? new GetInferenceGroupDeltaModelsStatusAsyncArgs(), options.WithDefaults());

        /// <summary>
        /// Contract returning to user the delta models.
        /// </summary>
        public static Output<GetInferenceGroupDeltaModelsStatusAsyncResult> Invoke(GetInferenceGroupDeltaModelsStatusAsyncInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInferenceGroupDeltaModelsStatusAsyncResult>("azure-native:machinelearningservices/v20241001preview:getInferenceGroupDeltaModelsStatusAsync", args ?? new GetInferenceGroupDeltaModelsStatusAsyncInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInferenceGroupDeltaModelsStatusAsyncArgs : global::Pulumi.InvokeArgs
    {
        [Input("deltaModels")]
        private List<string>? _deltaModels;

        /// <summary>
        /// Gets or sets collection of delta models to retrieve status for.
        /// </summary>
        public List<string> DeltaModels
        {
            get => _deltaModels ?? (_deltaModels = new List<string>());
            set => _deltaModels = value;
        }

        /// <summary>
        /// InferenceGroup name.
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        /// <summary>
        /// InferencePool name.
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Gets or sets target base model.
        /// </summary>
        [Input("targetBaseModel")]
        public string? TargetBaseModel { get; set; }

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetInferenceGroupDeltaModelsStatusAsyncArgs()
        {
        }
        public static new GetInferenceGroupDeltaModelsStatusAsyncArgs Empty => new GetInferenceGroupDeltaModelsStatusAsyncArgs();
    }

    public sealed class GetInferenceGroupDeltaModelsStatusAsyncInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("deltaModels")]
        private InputList<string>? _deltaModels;

        /// <summary>
        /// Gets or sets collection of delta models to retrieve status for.
        /// </summary>
        public InputList<string> DeltaModels
        {
            get => _deltaModels ?? (_deltaModels = new InputList<string>());
            set => _deltaModels = value;
        }

        /// <summary>
        /// InferenceGroup name.
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// InferencePool name.
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Gets or sets target base model.
        /// </summary>
        [Input("targetBaseModel")]
        public Input<string>? TargetBaseModel { get; set; }

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetInferenceGroupDeltaModelsStatusAsyncInvokeArgs()
        {
        }
        public static new GetInferenceGroupDeltaModelsStatusAsyncInvokeArgs Empty => new GetInferenceGroupDeltaModelsStatusAsyncInvokeArgs();
    }


    [OutputType]
    public sealed class GetInferenceGroupDeltaModelsStatusAsyncResult
    {
        /// <summary>
        /// Gets or sets actual instance count.
        /// </summary>
        public readonly int? ActualInstanceCount;
        /// <summary>
        /// Gets or sets dictionary representing modelID and its current state.
        /// </summary>
        public readonly ImmutableDictionary<string, ImmutableArray<Outputs.DeltaModelCurrentStateResponse>>? DeltaModels;
        /// <summary>
        /// Gets or sets expected instance count.
        /// </summary>
        public readonly int? ExpectedInstanceCount;
        /// <summary>
        /// Gets or sets revision ID.
        /// </summary>
        public readonly string? RevisionId;
        /// <summary>
        /// Gets or sets target base model.
        /// </summary>
        public readonly string? TargetBaseModel;

        [OutputConstructor]
        private GetInferenceGroupDeltaModelsStatusAsyncResult(
            int? actualInstanceCount,

            ImmutableDictionary<string, ImmutableArray<Outputs.DeltaModelCurrentStateResponse>>? deltaModels,

            int? expectedInstanceCount,

            string? revisionId,

            string? targetBaseModel)
        {
            ActualInstanceCount = actualInstanceCount;
            DeltaModels = deltaModels;
            ExpectedInstanceCount = expectedInstanceCount;
            RevisionId = revisionId;
            TargetBaseModel = targetBaseModel;
        }
    }
}
