// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001Preview.Inputs
{

    /// <summary>
    /// InferenceEndpoint configuration
    /// </summary>
    public sealed class InferenceEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Required] Authentication mode for the endpoint.
        /// </summary>
        [Input("authMode", required: true)]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20241001Preview.AuthMode> AuthMode { get; set; } = null!;

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// [Required] Group within the same pool with which this endpoint needs to be associated with.
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        [Input("properties")]
        private InputList<Inputs.StringStringKeyValuePairArgs>? _properties;

        /// <summary>
        /// Property dictionary. Properties can be added, but not removed or altered.
        /// </summary>
        public InputList<Inputs.StringStringKeyValuePairArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.StringStringKeyValuePairArgs>());
            set => _properties = value;
        }

        /// <summary>
        /// RequestConfiguration for endpoint.
        /// </summary>
        [Input("requestConfiguration")]
        public Input<Inputs.RequestConfigurationArgs>? RequestConfiguration { get; set; }

        public InferenceEndpointArgs()
        {
        }
        public static new InferenceEndpointArgs Empty => new InferenceEndpointArgs();
    }
}
