// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001Preview.Outputs
{

    /// <summary>
    /// Batch endpoint configuration.
    /// </summary>
    [OutputType]
    public sealed class BatchEndpointResponse
    {
        /// <summary>
        /// [Required] The authentication method for invoking the endpoint (data plane operation). Use 'Key' for key-based authentication. Use 'AMLToken' for Azure Machine Learning token-based authentication. Use 'AADToken' for Microsoft Entra token-based authentication.
        /// </summary>
        public readonly string AuthMode;
        /// <summary>
        /// Default values for Batch Endpoint
        /// </summary>
        public readonly Outputs.BatchEndpointDefaultsResponse? Defaults;
        /// <summary>
        /// Description of the inference endpoint.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Property dictionary. Properties can be added, but not removed or altered.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Provisioning state for the endpoint.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Endpoint URI.
        /// </summary>
        public readonly string ScoringUri;
        /// <summary>
        /// Endpoint Swagger URI.
        /// </summary>
        public readonly string SwaggerUri;

        [OutputConstructor]
        private BatchEndpointResponse(
            string authMode,

            Outputs.BatchEndpointDefaultsResponse? defaults,

            string? description,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            string scoringUri,

            string swaggerUri)
        {
            AuthMode = authMode;
            Defaults = defaults;
            Description = description;
            Properties = properties;
            ProvisioningState = provisioningState;
            ScoringUri = scoringUri;
            SwaggerUri = swaggerUri;
        }
    }
}
