// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001Preview.Outputs
{

    /// <summary>
    /// Defines an Aml Instance DataMount.
    /// </summary>
    [OutputType]
    public sealed class ComputeInstanceDataMountResponse
    {
        /// <summary>
        /// who this data mount created by.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// Error of this data mount.
        /// </summary>
        public readonly string? Error;
        /// <summary>
        /// Mount Action.
        /// </summary>
        public readonly string? MountAction;
        /// <summary>
        /// Mount Mode.
        /// </summary>
        public readonly string? MountMode;
        /// <summary>
        /// name of the ComputeInstance data mount.
        /// </summary>
        public readonly string? MountName;
        /// <summary>
        /// Path of this data mount.
        /// </summary>
        public readonly string? MountPath;
        /// <summary>
        /// Mount state.
        /// </summary>
        public readonly string? MountState;
        /// <summary>
        /// The time when the disk mounted.
        /// </summary>
        public readonly string? MountedOn;
        /// <summary>
        /// Source of the ComputeInstance data mount.
        /// </summary>
        public readonly string? Source;
        /// <summary>
        /// Data source type.
        /// </summary>
        public readonly string? SourceType;

        [OutputConstructor]
        private ComputeInstanceDataMountResponse(
            string? createdBy,

            string? error,

            string? mountAction,

            string? mountMode,

            string? mountName,

            string? mountPath,

            string? mountState,

            string? mountedOn,

            string? source,

            string? sourceType)
        {
            CreatedBy = createdBy;
            Error = error;
            MountAction = mountAction;
            MountMode = mountMode;
            MountName = mountName;
            MountPath = mountPath;
            MountState = mountState;
            MountedOn = mountedOn;
            Source = source;
            SourceType = sourceType;
        }
    }
}
