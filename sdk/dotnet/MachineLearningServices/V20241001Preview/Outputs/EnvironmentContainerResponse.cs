// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001Preview.Outputs
{

    /// <summary>
    /// Container for environment specification versions.
    /// </summary>
    [OutputType]
    public sealed class EnvironmentContainerResponse
    {
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Is the asset archived?
        /// </summary>
        public readonly bool? IsArchived;
        /// <summary>
        /// The latest version inside this container.
        /// </summary>
        public readonly string LatestVersion;
        /// <summary>
        /// The next auto incremental version
        /// </summary>
        public readonly string NextVersion;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Provisioning state for the environment container.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private EnvironmentContainerResponse(
            string? description,

            bool? isArchived,

            string latestVersion,

            string nextVersion,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            ImmutableDictionary<string, string>? tags)
        {
            Description = description;
            IsArchived = isArchived;
            LatestVersion = latestVersion;
            NextVersion = nextVersion;
            Properties = properties;
            ProvisioningState = provisioningState;
            Tags = tags;
        }
    }
}
