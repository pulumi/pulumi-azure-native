// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001Preview.Outputs
{

    [OutputType]
    public sealed class CapabilityHostResponse
    {
        /// <summary>
        /// List of AI services connections.
        /// </summary>
        public readonly ImmutableArray<string> AiServicesConnections;
        /// <summary>
        /// Kind of this capability host.
        /// </summary>
        public readonly string? CapabilityHostKind;
        /// <summary>
        /// Customer subnet info to help set up this capability host.
        /// </summary>
        public readonly string? CustomerSubnet;
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Provisioning state for the CapabilityHost.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// List of Storage connections.
        /// </summary>
        public readonly ImmutableArray<string> StorageConnections;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// List of VectorStore connections.
        /// </summary>
        public readonly ImmutableArray<string> VectorStoreConnections;

        [OutputConstructor]
        private CapabilityHostResponse(
            ImmutableArray<string> aiServicesConnections,

            string? capabilityHostKind,

            string? customerSubnet,

            string? description,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            ImmutableArray<string> storageConnections,

            ImmutableDictionary<string, string>? tags,

            ImmutableArray<string> vectorStoreConnections)
        {
            AiServicesConnections = aiServicesConnections;
            CapabilityHostKind = capabilityHostKind;
            CustomerSubnet = customerSubnet;
            Description = description;
            Properties = properties;
            ProvisioningState = provisioningState;
            StorageConnections = storageConnections;
            Tags = tags;
            VectorStoreConnections = vectorStoreConnections;
        }
    }
}
