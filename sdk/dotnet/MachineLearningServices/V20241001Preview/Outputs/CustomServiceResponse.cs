// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20241001Preview.Outputs
{

    /// <summary>
    /// Specifies the custom service configuration
    /// </summary>
    [OutputType]
    public sealed class CustomServiceResponse
    {
        /// <summary>
        /// Describes the docker settings for the image
        /// </summary>
        public readonly Outputs.DockerResponse? Docker;
        /// <summary>
        /// Configuring the endpoints for the container
        /// </summary>
        public readonly ImmutableArray<Outputs.EndpointResponse> Endpoints;
        /// <summary>
        /// Environment Variable for the container
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.EnvironmentVariableResponse>? EnvironmentVariables;
        /// <summary>
        /// Describes the Image Specifications
        /// </summary>
        public readonly Outputs.ImageResponse? Image;
        /// <summary>
        /// Describes the jupyter kernel settings for the image if its a custom environment
        /// </summary>
        public readonly Outputs.JupyterKernelConfigResponse? Kernel;
        /// <summary>
        /// Name of the Custom Service
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Configuring the volumes for the container
        /// </summary>
        public readonly ImmutableArray<Outputs.VolumeDefinitionResponse> Volumes;

        [OutputConstructor]
        private CustomServiceResponse(
            Outputs.DockerResponse? docker,

            ImmutableArray<Outputs.EndpointResponse> endpoints,

            ImmutableDictionary<string, Outputs.EnvironmentVariableResponse>? environmentVariables,

            Outputs.ImageResponse? image,

            Outputs.JupyterKernelConfigResponse? kernel,

            string? name,

            ImmutableArray<Outputs.VolumeDefinitionResponse> volumes)
        {
            Docker = docker;
            Endpoints = endpoints;
            EnvironmentVariables = environmentVariables;
            Image = image;
            Kernel = kernel;
            Name = name;
            Volumes = volumes;
        }
    }
}
