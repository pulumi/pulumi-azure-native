// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Inputs
{

    /// <summary>
    /// Image Object Detection. Object detection is used to identify objects in an image and locate each object with a
    /// bounding box e.g. locate all dogs and cats in an image and draw a bounding box around each.
    /// </summary>
    public sealed class ImageObjectDetectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Required] Limit settings for the AutoML job.
        /// </summary>
        [Input("limitSettings", required: true)]
        public Input<Inputs.ImageLimitSettingsArgs> LimitSettings { get; set; } = null!;

        /// <summary>
        /// Log verbosity for the job.
        /// </summary>
        [Input("logVerbosity")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.LogVerbosity>? LogVerbosity { get; set; }

        /// <summary>
        /// Settings used for training the model.
        /// </summary>
        [Input("modelSettings")]
        public Input<Inputs.ImageModelSettingsObjectDetectionArgs>? ModelSettings { get; set; }

        /// <summary>
        /// Primary metric to optimize for this task.
        /// </summary>
        [Input("primaryMetric")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.ObjectDetectionPrimaryMetrics>? PrimaryMetric { get; set; }

        [Input("searchSpace")]
        private InputList<Inputs.ImageModelDistributionSettingsObjectDetectionArgs>? _searchSpace;

        /// <summary>
        /// Search space for sampling different combinations of models and their hyperparameters.
        /// </summary>
        public InputList<Inputs.ImageModelDistributionSettingsObjectDetectionArgs> SearchSpace
        {
            get => _searchSpace ?? (_searchSpace = new InputList<Inputs.ImageModelDistributionSettingsObjectDetectionArgs>());
            set => _searchSpace = value;
        }

        /// <summary>
        /// Model sweeping and hyperparameter sweeping related settings.
        /// </summary>
        [Input("sweepSettings")]
        public Input<Inputs.ImageSweepSettingsArgs>? SweepSettings { get; set; }

        /// <summary>
        /// Target column name: This is prediction values column.
        /// Also known as label column name in context of classification tasks.
        /// </summary>
        [Input("targetColumnName")]
        public Input<string>? TargetColumnName { get; set; }

        /// <summary>
        /// AutoMLJob Task type.
        /// Expected value is 'ImageObjectDetection'.
        /// </summary>
        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        /// <summary>
        /// [Required] Training data input.
        /// </summary>
        [Input("trainingData", required: true)]
        public Input<Inputs.MLTableJobInputArgs> TrainingData { get; set; } = null!;

        /// <summary>
        /// Validation data inputs.
        /// </summary>
        [Input("validationData")]
        public Input<Inputs.MLTableJobInputArgs>? ValidationData { get; set; }

        /// <summary>
        /// The fraction of training dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Input("validationDataSize")]
        public Input<double>? ValidationDataSize { get; set; }

        public ImageObjectDetectionArgs()
        {
            LogVerbosity = "Info";
            PrimaryMetric = "MeanAveragePrecision";
        }
        public static new ImageObjectDetectionArgs Empty => new ImageObjectDetectionArgs();
    }
}
