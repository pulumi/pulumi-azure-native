// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Inputs
{

    /// <summary>
    /// Labeling job definition
    /// </summary>
    public sealed class LabelingJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARM resource ID of the component resource.
        /// </summary>
        [Input("componentId")]
        public Input<string>? ComponentId { get; set; }

        /// <summary>
        /// ARM resource ID of the compute resource.
        /// </summary>
        [Input("computeId")]
        public Input<string>? ComputeId { get; set; }

        /// <summary>
        /// Configuration of data used in the job.
        /// </summary>
        [Input("dataConfiguration")]
        public Input<Inputs.LabelingDataConfigurationArgs>? DataConfiguration { get; set; }

        /// <summary>
        /// The asset description text.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Display name of job.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
        /// </summary>
        [Input("experimentName")]
        public Input<string>? ExperimentName { get; set; }

        /// <summary>
        /// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
        /// Defaults to AmlToken if null.
        /// </summary>
        [Input("identity")]
        public object? Identity { get; set; }

        /// <summary>
        /// Is the asset archived?
        /// </summary>
        [Input("isArchived")]
        public Input<bool>? IsArchived { get; set; }

        /// <summary>
        /// Labeling instructions of the job.
        /// </summary>
        [Input("jobInstructions")]
        public Input<Inputs.LabelingJobInstructionsArgs>? JobInstructions { get; set; }

        /// <summary>
        /// Enum to determine the type of job.
        /// Expected value is 'Labeling'.
        /// </summary>
        [Input("jobType", required: true)]
        public Input<string> JobType { get; set; } = null!;

        [Input("labelCategories")]
        private InputMap<Inputs.LabelCategoryArgs>? _labelCategories;

        /// <summary>
        /// Label categories of the job.
        /// </summary>
        public InputMap<Inputs.LabelCategoryArgs> LabelCategories
        {
            get => _labelCategories ?? (_labelCategories = new InputMap<Inputs.LabelCategoryArgs>());
            set => _labelCategories = value;
        }

        /// <summary>
        /// Media type specific properties in the job.
        /// </summary>
        [Input("labelingJobMediaProperties")]
        public InputUnion<Inputs.LabelingJobImagePropertiesArgs, Inputs.LabelingJobTextPropertiesArgs>? LabelingJobMediaProperties { get; set; }

        /// <summary>
        /// Configuration of MLAssist feature in the job.
        /// </summary>
        [Input("mlAssistConfiguration")]
        public InputUnion<Inputs.MLAssistConfigurationDisabledArgs, Inputs.MLAssistConfigurationEnabledArgs>? MlAssistConfiguration { get; set; }

        /// <summary>
        /// Notification setting for the job
        /// </summary>
        [Input("notificationSetting")]
        public Input<Inputs.NotificationSettingArgs>? NotificationSetting { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("secretsConfiguration")]
        private InputMap<Inputs.SecretConfigurationArgs>? _secretsConfiguration;

        /// <summary>
        /// Configuration for secrets to be made available during runtime.
        /// </summary>
        public InputMap<Inputs.SecretConfigurationArgs> SecretsConfiguration
        {
            get => _secretsConfiguration ?? (_secretsConfiguration = new InputMap<Inputs.SecretConfigurationArgs>());
            set => _secretsConfiguration = value;
        }

        [Input("services")]
        private InputMap<Inputs.JobServiceArgs>? _services;

        /// <summary>
        /// List of JobEndpoints.
        /// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
        /// </summary>
        public InputMap<Inputs.JobServiceArgs> Services
        {
            get => _services ?? (_services = new InputMap<Inputs.JobServiceArgs>());
            set => _services = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LabelingJobArgs()
        {
            ExperimentName = "Default";
            IsArchived = false;
        }
        public static new LabelingJobArgs Empty => new LabelingJobArgs();
    }
}
