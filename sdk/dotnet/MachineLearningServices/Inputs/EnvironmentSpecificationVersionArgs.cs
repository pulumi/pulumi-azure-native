// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Inputs
{

    /// <summary>
    /// Environment specification version details.
    /// &lt;see href="https://repo2docker.readthedocs.io/en/latest/specification.html" /&gt;
    /// </summary>
    public sealed class EnvironmentSpecificationVersionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
        /// &lt;see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" /&gt;
        /// </summary>
        [Input("condaFile")]
        public Input<string>? CondaFile { get; set; }

        /// <summary>
        /// The asset description text.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Configuration settings for Docker.
        /// </summary>
        [Input("docker")]
        public InputUnion<Inputs.DockerBuildArgs, Inputs.DockerImageArgs>? Docker { get; set; }

        /// <summary>
        /// Defines configuration specific to inference.
        /// </summary>
        [Input("inferenceContainerProperties")]
        public Input<Inputs.InferenceContainerPropertiesArgs>? InferenceContainerProperties { get; set; }

        /// <summary>
        /// If the name version are system generated (anonymous registration).
        /// </summary>
        [Input("isAnonymous")]
        public Input<bool>? IsAnonymous { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public EnvironmentSpecificationVersionArgs()
        {
        }
    }
}
