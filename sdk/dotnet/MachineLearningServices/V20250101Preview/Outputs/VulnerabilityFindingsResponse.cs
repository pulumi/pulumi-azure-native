// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20250101Preview.Outputs
{

    [OutputType]
    public sealed class VulnerabilityFindingsResponse
    {
        /// <summary>
        /// AssetId (Image digest).
        /// </summary>
        public readonly string? AssetId;
        /// <summary>
        /// Number of critical findings.
        /// </summary>
        public readonly int CriticalFindingsCount;
        /// <summary>
        /// List of vulnerability findings.
        /// </summary>
        public readonly ImmutableArray<Outputs.VulnerabilityDetailsResponse> Data;
        /// <summary>
        /// Time the report was generated.
        /// </summary>
        public readonly string? GeneratedTime;
        /// <summary>
        /// Number of high findings.
        /// </summary>
        public readonly int HighFindingsCount;
        /// <summary>
        /// Scan result date.
        /// </summary>
        public readonly string? LastScanDate;
        /// <summary>
        /// Vulnerability scanner name.
        /// </summary>
        public readonly string? Scanner;
        /// <summary>
        /// Data source (internal).
        /// </summary>
        public readonly string? Source;
        /// <summary>
        /// Total findings count.
        /// </summary>
        public readonly int TotalFindingsCount;

        [OutputConstructor]
        private VulnerabilityFindingsResponse(
            string? assetId,

            int criticalFindingsCount,

            ImmutableArray<Outputs.VulnerabilityDetailsResponse> data,

            string? generatedTime,

            int highFindingsCount,

            string? lastScanDate,

            string? scanner,

            string? source,

            int totalFindingsCount)
        {
            AssetId = assetId;
            CriticalFindingsCount = criticalFindingsCount;
            Data = data;
            GeneratedTime = generatedTime;
            HighFindingsCount = highFindingsCount;
            LastScanDate = lastScanDate;
            Scanner = scanner;
            Source = source;
            TotalFindingsCount = totalFindingsCount;
        }
    }
}
