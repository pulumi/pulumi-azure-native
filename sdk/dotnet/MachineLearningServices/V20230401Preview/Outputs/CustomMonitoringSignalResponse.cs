// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230401Preview.Outputs
{

    [OutputType]
    public sealed class CustomMonitoringSignalResponse
    {
        /// <summary>
        /// [Required] ARM resource ID of the component resource used to calculate the custom metrics.
        /// </summary>
        public readonly string ComponentId;
        /// <summary>
        /// Monitoring assets to take as input. Key is the component input port name, value is the data asset.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.MonitoringInputDataResponse>? InputAssets;
        /// <summary>
        /// The amount of time a single monitor should look back over the target data on a given run.
        /// </summary>
        public readonly string? LookbackPeriod;
        /// <summary>
        /// [Required] A list of metrics to calculate and their associated thresholds.
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomMetricThresholdResponse> MetricThresholds;
        /// <summary>
        /// The current notification mode for this signal.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// 
        /// Expected value is 'Custom'.
        /// </summary>
        public readonly string SignalType;

        [OutputConstructor]
        private CustomMonitoringSignalResponse(
            string componentId,

            ImmutableDictionary<string, Outputs.MonitoringInputDataResponse>? inputAssets,

            string? lookbackPeriod,

            ImmutableArray<Outputs.CustomMetricThresholdResponse> metricThresholds,

            string? mode,

            string signalType)
        {
            ComponentId = componentId;
            InputAssets = inputAssets;
            LookbackPeriod = lookbackPeriod;
            MetricThresholds = metricThresholds;
            Mode = mode;
            SignalType = signalType;
        }
    }
}
