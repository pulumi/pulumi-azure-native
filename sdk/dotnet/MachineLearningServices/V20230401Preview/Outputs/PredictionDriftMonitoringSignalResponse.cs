// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230401Preview.Outputs
{

    [OutputType]
    public sealed class PredictionDriftMonitoringSignalResponse
    {
        /// <summary>
        /// [Required] The data to calculate drift against.
        /// </summary>
        public readonly Outputs.MonitoringInputDataResponse BaselineData;
        /// <summary>
        /// The amount of time a single monitor should look back over the target data on a given run.
        /// </summary>
        public readonly string? LookbackPeriod;
        /// <summary>
        /// [Required] A list of metrics to calculate and their associated thresholds.
        /// </summary>
        public readonly ImmutableArray<Union<Outputs.CategoricalPredictionDriftMetricThresholdResponse, Outputs.NumericalPredictionDriftMetricThresholdResponse>> MetricThresholds;
        /// <summary>
        /// The current notification mode for this signal.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// [Required] The type of the model monitored.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// 
        /// Expected value is 'PredictionDrift'.
        /// </summary>
        public readonly string SignalType;
        /// <summary>
        /// [Required] The data which drift will be calculated for.
        /// </summary>
        public readonly Outputs.MonitoringInputDataResponse TargetData;

        [OutputConstructor]
        private PredictionDriftMonitoringSignalResponse(
            Outputs.MonitoringInputDataResponse baselineData,

            string? lookbackPeriod,

            ImmutableArray<Union<Outputs.CategoricalPredictionDriftMetricThresholdResponse, Outputs.NumericalPredictionDriftMetricThresholdResponse>> metricThresholds,

            string? mode,

            string modelType,

            string signalType,

            Outputs.MonitoringInputDataResponse targetData)
        {
            BaselineData = baselineData;
            LookbackPeriod = lookbackPeriod;
            MetricThresholds = metricThresholds;
            Mode = mode;
            ModelType = modelType;
            SignalType = signalType;
            TargetData = targetData;
        }
    }
}
