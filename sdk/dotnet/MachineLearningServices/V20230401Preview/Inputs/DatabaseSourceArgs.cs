// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230401Preview.Inputs
{

    public sealed class DatabaseSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Workspace connection for data import source storage
        /// </summary>
        [Input("connection")]
        public Input<string>? Connection { get; set; }

        /// <summary>
        /// SQL Query statement for data import Database source
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        /// <summary>
        /// Enum to determine the type of data.
        /// Expected value is 'database'.
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        /// <summary>
        /// SQL StoredProcedure on data import Database source
        /// </summary>
        [Input("storedProcedure")]
        public Input<string>? StoredProcedure { get; set; }

        [Input("storedProcedureParams")]
        private InputList<ImmutableDictionary<string, string>>? _storedProcedureParams;

        /// <summary>
        /// SQL StoredProcedure parameters
        /// </summary>
        public InputList<ImmutableDictionary<string, string>> StoredProcedureParams
        {
            get => _storedProcedureParams ?? (_storedProcedureParams = new InputList<ImmutableDictionary<string, string>>());
            set => _storedProcedureParams = value;
        }

        /// <summary>
        /// Name of the table on data import Database source
        /// </summary>
        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        public DatabaseSourceArgs()
        {
        }
        public static new DatabaseSourceArgs Empty => new DatabaseSourceArgs();
    }
}
