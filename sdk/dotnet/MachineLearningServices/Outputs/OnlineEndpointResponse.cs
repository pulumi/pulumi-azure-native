// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    /// <summary>
    /// Online endpoint configuration
    /// </summary>
    [OutputType]
    public sealed class OnlineEndpointResponse
    {
        /// <summary>
        /// [Required] Inference endpoint authentication mode type
        /// </summary>
        public readonly string AuthMode;
        /// <summary>
        /// Description of the inference endpoint.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Property dictionary. Properties can be added, but not removed or altered.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// State of endpoint provisioning.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Endpoint URI.
        /// </summary>
        public readonly string ScoringUri;
        /// <summary>
        /// Endpoint Swagger URI.
        /// </summary>
        public readonly string SwaggerUri;
        /// <summary>
        /// ARM resource ID of the compute if it exists.
        /// optional
        /// </summary>
        public readonly string? Target;
        /// <summary>
        /// Traffic rules on how the traffic will be routed across deployments.
        /// </summary>
        public readonly ImmutableDictionary<string, int>? Traffic;

        [OutputConstructor]
        private OnlineEndpointResponse(
            string authMode,

            string? description,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            string scoringUri,

            string swaggerUri,

            string? target,

            ImmutableDictionary<string, int>? traffic)
        {
            AuthMode = authMode;
            Description = description;
            Properties = properties;
            ProvisioningState = provisioningState;
            ScoringUri = scoringUri;
            SwaggerUri = swaggerUri;
            Target = target;
            Traffic = traffic;
        }
    }
}
