// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    /// <summary>
    /// Command job definition.
    /// </summary>
    [OutputType]
    public sealed class CommandJobResponse
    {
        /// <summary>
        /// ARM resource ID of the code asset.
        /// </summary>
        public readonly string? CodeId;
        /// <summary>
        /// [Required] The command to execute on startup of the job. eg. "python train.py"
        /// </summary>
        public readonly string Command;
        /// <summary>
        /// [Required] Compute binding for the job.
        /// </summary>
        public readonly Outputs.ComputeConfigurationResponse Compute;
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
        /// </summary>
        public readonly object? Distribution;
        /// <summary>
        /// The ARM resource ID of the Environment specification for the job.
        /// </summary>
        public readonly string? EnvironmentId;
        /// <summary>
        /// Environment variables included in the job.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EnvironmentVariables;
        /// <summary>
        /// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
        /// </summary>
        public readonly string? ExperimentName;
        /// <summary>
        /// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
        /// Defaults to AmlToken if null.
        /// </summary>
        public readonly Union<Outputs.AmlTokenResponse, Outputs.ManagedIdentityResponse>? Identity;
        /// <summary>
        /// Mapping of input data bindings used in the job.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.InputDataBindingResponse>? InputDataBindings;
        /// <summary>
        /// List of JobEndpoints.
        /// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.JobEndpointResponse> InteractionEndpoints;
        /// <summary>
        /// Enum to determine the type of job.
        /// Expected value is 'Command'.
        /// </summary>
        public readonly string JobType;
        /// <summary>
        /// Location of the job output logs and artifacts.
        /// </summary>
        public readonly Outputs.JobOutputResponse Output;
        /// <summary>
        /// Mapping of output data bindings used in the job.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.OutputDataBindingResponse>? OutputDataBindings;
        /// <summary>
        /// Input parameters.
        /// </summary>
        public readonly object Parameters;
        /// <summary>
        /// Job priority for scheduling policy. Only applies to AMLCompute.
        /// Private preview feature and only available to users on the allow list.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Specifies the job provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Status of the job.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
        /// </summary>
        public readonly string? Timeout;

        [OutputConstructor]
        private CommandJobResponse(
            string? codeId,

            string command,

            Outputs.ComputeConfigurationResponse compute,

            string? description,

            object? distribution,

            string? environmentId,

            ImmutableDictionary<string, string>? environmentVariables,

            string? experimentName,

            Union<Outputs.AmlTokenResponse, Outputs.ManagedIdentityResponse>? identity,

            ImmutableDictionary<string, Outputs.InputDataBindingResponse>? inputDataBindings,

            ImmutableDictionary<string, Outputs.JobEndpointResponse> interactionEndpoints,

            string jobType,

            Outputs.JobOutputResponse output,

            ImmutableDictionary<string, Outputs.OutputDataBindingResponse>? outputDataBindings,

            object parameters,

            int? priority,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            string status,

            ImmutableDictionary<string, string>? tags,

            string? timeout)
        {
            CodeId = codeId;
            Command = command;
            Compute = compute;
            Description = description;
            Distribution = distribution;
            EnvironmentId = environmentId;
            EnvironmentVariables = environmentVariables;
            ExperimentName = experimentName;
            Identity = identity;
            InputDataBindings = inputDataBindings;
            InteractionEndpoints = interactionEndpoints;
            JobType = jobType;
            Output = output;
            OutputDataBindings = outputDataBindings;
            Parameters = parameters;
            Priority = priority;
            Properties = properties;
            ProvisioningState = provisioningState;
            Status = status;
            Tags = tags;
            Timeout = timeout;
        }
    }
}
