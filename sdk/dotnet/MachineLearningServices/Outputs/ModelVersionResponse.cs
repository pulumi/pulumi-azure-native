// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    /// <summary>
    /// Model asset version details.
    /// </summary>
    [OutputType]
    public sealed class ModelVersionResponse
    {
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Mapping of model flavors to their properties.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.FlavorDataResponse>? Flavors;
        /// <summary>
        /// If the name version are system generated (anonymous registration).
        /// </summary>
        public readonly bool? IsAnonymous;
        /// <summary>
        /// Is the asset archived?
        /// </summary>
        public readonly bool? IsArchived;
        /// <summary>
        /// Name of the training job which produced this model
        /// </summary>
        public readonly string? JobName;
        /// <summary>
        /// The storage format for this entity. Used for NCD.
        /// </summary>
        public readonly string? ModelType;
        /// <summary>
        /// The URI path to the model contents.
        /// </summary>
        public readonly string? ModelUri;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Provisioning state for the model version.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Stage in the model lifecycle assigned to this model
        /// </summary>
        public readonly string? Stage;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private ModelVersionResponse(
            string? description,

            ImmutableDictionary<string, Outputs.FlavorDataResponse>? flavors,

            bool? isAnonymous,

            bool? isArchived,

            string? jobName,

            string? modelType,

            string? modelUri,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            string? stage,

            ImmutableDictionary<string, string>? tags)
        {
            Description = description;
            Flavors = flavors;
            IsAnonymous = isAnonymous;
            IsArchived = isArchived;
            JobName = jobName;
            ModelType = modelType;
            ModelUri = modelUri;
            Properties = properties;
            ProvisioningState = provisioningState;
            Stage = stage;
            Tags = tags;
        }
    }
}
