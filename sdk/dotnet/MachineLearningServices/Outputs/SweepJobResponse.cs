// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    /// <summary>
    /// Sweep job definition.
    /// </summary>
    [OutputType]
    public sealed class SweepJobResponse
    {
        /// <summary>
        /// [Required] Type of the hyperparameter sampling algorithms
        /// </summary>
        public readonly string Algorithm;
        /// <summary>
        /// [Required] Compute binding for the job.
        /// </summary>
        public readonly Outputs.ComputeConfigurationResponse Compute;
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Early termination policies enable canceling poor-performing runs before they complete.
        /// </summary>
        public readonly object? EarlyTermination;
        /// <summary>
        /// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
        /// </summary>
        public readonly string? ExperimentName;
        /// <summary>
        /// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
        /// Defaults to AmlToken if null.
        /// </summary>
        public readonly Union<Outputs.AmlTokenResponse, Outputs.ManagedIdentityResponse>? Identity;
        /// <summary>
        /// List of JobEndpoints.
        /// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.JobEndpointResponse> InteractionEndpoints;
        /// <summary>
        /// Enum to determine the type of job.
        /// Expected value is 'Sweep'.
        /// </summary>
        public readonly string JobType;
        /// <summary>
        /// An upper bound on the number of trials performed in parallel.
        /// </summary>
        public readonly int? MaxConcurrentTrials;
        /// <summary>
        /// An upper bound on the number of trials to perform.
        /// </summary>
        public readonly int? MaxTotalTrials;
        /// <summary>
        /// [Required] Optimization objective.
        /// </summary>
        public readonly Outputs.ObjectiveResponse Objective;
        /// <summary>
        /// Location of the job output logs and artifacts.
        /// </summary>
        public readonly Outputs.JobOutputResponse Output;
        /// <summary>
        /// Job priority for scheduling policy. Only applies to AMLCompute.
        /// Private preview feature and only available to users on the allow list.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Specifies the job provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
        /// </summary>
        public readonly ImmutableDictionary<string, object> SearchSpace;
        /// <summary>
        /// The status of a job.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
        /// </summary>
        public readonly string? Timeout;
        /// <summary>
        /// Trial component definition.
        /// </summary>
        public readonly Outputs.TrialComponentResponse? Trial;

        [OutputConstructor]
        private SweepJobResponse(
            string algorithm,

            Outputs.ComputeConfigurationResponse compute,

            string? description,

            object? earlyTermination,

            string? experimentName,

            Union<Outputs.AmlTokenResponse, Outputs.ManagedIdentityResponse>? identity,

            ImmutableDictionary<string, Outputs.JobEndpointResponse> interactionEndpoints,

            string jobType,

            int? maxConcurrentTrials,

            int? maxTotalTrials,

            Outputs.ObjectiveResponse objective,

            Outputs.JobOutputResponse output,

            int? priority,

            ImmutableDictionary<string, string>? properties,

            string provisioningState,

            ImmutableDictionary<string, object> searchSpace,

            string status,

            ImmutableDictionary<string, string>? tags,

            string? timeout,

            Outputs.TrialComponentResponse? trial)
        {
            Algorithm = algorithm;
            Compute = compute;
            Description = description;
            EarlyTermination = earlyTermination;
            ExperimentName = experimentName;
            Identity = identity;
            InteractionEndpoints = interactionEndpoints;
            JobType = jobType;
            MaxConcurrentTrials = maxConcurrentTrials;
            MaxTotalTrials = maxTotalTrials;
            Objective = objective;
            Output = output;
            Priority = priority;
            Properties = properties;
            ProvisioningState = provisioningState;
            SearchSpace = searchSpace;
            Status = status;
            Tags = tags;
            Timeout = timeout;
            Trial = trial;
        }
    }
}
