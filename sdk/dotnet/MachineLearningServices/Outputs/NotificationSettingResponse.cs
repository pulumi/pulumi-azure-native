// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    /// <summary>
    /// Configuration for notification.
    /// </summary>
    [OutputType]
    public sealed class NotificationSettingResponse
    {
        /// <summary>
        /// Send email notification to user on specified notification type
        /// </summary>
        public readonly ImmutableArray<string> EmailOn;
        /// <summary>
        /// This is the email recipient list which has a limitation of 499 characters in total concat with comma separator
        /// </summary>
        public readonly ImmutableArray<string> Emails;
        /// <summary>
        /// Send webhook callback to a service. Key is a user-provided name for the webhook.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.AzureDevOpsWebhookResponse>? Webhooks;

        [OutputConstructor]
        private NotificationSettingResponse(
            ImmutableArray<string> emailOn,

            ImmutableArray<string> emails,

            ImmutableDictionary<string, Outputs.AzureDevOpsWebhookResponse>? webhooks)
        {
            EmailOn = emailOn;
            Emails = emails;
            Webhooks = webhooks;
        }
    }
}
