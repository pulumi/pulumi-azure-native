// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    /// <summary>
    /// Regression task in AutoML Table vertical.
    /// </summary>
    [OutputType]
    public sealed class RegressionResponse
    {
        /// <summary>
        /// Columns to use for CVSplit data.
        /// </summary>
        public readonly ImmutableArray<string> CvSplitColumnNames;
        /// <summary>
        /// Featurization inputs needed for AutoML job.
        /// </summary>
        public readonly Outputs.TableVerticalFeaturizationSettingsResponse? FeaturizationSettings;
        /// <summary>
        /// Execution constraints for AutoMLJob.
        /// </summary>
        public readonly Outputs.TableVerticalLimitSettingsResponse? LimitSettings;
        /// <summary>
        /// Log verbosity for the job.
        /// </summary>
        public readonly string? LogVerbosity;
        /// <summary>
        /// Number of cross validation folds to be applied on training dataset
        /// when validation dataset is not provided.
        /// </summary>
        public readonly Union<Outputs.AutoNCrossValidationsResponse, Outputs.CustomNCrossValidationsResponse>? NCrossValidations;
        /// <summary>
        /// Primary metric for regression task.
        /// </summary>
        public readonly string? PrimaryMetric;
        /// <summary>
        /// Target column name: This is prediction values column.
        /// Also known as label column name in context of classification tasks.
        /// </summary>
        public readonly string? TargetColumnName;
        /// <summary>
        /// AutoMLJob Task type.
        /// Expected value is 'Regression'.
        /// </summary>
        public readonly string TaskType;
        /// <summary>
        /// Test data input.
        /// </summary>
        public readonly Outputs.MLTableJobInputResponse? TestData;
        /// <summary>
        /// The fraction of test dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        public readonly double? TestDataSize;
        /// <summary>
        /// [Required] Training data input.
        /// </summary>
        public readonly Outputs.MLTableJobInputResponse TrainingData;
        /// <summary>
        /// Inputs for training phase for an AutoML Job.
        /// </summary>
        public readonly Outputs.RegressionTrainingSettingsResponse? TrainingSettings;
        /// <summary>
        /// Validation data inputs.
        /// </summary>
        public readonly Outputs.MLTableJobInputResponse? ValidationData;
        /// <summary>
        /// The fraction of training dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        public readonly double? ValidationDataSize;
        /// <summary>
        /// The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.
        /// </summary>
        public readonly string? WeightColumnName;

        [OutputConstructor]
        private RegressionResponse(
            ImmutableArray<string> cvSplitColumnNames,

            Outputs.TableVerticalFeaturizationSettingsResponse? featurizationSettings,

            Outputs.TableVerticalLimitSettingsResponse? limitSettings,

            string? logVerbosity,

            Union<Outputs.AutoNCrossValidationsResponse, Outputs.CustomNCrossValidationsResponse>? nCrossValidations,

            string? primaryMetric,

            string? targetColumnName,

            string taskType,

            Outputs.MLTableJobInputResponse? testData,

            double? testDataSize,

            Outputs.MLTableJobInputResponse trainingData,

            Outputs.RegressionTrainingSettingsResponse? trainingSettings,

            Outputs.MLTableJobInputResponse? validationData,

            double? validationDataSize,

            string? weightColumnName)
        {
            CvSplitColumnNames = cvSplitColumnNames;
            FeaturizationSettings = featurizationSettings;
            LimitSettings = limitSettings;
            LogVerbosity = logVerbosity;
            NCrossValidations = nCrossValidations;
            PrimaryMetric = primaryMetric;
            TargetColumnName = targetColumnName;
            TaskType = taskType;
            TestData = testData;
            TestDataSize = testDataSize;
            TrainingData = trainingData;
            TrainingSettings = trainingSettings;
            ValidationData = validationData;
            ValidationDataSize = validationDataSize;
            WeightColumnName = weightColumnName;
        }
    }
}
