// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    /// <summary>
    /// Managed Network settings for a machine learning workspace.
    /// </summary>
    [OutputType]
    public sealed class ManagedNetworkSettingsResponse
    {
        /// <summary>
        /// A flag to indicate if monitoring needs to be enabled for the managed network firewall.
        /// </summary>
        public readonly bool? EnableFirewallLog;
        /// <summary>
        /// A flag to indicate if monitoring needs to be enabled for the managed network.
        /// </summary>
        public readonly bool? EnableNetworkMonitor;
        /// <summary>
        /// Public IP address assigned to the Azure Firewall.
        /// </summary>
        public readonly string? FirewallPublicIpAddress;
        /// <summary>
        /// Firewall Sku used for FQDN Rules
        /// </summary>
        public readonly string? FirewallSku;
        /// <summary>
        /// Isolation mode for the managed network of a machine learning workspace.
        /// </summary>
        public readonly string? IsolationMode;
        /// <summary>
        /// The Kind of the managed network. Users can switch from V1 to V2 for granular access controls, but cannot switch back to V1 once V2 is enabled.
        /// </summary>
        public readonly string? ManagedNetworkKind;
        public readonly string NetworkId;
        public readonly ImmutableDictionary<string, object>? OutboundRules;
        /// <summary>
        /// Status of the Provisioning for the managed network of a machine learning workspace.
        /// </summary>
        public readonly Outputs.ManagedNetworkProvisionStatusResponse? Status;

        [OutputConstructor]
        private ManagedNetworkSettingsResponse(
            bool? enableFirewallLog,

            bool? enableNetworkMonitor,

            string? firewallPublicIpAddress,

            string? firewallSku,

            string? isolationMode,

            string? managedNetworkKind,

            string networkId,

            ImmutableDictionary<string, object>? outboundRules,

            Outputs.ManagedNetworkProvisionStatusResponse? status)
        {
            EnableFirewallLog = enableFirewallLog;
            EnableNetworkMonitor = enableNetworkMonitor;
            FirewallPublicIpAddress = firewallPublicIpAddress;
            FirewallSku = firewallSku;
            IsolationMode = isolationMode;
            ManagedNetworkKind = managedNetworkKind;
            NetworkId = networkId;
            OutboundRules = outboundRules;
            Status = status;
        }
    }
}
