// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    /// <summary>
    /// Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation
    /// </summary>
    [OutputType]
    public sealed class BanditPolicyResponse
    {
        /// <summary>
        /// Number of intervals by which to delay the first evaluation.
        /// </summary>
        public readonly int? DelayEvaluation;
        /// <summary>
        /// Interval (number of runs) between policy evaluations.
        /// </summary>
        public readonly int? EvaluationInterval;
        /// <summary>
        /// 
        /// Expected value is 'Bandit'.
        /// </summary>
        public readonly string PolicyType;
        /// <summary>
        /// Absolute distance allowed from the best performing run.
        /// </summary>
        public readonly double? SlackAmount;
        /// <summary>
        /// Ratio of the allowed distance from the best performing run.
        /// </summary>
        public readonly double? SlackFactor;

        [OutputConstructor]
        private BanditPolicyResponse(
            int? delayEvaluation,

            int? evaluationInterval,

            string policyType,

            double? slackAmount,

            double? slackFactor)
        {
            DelayEvaluation = delayEvaluation;
            EvaluationInterval = evaluationInterval;
            PolicyType = policyType;
            SlackAmount = slackAmount;
            SlackFactor = slackFactor;
        }
    }
}
