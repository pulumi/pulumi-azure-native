// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    /// <summary>
    /// Environment specification version details.
    /// &lt;see href="https://repo2docker.readthedocs.io/en/latest/specification.html" /&gt;
    /// </summary>
    [OutputType]
    public sealed class EnvironmentSpecificationVersionResponse
    {
        /// <summary>
        /// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
        /// &lt;see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" /&gt;
        /// </summary>
        public readonly string? CondaFile;
        /// <summary>
        /// The asset description text.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Configuration settings for Docker.
        /// </summary>
        public readonly Union<Outputs.DockerBuildResponse, Outputs.DockerImageResponse>? Docker;
        /// <summary>
        /// Environment specification is either user managed or curated by the Azure ML service
        /// &lt;see href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments" /&gt;
        /// </summary>
        public readonly string EnvironmentSpecificationType;
        /// <summary>
        /// Defines configuration specific to inference.
        /// </summary>
        public readonly Outputs.InferenceContainerPropertiesResponse? InferenceContainerProperties;
        /// <summary>
        /// If the name version are system generated (anonymous registration).
        /// </summary>
        public readonly bool? IsAnonymous;
        /// <summary>
        /// The asset property dictionary.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private EnvironmentSpecificationVersionResponse(
            string? condaFile,

            string? description,

            Union<Outputs.DockerBuildResponse, Outputs.DockerImageResponse>? docker,

            string environmentSpecificationType,

            Outputs.InferenceContainerPropertiesResponse? inferenceContainerProperties,

            bool? isAnonymous,

            ImmutableDictionary<string, string>? properties,

            ImmutableDictionary<string, string>? tags)
        {
            CondaFile = condaFile;
            Description = description;
            Docker = docker;
            EnvironmentSpecificationType = environmentSpecificationType;
            InferenceContainerProperties = inferenceContainerProperties;
            IsAnonymous = isAnonymous;
            Properties = properties;
            Tags = tags;
        }
    }
}
