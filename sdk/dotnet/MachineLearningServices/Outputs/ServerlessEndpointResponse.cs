// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.Outputs
{

    [OutputType]
    public sealed class ServerlessEndpointResponse
    {
        /// <summary>
        /// Specifies the authentication mode for the Serverless endpoint.
        /// </summary>
        public readonly string? AuthMode;
        /// <summary>
        /// Optional capacity reservation information for the endpoint. When specified, the Serverless Endpoint
        /// will be allocated capacity from the specified capacity reservation group.
        /// </summary>
        public readonly Outputs.ServerlessEndpointCapacityReservationResponse? CapacityReservation;
        /// <summary>
        /// The inference uri to target when making requests against the serverless endpoint
        /// </summary>
        public readonly Outputs.ServerlessInferenceEndpointResponse InferenceEndpoint;
        /// <summary>
        /// [Required] The publisher-defined Serverless Offer to provision the endpoint with.
        /// </summary>
        public readonly Outputs.ServerlessOfferResponse Offer;
        /// <summary>
        /// Provisioning state for the endpoint.
        /// </summary>
        public readonly string ProvisioningState;

        [OutputConstructor]
        private ServerlessEndpointResponse(
            string? authMode,

            Outputs.ServerlessEndpointCapacityReservationResponse? capacityReservation,

            Outputs.ServerlessInferenceEndpointResponse inferenceEndpoint,

            Outputs.ServerlessOfferResponse offer,

            string provisioningState)
        {
            AuthMode = authMode;
            CapacityReservation = capacityReservation;
            InferenceEndpoint = inferenceEndpoint;
            Offer = offer;
            ProvisioningState = provisioningState;
        }
    }
}
