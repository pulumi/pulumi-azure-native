// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230601Preview.Inputs
{

    /// <summary>
    /// Properties specific to a ManagedOnlineDeployment.
    /// </summary>
    public sealed class ManagedOnlineDeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, enables Application Insights logging.
        /// </summary>
        [Input("appInsightsEnabled")]
        public Input<bool>? AppInsightsEnabled { get; set; }

        /// <summary>
        /// Code configuration for the endpoint deployment.
        /// </summary>
        [Input("codeConfiguration")]
        public Input<Inputs.CodeConfigurationArgs>? CodeConfiguration { get; set; }

        /// <summary>
        /// The mdc configuration, we disable mdc when it's null.
        /// </summary>
        [Input("dataCollector")]
        public Input<Inputs.DataCollectorArgs>? DataCollector { get; set; }

        /// <summary>
        /// Description of the endpoint deployment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled.
        /// </summary>
        [Input("egressPublicNetworkAccess")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20230601Preview.EgressPublicNetworkAccessType>? EgressPublicNetworkAccess { get; set; }

        /// <summary>
        /// Enum to determine endpoint compute type.
        /// Expected value is 'Managed'.
        /// </summary>
        [Input("endpointComputeType", required: true)]
        public Input<string> EndpointComputeType { get; set; } = null!;

        /// <summary>
        /// ARM resource ID of the environment specification for the endpoint deployment.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// Environment variables configuration for the deployment.
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Compute instance type.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Liveness probe monitors the health of the container regularly.
        /// </summary>
        [Input("livenessProbe")]
        public Input<Inputs.ProbeSettingsArgs>? LivenessProbe { get; set; }

        /// <summary>
        /// The URI path to the model.
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        /// <summary>
        /// The path to mount the model in custom container.
        /// </summary>
        [Input("modelMountPath")]
        public Input<string>? ModelMountPath { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// Property dictionary. Properties can be added, but not removed or altered.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        /// <summary>
        /// Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe.
        /// </summary>
        [Input("readinessProbe")]
        public Input<Inputs.ProbeSettingsArgs>? ReadinessProbe { get; set; }

        /// <summary>
        /// Request settings for the deployment.
        /// </summary>
        [Input("requestSettings")]
        public Input<Inputs.OnlineRequestSettingsArgs>? RequestSettings { get; set; }

        /// <summary>
        /// Scale settings for the deployment.
        /// If it is null or not provided,
        /// it defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment
        /// and to DefaultScaleSettings for ManagedOnlineDeployment.
        /// </summary>
        [Input("scaleSettings")]
        public InputUnion<Inputs.DefaultScaleSettingsArgs, Inputs.TargetUtilizationScaleSettingsArgs>? ScaleSettings { get; set; }

        public ManagedOnlineDeploymentArgs()
        {
            AppInsightsEnabled = false;
            EgressPublicNetworkAccess = "Enabled";
        }
        public static new ManagedOnlineDeploymentArgs Empty => new ManagedOnlineDeploymentArgs();
    }
}
