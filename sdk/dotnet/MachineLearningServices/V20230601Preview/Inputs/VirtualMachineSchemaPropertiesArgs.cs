// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230601Preview.Inputs
{

    public sealed class VirtualMachineSchemaPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Public IP address of the virtual machine.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// Admin credentials for virtual machine
        /// </summary>
        [Input("administratorAccount")]
        public Input<Inputs.VirtualMachineSshCredentialsArgs>? AdministratorAccount { get; set; }

        /// <summary>
        /// Indicates whether this compute will be used for running notebooks.
        /// </summary>
        [Input("isNotebookInstanceCompute")]
        public Input<bool>? IsNotebookInstanceCompute { get; set; }

        /// <summary>
        /// Notebook server port open for ssh connections.
        /// </summary>
        [Input("notebookServerPort")]
        public Input<int>? NotebookServerPort { get; set; }

        /// <summary>
        /// Port open for ssh connections.
        /// </summary>
        [Input("sshPort")]
        public Input<int>? SshPort { get; set; }

        /// <summary>
        /// Virtual Machine size
        /// </summary>
        [Input("virtualMachineSize")]
        public Input<string>? VirtualMachineSize { get; set; }

        public VirtualMachineSchemaPropertiesArgs()
        {
        }
        public static new VirtualMachineSchemaPropertiesArgs Empty => new VirtualMachineSchemaPropertiesArgs();
    }
}
