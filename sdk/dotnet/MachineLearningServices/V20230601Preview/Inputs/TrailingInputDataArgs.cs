// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230601Preview.Inputs
{

    /// <summary>
    /// Trailing input data definition.
    /// </summary>
    public sealed class TrailingInputDataArgs : global::Pulumi.ResourceArgs
    {
        [Input("columns")]
        private InputMap<string>? _columns;

        /// <summary>
        /// Mapping of column names to special uses.
        /// </summary>
        public InputMap<string> Columns
        {
            get => _columns ?? (_columns = new InputMap<string>());
            set => _columns = value;
        }

        /// <summary>
        /// The context metadata of the data source.
        /// </summary>
        [Input("dataContext")]
        public Input<string>? DataContext { get; set; }

        /// <summary>
        /// Monitoring input data type enum.
        /// Expected value is 'Trailing'.
        /// </summary>
        [Input("inputDataType", required: true)]
        public Input<string> InputDataType { get; set; } = null!;

        /// <summary>
        /// [Required] Specifies the type of job.
        /// </summary>
        [Input("jobInputType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20230601Preview.JobInputType> JobInputType { get; set; } = null!;

        /// <summary>
        /// The ARM resource ID of the component resource used to preprocess the data.
        /// </summary>
        [Input("preprocessingComponentId")]
        public Input<string>? PreprocessingComponentId { get; set; }

        /// <summary>
        /// [Required] Input Asset URI.
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        /// <summary>
        /// [Required] The time offset between the end of the data window and the monitor's current run time.
        /// </summary>
        [Input("windowOffset", required: true)]
        public Input<string> WindowOffset { get; set; } = null!;

        /// <summary>
        /// [Required] The size of the trailing data window.
        /// </summary>
        [Input("windowSize", required: true)]
        public Input<string> WindowSize { get; set; } = null!;

        public TrailingInputDataArgs()
        {
        }
        public static new TrailingInputDataArgs Empty => new TrailingInputDataArgs();
    }
}
