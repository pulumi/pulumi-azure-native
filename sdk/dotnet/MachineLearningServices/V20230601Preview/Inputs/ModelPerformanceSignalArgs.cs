// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20230601Preview.Inputs
{

    /// <summary>
    /// Model performance signal definition.
    /// </summary>
    public sealed class ModelPerformanceSignalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The data segment.
        /// </summary>
        [Input("dataSegment")]
        public Input<Inputs.MonitoringDataSegmentArgs>? DataSegment { get; set; }

        /// <summary>
        /// [Required] A list of metrics to calculate and their associated thresholds.
        /// </summary>
        [Input("metricThreshold", required: true)]
        public InputUnion<Inputs.ClassificationModelPerformanceMetricThresholdArgs, Inputs.RegressionModelPerformanceMetricThresholdArgs> MetricThreshold { get; set; } = null!;

        /// <summary>
        /// The current notification mode for this signal.
        /// </summary>
        [Input("mode")]
        public InputUnion<string, Pulumi.AzureNative.MachineLearningServices.V20230601Preview.MonitoringNotificationMode>? Mode { get; set; }

        [Input("productionData", required: true)]
        private InputList<object>? _productionData;

        /// <summary>
        /// [Required] The data produced by the production service which drift will be calculated for.
        /// </summary>
        public InputList<object> ProductionData
        {
            get => _productionData ?? (_productionData = new InputList<object>());
            set => _productionData = value;
        }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// Property dictionary. Properties can be added, but not removed or altered.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        /// <summary>
        /// [Required] The data to calculate drift against.
        /// </summary>
        [Input("referenceData", required: true)]
        public object ReferenceData { get; set; } = null!;

        /// <summary>
        /// 
        /// Expected value is 'ModelPerformance'.
        /// </summary>
        [Input("signalType", required: true)]
        public Input<string> SignalType { get; set; } = null!;

        public ModelPerformanceSignalArgs()
        {
            Mode = "Disabled";
        }
        public static new ModelPerformanceSignalArgs Empty => new ModelPerformanceSignalArgs();
    }
}
