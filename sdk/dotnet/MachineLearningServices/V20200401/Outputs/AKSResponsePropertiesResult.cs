// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.MachineLearningServices.V20200401.Outputs
{

    [OutputType]
    public sealed class AKSResponsePropertiesResult
    {
        /// <summary>
        /// Number of agents
        /// </summary>
        public readonly int? AgentCount;
        /// <summary>
        /// Agent virtual machine size
        /// </summary>
        public readonly string? AgentVMSize;
        /// <summary>
        /// AKS networking configuration for vnet
        /// </summary>
        public readonly Outputs.AksNetworkingConfigurationResponseResult? AksNetworkingConfiguration;
        /// <summary>
        /// Cluster full qualified domain name
        /// </summary>
        public readonly string? ClusterFqdn;
        public readonly string? ClusterPurpose;
        /// <summary>
        /// SSL configuration
        /// </summary>
        public readonly Outputs.SslConfigurationResponseResult? SslConfiguration;
        /// <summary>
        /// System services
        /// </summary>
        public readonly ImmutableArray<Outputs.SystemServiceResponseResult> SystemServices;

        [OutputConstructor]
        private AKSResponsePropertiesResult(
            int? agentCount,

            string? agentVMSize,

            Outputs.AksNetworkingConfigurationResponseResult? aksNetworkingConfiguration,

            string? clusterFqdn,

            string? clusterPurpose,

            Outputs.SslConfigurationResponseResult? sslConfiguration,

            ImmutableArray<Outputs.SystemServiceResponseResult> systemServices)
        {
            AgentCount = agentCount;
            AgentVMSize = agentVMSize;
            AksNetworkingConfiguration = aksNetworkingConfiguration;
            ClusterFqdn = clusterFqdn;
            ClusterPurpose = clusterPurpose;
            SslConfiguration = sslConfiguration;
            SystemServices = systemServices;
        }
    }
}
