// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20230701Preview
{
    public static class GetPrivateResolverVirtualNetworkLink
    {
        /// <summary>
        /// Gets properties of a virtual network link to a DNS forwarding ruleset.
        /// </summary>
        public static Task<GetPrivateResolverVirtualNetworkLinkResult> InvokeAsync(GetPrivateResolverVirtualNetworkLinkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateResolverVirtualNetworkLinkResult>("azure-native:network/v20230701preview:getPrivateResolverVirtualNetworkLink", args ?? new GetPrivateResolverVirtualNetworkLinkArgs(), options.WithDefaults());

        /// <summary>
        /// Gets properties of a virtual network link to a DNS forwarding ruleset.
        /// </summary>
        public static Output<GetPrivateResolverVirtualNetworkLinkResult> Invoke(GetPrivateResolverVirtualNetworkLinkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateResolverVirtualNetworkLinkResult>("azure-native:network/v20230701preview:getPrivateResolverVirtualNetworkLink", args ?? new GetPrivateResolverVirtualNetworkLinkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateResolverVirtualNetworkLinkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DNS forwarding ruleset.
        /// </summary>
        [Input("dnsForwardingRulesetName", required: true)]
        public string DnsForwardingRulesetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual network link.
        /// </summary>
        [Input("virtualNetworkLinkName", required: true)]
        public string VirtualNetworkLinkName { get; set; } = null!;

        public GetPrivateResolverVirtualNetworkLinkArgs()
        {
        }
        public static new GetPrivateResolverVirtualNetworkLinkArgs Empty => new GetPrivateResolverVirtualNetworkLinkArgs();
    }

    public sealed class GetPrivateResolverVirtualNetworkLinkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DNS forwarding ruleset.
        /// </summary>
        [Input("dnsForwardingRulesetName", required: true)]
        public Input<string> DnsForwardingRulesetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual network link.
        /// </summary>
        [Input("virtualNetworkLinkName", required: true)]
        public Input<string> VirtualNetworkLinkName { get; set; } = null!;

        public GetPrivateResolverVirtualNetworkLinkInvokeArgs()
        {
        }
        public static new GetPrivateResolverVirtualNetworkLinkInvokeArgs Empty => new GetPrivateResolverVirtualNetworkLinkInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateResolverVirtualNetworkLinkResult
    {
        /// <summary>
        /// ETag of the virtual network link.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Metadata attached to the virtual network link.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Metadata;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current provisioning state of the virtual network link. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The reference to the virtual network. This cannot be changed after creation.
        /// </summary>
        public readonly Outputs.SubResourceResponse VirtualNetwork;

        [OutputConstructor]
        private GetPrivateResolverVirtualNetworkLinkResult(
            string etag,

            string id,

            ImmutableDictionary<string, string>? metadata,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type,

            Outputs.SubResourceResponse virtualNetwork)
        {
            Etag = etag;
            Id = id;
            Metadata = metadata;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
            VirtualNetwork = virtualNetwork;
        }
    }
}
