// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20230701Preview
{
    public static class GetNetworkSecurityPerimeter
    {
        /// <summary>
        /// Gets the specified network security perimeter by the name.
        /// </summary>
        public static Task<GetNetworkSecurityPerimeterResult> InvokeAsync(GetNetworkSecurityPerimeterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkSecurityPerimeterResult>("azure-native:network/v20230701preview:getNetworkSecurityPerimeter", args ?? new GetNetworkSecurityPerimeterArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified network security perimeter by the name.
        /// </summary>
        public static Output<GetNetworkSecurityPerimeterResult> Invoke(GetNetworkSecurityPerimeterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkSecurityPerimeterResult>("azure-native:network/v20230701preview:getNetworkSecurityPerimeter", args ?? new GetNetworkSecurityPerimeterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkSecurityPerimeterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network security perimeter.
        /// </summary>
        [Input("networkSecurityPerimeterName", required: true)]
        public string NetworkSecurityPerimeterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNetworkSecurityPerimeterArgs()
        {
        }
        public static new GetNetworkSecurityPerimeterArgs Empty => new GetNetworkSecurityPerimeterArgs();
    }

    public sealed class GetNetworkSecurityPerimeterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network security perimeter.
        /// </summary>
        [Input("networkSecurityPerimeterName", required: true)]
        public Input<string> NetworkSecurityPerimeterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNetworkSecurityPerimeterInvokeArgs()
        {
        }
        public static new GetNetworkSecurityPerimeterInvokeArgs Empty => new GetNetworkSecurityPerimeterInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkSecurityPerimeterResult
    {
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// perimeter guid of the network security perimeter.
        /// </summary>
        public readonly string PerimeterGuid;
        /// <summary>
        /// The provisioning state of the scope assignment resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNetworkSecurityPerimeterResult(
            string id,

            string? location,

            string name,

            string perimeterGuid,

            string provisioningState,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            PerimeterGuid = perimeterGuid;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
        }
    }
}
