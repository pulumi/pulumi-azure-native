// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20230701Preview
{
    /// <summary>
    /// Represents the DNSSEC configuration.
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20230701preview:DnssecConfig")]
    public partial class DnssecConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The etag of the DNSSEC configuration.
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// The name of the DNSSEC configuration.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning State of the DNSSEC configuration.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The list of signing keys.
        /// </summary>
        [Output("signingKeys")]
        public Output<ImmutableArray<Outputs.SigningKeyResponse>> SigningKeys { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the DNSSEC configuration.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DnssecConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DnssecConfig(string name, DnssecConfigArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20230701preview:DnssecConfig", name, args ?? new DnssecConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DnssecConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20230701preview:DnssecConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:DnssecConfig"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DnssecConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DnssecConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DnssecConfig(name, id, options);
        }
    }

    public sealed class DnssecConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the DNS zone (without a terminating dot).
        /// </summary>
        [Input("zoneName", required: true)]
        public Input<string> ZoneName { get; set; } = null!;

        public DnssecConfigArgs()
        {
        }
        public static new DnssecConfigArgs Empty => new DnssecConfigArgs();
    }
}
