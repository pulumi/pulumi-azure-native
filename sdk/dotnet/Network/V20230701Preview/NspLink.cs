// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20230701Preview
{
    /// <summary>
    /// The network security perimeter link resource
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20230701preview:NspLink")]
    public partial class NspLink : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
        /// </summary>
        [Output("autoApprovedRemotePerimeterResourceId")]
        public Output<string?> AutoApprovedRemotePerimeterResourceId { get; private set; } = null!;

        /// <summary>
        /// A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
        /// </summary>
        [Output("localInboundProfiles")]
        public Output<ImmutableArray<string>> LocalInboundProfiles { get; private set; } = null!;

        /// <summary>
        /// Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
        /// </summary>
        [Output("localOutboundProfiles")]
        public Output<ImmutableArray<string>> LocalOutboundProfiles { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the NSP Link resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
        /// </summary>
        [Output("remoteInboundProfiles")]
        public Output<ImmutableArray<string>> RemoteInboundProfiles { get; private set; } = null!;

        /// <summary>
        /// Remote Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
        /// </summary>
        [Output("remoteOutboundProfiles")]
        public Output<ImmutableArray<string>> RemoteOutboundProfiles { get; private set; } = null!;

        /// <summary>
        /// Remote NSP Guid with which the link gets created.
        /// </summary>
        [Output("remotePerimeterGuid")]
        public Output<string> RemotePerimeterGuid { get; private set; } = null!;

        /// <summary>
        /// Remote NSP location with which the link gets created.
        /// </summary>
        [Output("remotePerimeterLocation")]
        public Output<string> RemotePerimeterLocation { get; private set; } = null!;

        /// <summary>
        /// The NSP link state.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NspLink resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NspLink(string name, NspLinkArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20230701preview:NspLink", name, args ?? new NspLinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NspLink(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20230701preview:NspLink", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:NspLink" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210201preview:NspLink" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230801preview:NspLink" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NspLink resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NspLink Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NspLink(name, id, options);
        }
    }

    public sealed class NspLinkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
        /// </summary>
        [Input("autoApprovedRemotePerimeterResourceId")]
        public Input<string>? AutoApprovedRemotePerimeterResourceId { get; set; }

        /// <summary>
        /// A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the NSP link.
        /// </summary>
        [Input("linkName")]
        public Input<string>? LinkName { get; set; }

        [Input("localInboundProfiles")]
        private InputList<string>? _localInboundProfiles;

        /// <summary>
        /// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
        /// </summary>
        public InputList<string> LocalInboundProfiles
        {
            get => _localInboundProfiles ?? (_localInboundProfiles = new InputList<string>());
            set => _localInboundProfiles = value;
        }

        /// <summary>
        /// The name of the network security perimeter.
        /// </summary>
        [Input("networkSecurityPerimeterName", required: true)]
        public Input<string> NetworkSecurityPerimeterName { get; set; } = null!;

        [Input("remoteInboundProfiles")]
        private InputList<string>? _remoteInboundProfiles;

        /// <summary>
        /// Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
        /// </summary>
        public InputList<string> RemoteInboundProfiles
        {
            get => _remoteInboundProfiles ?? (_remoteInboundProfiles = new InputList<string>());
            set => _remoteInboundProfiles = value;
        }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public NspLinkArgs()
        {
        }
        public static new NspLinkArgs Empty => new NspLinkArgs();
    }
}
