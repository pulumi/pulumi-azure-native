// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    /// <summary>
    /// The NSP resource association resource
    /// Azure REST API version: 2021-02-01-preview. Prior API version in Azure Native 1.x: 2021-02-01-preview
    /// </summary>
    [AzureNativeResourceType("azure-native:network:NspAssociation")]
    public partial class NspAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Access mode on the association.
        /// </summary>
        [Output("accessMode")]
        public Output<string?> AccessMode { get; private set; } = null!;

        /// <summary>
        /// Specifies if there are provisioning issues
        /// </summary>
        [Output("hasProvisioningIssues")]
        public Output<string> HasProvisioningIssues { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The PaaS resource to be associated.
        /// </summary>
        [Output("privateLinkResource")]
        public Output<Outputs.SubResourceResponse?> PrivateLinkResource { get; private set; } = null!;

        /// <summary>
        /// Profile id to which the PaaS resource is associated.
        /// </summary>
        [Output("profile")]
        public Output<Outputs.SubResourceResponse?> Profile { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the resource  association resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NspAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NspAssociation(string name, NspAssociationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network:NspAssociation", name, args ?? new NspAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NspAssociation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network:NspAssociation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210201preview:NspAssociation"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NspAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NspAssociation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NspAssociation(name, id, options);
        }
    }

    public sealed class NspAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access mode on the association.
        /// </summary>
        [Input("accessMode")]
        public InputUnion<string, Pulumi.AzureNative.Network.AssociationAccessMode>? AccessMode { get; set; }

        /// <summary>
        /// The name of the NSP association.
        /// </summary>
        [Input("associationName")]
        public Input<string>? AssociationName { get; set; }

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the network security perimeter.
        /// </summary>
        [Input("networkSecurityPerimeterName", required: true)]
        public Input<string> NetworkSecurityPerimeterName { get; set; } = null!;

        /// <summary>
        /// The PaaS resource to be associated.
        /// </summary>
        [Input("privateLinkResource")]
        public Input<Inputs.SubResourceArgs>? PrivateLinkResource { get; set; }

        /// <summary>
        /// Profile id to which the PaaS resource is associated.
        /// </summary>
        [Input("profile")]
        public Input<Inputs.SubResourceArgs>? Profile { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public NspAssociationArgs()
        {
        }
        public static new NspAssociationArgs Empty => new NspAssociationArgs();
    }
}
