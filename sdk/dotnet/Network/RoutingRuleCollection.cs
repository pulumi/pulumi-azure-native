// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    /// <summary>
    /// Defines the routing rule collection.
    /// Azure REST API version: 2024-03-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:network:RoutingRuleCollection")]
    public partial class RoutingRuleCollection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Groups for configuration
        /// </summary>
        [Output("appliesTo")]
        public Output<ImmutableArray<Outputs.NetworkManagerRoutingGroupItemResponse>> AppliesTo { get; private set; } = null!;

        /// <summary>
        /// A description of the routing rule collection.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Determines whether BGP route propagation is enabled. Defaults to true.
        /// </summary>
        [Output("disableBgpRoutePropagation")]
        public Output<string?> DisableBgpRoutePropagation { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for this resource.
        /// </summary>
        [Output("resourceGuid")]
        public Output<string> ResourceGuid { get; private set; } = null!;

        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RoutingRuleCollection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoutingRuleCollection(string name, RoutingRuleCollectionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network:RoutingRuleCollection", name, args ?? new RoutingRuleCollectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RoutingRuleCollection(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network:RoutingRuleCollection", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network/v20240301:RoutingRuleCollection" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoutingRuleCollection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoutingRuleCollection Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RoutingRuleCollection(name, id, options);
        }
    }

    public sealed class RoutingRuleCollectionArgs : global::Pulumi.ResourceArgs
    {
        [Input("appliesTo", required: true)]
        private InputList<Inputs.NetworkManagerRoutingGroupItemArgs>? _appliesTo;

        /// <summary>
        /// Groups for configuration
        /// </summary>
        public InputList<Inputs.NetworkManagerRoutingGroupItemArgs> AppliesTo
        {
            get => _appliesTo ?? (_appliesTo = new InputList<Inputs.NetworkManagerRoutingGroupItemArgs>());
            set => _appliesTo = value;
        }

        /// <summary>
        /// The name of the network manager Routing Configuration.
        /// </summary>
        [Input("configurationName", required: true)]
        public Input<string> ConfigurationName { get; set; } = null!;

        /// <summary>
        /// A description of the routing rule collection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Determines whether BGP route propagation is enabled. Defaults to true.
        /// </summary>
        [Input("disableBgpRoutePropagation")]
        public InputUnion<string, Pulumi.AzureNative.Network.DisableBgpRoutePropagation>? DisableBgpRoutePropagation { get; set; }

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager routing Configuration rule collection.
        /// </summary>
        [Input("ruleCollectionName")]
        public Input<string>? RuleCollectionName { get; set; }

        public RoutingRuleCollectionArgs()
        {
        }
        public static new RoutingRuleCollectionArgs Empty => new RoutingRuleCollectionArgs();
    }
}
