// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20180801.Outputs
{

    [OutputType]
    public sealed class ApplicationGatewayTrustedRootCertificateResponse
    {
        /// <summary>
        /// Certificate public data.
        /// </summary>
        public readonly string? Data;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// KeyVault Secret Id for certificate.
        /// </summary>
        public readonly string? KeyvaultSecretId;
        /// <summary>
        /// Name of the trusted root certificate that is unique within an Application Gateway.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private ApplicationGatewayTrustedRootCertificateResponse(
            string? data,

            string? etag,

            string? id,

            string? keyvaultSecretId,

            string? name,

            string? provisioningState,

            string? type)
        {
            Data = data;
            Etag = etag;
            Id = id;
            KeyvaultSecretId = keyvaultSecretId;
            Name = name;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
