// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220401Preview
{
    public static class GetManagementGroupNetworkManagerConnection
    {
        /// <summary>
        /// The Network Manager Connection resource
        /// </summary>
        public static Task<GetManagementGroupNetworkManagerConnectionResult> InvokeAsync(GetManagementGroupNetworkManagerConnectionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagementGroupNetworkManagerConnectionResult>("azure-native:network/v20220401preview:getManagementGroupNetworkManagerConnection", args ?? new GetManagementGroupNetworkManagerConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// The Network Manager Connection resource
        /// </summary>
        public static Output<GetManagementGroupNetworkManagerConnectionResult> Invoke(GetManagementGroupNetworkManagerConnectionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetManagementGroupNetworkManagerConnectionResult>("azure-native:network/v20220401preview:getManagementGroupNetworkManagerConnection", args ?? new GetManagementGroupNetworkManagerConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagementGroupNetworkManagerConnectionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The management group Id which uniquely identify the Microsoft Azure management group.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public string ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// Name for the network manager connection.
        /// </summary>
        [Input("networkManagerConnectionName", required: true)]
        public string NetworkManagerConnectionName { get; set; } = null!;

        public GetManagementGroupNetworkManagerConnectionArgs()
        {
        }
    }

    public sealed class GetManagementGroupNetworkManagerConnectionInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The management group Id which uniquely identify the Microsoft Azure management group.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public Input<string> ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// Name for the network manager connection.
        /// </summary>
        [Input("networkManagerConnectionName", required: true)]
        public Input<string> NetworkManagerConnectionName { get; set; } = null!;

        public GetManagementGroupNetworkManagerConnectionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetManagementGroupNetworkManagerConnectionResult
    {
        /// <summary>
        /// A description of the scope connection.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network Manager Id.
        /// </summary>
        public readonly string? NetworkManagerId;
        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagementGroupNetworkManagerConnectionResult(
            string? description,

            string etag,

            string id,

            string name,

            string? networkManagerId,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Description = description;
            Etag = etag;
            Id = id;
            Name = name;
            NetworkManagerId = networkManagerId;
            SystemData = systemData;
            Type = type;
        }
    }
}
