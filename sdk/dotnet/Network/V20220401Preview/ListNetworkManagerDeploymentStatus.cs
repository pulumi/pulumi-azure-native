// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220401Preview
{
    public static class ListNetworkManagerDeploymentStatus
    {
        /// <summary>
        /// Post to List of Network Manager Deployment Status.
        /// </summary>
        public static Task<ListNetworkManagerDeploymentStatusResult> InvokeAsync(ListNetworkManagerDeploymentStatusArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListNetworkManagerDeploymentStatusResult>("azure-native:network/v20220401preview:listNetworkManagerDeploymentStatus", args ?? new ListNetworkManagerDeploymentStatusArgs(), options.WithDefaults());

        /// <summary>
        /// Post to List of Network Manager Deployment Status.
        /// </summary>
        public static Output<ListNetworkManagerDeploymentStatusResult> Invoke(ListNetworkManagerDeploymentStatusInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListNetworkManagerDeploymentStatusResult>("azure-native:network/v20220401preview:listNetworkManagerDeploymentStatus", args ?? new ListNetworkManagerDeploymentStatusInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListNetworkManagerDeploymentStatusArgs : global::Pulumi.InvokeArgs
    {
        [Input("deploymentTypes")]
        private List<Union<string, Pulumi.AzureNative.Network.V20220401Preview.ConfigurationType>>? _deploymentTypes;

        /// <summary>
        /// List of deployment types.
        /// </summary>
        public List<Union<string, Pulumi.AzureNative.Network.V20220401Preview.ConfigurationType>> DeploymentTypes
        {
            get => _deploymentTypes ?? (_deploymentTypes = new List<Union<string, Pulumi.AzureNative.Network.V20220401Preview.ConfigurationType>>());
            set => _deploymentTypes = value;
        }

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public string NetworkManagerName { get; set; } = null!;

        [Input("regions")]
        private List<string>? _regions;

        /// <summary>
        /// List of locations.
        /// </summary>
        public List<string> Regions
        {
            get => _regions ?? (_regions = new List<string>());
            set => _regions = value;
        }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
        /// </summary>
        [Input("skipToken")]
        public string? SkipToken { get; set; }

        public ListNetworkManagerDeploymentStatusArgs()
        {
        }
        public static new ListNetworkManagerDeploymentStatusArgs Empty => new ListNetworkManagerDeploymentStatusArgs();
    }

    public sealed class ListNetworkManagerDeploymentStatusInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("deploymentTypes")]
        private InputList<Union<string, Pulumi.AzureNative.Network.V20220401Preview.ConfigurationType>>? _deploymentTypes;

        /// <summary>
        /// List of deployment types.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.Network.V20220401Preview.ConfigurationType>> DeploymentTypes
        {
            get => _deploymentTypes ?? (_deploymentTypes = new InputList<Union<string, Pulumi.AzureNative.Network.V20220401Preview.ConfigurationType>>());
            set => _deploymentTypes = value;
        }

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        [Input("regions")]
        private InputList<string>? _regions;

        /// <summary>
        /// List of locations.
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
        /// </summary>
        [Input("skipToken")]
        public Input<string>? SkipToken { get; set; }

        public ListNetworkManagerDeploymentStatusInvokeArgs()
        {
        }
        public static new ListNetworkManagerDeploymentStatusInvokeArgs Empty => new ListNetworkManagerDeploymentStatusInvokeArgs();
    }


    [OutputType]
    public sealed class ListNetworkManagerDeploymentStatusResult
    {
        /// <summary>
        /// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
        /// </summary>
        public readonly string? SkipToken;
        /// <summary>
        /// Gets a page of Network Manager Deployment Status
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkManagerDeploymentStatusResponse> Value;

        [OutputConstructor]
        private ListNetworkManagerDeploymentStatusResult(
            string? skipToken,

            ImmutableArray<Outputs.NetworkManagerDeploymentStatusResponse> value)
        {
            SkipToken = skipToken;
            Value = value;
        }
    }
}
