// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220401Preview
{
    public static class GetDefaultAdminRule
    {
        /// <summary>
        /// Network default admin rule.
        /// </summary>
        public static Task<GetDefaultAdminRuleResult> InvokeAsync(GetDefaultAdminRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDefaultAdminRuleResult>("azure-native:network/v20220401preview:getDefaultAdminRule", args ?? new GetDefaultAdminRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Network default admin rule.
        /// </summary>
        public static Output<GetDefaultAdminRuleResult> Invoke(GetDefaultAdminRuleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDefaultAdminRuleResult>("azure-native:network/v20220401preview:getDefaultAdminRule", args ?? new GetDefaultAdminRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDefaultAdminRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager Security Configuration.
        /// </summary>
        [Input("configurationName", required: true)]
        public string ConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public string NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager security Configuration rule collection.
        /// </summary>
        [Input("ruleCollectionName", required: true)]
        public string RuleCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public string RuleName { get; set; } = null!;

        public GetDefaultAdminRuleArgs()
        {
        }
        public static new GetDefaultAdminRuleArgs Empty => new GetDefaultAdminRuleArgs();
    }

    public sealed class GetDefaultAdminRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager Security Configuration.
        /// </summary>
        [Input("configurationName", required: true)]
        public Input<string> ConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager security Configuration rule collection.
        /// </summary>
        [Input("ruleCollectionName", required: true)]
        public Input<string> RuleCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        public GetDefaultAdminRuleInvokeArgs()
        {
        }
        public static new GetDefaultAdminRuleInvokeArgs Empty => new GetDefaultAdminRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetDefaultAdminRuleResult
    {
        /// <summary>
        /// Indicates the access allowed for this particular rule
        /// </summary>
        public readonly string Access;
        /// <summary>
        /// A description for this rule. Restricted to 140 chars.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The destination port ranges.
        /// </summary>
        public readonly ImmutableArray<string> DestinationPortRanges;
        /// <summary>
        /// The destination address prefixes. CIDR or destination IP ranges.
        /// </summary>
        public readonly ImmutableArray<Outputs.AddressPrefixItemResponse> Destinations;
        /// <summary>
        /// Indicates if the traffic matched against the rule in inbound or outbound.
        /// </summary>
        public readonly string Direction;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Default rule flag.
        /// </summary>
        public readonly string? Flag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the rule is custom or default.
        /// Expected value is 'Default'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Network protocol this rule applies to.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The source port ranges.
        /// </summary>
        public readonly ImmutableArray<string> SourcePortRanges;
        /// <summary>
        /// The CIDR or source IP ranges.
        /// </summary>
        public readonly ImmutableArray<Outputs.AddressPrefixItemResponse> Sources;
        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDefaultAdminRuleResult(
            string access,

            string description,

            ImmutableArray<string> destinationPortRanges,

            ImmutableArray<Outputs.AddressPrefixItemResponse> destinations,

            string direction,

            string etag,

            string? flag,

            string id,

            string kind,

            string name,

            int priority,

            string protocol,

            string provisioningState,

            ImmutableArray<string> sourcePortRanges,

            ImmutableArray<Outputs.AddressPrefixItemResponse> sources,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Access = access;
            Description = description;
            DestinationPortRanges = destinationPortRanges;
            Destinations = destinations;
            Direction = direction;
            Etag = etag;
            Flag = flag;
            Id = id;
            Kind = kind;
            Name = name;
            Priority = priority;
            Protocol = protocol;
            ProvisioningState = provisioningState;
            SourcePortRanges = sourcePortRanges;
            Sources = sources;
            SystemData = systemData;
            Type = type;
        }
    }
}
