// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220401Preview
{
    public static class GetSecurityUserConfiguration
    {
        /// <summary>
        /// Defines the security user configuration
        /// </summary>
        public static Task<GetSecurityUserConfigurationResult> InvokeAsync(GetSecurityUserConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecurityUserConfigurationResult>("azure-native:network/v20220401preview:getSecurityUserConfiguration", args ?? new GetSecurityUserConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Defines the security user configuration
        /// </summary>
        public static Output<GetSecurityUserConfigurationResult> Invoke(GetSecurityUserConfigurationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSecurityUserConfigurationResult>("azure-native:network/v20220401preview:getSecurityUserConfiguration", args ?? new GetSecurityUserConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityUserConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager Security Configuration.
        /// </summary>
        [Input("configurationName", required: true)]
        public string ConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public string NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetSecurityUserConfigurationArgs()
        {
        }
    }

    public sealed class GetSecurityUserConfigurationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager Security Configuration.
        /// </summary>
        [Input("configurationName", required: true)]
        public Input<string> ConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetSecurityUserConfigurationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecurityUserConfigurationResult
    {
        /// <summary>
        /// Flag if need to delete existing network security groups.
        /// </summary>
        public readonly string? DeleteExistingNSGs;
        /// <summary>
        /// A description of the security user configuration.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSecurityUserConfigurationResult(
            string? deleteExistingNSGs,

            string? description,

            string etag,

            string id,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            DeleteExistingNSGs = deleteExistingNSGs;
            Description = description;
            Etag = etag;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
