// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20210801
{
    public static class GetExpressRoutePortAuthorization
    {
        /// <summary>
        /// ExpressRoutePort Authorization resource definition.
        /// </summary>
        public static Task<GetExpressRoutePortAuthorizationResult> InvokeAsync(GetExpressRoutePortAuthorizationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetExpressRoutePortAuthorizationResult>("azure-native:network/v20210801:getExpressRoutePortAuthorization", args ?? new GetExpressRoutePortAuthorizationArgs(), options.WithDefaults());

        /// <summary>
        /// ExpressRoutePort Authorization resource definition.
        /// </summary>
        public static Output<GetExpressRoutePortAuthorizationResult> Invoke(GetExpressRoutePortAuthorizationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetExpressRoutePortAuthorizationResult>("azure-native:network/v20210801:getExpressRoutePortAuthorization", args ?? new GetExpressRoutePortAuthorizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExpressRoutePortAuthorizationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the authorization.
        /// </summary>
        [Input("authorizationName", required: true)]
        public string AuthorizationName { get; set; } = null!;

        /// <summary>
        /// The name of the express route port.
        /// </summary>
        [Input("expressRoutePortName", required: true)]
        public string ExpressRoutePortName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetExpressRoutePortAuthorizationArgs()
        {
        }
    }

    public sealed class GetExpressRoutePortAuthorizationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the authorization.
        /// </summary>
        [Input("authorizationName", required: true)]
        public Input<string> AuthorizationName { get; set; } = null!;

        /// <summary>
        /// The name of the express route port.
        /// </summary>
        [Input("expressRoutePortName", required: true)]
        public Input<string> ExpressRoutePortName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetExpressRoutePortAuthorizationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetExpressRoutePortAuthorizationResult
    {
        /// <summary>
        /// The authorization key.
        /// </summary>
        public readonly string AuthorizationKey;
        /// <summary>
        /// The authorization use status.
        /// </summary>
        public readonly string AuthorizationUseStatus;
        /// <summary>
        /// The reference to the ExpressRoute circuit resource using the authorization.
        /// </summary>
        public readonly string CircuitResourceUri;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The provisioning state of the authorization resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetExpressRoutePortAuthorizationResult(
            string authorizationKey,

            string authorizationUseStatus,

            string circuitResourceUri,

            string etag,

            string? id,

            string? name,

            string provisioningState,

            string type)
        {
            AuthorizationKey = authorizationKey;
            AuthorizationUseStatus = authorizationUseStatus;
            CircuitResourceUri = circuitResourceUri;
            Etag = etag;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
