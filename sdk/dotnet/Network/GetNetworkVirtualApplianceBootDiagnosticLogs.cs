// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class GetNetworkVirtualApplianceBootDiagnosticLogs
    {
        /// <summary>
        /// Retrieves the boot diagnostic logs for a VM instance belonging to the specified Network Virtual Appliance.
        /// 
        /// Uses Azure REST API version 2024-07-01.
        /// </summary>
        public static Task<GetNetworkVirtualApplianceBootDiagnosticLogsResult> InvokeAsync(GetNetworkVirtualApplianceBootDiagnosticLogsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkVirtualApplianceBootDiagnosticLogsResult>("azure-native:network:getNetworkVirtualApplianceBootDiagnosticLogs", args ?? new GetNetworkVirtualApplianceBootDiagnosticLogsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the boot diagnostic logs for a VM instance belonging to the specified Network Virtual Appliance.
        /// 
        /// Uses Azure REST API version 2024-07-01.
        /// </summary>
        public static Output<GetNetworkVirtualApplianceBootDiagnosticLogsResult> Invoke(GetNetworkVirtualApplianceBootDiagnosticLogsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkVirtualApplianceBootDiagnosticLogsResult>("azure-native:network:getNetworkVirtualApplianceBootDiagnosticLogs", args ?? new GetNetworkVirtualApplianceBootDiagnosticLogsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the boot diagnostic logs for a VM instance belonging to the specified Network Virtual Appliance.
        /// 
        /// Uses Azure REST API version 2024-07-01.
        /// </summary>
        public static Output<GetNetworkVirtualApplianceBootDiagnosticLogsResult> Invoke(GetNetworkVirtualApplianceBootDiagnosticLogsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkVirtualApplianceBootDiagnosticLogsResult>("azure-native:network:getNetworkVirtualApplianceBootDiagnosticLogs", args ?? new GetNetworkVirtualApplianceBootDiagnosticLogsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkVirtualApplianceBootDiagnosticLogsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the sas-url to the storage blob into which console screen shot for the requested instance will be written
        /// </summary>
        [Input("consoleScreenshotStorageSasUrl")]
        public string? ConsoleScreenshotStorageSasUrl { get; set; }

        /// <summary>
        /// The network virtual appliance instance id for which boot diagnostic logs is being requested
        /// </summary>
        [Input("instanceId")]
        public int? InstanceId { get; set; }

        /// <summary>
        /// The name of Network Virtual Appliance.
        /// </summary>
        [Input("networkVirtualApplianceName", required: true)]
        public string NetworkVirtualApplianceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the sas-url to the storage blob into which serial console logs for the requested instance will be written
        /// </summary>
        [Input("serialConsoleStorageSasUrl")]
        public string? SerialConsoleStorageSasUrl { get; set; }

        public GetNetworkVirtualApplianceBootDiagnosticLogsArgs()
        {
        }
        public static new GetNetworkVirtualApplianceBootDiagnosticLogsArgs Empty => new GetNetworkVirtualApplianceBootDiagnosticLogsArgs();
    }

    public sealed class GetNetworkVirtualApplianceBootDiagnosticLogsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the sas-url to the storage blob into which console screen shot for the requested instance will be written
        /// </summary>
        [Input("consoleScreenshotStorageSasUrl")]
        public Input<string>? ConsoleScreenshotStorageSasUrl { get; set; }

        /// <summary>
        /// The network virtual appliance instance id for which boot diagnostic logs is being requested
        /// </summary>
        [Input("instanceId")]
        public Input<int>? InstanceId { get; set; }

        /// <summary>
        /// The name of Network Virtual Appliance.
        /// </summary>
        [Input("networkVirtualApplianceName", required: true)]
        public Input<string> NetworkVirtualApplianceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the sas-url to the storage blob into which serial console logs for the requested instance will be written
        /// </summary>
        [Input("serialConsoleStorageSasUrl")]
        public Input<string>? SerialConsoleStorageSasUrl { get; set; }

        public GetNetworkVirtualApplianceBootDiagnosticLogsInvokeArgs()
        {
        }
        public static new GetNetworkVirtualApplianceBootDiagnosticLogsInvokeArgs Empty => new GetNetworkVirtualApplianceBootDiagnosticLogsInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkVirtualApplianceBootDiagnosticLogsResult
    {
        /// <summary>
        /// The network virtual appliance instance id for which boot diagnostic logs is being requested
        /// </summary>
        public readonly int? InstanceId;

        [OutputConstructor]
        private GetNetworkVirtualApplianceBootDiagnosticLogsResult(int? instanceId)
        {
            InstanceId = instanceId;
        }
    }
}
