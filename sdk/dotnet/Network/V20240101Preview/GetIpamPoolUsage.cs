// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240101Preview
{
    public static class GetIpamPoolUsage
    {
        /// <summary>
        /// IpamPool usage information.
        /// </summary>
        public static Task<GetIpamPoolUsageResult> InvokeAsync(GetIpamPoolUsageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpamPoolUsageResult>("azure-native:network/v20240101preview:getIpamPoolUsage", args ?? new GetIpamPoolUsageArgs(), options.WithDefaults());

        /// <summary>
        /// IpamPool usage information.
        /// </summary>
        public static Output<GetIpamPoolUsageResult> Invoke(GetIpamPoolUsageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpamPoolUsageResult>("azure-native:network/v20240101preview:getIpamPoolUsage", args ?? new GetIpamPoolUsageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpamPoolUsageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public string NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// Pool resource name.
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetIpamPoolUsageArgs()
        {
        }
        public static new GetIpamPoolUsageArgs Empty => new GetIpamPoolUsageArgs();
    }

    public sealed class GetIpamPoolUsageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// Pool resource name.
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetIpamPoolUsageInvokeArgs()
        {
        }
        public static new GetIpamPoolUsageInvokeArgs Empty => new GetIpamPoolUsageInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpamPoolUsageResult
    {
        /// <summary>
        /// List of IP address prefixes of the resource.
        /// </summary>
        public readonly ImmutableArray<string> AddressPrefixes;
        /// <summary>
        /// List of assigned IP address prefixes.
        /// </summary>
        public readonly ImmutableArray<string> AllocatedAddressPrefixes;
        /// <summary>
        /// List of available IP address prefixes.
        /// </summary>
        public readonly ImmutableArray<string> AvailableAddressPrefixes;
        /// <summary>
        /// List of IpamPool that are children of this IpamPool.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceBasicsResponse> ChildPools;
        /// <summary>
        /// Total number of assigned IP addresses in the IpamPool.
        /// </summary>
        public readonly string NumberOfAllocatedIPAddresses;
        /// <summary>
        /// Total number of available IP addresses in the IpamPool.
        /// </summary>
        public readonly string NumberOfAvailableIPAddresses;
        /// <summary>
        /// Total number of reserved IP addresses in the IpamPool.
        /// </summary>
        public readonly string NumberOfReservedIPAddresses;
        /// <summary>
        /// List of reserved IP address prefixes. These IP addresses could be reclaimed if not assigned in the given time.
        /// </summary>
        public readonly ImmutableArray<string> ReservedAddressPrefixes;
        /// <summary>
        /// Total number of IP addresses managed in the IpamPool.
        /// </summary>
        public readonly string TotalNumberOfIPAddresses;

        [OutputConstructor]
        private GetIpamPoolUsageResult(
            ImmutableArray<string> addressPrefixes,

            ImmutableArray<string> allocatedAddressPrefixes,

            ImmutableArray<string> availableAddressPrefixes,

            ImmutableArray<Outputs.ResourceBasicsResponse> childPools,

            string numberOfAllocatedIPAddresses,

            string numberOfAvailableIPAddresses,

            string numberOfReservedIPAddresses,

            ImmutableArray<string> reservedAddressPrefixes,

            string totalNumberOfIPAddresses)
        {
            AddressPrefixes = addressPrefixes;
            AllocatedAddressPrefixes = allocatedAddressPrefixes;
            AvailableAddressPrefixes = availableAddressPrefixes;
            ChildPools = childPools;
            NumberOfAllocatedIPAddresses = numberOfAllocatedIPAddresses;
            NumberOfAvailableIPAddresses = numberOfAvailableIPAddresses;
            NumberOfReservedIPAddresses = numberOfReservedIPAddresses;
            ReservedAddressPrefixes = reservedAddressPrefixes;
            TotalNumberOfIPAddresses = totalNumberOfIPAddresses;
        }
    }
}
