// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240101Preview
{
    public static class GetStaticCidr
    {
        /// <summary>
        /// Instance of StaticCidr resource.
        /// </summary>
        public static Task<GetStaticCidrResult> InvokeAsync(GetStaticCidrArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStaticCidrResult>("azure-native:network/v20240101preview:getStaticCidr", args ?? new GetStaticCidrArgs(), options.WithDefaults());

        /// <summary>
        /// Instance of StaticCidr resource.
        /// </summary>
        public static Output<GetStaticCidrResult> Invoke(GetStaticCidrInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStaticCidrResult>("azure-native:network/v20240101preview:getStaticCidr", args ?? new GetStaticCidrInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStaticCidrArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public string NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// Pool resource name.
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// StaticCidr resource name to retrieve.
        /// </summary>
        [Input("staticCidrName", required: true)]
        public string StaticCidrName { get; set; } = null!;

        public GetStaticCidrArgs()
        {
        }
        public static new GetStaticCidrArgs Empty => new GetStaticCidrArgs();
    }

    public sealed class GetStaticCidrInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// Pool resource name.
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// StaticCidr resource name to retrieve.
        /// </summary>
        [Input("staticCidrName", required: true)]
        public Input<string> StaticCidrName { get; set; } = null!;

        public GetStaticCidrInvokeArgs()
        {
        }
        public static new GetStaticCidrInvokeArgs Empty => new GetStaticCidrInvokeArgs();
    }


    [OutputType]
    public sealed class GetStaticCidrResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of static CIDR resource.
        /// </summary>
        public readonly Outputs.StaticCidrPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStaticCidrResult(
            string id,

            string name,

            Outputs.StaticCidrPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
