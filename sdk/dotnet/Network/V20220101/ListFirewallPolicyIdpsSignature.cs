// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220101
{
    public static class ListFirewallPolicyIdpsSignature
    {
        /// <summary>
        /// Query result
        /// </summary>
        public static Task<ListFirewallPolicyIdpsSignatureResult> InvokeAsync(ListFirewallPolicyIdpsSignatureArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListFirewallPolicyIdpsSignatureResult>("azure-native:network/v20220101:listFirewallPolicyIdpsSignature", args ?? new ListFirewallPolicyIdpsSignatureArgs(), options.WithDefaults());

        /// <summary>
        /// Query result
        /// </summary>
        public static Output<ListFirewallPolicyIdpsSignatureResult> Invoke(ListFirewallPolicyIdpsSignatureInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<ListFirewallPolicyIdpsSignatureResult>("azure-native:network/v20220101:listFirewallPolicyIdpsSignature", args ?? new ListFirewallPolicyIdpsSignatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListFirewallPolicyIdpsSignatureArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.FilterItems>? _filters;

        /// <summary>
        /// Contain all filters names and values
        /// </summary>
        public List<Inputs.FilterItems> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.FilterItems>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the Firewall Policy.
        /// </summary>
        [Input("firewallPolicyName", required: true)]
        public string FirewallPolicyName { get; set; } = null!;

        /// <summary>
        /// Column to sort response by
        /// </summary>
        [Input("orderBy")]
        public Inputs.OrderBy? OrderBy { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The number of the results to return in each page
        /// </summary>
        [Input("resultsPerPage")]
        public int? ResultsPerPage { get; set; }

        /// <summary>
        /// Search term in all columns
        /// </summary>
        [Input("search")]
        public string? Search { get; set; }

        /// <summary>
        /// The number of records matching the filter to skip
        /// </summary>
        [Input("skip")]
        public int? Skip { get; set; }

        public ListFirewallPolicyIdpsSignatureArgs()
        {
        }
        public static new ListFirewallPolicyIdpsSignatureArgs Empty => new ListFirewallPolicyIdpsSignatureArgs();
    }

    public sealed class ListFirewallPolicyIdpsSignatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.FilterItemsArgs>? _filters;

        /// <summary>
        /// Contain all filters names and values
        /// </summary>
        public InputList<Inputs.FilterItemsArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.FilterItemsArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the Firewall Policy.
        /// </summary>
        [Input("firewallPolicyName", required: true)]
        public Input<string> FirewallPolicyName { get; set; } = null!;

        /// <summary>
        /// Column to sort response by
        /// </summary>
        [Input("orderBy")]
        public Input<Inputs.OrderByArgs>? OrderBy { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The number of the results to return in each page
        /// </summary>
        [Input("resultsPerPage")]
        public Input<int>? ResultsPerPage { get; set; }

        /// <summary>
        /// Search term in all columns
        /// </summary>
        [Input("search")]
        public Input<string>? Search { get; set; }

        /// <summary>
        /// The number of records matching the filter to skip
        /// </summary>
        [Input("skip")]
        public Input<int>? Skip { get; set; }

        public ListFirewallPolicyIdpsSignatureInvokeArgs()
        {
        }
        public static new ListFirewallPolicyIdpsSignatureInvokeArgs Empty => new ListFirewallPolicyIdpsSignatureInvokeArgs();
    }


    [OutputType]
    public sealed class ListFirewallPolicyIdpsSignatureResult
    {
        /// <summary>
        /// Number of total records matching the query.
        /// </summary>
        public readonly double? MatchingRecordsCount;
        /// <summary>
        /// Array containing the results of the query
        /// </summary>
        public readonly ImmutableArray<Outputs.SingleQueryResultResponse> Signatures;

        [OutputConstructor]
        private ListFirewallPolicyIdpsSignatureResult(
            double? matchingRecordsCount,

            ImmutableArray<Outputs.SingleQueryResultResponse> signatures)
        {
            MatchingRecordsCount = matchingRecordsCount;
            Signatures = signatures;
        }
    }
}
