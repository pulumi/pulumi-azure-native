// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class GetExpressRouteCircuit
    {
        /// <summary>
        /// Gets information about the specified express route circuit.
        /// 
        /// Uses Azure REST API version 2024-05-01.
        /// 
        /// Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01, 2024-10-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetExpressRouteCircuitResult> InvokeAsync(GetExpressRouteCircuitArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExpressRouteCircuitResult>("azure-native:network:getExpressRouteCircuit", args ?? new GetExpressRouteCircuitArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about the specified express route circuit.
        /// 
        /// Uses Azure REST API version 2024-05-01.
        /// 
        /// Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01, 2024-10-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetExpressRouteCircuitResult> Invoke(GetExpressRouteCircuitInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExpressRouteCircuitResult>("azure-native:network:getExpressRouteCircuit", args ?? new GetExpressRouteCircuitInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about the specified express route circuit.
        /// 
        /// Uses Azure REST API version 2024-05-01.
        /// 
        /// Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01, 2024-10-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetExpressRouteCircuitResult> Invoke(GetExpressRouteCircuitInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetExpressRouteCircuitResult>("azure-native:network:getExpressRouteCircuit", args ?? new GetExpressRouteCircuitInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExpressRouteCircuitArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of express route circuit.
        /// </summary>
        [Input("circuitName", required: true)]
        public string CircuitName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetExpressRouteCircuitArgs()
        {
        }
        public static new GetExpressRouteCircuitArgs Empty => new GetExpressRouteCircuitArgs();
    }

    public sealed class GetExpressRouteCircuitInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of express route circuit.
        /// </summary>
        [Input("circuitName", required: true)]
        public Input<string> CircuitName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetExpressRouteCircuitInvokeArgs()
        {
        }
        public static new GetExpressRouteCircuitInvokeArgs Empty => new GetExpressRouteCircuitInvokeArgs();
    }


    [OutputType]
    public sealed class GetExpressRouteCircuitResult
    {
        /// <summary>
        /// Allow classic operations.
        /// </summary>
        public readonly bool? AllowClassicOperations;
        /// <summary>
        /// The authorizationKey.
        /// </summary>
        public readonly string? AuthorizationKey;
        /// <summary>
        /// The authorization status of the Circuit.
        /// </summary>
        public readonly string AuthorizationStatus;
        /// <summary>
        /// The list of authorizations.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExpressRouteCircuitAuthorizationResponse> Authorizations;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
        /// </summary>
        public readonly double? BandwidthInGbps;
        /// <summary>
        /// The CircuitProvisioningState state of the resource.
        /// </summary>
        public readonly string? CircuitProvisioningState;
        /// <summary>
        /// Flag denoting rate-limiting status of the ExpressRoute direct-port circuit.
        /// </summary>
        public readonly bool? EnableDirectPortRateLimit;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
        /// </summary>
        public readonly Outputs.SubResourceResponse? ExpressRoutePort;
        /// <summary>
        /// The GatewayManager Etag.
        /// </summary>
        public readonly string? GatewayManagerEtag;
        /// <summary>
        /// Flag denoting global reach status.
        /// </summary>
        public readonly bool? GlobalReachEnabled;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The list of peerings.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExpressRouteCircuitPeeringResponse> Peerings;
        /// <summary>
        /// The provisioning state of the express route circuit resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The ServiceKey.
        /// </summary>
        public readonly string? ServiceKey;
        /// <summary>
        /// The ServiceProviderNotes.
        /// </summary>
        public readonly string? ServiceProviderNotes;
        /// <summary>
        /// The ServiceProviderProperties.
        /// </summary>
        public readonly Outputs.ExpressRouteCircuitServiceProviderPropertiesResponse? ServiceProviderProperties;
        /// <summary>
        /// The ServiceProviderProvisioningState state of the resource.
        /// </summary>
        public readonly string? ServiceProviderProvisioningState;
        /// <summary>
        /// The SKU.
        /// </summary>
        public readonly Outputs.ExpressRouteCircuitSkuResponse? Sku;
        /// <summary>
        /// The identifier of the circuit traffic. Outer tag for QinQ encapsulation.
        /// </summary>
        public readonly int Stag;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetExpressRouteCircuitResult(
            bool? allowClassicOperations,

            string? authorizationKey,

            string authorizationStatus,

            ImmutableArray<Outputs.ExpressRouteCircuitAuthorizationResponse> authorizations,

            string azureApiVersion,

            double? bandwidthInGbps,

            string? circuitProvisioningState,

            bool? enableDirectPortRateLimit,

            string etag,

            Outputs.SubResourceResponse? expressRoutePort,

            string? gatewayManagerEtag,

            bool? globalReachEnabled,

            string? id,

            string? location,

            string name,

            ImmutableArray<Outputs.ExpressRouteCircuitPeeringResponse> peerings,

            string provisioningState,

            string? serviceKey,

            string? serviceProviderNotes,

            Outputs.ExpressRouteCircuitServiceProviderPropertiesResponse? serviceProviderProperties,

            string? serviceProviderProvisioningState,

            Outputs.ExpressRouteCircuitSkuResponse? sku,

            int stag,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AllowClassicOperations = allowClassicOperations;
            AuthorizationKey = authorizationKey;
            AuthorizationStatus = authorizationStatus;
            Authorizations = authorizations;
            AzureApiVersion = azureApiVersion;
            BandwidthInGbps = bandwidthInGbps;
            CircuitProvisioningState = circuitProvisioningState;
            EnableDirectPortRateLimit = enableDirectPortRateLimit;
            Etag = etag;
            ExpressRoutePort = expressRoutePort;
            GatewayManagerEtag = gatewayManagerEtag;
            GlobalReachEnabled = globalReachEnabled;
            Id = id;
            Location = location;
            Name = name;
            Peerings = peerings;
            ProvisioningState = provisioningState;
            ServiceKey = serviceKey;
            ServiceProviderNotes = serviceProviderNotes;
            ServiceProviderProperties = serviceProviderProperties;
            ServiceProviderProvisioningState = serviceProviderProvisioningState;
            Sku = sku;
            Stag = stag;
            Tags = tags;
            Type = type;
        }
    }
}
