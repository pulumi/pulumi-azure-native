// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20181201.Inputs
{

    /// <summary>
    /// Parameters for VirtualHub
    /// </summary>
    public sealed class VirtualHubPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address-prefix for this VirtualHub.
        /// </summary>
        [Input("addressPrefix")]
        public Input<string>? AddressPrefix { get; set; }

        /// <summary>
        /// The expressRouteGateway associated with this VirtualHub
        /// </summary>
        [Input("expressRouteGateway")]
        public Input<Inputs.SubResourceArgs>? ExpressRouteGateway { get; set; }

        /// <summary>
        /// The P2SVpnGateway associated with this VirtualHub
        /// </summary>
        [Input("p2SVpnGateway")]
        public Input<Inputs.SubResourceArgs>? P2SVpnGateway { get; set; }

        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        /// <summary>
        /// The routeTable associated with this virtual hub.
        /// </summary>
        [Input("routeTable")]
        public Input<Inputs.VirtualHubRouteTableArgs>? RouteTable { get; set; }

        [Input("virtualNetworkConnections")]
        private InputList<Inputs.HubVirtualNetworkConnectionArgs>? _virtualNetworkConnections;

        /// <summary>
        /// List of all vnet connections with this VirtualHub.
        /// </summary>
        public InputList<Inputs.HubVirtualNetworkConnectionArgs> VirtualNetworkConnections
        {
            get => _virtualNetworkConnections ?? (_virtualNetworkConnections = new InputList<Inputs.HubVirtualNetworkConnectionArgs>());
            set => _virtualNetworkConnections = value;
        }

        /// <summary>
        /// The VirtualWAN to which the VirtualHub belongs
        /// </summary>
        [Input("virtualWan")]
        public Input<Inputs.SubResourceArgs>? VirtualWan { get; set; }

        /// <summary>
        /// The VpnGateway associated with this VirtualHub
        /// </summary>
        [Input("vpnGateway")]
        public Input<Inputs.SubResourceArgs>? VpnGateway { get; set; }

        public VirtualHubPropertiesArgs()
        {
        }
    }
}
