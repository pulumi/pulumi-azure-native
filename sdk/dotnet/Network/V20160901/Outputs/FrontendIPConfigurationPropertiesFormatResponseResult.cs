// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20160901.Outputs
{

    [OutputType]
    public sealed class FrontendIPConfigurationPropertiesFormatResponseResult
    {
        /// <summary>
        /// Read only. Inbound pools URIs that use this frontend IP.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponseResult> InboundNatPools;
        /// <summary>
        /// Read only. Inbound rules URIs that use this frontend IP.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponseResult> InboundNatRules;
        /// <summary>
        /// Gets load balancing rules URIs that use this frontend IP.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponseResult> LoadBalancingRules;
        /// <summary>
        /// Read only. Outbound rules URIs that use this frontend IP.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponseResult> OutboundNatRules;
        /// <summary>
        /// The private IP address of the IP configuration.
        /// </summary>
        public readonly string? PrivateIPAddress;
        /// <summary>
        /// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
        /// </summary>
        public readonly string? PrivateIPAllocationMethod;
        /// <summary>
        /// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The reference of the Public IP resource.
        /// </summary>
        public readonly Outputs.PublicIPAddressResponseResult? PublicIPAddress;
        /// <summary>
        /// The reference of the subnet resource.
        /// </summary>
        public readonly Outputs.SubnetResponseResult? Subnet;

        [OutputConstructor]
        private FrontendIPConfigurationPropertiesFormatResponseResult(
            ImmutableArray<Outputs.SubResourceResponseResult> inboundNatPools,

            ImmutableArray<Outputs.SubResourceResponseResult> inboundNatRules,

            ImmutableArray<Outputs.SubResourceResponseResult> loadBalancingRules,

            ImmutableArray<Outputs.SubResourceResponseResult> outboundNatRules,

            string? privateIPAddress,

            string? privateIPAllocationMethod,

            string? provisioningState,

            Outputs.PublicIPAddressResponseResult? publicIPAddress,

            Outputs.SubnetResponseResult? subnet)
        {
            InboundNatPools = inboundNatPools;
            InboundNatRules = inboundNatRules;
            LoadBalancingRules = loadBalancingRules;
            OutboundNatRules = outboundNatRules;
            PrivateIPAddress = privateIPAddress;
            PrivateIPAllocationMethod = privateIPAllocationMethod;
            ProvisioningState = provisioningState;
            PublicIPAddress = publicIPAddress;
            Subnet = subnet;
        }
    }
}
