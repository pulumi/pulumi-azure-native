// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220901
{
    public static class GetVirtualHubBgpConnection
    {
        /// <summary>
        /// Retrieves the details of a Virtual Hub Bgp Connection.
        /// </summary>
        public static Task<GetVirtualHubBgpConnectionResult> InvokeAsync(GetVirtualHubBgpConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualHubBgpConnectionResult>("azure-native:network/v20220901:getVirtualHubBgpConnection", args ?? new GetVirtualHubBgpConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the details of a Virtual Hub Bgp Connection.
        /// </summary>
        public static Output<GetVirtualHubBgpConnectionResult> Invoke(GetVirtualHubBgpConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualHubBgpConnectionResult>("azure-native:network/v20220901:getVirtualHubBgpConnection", args ?? new GetVirtualHubBgpConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualHubBgpConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the connection.
        /// </summary>
        [Input("connectionName", required: true)]
        public string ConnectionName { get; set; } = null!;

        /// <summary>
        /// The resource group name of the VirtualHub.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the VirtualHub.
        /// </summary>
        [Input("virtualHubName", required: true)]
        public string VirtualHubName { get; set; } = null!;

        public GetVirtualHubBgpConnectionArgs()
        {
        }
        public static new GetVirtualHubBgpConnectionArgs Empty => new GetVirtualHubBgpConnectionArgs();
    }

    public sealed class GetVirtualHubBgpConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the connection.
        /// </summary>
        [Input("connectionName", required: true)]
        public Input<string> ConnectionName { get; set; } = null!;

        /// <summary>
        /// The resource group name of the VirtualHub.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the VirtualHub.
        /// </summary>
        [Input("virtualHubName", required: true)]
        public Input<string> VirtualHubName { get; set; } = null!;

        public GetVirtualHubBgpConnectionInvokeArgs()
        {
        }
        public static new GetVirtualHubBgpConnectionInvokeArgs Empty => new GetVirtualHubBgpConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualHubBgpConnectionResult
    {
        /// <summary>
        /// The current state of the VirtualHub to Peer.
        /// </summary>
        public readonly string ConnectionState;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The reference to the HubVirtualNetworkConnection resource.
        /// </summary>
        public readonly Outputs.SubResourceResponse? HubVirtualNetworkConnection;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Name of the connection.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Peer ASN.
        /// </summary>
        public readonly double? PeerAsn;
        /// <summary>
        /// Peer IP.
        /// </summary>
        public readonly string? PeerIp;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Connection type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVirtualHubBgpConnectionResult(
            string connectionState,

            string etag,

            Outputs.SubResourceResponse? hubVirtualNetworkConnection,

            string? id,

            string? name,

            double? peerAsn,

            string? peerIp,

            string provisioningState,

            string type)
        {
            ConnectionState = connectionState;
            Etag = etag;
            HubVirtualNetworkConnection = hubVirtualNetworkConnection;
            Id = id;
            Name = name;
            PeerAsn = peerAsn;
            PeerIp = peerIp;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
