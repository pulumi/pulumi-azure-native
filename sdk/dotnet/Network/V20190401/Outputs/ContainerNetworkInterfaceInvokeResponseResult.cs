// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20190401.Outputs
{

    [OutputType]
    public sealed class ContainerNetworkInterfaceInvokeResponseResult
    {
        /// <summary>
        /// Reference to the container to which this container network interface is attached.
        /// </summary>
        public readonly Outputs.ContainerInvokeResponseResult? Container;
        /// <summary>
        /// Container network interface configuration from which this container network interface is created.
        /// </summary>
        public readonly Outputs.ContainerNetworkInterfaceConfigurationInvokeResponseResult? ContainerNetworkInterfaceConfiguration;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Reference to the ip configuration on this container nic.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContainerNetworkInterfaceIpConfigurationInvokeResponseResult> IpConfigurations;
        /// <summary>
        /// The name of the resource. This name can be used to access the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Sub Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ContainerNetworkInterfaceInvokeResponseResult(
            Outputs.ContainerInvokeResponseResult? container,

            Outputs.ContainerNetworkInterfaceConfigurationInvokeResponseResult? containerNetworkInterfaceConfiguration,

            string? etag,

            string? id,

            ImmutableArray<Outputs.ContainerNetworkInterfaceIpConfigurationInvokeResponseResult> ipConfigurations,

            string? name,

            string provisioningState,

            string type)
        {
            Container = container;
            ContainerNetworkInterfaceConfiguration = containerNetworkInterfaceConfiguration;
            Etag = etag;
            Id = id;
            IpConfigurations = ipConfigurations;
            Name = name;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
