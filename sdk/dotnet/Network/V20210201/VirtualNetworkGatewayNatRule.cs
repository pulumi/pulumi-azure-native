// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20210201
{
    /// <summary>
    /// VirtualNetworkGatewayNatRule Resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20210201:VirtualNetworkGatewayNatRule")]
    public partial class VirtualNetworkGatewayNatRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The private IP address external mapping for NAT.
        /// </summary>
        [Output("externalMappings")]
        public Output<ImmutableArray<Outputs.VpnNatRuleMappingResponse>> ExternalMappings { get; private set; } = null!;

        /// <summary>
        /// The private IP address internal mapping for NAT.
        /// </summary>
        [Output("internalMappings")]
        public Output<ImmutableArray<Outputs.VpnNatRuleMappingResponse>> InternalMappings { get; private set; } = null!;

        /// <summary>
        /// The IP Configuration ID this NAT rule applies to.
        /// </summary>
        [Output("ipConfigurationId")]
        public Output<string?> IpConfigurationId { get; private set; } = null!;

        /// <summary>
        /// The Source NAT direction of a VPN NAT.
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the NAT Rule resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualNetworkGatewayNatRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualNetworkGatewayNatRule(string name, VirtualNetworkGatewayNatRuleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20210201:VirtualNetworkGatewayNatRule", name, args ?? new VirtualNetworkGatewayNatRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualNetworkGatewayNatRule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20210201:VirtualNetworkGatewayNatRule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:VirtualNetworkGatewayNatRule"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210301:VirtualNetworkGatewayNatRule"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210501:VirtualNetworkGatewayNatRule"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210801:VirtualNetworkGatewayNatRule"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220101:VirtualNetworkGatewayNatRule"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualNetworkGatewayNatRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualNetworkGatewayNatRule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VirtualNetworkGatewayNatRule(name, id, options);
        }
    }

    public sealed class VirtualNetworkGatewayNatRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("externalMappings")]
        private InputList<Inputs.VpnNatRuleMappingArgs>? _externalMappings;

        /// <summary>
        /// The private IP address external mapping for NAT.
        /// </summary>
        public InputList<Inputs.VpnNatRuleMappingArgs> ExternalMappings
        {
            get => _externalMappings ?? (_externalMappings = new InputList<Inputs.VpnNatRuleMappingArgs>());
            set => _externalMappings = value;
        }

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("internalMappings")]
        private InputList<Inputs.VpnNatRuleMappingArgs>? _internalMappings;

        /// <summary>
        /// The private IP address internal mapping for NAT.
        /// </summary>
        public InputList<Inputs.VpnNatRuleMappingArgs> InternalMappings
        {
            get => _internalMappings ?? (_internalMappings = new InputList<Inputs.VpnNatRuleMappingArgs>());
            set => _internalMappings = value;
        }

        /// <summary>
        /// The IP Configuration ID this NAT rule applies to.
        /// </summary>
        [Input("ipConfigurationId")]
        public Input<string>? IpConfigurationId { get; set; }

        /// <summary>
        /// The Source NAT direction of a VPN NAT.
        /// </summary>
        [Input("mode")]
        public InputUnion<string, Pulumi.AzureNative.Network.V20210201.VpnNatRuleMode>? Mode { get; set; }

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the nat rule.
        /// </summary>
        [Input("natRuleName")]
        public Input<string>? NatRuleName { get; set; }

        /// <summary>
        /// The resource group name of the Virtual Network Gateway.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The type of NAT rule for VPN NAT.
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.Network.V20210201.VpnNatRuleType>? Type { get; set; }

        /// <summary>
        /// The name of the gateway.
        /// </summary>
        [Input("virtualNetworkGatewayName", required: true)]
        public Input<string> VirtualNetworkGatewayName { get; set; } = null!;

        public VirtualNetworkGatewayNatRuleArgs()
        {
        }
        public static new VirtualNetworkGatewayNatRuleArgs Empty => new VirtualNetworkGatewayNatRuleArgs();
    }
}
