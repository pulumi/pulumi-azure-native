// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.Network.V20240601
{
    /// <summary>
    /// The resolution policy on the virtual network link. Only applicable for virtual network links to privatelink zones, and for A,AAAA,CNAME queries. When set to 'NxDomainRedirect', Azure DNS resolver falls back to public resolution if private dns query resolution results in non-existent domain response.
    /// </summary>
    [EnumType]
    public readonly struct ResolutionPolicy : IEquatable<ResolutionPolicy>
    {
        private readonly string _value;

        private ResolutionPolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ResolutionPolicy Default { get; } = new ResolutionPolicy("Default");
        public static ResolutionPolicy NxDomainRedirect { get; } = new ResolutionPolicy("NxDomainRedirect");

        public static bool operator ==(ResolutionPolicy left, ResolutionPolicy right) => left.Equals(right);
        public static bool operator !=(ResolutionPolicy left, ResolutionPolicy right) => !left.Equals(right);

        public static explicit operator string(ResolutionPolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ResolutionPolicy other && Equals(other);
        public bool Equals(ResolutionPolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
