// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class ListListEffectiveVirtualNetworkByNetworkGroup
    {
        /// <summary>
        /// Lists all effective virtual networks by specified network group.
        /// Azure REST API version: 2022-04-01-preview.
        /// 
        /// Other available API versions: 2021-05-01-preview.
        /// </summary>
        public static Task<ListListEffectiveVirtualNetworkByNetworkGroupResult> InvokeAsync(ListListEffectiveVirtualNetworkByNetworkGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListListEffectiveVirtualNetworkByNetworkGroupResult>("azure-native:network:listListEffectiveVirtualNetworkByNetworkGroup", args ?? new ListListEffectiveVirtualNetworkByNetworkGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Lists all effective virtual networks by specified network group.
        /// Azure REST API version: 2022-04-01-preview.
        /// 
        /// Other available API versions: 2021-05-01-preview.
        /// </summary>
        public static Output<ListListEffectiveVirtualNetworkByNetworkGroupResult> Invoke(ListListEffectiveVirtualNetworkByNetworkGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListListEffectiveVirtualNetworkByNetworkGroupResult>("azure-native:network:listListEffectiveVirtualNetworkByNetworkGroup", args ?? new ListListEffectiveVirtualNetworkByNetworkGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListListEffectiveVirtualNetworkByNetworkGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network group.
        /// </summary>
        [Input("networkGroupName", required: true)]
        public string NetworkGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public string NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
        /// </summary>
        [Input("skipToken")]
        public string? SkipToken { get; set; }

        public ListListEffectiveVirtualNetworkByNetworkGroupArgs()
        {
        }
        public static new ListListEffectiveVirtualNetworkByNetworkGroupArgs Empty => new ListListEffectiveVirtualNetworkByNetworkGroupArgs();
    }

    public sealed class ListListEffectiveVirtualNetworkByNetworkGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network group.
        /// </summary>
        [Input("networkGroupName", required: true)]
        public Input<string> NetworkGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
        /// </summary>
        [Input("skipToken")]
        public Input<string>? SkipToken { get; set; }

        public ListListEffectiveVirtualNetworkByNetworkGroupInvokeArgs()
        {
        }
        public static new ListListEffectiveVirtualNetworkByNetworkGroupInvokeArgs Empty => new ListListEffectiveVirtualNetworkByNetworkGroupInvokeArgs();
    }


    [OutputType]
    public sealed class ListListEffectiveVirtualNetworkByNetworkGroupResult
    {
        /// <summary>
        /// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
        /// </summary>
        public readonly string? SkipToken;
        /// <summary>
        /// Gets a page of EffectiveVirtualNetwork
        /// </summary>
        public readonly ImmutableArray<Outputs.EffectiveVirtualNetworkResponse> Value;

        [OutputConstructor]
        private ListListEffectiveVirtualNetworkByNetworkGroupResult(
            string? skipToken,

            ImmutableArray<Outputs.EffectiveVirtualNetworkResponse> value)
        {
            SkipToken = skipToken;
            Value = value;
        }
    }
}
