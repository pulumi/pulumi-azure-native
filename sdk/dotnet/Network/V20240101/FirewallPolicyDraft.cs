// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240101
{
    /// <summary>
    /// FirewallPolicy Resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20240101:FirewallPolicyDraft")]
    public partial class FirewallPolicyDraft : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The parent firewall policy from which rules are inherited.
        /// </summary>
        [Output("basePolicy")]
        public Output<Outputs.SubResourceResponse?> BasePolicy { get; private set; } = null!;

        /// <summary>
        /// DNS Proxy Settings definition.
        /// </summary>
        [Output("dnsSettings")]
        public Output<Outputs.DnsSettingsResponse?> DnsSettings { get; private set; } = null!;

        /// <summary>
        /// Explicit Proxy Settings definition.
        /// </summary>
        [Output("explicitProxy")]
        public Output<Outputs.ExplicitProxyResponse?> ExplicitProxy { get; private set; } = null!;

        /// <summary>
        /// Insights on Firewall Policy.
        /// </summary>
        [Output("insights")]
        public Output<Outputs.FirewallPolicyInsightsResponse?> Insights { get; private set; } = null!;

        /// <summary>
        /// The configuration for Intrusion detection.
        /// </summary>
        [Output("intrusionDetection")]
        public Output<Outputs.FirewallPolicyIntrusionDetectionResponse?> IntrusionDetection { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The private IP addresses/IP ranges to which traffic will not be SNAT.
        /// </summary>
        [Output("snat")]
        public Output<Outputs.FirewallPolicySNATResponse?> Snat { get; private set; } = null!;

        /// <summary>
        /// SQL Settings definition.
        /// </summary>
        [Output("sql")]
        public Output<Outputs.FirewallPolicySQLResponse?> Sql { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The operation mode for Threat Intelligence.
        /// </summary>
        [Output("threatIntelMode")]
        public Output<string?> ThreatIntelMode { get; private set; } = null!;

        /// <summary>
        /// ThreatIntel Whitelist for Firewall Policy.
        /// </summary>
        [Output("threatIntelWhitelist")]
        public Output<Outputs.FirewallPolicyThreatIntelWhitelistResponse?> ThreatIntelWhitelist { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FirewallPolicyDraft resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirewallPolicyDraft(string name, FirewallPolicyDraftArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20240101:FirewallPolicyDraft", name, args ?? new FirewallPolicyDraftArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirewallPolicyDraft(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20240101:FirewallPolicyDraft", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:FirewallPolicyDraft" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20231101:FirewallPolicyDraft" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirewallPolicyDraft resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirewallPolicyDraft Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FirewallPolicyDraft(name, id, options);
        }
    }

    public sealed class FirewallPolicyDraftArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The parent firewall policy from which rules are inherited.
        /// </summary>
        [Input("basePolicy")]
        public Input<Inputs.SubResourceArgs>? BasePolicy { get; set; }

        /// <summary>
        /// DNS Proxy Settings definition.
        /// </summary>
        [Input("dnsSettings")]
        public Input<Inputs.DnsSettingsArgs>? DnsSettings { get; set; }

        /// <summary>
        /// Explicit Proxy Settings definition.
        /// </summary>
        [Input("explicitProxy")]
        public Input<Inputs.ExplicitProxyArgs>? ExplicitProxy { get; set; }

        /// <summary>
        /// The name of the Firewall Policy.
        /// </summary>
        [Input("firewallPolicyName", required: true)]
        public Input<string> FirewallPolicyName { get; set; } = null!;

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Insights on Firewall Policy.
        /// </summary>
        [Input("insights")]
        public Input<Inputs.FirewallPolicyInsightsArgs>? Insights { get; set; }

        /// <summary>
        /// The configuration for Intrusion detection.
        /// </summary>
        [Input("intrusionDetection")]
        public Input<Inputs.FirewallPolicyIntrusionDetectionArgs>? IntrusionDetection { get; set; }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The private IP addresses/IP ranges to which traffic will not be SNAT.
        /// </summary>
        [Input("snat")]
        public Input<Inputs.FirewallPolicySNATArgs>? Snat { get; set; }

        /// <summary>
        /// SQL Settings definition.
        /// </summary>
        [Input("sql")]
        public Input<Inputs.FirewallPolicySQLArgs>? Sql { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The operation mode for Threat Intelligence.
        /// </summary>
        [Input("threatIntelMode")]
        public InputUnion<string, Pulumi.AzureNative.Network.V20240101.AzureFirewallThreatIntelMode>? ThreatIntelMode { get; set; }

        /// <summary>
        /// ThreatIntel Whitelist for Firewall Policy.
        /// </summary>
        [Input("threatIntelWhitelist")]
        public Input<Inputs.FirewallPolicyThreatIntelWhitelistArgs>? ThreatIntelWhitelist { get; set; }

        public FirewallPolicyDraftArgs()
        {
        }
        public static new FirewallPolicyDraftArgs Empty => new FirewallPolicyDraftArgs();
    }
}
