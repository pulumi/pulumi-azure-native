// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240101
{
    /// <summary>
    /// Bastion Host resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20240101:BastionHost")]
    public partial class BastionHost : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/Disable Copy/Paste feature of the Bastion Host resource.
        /// </summary>
        [Output("disableCopyPaste")]
        public Output<bool?> DisableCopyPaste { get; private set; } = null!;

        /// <summary>
        /// FQDN for the endpoint on which bastion host is accessible.
        /// </summary>
        [Output("dnsName")]
        public Output<string?> DnsName { get; private set; } = null!;

        /// <summary>
        /// Enable/Disable File Copy feature of the Bastion Host resource.
        /// </summary>
        [Output("enableFileCopy")]
        public Output<bool?> EnableFileCopy { get; private set; } = null!;

        /// <summary>
        /// Enable/Disable IP Connect feature of the Bastion Host resource.
        /// </summary>
        [Output("enableIpConnect")]
        public Output<bool?> EnableIpConnect { get; private set; } = null!;

        /// <summary>
        /// Enable/Disable Kerberos feature of the Bastion Host resource.
        /// </summary>
        [Output("enableKerberos")]
        public Output<bool?> EnableKerberos { get; private set; } = null!;

        /// <summary>
        /// Enable/Disable Session Recording feature of the Bastion Host resource.
        /// </summary>
        [Output("enableSessionRecording")]
        public Output<bool?> EnableSessionRecording { get; private set; } = null!;

        /// <summary>
        /// Enable/Disable Shareable Link of the Bastion Host resource.
        /// </summary>
        [Output("enableShareableLink")]
        public Output<bool?> EnableShareableLink { get; private set; } = null!;

        /// <summary>
        /// Enable/Disable Tunneling feature of the Bastion Host resource.
        /// </summary>
        [Output("enableTunneling")]
        public Output<bool?> EnableTunneling { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// IP configuration of the Bastion Host resource.
        /// </summary>
        [Output("ipConfigurations")]
        public Output<ImmutableArray<Outputs.BastionHostIPConfigurationResponse>> IpConfigurations { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("networkAcls")]
        public Output<Outputs.BastionHostPropertiesFormatResponseNetworkAcls?> NetworkAcls { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the bastion host resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The scale units for the Bastion Host resource.
        /// </summary>
        [Output("scaleUnits")]
        public Output<int?> ScaleUnits { get; private set; } = null!;

        /// <summary>
        /// The sku of this Bastion Host.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Reference to an existing virtual network required for Developer Bastion Host only.
        /// </summary>
        [Output("virtualNetwork")]
        public Output<Outputs.SubResourceResponse?> VirtualNetwork { get; private set; } = null!;

        /// <summary>
        /// A list of availability zones denoting where the resource needs to come from.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a BastionHost resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BastionHost(string name, BastionHostArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20240101:BastionHost", name, args ?? new BastionHostArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BastionHost(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20240101:BastionHost", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190401:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190601:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190701:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190801:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190901:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20191101:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20191201:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200301:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200401:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200501:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200601:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200701:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200801:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20201101:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210201:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210301:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210501:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210801:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220101:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220501:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220701:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220901:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20221101:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230201:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230401:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230501:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230601:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230901:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20231101:BastionHost" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20240301:BastionHost" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BastionHost resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BastionHost Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BastionHost(name, id, options);
        }
    }

    public sealed class BastionHostArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Bastion Host.
        /// </summary>
        [Input("bastionHostName")]
        public Input<string>? BastionHostName { get; set; }

        /// <summary>
        /// Enable/Disable Copy/Paste feature of the Bastion Host resource.
        /// </summary>
        [Input("disableCopyPaste")]
        public Input<bool>? DisableCopyPaste { get; set; }

        /// <summary>
        /// FQDN for the endpoint on which bastion host is accessible.
        /// </summary>
        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        /// <summary>
        /// Enable/Disable File Copy feature of the Bastion Host resource.
        /// </summary>
        [Input("enableFileCopy")]
        public Input<bool>? EnableFileCopy { get; set; }

        /// <summary>
        /// Enable/Disable IP Connect feature of the Bastion Host resource.
        /// </summary>
        [Input("enableIpConnect")]
        public Input<bool>? EnableIpConnect { get; set; }

        /// <summary>
        /// Enable/Disable Kerberos feature of the Bastion Host resource.
        /// </summary>
        [Input("enableKerberos")]
        public Input<bool>? EnableKerberos { get; set; }

        /// <summary>
        /// Enable/Disable Session Recording feature of the Bastion Host resource.
        /// </summary>
        [Input("enableSessionRecording")]
        public Input<bool>? EnableSessionRecording { get; set; }

        /// <summary>
        /// Enable/Disable Shareable Link of the Bastion Host resource.
        /// </summary>
        [Input("enableShareableLink")]
        public Input<bool>? EnableShareableLink { get; set; }

        /// <summary>
        /// Enable/Disable Tunneling feature of the Bastion Host resource.
        /// </summary>
        [Input("enableTunneling")]
        public Input<bool>? EnableTunneling { get; set; }

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("ipConfigurations")]
        private InputList<Inputs.BastionHostIPConfigurationArgs>? _ipConfigurations;

        /// <summary>
        /// IP configuration of the Bastion Host resource.
        /// </summary>
        public InputList<Inputs.BastionHostIPConfigurationArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<Inputs.BastionHostIPConfigurationArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("networkAcls")]
        public Input<Inputs.BastionHostPropertiesFormatNetworkAclsArgs>? NetworkAcls { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The scale units for the Bastion Host resource.
        /// </summary>
        [Input("scaleUnits")]
        public Input<int>? ScaleUnits { get; set; }

        /// <summary>
        /// The sku of this Bastion Host.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Reference to an existing virtual network required for Developer Bastion Host only.
        /// </summary>
        [Input("virtualNetwork")]
        public Input<Inputs.SubResourceArgs>? VirtualNetwork { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A list of availability zones denoting where the resource needs to come from.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public BastionHostArgs()
        {
            DisableCopyPaste = false;
            EnableFileCopy = false;
            EnableIpConnect = false;
            EnableKerberos = false;
            EnableSessionRecording = false;
            EnableShareableLink = false;
            EnableTunneling = false;
        }
        public static new BastionHostArgs Empty => new BastionHostArgs();
    }
}
