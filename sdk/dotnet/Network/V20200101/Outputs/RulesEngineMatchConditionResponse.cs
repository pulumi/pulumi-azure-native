// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20200101.Outputs
{

    [OutputType]
    public sealed class RulesEngineMatchConditionResponse
    {
        /// <summary>
        /// Describes if this is negate condition or not
        /// </summary>
        public readonly bool? NegateCondition;
        /// <summary>
        /// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
        /// </summary>
        public readonly ImmutableArray<string> RulesEngineMatchValue;
        /// <summary>
        /// Match Variable
        /// </summary>
        public readonly string RulesEngineMatchVariable;
        /// <summary>
        /// Describes operator to apply to the match condition.
        /// </summary>
        public readonly string RulesEngineOperator;
        /// <summary>
        /// Name of selector in RequestHeader or RequestBody to be matched
        /// </summary>
        public readonly string? Selector;
        /// <summary>
        /// List of transforms
        /// </summary>
        public readonly ImmutableArray<string> Transforms;

        [OutputConstructor]
        private RulesEngineMatchConditionResponse(
            bool? negateCondition,

            ImmutableArray<string> rulesEngineMatchValue,

            string rulesEngineMatchVariable,

            string rulesEngineOperator,

            string? selector,

            ImmutableArray<string> transforms)
        {
            NegateCondition = negateCondition;
            RulesEngineMatchValue = rulesEngineMatchValue;
            RulesEngineMatchVariable = rulesEngineMatchVariable;
            RulesEngineOperator = rulesEngineOperator;
            Selector = selector;
            Transforms = transforms;
        }
    }
}
