// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20200401.Inputs
{

    /// <summary>
    /// Describes a connection monitor test configuration.
    /// </summary>
    public sealed class ConnectionMonitorTestConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The parameters used to perform test evaluation over HTTP.
        /// </summary>
        [Input("httpConfiguration")]
        public Input<Inputs.ConnectionMonitorHttpConfigurationArgs>? HttpConfiguration { get; set; }

        /// <summary>
        /// The parameters used to perform test evaluation over ICMP.
        /// </summary>
        [Input("icmpConfiguration")]
        public Input<Inputs.ConnectionMonitorIcmpConfigurationArgs>? IcmpConfiguration { get; set; }

        /// <summary>
        /// The name of the connection monitor test configuration.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
        /// </summary>
        [Input("preferredIPVersion")]
        public Input<string>? PreferredIPVersion { get; set; }

        /// <summary>
        /// The protocol to use in test evaluation.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// The threshold for declaring a test successful.
        /// </summary>
        [Input("successThreshold")]
        public Input<Inputs.ConnectionMonitorSuccessThresholdArgs>? SuccessThreshold { get; set; }

        /// <summary>
        /// The parameters used to perform test evaluation over TCP.
        /// </summary>
        [Input("tcpConfiguration")]
        public Input<Inputs.ConnectionMonitorTcpConfigurationArgs>? TcpConfiguration { get; set; }

        /// <summary>
        /// The frequency of test evaluation, in seconds.
        /// </summary>
        [Input("testFrequencySec")]
        public Input<int>? TestFrequencySec { get; set; }

        public ConnectionMonitorTestConfigurationArgs()
        {
        }
    }
}
