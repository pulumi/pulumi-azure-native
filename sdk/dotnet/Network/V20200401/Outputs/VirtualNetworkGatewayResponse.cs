// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20200401.Outputs
{

    [OutputType]
    public sealed class VirtualNetworkGatewayResponse
    {
        /// <summary>
        /// ActiveActive flag.
        /// </summary>
        public readonly bool? ActiveActive;
        /// <summary>
        /// Virtual network gateway's BGP speaker settings.
        /// </summary>
        public readonly Outputs.BgpSettingsResponse? BgpSettings;
        /// <summary>
        /// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
        /// </summary>
        public readonly Outputs.AddressSpaceResponse? CustomRoutes;
        /// <summary>
        /// Whether BGP is enabled for this virtual network gateway or not.
        /// </summary>
        public readonly bool? EnableBgp;
        /// <summary>
        /// Whether dns forwarding is enabled or not.
        /// </summary>
        public readonly bool? EnableDnsForwarding;
        /// <summary>
        /// Whether private IP needs to be enabled on this gateway for connections or not.
        /// </summary>
        public readonly bool? EnablePrivateIpAddress;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
        /// </summary>
        public readonly Outputs.SubResourceResponse? GatewayDefaultSite;
        /// <summary>
        /// The type of this virtual network gateway.
        /// </summary>
        public readonly string? GatewayType;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The IP address allocated by the gateway to which dns requests can be sent.
        /// </summary>
        public readonly string InboundDnsForwardingEndpoint;
        /// <summary>
        /// IP configurations for virtual network gateway.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualNetworkGatewayIPConfigurationResponse> IpConfigurations;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the virtual network gateway resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The resource GUID property of the virtual network gateway resource.
        /// </summary>
        public readonly string ResourceGuid;
        /// <summary>
        /// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
        /// </summary>
        public readonly Outputs.VirtualNetworkGatewaySkuResponse? Sku;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
        /// </summary>
        public readonly Outputs.VpnClientConfigurationResponse? VpnClientConfiguration;
        /// <summary>
        /// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
        /// </summary>
        public readonly string? VpnGatewayGeneration;
        /// <summary>
        /// The type of this virtual network gateway.
        /// </summary>
        public readonly string? VpnType;

        [OutputConstructor]
        private VirtualNetworkGatewayResponse(
            bool? activeActive,

            Outputs.BgpSettingsResponse? bgpSettings,

            Outputs.AddressSpaceResponse? customRoutes,

            bool? enableBgp,

            bool? enableDnsForwarding,

            bool? enablePrivateIpAddress,

            string etag,

            Outputs.SubResourceResponse? gatewayDefaultSite,

            string? gatewayType,

            string? id,

            string inboundDnsForwardingEndpoint,

            ImmutableArray<Outputs.VirtualNetworkGatewayIPConfigurationResponse> ipConfigurations,

            string? location,

            string name,

            string provisioningState,

            string resourceGuid,

            Outputs.VirtualNetworkGatewaySkuResponse? sku,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.VpnClientConfigurationResponse? vpnClientConfiguration,

            string? vpnGatewayGeneration,

            string? vpnType)
        {
            ActiveActive = activeActive;
            BgpSettings = bgpSettings;
            CustomRoutes = customRoutes;
            EnableBgp = enableBgp;
            EnableDnsForwarding = enableDnsForwarding;
            EnablePrivateIpAddress = enablePrivateIpAddress;
            Etag = etag;
            GatewayDefaultSite = gatewayDefaultSite;
            GatewayType = gatewayType;
            Id = id;
            InboundDnsForwardingEndpoint = inboundDnsForwardingEndpoint;
            IpConfigurations = ipConfigurations;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            Sku = sku;
            Tags = tags;
            Type = type;
            VpnClientConfiguration = vpnClientConfiguration;
            VpnGatewayGeneration = vpnGatewayGeneration;
            VpnType = vpnType;
        }
    }
}
