// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20190601.Outputs
{

    [OutputType]
    public sealed class PrivateLinkServiceIpConfigurationPropertiesResponseResult
    {
        /// <summary>
        /// Whether the ip configuration is primary or not.
        /// </summary>
        public readonly bool? Primary;
        /// <summary>
        /// The private IP address of the IP configuration.
        /// </summary>
        public readonly string? PrivateIPAddress;
        /// <summary>
        /// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
        /// </summary>
        public readonly string? PrivateIPAddressVersion;
        /// <summary>
        /// The private IP address allocation method.
        /// </summary>
        public readonly string? PrivateIPAllocationMethod;
        /// <summary>
        /// The provisioning state of the private link service ip configuration.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The reference of the subnet resource.
        /// </summary>
        public readonly Outputs.SubnetResponseResult? Subnet;

        [OutputConstructor]
        private PrivateLinkServiceIpConfigurationPropertiesResponseResult(
            bool? primary,

            string? privateIPAddress,

            string? privateIPAddressVersion,

            string? privateIPAllocationMethod,

            string? provisioningState,

            Outputs.SubnetResponseResult? subnet)
        {
            Primary = primary;
            PrivateIPAddress = privateIPAddress;
            PrivateIPAddressVersion = privateIPAddressVersion;
            PrivateIPAllocationMethod = privateIPAllocationMethod;
            ProvisioningState = provisioningState;
            Subnet = subnet;
        }
    }
}
