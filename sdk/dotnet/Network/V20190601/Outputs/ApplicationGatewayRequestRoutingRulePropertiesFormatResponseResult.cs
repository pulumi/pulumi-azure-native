// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20190601.Outputs
{

    [OutputType]
    public sealed class ApplicationGatewayRequestRoutingRulePropertiesFormatResponseResult
    {
        /// <summary>
        /// Backend address pool resource of the application gateway.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? BackendAddressPool;
        /// <summary>
        /// Backend http settings resource of the application gateway.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? BackendHttpSettings;
        /// <summary>
        /// Http listener resource of the application gateway.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? HttpListener;
        /// <summary>
        /// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Redirect configuration resource of the application gateway.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? RedirectConfiguration;
        /// <summary>
        /// Rewrite Rule Set resource in Basic rule of the application gateway.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? RewriteRuleSet;
        /// <summary>
        /// Rule type.
        /// </summary>
        public readonly string? RuleType;
        /// <summary>
        /// URL path map resource of the application gateway.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? UrlPathMap;

        [OutputConstructor]
        private ApplicationGatewayRequestRoutingRulePropertiesFormatResponseResult(
            Outputs.SubResourceResponseResult? backendAddressPool,

            Outputs.SubResourceResponseResult? backendHttpSettings,

            Outputs.SubResourceResponseResult? httpListener,

            string? provisioningState,

            Outputs.SubResourceResponseResult? redirectConfiguration,

            Outputs.SubResourceResponseResult? rewriteRuleSet,

            string? ruleType,

            Outputs.SubResourceResponseResult? urlPathMap)
        {
            BackendAddressPool = backendAddressPool;
            BackendHttpSettings = backendHttpSettings;
            HttpListener = httpListener;
            ProvisioningState = provisioningState;
            RedirectConfiguration = redirectConfiguration;
            RewriteRuleSet = rewriteRuleSet;
            RuleType = ruleType;
            UrlPathMap = urlPathMap;
        }
    }
}
