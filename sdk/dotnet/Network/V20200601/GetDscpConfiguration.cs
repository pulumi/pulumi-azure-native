// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20200601
{
    public static class GetDscpConfiguration
    {
        public static Task<GetDscpConfigurationResult> InvokeAsync(GetDscpConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDscpConfigurationResult>("azure-nextgen:network/v20200601:getDscpConfiguration", args ?? new GetDscpConfigurationArgs(), options.WithVersion());
    }


    public sealed class GetDscpConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("dscpConfigurationName", required: true)]
        public string DscpConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDscpConfigurationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDscpConfigurationResult
    {
        /// <summary>
        /// Associated Network Interfaces to the DSCP Configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInterfaceResponse> AssociatedNetworkInterfaces;
        /// <summary>
        /// Destination IP ranges.
        /// </summary>
        public readonly ImmutableArray<Outputs.QosIpRangeResponse> DestinationIpRanges;
        /// <summary>
        /// Destination port ranges.
        /// </summary>
        public readonly ImmutableArray<Outputs.QosPortRangeResponse> DestinationPortRanges;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// List of markings to be used in the configuration.
        /// </summary>
        public readonly ImmutableArray<int> Markings;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// RNM supported protocol types.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// The provisioning state of the DSCP Configuration resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Qos Collection ID generated by RNM.
        /// </summary>
        public readonly string QosCollectionId;
        /// <summary>
        /// The resource GUID property of the DSCP Configuration resource.
        /// </summary>
        public readonly string ResourceGuid;
        /// <summary>
        /// Source IP ranges.
        /// </summary>
        public readonly ImmutableArray<Outputs.QosIpRangeResponse> SourceIpRanges;
        /// <summary>
        /// Sources port ranges.
        /// </summary>
        public readonly ImmutableArray<Outputs.QosPortRangeResponse> SourcePortRanges;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDscpConfigurationResult(
            ImmutableArray<Outputs.NetworkInterfaceResponse> associatedNetworkInterfaces,

            ImmutableArray<Outputs.QosIpRangeResponse> destinationIpRanges,

            ImmutableArray<Outputs.QosPortRangeResponse> destinationPortRanges,

            string etag,

            string? location,

            ImmutableArray<int> markings,

            string name,

            string? protocol,

            string provisioningState,

            string qosCollectionId,

            string resourceGuid,

            ImmutableArray<Outputs.QosIpRangeResponse> sourceIpRanges,

            ImmutableArray<Outputs.QosPortRangeResponse> sourcePortRanges,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AssociatedNetworkInterfaces = associatedNetworkInterfaces;
            DestinationIpRanges = destinationIpRanges;
            DestinationPortRanges = destinationPortRanges;
            Etag = etag;
            Location = location;
            Markings = markings;
            Name = name;
            Protocol = protocol;
            ProvisioningState = provisioningState;
            QosCollectionId = qosCollectionId;
            ResourceGuid = resourceGuid;
            SourceIpRanges = sourceIpRanges;
            SourcePortRanges = sourcePortRanges;
            Tags = tags;
            Type = type;
        }
    }
}
