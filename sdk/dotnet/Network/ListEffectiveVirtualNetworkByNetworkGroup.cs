// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class ListEffectiveVirtualNetworkByNetworkGroup
    {
        /// <summary>
        /// Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
        /// API Version: 2021-02-01-preview.
        /// </summary>
        public static Task<ListEffectiveVirtualNetworkByNetworkGroupResult> InvokeAsync(ListEffectiveVirtualNetworkByNetworkGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListEffectiveVirtualNetworkByNetworkGroupResult>("azure-native:network:listEffectiveVirtualNetworkByNetworkGroup", args ?? new ListEffectiveVirtualNetworkByNetworkGroupArgs(), options.WithVersion());
    }


    public sealed class ListEffectiveVirtualNetworkByNetworkGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network group to get.
        /// </summary>
        [Input("networkGroupName", required: true)]
        public string NetworkGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public string NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
        /// </summary>
        [Input("skipToken")]
        public string? SkipToken { get; set; }

        /// <summary>
        /// An optional query parameter which specifies the maximum number of records to be returned by the server.
        /// </summary>
        [Input("top")]
        public int? Top { get; set; }

        public ListEffectiveVirtualNetworkByNetworkGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListEffectiveVirtualNetworkByNetworkGroupResult
    {
        /// <summary>
        /// First Index.
        /// </summary>
        public readonly int? FirstIndex;
        /// <summary>
        /// Gets the URL to get the next set of results.
        /// </summary>
        public readonly string? NextLink;
        /// <summary>
        /// Page Size.
        /// </summary>
        public readonly int? PageSize;
        /// <summary>
        /// Total Records.
        /// </summary>
        public readonly int? TotalRecords;
        /// <summary>
        /// Gets a page of EffectiveVirtualNetwork
        /// </summary>
        public readonly ImmutableArray<Outputs.EffectiveVirtualNetworkResponseResult> Value;

        [OutputConstructor]
        private ListEffectiveVirtualNetworkByNetworkGroupResult(
            int? firstIndex,

            string? nextLink,

            int? pageSize,

            int? totalRecords,

            ImmutableArray<Outputs.EffectiveVirtualNetworkResponseResult> value)
        {
            FirstIndex = firstIndex;
            NextLink = nextLink;
            PageSize = pageSize;
            TotalRecords = totalRecords;
            Value = value;
        }
    }
}
