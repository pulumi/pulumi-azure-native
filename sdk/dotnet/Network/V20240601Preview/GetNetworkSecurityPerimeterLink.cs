// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240601Preview
{
    public static class GetNetworkSecurityPerimeterLink
    {
        /// <summary>
        /// Gets the specified NSP link resource.
        /// </summary>
        public static Task<GetNetworkSecurityPerimeterLinkResult> InvokeAsync(GetNetworkSecurityPerimeterLinkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkSecurityPerimeterLinkResult>("azure-native:network/v20240601preview:getNetworkSecurityPerimeterLink", args ?? new GetNetworkSecurityPerimeterLinkArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified NSP link resource.
        /// </summary>
        public static Output<GetNetworkSecurityPerimeterLinkResult> Invoke(GetNetworkSecurityPerimeterLinkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkSecurityPerimeterLinkResult>("azure-native:network/v20240601preview:getNetworkSecurityPerimeterLink", args ?? new GetNetworkSecurityPerimeterLinkInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified NSP link resource.
        /// </summary>
        public static Output<GetNetworkSecurityPerimeterLinkResult> Invoke(GetNetworkSecurityPerimeterLinkInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkSecurityPerimeterLinkResult>("azure-native:network/v20240601preview:getNetworkSecurityPerimeterLink", args ?? new GetNetworkSecurityPerimeterLinkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkSecurityPerimeterLinkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NSP link.
        /// </summary>
        [Input("linkName", required: true)]
        public string LinkName { get; set; } = null!;

        /// <summary>
        /// The name of the network security perimeter.
        /// </summary>
        [Input("networkSecurityPerimeterName", required: true)]
        public string NetworkSecurityPerimeterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNetworkSecurityPerimeterLinkArgs()
        {
        }
        public static new GetNetworkSecurityPerimeterLinkArgs Empty => new GetNetworkSecurityPerimeterLinkArgs();
    }

    public sealed class GetNetworkSecurityPerimeterLinkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NSP link.
        /// </summary>
        [Input("linkName", required: true)]
        public Input<string> LinkName { get; set; } = null!;

        /// <summary>
        /// The name of the network security perimeter.
        /// </summary>
        [Input("networkSecurityPerimeterName", required: true)]
        public Input<string> NetworkSecurityPerimeterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNetworkSecurityPerimeterLinkInvokeArgs()
        {
        }
        public static new GetNetworkSecurityPerimeterLinkInvokeArgs Empty => new GetNetworkSecurityPerimeterLinkInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkSecurityPerimeterLinkResult
    {
        /// <summary>
        /// Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
        /// </summary>
        public readonly string? AutoApprovedRemotePerimeterResourceId;
        /// <summary>
        /// A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
        /// </summary>
        public readonly ImmutableArray<string> LocalInboundProfiles;
        /// <summary>
        /// Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
        /// </summary>
        public readonly ImmutableArray<string> LocalOutboundProfiles;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the NSP Link resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
        /// </summary>
        public readonly ImmutableArray<string> RemoteInboundProfiles;
        /// <summary>
        /// Remote Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
        /// </summary>
        public readonly ImmutableArray<string> RemoteOutboundProfiles;
        /// <summary>
        /// Remote NSP Guid with which the link gets created.
        /// </summary>
        public readonly string RemotePerimeterGuid;
        /// <summary>
        /// Remote NSP location with which the link gets created.
        /// </summary>
        public readonly string RemotePerimeterLocation;
        /// <summary>
        /// The NSP link state.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNetworkSecurityPerimeterLinkResult(
            string? autoApprovedRemotePerimeterResourceId,

            string? description,

            string etag,

            string id,

            ImmutableArray<string> localInboundProfiles,

            ImmutableArray<string> localOutboundProfiles,

            string name,

            string provisioningState,

            ImmutableArray<string> remoteInboundProfiles,

            ImmutableArray<string> remoteOutboundProfiles,

            string remotePerimeterGuid,

            string remotePerimeterLocation,

            string status,

            string type)
        {
            AutoApprovedRemotePerimeterResourceId = autoApprovedRemotePerimeterResourceId;
            Description = description;
            Etag = etag;
            Id = id;
            LocalInboundProfiles = localInboundProfiles;
            LocalOutboundProfiles = localOutboundProfiles;
            Name = name;
            ProvisioningState = provisioningState;
            RemoteInboundProfiles = remoteInboundProfiles;
            RemoteOutboundProfiles = remoteOutboundProfiles;
            RemotePerimeterGuid = remotePerimeterGuid;
            RemotePerimeterLocation = remotePerimeterLocation;
            Status = status;
            Type = type;
        }
    }
}
