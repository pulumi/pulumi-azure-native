// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240601Preview
{
    public static class GetNetworkSecurityPerimeterAssociation
    {
        /// <summary>
        /// Gets the specified NSP association by name.
        /// </summary>
        public static Task<GetNetworkSecurityPerimeterAssociationResult> InvokeAsync(GetNetworkSecurityPerimeterAssociationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkSecurityPerimeterAssociationResult>("azure-native:network/v20240601preview:getNetworkSecurityPerimeterAssociation", args ?? new GetNetworkSecurityPerimeterAssociationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified NSP association by name.
        /// </summary>
        public static Output<GetNetworkSecurityPerimeterAssociationResult> Invoke(GetNetworkSecurityPerimeterAssociationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkSecurityPerimeterAssociationResult>("azure-native:network/v20240601preview:getNetworkSecurityPerimeterAssociation", args ?? new GetNetworkSecurityPerimeterAssociationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified NSP association by name.
        /// </summary>
        public static Output<GetNetworkSecurityPerimeterAssociationResult> Invoke(GetNetworkSecurityPerimeterAssociationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkSecurityPerimeterAssociationResult>("azure-native:network/v20240601preview:getNetworkSecurityPerimeterAssociation", args ?? new GetNetworkSecurityPerimeterAssociationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkSecurityPerimeterAssociationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NSP association.
        /// </summary>
        [Input("associationName", required: true)]
        public string AssociationName { get; set; } = null!;

        /// <summary>
        /// The name of the network security perimeter.
        /// </summary>
        [Input("networkSecurityPerimeterName", required: true)]
        public string NetworkSecurityPerimeterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNetworkSecurityPerimeterAssociationArgs()
        {
        }
        public static new GetNetworkSecurityPerimeterAssociationArgs Empty => new GetNetworkSecurityPerimeterAssociationArgs();
    }

    public sealed class GetNetworkSecurityPerimeterAssociationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NSP association.
        /// </summary>
        [Input("associationName", required: true)]
        public Input<string> AssociationName { get; set; } = null!;

        /// <summary>
        /// The name of the network security perimeter.
        /// </summary>
        [Input("networkSecurityPerimeterName", required: true)]
        public Input<string> NetworkSecurityPerimeterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNetworkSecurityPerimeterAssociationInvokeArgs()
        {
        }
        public static new GetNetworkSecurityPerimeterAssociationInvokeArgs Empty => new GetNetworkSecurityPerimeterAssociationInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkSecurityPerimeterAssociationResult
    {
        /// <summary>
        /// Access mode on the association.
        /// </summary>
        public readonly string? AccessMode;
        /// <summary>
        /// Specifies if there are provisioning issues
        /// </summary>
        public readonly string HasProvisioningIssues;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The PaaS resource to be associated.
        /// </summary>
        public readonly Outputs.SubResourceResponse? PrivateLinkResource;
        /// <summary>
        /// Profile id to which the PaaS resource is associated.
        /// </summary>
        public readonly Outputs.SubResourceResponse? Profile;
        /// <summary>
        /// The provisioning state of the resource  association resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNetworkSecurityPerimeterAssociationResult(
            string? accessMode,

            string hasProvisioningIssues,

            string id,

            string? location,

            string name,

            Outputs.SubResourceResponse? privateLinkResource,

            Outputs.SubResourceResponse? profile,

            string provisioningState,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AccessMode = accessMode;
            HasProvisioningIssues = hasProvisioningIssues;
            Id = id;
            Location = location;
            Name = name;
            PrivateLinkResource = privateLinkResource;
            Profile = profile;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
        }
    }
}
