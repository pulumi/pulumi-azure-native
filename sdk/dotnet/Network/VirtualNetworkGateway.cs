// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    /// <summary>
    /// A common class for general resource information.
    /// Azure REST API version: 2023-02-01. Prior API version in Azure Native 1.x: 2020-11-01.
    /// 
    /// Other available API versions: 2016-06-01, 2016-09-01, 2019-08-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:network:VirtualNetworkGateway")]
    public partial class VirtualNetworkGateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ActiveActive flag.
        /// </summary>
        [Output("activeActive")]
        public Output<bool?> ActiveActive { get; private set; } = null!;

        /// <summary>
        /// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
        /// </summary>
        [Output("adminState")]
        public Output<string?> AdminState { get; private set; } = null!;

        /// <summary>
        /// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
        /// </summary>
        [Output("allowRemoteVnetTraffic")]
        public Output<bool?> AllowRemoteVnetTraffic { get; private set; } = null!;

        /// <summary>
        /// Configures this gateway to accept traffic from remote Virtual WAN networks.
        /// </summary>
        [Output("allowVirtualWanTraffic")]
        public Output<bool?> AllowVirtualWanTraffic { get; private set; } = null!;

        /// <summary>
        /// Virtual network gateway's BGP speaker settings.
        /// </summary>
        [Output("bgpSettings")]
        public Output<Outputs.BgpSettingsResponse?> BgpSettings { get; private set; } = null!;

        /// <summary>
        /// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
        /// </summary>
        [Output("customRoutes")]
        public Output<Outputs.AddressSpaceResponse?> CustomRoutes { get; private set; } = null!;

        /// <summary>
        /// disableIPSecReplayProtection flag.
        /// </summary>
        [Output("disableIPSecReplayProtection")]
        public Output<bool?> DisableIPSecReplayProtection { get; private set; } = null!;

        /// <summary>
        /// Whether BGP is enabled for this virtual network gateway or not.
        /// </summary>
        [Output("enableBgp")]
        public Output<bool?> EnableBgp { get; private set; } = null!;

        /// <summary>
        /// EnableBgpRouteTranslationForNat flag.
        /// </summary>
        [Output("enableBgpRouteTranslationForNat")]
        public Output<bool?> EnableBgpRouteTranslationForNat { get; private set; } = null!;

        /// <summary>
        /// Whether dns forwarding is enabled or not.
        /// </summary>
        [Output("enableDnsForwarding")]
        public Output<bool?> EnableDnsForwarding { get; private set; } = null!;

        /// <summary>
        /// Whether private IP needs to be enabled on this gateway for connections or not.
        /// </summary>
        [Output("enablePrivateIpAddress")]
        public Output<bool?> EnablePrivateIpAddress { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The extended location of type local virtual network gateway.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse?> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
        /// </summary>
        [Output("gatewayDefaultSite")]
        public Output<Outputs.SubResourceResponse?> GatewayDefaultSite { get; private set; } = null!;

        /// <summary>
        /// The type of this virtual network gateway.
        /// </summary>
        [Output("gatewayType")]
        public Output<string?> GatewayType { get; private set; } = null!;

        /// <summary>
        /// The IP address allocated by the gateway to which dns requests can be sent.
        /// </summary>
        [Output("inboundDnsForwardingEndpoint")]
        public Output<string> InboundDnsForwardingEndpoint { get; private set; } = null!;

        /// <summary>
        /// IP configurations for virtual network gateway.
        /// </summary>
        [Output("ipConfigurations")]
        public Output<ImmutableArray<Outputs.VirtualNetworkGatewayIPConfigurationResponse>> IpConfigurations { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// NatRules for virtual network gateway.
        /// </summary>
        [Output("natRules")]
        public Output<ImmutableArray<Outputs.VirtualNetworkGatewayNatRuleResponse>> NatRules { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the virtual network gateway resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The resource GUID property of the virtual network gateway resource.
        /// </summary>
        [Output("resourceGuid")]
        public Output<string> ResourceGuid { get; private set; } = null!;

        /// <summary>
        /// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.VirtualNetworkGatewaySkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
        /// </summary>
        [Output("vNetExtendedLocationResourceId")]
        public Output<string?> VNetExtendedLocationResourceId { get; private set; } = null!;

        /// <summary>
        /// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
        /// </summary>
        [Output("virtualNetworkGatewayPolicyGroups")]
        public Output<ImmutableArray<Outputs.VirtualNetworkGatewayPolicyGroupResponse>> VirtualNetworkGatewayPolicyGroups { get; private set; } = null!;

        /// <summary>
        /// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
        /// </summary>
        [Output("vpnClientConfiguration")]
        public Output<Outputs.VpnClientConfigurationResponse?> VpnClientConfiguration { get; private set; } = null!;

        /// <summary>
        /// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
        /// </summary>
        [Output("vpnGatewayGeneration")]
        public Output<string?> VpnGatewayGeneration { get; private set; } = null!;

        /// <summary>
        /// The type of this virtual network gateway.
        /// </summary>
        [Output("vpnType")]
        public Output<string?> VpnType { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualNetworkGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualNetworkGateway(string name, VirtualNetworkGatewayArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network:VirtualNetworkGateway", name, args ?? new VirtualNetworkGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualNetworkGateway(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network:VirtualNetworkGateway", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network/v20150615:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20160330:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20160601:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20160901:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20161201:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20170301:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20170601:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20170801:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20170901:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20171001:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20171101:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20180101:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20180201:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20180401:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20180601:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20180701:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20180801:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20181001:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20181101:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20181201:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190201:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190401:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190601:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190701:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190801:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190901:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20191101:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20191201:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200301:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200401:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200501:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200601:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200701:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200801:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20201101:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210201:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210301:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210501:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210801:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220101:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220501:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220701:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220901:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20221101:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230201:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230401:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230501:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230601:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230901:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20231101:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20240101:VirtualNetworkGateway" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20240301:VirtualNetworkGateway" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualNetworkGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualNetworkGateway Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VirtualNetworkGateway(name, id, options);
        }
    }

    public sealed class VirtualNetworkGatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ActiveActive flag.
        /// </summary>
        [Input("activeActive")]
        public Input<bool>? ActiveActive { get; set; }

        /// <summary>
        /// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
        /// </summary>
        [Input("adminState")]
        public InputUnion<string, Pulumi.AzureNative.Network.AdminState>? AdminState { get; set; }

        /// <summary>
        /// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
        /// </summary>
        [Input("allowRemoteVnetTraffic")]
        public Input<bool>? AllowRemoteVnetTraffic { get; set; }

        /// <summary>
        /// Configures this gateway to accept traffic from remote Virtual WAN networks.
        /// </summary>
        [Input("allowVirtualWanTraffic")]
        public Input<bool>? AllowVirtualWanTraffic { get; set; }

        /// <summary>
        /// Virtual network gateway's BGP speaker settings.
        /// </summary>
        [Input("bgpSettings")]
        public Input<Inputs.BgpSettingsArgs>? BgpSettings { get; set; }

        /// <summary>
        /// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
        /// </summary>
        [Input("customRoutes")]
        public Input<Inputs.AddressSpaceArgs>? CustomRoutes { get; set; }

        /// <summary>
        /// disableIPSecReplayProtection flag.
        /// </summary>
        [Input("disableIPSecReplayProtection")]
        public Input<bool>? DisableIPSecReplayProtection { get; set; }

        /// <summary>
        /// Whether BGP is enabled for this virtual network gateway or not.
        /// </summary>
        [Input("enableBgp")]
        public Input<bool>? EnableBgp { get; set; }

        /// <summary>
        /// EnableBgpRouteTranslationForNat flag.
        /// </summary>
        [Input("enableBgpRouteTranslationForNat")]
        public Input<bool>? EnableBgpRouteTranslationForNat { get; set; }

        /// <summary>
        /// Whether dns forwarding is enabled or not.
        /// </summary>
        [Input("enableDnsForwarding")]
        public Input<bool>? EnableDnsForwarding { get; set; }

        /// <summary>
        /// Whether private IP needs to be enabled on this gateway for connections or not.
        /// </summary>
        [Input("enablePrivateIpAddress")]
        public Input<bool>? EnablePrivateIpAddress { get; set; }

        /// <summary>
        /// The extended location of type local virtual network gateway.
        /// </summary>
        [Input("extendedLocation")]
        public Input<Inputs.ExtendedLocationArgs>? ExtendedLocation { get; set; }

        /// <summary>
        /// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
        /// </summary>
        [Input("gatewayDefaultSite")]
        public Input<Inputs.SubResourceArgs>? GatewayDefaultSite { get; set; }

        /// <summary>
        /// The type of this virtual network gateway.
        /// </summary>
        [Input("gatewayType")]
        public InputUnion<string, Pulumi.AzureNative.Network.VirtualNetworkGatewayType>? GatewayType { get; set; }

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("ipConfigurations")]
        private InputList<Inputs.VirtualNetworkGatewayIPConfigurationArgs>? _ipConfigurations;

        /// <summary>
        /// IP configurations for virtual network gateway.
        /// </summary>
        public InputList<Inputs.VirtualNetworkGatewayIPConfigurationArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<Inputs.VirtualNetworkGatewayIPConfigurationArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("natRules")]
        private InputList<Inputs.VirtualNetworkGatewayNatRuleArgs>? _natRules;

        /// <summary>
        /// NatRules for virtual network gateway.
        /// These are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.
        /// </summary>
        public InputList<Inputs.VirtualNetworkGatewayNatRuleArgs> NatRules
        {
            get => _natRules ?? (_natRules = new InputList<Inputs.VirtualNetworkGatewayNatRuleArgs>());
            set => _natRules = value;
        }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.VirtualNetworkGatewaySkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
        /// </summary>
        [Input("vNetExtendedLocationResourceId")]
        public Input<string>? VNetExtendedLocationResourceId { get; set; }

        /// <summary>
        /// The name of the virtual network gateway.
        /// </summary>
        [Input("virtualNetworkGatewayName")]
        public Input<string>? VirtualNetworkGatewayName { get; set; }

        [Input("virtualNetworkGatewayPolicyGroups")]
        private InputList<Inputs.VirtualNetworkGatewayPolicyGroupArgs>? _virtualNetworkGatewayPolicyGroups;

        /// <summary>
        /// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
        /// </summary>
        public InputList<Inputs.VirtualNetworkGatewayPolicyGroupArgs> VirtualNetworkGatewayPolicyGroups
        {
            get => _virtualNetworkGatewayPolicyGroups ?? (_virtualNetworkGatewayPolicyGroups = new InputList<Inputs.VirtualNetworkGatewayPolicyGroupArgs>());
            set => _virtualNetworkGatewayPolicyGroups = value;
        }

        /// <summary>
        /// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
        /// </summary>
        [Input("vpnClientConfiguration")]
        public Input<Inputs.VpnClientConfigurationArgs>? VpnClientConfiguration { get; set; }

        /// <summary>
        /// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
        /// </summary>
        [Input("vpnGatewayGeneration")]
        public InputUnion<string, Pulumi.AzureNative.Network.VpnGatewayGeneration>? VpnGatewayGeneration { get; set; }

        /// <summary>
        /// The type of this virtual network gateway.
        /// </summary>
        [Input("vpnType")]
        public InputUnion<string, Pulumi.AzureNative.Network.VpnType>? VpnType { get; set; }

        public VirtualNetworkGatewayArgs()
        {
        }
        public static new VirtualNetworkGatewayArgs Empty => new VirtualNetworkGatewayArgs();
    }
}
