// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20180701.Outputs
{

    [OutputType]
    public sealed class AzureFirewallIPConfigurationPropertiesFormatResponseResult
    {
        /// <summary>
        /// Reference of the PublicIP resource. This field is a mandatory input.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? InternalPublicIpAddress;
        /// <summary>
        /// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
        /// </summary>
        public readonly string? PrivateIPAddress;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Reference of the PublicIP resource. This field is populated in the output.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? PublicIPAddress;
        /// <summary>
        /// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? Subnet;

        [OutputConstructor]
        private AzureFirewallIPConfigurationPropertiesFormatResponseResult(
            Outputs.SubResourceResponseResult? internalPublicIpAddress,

            string? privateIPAddress,

            string? provisioningState,

            Outputs.SubResourceResponseResult? publicIPAddress,

            Outputs.SubResourceResponseResult? subnet)
        {
            InternalPublicIpAddress = internalPublicIpAddress;
            PrivateIPAddress = privateIPAddress;
            ProvisioningState = provisioningState;
            PublicIPAddress = publicIPAddress;
            Subnet = subnet;
        }
    }
}
