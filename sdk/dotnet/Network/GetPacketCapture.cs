// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class GetPacketCapture
    {
        /// <summary>
        /// Gets a packet capture session by name.
        /// 
        /// Uses Azure REST API version 2024-05-01.
        /// 
        /// Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01, 2024-10-01, 2025-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetPacketCaptureResult> InvokeAsync(GetPacketCaptureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPacketCaptureResult>("azure-native:network:getPacketCapture", args ?? new GetPacketCaptureArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a packet capture session by name.
        /// 
        /// Uses Azure REST API version 2024-05-01.
        /// 
        /// Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01, 2024-10-01, 2025-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetPacketCaptureResult> Invoke(GetPacketCaptureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPacketCaptureResult>("azure-native:network:getPacketCapture", args ?? new GetPacketCaptureInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a packet capture session by name.
        /// 
        /// Uses Azure REST API version 2024-05-01.
        /// 
        /// Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01, 2024-10-01, 2025-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetPacketCaptureResult> Invoke(GetPacketCaptureInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPacketCaptureResult>("azure-native:network:getPacketCapture", args ?? new GetPacketCaptureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPacketCaptureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network watcher.
        /// </summary>
        [Input("networkWatcherName", required: true)]
        public string NetworkWatcherName { get; set; } = null!;

        /// <summary>
        /// The name of the packet capture session.
        /// </summary>
        [Input("packetCaptureName", required: true)]
        public string PacketCaptureName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPacketCaptureArgs()
        {
        }
        public static new GetPacketCaptureArgs Empty => new GetPacketCaptureArgs();
    }

    public sealed class GetPacketCaptureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network watcher.
        /// </summary>
        [Input("networkWatcherName", required: true)]
        public Input<string> NetworkWatcherName { get; set; } = null!;

        /// <summary>
        /// The name of the packet capture session.
        /// </summary>
        [Input("packetCaptureName", required: true)]
        public Input<string> PacketCaptureName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPacketCaptureInvokeArgs()
        {
        }
        public static new GetPacketCaptureInvokeArgs Empty => new GetPacketCaptureInvokeArgs();
    }


    [OutputType]
    public sealed class GetPacketCaptureResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Number of bytes captured per packet, the remaining bytes are truncated.
        /// </summary>
        public readonly double? BytesToCapturePerPacket;
        /// <summary>
        /// The capture setting holds the 'FileCount', 'FileSizeInBytes', 'SessionTimeLimitInSeconds' values.
        /// </summary>
        public readonly Outputs.PacketCaptureSettingsResponse? CaptureSettings;
        /// <summary>
        /// This continuous capture is a nullable boolean, which can hold 'null', 'true' or 'false' value. If we do not pass this parameter, it would be consider as 'null', default value is 'null'.
        /// </summary>
        public readonly bool? ContinuousCapture;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// A list of packet capture filters.
        /// </summary>
        public readonly ImmutableArray<Outputs.PacketCaptureFilterResponse> Filters;
        /// <summary>
        /// ID of the packet capture operation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the packet capture session.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the packet capture session.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
        /// </summary>
        public readonly Outputs.PacketCaptureMachineScopeResponse? Scope;
        /// <summary>
        /// The storage location for a packet capture session.
        /// </summary>
        public readonly Outputs.PacketCaptureStorageLocationResponse StorageLocation;
        /// <summary>
        /// The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported.
        /// </summary>
        public readonly string Target;
        /// <summary>
        /// Target type of the resource provided.
        /// </summary>
        public readonly string? TargetType;
        /// <summary>
        /// Maximum duration of the capture session in seconds.
        /// </summary>
        public readonly int? TimeLimitInSeconds;
        /// <summary>
        /// Maximum size of the capture output.
        /// </summary>
        public readonly double? TotalBytesPerSession;

        [OutputConstructor]
        private GetPacketCaptureResult(
            string azureApiVersion,

            double? bytesToCapturePerPacket,

            Outputs.PacketCaptureSettingsResponse? captureSettings,

            bool? continuousCapture,

            string etag,

            ImmutableArray<Outputs.PacketCaptureFilterResponse> filters,

            string id,

            string name,

            string provisioningState,

            Outputs.PacketCaptureMachineScopeResponse? scope,

            Outputs.PacketCaptureStorageLocationResponse storageLocation,

            string target,

            string? targetType,

            int? timeLimitInSeconds,

            double? totalBytesPerSession)
        {
            AzureApiVersion = azureApiVersion;
            BytesToCapturePerPacket = bytesToCapturePerPacket;
            CaptureSettings = captureSettings;
            ContinuousCapture = continuousCapture;
            Etag = etag;
            Filters = filters;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Scope = scope;
            StorageLocation = storageLocation;
            Target = target;
            TargetType = targetType;
            TimeLimitInSeconds = timeLimitInSeconds;
            TotalBytesPerSession = totalBytesPerSession;
        }
    }
}
