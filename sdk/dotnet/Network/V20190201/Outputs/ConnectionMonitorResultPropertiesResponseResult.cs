// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20190201.Outputs
{

    [OutputType]
    public sealed class ConnectionMonitorResultPropertiesResponseResult
    {
        /// <summary>
        /// Determines if the connection monitor will start automatically once created.
        /// </summary>
        public readonly bool? AutoStart;
        /// <summary>
        /// Describes the destination of connection monitor.
        /// </summary>
        public readonly Outputs.ConnectionMonitorDestinationResponseResult Destination;
        /// <summary>
        /// Monitoring interval in seconds.
        /// </summary>
        public readonly int? MonitoringIntervalInSeconds;
        /// <summary>
        /// The monitoring status of the connection monitor.
        /// </summary>
        public readonly string? MonitoringStatus;
        /// <summary>
        /// The provisioning state of the connection monitor.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Describes the source of connection monitor.
        /// </summary>
        public readonly Outputs.ConnectionMonitorSourceResponseResult Source;
        /// <summary>
        /// The date and time when the connection monitor was started.
        /// </summary>
        public readonly string? StartTime;

        [OutputConstructor]
        private ConnectionMonitorResultPropertiesResponseResult(
            bool? autoStart,

            Outputs.ConnectionMonitorDestinationResponseResult destination,

            int? monitoringIntervalInSeconds,

            string? monitoringStatus,

            string? provisioningState,

            Outputs.ConnectionMonitorSourceResponseResult source,

            string? startTime)
        {
            AutoStart = autoStart;
            Destination = destination;
            MonitoringIntervalInSeconds = monitoringIntervalInSeconds;
            MonitoringStatus = monitoringStatus;
            ProvisioningState = provisioningState;
            Source = source;
            StartTime = startTime;
        }
    }
}
