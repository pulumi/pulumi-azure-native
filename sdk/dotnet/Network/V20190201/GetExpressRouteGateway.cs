// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20190201
{
    public static class GetExpressRouteGateway
    {
        /// <summary>
        /// Fetches the details of a ExpressRoute gateway in a resource group.
        /// </summary>
        public static Task<GetExpressRouteGatewayResult> InvokeAsync(GetExpressRouteGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExpressRouteGatewayResult>("azure-native:network/v20190201:getExpressRouteGateway", args ?? new GetExpressRouteGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Fetches the details of a ExpressRoute gateway in a resource group.
        /// </summary>
        public static Output<GetExpressRouteGatewayResult> Invoke(GetExpressRouteGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExpressRouteGatewayResult>("azure-native:network/v20190201:getExpressRouteGateway", args ?? new GetExpressRouteGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExpressRouteGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ExpressRoute gateway.
        /// </summary>
        [Input("expressRouteGatewayName", required: true)]
        public string ExpressRouteGatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetExpressRouteGatewayArgs()
        {
        }
        public static new GetExpressRouteGatewayArgs Empty => new GetExpressRouteGatewayArgs();
    }

    public sealed class GetExpressRouteGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ExpressRoute gateway.
        /// </summary>
        [Input("expressRouteGatewayName", required: true)]
        public Input<string> ExpressRouteGatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetExpressRouteGatewayInvokeArgs()
        {
        }
        public static new GetExpressRouteGatewayInvokeArgs Empty => new GetExpressRouteGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetExpressRouteGatewayResult
    {
        /// <summary>
        /// Configuration for auto scaling.
        /// </summary>
        public readonly Outputs.ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration? AutoScaleConfiguration;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// List of ExpressRoute connections to the ExpressRoute gateway.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExpressRouteConnectionResponse> ExpressRouteConnections;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
        /// </summary>
        public readonly Outputs.VirtualHubIdResponse VirtualHub;

        [OutputConstructor]
        private GetExpressRouteGatewayResult(
            Outputs.ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration? autoScaleConfiguration,

            string etag,

            ImmutableArray<Outputs.ExpressRouteConnectionResponse> expressRouteConnections,

            string? id,

            string? location,

            string name,

            string provisioningState,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.VirtualHubIdResponse virtualHub)
        {
            AutoScaleConfiguration = autoScaleConfiguration;
            Etag = etag;
            ExpressRouteConnections = expressRouteConnections;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
            VirtualHub = virtualHub;
        }
    }
}
