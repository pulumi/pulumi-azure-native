// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class GetVirtualNetworkGatewayConnection
    {
        /// <summary>
        /// Gets the specified virtual network gateway connection by resource group.
        /// API Version: 2020-11-01.
        /// </summary>
        public static Task<GetVirtualNetworkGatewayConnectionResult> InvokeAsync(GetVirtualNetworkGatewayConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualNetworkGatewayConnectionResult>("azure-native:network:getVirtualNetworkGatewayConnection", args ?? new GetVirtualNetworkGatewayConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified virtual network gateway connection by resource group.
        /// API Version: 2020-11-01.
        /// </summary>
        public static Output<GetVirtualNetworkGatewayConnectionResult> Invoke(GetVirtualNetworkGatewayConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualNetworkGatewayConnectionResult>("azure-native:network:getVirtualNetworkGatewayConnection", args ?? new GetVirtualNetworkGatewayConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualNetworkGatewayConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual network gateway connection.
        /// </summary>
        [Input("virtualNetworkGatewayConnectionName", required: true)]
        public string VirtualNetworkGatewayConnectionName { get; set; } = null!;

        public GetVirtualNetworkGatewayConnectionArgs()
        {
        }
        public static new GetVirtualNetworkGatewayConnectionArgs Empty => new GetVirtualNetworkGatewayConnectionArgs();
    }

    public sealed class GetVirtualNetworkGatewayConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual network gateway connection.
        /// </summary>
        [Input("virtualNetworkGatewayConnectionName", required: true)]
        public Input<string> VirtualNetworkGatewayConnectionName { get; set; } = null!;

        public GetVirtualNetworkGatewayConnectionInvokeArgs()
        {
        }
        public static new GetVirtualNetworkGatewayConnectionInvokeArgs Empty => new GetVirtualNetworkGatewayConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualNetworkGatewayConnectionResult
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the virtual network gateway connection.
        /// </summary>
        public readonly Outputs.VirtualNetworkGatewayConnectionPropertiesFormatResponse Properties;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVirtualNetworkGatewayConnectionResult(
            string etag,

            string? id,

            string? location,

            string name,

            Outputs.VirtualNetworkGatewayConnectionPropertiesFormatResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
