// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Properties of Frontend IP Configuration of the load balancer.
    /// </summary>
    public sealed class FrontendIPConfigurationPropertiesFormatResponseGetArgs : Pulumi.ResourceArgs
    {
        [Input("inboundNatPools", required: true)]
        private InputList<Inputs.SubResourceResponseGetArgs>? _inboundNatPools;

        /// <summary>
        /// An array of references to inbound pools that use this frontend IP.
        /// </summary>
        public InputList<Inputs.SubResourceResponseGetArgs> InboundNatPools
        {
            get => _inboundNatPools ?? (_inboundNatPools = new InputList<Inputs.SubResourceResponseGetArgs>());
            set => _inboundNatPools = value;
        }

        [Input("inboundNatRules", required: true)]
        private InputList<Inputs.SubResourceResponseGetArgs>? _inboundNatRules;

        /// <summary>
        /// An array of references to inbound rules that use this frontend IP.
        /// </summary>
        public InputList<Inputs.SubResourceResponseGetArgs> InboundNatRules
        {
            get => _inboundNatRules ?? (_inboundNatRules = new InputList<Inputs.SubResourceResponseGetArgs>());
            set => _inboundNatRules = value;
        }

        [Input("loadBalancingRules", required: true)]
        private InputList<Inputs.SubResourceResponseGetArgs>? _loadBalancingRules;

        /// <summary>
        /// An array of references to load balancing rules that use this frontend IP.
        /// </summary>
        public InputList<Inputs.SubResourceResponseGetArgs> LoadBalancingRules
        {
            get => _loadBalancingRules ?? (_loadBalancingRules = new InputList<Inputs.SubResourceResponseGetArgs>());
            set => _loadBalancingRules = value;
        }

        [Input("outboundRules", required: true)]
        private InputList<Inputs.SubResourceResponseGetArgs>? _outboundRules;

        /// <summary>
        /// An array of references to outbound rules that use this frontend IP.
        /// </summary>
        public InputList<Inputs.SubResourceResponseGetArgs> OutboundRules
        {
            get => _outboundRules ?? (_outboundRules = new InputList<Inputs.SubResourceResponseGetArgs>());
            set => _outboundRules = value;
        }

        /// <summary>
        /// The private IP address of the IP configuration.
        /// </summary>
        [Input("privateIPAddress")]
        public Input<string>? PrivateIPAddress { get; set; }

        /// <summary>
        /// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
        /// </summary>
        [Input("privateIPAddressVersion")]
        public Input<string>? PrivateIPAddressVersion { get; set; }

        /// <summary>
        /// The Private IP allocation method.
        /// </summary>
        [Input("privateIPAllocationMethod")]
        public Input<string>? PrivateIPAllocationMethod { get; set; }

        /// <summary>
        /// The provisioning state of the frontend IP configuration resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The reference to the Public IP resource.
        /// </summary>
        [Input("publicIPAddress")]
        public Input<Inputs.PublicIPAddressResponseGetArgs>? PublicIPAddress { get; set; }

        /// <summary>
        /// The reference to the Public IP Prefix resource.
        /// </summary>
        [Input("publicIPPrefix")]
        public Input<Inputs.SubResourceResponseGetArgs>? PublicIPPrefix { get; set; }

        /// <summary>
        /// The reference to the subnet resource.
        /// </summary>
        [Input("subnet")]
        public Input<Inputs.SubnetResponseGetArgs>? Subnet { get; set; }

        public FrontendIPConfigurationPropertiesFormatResponseGetArgs()
        {
        }
    }
}
