// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Parameters for VpnConnection.
    /// </summary>
    public sealed class VpnSiteLinkConnectionPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Expected bandwidth in MBPS.
        /// </summary>
        [Input("connectionBandwidth")]
        public Input<int>? ConnectionBandwidth { get; set; }

        /// <summary>
        /// The connection status.
        /// </summary>
        [Input("connectionStatus")]
        public Input<string>? ConnectionStatus { get; set; }

        /// <summary>
        /// Egress bytes transferred.
        /// </summary>
        [Input("egressBytesTransferred", required: true)]
        public Input<int> EgressBytesTransferred { get; set; } = null!;

        /// <summary>
        /// EnableBgp flag.
        /// </summary>
        [Input("enableBgp")]
        public Input<bool>? EnableBgp { get; set; }

        /// <summary>
        /// EnableBgp flag.
        /// </summary>
        [Input("enableRateLimiting")]
        public Input<bool>? EnableRateLimiting { get; set; }

        /// <summary>
        /// Ingress bytes transferred.
        /// </summary>
        [Input("ingressBytesTransferred", required: true)]
        public Input<int> IngressBytesTransferred { get; set; } = null!;

        [Input("ipsecPolicies")]
        private InputList<Inputs.IpsecPolicyResponseGetArgs>? _ipsecPolicies;

        /// <summary>
        /// The IPSec Policies to be considered by this connection.
        /// </summary>
        public InputList<Inputs.IpsecPolicyResponseGetArgs> IpsecPolicies
        {
            get => _ipsecPolicies ?? (_ipsecPolicies = new InputList<Inputs.IpsecPolicyResponseGetArgs>());
            set => _ipsecPolicies = value;
        }

        /// <summary>
        /// The provisioning state of the VPN site link connection resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// Routing weight for vpn connection.
        /// </summary>
        [Input("routingWeight")]
        public Input<int>? RoutingWeight { get; set; }

        /// <summary>
        /// SharedKey for the vpn connection.
        /// </summary>
        [Input("sharedKey")]
        public Input<string>? SharedKey { get; set; }

        /// <summary>
        /// Use local azure ip to initiate connection.
        /// </summary>
        [Input("useLocalAzureIpAddress")]
        public Input<bool>? UseLocalAzureIpAddress { get; set; }

        /// <summary>
        /// Enable policy-based traffic selectors.
        /// </summary>
        [Input("usePolicyBasedTrafficSelectors")]
        public Input<bool>? UsePolicyBasedTrafficSelectors { get; set; }

        /// <summary>
        /// Connection protocol used for this connection.
        /// </summary>
        [Input("vpnConnectionProtocolType")]
        public Input<string>? VpnConnectionProtocolType { get; set; }

        /// <summary>
        /// Id of the connected vpn site link.
        /// </summary>
        [Input("vpnSiteLink")]
        public Input<Inputs.SubResourceResponseGetArgs>? VpnSiteLink { get; set; }

        public VpnSiteLinkConnectionPropertiesResponseGetArgs()
        {
        }
    }
}
