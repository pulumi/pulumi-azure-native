// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Properties of the subnet.
    /// </summary>
    public sealed class SubnetPropertiesFormatResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The address prefix for the subnet.
        /// </summary>
        [Input("addressPrefix")]
        public Input<string>? AddressPrefix { get; set; }

        [Input("addressPrefixes")]
        private InputList<string>? _addressPrefixes;

        /// <summary>
        /// List of address prefixes for the subnet.
        /// </summary>
        public InputList<string> AddressPrefixes
        {
            get => _addressPrefixes ?? (_addressPrefixes = new InputList<string>());
            set => _addressPrefixes = value;
        }

        [Input("delegations")]
        private InputList<Inputs.DelegationResponseGetArgs>? _delegations;

        /// <summary>
        /// An array of references to the delegations on the subnet.
        /// </summary>
        public InputList<Inputs.DelegationResponseGetArgs> Delegations
        {
            get => _delegations ?? (_delegations = new InputList<Inputs.DelegationResponseGetArgs>());
            set => _delegations = value;
        }

        [Input("ipAllocations")]
        private InputList<Inputs.SubResourceResponseGetArgs>? _ipAllocations;

        /// <summary>
        /// Array of IpAllocation which reference this subnet.
        /// </summary>
        public InputList<Inputs.SubResourceResponseGetArgs> IpAllocations
        {
            get => _ipAllocations ?? (_ipAllocations = new InputList<Inputs.SubResourceResponseGetArgs>());
            set => _ipAllocations = value;
        }

        [Input("ipConfigurationProfiles", required: true)]
        private InputList<Inputs.IPConfigurationProfileResponseGetArgs>? _ipConfigurationProfiles;

        /// <summary>
        /// Array of IP configuration profiles which reference this subnet.
        /// </summary>
        public InputList<Inputs.IPConfigurationProfileResponseGetArgs> IpConfigurationProfiles
        {
            get => _ipConfigurationProfiles ?? (_ipConfigurationProfiles = new InputList<Inputs.IPConfigurationProfileResponseGetArgs>());
            set => _ipConfigurationProfiles = value;
        }

        [Input("ipConfigurations", required: true)]
        private InputList<Inputs.IPConfigurationResponseGetArgs>? _ipConfigurations;

        /// <summary>
        /// An array of references to the network interface IP configurations using subnet.
        /// </summary>
        public InputList<Inputs.IPConfigurationResponseGetArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<Inputs.IPConfigurationResponseGetArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// Nat gateway associated with this subnet.
        /// </summary>
        [Input("natGateway")]
        public Input<Inputs.SubResourceResponseGetArgs>? NatGateway { get; set; }

        /// <summary>
        /// The reference to the NetworkSecurityGroup resource.
        /// </summary>
        [Input("networkSecurityGroup")]
        public Input<Inputs.NetworkSecurityGroupResponseGetArgs>? NetworkSecurityGroup { get; set; }

        /// <summary>
        /// Enable or Disable apply network policies on private end point in the subnet.
        /// </summary>
        [Input("privateEndpointNetworkPolicies")]
        public Input<string>? PrivateEndpointNetworkPolicies { get; set; }

        [Input("privateEndpoints", required: true)]
        private InputList<Inputs.PrivateEndpointResponseGetArgs>? _privateEndpoints;

        /// <summary>
        /// An array of references to private endpoints.
        /// </summary>
        public InputList<Inputs.PrivateEndpointResponseGetArgs> PrivateEndpoints
        {
            get => _privateEndpoints ?? (_privateEndpoints = new InputList<Inputs.PrivateEndpointResponseGetArgs>());
            set => _privateEndpoints = value;
        }

        /// <summary>
        /// Enable or Disable apply network policies on private link service in the subnet.
        /// </summary>
        [Input("privateLinkServiceNetworkPolicies")]
        public Input<string>? PrivateLinkServiceNetworkPolicies { get; set; }

        /// <summary>
        /// The provisioning state of the subnet resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
        /// </summary>
        [Input("purpose", required: true)]
        public Input<string> Purpose { get; set; } = null!;

        [Input("resourceNavigationLinks", required: true)]
        private InputList<Inputs.ResourceNavigationLinkResponseGetArgs>? _resourceNavigationLinks;

        /// <summary>
        /// An array of references to the external resources using subnet.
        /// </summary>
        public InputList<Inputs.ResourceNavigationLinkResponseGetArgs> ResourceNavigationLinks
        {
            get => _resourceNavigationLinks ?? (_resourceNavigationLinks = new InputList<Inputs.ResourceNavigationLinkResponseGetArgs>());
            set => _resourceNavigationLinks = value;
        }

        /// <summary>
        /// The reference to the RouteTable resource.
        /// </summary>
        [Input("routeTable")]
        public Input<Inputs.RouteTableResponseGetArgs>? RouteTable { get; set; }

        [Input("serviceAssociationLinks", required: true)]
        private InputList<Inputs.ServiceAssociationLinkResponseGetArgs>? _serviceAssociationLinks;

        /// <summary>
        /// An array of references to services injecting into this subnet.
        /// </summary>
        public InputList<Inputs.ServiceAssociationLinkResponseGetArgs> ServiceAssociationLinks
        {
            get => _serviceAssociationLinks ?? (_serviceAssociationLinks = new InputList<Inputs.ServiceAssociationLinkResponseGetArgs>());
            set => _serviceAssociationLinks = value;
        }

        [Input("serviceEndpointPolicies")]
        private InputList<Inputs.ServiceEndpointPolicyResponseGetArgs>? _serviceEndpointPolicies;

        /// <summary>
        /// An array of service endpoint policies.
        /// </summary>
        public InputList<Inputs.ServiceEndpointPolicyResponseGetArgs> ServiceEndpointPolicies
        {
            get => _serviceEndpointPolicies ?? (_serviceEndpointPolicies = new InputList<Inputs.ServiceEndpointPolicyResponseGetArgs>());
            set => _serviceEndpointPolicies = value;
        }

        [Input("serviceEndpoints")]
        private InputList<Inputs.ServiceEndpointPropertiesFormatResponseGetArgs>? _serviceEndpoints;

        /// <summary>
        /// An array of service endpoints.
        /// </summary>
        public InputList<Inputs.ServiceEndpointPropertiesFormatResponseGetArgs> ServiceEndpoints
        {
            get => _serviceEndpoints ?? (_serviceEndpoints = new InputList<Inputs.ServiceEndpointPropertiesFormatResponseGetArgs>());
            set => _serviceEndpoints = value;
        }

        public SubnetPropertiesFormatResponseGetArgs()
        {
        }
    }
}
