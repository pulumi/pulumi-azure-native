// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Properties of the express route circuit peering.
    /// </summary>
    public sealed class ExpressRouteCircuitPeeringPropertiesFormatResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure ASN.
        /// </summary>
        [Input("azureASN")]
        public Input<int>? AzureASN { get; set; }

        [Input("connections")]
        private InputList<Inputs.ExpressRouteCircuitConnectionResponseArgs>? _connections;

        /// <summary>
        /// The list of circuit connections associated with Azure Private Peering for this circuit.
        /// </summary>
        public InputList<Inputs.ExpressRouteCircuitConnectionResponseArgs> Connections
        {
            get => _connections ?? (_connections = new InputList<Inputs.ExpressRouteCircuitConnectionResponseArgs>());
            set => _connections = value;
        }

        /// <summary>
        /// The ExpressRoute connection.
        /// </summary>
        [Input("expressRouteConnection")]
        public Input<Inputs.ExpressRouteConnectionIdResponseArgs>? ExpressRouteConnection { get; set; }

        /// <summary>
        /// The GatewayManager Etag.
        /// </summary>
        [Input("gatewayManagerEtag")]
        public Input<string>? GatewayManagerEtag { get; set; }

        /// <summary>
        /// The IPv6 peering configuration.
        /// </summary>
        [Input("ipv6PeeringConfig")]
        public Input<Inputs.Ipv6ExpressRouteCircuitPeeringConfigResponseArgs>? Ipv6PeeringConfig { get; set; }

        /// <summary>
        /// Who was the last to modify the peering.
        /// </summary>
        [Input("lastModifiedBy", required: true)]
        public Input<string> LastModifiedBy { get; set; } = null!;

        /// <summary>
        /// The Microsoft peering configuration.
        /// </summary>
        [Input("microsoftPeeringConfig")]
        public Input<Inputs.ExpressRouteCircuitPeeringConfigResponseArgs>? MicrosoftPeeringConfig { get; set; }

        /// <summary>
        /// The peer ASN.
        /// </summary>
        [Input("peerASN")]
        public Input<int>? PeerASN { get; set; }

        [Input("peeredConnections", required: true)]
        private InputList<Inputs.PeerExpressRouteCircuitConnectionResponseArgs>? _peeredConnections;

        /// <summary>
        /// The list of peered circuit connections associated with Azure Private Peering for this circuit.
        /// </summary>
        public InputList<Inputs.PeerExpressRouteCircuitConnectionResponseArgs> PeeredConnections
        {
            get => _peeredConnections ?? (_peeredConnections = new InputList<Inputs.PeerExpressRouteCircuitConnectionResponseArgs>());
            set => _peeredConnections = value;
        }

        /// <summary>
        /// The peering type.
        /// </summary>
        [Input("peeringType")]
        public Input<string>? PeeringType { get; set; }

        /// <summary>
        /// The primary port.
        /// </summary>
        [Input("primaryAzurePort")]
        public Input<string>? PrimaryAzurePort { get; set; }

        /// <summary>
        /// The primary address prefix.
        /// </summary>
        [Input("primaryPeerAddressPrefix")]
        public Input<string>? PrimaryPeerAddressPrefix { get; set; }

        /// <summary>
        /// The provisioning state of the express route circuit peering resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The reference to the RouteFilter resource.
        /// </summary>
        [Input("routeFilter")]
        public Input<Inputs.SubResourceResponseArgs>? RouteFilter { get; set; }

        /// <summary>
        /// The secondary port.
        /// </summary>
        [Input("secondaryAzurePort")]
        public Input<string>? SecondaryAzurePort { get; set; }

        /// <summary>
        /// The secondary address prefix.
        /// </summary>
        [Input("secondaryPeerAddressPrefix")]
        public Input<string>? SecondaryPeerAddressPrefix { get; set; }

        /// <summary>
        /// The shared key.
        /// </summary>
        [Input("sharedKey")]
        public Input<string>? SharedKey { get; set; }

        /// <summary>
        /// The peering state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The peering stats of express route circuit.
        /// </summary>
        [Input("stats")]
        public Input<Inputs.ExpressRouteCircuitStatsResponseArgs>? Stats { get; set; }

        /// <summary>
        /// The VLAN ID.
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public ExpressRouteCircuitPeeringPropertiesFormatResponseArgs()
        {
        }
    }
}
