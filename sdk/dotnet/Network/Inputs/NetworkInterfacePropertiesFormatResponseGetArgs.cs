// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// NetworkInterface properties.
    /// </summary>
    public sealed class NetworkInterfacePropertiesFormatResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DNS settings in network interface.
        /// </summary>
        [Input("dnsSettings")]
        public Input<Inputs.NetworkInterfaceDnsSettingsResponseGetArgs>? DnsSettings { get; set; }

        /// <summary>
        /// If the network interface is accelerated networking enabled.
        /// </summary>
        [Input("enableAcceleratedNetworking")]
        public Input<bool>? EnableAcceleratedNetworking { get; set; }

        /// <summary>
        /// Indicates whether IP forwarding is enabled on this network interface.
        /// </summary>
        [Input("enableIPForwarding")]
        public Input<bool>? EnableIPForwarding { get; set; }

        [Input("hostedWorkloads", required: true)]
        private InputList<string>? _hostedWorkloads;

        /// <summary>
        /// A list of references to linked BareMetal resources.
        /// </summary>
        public InputList<string> HostedWorkloads
        {
            get => _hostedWorkloads ?? (_hostedWorkloads = new InputList<string>());
            set => _hostedWorkloads = value;
        }

        [Input("ipConfigurations")]
        private InputList<Inputs.NetworkInterfaceIPConfigurationResponseGetArgs>? _ipConfigurations;

        /// <summary>
        /// A list of IPConfigurations of the network interface.
        /// </summary>
        public InputList<Inputs.NetworkInterfaceIPConfigurationResponseGetArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<Inputs.NetworkInterfaceIPConfigurationResponseGetArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// The MAC address of the network interface.
        /// </summary>
        [Input("macAddress", required: true)]
        public Input<string> MacAddress { get; set; } = null!;

        /// <summary>
        /// The reference to the NetworkSecurityGroup resource.
        /// </summary>
        [Input("networkSecurityGroup")]
        public Input<Inputs.NetworkSecurityGroupResponseGetArgs>? NetworkSecurityGroup { get; set; }

        /// <summary>
        /// Whether this is a primary network interface on a virtual machine.
        /// </summary>
        [Input("primary", required: true)]
        public Input<bool> Primary { get; set; } = null!;

        /// <summary>
        /// A reference to the private endpoint to which the network interface is linked.
        /// </summary>
        [Input("privateEndpoint", required: true)]
        public Input<Inputs.PrivateEndpointResponseGetArgs> PrivateEndpoint { get; set; } = null!;

        /// <summary>
        /// The provisioning state of the network interface resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The resource GUID property of the network interface resource.
        /// </summary>
        [Input("resourceGuid", required: true)]
        public Input<string> ResourceGuid { get; set; } = null!;

        [Input("tapConfigurations", required: true)]
        private InputList<Inputs.NetworkInterfaceTapConfigurationResponseGetArgs>? _tapConfigurations;

        /// <summary>
        /// A list of TapConfigurations of the network interface.
        /// </summary>
        public InputList<Inputs.NetworkInterfaceTapConfigurationResponseGetArgs> TapConfigurations
        {
            get => _tapConfigurations ?? (_tapConfigurations = new InputList<Inputs.NetworkInterfaceTapConfigurationResponseGetArgs>());
            set => _tapConfigurations = value;
        }

        /// <summary>
        /// The reference to a virtual machine.
        /// </summary>
        [Input("virtualMachine", required: true)]
        public Input<Inputs.SubResourceResponseGetArgs> VirtualMachine { get; set; } = null!;

        public NetworkInterfacePropertiesFormatResponseGetArgs()
        {
        }
    }
}
