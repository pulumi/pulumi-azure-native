// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Properties of IP configuration.
    /// </summary>
    public sealed class NetworkInterfaceIPConfigurationPropertiesFormatResponseGetArgs : Pulumi.ResourceArgs
    {
        [Input("applicationGatewayBackendAddressPools")]
        private InputList<Inputs.ApplicationGatewayBackendAddressPoolResponseGetArgs>? _applicationGatewayBackendAddressPools;

        /// <summary>
        /// The reference to ApplicationGatewayBackendAddressPool resource.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendAddressPoolResponseGetArgs> ApplicationGatewayBackendAddressPools
        {
            get => _applicationGatewayBackendAddressPools ?? (_applicationGatewayBackendAddressPools = new InputList<Inputs.ApplicationGatewayBackendAddressPoolResponseGetArgs>());
            set => _applicationGatewayBackendAddressPools = value;
        }

        [Input("applicationSecurityGroups")]
        private InputList<Inputs.ApplicationSecurityGroupResponseGetArgs>? _applicationSecurityGroups;

        /// <summary>
        /// Application security groups in which the IP configuration is included.
        /// </summary>
        public InputList<Inputs.ApplicationSecurityGroupResponseGetArgs> ApplicationSecurityGroups
        {
            get => _applicationSecurityGroups ?? (_applicationSecurityGroups = new InputList<Inputs.ApplicationSecurityGroupResponseGetArgs>());
            set => _applicationSecurityGroups = value;
        }

        [Input("loadBalancerBackendAddressPools")]
        private InputList<Inputs.BackendAddressPoolResponseGetArgs>? _loadBalancerBackendAddressPools;

        /// <summary>
        /// The reference to LoadBalancerBackendAddressPool resource.
        /// </summary>
        public InputList<Inputs.BackendAddressPoolResponseGetArgs> LoadBalancerBackendAddressPools
        {
            get => _loadBalancerBackendAddressPools ?? (_loadBalancerBackendAddressPools = new InputList<Inputs.BackendAddressPoolResponseGetArgs>());
            set => _loadBalancerBackendAddressPools = value;
        }

        [Input("loadBalancerInboundNatRules")]
        private InputList<Inputs.InboundNatRuleResponseGetArgs>? _loadBalancerInboundNatRules;

        /// <summary>
        /// A list of references of LoadBalancerInboundNatRules.
        /// </summary>
        public InputList<Inputs.InboundNatRuleResponseGetArgs> LoadBalancerInboundNatRules
        {
            get => _loadBalancerInboundNatRules ?? (_loadBalancerInboundNatRules = new InputList<Inputs.InboundNatRuleResponseGetArgs>());
            set => _loadBalancerInboundNatRules = value;
        }

        /// <summary>
        /// Whether this is a primary customer address on the network interface.
        /// </summary>
        [Input("primary")]
        public Input<bool>? Primary { get; set; }

        /// <summary>
        /// Private IP address of the IP configuration.
        /// </summary>
        [Input("privateIPAddress")]
        public Input<string>? PrivateIPAddress { get; set; }

        /// <summary>
        /// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
        /// </summary>
        [Input("privateIPAddressVersion")]
        public Input<string>? PrivateIPAddressVersion { get; set; }

        /// <summary>
        /// The private IP address allocation method.
        /// </summary>
        [Input("privateIPAllocationMethod")]
        public Input<string>? PrivateIPAllocationMethod { get; set; }

        /// <summary>
        /// PrivateLinkConnection properties for the network interface.
        /// </summary>
        [Input("privateLinkConnectionProperties", required: true)]
        public Input<Inputs.NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseGetArgs> PrivateLinkConnectionProperties { get; set; } = null!;

        /// <summary>
        /// The provisioning state of the network interface IP configuration.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// Public IP address bound to the IP configuration.
        /// </summary>
        [Input("publicIPAddress")]
        public Input<Inputs.PublicIPAddressResponseGetArgs>? PublicIPAddress { get; set; }

        /// <summary>
        /// Subnet bound to the IP configuration.
        /// </summary>
        [Input("subnet")]
        public Input<Inputs.SubnetResponseGetArgs>? Subnet { get; set; }

        [Input("virtualNetworkTaps")]
        private InputList<Inputs.VirtualNetworkTapResponseGetArgs>? _virtualNetworkTaps;

        /// <summary>
        /// The reference to Virtual Network Taps.
        /// </summary>
        public InputList<Inputs.VirtualNetworkTapResponseGetArgs> VirtualNetworkTaps
        {
            get => _virtualNetworkTaps ?? (_virtualNetworkTaps = new InputList<Inputs.VirtualNetworkTapResponseGetArgs>());
            set => _virtualNetworkTaps = value;
        }

        public NetworkInterfaceIPConfigurationPropertiesFormatResponseGetArgs()
        {
        }
    }
}
