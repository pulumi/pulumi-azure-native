// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Properties of the private endpoint.
    /// </summary>
    public sealed class PrivateEndpointPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        [Input("customDnsConfigs")]
        private InputList<Inputs.CustomDnsConfigPropertiesFormatResponseGetArgs>? _customDnsConfigs;

        /// <summary>
        /// An array of custom dns configurations.
        /// </summary>
        public InputList<Inputs.CustomDnsConfigPropertiesFormatResponseGetArgs> CustomDnsConfigs
        {
            get => _customDnsConfigs ?? (_customDnsConfigs = new InputList<Inputs.CustomDnsConfigPropertiesFormatResponseGetArgs>());
            set => _customDnsConfigs = value;
        }

        [Input("manualPrivateLinkServiceConnections")]
        private InputList<Inputs.PrivateLinkServiceConnectionResponseGetArgs>? _manualPrivateLinkServiceConnections;

        /// <summary>
        /// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
        /// </summary>
        public InputList<Inputs.PrivateLinkServiceConnectionResponseGetArgs> ManualPrivateLinkServiceConnections
        {
            get => _manualPrivateLinkServiceConnections ?? (_manualPrivateLinkServiceConnections = new InputList<Inputs.PrivateLinkServiceConnectionResponseGetArgs>());
            set => _manualPrivateLinkServiceConnections = value;
        }

        [Input("networkInterfaces", required: true)]
        private InputList<Inputs.NetworkInterfaceResponseGetArgs>? _networkInterfaces;

        /// <summary>
        /// An array of references to the network interfaces created for this private endpoint.
        /// </summary>
        public InputList<Inputs.NetworkInterfaceResponseGetArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.NetworkInterfaceResponseGetArgs>());
            set => _networkInterfaces = value;
        }

        [Input("privateLinkServiceConnections")]
        private InputList<Inputs.PrivateLinkServiceConnectionResponseGetArgs>? _privateLinkServiceConnections;

        /// <summary>
        /// A grouping of information about the connection to the remote resource.
        /// </summary>
        public InputList<Inputs.PrivateLinkServiceConnectionResponseGetArgs> PrivateLinkServiceConnections
        {
            get => _privateLinkServiceConnections ?? (_privateLinkServiceConnections = new InputList<Inputs.PrivateLinkServiceConnectionResponseGetArgs>());
            set => _privateLinkServiceConnections = value;
        }

        /// <summary>
        /// The provisioning state of the private endpoint resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The ID of the subnet from which the private IP will be allocated.
        /// </summary>
        [Input("subnet")]
        public Input<Inputs.SubnetResponseGetArgs>? Subnet { get; set; }

        public PrivateEndpointPropertiesResponseGetArgs()
        {
        }
    }
}
