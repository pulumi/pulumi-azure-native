// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Parameters for VirtualWAN.
    /// </summary>
    public sealed class VirtualWanPropertiesResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// True if branch to branch traffic is allowed.
        /// </summary>
        [Input("allowBranchToBranchTraffic")]
        public Input<bool>? AllowBranchToBranchTraffic { get; set; }

        /// <summary>
        /// True if Vnet to Vnet traffic is allowed.
        /// </summary>
        [Input("allowVnetToVnetTraffic")]
        public Input<bool>? AllowVnetToVnetTraffic { get; set; }

        /// <summary>
        /// Vpn encryption to be disabled or not.
        /// </summary>
        [Input("disableVpnEncryption")]
        public Input<bool>? DisableVpnEncryption { get; set; }

        /// <summary>
        /// The office local breakout category.
        /// </summary>
        [Input("office365LocalBreakoutCategory")]
        public Input<string>? Office365LocalBreakoutCategory { get; set; }

        /// <summary>
        /// The provisioning state of the virtual WAN resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The type of the VirtualWAN.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("virtualHubs", required: true)]
        private InputList<Inputs.SubResourceResponseArgs>? _virtualHubs;

        /// <summary>
        /// List of VirtualHubs in the VirtualWAN.
        /// </summary>
        public InputList<Inputs.SubResourceResponseArgs> VirtualHubs
        {
            get => _virtualHubs ?? (_virtualHubs = new InputList<Inputs.SubResourceResponseArgs>());
            set => _virtualHubs = value;
        }

        [Input("vpnSites", required: true)]
        private InputList<Inputs.SubResourceResponseArgs>? _vpnSites;

        /// <summary>
        /// List of VpnSites in the VirtualWAN.
        /// </summary>
        public InputList<Inputs.SubResourceResponseArgs> VpnSites
        {
            get => _vpnSites ?? (_vpnSites = new InputList<Inputs.SubResourceResponseArgs>());
            set => _vpnSites = value;
        }

        public VirtualWanPropertiesResponseArgs()
        {
        }
    }
}
